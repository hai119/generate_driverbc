; ModuleID = '../bcout/drivers/fpga/dfl.llvm.bc'
source_filename = "drivers/fpga/dfl.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_dfl_fpga_init6:\09\09\09"
module asm ".long\09dfl_fpga_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.63, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.63 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.61, %struct.list_head, %struct.list_head, %union.anon.62 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.59 }
%union.anon.59 = type { %struct.anon.60 }
%struct.anon.60 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.51, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.51 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.52, i32 }
%union.anon.52 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.61 = type { %struct.list_head }
%union.anon.62 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.53, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.54, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.55, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.58, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.53 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.54 = type { %struct.callback_head }
%union.anon.55 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.58 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.56 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.56 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type opaque
%struct.acpi_device_id = type opaque
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.lock_class_key = type {}
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.ida = type { %struct.xarray }
%struct.kmem_cache = type opaque
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.dfl_dev_info = type { i8*, i16, %struct.idr, i32 }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.dfl_chardev_info = type { i8*, i32 }
%struct.dfl_fpga_port_ops = type { i8*, %struct.module*, %struct.list_head, i32 (%struct.platform_device*)*, i32 (%struct.platform_device*, i1)* }
%struct.platform_device = type { i8*, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, %struct.resource*, %struct.platform_device_id*, i8*, %struct.mfd_cell*, %struct.pdev_archdata }
%struct.platform_device_id = type opaque
%struct.mfd_cell = type opaque
%struct.pdev_archdata = type {}
%struct.dfl_feature_platform_data = type { %struct.list_head, %struct.mutex, %struct.cdev, %struct.platform_device*, %struct.dfl_fpga_cdev*, i32, i32, i8, i32, i8*, i32, [0 x %struct.dfl_feature] }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.dfl_fpga_cdev = type { %struct.device*, %struct.fpga_region*, %struct.device*, %struct.mutex, %struct.list_head, i32 }
%struct.fpga_region = type { %struct.device, %struct.mutex, %struct.list_head, %struct.fpga_manager*, %struct.fpga_image_info*, %struct.fpga_compat_id*, i8*, i32 (%struct.fpga_region*)* }
%struct.fpga_manager = type { i8*, %struct.device, %struct.mutex, i32, %struct.fpga_compat_id*, %struct.fpga_manager_ops*, i8* }
%struct.fpga_manager_ops = type { i64, i32 (%struct.fpga_manager*)*, i64 (%struct.fpga_manager*)*, i32 (%struct.fpga_manager*, %struct.fpga_image_info*, i8*, i64)*, i32 (%struct.fpga_manager*, i8*, i64)*, i32 (%struct.fpga_manager*, %struct.sg_table*)*, i32 (%struct.fpga_manager*, %struct.fpga_image_info*)*, void (%struct.fpga_manager*)*, %struct.attribute_group** }
%struct.sg_table = type opaque
%struct.fpga_image_info = type { i32, i32, i32, i32, i8*, %struct.sg_table*, i8*, i64, i32, %struct.device*, %struct.device_node* }
%struct.fpga_compat_id = type { i64, i64 }
%struct.dfl_feature = type { %struct.platform_device*, i16, i32, i8*, %struct.dfl_feature_irq_ctx*, i32, %struct.dfl_feature_ops*, %struct.dfl_device*, i8* }
%struct.dfl_feature_irq_ctx = type { i32, %struct.eventfd_ctx*, i8* }
%struct.eventfd_ctx = type opaque
%struct.dfl_feature_ops = type { i32 (%struct.platform_device*, %struct.dfl_feature*)*, void (%struct.platform_device*, %struct.dfl_feature*)*, i64 (%struct.platform_device*, %struct.dfl_feature*, i32, i64)* }
%struct.dfl_device = type { %struct.device, i32, i8, i16, %struct.resource, i32*, i32, %struct.dfl_fpga_cdev*, %struct.dfl_device_id* }
%struct.dfl_device_id = type { i8, i16, i64 }
%struct.dfl_driver = type { %struct.device_driver, %struct.dfl_device_id*, i32 (%struct.dfl_device*)*, void (%struct.dfl_device*)* }
%struct.dfl_feature_driver = type { %struct.dfl_feature_id*, %struct.dfl_feature_ops* }
%struct.dfl_feature_id = type { i16 }
%struct.dfl_fpga_enum_info = type { %struct.device*, %struct.list_head, i32, i32* }
%struct.dfl_fpga_enum_dfl = type { i64, i64, %struct.list_head }
%struct.build_feature_devs_info = type { %struct.device*, %struct.dfl_fpga_cdev*, i32, i32*, %struct.platform_device*, i8*, i64, i64, %struct.list_head, i32 }
%struct.dfl_feature_info = type { i16, %struct.resource, i8*, %struct.list_head, i32, i32 }
%struct.dfl_fpga_irq_set = type { i32, i32, [0 x i32] }

@dfl_port_ops_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @dfl_port_ops_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @dfl_port_ops_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !0
@dfl_port_ops_list = internal global %struct.list_head { %struct.list_head* @dfl_port_ops_list, %struct.list_head* @dfl_port_ops_list }, align 8, !dbg !3879
@dfl_bus_type = internal global %struct.bus_type { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8* null, %struct.device* null, %struct.attribute_group** null, %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @dfl_dev_groups, i32 0, i32 0), %struct.attribute_group** null, i32 (%struct.device*, %struct.device_driver*)* @dfl_bus_match, i32 (%struct.device*, %struct.kobj_uevent_env*)* @dfl_bus_uevent, i32 (%struct.device*)* @dfl_bus_probe, void (%struct.device*)* null, i32 (%struct.device*)* @dfl_bus_remove, void (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, %struct.dev_pm_ops* null, %struct.iommu_ops* null, %struct.subsys_private* null, %struct.lock_class_key zeroinitializer, i8 0 }, align 8, !dbg !3881
@dfl_fpga_feature_devs_enumerate.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !3840
@.str = private unnamed_addr constant [12 x i8] c"&cdev->lock\00", align 1
@__UNIQUE_ID___addressable_dfl_fpga_init345 = internal global i8* bitcast (i32 ()* @dfl_fpga_init to i8*), section ".discard.addressable", align 8, !dbg !3852
@__exitcall_dfl_fpga_exit = internal global void ()* @dfl_fpga_exit, section ".exitcall.exit", align 8, !dbg !3854
@__UNIQUE_ID_description346 = internal constant [55 x i8] c"dfl.description=FPGA Device Feature List (DFL) Support\00", section ".modinfo", align 1, !dbg !3859
@__UNIQUE_ID_author347 = internal constant [29 x i8] c"dfl.author=Intel Corporation\00", section ".modinfo", align 1, !dbg !3864
@__UNIQUE_ID_file348 = internal constant [26 x i8] c"dfl.file=drivers/fpga/dfl\00", section ".modinfo", align 1, !dbg !3869
@__UNIQUE_ID_license349 = internal constant [19 x i8] c"dfl.license=GPL v2\00", section ".modinfo", align 1, !dbg !3874
@.str.1 = private unnamed_addr constant [4 x i8] c"dfl\00", align 1
@dfl_dev_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @dfl_dev_group, %struct.attribute_group* null], align 16, !dbg !3883
@dfl_dev_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([3 x %struct.attribute*], [3 x %struct.attribute*]* @dfl_dev_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !3886
@dfl_dev_attrs = internal global [3 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_type, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_feature_id, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !3888
@dev_attr_type = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @type_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3891
@dev_attr_feature_id = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @feature_id_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3905
@.str.2 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"0x%x\0A\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"feature_id\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"MODALIAS=dfl:t%01Xf%03X\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"ioremap failed for feature 0x%x!\0A\00", align 1
@dfl_device_ida = internal global %struct.ida { %struct.xarray { %struct.spinlock undef, i32 8388613, i8* null } }, align 8, !dbg !3907
@.str.7 = private unnamed_addr constant [18 x i8] c"unable to get id\0A\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"dfl_dev.%d\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"%s failed to claim resource: %pR\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.10 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.11 = private unnamed_addr constant [47 x i8] c"The region is too small to contain a feature.\0A\00", align 1
@iomem_resource = external dso_local global %struct.resource, align 8
@.str.12 = private unnamed_addr constant [41 x i8] c"request region fail, start:%pa, len:%pa\0A\00", align 1
@.str.13 = private unnamed_addr constant [41 x i8] c"ioremap region fail, start:%pa, len:%pa\0A\00", align 1
@.str.14 = private unnamed_addr constant [35 x i8] c"Feature Type %x is not supported.\0A\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"this AFU does not belong to any FIU.\0A\00", align 1
@.str.16 = private unnamed_addr constant [47 x i8] c"AFU belonging to FIU %s is not supported yet.\0A\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"drivers/fpga/dfl.c\00", align 1
@.str.18 = private unnamed_addr constant [42 x i8] c"Invalid interrupt number in feature 0x%x\0A\00", align 1
@.str.19 = private unnamed_addr constant [42 x i8] c"Invalid irq table entry for feature 0x%x\0A\00", align 1
@.str.20 = private unnamed_addr constant [54 x i8] c"the private feature 0x%x does not belong to any AFU.\0A\00", align 1
@dfl_devs = internal global [2 x %struct.dfl_dev_info] [%struct.dfl_dev_info { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i16 0, %struct.idr zeroinitializer, i32 0 }, %struct.dfl_dev_info { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i16 1, %struct.idr zeroinitializer, i32 1 }], align 16, !dbg !3912
@.str.21 = private unnamed_addr constant [8 x i8] c"dfl-fme\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"dfl-port\00", align 1
@dfl_id_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @dfl_id_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @dfl_id_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !3921
@dfl_chrdevs = internal global [2 x %struct.dfl_chardev_info] [%struct.dfl_chardev_info { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i32 0 }, %struct.dfl_chardev_info { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i32 0 }], align 16, !dbg !3923
@build_info_commit_dev.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !3930
@.str.23 = private unnamed_addr constant [13 x i8] c"&pdata->lock\00", align 1
@dfl_pdata_keys = internal global [2 x %struct.lock_class_key] zeroinitializer, align 1, !dbg !3948
@dfl_pdata_key_strings = internal global [2 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i32 0, i32 0)], align 16, !dbg !3951
@.str.24 = private unnamed_addr constant [14 x i8] c"dfl-fme-pdata\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"dfl-port-pdata\00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c"drivers/fpga/dfl.h\00", align 1
@.str.27 = private unnamed_addr constant [20 x i8] c"fpga-irq[%u](%s-%x)\00", align 1
@.str.28 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.29 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@llvm.used = appending global [7 x i8*] [i8* bitcast (void ()* @dfl_fpga_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_dfl_fpga_init345 to i8*), i8* bitcast (void ()** @__exitcall_dfl_fpga_exit to i8*), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__UNIQUE_ID_description346, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_author347, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_file348, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__UNIQUE_ID_license349, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dfl_fpga_port_ops* @dfl_fpga_port_ops_get(%struct.platform_device* %pdev) #0 !dbg !3960 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  %ops = alloca %struct.dfl_fpga_port_ops*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_fpga_port_ops*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp13 = alloca %struct.dfl_fpga_port_ops*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !3963, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_port_ops** %ops, metadata !3965, metadata !DIExpression()), !dbg !3966
  store %struct.dfl_fpga_port_ops* null, %struct.dfl_fpga_port_ops** %ops, align 8, !dbg !3966
  call void @mutex_lock(%struct.mutex* @dfl_port_ops_mutex) #11, !dbg !3967
  %call = call i32 @list_empty(%struct.list_head* @dfl_port_ops_list) #11, !dbg !3968
  %tobool = icmp ne i32 %call, 0, !dbg !3968
  br i1 %tobool, label %if.then, label %if.end, !dbg !3970

if.then:                                          ; preds = %entry
  br label %done, !dbg !3971

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !3972, metadata !DIExpression()), !dbg !3975
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @dfl_port_ops_list, i32 0, i32 0), align 8, !dbg !3975
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !3975
  store i8* %1, i8** %__mptr, align 8, !dbg !3975
  br label %do.body, !dbg !3975

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !3976

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !3975
  %add.ptr = getelementptr i8, i8* %2, i64 -16, !dbg !3975
  %3 = bitcast i8* %add.ptr to %struct.dfl_fpga_port_ops*, !dbg !3975
  store %struct.dfl_fpga_port_ops* %3, %struct.dfl_fpga_port_ops** %tmp, align 8, !dbg !3976
  %4 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %tmp, align 8, !dbg !3975
  store %struct.dfl_fpga_port_ops* %4, %struct.dfl_fpga_port_ops** %ops, align 8, !dbg !3978
  br label %for.cond, !dbg !3978

for.cond:                                         ; preds = %do.end12, %do.end
  %5 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %ops, align 8, !dbg !3979
  %node = getelementptr inbounds %struct.dfl_fpga_port_ops, %struct.dfl_fpga_port_ops* %5, i32 0, i32 2, !dbg !3979
  %cmp = icmp eq %struct.list_head* %node, @dfl_port_ops_list, !dbg !3979
  %lnot = xor i1 %cmp, true, !dbg !3979
  br i1 %lnot, label %for.body, label %for.end, !dbg !3978

for.body:                                         ; preds = %for.cond
  %6 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !3981
  %name = getelementptr inbounds %struct.platform_device, %struct.platform_device* %6, i32 0, i32 0, !dbg !3984
  %7 = load i8*, i8** %name, align 8, !dbg !3984
  %8 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %ops, align 8, !dbg !3985
  %name1 = getelementptr inbounds %struct.dfl_fpga_port_ops, %struct.dfl_fpga_port_ops* %8, i32 0, i32 0, !dbg !3986
  %9 = load i8*, i8** %name1, align 8, !dbg !3986
  %call2 = call i32 @strcmp(i8* %7, i8* %9) #11, !dbg !3987
  %tobool3 = icmp ne i32 %call2, 0, !dbg !3987
  br i1 %tobool3, label %if.end8, label %if.then4, !dbg !3988

if.then4:                                         ; preds = %for.body
  %10 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %ops, align 8, !dbg !3989
  %owner = getelementptr inbounds %struct.dfl_fpga_port_ops, %struct.dfl_fpga_port_ops* %10, i32 0, i32 1, !dbg !3992
  %11 = load %struct.module*, %struct.module** %owner, align 8, !dbg !3992
  %call5 = call zeroext i1 @try_module_get(%struct.module* %11) #11, !dbg !3993
  br i1 %call5, label %if.end7, label %if.then6, !dbg !3994

if.then6:                                         ; preds = %if.then4
  store %struct.dfl_fpga_port_ops* null, %struct.dfl_fpga_port_ops** %ops, align 8, !dbg !3995
  br label %if.end7, !dbg !3996

if.end7:                                          ; preds = %if.then6, %if.then4
  br label %done, !dbg !3997

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !3998

for.inc:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !3999, metadata !DIExpression()), !dbg !4001
  %12 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %ops, align 8, !dbg !4001
  %node10 = getelementptr inbounds %struct.dfl_fpga_port_ops, %struct.dfl_fpga_port_ops* %12, i32 0, i32 2, !dbg !4001
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node10, i32 0, i32 0, !dbg !4001
  %13 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4001
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !4001
  store i8* %14, i8** %__mptr9, align 8, !dbg !4001
  br label %do.body11, !dbg !4001

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !4002

do.end12:                                         ; preds = %do.body11
  %15 = load i8*, i8** %__mptr9, align 8, !dbg !4001
  %add.ptr14 = getelementptr i8, i8* %15, i64 -16, !dbg !4001
  %16 = bitcast i8* %add.ptr14 to %struct.dfl_fpga_port_ops*, !dbg !4001
  store %struct.dfl_fpga_port_ops* %16, %struct.dfl_fpga_port_ops** %tmp13, align 8, !dbg !4002
  %17 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %tmp13, align 8, !dbg !4001
  store %struct.dfl_fpga_port_ops* %17, %struct.dfl_fpga_port_ops** %ops, align 8, !dbg !3979
  br label %for.cond, !dbg !3979, !llvm.loop !4004

for.end:                                          ; preds = %for.cond
  store %struct.dfl_fpga_port_ops* null, %struct.dfl_fpga_port_ops** %ops, align 8, !dbg !4006
  br label %done, !dbg !4007

done:                                             ; preds = %for.end, %if.end7, %if.then
  call void @llvm.dbg.label(metadata !4008), !dbg !4009
  call void @mutex_unlock(%struct.mutex* @dfl_port_ops_mutex) #11, !dbg !4010
  %18 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %ops, align 8, !dbg !4011
  ret %struct.dfl_fpga_port_ops* %18, !dbg !4012
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !4013 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !4019, metadata !DIExpression()), !dbg !4020
  br label %do.body, !dbg !4021

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4023

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4021
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !4021
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4021
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !4023
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !4021
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4025
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !4026
  %conv = zext i1 %cmp to i32, !dbg !4026
  ret i32 %conv, !dbg !4027
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #0 !dbg !4028 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !4032, metadata !DIExpression()), !dbg !4033
  ret i1 true, !dbg !4034
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dfl_fpga_port_ops_put(%struct.dfl_fpga_port_ops* %ops) #0 !dbg !4035 {
entry:
  %ops.addr = alloca %struct.dfl_fpga_port_ops*, align 8
  store %struct.dfl_fpga_port_ops* %ops, %struct.dfl_fpga_port_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_port_ops** %ops.addr, metadata !4038, metadata !DIExpression()), !dbg !4039
  %0 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %ops.addr, align 8, !dbg !4040
  %tobool = icmp ne %struct.dfl_fpga_port_ops* %0, null, !dbg !4040
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4042

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %ops.addr, align 8, !dbg !4043
  %owner = getelementptr inbounds %struct.dfl_fpga_port_ops, %struct.dfl_fpga_port_ops* %1, i32 0, i32 1, !dbg !4044
  %2 = load %struct.module*, %struct.module** %owner, align 8, !dbg !4044
  %tobool1 = icmp ne %struct.module* %2, null, !dbg !4043
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4045

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %ops.addr, align 8, !dbg !4046
  %owner2 = getelementptr inbounds %struct.dfl_fpga_port_ops, %struct.dfl_fpga_port_ops* %3, i32 0, i32 1, !dbg !4047
  %4 = load %struct.module*, %struct.module** %owner2, align 8, !dbg !4047
  call void @module_put(%struct.module* %4) #11, !dbg !4048
  br label %if.end, !dbg !4048

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !4049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #0 !dbg !4050 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !4053, metadata !DIExpression()), !dbg !4054
  ret void, !dbg !4055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dfl_fpga_port_ops_add(%struct.dfl_fpga_port_ops* %ops) #0 !dbg !4056 {
entry:
  %ops.addr = alloca %struct.dfl_fpga_port_ops*, align 8
  store %struct.dfl_fpga_port_ops* %ops, %struct.dfl_fpga_port_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_port_ops** %ops.addr, metadata !4057, metadata !DIExpression()), !dbg !4058
  call void @mutex_lock(%struct.mutex* @dfl_port_ops_mutex) #11, !dbg !4059
  %0 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %ops.addr, align 8, !dbg !4060
  %node = getelementptr inbounds %struct.dfl_fpga_port_ops, %struct.dfl_fpga_port_ops* %0, i32 0, i32 2, !dbg !4061
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* @dfl_port_ops_list) #11, !dbg !4062
  call void @mutex_unlock(%struct.mutex* @dfl_port_ops_mutex) #11, !dbg !4063
  ret void, !dbg !4064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !4065 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !4068, metadata !DIExpression()), !dbg !4069
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !4070, metadata !DIExpression()), !dbg !4071
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !4072
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4073
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !4074
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !4074
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4075
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !4076
  ret void, !dbg !4077
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dfl_fpga_port_ops_del(%struct.dfl_fpga_port_ops* %ops) #0 !dbg !4078 {
entry:
  %ops.addr = alloca %struct.dfl_fpga_port_ops*, align 8
  store %struct.dfl_fpga_port_ops* %ops, %struct.dfl_fpga_port_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_port_ops** %ops.addr, metadata !4079, metadata !DIExpression()), !dbg !4080
  call void @mutex_lock(%struct.mutex* @dfl_port_ops_mutex) #11, !dbg !4081
  %0 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %ops.addr, align 8, !dbg !4082
  %node = getelementptr inbounds %struct.dfl_fpga_port_ops, %struct.dfl_fpga_port_ops* %0, i32 0, i32 2, !dbg !4083
  call void @list_del(%struct.list_head* %node) #11, !dbg !4084
  call void @mutex_unlock(%struct.mutex* @dfl_port_ops_mutex) #11, !dbg !4085
  ret void, !dbg !4086
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !4087 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !4090, metadata !DIExpression()), !dbg !4091
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !4092
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !4093
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !4094
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !4095
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !4096
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !4097
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !4098
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !4099
  ret void, !dbg !4100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dfl_fpga_check_port_id(%struct.platform_device* %pdev, i8* %pport_id) #0 !dbg !4101 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %pport_id.addr = alloca i8*, align 8
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  %port_ops = alloca %struct.dfl_fpga_port_ops*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !4104, metadata !DIExpression()), !dbg !4105
  store i8* %pport_id, i8** %pport_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pport_id.addr, metadata !4106, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !4108, metadata !DIExpression()), !dbg !4109
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4110
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !4111
  %call = call i8* @dev_get_platdata(%struct.device* %dev) #11, !dbg !4112
  %1 = bitcast i8* %call to %struct.dfl_feature_platform_data*, !dbg !4112
  store %struct.dfl_feature_platform_data* %1, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4109
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_port_ops** %port_ops, metadata !4113, metadata !DIExpression()), !dbg !4114
  %2 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4115
  %id = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %2, i32 0, i32 5, !dbg !4117
  %3 = load i32, i32* %id, align 8, !dbg !4117
  %cmp = icmp ne i32 %3, -1, !dbg !4118
  br i1 %cmp, label %if.then, label %if.end, !dbg !4119

if.then:                                          ; preds = %entry
  %4 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4120
  %id1 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %4, i32 0, i32 5, !dbg !4121
  %5 = load i32, i32* %id1, align 8, !dbg !4121
  %6 = load i8*, i8** %pport_id.addr, align 8, !dbg !4122
  %7 = bitcast i8* %6 to i32*, !dbg !4123
  %8 = load i32, i32* %7, align 4, !dbg !4124
  %cmp2 = icmp eq i32 %5, %8, !dbg !4125
  %conv = zext i1 %cmp2 to i32, !dbg !4125
  store i32 %conv, i32* %retval, align 4, !dbg !4126
  br label %return, !dbg !4126

if.end:                                           ; preds = %entry
  %9 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4127
  %call3 = call %struct.dfl_fpga_port_ops* @dfl_fpga_port_ops_get(%struct.platform_device* %9) #11, !dbg !4128
  store %struct.dfl_fpga_port_ops* %call3, %struct.dfl_fpga_port_ops** %port_ops, align 8, !dbg !4129
  %10 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %port_ops, align 8, !dbg !4130
  %tobool = icmp ne %struct.dfl_fpga_port_ops* %10, null, !dbg !4130
  br i1 %tobool, label %lor.lhs.false, label %if.then5, !dbg !4132

lor.lhs.false:                                    ; preds = %if.end
  %11 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %port_ops, align 8, !dbg !4133
  %get_id = getelementptr inbounds %struct.dfl_fpga_port_ops, %struct.dfl_fpga_port_ops* %11, i32 0, i32 3, !dbg !4134
  %12 = load i32 (%struct.platform_device*)*, i32 (%struct.platform_device*)** %get_id, align 8, !dbg !4134
  %tobool4 = icmp ne i32 (%struct.platform_device*)* %12, null, !dbg !4133
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !4135

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !4136
  br label %return, !dbg !4136

if.end6:                                          ; preds = %lor.lhs.false
  %13 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %port_ops, align 8, !dbg !4137
  %get_id7 = getelementptr inbounds %struct.dfl_fpga_port_ops, %struct.dfl_fpga_port_ops* %13, i32 0, i32 3, !dbg !4138
  %14 = load i32 (%struct.platform_device*)*, i32 (%struct.platform_device*)** %get_id7, align 8, !dbg !4138
  %15 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4139
  %call8 = call i32 %14(%struct.platform_device* %15) #11, !dbg !4137
  %16 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4140
  %id9 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %16, i32 0, i32 5, !dbg !4141
  store i32 %call8, i32* %id9, align 8, !dbg !4142
  %17 = load %struct.dfl_fpga_port_ops*, %struct.dfl_fpga_port_ops** %port_ops, align 8, !dbg !4143
  call void @dfl_fpga_port_ops_put(%struct.dfl_fpga_port_ops* %17) #11, !dbg !4144
  %18 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4145
  %id10 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %18, i32 0, i32 5, !dbg !4146
  %19 = load i32, i32* %id10, align 8, !dbg !4146
  %20 = load i8*, i8** %pport_id.addr, align 8, !dbg !4147
  %21 = bitcast i8* %20 to i32*, !dbg !4148
  %22 = load i32, i32* %21, align 4, !dbg !4149
  %cmp11 = icmp eq i32 %19, %22, !dbg !4150
  %conv12 = zext i1 %cmp11 to i32, !dbg !4150
  store i32 %conv12, i32* %retval, align 4, !dbg !4151
  br label %return, !dbg !4151

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !4152
  ret i32 %23, !dbg !4152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_platdata(%struct.device* %dev) #0 !dbg !4153 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4156, metadata !DIExpression()), !dbg !4157
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4158
  %platform_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 7, !dbg !4159
  %1 = load i8*, i8** %platform_data, align 8, !dbg !4159
  ret i8* %1, !dbg !4160
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__dfl_driver_register(%struct.dfl_driver* %dfl_drv, %struct.module* %owner) #0 !dbg !4161 {
entry:
  %retval = alloca i32, align 4
  %dfl_drv.addr = alloca %struct.dfl_driver*, align 8
  %owner.addr = alloca %struct.module*, align 8
  store %struct.dfl_driver* %dfl_drv, %struct.dfl_driver** %dfl_drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_driver** %dfl_drv.addr, metadata !4164, metadata !DIExpression()), !dbg !4165
  store %struct.module* %owner, %struct.module** %owner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %owner.addr, metadata !4166, metadata !DIExpression()), !dbg !4167
  %0 = load %struct.dfl_driver*, %struct.dfl_driver** %dfl_drv.addr, align 8, !dbg !4168
  %tobool = icmp ne %struct.dfl_driver* %0, null, !dbg !4168
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4170

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.dfl_driver*, %struct.dfl_driver** %dfl_drv.addr, align 8, !dbg !4171
  %probe = getelementptr inbounds %struct.dfl_driver, %struct.dfl_driver* %1, i32 0, i32 2, !dbg !4172
  %2 = load i32 (%struct.dfl_device*)*, i32 (%struct.dfl_device*)** %probe, align 8, !dbg !4172
  %tobool1 = icmp ne i32 (%struct.dfl_device*)* %2, null, !dbg !4171
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !4173

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load %struct.dfl_driver*, %struct.dfl_driver** %dfl_drv.addr, align 8, !dbg !4174
  %id_table = getelementptr inbounds %struct.dfl_driver, %struct.dfl_driver* %3, i32 0, i32 1, !dbg !4175
  %4 = load %struct.dfl_device_id*, %struct.dfl_device_id** %id_table, align 8, !dbg !4175
  %tobool3 = icmp ne %struct.dfl_device_id* %4, null, !dbg !4174
  br i1 %tobool3, label %if.end, label %if.then, !dbg !4176

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !4177
  br label %return, !dbg !4177

if.end:                                           ; preds = %lor.lhs.false2
  %5 = load %struct.module*, %struct.module** %owner.addr, align 8, !dbg !4178
  %6 = load %struct.dfl_driver*, %struct.dfl_driver** %dfl_drv.addr, align 8, !dbg !4179
  %drv = getelementptr inbounds %struct.dfl_driver, %struct.dfl_driver* %6, i32 0, i32 0, !dbg !4180
  %owner4 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %drv, i32 0, i32 2, !dbg !4181
  store %struct.module* %5, %struct.module** %owner4, align 8, !dbg !4182
  %7 = load %struct.dfl_driver*, %struct.dfl_driver** %dfl_drv.addr, align 8, !dbg !4183
  %drv5 = getelementptr inbounds %struct.dfl_driver, %struct.dfl_driver* %7, i32 0, i32 0, !dbg !4184
  %bus = getelementptr inbounds %struct.device_driver, %struct.device_driver* %drv5, i32 0, i32 1, !dbg !4185
  store %struct.bus_type* @dfl_bus_type, %struct.bus_type** %bus, align 8, !dbg !4186
  %8 = load %struct.dfl_driver*, %struct.dfl_driver** %dfl_drv.addr, align 8, !dbg !4187
  %drv6 = getelementptr inbounds %struct.dfl_driver, %struct.dfl_driver* %8, i32 0, i32 0, !dbg !4188
  %call = call i32 @driver_register(%struct.device_driver* %drv6) #11, !dbg !4189
  store i32 %call, i32* %retval, align 4, !dbg !4190
  br label %return, !dbg !4190

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !4191
  ret i32 %9, !dbg !4191
}

; Function Attrs: noredzone
declare dso_local i32 @driver_register(%struct.device_driver*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dfl_driver_unregister(%struct.dfl_driver* %dfl_drv) #0 !dbg !4192 {
entry:
  %dfl_drv.addr = alloca %struct.dfl_driver*, align 8
  store %struct.dfl_driver* %dfl_drv, %struct.dfl_driver** %dfl_drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_driver** %dfl_drv.addr, metadata !4195, metadata !DIExpression()), !dbg !4196
  %0 = load %struct.dfl_driver*, %struct.dfl_driver** %dfl_drv.addr, align 8, !dbg !4197
  %drv = getelementptr inbounds %struct.dfl_driver, %struct.dfl_driver* %0, i32 0, i32 0, !dbg !4198
  call void @driver_unregister(%struct.device_driver* %drv) #11, !dbg !4199
  ret void, !dbg !4200
}

; Function Attrs: noredzone
declare dso_local void @driver_unregister(%struct.device_driver*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dfl_fpga_dev_feature_uinit(%struct.platform_device* %pdev) #0 !dbg !4201 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  %feature = alloca %struct.dfl_feature*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !4204, metadata !DIExpression()), !dbg !4205
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !4206, metadata !DIExpression()), !dbg !4207
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4208
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !4209
  %call = call i8* @dev_get_platdata(%struct.device* %dev) #11, !dbg !4210
  %1 = bitcast i8* %call to %struct.dfl_feature_platform_data*, !dbg !4210
  store %struct.dfl_feature_platform_data* %1, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4207
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature, metadata !4211, metadata !DIExpression()), !dbg !4212
  %2 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4213
  call void @dfl_devs_remove(%struct.dfl_feature_platform_data* %2) #11, !dbg !4214
  %3 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4215
  %features = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %3, i32 0, i32 11, !dbg !4215
  %arraydecay = getelementptr inbounds [0 x %struct.dfl_feature], [0 x %struct.dfl_feature]* %features, i64 0, i64 0, !dbg !4215
  store %struct.dfl_feature* %arraydecay, %struct.dfl_feature** %feature, align 8, !dbg !4215
  br label %for.cond, !dbg !4215

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4217
  %5 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4217
  %features1 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %5, i32 0, i32 11, !dbg !4217
  %arraydecay2 = getelementptr inbounds [0 x %struct.dfl_feature], [0 x %struct.dfl_feature]* %features1, i64 0, i64 0, !dbg !4217
  %6 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4217
  %num = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %6, i32 0, i32 10, !dbg !4217
  %7 = load i32, i32* %num, align 8, !dbg !4217
  %idx.ext = sext i32 %7 to i64, !dbg !4217
  %add.ptr = getelementptr %struct.dfl_feature, %struct.dfl_feature* %arraydecay2, i64 %idx.ext, !dbg !4217
  %cmp = icmp ult %struct.dfl_feature* %4, %add.ptr, !dbg !4217
  br i1 %cmp, label %for.body, label %for.end, !dbg !4215

for.body:                                         ; preds = %for.cond
  %8 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4219
  %ops = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %8, i32 0, i32 6, !dbg !4222
  %9 = load %struct.dfl_feature_ops*, %struct.dfl_feature_ops** %ops, align 8, !dbg !4222
  %tobool = icmp ne %struct.dfl_feature_ops* %9, null, !dbg !4219
  br i1 %tobool, label %if.then, label %if.end9, !dbg !4223

if.then:                                          ; preds = %for.body
  %10 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4224
  %ops3 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %10, i32 0, i32 6, !dbg !4227
  %11 = load %struct.dfl_feature_ops*, %struct.dfl_feature_ops** %ops3, align 8, !dbg !4227
  %uinit = getelementptr inbounds %struct.dfl_feature_ops, %struct.dfl_feature_ops* %11, i32 0, i32 1, !dbg !4228
  %12 = load void (%struct.platform_device*, %struct.dfl_feature*)*, void (%struct.platform_device*, %struct.dfl_feature*)** %uinit, align 8, !dbg !4228
  %tobool4 = icmp ne void (%struct.platform_device*, %struct.dfl_feature*)* %12, null, !dbg !4224
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !4229

if.then5:                                         ; preds = %if.then
  %13 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4230
  %ops6 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %13, i32 0, i32 6, !dbg !4231
  %14 = load %struct.dfl_feature_ops*, %struct.dfl_feature_ops** %ops6, align 8, !dbg !4231
  %uinit7 = getelementptr inbounds %struct.dfl_feature_ops, %struct.dfl_feature_ops* %14, i32 0, i32 1, !dbg !4232
  %15 = load void (%struct.platform_device*, %struct.dfl_feature*)*, void (%struct.platform_device*, %struct.dfl_feature*)** %uinit7, align 8, !dbg !4232
  %16 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4233
  %17 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4234
  call void %15(%struct.platform_device* %16, %struct.dfl_feature* %17) #11, !dbg !4230
  br label %if.end, !dbg !4230

if.end:                                           ; preds = %if.then5, %if.then
  %18 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4235
  %ops8 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %18, i32 0, i32 6, !dbg !4236
  store %struct.dfl_feature_ops* null, %struct.dfl_feature_ops** %ops8, align 8, !dbg !4237
  br label %if.end9, !dbg !4238

if.end9:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !4239

for.inc:                                          ; preds = %if.end9
  %19 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4217
  %incdec.ptr = getelementptr %struct.dfl_feature, %struct.dfl_feature* %19, i32 1, !dbg !4217
  store %struct.dfl_feature* %incdec.ptr, %struct.dfl_feature** %feature, align 8, !dbg !4217
  br label %for.cond, !dbg !4217, !llvm.loop !4240

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4242
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dfl_devs_remove(%struct.dfl_feature_platform_data* %pdata) #0 !dbg !4243 {
entry:
  %pdata.addr = alloca %struct.dfl_feature_platform_data*, align 8
  %feature = alloca %struct.dfl_feature*, align 8
  store %struct.dfl_feature_platform_data* %pdata, %struct.dfl_feature_platform_data** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata.addr, metadata !4246, metadata !DIExpression()), !dbg !4247
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature, metadata !4248, metadata !DIExpression()), !dbg !4249
  %0 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !4250
  %features = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %0, i32 0, i32 11, !dbg !4250
  %arraydecay = getelementptr inbounds [0 x %struct.dfl_feature], [0 x %struct.dfl_feature]* %features, i64 0, i64 0, !dbg !4250
  store %struct.dfl_feature* %arraydecay, %struct.dfl_feature** %feature, align 8, !dbg !4250
  br label %for.cond, !dbg !4250

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4252
  %2 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !4252
  %features1 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %2, i32 0, i32 11, !dbg !4252
  %arraydecay2 = getelementptr inbounds [0 x %struct.dfl_feature], [0 x %struct.dfl_feature]* %features1, i64 0, i64 0, !dbg !4252
  %3 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !4252
  %num = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %3, i32 0, i32 10, !dbg !4252
  %4 = load i32, i32* %num, align 8, !dbg !4252
  %idx.ext = sext i32 %4 to i64, !dbg !4252
  %add.ptr = getelementptr %struct.dfl_feature, %struct.dfl_feature* %arraydecay2, i64 %idx.ext, !dbg !4252
  %cmp = icmp ult %struct.dfl_feature* %1, %add.ptr, !dbg !4252
  br i1 %cmp, label %for.body, label %for.end, !dbg !4250

for.body:                                         ; preds = %for.cond
  %5 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4254
  %ddev = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %5, i32 0, i32 7, !dbg !4257
  %6 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !4257
  %tobool = icmp ne %struct.dfl_device* %6, null, !dbg !4254
  br i1 %tobool, label %if.then, label %if.end, !dbg !4258

if.then:                                          ; preds = %for.body
  %7 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4259
  %ddev3 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %7, i32 0, i32 7, !dbg !4261
  %8 = load %struct.dfl_device*, %struct.dfl_device** %ddev3, align 8, !dbg !4261
  %dev = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %8, i32 0, i32 0, !dbg !4262
  call void @device_unregister(%struct.device* %dev) #11, !dbg !4263
  %9 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4264
  %ddev4 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %9, i32 0, i32 7, !dbg !4265
  store %struct.dfl_device* null, %struct.dfl_device** %ddev4, align 8, !dbg !4266
  br label %if.end, !dbg !4267

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4268

for.inc:                                          ; preds = %if.end
  %10 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4252
  %incdec.ptr = getelementptr %struct.dfl_feature, %struct.dfl_feature* %10, i32 1, !dbg !4252
  store %struct.dfl_feature* %incdec.ptr, %struct.dfl_feature** %feature, align 8, !dbg !4252
  br label %for.cond, !dbg !4252, !llvm.loop !4269

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4271
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dfl_fpga_dev_feature_init(%struct.platform_device* %pdev, %struct.dfl_feature_driver* %feature_drvs) #0 !dbg !4272 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %feature_drvs.addr = alloca %struct.dfl_feature_driver*, align 8
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  %drv = alloca %struct.dfl_feature_driver*, align 8
  %feature = alloca %struct.dfl_feature*, align 8
  %ret = alloca i32, align 4
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !4285, metadata !DIExpression()), !dbg !4286
  store %struct.dfl_feature_driver* %feature_drvs, %struct.dfl_feature_driver** %feature_drvs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_driver** %feature_drvs.addr, metadata !4287, metadata !DIExpression()), !dbg !4288
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !4289, metadata !DIExpression()), !dbg !4290
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4291
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !4292
  %call = call i8* @dev_get_platdata(%struct.device* %dev) #11, !dbg !4293
  %1 = bitcast i8* %call to %struct.dfl_feature_platform_data*, !dbg !4293
  store %struct.dfl_feature_platform_data* %1, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4290
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_driver** %drv, metadata !4294, metadata !DIExpression()), !dbg !4295
  %2 = load %struct.dfl_feature_driver*, %struct.dfl_feature_driver** %feature_drvs.addr, align 8, !dbg !4296
  store %struct.dfl_feature_driver* %2, %struct.dfl_feature_driver** %drv, align 8, !dbg !4295
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature, metadata !4297, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4299, metadata !DIExpression()), !dbg !4300
  br label %while.cond, !dbg !4301

while.cond:                                       ; preds = %for.end, %entry
  %3 = load %struct.dfl_feature_driver*, %struct.dfl_feature_driver** %drv, align 8, !dbg !4302
  %ops = getelementptr inbounds %struct.dfl_feature_driver, %struct.dfl_feature_driver* %3, i32 0, i32 1, !dbg !4303
  %4 = load %struct.dfl_feature_ops*, %struct.dfl_feature_ops** %ops, align 8, !dbg !4303
  %tobool = icmp ne %struct.dfl_feature_ops* %4, null, !dbg !4301
  br i1 %tobool, label %while.body, label %while.end, !dbg !4301

while.body:                                       ; preds = %while.cond
  %5 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4304
  %features = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %5, i32 0, i32 11, !dbg !4304
  %arraydecay = getelementptr inbounds [0 x %struct.dfl_feature], [0 x %struct.dfl_feature]* %features, i64 0, i64 0, !dbg !4304
  store %struct.dfl_feature* %arraydecay, %struct.dfl_feature** %feature, align 8, !dbg !4304
  br label %for.cond, !dbg !4304

for.cond:                                         ; preds = %for.inc, %while.body
  %6 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4307
  %7 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4307
  %features1 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %7, i32 0, i32 11, !dbg !4307
  %arraydecay2 = getelementptr inbounds [0 x %struct.dfl_feature], [0 x %struct.dfl_feature]* %features1, i64 0, i64 0, !dbg !4307
  %8 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4307
  %num = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %8, i32 0, i32 10, !dbg !4307
  %9 = load i32, i32* %num, align 8, !dbg !4307
  %idx.ext = sext i32 %9 to i64, !dbg !4307
  %add.ptr = getelementptr %struct.dfl_feature, %struct.dfl_feature* %arraydecay2, i64 %idx.ext, !dbg !4307
  %cmp = icmp ult %struct.dfl_feature* %6, %add.ptr, !dbg !4307
  br i1 %cmp, label %for.body, label %for.end, !dbg !4304

for.body:                                         ; preds = %for.cond
  %10 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4309
  %11 = load %struct.dfl_feature_driver*, %struct.dfl_feature_driver** %drv, align 8, !dbg !4312
  %call3 = call zeroext i1 @dfl_feature_drv_match(%struct.dfl_feature* %10, %struct.dfl_feature_driver* %11) #11, !dbg !4313
  br i1 %call3, label %if.then, label %if.end7, !dbg !4314

if.then:                                          ; preds = %for.body
  %12 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4315
  %13 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4317
  %14 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4318
  %15 = load %struct.dfl_feature_driver*, %struct.dfl_feature_driver** %drv, align 8, !dbg !4319
  %call4 = call i32 @dfl_feature_instance_init(%struct.platform_device* %12, %struct.dfl_feature_platform_data* %13, %struct.dfl_feature* %14, %struct.dfl_feature_driver* %15) #11, !dbg !4320
  store i32 %call4, i32* %ret, align 4, !dbg !4321
  %16 = load i32, i32* %ret, align 4, !dbg !4322
  %tobool5 = icmp ne i32 %16, 0, !dbg !4322
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !4324

if.then6:                                         ; preds = %if.then
  br label %exit, !dbg !4325

if.end:                                           ; preds = %if.then
  br label %if.end7, !dbg !4326

if.end7:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !4327

for.inc:                                          ; preds = %if.end7
  %17 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4307
  %incdec.ptr = getelementptr %struct.dfl_feature, %struct.dfl_feature* %17, i32 1, !dbg !4307
  store %struct.dfl_feature* %incdec.ptr, %struct.dfl_feature** %feature, align 8, !dbg !4307
  br label %for.cond, !dbg !4307, !llvm.loop !4328

for.end:                                          ; preds = %for.cond
  %18 = load %struct.dfl_feature_driver*, %struct.dfl_feature_driver** %drv, align 8, !dbg !4330
  %incdec.ptr8 = getelementptr %struct.dfl_feature_driver, %struct.dfl_feature_driver* %18, i32 1, !dbg !4330
  store %struct.dfl_feature_driver* %incdec.ptr8, %struct.dfl_feature_driver** %drv, align 8, !dbg !4330
  br label %while.cond, !dbg !4301, !llvm.loop !4331

while.end:                                        ; preds = %while.cond
  %19 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4333
  %call9 = call i32 @dfl_devs_add(%struct.dfl_feature_platform_data* %19) #11, !dbg !4334
  store i32 %call9, i32* %ret, align 4, !dbg !4335
  %20 = load i32, i32* %ret, align 4, !dbg !4336
  %tobool10 = icmp ne i32 %20, 0, !dbg !4336
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !4338

if.then11:                                        ; preds = %while.end
  br label %exit, !dbg !4339

if.end12:                                         ; preds = %while.end
  store i32 0, i32* %retval, align 4, !dbg !4340
  br label %return, !dbg !4340

exit:                                             ; preds = %if.then11, %if.then6
  call void @llvm.dbg.label(metadata !4341), !dbg !4342
  %21 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4343
  call void @dfl_fpga_dev_feature_uinit(%struct.platform_device* %21) #11, !dbg !4344
  %22 = load i32, i32* %ret, align 4, !dbg !4345
  store i32 %22, i32* %retval, align 4, !dbg !4346
  br label %return, !dbg !4346

return:                                           ; preds = %exit, %if.end12
  %23 = load i32, i32* %retval, align 4, !dbg !4347
  ret i32 %23, !dbg !4347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @dfl_feature_drv_match(%struct.dfl_feature* %feature, %struct.dfl_feature_driver* %driver) #0 !dbg !4348 {
entry:
  %retval = alloca i1, align 1
  %feature.addr = alloca %struct.dfl_feature*, align 8
  %driver.addr = alloca %struct.dfl_feature_driver*, align 8
  %ids = alloca %struct.dfl_feature_id*, align 8
  store %struct.dfl_feature* %feature, %struct.dfl_feature** %feature.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature.addr, metadata !4351, metadata !DIExpression()), !dbg !4352
  store %struct.dfl_feature_driver* %driver, %struct.dfl_feature_driver** %driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_driver** %driver.addr, metadata !4353, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_id** %ids, metadata !4355, metadata !DIExpression()), !dbg !4356
  %0 = load %struct.dfl_feature_driver*, %struct.dfl_feature_driver** %driver.addr, align 8, !dbg !4357
  %id_table = getelementptr inbounds %struct.dfl_feature_driver, %struct.dfl_feature_driver* %0, i32 0, i32 0, !dbg !4358
  %1 = load %struct.dfl_feature_id*, %struct.dfl_feature_id** %id_table, align 8, !dbg !4358
  store %struct.dfl_feature_id* %1, %struct.dfl_feature_id** %ids, align 8, !dbg !4356
  %2 = load %struct.dfl_feature_id*, %struct.dfl_feature_id** %ids, align 8, !dbg !4359
  %tobool = icmp ne %struct.dfl_feature_id* %2, null, !dbg !4359
  br i1 %tobool, label %if.then, label %if.end7, !dbg !4361

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !4362

while.cond:                                       ; preds = %if.end, %if.then
  %3 = load %struct.dfl_feature_id*, %struct.dfl_feature_id** %ids, align 8, !dbg !4364
  %id = getelementptr inbounds %struct.dfl_feature_id, %struct.dfl_feature_id* %3, i32 0, i32 0, !dbg !4365
  %4 = load i16, i16* %id, align 2, !dbg !4365
  %tobool1 = icmp ne i16 %4, 0, !dbg !4362
  br i1 %tobool1, label %while.body, label %while.end, !dbg !4362

while.body:                                       ; preds = %while.cond
  %5 = load %struct.dfl_feature_id*, %struct.dfl_feature_id** %ids, align 8, !dbg !4366
  %id2 = getelementptr inbounds %struct.dfl_feature_id, %struct.dfl_feature_id* %5, i32 0, i32 0, !dbg !4369
  %6 = load i16, i16* %id2, align 2, !dbg !4369
  %conv = zext i16 %6 to i32, !dbg !4366
  %7 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !4370
  %id3 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %7, i32 0, i32 1, !dbg !4371
  %8 = load i16, i16* %id3, align 8, !dbg !4371
  %conv4 = zext i16 %8 to i32, !dbg !4370
  %cmp = icmp eq i32 %conv, %conv4, !dbg !4372
  br i1 %cmp, label %if.then6, label %if.end, !dbg !4373

if.then6:                                         ; preds = %while.body
  store i1 true, i1* %retval, align 1, !dbg !4374
  br label %return, !dbg !4374

if.end:                                           ; preds = %while.body
  %9 = load %struct.dfl_feature_id*, %struct.dfl_feature_id** %ids, align 8, !dbg !4375
  %incdec.ptr = getelementptr %struct.dfl_feature_id, %struct.dfl_feature_id* %9, i32 1, !dbg !4375
  store %struct.dfl_feature_id* %incdec.ptr, %struct.dfl_feature_id** %ids, align 8, !dbg !4375
  br label %while.cond, !dbg !4362, !llvm.loop !4376

while.end:                                        ; preds = %while.cond
  br label %if.end7, !dbg !4378

if.end7:                                          ; preds = %while.end, %entry
  store i1 false, i1* %retval, align 1, !dbg !4379
  br label %return, !dbg !4379

return:                                           ; preds = %if.end7, %if.then6
  %10 = load i1, i1* %retval, align 1, !dbg !4380
  ret i1 %10, !dbg !4380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dfl_feature_instance_init(%struct.platform_device* %pdev, %struct.dfl_feature_platform_data* %pdata, %struct.dfl_feature* %feature, %struct.dfl_feature_driver* %drv) #0 !dbg !4381 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %pdata.addr = alloca %struct.dfl_feature_platform_data*, align 8
  %feature.addr = alloca %struct.dfl_feature*, align 8
  %drv.addr = alloca %struct.dfl_feature_driver*, align 8
  %base = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !4384, metadata !DIExpression()), !dbg !4385
  store %struct.dfl_feature_platform_data* %pdata, %struct.dfl_feature_platform_data** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata.addr, metadata !4386, metadata !DIExpression()), !dbg !4387
  store %struct.dfl_feature* %feature, %struct.dfl_feature** %feature.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature.addr, metadata !4388, metadata !DIExpression()), !dbg !4389
  store %struct.dfl_feature_driver* %drv, %struct.dfl_feature_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_driver** %drv.addr, metadata !4390, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.declare(metadata i8** %base, metadata !4392, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4394, metadata !DIExpression()), !dbg !4395
  store i32 0, i32* %ret, align 4, !dbg !4395
  %0 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !4396
  %id = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %0, i32 0, i32 1, !dbg !4396
  %1 = load i16, i16* %id, align 8, !dbg !4396
  %conv = zext i16 %1 to i32, !dbg !4396
  %cmp = icmp eq i32 %conv, 254, !dbg !4396
  br i1 %cmp, label %if.end8, label %if.then, !dbg !4398

if.then:                                          ; preds = %entry
  %2 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4399
  %3 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !4401
  %resource_index = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %3, i32 0, i32 2, !dbg !4402
  %4 = load i32, i32* %resource_index, align 4, !dbg !4402
  %call = call i8* @devm_platform_ioremap_resource(%struct.platform_device* %2, i32 %4) #11, !dbg !4403
  store i8* %call, i8** %base, align 8, !dbg !4404
  %5 = load i8*, i8** %base, align 8, !dbg !4405
  %call2 = call zeroext i1 @IS_ERR(i8* %5) #11, !dbg !4407
  br i1 %call2, label %if.then3, label %if.end, !dbg !4408

if.then3:                                         ; preds = %if.then
  %6 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4409
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %6, i32 0, i32 3, !dbg !4409
  %7 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !4409
  %id4 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %7, i32 0, i32 1, !dbg !4409
  %8 = load i16, i16* %id4, align 8, !dbg !4409
  %conv5 = zext i16 %8 to i32, !dbg !4409
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), i32 %conv5) #12, !dbg !4409
  %9 = load i8*, i8** %base, align 8, !dbg !4411
  %call6 = call i64 @PTR_ERR(i8* %9) #11, !dbg !4412
  %conv7 = trunc i64 %call6 to i32, !dbg !4412
  store i32 %conv7, i32* %retval, align 4, !dbg !4413
  br label %return, !dbg !4413

if.end:                                           ; preds = %if.then
  %10 = load i8*, i8** %base, align 8, !dbg !4414
  %11 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !4415
  %ioaddr = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %11, i32 0, i32 3, !dbg !4416
  store i8* %10, i8** %ioaddr, align 8, !dbg !4417
  br label %if.end8, !dbg !4418

if.end8:                                          ; preds = %if.end, %entry
  %12 = load %struct.dfl_feature_driver*, %struct.dfl_feature_driver** %drv.addr, align 8, !dbg !4419
  %ops = getelementptr inbounds %struct.dfl_feature_driver, %struct.dfl_feature_driver* %12, i32 0, i32 1, !dbg !4421
  %13 = load %struct.dfl_feature_ops*, %struct.dfl_feature_ops** %ops, align 8, !dbg !4421
  %init = getelementptr inbounds %struct.dfl_feature_ops, %struct.dfl_feature_ops* %13, i32 0, i32 0, !dbg !4422
  %14 = load i32 (%struct.platform_device*, %struct.dfl_feature*)*, i32 (%struct.platform_device*, %struct.dfl_feature*)** %init, align 8, !dbg !4422
  %tobool = icmp ne i32 (%struct.platform_device*, %struct.dfl_feature*)* %14, null, !dbg !4419
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !4423

if.then9:                                         ; preds = %if.end8
  %15 = load %struct.dfl_feature_driver*, %struct.dfl_feature_driver** %drv.addr, align 8, !dbg !4424
  %ops10 = getelementptr inbounds %struct.dfl_feature_driver, %struct.dfl_feature_driver* %15, i32 0, i32 1, !dbg !4426
  %16 = load %struct.dfl_feature_ops*, %struct.dfl_feature_ops** %ops10, align 8, !dbg !4426
  %init11 = getelementptr inbounds %struct.dfl_feature_ops, %struct.dfl_feature_ops* %16, i32 0, i32 0, !dbg !4427
  %17 = load i32 (%struct.platform_device*, %struct.dfl_feature*)*, i32 (%struct.platform_device*, %struct.dfl_feature*)** %init11, align 8, !dbg !4427
  %18 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4428
  %19 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !4429
  %call12 = call i32 %17(%struct.platform_device* %18, %struct.dfl_feature* %19) #11, !dbg !4424
  store i32 %call12, i32* %ret, align 4, !dbg !4430
  %20 = load i32, i32* %ret, align 4, !dbg !4431
  %tobool13 = icmp ne i32 %20, 0, !dbg !4431
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !4433

if.then14:                                        ; preds = %if.then9
  %21 = load i32, i32* %ret, align 4, !dbg !4434
  store i32 %21, i32* %retval, align 4, !dbg !4435
  br label %return, !dbg !4435

if.end15:                                         ; preds = %if.then9
  br label %if.end16, !dbg !4436

if.end16:                                         ; preds = %if.end15, %if.end8
  %22 = load %struct.dfl_feature_driver*, %struct.dfl_feature_driver** %drv.addr, align 8, !dbg !4437
  %ops17 = getelementptr inbounds %struct.dfl_feature_driver, %struct.dfl_feature_driver* %22, i32 0, i32 1, !dbg !4438
  %23 = load %struct.dfl_feature_ops*, %struct.dfl_feature_ops** %ops17, align 8, !dbg !4438
  %24 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !4439
  %ops18 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %24, i32 0, i32 6, !dbg !4440
  store %struct.dfl_feature_ops* %23, %struct.dfl_feature_ops** %ops18, align 8, !dbg !4441
  %25 = load i32, i32* %ret, align 4, !dbg !4442
  store i32 %25, i32* %retval, align 4, !dbg !4443
  br label %return, !dbg !4443

return:                                           ; preds = %if.end16, %if.then14, %if.then3
  %26 = load i32, i32* %retval, align 4, !dbg !4444
  ret i32 %26, !dbg !4444
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dfl_devs_add(%struct.dfl_feature_platform_data* %pdata) #0 !dbg !4445 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.dfl_feature_platform_data*, align 8
  %feature = alloca %struct.dfl_feature*, align 8
  %ddev = alloca %struct.dfl_device*, align 8
  %ret = alloca i32, align 4
  store %struct.dfl_feature_platform_data* %pdata, %struct.dfl_feature_platform_data** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata.addr, metadata !4448, metadata !DIExpression()), !dbg !4449
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature, metadata !4450, metadata !DIExpression()), !dbg !4451
  call void @llvm.dbg.declare(metadata %struct.dfl_device** %ddev, metadata !4452, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4454, metadata !DIExpression()), !dbg !4455
  %0 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !4456
  %features = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %0, i32 0, i32 11, !dbg !4456
  %arraydecay = getelementptr inbounds [0 x %struct.dfl_feature], [0 x %struct.dfl_feature]* %features, i64 0, i64 0, !dbg !4456
  store %struct.dfl_feature* %arraydecay, %struct.dfl_feature** %feature, align 8, !dbg !4456
  br label %for.cond, !dbg !4456

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4458
  %2 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !4458
  %features1 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %2, i32 0, i32 11, !dbg !4458
  %arraydecay2 = getelementptr inbounds [0 x %struct.dfl_feature], [0 x %struct.dfl_feature]* %features1, i64 0, i64 0, !dbg !4458
  %3 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !4458
  %num = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %3, i32 0, i32 10, !dbg !4458
  %4 = load i32, i32* %num, align 8, !dbg !4458
  %idx.ext = sext i32 %4 to i64, !dbg !4458
  %add.ptr = getelementptr %struct.dfl_feature, %struct.dfl_feature* %arraydecay2, i64 %idx.ext, !dbg !4458
  %cmp = icmp ult %struct.dfl_feature* %1, %add.ptr, !dbg !4458
  br i1 %cmp, label %for.body, label %for.end, !dbg !4456

for.body:                                         ; preds = %for.cond
  %5 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4460
  %ioaddr = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %5, i32 0, i32 3, !dbg !4463
  %6 = load i8*, i8** %ioaddr, align 8, !dbg !4463
  %tobool = icmp ne i8* %6, null, !dbg !4460
  br i1 %tobool, label %if.then, label %if.end, !dbg !4464

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !4465

if.end:                                           ; preds = %for.body
  %7 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4466
  %ddev3 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %7, i32 0, i32 7, !dbg !4468
  %8 = load %struct.dfl_device*, %struct.dfl_device** %ddev3, align 8, !dbg !4468
  %tobool4 = icmp ne %struct.dfl_device* %8, null, !dbg !4466
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !4469

if.then5:                                         ; preds = %if.end
  store i32 -17, i32* %ret, align 4, !dbg !4470
  br label %err, !dbg !4472

if.end6:                                          ; preds = %if.end
  %9 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !4473
  %10 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4474
  %call = call %struct.dfl_device* @dfl_dev_add(%struct.dfl_feature_platform_data* %9, %struct.dfl_feature* %10) #11, !dbg !4475
  store %struct.dfl_device* %call, %struct.dfl_device** %ddev, align 8, !dbg !4476
  %11 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !4477
  %12 = bitcast %struct.dfl_device* %11 to i8*, !dbg !4477
  %call7 = call zeroext i1 @IS_ERR(i8* %12) #11, !dbg !4479
  br i1 %call7, label %if.then8, label %if.end10, !dbg !4480

if.then8:                                         ; preds = %if.end6
  %13 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !4481
  %14 = bitcast %struct.dfl_device* %13 to i8*, !dbg !4481
  %call9 = call i64 @PTR_ERR(i8* %14) #11, !dbg !4483
  %conv = trunc i64 %call9 to i32, !dbg !4483
  store i32 %conv, i32* %ret, align 4, !dbg !4484
  br label %err, !dbg !4485

if.end10:                                         ; preds = %if.end6
  %15 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !4486
  %16 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4487
  %ddev11 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %16, i32 0, i32 7, !dbg !4488
  store %struct.dfl_device* %15, %struct.dfl_device** %ddev11, align 8, !dbg !4489
  br label %for.inc, !dbg !4490

for.inc:                                          ; preds = %if.end10, %if.then
  %17 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !4458
  %incdec.ptr = getelementptr %struct.dfl_feature, %struct.dfl_feature* %17, i32 1, !dbg !4458
  store %struct.dfl_feature* %incdec.ptr, %struct.dfl_feature** %feature, align 8, !dbg !4458
  br label %for.cond, !dbg !4458, !llvm.loop !4491

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !4493
  br label %return, !dbg !4493

err:                                              ; preds = %if.then8, %if.then5
  call void @llvm.dbg.label(metadata !4494), !dbg !4495
  %18 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !4496
  call void @dfl_devs_remove(%struct.dfl_feature_platform_data* %18) #11, !dbg !4497
  %19 = load i32, i32* %ret, align 4, !dbg !4498
  store i32 %19, i32* %retval, align 4, !dbg !4499
  br label %return, !dbg !4499

return:                                           ; preds = %err, %for.end
  %20 = load i32, i32* %retval, align 4, !dbg !4500
  ret i32 %20, !dbg !4500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dfl_fpga_dev_ops_register(%struct.platform_device* %pdev, %struct.file_operations* %fops, %struct.module* %owner) #0 !dbg !4501 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  %fops.addr = alloca %struct.file_operations*, align 8
  %owner.addr = alloca %struct.module*, align 8
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !4504, metadata !DIExpression()), !dbg !4505
  store %struct.file_operations* %fops, %struct.file_operations** %fops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_operations** %fops.addr, metadata !4506, metadata !DIExpression()), !dbg !4507
  store %struct.module* %owner, %struct.module** %owner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %owner.addr, metadata !4508, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !4510, metadata !DIExpression()), !dbg !4511
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4512
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !4513
  %call = call i8* @dev_get_platdata(%struct.device* %dev) #11, !dbg !4514
  %1 = bitcast i8* %call to %struct.dfl_feature_platform_data*, !dbg !4514
  store %struct.dfl_feature_platform_data* %1, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4511
  %2 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4515
  %cdev = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %2, i32 0, i32 2, !dbg !4516
  %3 = load %struct.file_operations*, %struct.file_operations** %fops.addr, align 8, !dbg !4517
  call void @cdev_init(%struct.cdev* %cdev, %struct.file_operations* %3) #11, !dbg !4518
  %4 = load %struct.module*, %struct.module** %owner.addr, align 8, !dbg !4519
  %5 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4520
  %cdev1 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %5, i32 0, i32 2, !dbg !4521
  %owner2 = getelementptr inbounds %struct.cdev, %struct.cdev* %cdev1, i32 0, i32 1, !dbg !4522
  store %struct.module* %4, %struct.module** %owner2, align 8, !dbg !4523
  %6 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4524
  %dev3 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %6, i32 0, i32 3, !dbg !4525
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 0, !dbg !4526
  %7 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4527
  %cdev4 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %7, i32 0, i32 2, !dbg !4528
  %kobj5 = getelementptr inbounds %struct.cdev, %struct.cdev* %cdev4, i32 0, i32 0, !dbg !4529
  %parent = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj5, i32 0, i32 2, !dbg !4530
  store %struct.kobject* %kobj, %struct.kobject** %parent, align 8, !dbg !4531
  %8 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4532
  %cdev6 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %8, i32 0, i32 2, !dbg !4533
  %9 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4534
  %dev7 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %9, i32 0, i32 3, !dbg !4535
  %devt = getelementptr inbounds %struct.device, %struct.device* %dev7, i32 0, i32 25, !dbg !4536
  %10 = load i32, i32* %devt, align 8, !dbg !4536
  %call8 = call i32 @cdev_add(%struct.cdev* %cdev6, i32 %10, i32 1) #11, !dbg !4537
  ret i32 %call8, !dbg !4538
}

; Function Attrs: noredzone
declare dso_local void @cdev_init(%struct.cdev*, %struct.file_operations*) #2

; Function Attrs: noredzone
declare dso_local i32 @cdev_add(%struct.cdev*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dfl_fpga_dev_ops_unregister(%struct.platform_device* %pdev) #0 !dbg !4539 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !4540, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !4542, metadata !DIExpression()), !dbg !4543
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !4544
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !4545
  %call = call i8* @dev_get_platdata(%struct.device* %dev) #11, !dbg !4546
  %1 = bitcast i8* %call to %struct.dfl_feature_platform_data*, !dbg !4546
  store %struct.dfl_feature_platform_data* %1, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4543
  %2 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !4547
  %cdev = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %2, i32 0, i32 2, !dbg !4548
  call void @cdev_del(%struct.cdev* %cdev) #11, !dbg !4549
  ret void, !dbg !4550
}

; Function Attrs: noredzone
declare dso_local void @cdev_del(%struct.cdev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dfl_fpga_enum_info* @dfl_fpga_enum_info_alloc(%struct.device* %dev) #0 !dbg !4551 {
entry:
  %retval = alloca %struct.dfl_fpga_enum_info*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %info = alloca %struct.dfl_fpga_enum_info*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4554, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_enum_info** %info, metadata !4556, metadata !DIExpression()), !dbg !4557
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4558
  %call = call %struct.device* @get_device(%struct.device* %0) #11, !dbg !4559
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4560
  %call1 = call i8* @devm_kzalloc(%struct.device* %1, i64 40, i32 3264) #11, !dbg !4561
  %2 = bitcast i8* %call1 to %struct.dfl_fpga_enum_info*, !dbg !4561
  store %struct.dfl_fpga_enum_info* %2, %struct.dfl_fpga_enum_info** %info, align 8, !dbg !4562
  %3 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info, align 8, !dbg !4563
  %tobool = icmp ne %struct.dfl_fpga_enum_info* %3, null, !dbg !4563
  br i1 %tobool, label %if.end, label %if.then, !dbg !4565

if.then:                                          ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4566
  call void @put_device(%struct.device* %4) #11, !dbg !4568
  store %struct.dfl_fpga_enum_info* null, %struct.dfl_fpga_enum_info** %retval, align 8, !dbg !4569
  br label %return, !dbg !4569

if.end:                                           ; preds = %entry
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4570
  %6 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info, align 8, !dbg !4571
  %dev2 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %6, i32 0, i32 0, !dbg !4572
  store %struct.device* %5, %struct.device** %dev2, align 8, !dbg !4573
  %7 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info, align 8, !dbg !4574
  %dfls = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %7, i32 0, i32 1, !dbg !4575
  call void @INIT_LIST_HEAD(%struct.list_head* %dfls) #11, !dbg !4576
  %8 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info, align 8, !dbg !4577
  store %struct.dfl_fpga_enum_info* %8, %struct.dfl_fpga_enum_info** %retval, align 8, !dbg !4578
  br label %return, !dbg !4578

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %retval, align 8, !dbg !4579
  ret %struct.dfl_fpga_enum_info* %9, !dbg !4579
}

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kzalloc(%struct.device* %dev, i64 %size, i32 %gfp) #0 !dbg !4580 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4583, metadata !DIExpression()), !dbg !4584
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4585, metadata !DIExpression()), !dbg !4586
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !4587, metadata !DIExpression()), !dbg !4588
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4589
  %1 = load i64, i64* %size.addr, align 8, !dbg !4590
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !4591
  %or = or i32 %2, 256, !dbg !4592
  %call = call noalias i8* @devm_kmalloc(%struct.device* %0, i64 %1, i32 %or) #11, !dbg !4593
  ret i8* %call, !dbg !4594
}

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !4595 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !4596, metadata !DIExpression()), !dbg !4597
  br label %do.body, !dbg !4598

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !4599

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !4601

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !4599

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4603
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4603
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !4603
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !4603
  br label %do.end3, !dbg !4603

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !4599

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4605
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4606
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !4607
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !4608
  ret void, !dbg !4609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dfl_fpga_enum_info_free(%struct.dfl_fpga_enum_info* %info) #0 !dbg !4610 {
entry:
  %info.addr = alloca %struct.dfl_fpga_enum_info*, align 8
  %tmp = alloca %struct.dfl_fpga_enum_dfl*, align 8
  %dfl = alloca %struct.dfl_fpga_enum_dfl*, align 8
  %dev = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp2 = alloca %struct.dfl_fpga_enum_dfl*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp7 = alloca %struct.dfl_fpga_enum_dfl*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.dfl_fpga_enum_dfl*, align 8
  store %struct.dfl_fpga_enum_info* %info, %struct.dfl_fpga_enum_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_enum_info** %info.addr, metadata !4613, metadata !DIExpression()), !dbg !4614
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_enum_dfl** %tmp, metadata !4615, metadata !DIExpression()), !dbg !4616
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_enum_dfl** %dfl, metadata !4617, metadata !DIExpression()), !dbg !4618
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !4619, metadata !DIExpression()), !dbg !4620
  %0 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4621
  %tobool = icmp ne %struct.dfl_fpga_enum_info* %0, null, !dbg !4621
  br i1 %tobool, label %if.end, label %if.then, !dbg !4623

if.then:                                          ; preds = %entry
  br label %return, !dbg !4624

if.end:                                           ; preds = %entry
  %1 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4625
  %dev1 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %1, i32 0, i32 0, !dbg !4626
  %2 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !4626
  store %struct.device* %2, %struct.device** %dev, align 8, !dbg !4627
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4628, metadata !DIExpression()), !dbg !4631
  %3 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4631
  %dfls = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %3, i32 0, i32 1, !dbg !4631
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dfls, i32 0, i32 0, !dbg !4631
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4631
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !4631
  store i8* %5, i8** %__mptr, align 8, !dbg !4631
  br label %do.body, !dbg !4631

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !4632

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !4631
  %add.ptr = getelementptr i8, i8* %6, i64 -16, !dbg !4631
  %7 = bitcast i8* %add.ptr to %struct.dfl_fpga_enum_dfl*, !dbg !4631
  store %struct.dfl_fpga_enum_dfl* %7, %struct.dfl_fpga_enum_dfl** %tmp2, align 8, !dbg !4632
  %8 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %tmp2, align 8, !dbg !4631
  store %struct.dfl_fpga_enum_dfl* %8, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4634
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !4635, metadata !DIExpression()), !dbg !4637
  %9 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4637
  %node = getelementptr inbounds %struct.dfl_fpga_enum_dfl, %struct.dfl_fpga_enum_dfl* %9, i32 0, i32 2, !dbg !4637
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %node, i32 0, i32 0, !dbg !4637
  %10 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !4637
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !4637
  store i8* %11, i8** %__mptr3, align 8, !dbg !4637
  br label %do.body5, !dbg !4637

do.body5:                                         ; preds = %do.end
  br label %do.end6, !dbg !4638

do.end6:                                          ; preds = %do.body5
  %12 = load i8*, i8** %__mptr3, align 8, !dbg !4637
  %add.ptr8 = getelementptr i8, i8* %12, i64 -16, !dbg !4637
  %13 = bitcast i8* %add.ptr8 to %struct.dfl_fpga_enum_dfl*, !dbg !4637
  store %struct.dfl_fpga_enum_dfl* %13, %struct.dfl_fpga_enum_dfl** %tmp7, align 8, !dbg !4638
  %14 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %tmp7, align 8, !dbg !4637
  store %struct.dfl_fpga_enum_dfl* %14, %struct.dfl_fpga_enum_dfl** %tmp, align 8, !dbg !4634
  br label %for.cond, !dbg !4634

for.cond:                                         ; preds = %do.end16, %do.end6
  %15 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4640
  %node9 = getelementptr inbounds %struct.dfl_fpga_enum_dfl, %struct.dfl_fpga_enum_dfl* %15, i32 0, i32 2, !dbg !4640
  %16 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4640
  %dfls10 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %16, i32 0, i32 1, !dbg !4640
  %cmp = icmp eq %struct.list_head* %node9, %dfls10, !dbg !4640
  %lnot = xor i1 %cmp, true, !dbg !4640
  br i1 %lnot, label %for.body, label %for.end, !dbg !4634

for.body:                                         ; preds = %for.cond
  %17 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4642
  %node11 = getelementptr inbounds %struct.dfl_fpga_enum_dfl, %struct.dfl_fpga_enum_dfl* %17, i32 0, i32 2, !dbg !4644
  call void @list_del(%struct.list_head* %node11) #11, !dbg !4645
  %18 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4646
  %19 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4647
  %20 = bitcast %struct.dfl_fpga_enum_dfl* %19 to i8*, !dbg !4647
  call void @devm_kfree(%struct.device* %18, i8* %20) #11, !dbg !4648
  br label %for.inc, !dbg !4649

for.inc:                                          ; preds = %for.body
  %21 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %tmp, align 8, !dbg !4640
  store %struct.dfl_fpga_enum_dfl* %21, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4640
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !4650, metadata !DIExpression()), !dbg !4652
  %22 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %tmp, align 8, !dbg !4652
  %node13 = getelementptr inbounds %struct.dfl_fpga_enum_dfl, %struct.dfl_fpga_enum_dfl* %22, i32 0, i32 2, !dbg !4652
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %node13, i32 0, i32 0, !dbg !4652
  %23 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !4652
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !4652
  store i8* %24, i8** %__mptr12, align 8, !dbg !4652
  br label %do.body15, !dbg !4652

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !4653

do.end16:                                         ; preds = %do.body15
  %25 = load i8*, i8** %__mptr12, align 8, !dbg !4652
  %add.ptr18 = getelementptr i8, i8* %25, i64 -16, !dbg !4652
  %26 = bitcast i8* %add.ptr18 to %struct.dfl_fpga_enum_dfl*, !dbg !4652
  store %struct.dfl_fpga_enum_dfl* %26, %struct.dfl_fpga_enum_dfl** %tmp17, align 8, !dbg !4653
  %27 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %tmp17, align 8, !dbg !4652
  store %struct.dfl_fpga_enum_dfl* %27, %struct.dfl_fpga_enum_dfl** %tmp, align 8, !dbg !4640
  br label %for.cond, !dbg !4640, !llvm.loop !4655

for.end:                                          ; preds = %for.cond
  %28 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4657
  %irq_table = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %28, i32 0, i32 3, !dbg !4659
  %29 = load i32*, i32** %irq_table, align 8, !dbg !4659
  %tobool19 = icmp ne i32* %29, null, !dbg !4657
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !4660

if.then20:                                        ; preds = %for.end
  %30 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4661
  %31 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4662
  %irq_table21 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %31, i32 0, i32 3, !dbg !4663
  %32 = load i32*, i32** %irq_table21, align 8, !dbg !4663
  %33 = bitcast i32* %32 to i8*, !dbg !4662
  call void @devm_kfree(%struct.device* %30, i8* %33) #11, !dbg !4664
  br label %if.end22, !dbg !4664

if.end22:                                         ; preds = %if.then20, %for.end
  %34 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4665
  %35 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4666
  %36 = bitcast %struct.dfl_fpga_enum_info* %35 to i8*, !dbg !4666
  call void @devm_kfree(%struct.device* %34, i8* %36) #11, !dbg !4667
  %37 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4668
  call void @put_device(%struct.device* %37) #11, !dbg !4669
  br label %return, !dbg !4670

return:                                           ; preds = %if.end22, %if.then
  ret void, !dbg !4670
}

; Function Attrs: noredzone
declare dso_local void @devm_kfree(%struct.device*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dfl_fpga_enum_info_add_dfl(%struct.dfl_fpga_enum_info* %info, i64 %start, i64 %len) #0 !dbg !4671 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.dfl_fpga_enum_info*, align 8
  %start.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %dfl = alloca %struct.dfl_fpga_enum_dfl*, align 8
  store %struct.dfl_fpga_enum_info* %info, %struct.dfl_fpga_enum_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_enum_info** %info.addr, metadata !4674, metadata !DIExpression()), !dbg !4675
  store i64 %start, i64* %start.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !4676, metadata !DIExpression()), !dbg !4677
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !4678, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_enum_dfl** %dfl, metadata !4680, metadata !DIExpression()), !dbg !4681
  %0 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4682
  %dev = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %0, i32 0, i32 0, !dbg !4683
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4683
  %call = call i8* @devm_kzalloc(%struct.device* %1, i64 32, i32 3264) #11, !dbg !4684
  %2 = bitcast i8* %call to %struct.dfl_fpga_enum_dfl*, !dbg !4684
  store %struct.dfl_fpga_enum_dfl* %2, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4685
  %3 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4686
  %tobool = icmp ne %struct.dfl_fpga_enum_dfl* %3, null, !dbg !4686
  br i1 %tobool, label %if.end, label %if.then, !dbg !4688

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !4689
  br label %return, !dbg !4689

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %start.addr, align 8, !dbg !4690
  %5 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4691
  %start1 = getelementptr inbounds %struct.dfl_fpga_enum_dfl, %struct.dfl_fpga_enum_dfl* %5, i32 0, i32 0, !dbg !4692
  store i64 %4, i64* %start1, align 8, !dbg !4693
  %6 = load i64, i64* %len.addr, align 8, !dbg !4694
  %7 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4695
  %len2 = getelementptr inbounds %struct.dfl_fpga_enum_dfl, %struct.dfl_fpga_enum_dfl* %7, i32 0, i32 1, !dbg !4696
  store i64 %6, i64* %len2, align 8, !dbg !4697
  %8 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4698
  %node = getelementptr inbounds %struct.dfl_fpga_enum_dfl, %struct.dfl_fpga_enum_dfl* %8, i32 0, i32 2, !dbg !4699
  %9 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4700
  %dfls = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %9, i32 0, i32 1, !dbg !4701
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* %dfls) #11, !dbg !4702
  store i32 0, i32* %retval, align 4, !dbg !4703
  br label %return, !dbg !4703

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4704
  ret i32 %10, !dbg !4704
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dfl_fpga_enum_info_add_irq(%struct.dfl_fpga_enum_info* %info, i32 %nr_irqs, i32* %irq_table) #0 !dbg !4705 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.dfl_fpga_enum_info*, align 8
  %nr_irqs.addr = alloca i32, align 4
  %irq_table.addr = alloca i32*, align 8
  store %struct.dfl_fpga_enum_info* %info, %struct.dfl_fpga_enum_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_enum_info** %info.addr, metadata !4708, metadata !DIExpression()), !dbg !4709
  store i32 %nr_irqs, i32* %nr_irqs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr_irqs.addr, metadata !4710, metadata !DIExpression()), !dbg !4711
  store i32* %irq_table, i32** %irq_table.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %irq_table.addr, metadata !4712, metadata !DIExpression()), !dbg !4713
  %0 = load i32, i32* %nr_irqs.addr, align 4, !dbg !4714
  %tobool = icmp ne i32 %0, 0, !dbg !4714
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4716

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32*, i32** %irq_table.addr, align 8, !dbg !4717
  %tobool1 = icmp ne i32* %1, null, !dbg !4717
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4718

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !4719
  br label %return, !dbg !4719

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4720
  %irq_table2 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %2, i32 0, i32 3, !dbg !4722
  %3 = load i32*, i32** %irq_table2, align 8, !dbg !4722
  %tobool3 = icmp ne i32* %3, null, !dbg !4720
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !4723

if.then4:                                         ; preds = %if.end
  store i32 -17, i32* %retval, align 4, !dbg !4724
  br label %return, !dbg !4724

if.end5:                                          ; preds = %if.end
  %4 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4725
  %dev = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %4, i32 0, i32 0, !dbg !4726
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4726
  %6 = load i32*, i32** %irq_table.addr, align 8, !dbg !4727
  %7 = bitcast i32* %6 to i8*, !dbg !4727
  %8 = load i32, i32* %nr_irqs.addr, align 4, !dbg !4728
  %conv = zext i32 %8 to i64, !dbg !4728
  %mul = mul i64 4, %conv, !dbg !4729
  %call = call i8* @devm_kmemdup(%struct.device* %5, i8* %7, i64 %mul, i32 3264) #11, !dbg !4730
  %9 = bitcast i8* %call to i32*, !dbg !4730
  %10 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4731
  %irq_table6 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %10, i32 0, i32 3, !dbg !4732
  store i32* %9, i32** %irq_table6, align 8, !dbg !4733
  %11 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4734
  %irq_table7 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %11, i32 0, i32 3, !dbg !4736
  %12 = load i32*, i32** %irq_table7, align 8, !dbg !4736
  %tobool8 = icmp ne i32* %12, null, !dbg !4734
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !4737

if.then9:                                         ; preds = %if.end5
  store i32 -12, i32* %retval, align 4, !dbg !4738
  br label %return, !dbg !4738

if.end10:                                         ; preds = %if.end5
  %13 = load i32, i32* %nr_irqs.addr, align 4, !dbg !4739
  %14 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4740
  %nr_irqs11 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %14, i32 0, i32 2, !dbg !4741
  store i32 %13, i32* %nr_irqs11, align 8, !dbg !4742
  store i32 0, i32* %retval, align 4, !dbg !4743
  br label %return, !dbg !4743

return:                                           ; preds = %if.end10, %if.then9, %if.then4, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !4744
  ret i32 %15, !dbg !4744
}

; Function Attrs: noredzone
declare dso_local i8* @devm_kmemdup(%struct.device*, i8*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dfl_fpga_cdev* @dfl_fpga_feature_devs_enumerate(%struct.dfl_fpga_enum_info* %info) #0 !dbg !3842 {
entry:
  %retval = alloca %struct.dfl_fpga_cdev*, align 8
  %info.addr = alloca %struct.dfl_fpga_enum_info*, align 8
  %binfo = alloca %struct.build_feature_devs_info*, align 8
  %dfl = alloca %struct.dfl_fpga_enum_dfl*, align 8
  %cdev = alloca %struct.dfl_fpga_cdev*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_fpga_enum_dfl*, align 8
  %__mptr40 = alloca i8*, align 8
  %tmp45 = alloca %struct.dfl_fpga_enum_dfl*, align 8
  store %struct.dfl_fpga_enum_info* %info, %struct.dfl_fpga_enum_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_enum_info** %info.addr, metadata !4745, metadata !DIExpression()), !dbg !4746
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo, metadata !4747, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_enum_dfl** %dfl, metadata !4749, metadata !DIExpression()), !dbg !4750
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_cdev** %cdev, metadata !4751, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4753, metadata !DIExpression()), !dbg !4754
  store i32 0, i32* %ret, align 4, !dbg !4754
  %0 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4755
  %dev = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %0, i32 0, i32 0, !dbg !4757
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4757
  %tobool = icmp ne %struct.device* %1, null, !dbg !4755
  br i1 %tobool, label %if.end, label %if.then, !dbg !4758

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -19) #11, !dbg !4759
  %2 = bitcast i8* %call to %struct.dfl_fpga_cdev*, !dbg !4759
  store %struct.dfl_fpga_cdev* %2, %struct.dfl_fpga_cdev** %retval, align 8, !dbg !4760
  br label %return, !dbg !4760

if.end:                                           ; preds = %entry
  %3 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4761
  %dev1 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %3, i32 0, i32 0, !dbg !4762
  %4 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !4762
  %call2 = call i8* @devm_kzalloc(%struct.device* %4, i64 72, i32 3264) #11, !dbg !4763
  %5 = bitcast i8* %call2 to %struct.dfl_fpga_cdev*, !dbg !4763
  store %struct.dfl_fpga_cdev* %5, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !4764
  %6 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !4765
  %tobool3 = icmp ne %struct.dfl_fpga_cdev* %6, null, !dbg !4765
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !4767

if.then4:                                         ; preds = %if.end
  %call5 = call i8* @ERR_PTR(i64 -12) #11, !dbg !4768
  %7 = bitcast i8* %call5 to %struct.dfl_fpga_cdev*, !dbg !4768
  store %struct.dfl_fpga_cdev* %7, %struct.dfl_fpga_cdev** %retval, align 8, !dbg !4769
  br label %return, !dbg !4769

if.end6:                                          ; preds = %if.end
  %8 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4770
  %dev7 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %8, i32 0, i32 0, !dbg !4771
  %9 = load %struct.device*, %struct.device** %dev7, align 8, !dbg !4771
  %call8 = call %struct.fpga_region* @devm_fpga_region_create(%struct.device* %9, %struct.fpga_manager* null, i32 (%struct.fpga_region*)* null) #11, !dbg !4772
  %10 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !4773
  %region = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %10, i32 0, i32 1, !dbg !4774
  store %struct.fpga_region* %call8, %struct.fpga_region** %region, align 8, !dbg !4775
  %11 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !4776
  %region9 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %11, i32 0, i32 1, !dbg !4778
  %12 = load %struct.fpga_region*, %struct.fpga_region** %region9, align 8, !dbg !4778
  %tobool10 = icmp ne %struct.fpga_region* %12, null, !dbg !4776
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !4779

if.then11:                                        ; preds = %if.end6
  store i32 -12, i32* %ret, align 4, !dbg !4780
  br label %free_cdev_exit, !dbg !4782

if.end12:                                         ; preds = %if.end6
  %13 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4783
  %dev13 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %13, i32 0, i32 0, !dbg !4784
  %14 = load %struct.device*, %struct.device** %dev13, align 8, !dbg !4784
  %15 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !4785
  %parent = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %15, i32 0, i32 0, !dbg !4786
  store %struct.device* %14, %struct.device** %parent, align 8, !dbg !4787
  br label %do.body, !dbg !4788

do.body:                                          ; preds = %if.end12
  %16 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !4789
  %lock = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %16, i32 0, i32 3, !dbg !4789
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), %struct.lock_class_key* @dfl_fpga_feature_devs_enumerate.__key) #11, !dbg !4789
  br label %do.end, !dbg !4789

do.end:                                           ; preds = %do.body
  %17 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !4791
  %port_dev_list = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %17, i32 0, i32 4, !dbg !4792
  call void @INIT_LIST_HEAD(%struct.list_head* %port_dev_list) #11, !dbg !4793
  %18 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !4794
  %region14 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %18, i32 0, i32 1, !dbg !4795
  %19 = load %struct.fpga_region*, %struct.fpga_region** %region14, align 8, !dbg !4795
  %call15 = call i32 @fpga_region_register(%struct.fpga_region* %19) #11, !dbg !4796
  store i32 %call15, i32* %ret, align 4, !dbg !4797
  %20 = load i32, i32* %ret, align 4, !dbg !4798
  %tobool16 = icmp ne i32 %20, 0, !dbg !4798
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !4800

if.then17:                                        ; preds = %do.end
  br label %free_cdev_exit, !dbg !4801

if.end18:                                         ; preds = %do.end
  %21 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4802
  %dev19 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %21, i32 0, i32 0, !dbg !4803
  %22 = load %struct.device*, %struct.device** %dev19, align 8, !dbg !4803
  %call20 = call i8* @devm_kzalloc(%struct.device* %22, i64 88, i32 3264) #11, !dbg !4804
  %23 = bitcast i8* %call20 to %struct.build_feature_devs_info*, !dbg !4804
  store %struct.build_feature_devs_info* %23, %struct.build_feature_devs_info** %binfo, align 8, !dbg !4805
  %24 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo, align 8, !dbg !4806
  %tobool21 = icmp ne %struct.build_feature_devs_info* %24, null, !dbg !4806
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !4808

if.then22:                                        ; preds = %if.end18
  store i32 -12, i32* %ret, align 4, !dbg !4809
  br label %unregister_region_exit, !dbg !4811

if.end23:                                         ; preds = %if.end18
  %25 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4812
  %dev24 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %25, i32 0, i32 0, !dbg !4813
  %26 = load %struct.device*, %struct.device** %dev24, align 8, !dbg !4813
  %27 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo, align 8, !dbg !4814
  %dev25 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %27, i32 0, i32 0, !dbg !4815
  store %struct.device* %26, %struct.device** %dev25, align 8, !dbg !4816
  %28 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !4817
  %29 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo, align 8, !dbg !4818
  %cdev26 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %29, i32 0, i32 1, !dbg !4819
  store %struct.dfl_fpga_cdev* %28, %struct.dfl_fpga_cdev** %cdev26, align 8, !dbg !4820
  %30 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4821
  %nr_irqs = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %30, i32 0, i32 2, !dbg !4822
  %31 = load i32, i32* %nr_irqs, align 8, !dbg !4822
  %32 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo, align 8, !dbg !4823
  %nr_irqs27 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %32, i32 0, i32 2, !dbg !4824
  store i32 %31, i32* %nr_irqs27, align 8, !dbg !4825
  %33 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4826
  %nr_irqs28 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %33, i32 0, i32 2, !dbg !4828
  %34 = load i32, i32* %nr_irqs28, align 8, !dbg !4828
  %tobool29 = icmp ne i32 %34, 0, !dbg !4826
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !4829

if.then30:                                        ; preds = %if.end23
  %35 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4830
  %irq_table = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %35, i32 0, i32 3, !dbg !4831
  %36 = load i32*, i32** %irq_table, align 8, !dbg !4831
  %37 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo, align 8, !dbg !4832
  %irq_table31 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %37, i32 0, i32 3, !dbg !4833
  store i32* %36, i32** %irq_table31, align 8, !dbg !4834
  br label %if.end32, !dbg !4832

if.end32:                                         ; preds = %if.then30, %if.end23
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4835, metadata !DIExpression()), !dbg !4838
  %38 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4838
  %dfls = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %38, i32 0, i32 1, !dbg !4838
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dfls, i32 0, i32 0, !dbg !4838
  %39 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4838
  %40 = bitcast %struct.list_head* %39 to i8*, !dbg !4838
  store i8* %40, i8** %__mptr, align 8, !dbg !4838
  br label %do.body33, !dbg !4838

do.body33:                                        ; preds = %if.end32
  br label %do.end34, !dbg !4839

do.end34:                                         ; preds = %do.body33
  %41 = load i8*, i8** %__mptr, align 8, !dbg !4838
  %add.ptr = getelementptr i8, i8* %41, i64 -16, !dbg !4838
  %42 = bitcast i8* %add.ptr to %struct.dfl_fpga_enum_dfl*, !dbg !4838
  store %struct.dfl_fpga_enum_dfl* %42, %struct.dfl_fpga_enum_dfl** %tmp, align 8, !dbg !4839
  %43 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %tmp, align 8, !dbg !4838
  store %struct.dfl_fpga_enum_dfl* %43, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4841
  br label %for.cond, !dbg !4841

for.cond:                                         ; preds = %do.end44, %do.end34
  %44 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4842
  %node = getelementptr inbounds %struct.dfl_fpga_enum_dfl, %struct.dfl_fpga_enum_dfl* %44, i32 0, i32 2, !dbg !4842
  %45 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4842
  %dfls35 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %45, i32 0, i32 1, !dbg !4842
  %cmp = icmp eq %struct.list_head* %node, %dfls35, !dbg !4842
  %lnot = xor i1 %cmp, true, !dbg !4842
  br i1 %lnot, label %for.body, label %for.end, !dbg !4841

for.body:                                         ; preds = %for.cond
  %46 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo, align 8, !dbg !4844
  %47 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4846
  %start = getelementptr inbounds %struct.dfl_fpga_enum_dfl, %struct.dfl_fpga_enum_dfl* %47, i32 0, i32 0, !dbg !4847
  %48 = load i64, i64* %start, align 8, !dbg !4847
  %49 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4848
  %len = getelementptr inbounds %struct.dfl_fpga_enum_dfl, %struct.dfl_fpga_enum_dfl* %49, i32 0, i32 1, !dbg !4849
  %50 = load i64, i64* %len, align 8, !dbg !4849
  %call36 = call i32 @parse_feature_list(%struct.build_feature_devs_info* %46, i64 %48, i64 %50) #11, !dbg !4850
  store i32 %call36, i32* %ret, align 4, !dbg !4851
  %51 = load i32, i32* %ret, align 4, !dbg !4852
  %tobool37 = icmp ne i32 %51, 0, !dbg !4852
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !4854

if.then38:                                        ; preds = %for.body
  %52 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !4855
  call void @remove_feature_devs(%struct.dfl_fpga_cdev* %52) #11, !dbg !4857
  %53 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo, align 8, !dbg !4858
  call void @build_info_free(%struct.build_feature_devs_info* %53) #11, !dbg !4859
  br label %unregister_region_exit, !dbg !4860

if.end39:                                         ; preds = %for.body
  br label %for.inc, !dbg !4861

for.inc:                                          ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i8** %__mptr40, metadata !4862, metadata !DIExpression()), !dbg !4864
  %54 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4864
  %node41 = getelementptr inbounds %struct.dfl_fpga_enum_dfl, %struct.dfl_fpga_enum_dfl* %54, i32 0, i32 2, !dbg !4864
  %next42 = getelementptr inbounds %struct.list_head, %struct.list_head* %node41, i32 0, i32 0, !dbg !4864
  %55 = load %struct.list_head*, %struct.list_head** %next42, align 8, !dbg !4864
  %56 = bitcast %struct.list_head* %55 to i8*, !dbg !4864
  store i8* %56, i8** %__mptr40, align 8, !dbg !4864
  br label %do.body43, !dbg !4864

do.body43:                                        ; preds = %for.inc
  br label %do.end44, !dbg !4865

do.end44:                                         ; preds = %do.body43
  %57 = load i8*, i8** %__mptr40, align 8, !dbg !4864
  %add.ptr46 = getelementptr i8, i8* %57, i64 -16, !dbg !4864
  %58 = bitcast i8* %add.ptr46 to %struct.dfl_fpga_enum_dfl*, !dbg !4864
  store %struct.dfl_fpga_enum_dfl* %58, %struct.dfl_fpga_enum_dfl** %tmp45, align 8, !dbg !4865
  %59 = load %struct.dfl_fpga_enum_dfl*, %struct.dfl_fpga_enum_dfl** %tmp45, align 8, !dbg !4864
  store %struct.dfl_fpga_enum_dfl* %59, %struct.dfl_fpga_enum_dfl** %dfl, align 8, !dbg !4842
  br label %for.cond, !dbg !4842, !llvm.loop !4867

for.end:                                          ; preds = %for.cond
  %60 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo, align 8, !dbg !4869
  call void @build_info_free(%struct.build_feature_devs_info* %60) #11, !dbg !4870
  %61 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !4871
  store %struct.dfl_fpga_cdev* %61, %struct.dfl_fpga_cdev** %retval, align 8, !dbg !4872
  br label %return, !dbg !4872

unregister_region_exit:                           ; preds = %if.then38, %if.then22
  call void @llvm.dbg.label(metadata !4873), !dbg !4874
  %62 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !4875
  %region47 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %62, i32 0, i32 1, !dbg !4876
  %63 = load %struct.fpga_region*, %struct.fpga_region** %region47, align 8, !dbg !4876
  call void @fpga_region_unregister(%struct.fpga_region* %63) #11, !dbg !4877
  br label %free_cdev_exit, !dbg !4877

free_cdev_exit:                                   ; preds = %unregister_region_exit, %if.then17, %if.then11
  call void @llvm.dbg.label(metadata !4878), !dbg !4879
  %64 = load %struct.dfl_fpga_enum_info*, %struct.dfl_fpga_enum_info** %info.addr, align 8, !dbg !4880
  %dev48 = getelementptr inbounds %struct.dfl_fpga_enum_info, %struct.dfl_fpga_enum_info* %64, i32 0, i32 0, !dbg !4881
  %65 = load %struct.device*, %struct.device** %dev48, align 8, !dbg !4881
  %66 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !4882
  %67 = bitcast %struct.dfl_fpga_cdev* %66 to i8*, !dbg !4882
  call void @devm_kfree(%struct.device* %65, i8* %67) #11, !dbg !4883
  %68 = load i32, i32* %ret, align 4, !dbg !4884
  %conv = sext i32 %68 to i64, !dbg !4884
  %call49 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !4885
  %69 = bitcast i8* %call49 to %struct.dfl_fpga_cdev*, !dbg !4885
  store %struct.dfl_fpga_cdev* %69, %struct.dfl_fpga_cdev** %retval, align 8, !dbg !4886
  br label %return, !dbg !4886

return:                                           ; preds = %free_cdev_exit, %for.end, %if.then4, %if.then
  %70 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %retval, align 8, !dbg !4887
  ret %struct.dfl_fpga_cdev* %70, !dbg !4887
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !4888 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !4892, metadata !DIExpression()), !dbg !4893
  %0 = load i64, i64* %error.addr, align 8, !dbg !4894
  %1 = inttoptr i64 %0 to i8*, !dbg !4895
  ret i8* %1, !dbg !4896
}

; Function Attrs: noredzone
declare dso_local %struct.fpga_region* @devm_fpga_region_create(%struct.device*, %struct.fpga_manager*, i32 (%struct.fpga_region*)*) #2

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local i32 @fpga_region_register(%struct.fpga_region*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @parse_feature_list(%struct.build_feature_devs_info* %binfo, i64 %start, i64 %len) #0 !dbg !4897 {
entry:
  %retval = alloca i32, align 4
  %binfo.addr = alloca %struct.build_feature_devs_info*, align 8
  %start.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %end = alloca i64, align 8
  %ret = alloca i32, align 4
  %ofst = alloca i32, align 4
  %v = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.build_feature_devs_info* %binfo, %struct.build_feature_devs_info** %binfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo.addr, metadata !4900, metadata !DIExpression()), !dbg !4901
  store i64 %start, i64* %start.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !4902, metadata !DIExpression()), !dbg !4903
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !4904, metadata !DIExpression()), !dbg !4905
  call void @llvm.dbg.declare(metadata i64* %end, metadata !4906, metadata !DIExpression()), !dbg !4907
  %0 = load i64, i64* %start.addr, align 8, !dbg !4908
  %1 = load i64, i64* %len.addr, align 8, !dbg !4909
  %add = add i64 %0, %1, !dbg !4910
  store i64 %add, i64* %end, align 8, !dbg !4907
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4911, metadata !DIExpression()), !dbg !4912
  store i32 0, i32* %ret, align 4, !dbg !4912
  call void @llvm.dbg.declare(metadata i32* %ofst, metadata !4913, metadata !DIExpression()), !dbg !4914
  store i32 0, i32* %ofst, align 4, !dbg !4914
  call void @llvm.dbg.declare(metadata i64* %v, metadata !4915, metadata !DIExpression()), !dbg !4916
  %2 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !4917
  %3 = load i64, i64* %start.addr, align 8, !dbg !4918
  %4 = load i64, i64* %len.addr, align 8, !dbg !4919
  %call = call i32 @build_info_prepare(%struct.build_feature_devs_info* %2, i64 %3, i64 %4) #11, !dbg !4920
  store i32 %call, i32* %ret, align 4, !dbg !4921
  %5 = load i32, i32* %ret, align 4, !dbg !4922
  %tobool = icmp ne i32 %5, 0, !dbg !4922
  br i1 %tobool, label %if.then, label %if.end, !dbg !4924

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %ret, align 4, !dbg !4925
  store i32 %6, i32* %retval, align 4, !dbg !4926
  br label %return, !dbg !4926

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !4927

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i64, i64* %start.addr, align 8, !dbg !4928
  %8 = load i64, i64* %end, align 8, !dbg !4931
  %cmp = icmp ult i64 %7, %8, !dbg !4932
  br i1 %cmp, label %for.body, label %for.end, !dbg !4933

for.body:                                         ; preds = %for.cond
  %9 = load i64, i64* %end, align 8, !dbg !4934
  %10 = load i64, i64* %start.addr, align 8, !dbg !4937
  %sub = sub i64 %9, %10, !dbg !4938
  %cmp1 = icmp ult i64 %sub, 8, !dbg !4939
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4940

if.then2:                                         ; preds = %for.body
  %11 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !4941
  %dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %11, i32 0, i32 0, !dbg !4941
  %12 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4941
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %12, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !4941
  store i32 -22, i32* %retval, align 4, !dbg !4943
  br label %return, !dbg !4943

if.end3:                                          ; preds = %for.body
  %13 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !4944
  %14 = load i64, i64* %start.addr, align 8, !dbg !4945
  %15 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !4946
  %start4 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %15, i32 0, i32 6, !dbg !4947
  %16 = load i64, i64* %start4, align 8, !dbg !4947
  %sub5 = sub i64 %14, %16, !dbg !4948
  %call6 = call i32 @parse_feature(%struct.build_feature_devs_info* %13, i64 %sub5) #11, !dbg !4949
  store i32 %call6, i32* %ret, align 4, !dbg !4950
  %17 = load i32, i32* %ret, align 4, !dbg !4951
  %tobool7 = icmp ne i32 %17, 0, !dbg !4951
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !4953

if.then8:                                         ; preds = %if.end3
  %18 = load i32, i32* %ret, align 4, !dbg !4954
  store i32 %18, i32* %retval, align 4, !dbg !4955
  br label %return, !dbg !4955

if.end9:                                          ; preds = %if.end3
  %19 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !4956
  %ioaddr = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %19, i32 0, i32 5, !dbg !4957
  %20 = load i8*, i8** %ioaddr, align 8, !dbg !4957
  %21 = load i64, i64* %start.addr, align 8, !dbg !4958
  %add.ptr = getelementptr i8, i8* %20, i64 %21, !dbg !4959
  %22 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !4960
  %start10 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %22, i32 0, i32 6, !dbg !4961
  %23 = load i64, i64* %start10, align 8, !dbg !4961
  %idx.neg = sub i64 0, %23, !dbg !4962
  %add.ptr11 = getelementptr i8, i8* %add.ptr, i64 %idx.neg, !dbg !4962
  %add.ptr12 = getelementptr i8, i8* %add.ptr11, i64 0, !dbg !4963
  %call13 = call i64 @readq(i8* %add.ptr12) #11, !dbg !4964
  store i64 %call13, i64* %v, align 8, !dbg !4965
  br label %do.body, !dbg !4966

do.body:                                          ; preds = %if.end9
  br label %do.end, !dbg !4969

do.end:                                           ; preds = %do.body
  br label %do.body14, !dbg !4966

do.body14:                                        ; preds = %do.end
  br label %do.end15, !dbg !4971

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !4966

do.body16:                                        ; preds = %do.end15
  br label %do.end17, !dbg !4973

do.end17:                                         ; preds = %do.body16
  br label %do.body18, !dbg !4966

do.body18:                                        ; preds = %do.end17
  br label %do.end19, !dbg !4975

do.end19:                                         ; preds = %do.body18
  br label %do.body20, !dbg !4966

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !4977

do.end21:                                         ; preds = %do.body20
  %24 = load i64, i64* %v, align 8, !dbg !4979
  %and = and i64 %24, 1099511562240, !dbg !4979
  %shr = lshr i64 %and, 16, !dbg !4979
  store i64 %shr, i64* %tmp, align 8, !dbg !4979
  %25 = load i64, i64* %tmp, align 8, !dbg !4979
  %conv = trunc i64 %25 to i32, !dbg !4980
  store i32 %conv, i32* %ofst, align 4, !dbg !4981
  %26 = load i64, i64* %v, align 8, !dbg !4982
  %and22 = and i64 %26, 1099511627776, !dbg !4984
  %tobool23 = icmp ne i64 %and22, 0, !dbg !4984
  br i1 %tobool23, label %if.then25, label %lor.lhs.false, !dbg !4985

lor.lhs.false:                                    ; preds = %do.end21
  %27 = load i32, i32* %ofst, align 4, !dbg !4986
  %tobool24 = icmp ne i32 %27, 0, !dbg !4986
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !4987

if.then25:                                        ; preds = %lor.lhs.false, %do.end21
  br label %for.end, !dbg !4988

if.end26:                                         ; preds = %lor.lhs.false
  br label %for.inc, !dbg !4989

for.inc:                                          ; preds = %if.end26
  %28 = load i32, i32* %ofst, align 4, !dbg !4990
  %conv27 = zext i32 %28 to i64, !dbg !4990
  %29 = load i64, i64* %start.addr, align 8, !dbg !4991
  %add28 = add i64 %29, %conv27, !dbg !4991
  store i64 %add28, i64* %start.addr, align 8, !dbg !4991
  br label %for.cond, !dbg !4992, !llvm.loop !4993

for.end:                                          ; preds = %if.then25, %for.cond
  %30 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !4995
  call void @build_info_complete(%struct.build_feature_devs_info* %30) #11, !dbg !4996
  %31 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !4997
  %feature_dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %31, i32 0, i32 4, !dbg !4997
  %32 = load %struct.platform_device*, %struct.platform_device** %feature_dev, align 8, !dbg !4997
  %tobool29 = icmp ne %struct.platform_device* %32, null, !dbg !4997
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !4999

if.then30:                                        ; preds = %for.end
  %33 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !5000
  %call31 = call i32 @build_info_commit_dev(%struct.build_feature_devs_info* %33) #11, !dbg !5001
  store i32 %call31, i32* %ret, align 4, !dbg !5002
  br label %if.end32, !dbg !5003

if.end32:                                         ; preds = %if.then30, %for.end
  %34 = load i32, i32* %ret, align 4, !dbg !5004
  store i32 %34, i32* %retval, align 4, !dbg !5005
  br label %return, !dbg !5005

return:                                           ; preds = %if.end32, %if.then8, %if.then2, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !5006
  ret i32 %35, !dbg !5006
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @remove_feature_devs(%struct.dfl_fpga_cdev* %cdev) #0 !dbg !5007 {
entry:
  %cdev.addr = alloca %struct.dfl_fpga_cdev*, align 8
  store %struct.dfl_fpga_cdev* %cdev, %struct.dfl_fpga_cdev** %cdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_cdev** %cdev.addr, metadata !5010, metadata !DIExpression()), !dbg !5011
  %0 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5012
  %region = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %0, i32 0, i32 1, !dbg !5013
  %1 = load %struct.fpga_region*, %struct.fpga_region** %region, align 8, !dbg !5013
  %dev = getelementptr inbounds %struct.fpga_region, %struct.fpga_region* %1, i32 0, i32 0, !dbg !5014
  %call = call i32 @device_for_each_child(%struct.device* %dev, i8* null, i32 (%struct.device*, i8*)* @remove_feature_dev) #11, !dbg !5015
  ret void, !dbg !5016
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_info_free(%struct.build_feature_devs_info* %binfo) #0 !dbg !5017 {
entry:
  %binfo.addr = alloca %struct.build_feature_devs_info*, align 8
  %finfo = alloca %struct.dfl_feature_info*, align 8
  %p = alloca %struct.dfl_feature_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_feature_info*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp9 = alloca %struct.dfl_feature_info*, align 8
  %__mptr15 = alloca i8*, align 8
  %tmp20 = alloca %struct.dfl_feature_info*, align 8
  store %struct.build_feature_devs_info* %binfo, %struct.build_feature_devs_info** %binfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo.addr, metadata !5020, metadata !DIExpression()), !dbg !5021
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_info** %finfo, metadata !5022, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_info** %p, metadata !5024, metadata !DIExpression()), !dbg !5025
  %0 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !5026
  %feature_dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %0, i32 0, i32 4, !dbg !5028
  %1 = load %struct.platform_device*, %struct.platform_device** %feature_dev, align 8, !dbg !5028
  %tobool = icmp ne %struct.platform_device* %1, null, !dbg !5026
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5029

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !5030
  %feature_dev1 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %2, i32 0, i32 4, !dbg !5031
  %3 = load %struct.platform_device*, %struct.platform_device** %feature_dev1, align 8, !dbg !5031
  %id = getelementptr inbounds %struct.platform_device, %struct.platform_device* %3, i32 0, i32 1, !dbg !5032
  %4 = load i32, i32* %id, align 8, !dbg !5032
  %cmp = icmp sge i32 %4, 0, !dbg !5033
  br i1 %cmp, label %if.then, label %if.end, !dbg !5034

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !5035
  %feature_dev2 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %5, i32 0, i32 4, !dbg !5037
  %6 = load %struct.platform_device*, %struct.platform_device** %feature_dev2, align 8, !dbg !5037
  %call = call i32 @feature_dev_id_type(%struct.platform_device* %6) #11, !dbg !5038
  %7 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !5039
  %feature_dev3 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %7, i32 0, i32 4, !dbg !5040
  %8 = load %struct.platform_device*, %struct.platform_device** %feature_dev3, align 8, !dbg !5040
  %id4 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %8, i32 0, i32 1, !dbg !5041
  %9 = load i32, i32* %id4, align 8, !dbg !5041
  call void @dfl_id_free(i32 %call, i32 %9) #11, !dbg !5042
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5043, metadata !DIExpression()), !dbg !5046
  %10 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !5046
  %sub_features = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %10, i32 0, i32 8, !dbg !5046
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %sub_features, i32 0, i32 0, !dbg !5046
  %11 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5046
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !5046
  store i8* %12, i8** %__mptr, align 8, !dbg !5046
  br label %do.body, !dbg !5046

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !5047

do.end:                                           ; preds = %do.body
  %13 = load i8*, i8** %__mptr, align 8, !dbg !5046
  %add.ptr = getelementptr i8, i8* %13, i64 -80, !dbg !5046
  %14 = bitcast i8* %add.ptr to %struct.dfl_feature_info*, !dbg !5046
  store %struct.dfl_feature_info* %14, %struct.dfl_feature_info** %tmp, align 8, !dbg !5047
  %15 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %tmp, align 8, !dbg !5046
  store %struct.dfl_feature_info* %15, %struct.dfl_feature_info** %finfo, align 8, !dbg !5049
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !5050, metadata !DIExpression()), !dbg !5052
  %16 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !5052
  %node = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %16, i32 0, i32 3, !dbg !5052
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %node, i32 0, i32 0, !dbg !5052
  %17 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !5052
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !5052
  store i8* %18, i8** %__mptr5, align 8, !dbg !5052
  br label %do.body7, !dbg !5052

do.body7:                                         ; preds = %do.end
  br label %do.end8, !dbg !5053

do.end8:                                          ; preds = %do.body7
  %19 = load i8*, i8** %__mptr5, align 8, !dbg !5052
  %add.ptr10 = getelementptr i8, i8* %19, i64 -80, !dbg !5052
  %20 = bitcast i8* %add.ptr10 to %struct.dfl_feature_info*, !dbg !5052
  store %struct.dfl_feature_info* %20, %struct.dfl_feature_info** %tmp9, align 8, !dbg !5053
  %21 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %tmp9, align 8, !dbg !5052
  store %struct.dfl_feature_info* %21, %struct.dfl_feature_info** %p, align 8, !dbg !5049
  br label %for.cond, !dbg !5049

for.cond:                                         ; preds = %do.end19, %do.end8
  %22 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !5055
  %node11 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %22, i32 0, i32 3, !dbg !5055
  %23 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !5055
  %sub_features12 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %23, i32 0, i32 8, !dbg !5055
  %cmp13 = icmp eq %struct.list_head* %node11, %sub_features12, !dbg !5055
  %lnot = xor i1 %cmp13, true, !dbg !5055
  br i1 %lnot, label %for.body, label %for.end, !dbg !5049

for.body:                                         ; preds = %for.cond
  %24 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !5057
  %node14 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %24, i32 0, i32 3, !dbg !5059
  call void @list_del(%struct.list_head* %node14) #11, !dbg !5060
  %25 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !5061
  %26 = bitcast %struct.dfl_feature_info* %25 to i8*, !dbg !5061
  call void @kfree(i8* %26) #11, !dbg !5062
  br label %for.inc, !dbg !5063

for.inc:                                          ; preds = %for.body
  %27 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %p, align 8, !dbg !5055
  store %struct.dfl_feature_info* %27, %struct.dfl_feature_info** %finfo, align 8, !dbg !5055
  call void @llvm.dbg.declare(metadata i8** %__mptr15, metadata !5064, metadata !DIExpression()), !dbg !5066
  %28 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %p, align 8, !dbg !5066
  %node16 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %28, i32 0, i32 3, !dbg !5066
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %node16, i32 0, i32 0, !dbg !5066
  %29 = load %struct.list_head*, %struct.list_head** %next17, align 8, !dbg !5066
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !5066
  store i8* %30, i8** %__mptr15, align 8, !dbg !5066
  br label %do.body18, !dbg !5066

do.body18:                                        ; preds = %for.inc
  br label %do.end19, !dbg !5067

do.end19:                                         ; preds = %do.body18
  %31 = load i8*, i8** %__mptr15, align 8, !dbg !5066
  %add.ptr21 = getelementptr i8, i8* %31, i64 -80, !dbg !5066
  %32 = bitcast i8* %add.ptr21 to %struct.dfl_feature_info*, !dbg !5066
  store %struct.dfl_feature_info* %32, %struct.dfl_feature_info** %tmp20, align 8, !dbg !5067
  %33 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %tmp20, align 8, !dbg !5066
  store %struct.dfl_feature_info* %33, %struct.dfl_feature_info** %p, align 8, !dbg !5055
  br label %for.cond, !dbg !5055, !llvm.loop !5069

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5071

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  %34 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !5072
  %feature_dev22 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %34, i32 0, i32 4, !dbg !5073
  %35 = load %struct.platform_device*, %struct.platform_device** %feature_dev22, align 8, !dbg !5073
  call void @platform_device_put(%struct.platform_device* %35) #11, !dbg !5074
  %36 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !5075
  %dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %36, i32 0, i32 0, !dbg !5076
  %37 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5076
  %38 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !5077
  %39 = bitcast %struct.build_feature_devs_info* %38 to i8*, !dbg !5077
  call void @devm_kfree(%struct.device* %37, i8* %39) #11, !dbg !5078
  ret void, !dbg !5079
}

; Function Attrs: noredzone
declare dso_local void @fpga_region_unregister(%struct.fpga_region*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dfl_fpga_feature_devs_remove(%struct.dfl_fpga_cdev* %cdev) #0 !dbg !5080 {
entry:
  %cdev.addr = alloca %struct.dfl_fpga_cdev*, align 8
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  %ptmp = alloca %struct.dfl_feature_platform_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_feature_platform_data*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.dfl_feature_platform_data*, align 8
  %port_dev = alloca %struct.platform_device*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp22 = alloca %struct.dfl_feature_platform_data*, align 8
  store %struct.dfl_fpga_cdev* %cdev, %struct.dfl_fpga_cdev** %cdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_cdev** %cdev.addr, metadata !5081, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !5083, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %ptmp, metadata !5085, metadata !DIExpression()), !dbg !5086
  %0 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5087
  %lock = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %0, i32 0, i32 3, !dbg !5088
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !5089
  %1 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5090
  %fme_dev = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %1, i32 0, i32 2, !dbg !5092
  %2 = load %struct.device*, %struct.device** %fme_dev, align 8, !dbg !5092
  %tobool = icmp ne %struct.device* %2, null, !dbg !5090
  br i1 %tobool, label %if.then, label %if.end, !dbg !5093

if.then:                                          ; preds = %entry
  %3 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5094
  %fme_dev1 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %3, i32 0, i32 2, !dbg !5095
  %4 = load %struct.device*, %struct.device** %fme_dev1, align 8, !dbg !5095
  call void @put_device(%struct.device* %4) #11, !dbg !5096
  br label %if.end, !dbg !5096

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5097, metadata !DIExpression()), !dbg !5100
  %5 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5100
  %port_dev_list = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %5, i32 0, i32 4, !dbg !5100
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %port_dev_list, i32 0, i32 0, !dbg !5100
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5100
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !5100
  store i8* %7, i8** %__mptr, align 8, !dbg !5100
  br label %do.body, !dbg !5100

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5101

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !5100
  %add.ptr = getelementptr i8, i8* %8, i64 0, !dbg !5100
  %9 = bitcast i8* %add.ptr to %struct.dfl_feature_platform_data*, !dbg !5100
  store %struct.dfl_feature_platform_data* %9, %struct.dfl_feature_platform_data** %tmp, align 8, !dbg !5101
  %10 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %tmp, align 8, !dbg !5100
  store %struct.dfl_feature_platform_data* %10, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5103
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !5104, metadata !DIExpression()), !dbg !5106
  %11 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5106
  %node = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %11, i32 0, i32 0, !dbg !5106
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %node, i32 0, i32 0, !dbg !5106
  %12 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !5106
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !5106
  store i8* %13, i8** %__mptr2, align 8, !dbg !5106
  br label %do.body4, !dbg !5106

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !5107

do.end5:                                          ; preds = %do.body4
  %14 = load i8*, i8** %__mptr2, align 8, !dbg !5106
  %add.ptr7 = getelementptr i8, i8* %14, i64 0, !dbg !5106
  %15 = bitcast i8* %add.ptr7 to %struct.dfl_feature_platform_data*, !dbg !5106
  store %struct.dfl_feature_platform_data* %15, %struct.dfl_feature_platform_data** %tmp6, align 8, !dbg !5107
  %16 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %tmp6, align 8, !dbg !5106
  store %struct.dfl_feature_platform_data* %16, %struct.dfl_feature_platform_data** %ptmp, align 8, !dbg !5103
  br label %for.cond, !dbg !5103

for.cond:                                         ; preds = %do.end21, %do.end5
  %17 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5109
  %node8 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %17, i32 0, i32 0, !dbg !5109
  %18 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5109
  %port_dev_list9 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %18, i32 0, i32 4, !dbg !5109
  %cmp = icmp eq %struct.list_head* %node8, %port_dev_list9, !dbg !5109
  %lnot = xor i1 %cmp, true, !dbg !5109
  br i1 %lnot, label %for.body, label %for.end, !dbg !5103

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.platform_device** %port_dev, metadata !5111, metadata !DIExpression()), !dbg !5113
  %19 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5114
  %dev = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %19, i32 0, i32 3, !dbg !5115
  %20 = load %struct.platform_device*, %struct.platform_device** %dev, align 8, !dbg !5115
  store %struct.platform_device* %20, %struct.platform_device** %port_dev, align 8, !dbg !5113
  %21 = load %struct.platform_device*, %struct.platform_device** %port_dev, align 8, !dbg !5116
  %dev10 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %21, i32 0, i32 3, !dbg !5118
  %call = call i32 @device_is_registered(%struct.device* %dev10) #11, !dbg !5119
  %tobool11 = icmp ne i32 %call, 0, !dbg !5119
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !5120

if.then12:                                        ; preds = %for.body
  %22 = load %struct.platform_device*, %struct.platform_device** %port_dev, align 8, !dbg !5121
  %call13 = call i32 @feature_dev_id_type(%struct.platform_device* %22) #11, !dbg !5123
  %23 = load %struct.platform_device*, %struct.platform_device** %port_dev, align 8, !dbg !5124
  %id = getelementptr inbounds %struct.platform_device, %struct.platform_device* %23, i32 0, i32 1, !dbg !5125
  %24 = load i32, i32* %id, align 8, !dbg !5125
  call void @dfl_id_free(i32 %call13, i32 %24) #11, !dbg !5126
  %25 = load %struct.platform_device*, %struct.platform_device** %port_dev, align 8, !dbg !5127
  call void @platform_device_put(%struct.platform_device* %25) #11, !dbg !5128
  br label %if.end14, !dbg !5129

if.end14:                                         ; preds = %if.then12, %for.body
  %26 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5130
  %node15 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %26, i32 0, i32 0, !dbg !5131
  call void @list_del(%struct.list_head* %node15) #11, !dbg !5132
  %27 = load %struct.platform_device*, %struct.platform_device** %port_dev, align 8, !dbg !5133
  %dev16 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %27, i32 0, i32 3, !dbg !5134
  call void @put_device(%struct.device* %dev16) #11, !dbg !5135
  br label %for.inc, !dbg !5136

for.inc:                                          ; preds = %if.end14
  %28 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %ptmp, align 8, !dbg !5109
  store %struct.dfl_feature_platform_data* %28, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5109
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !5137, metadata !DIExpression()), !dbg !5139
  %29 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %ptmp, align 8, !dbg !5139
  %node18 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %29, i32 0, i32 0, !dbg !5139
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %node18, i32 0, i32 0, !dbg !5139
  %30 = load %struct.list_head*, %struct.list_head** %next19, align 8, !dbg !5139
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !5139
  store i8* %31, i8** %__mptr17, align 8, !dbg !5139
  br label %do.body20, !dbg !5139

do.body20:                                        ; preds = %for.inc
  br label %do.end21, !dbg !5140

do.end21:                                         ; preds = %do.body20
  %32 = load i8*, i8** %__mptr17, align 8, !dbg !5139
  %add.ptr23 = getelementptr i8, i8* %32, i64 0, !dbg !5139
  %33 = bitcast i8* %add.ptr23 to %struct.dfl_feature_platform_data*, !dbg !5139
  store %struct.dfl_feature_platform_data* %33, %struct.dfl_feature_platform_data** %tmp22, align 8, !dbg !5140
  %34 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %tmp22, align 8, !dbg !5139
  store %struct.dfl_feature_platform_data* %34, %struct.dfl_feature_platform_data** %ptmp, align 8, !dbg !5109
  br label %for.cond, !dbg !5109, !llvm.loop !5142

for.end:                                          ; preds = %for.cond
  %35 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5144
  %lock24 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %35, i32 0, i32 3, !dbg !5145
  call void @mutex_unlock(%struct.mutex* %lock24) #11, !dbg !5146
  %36 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5147
  call void @remove_feature_devs(%struct.dfl_fpga_cdev* %36) #11, !dbg !5148
  %37 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5149
  %region = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %37, i32 0, i32 1, !dbg !5150
  %38 = load %struct.fpga_region*, %struct.fpga_region** %region, align 8, !dbg !5150
  call void @fpga_region_unregister(%struct.fpga_region* %38) #11, !dbg !5151
  %39 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5152
  %parent = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %39, i32 0, i32 0, !dbg !5153
  %40 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5153
  %41 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5154
  %42 = bitcast %struct.dfl_fpga_cdev* %41 to i8*, !dbg !5154
  call void @devm_kfree(%struct.device* %40, i8* %42) #11, !dbg !5155
  ret void, !dbg !5156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_is_registered(%struct.device* %dev) #0 !dbg !5157 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5158, metadata !DIExpression()), !dbg !5159
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5160
  %kobj = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !5161
  %state_in_sysfs = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 7, !dbg !5162
  %bf.load = load i8, i8* %state_in_sysfs, align 4, !dbg !5162
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !5162
  %bf.clear = and i8 %bf.lshr, 1, !dbg !5162
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5162
  ret i32 %bf.cast, !dbg !5163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dfl_id_free(i32 %type, i32 %id) #0 !dbg !5164 {
entry:
  %type.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5167, metadata !DIExpression()), !dbg !5168
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5169, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5171, metadata !DIExpression()), !dbg !5173
  %0 = load i32, i32* %type.addr, align 4, !dbg !5173
  %cmp = icmp uge i32 %0, 2, !dbg !5173
  %lnot = xor i1 %cmp, true, !dbg !5173
  %lnot1 = xor i1 %lnot, true, !dbg !5173
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5173
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5173
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !5174
  %tobool = icmp ne i32 %1, 0, !dbg !5174
  %lnot2 = xor i1 %tobool, true, !dbg !5174
  %lnot4 = xor i1 %lnot2, true, !dbg !5174
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !5174
  %conv = sext i32 %lnot.ext5 to i64, !dbg !5174
  %tobool6 = icmp ne i64 %conv, 0, !dbg !5174
  br i1 %tobool6, label %if.then, label %if.end, !dbg !5173

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5174

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !5176

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !5178

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !5176

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), i32 114, i32 2305, i64 12) #4, !dbg !5180, !srcloc !5182
  br label %do.end9, !dbg !5180

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 232) #4, !dbg !5183, !srcloc !5185
  br label %do.body10, !dbg !5176

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !5186

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !5176

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !5176

if.end:                                           ; preds = %do.end12, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !5173
  %tobool13 = icmp ne i32 %2, 0, !dbg !5173
  %lnot14 = xor i1 %tobool13, true, !dbg !5173
  %lnot16 = xor i1 %lnot14, true, !dbg !5173
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !5173
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !5173
  store i64 %conv18, i64* %tmp, align 8, !dbg !5174
  %3 = load i64, i64* %tmp, align 8, !dbg !5173
  call void @mutex_lock(%struct.mutex* @dfl_id_mutex) #11, !dbg !5188
  %4 = load i32, i32* %type.addr, align 4, !dbg !5189
  %idxprom = zext i32 %4 to i64, !dbg !5190
  %arrayidx = getelementptr [2 x %struct.dfl_dev_info], [2 x %struct.dfl_dev_info]* @dfl_devs, i64 0, i64 %idxprom, !dbg !5190
  %id19 = getelementptr inbounds %struct.dfl_dev_info, %struct.dfl_dev_info* %arrayidx, i32 0, i32 2, !dbg !5191
  %5 = load i32, i32* %id.addr, align 4, !dbg !5192
  %conv20 = sext i32 %5 to i64, !dbg !5192
  %call = call i8* @idr_remove(%struct.idr* %id19, i64 %conv20) #11, !dbg !5193
  call void @mutex_unlock(%struct.mutex* @dfl_id_mutex) #11, !dbg !5194
  ret void, !dbg !5195
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @feature_dev_id_type(%struct.platform_device* %pdev) #0 !dbg !5196 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %i = alloca i32, align 4
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !5199, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5201, metadata !DIExpression()), !dbg !5202
  store i32 0, i32* %i, align 4, !dbg !5203
  br label %for.cond, !dbg !5205

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5206
  %conv = sext i32 %0 to i64, !dbg !5206
  %cmp = icmp ult i64 %conv, 2, !dbg !5208
  br i1 %cmp, label %for.body, label %for.end, !dbg !5209

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !5210
  %idxprom = sext i32 %1 to i64, !dbg !5212
  %arrayidx = getelementptr [2 x %struct.dfl_dev_info], [2 x %struct.dfl_dev_info]* @dfl_devs, i64 0, i64 %idxprom, !dbg !5212
  %name = getelementptr inbounds %struct.dfl_dev_info, %struct.dfl_dev_info* %arrayidx, i32 0, i32 0, !dbg !5213
  %2 = load i8*, i8** %name, align 16, !dbg !5213
  %3 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5214
  %name2 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %3, i32 0, i32 0, !dbg !5215
  %4 = load i8*, i8** %name2, align 8, !dbg !5215
  %call = call i32 @strcmp(i8* %2, i8* %4) #11, !dbg !5216
  %tobool = icmp ne i32 %call, 0, !dbg !5216
  br i1 %tobool, label %if.end, label %if.then, !dbg !5217

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !5218
  store i32 %5, i32* %retval, align 4, !dbg !5219
  br label %return, !dbg !5219

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5220

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !5221
  %inc = add i32 %6, 1, !dbg !5221
  store i32 %inc, i32* %i, align 4, !dbg !5221
  br label %for.cond, !dbg !5222, !llvm.loop !5223

for.end:                                          ; preds = %for.cond
  store i32 2, i32* %retval, align 4, !dbg !5225
  br label %return, !dbg !5225

return:                                           ; preds = %for.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !5226
  ret i32 %7, !dbg !5226
}

; Function Attrs: noredzone
declare dso_local void @platform_device_put(%struct.platform_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.platform_device* @__dfl_fpga_cdev_find_port(%struct.dfl_fpga_cdev* %cdev, i8* %data, i32 (%struct.platform_device*, i8*)* %match) #0 !dbg !5227 {
entry:
  %retval = alloca %struct.platform_device*, align 8
  %cdev.addr = alloca %struct.dfl_fpga_cdev*, align 8
  %data.addr = alloca i8*, align 8
  %match.addr = alloca i32 (%struct.platform_device*, i8*)*, align 8
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  %port_dev = alloca %struct.platform_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_feature_platform_data*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp10 = alloca %struct.dfl_feature_platform_data*, align 8
  store %struct.dfl_fpga_cdev* %cdev, %struct.dfl_fpga_cdev** %cdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_cdev** %cdev.addr, metadata !5231, metadata !DIExpression()), !dbg !5232
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5233, metadata !DIExpression()), !dbg !5234
  store i32 (%struct.platform_device*, i8*)* %match, i32 (%struct.platform_device*, i8*)** %match.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.platform_device*, i8*)** %match.addr, metadata !5235, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !5237, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.declare(metadata %struct.platform_device** %port_dev, metadata !5239, metadata !DIExpression()), !dbg !5240
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5241, metadata !DIExpression()), !dbg !5244
  %0 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5244
  %port_dev_list = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %0, i32 0, i32 4, !dbg !5244
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %port_dev_list, i32 0, i32 0, !dbg !5244
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5244
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !5244
  store i8* %2, i8** %__mptr, align 8, !dbg !5244
  br label %do.body, !dbg !5244

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5245

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5244
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !5244
  %4 = bitcast i8* %add.ptr to %struct.dfl_feature_platform_data*, !dbg !5244
  store %struct.dfl_feature_platform_data* %4, %struct.dfl_feature_platform_data** %tmp, align 8, !dbg !5245
  %5 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %tmp, align 8, !dbg !5244
  store %struct.dfl_feature_platform_data* %5, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5247
  br label %for.cond, !dbg !5247

for.cond:                                         ; preds = %do.end9, %do.end
  %6 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5248
  %node = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %6, i32 0, i32 0, !dbg !5248
  %7 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5248
  %port_dev_list1 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %7, i32 0, i32 4, !dbg !5248
  %cmp = icmp eq %struct.list_head* %node, %port_dev_list1, !dbg !5248
  %lnot = xor i1 %cmp, true, !dbg !5248
  br i1 %lnot, label %for.body, label %for.end, !dbg !5247

for.body:                                         ; preds = %for.cond
  %8 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5250
  %dev = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %8, i32 0, i32 3, !dbg !5252
  %9 = load %struct.platform_device*, %struct.platform_device** %dev, align 8, !dbg !5252
  store %struct.platform_device* %9, %struct.platform_device** %port_dev, align 8, !dbg !5253
  %10 = load i32 (%struct.platform_device*, i8*)*, i32 (%struct.platform_device*, i8*)** %match.addr, align 8, !dbg !5254
  %11 = load %struct.platform_device*, %struct.platform_device** %port_dev, align 8, !dbg !5256
  %12 = load i8*, i8** %data.addr, align 8, !dbg !5257
  %call = call i32 %10(%struct.platform_device* %11, i8* %12) #11, !dbg !5254
  %tobool = icmp ne i32 %call, 0, !dbg !5254
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5258

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.platform_device*, %struct.platform_device** %port_dev, align 8, !dbg !5259
  %dev2 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %13, i32 0, i32 3, !dbg !5260
  %call3 = call %struct.device* @get_device(%struct.device* %dev2) #11, !dbg !5261
  %tobool4 = icmp ne %struct.device* %call3, null, !dbg !5261
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5262

if.then:                                          ; preds = %land.lhs.true
  %14 = load %struct.platform_device*, %struct.platform_device** %port_dev, align 8, !dbg !5263
  store %struct.platform_device* %14, %struct.platform_device** %retval, align 8, !dbg !5264
  br label %return, !dbg !5264

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !5265

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !5266, metadata !DIExpression()), !dbg !5268
  %15 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5268
  %node6 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %15, i32 0, i32 0, !dbg !5268
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %node6, i32 0, i32 0, !dbg !5268
  %16 = load %struct.list_head*, %struct.list_head** %next7, align 8, !dbg !5268
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !5268
  store i8* %17, i8** %__mptr5, align 8, !dbg !5268
  br label %do.body8, !dbg !5268

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !5269

do.end9:                                          ; preds = %do.body8
  %18 = load i8*, i8** %__mptr5, align 8, !dbg !5268
  %add.ptr11 = getelementptr i8, i8* %18, i64 0, !dbg !5268
  %19 = bitcast i8* %add.ptr11 to %struct.dfl_feature_platform_data*, !dbg !5268
  store %struct.dfl_feature_platform_data* %19, %struct.dfl_feature_platform_data** %tmp10, align 8, !dbg !5269
  %20 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %tmp10, align 8, !dbg !5268
  store %struct.dfl_feature_platform_data* %20, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5248
  br label %for.cond, !dbg !5248, !llvm.loop !5271

for.end:                                          ; preds = %for.cond
  store %struct.platform_device* null, %struct.platform_device** %retval, align 8, !dbg !5273
  br label %return, !dbg !5273

return:                                           ; preds = %for.end, %if.then
  %21 = load %struct.platform_device*, %struct.platform_device** %retval, align 8, !dbg !5274
  ret %struct.platform_device* %21, !dbg !5274
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dfl_fpga_cdev_release_port(%struct.dfl_fpga_cdev* %cdev, i32 %port_id) #0 !dbg !5275 {
entry:
  %cdev.addr = alloca %struct.dfl_fpga_cdev*, align 8
  %port_id.addr = alloca i32, align 4
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  %port_pdev = alloca %struct.platform_device*, align 8
  %ret = alloca i32, align 4
  store %struct.dfl_fpga_cdev* %cdev, %struct.dfl_fpga_cdev** %cdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_cdev** %cdev.addr, metadata !5278, metadata !DIExpression()), !dbg !5279
  store i32 %port_id, i32* %port_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_id.addr, metadata !5280, metadata !DIExpression()), !dbg !5281
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !5282, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.declare(metadata %struct.platform_device** %port_pdev, metadata !5284, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5286, metadata !DIExpression()), !dbg !5287
  store i32 -19, i32* %ret, align 4, !dbg !5287
  %0 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5288
  %lock = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %0, i32 0, i32 3, !dbg !5289
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !5290
  %1 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5291
  %2 = bitcast i32* %port_id.addr to i8*, !dbg !5292
  %call = call %struct.platform_device* @__dfl_fpga_cdev_find_port(%struct.dfl_fpga_cdev* %1, i8* %2, i32 (%struct.platform_device*, i8*)* @dfl_fpga_check_port_id) #11, !dbg !5293
  store %struct.platform_device* %call, %struct.platform_device** %port_pdev, align 8, !dbg !5294
  %3 = load %struct.platform_device*, %struct.platform_device** %port_pdev, align 8, !dbg !5295
  %tobool = icmp ne %struct.platform_device* %3, null, !dbg !5295
  br i1 %tobool, label %if.end, label %if.then, !dbg !5297

if.then:                                          ; preds = %entry
  br label %unlock_exit, !dbg !5298

if.end:                                           ; preds = %entry
  %4 = load %struct.platform_device*, %struct.platform_device** %port_pdev, align 8, !dbg !5299
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %4, i32 0, i32 3, !dbg !5301
  %call1 = call i32 @device_is_registered(%struct.device* %dev) #11, !dbg !5302
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5302
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !5303

if.then3:                                         ; preds = %if.end
  store i32 -16, i32* %ret, align 4, !dbg !5304
  br label %put_dev_exit, !dbg !5306

if.end4:                                          ; preds = %if.end
  %5 = load %struct.platform_device*, %struct.platform_device** %port_pdev, align 8, !dbg !5307
  %dev5 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %5, i32 0, i32 3, !dbg !5308
  %call6 = call i8* @dev_get_platdata(%struct.device* %dev5) #11, !dbg !5309
  %6 = bitcast i8* %call6 to %struct.dfl_feature_platform_data*, !dbg !5309
  store %struct.dfl_feature_platform_data* %6, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5310
  %7 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5311
  %lock7 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %7, i32 0, i32 1, !dbg !5312
  call void @mutex_lock(%struct.mutex* %lock7) #11, !dbg !5313
  %8 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5314
  %call8 = call i32 @dfl_feature_dev_use_begin(%struct.dfl_feature_platform_data* %8, i1 zeroext true) #11, !dbg !5315
  store i32 %call8, i32* %ret, align 4, !dbg !5316
  %9 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5317
  %lock9 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %9, i32 0, i32 1, !dbg !5318
  call void @mutex_unlock(%struct.mutex* %lock9) #11, !dbg !5319
  %10 = load i32, i32* %ret, align 4, !dbg !5320
  %tobool10 = icmp ne i32 %10, 0, !dbg !5320
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5322

if.then11:                                        ; preds = %if.end4
  br label %put_dev_exit, !dbg !5323

if.end12:                                         ; preds = %if.end4
  %11 = load %struct.platform_device*, %struct.platform_device** %port_pdev, align 8, !dbg !5324
  call void @platform_device_del(%struct.platform_device* %11) #11, !dbg !5325
  %12 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5326
  %released_port_num = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %12, i32 0, i32 5, !dbg !5327
  %13 = load i32, i32* %released_port_num, align 8, !dbg !5328
  %inc = add i32 %13, 1, !dbg !5328
  store i32 %inc, i32* %released_port_num, align 8, !dbg !5328
  br label %put_dev_exit, !dbg !5326

put_dev_exit:                                     ; preds = %if.end12, %if.then11, %if.then3
  call void @llvm.dbg.label(metadata !5329), !dbg !5330
  %14 = load %struct.platform_device*, %struct.platform_device** %port_pdev, align 8, !dbg !5331
  %dev13 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %14, i32 0, i32 3, !dbg !5332
  call void @put_device(%struct.device* %dev13) #11, !dbg !5333
  br label %unlock_exit, !dbg !5333

unlock_exit:                                      ; preds = %put_dev_exit, %if.then
  call void @llvm.dbg.label(metadata !5334), !dbg !5335
  %15 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5336
  %lock14 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %15, i32 0, i32 3, !dbg !5337
  call void @mutex_unlock(%struct.mutex* %lock14) #11, !dbg !5338
  %16 = load i32, i32* %ret, align 4, !dbg !5339
  ret i32 %16, !dbg !5340
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dfl_feature_dev_use_begin(%struct.dfl_feature_platform_data* %pdata, i1 zeroext %excl) #0 !dbg !5341 {
entry:
  %retval = alloca i32, align 4
  %pdata.addr = alloca %struct.dfl_feature_platform_data*, align 8
  %excl.addr = alloca i8, align 1
  store %struct.dfl_feature_platform_data* %pdata, %struct.dfl_feature_platform_data** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata.addr, metadata !5344, metadata !DIExpression()), !dbg !5345
  %frombool = zext i1 %excl to i8
  store i8 %frombool, i8* %excl.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %excl.addr, metadata !5346, metadata !DIExpression()), !dbg !5347
  %0 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !5348
  %excl_open = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %0, i32 0, i32 7, !dbg !5350
  %1 = load i8, i8* %excl_open, align 8, !dbg !5350
  %tobool = trunc i8 %1 to i1, !dbg !5350
  br i1 %tobool, label %if.then, label %if.end, !dbg !5351

if.then:                                          ; preds = %entry
  store i32 -16, i32* %retval, align 4, !dbg !5352
  br label %return, !dbg !5352

if.end:                                           ; preds = %entry
  %2 = load i8, i8* %excl.addr, align 1, !dbg !5353
  %tobool1 = trunc i8 %2 to i1, !dbg !5353
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !5355

if.then2:                                         ; preds = %if.end
  %3 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !5356
  %open_count = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %3, i32 0, i32 8, !dbg !5359
  %4 = load i32, i32* %open_count, align 4, !dbg !5359
  %tobool3 = icmp ne i32 %4, 0, !dbg !5356
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !5360

if.then4:                                         ; preds = %if.then2
  store i32 -16, i32* %retval, align 4, !dbg !5361
  br label %return, !dbg !5361

if.end5:                                          ; preds = %if.then2
  %5 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !5362
  %excl_open6 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %5, i32 0, i32 7, !dbg !5363
  store i8 1, i8* %excl_open6, align 8, !dbg !5364
  br label %if.end7, !dbg !5365

if.end7:                                          ; preds = %if.end5, %if.end
  %6 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !5366
  %open_count8 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %6, i32 0, i32 8, !dbg !5367
  %7 = load i32, i32* %open_count8, align 4, !dbg !5368
  %inc = add i32 %7, 1, !dbg !5368
  store i32 %inc, i32* %open_count8, align 4, !dbg !5368
  store i32 0, i32* %retval, align 4, !dbg !5369
  br label %return, !dbg !5369

return:                                           ; preds = %if.end7, %if.then4, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !5370
  ret i32 %8, !dbg !5370
}

; Function Attrs: noredzone
declare dso_local void @platform_device_del(%struct.platform_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dfl_fpga_cdev_assign_port(%struct.dfl_fpga_cdev* %cdev, i32 %port_id) #0 !dbg !5371 {
entry:
  %cdev.addr = alloca %struct.dfl_fpga_cdev*, align 8
  %port_id.addr = alloca i32, align 4
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  %port_pdev = alloca %struct.platform_device*, align 8
  %ret = alloca i32, align 4
  store %struct.dfl_fpga_cdev* %cdev, %struct.dfl_fpga_cdev** %cdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_cdev** %cdev.addr, metadata !5372, metadata !DIExpression()), !dbg !5373
  store i32 %port_id, i32* %port_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_id.addr, metadata !5374, metadata !DIExpression()), !dbg !5375
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !5376, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.declare(metadata %struct.platform_device** %port_pdev, metadata !5378, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5380, metadata !DIExpression()), !dbg !5381
  store i32 -19, i32* %ret, align 4, !dbg !5381
  %0 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5382
  %lock = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %0, i32 0, i32 3, !dbg !5383
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !5384
  %1 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5385
  %2 = bitcast i32* %port_id.addr to i8*, !dbg !5386
  %call = call %struct.platform_device* @__dfl_fpga_cdev_find_port(%struct.dfl_fpga_cdev* %1, i8* %2, i32 (%struct.platform_device*, i8*)* @dfl_fpga_check_port_id) #11, !dbg !5387
  store %struct.platform_device* %call, %struct.platform_device** %port_pdev, align 8, !dbg !5388
  %3 = load %struct.platform_device*, %struct.platform_device** %port_pdev, align 8, !dbg !5389
  %tobool = icmp ne %struct.platform_device* %3, null, !dbg !5389
  br i1 %tobool, label %if.end, label %if.then, !dbg !5391

if.then:                                          ; preds = %entry
  br label %unlock_exit, !dbg !5392

if.end:                                           ; preds = %entry
  %4 = load %struct.platform_device*, %struct.platform_device** %port_pdev, align 8, !dbg !5393
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %4, i32 0, i32 3, !dbg !5395
  %call1 = call i32 @device_is_registered(%struct.device* %dev) #11, !dbg !5396
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5396
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5397

if.then3:                                         ; preds = %if.end
  store i32 -16, i32* %ret, align 4, !dbg !5398
  br label %put_dev_exit, !dbg !5400

if.end4:                                          ; preds = %if.end
  %5 = load %struct.platform_device*, %struct.platform_device** %port_pdev, align 8, !dbg !5401
  %call5 = call i32 @platform_device_add(%struct.platform_device* %5) #11, !dbg !5402
  store i32 %call5, i32* %ret, align 4, !dbg !5403
  %6 = load i32, i32* %ret, align 4, !dbg !5404
  %tobool6 = icmp ne i32 %6, 0, !dbg !5404
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !5406

if.then7:                                         ; preds = %if.end4
  br label %put_dev_exit, !dbg !5407

if.end8:                                          ; preds = %if.end4
  %7 = load %struct.platform_device*, %struct.platform_device** %port_pdev, align 8, !dbg !5408
  %dev9 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %7, i32 0, i32 3, !dbg !5409
  %call10 = call i8* @dev_get_platdata(%struct.device* %dev9) #11, !dbg !5410
  %8 = bitcast i8* %call10 to %struct.dfl_feature_platform_data*, !dbg !5410
  store %struct.dfl_feature_platform_data* %8, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5411
  %9 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5412
  %lock11 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %9, i32 0, i32 1, !dbg !5413
  call void @mutex_lock(%struct.mutex* %lock11) #11, !dbg !5414
  %10 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5415
  call void @dfl_feature_dev_use_end(%struct.dfl_feature_platform_data* %10) #11, !dbg !5416
  %11 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5417
  %lock12 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %11, i32 0, i32 1, !dbg !5418
  call void @mutex_unlock(%struct.mutex* %lock12) #11, !dbg !5419
  %12 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5420
  %released_port_num = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %12, i32 0, i32 5, !dbg !5421
  %13 = load i32, i32* %released_port_num, align 8, !dbg !5422
  %dec = add i32 %13, -1, !dbg !5422
  store i32 %dec, i32* %released_port_num, align 8, !dbg !5422
  br label %put_dev_exit, !dbg !5420

put_dev_exit:                                     ; preds = %if.end8, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !5423), !dbg !5424
  %14 = load %struct.platform_device*, %struct.platform_device** %port_pdev, align 8, !dbg !5425
  %dev13 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %14, i32 0, i32 3, !dbg !5426
  call void @put_device(%struct.device* %dev13) #11, !dbg !5427
  br label %unlock_exit, !dbg !5427

unlock_exit:                                      ; preds = %put_dev_exit, %if.then
  call void @llvm.dbg.label(metadata !5428), !dbg !5429
  %15 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5430
  %lock14 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %15, i32 0, i32 3, !dbg !5431
  call void @mutex_unlock(%struct.mutex* %lock14) #11, !dbg !5432
  %16 = load i32, i32* %ret, align 4, !dbg !5433
  ret i32 %16, !dbg !5434
}

; Function Attrs: noredzone
declare dso_local i32 @platform_device_add(%struct.platform_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dfl_feature_dev_use_end(%struct.dfl_feature_platform_data* %pdata) #0 !dbg !5435 {
entry:
  %pdata.addr = alloca %struct.dfl_feature_platform_data*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.dfl_feature_platform_data* %pdata, %struct.dfl_feature_platform_data** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata.addr, metadata !5436, metadata !DIExpression()), !dbg !5437
  %0 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !5438
  %excl_open = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %0, i32 0, i32 7, !dbg !5439
  store i8 0, i8* %excl_open, align 8, !dbg !5440
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5441, metadata !DIExpression()), !dbg !5444
  %1 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !5444
  %open_count = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %1, i32 0, i32 8, !dbg !5444
  %2 = load i32, i32* %open_count, align 4, !dbg !5444
  %cmp = icmp sle i32 %2, 0, !dbg !5444
  %lnot = xor i1 %cmp, true, !dbg !5444
  %lnot1 = xor i1 %lnot, true, !dbg !5444
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5444
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5444
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !5445
  %tobool = icmp ne i32 %3, 0, !dbg !5445
  %lnot2 = xor i1 %tobool, true, !dbg !5445
  %lnot4 = xor i1 %lnot2, true, !dbg !5445
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !5445
  %conv = sext i32 %lnot.ext5 to i64, !dbg !5445
  %tobool6 = icmp ne i64 %conv, 0, !dbg !5445
  br i1 %tobool6, label %if.then, label %if.end, !dbg !5444

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5445

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !5447

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !5449

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !5447

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i64 0, i64 0), i32 310, i32 2305, i64 12) #4, !dbg !5451, !srcloc !5453
  br label %do.end9, !dbg !5451

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 203) #4, !dbg !5454, !srcloc !5456
  br label %do.body10, !dbg !5447

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !5457

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !5447

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !5447

if.end:                                           ; preds = %do.end12, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !5444
  %tobool13 = icmp ne i32 %4, 0, !dbg !5444
  %lnot14 = xor i1 %tobool13, true, !dbg !5444
  %lnot16 = xor i1 %lnot14, true, !dbg !5444
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !5444
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !5444
  store i64 %conv18, i64* %tmp, align 8, !dbg !5445
  %5 = load i64, i64* %tmp, align 8, !dbg !5444
  %tobool19 = icmp ne i64 %5, 0, !dbg !5459
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !5460

if.then20:                                        ; preds = %if.end
  br label %return, !dbg !5461

if.end21:                                         ; preds = %if.end
  %6 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !5462
  %open_count22 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %6, i32 0, i32 8, !dbg !5463
  %7 = load i32, i32* %open_count22, align 4, !dbg !5464
  %dec = add i32 %7, -1, !dbg !5464
  store i32 %dec, i32* %open_count22, align 4, !dbg !5464
  br label %return, !dbg !5465

return:                                           ; preds = %if.end21, %if.then20
  ret void, !dbg !5465
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dfl_fpga_cdev_config_ports_pf(%struct.dfl_fpga_cdev* %cdev) #0 !dbg !5466 {
entry:
  %cdev.addr = alloca %struct.dfl_fpga_cdev*, align 8
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_feature_platform_data*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.dfl_feature_platform_data*, align 8
  store %struct.dfl_fpga_cdev* %cdev, %struct.dfl_fpga_cdev** %cdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_cdev** %cdev.addr, metadata !5467, metadata !DIExpression()), !dbg !5468
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !5469, metadata !DIExpression()), !dbg !5470
  %0 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5471
  %lock = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %0, i32 0, i32 3, !dbg !5472
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !5473
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5474, metadata !DIExpression()), !dbg !5477
  %1 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5477
  %port_dev_list = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %1, i32 0, i32 4, !dbg !5477
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %port_dev_list, i32 0, i32 0, !dbg !5477
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5477
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !5477
  store i8* %3, i8** %__mptr, align 8, !dbg !5477
  br label %do.body, !dbg !5477

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5478

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !5477
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !5477
  %5 = bitcast i8* %add.ptr to %struct.dfl_feature_platform_data*, !dbg !5477
  store %struct.dfl_feature_platform_data* %5, %struct.dfl_feature_platform_data** %tmp, align 8, !dbg !5478
  %6 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %tmp, align 8, !dbg !5477
  store %struct.dfl_feature_platform_data* %6, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5480
  br label %for.cond, !dbg !5480

for.cond:                                         ; preds = %do.end7, %do.end
  %7 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5481
  %node = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %7, i32 0, i32 0, !dbg !5481
  %8 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5481
  %port_dev_list1 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %8, i32 0, i32 4, !dbg !5481
  %cmp = icmp eq %struct.list_head* %node, %port_dev_list1, !dbg !5481
  %lnot = xor i1 %cmp, true, !dbg !5481
  br i1 %lnot, label %for.body, label %for.end, !dbg !5480

for.body:                                         ; preds = %for.cond
  %9 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5483
  %dev = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %9, i32 0, i32 3, !dbg !5486
  %10 = load %struct.platform_device*, %struct.platform_device** %dev, align 8, !dbg !5486
  %dev2 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %10, i32 0, i32 3, !dbg !5487
  %call = call i32 @device_is_registered(%struct.device* %dev2) #11, !dbg !5488
  %tobool = icmp ne i32 %call, 0, !dbg !5488
  br i1 %tobool, label %if.then, label %if.end, !dbg !5489

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !5490

if.end:                                           ; preds = %for.body
  %11 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5491
  %fme_dev = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %11, i32 0, i32 2, !dbg !5491
  %12 = load %struct.device*, %struct.device** %fme_dev, align 8, !dbg !5491
  %13 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5491
  %id = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %13, i32 0, i32 5, !dbg !5491
  %14 = load i32, i32* %id, align 8, !dbg !5491
  call void @config_port_access_mode(%struct.device* %12, i32 %14, i1 zeroext false) #11, !dbg !5491
  br label %for.inc, !dbg !5492

for.inc:                                          ; preds = %if.end, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !5493, metadata !DIExpression()), !dbg !5495
  %15 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5495
  %node4 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %15, i32 0, i32 0, !dbg !5495
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %node4, i32 0, i32 0, !dbg !5495
  %16 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !5495
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !5495
  store i8* %17, i8** %__mptr3, align 8, !dbg !5495
  br label %do.body6, !dbg !5495

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !5496

do.end7:                                          ; preds = %do.body6
  %18 = load i8*, i8** %__mptr3, align 8, !dbg !5495
  %add.ptr9 = getelementptr i8, i8* %18, i64 0, !dbg !5495
  %19 = bitcast i8* %add.ptr9 to %struct.dfl_feature_platform_data*, !dbg !5495
  store %struct.dfl_feature_platform_data* %19, %struct.dfl_feature_platform_data** %tmp8, align 8, !dbg !5496
  %20 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %tmp8, align 8, !dbg !5495
  store %struct.dfl_feature_platform_data* %20, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5481
  br label %for.cond, !dbg !5481, !llvm.loop !5498

for.end:                                          ; preds = %for.cond
  %21 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5500
  %lock10 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %21, i32 0, i32 3, !dbg !5501
  call void @mutex_unlock(%struct.mutex* %lock10) #11, !dbg !5502
  ret void, !dbg !5503
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @config_port_access_mode(%struct.device* %fme_dev, i32 %port_id, i1 zeroext %is_vf) #0 !dbg !5504 {
entry:
  %fme_dev.addr = alloca %struct.device*, align 8
  %port_id.addr = alloca i32, align 4
  %is_vf.addr = alloca i8, align 1
  %base = alloca i8*, align 8
  %v = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.device* %fme_dev, %struct.device** %fme_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %fme_dev.addr, metadata !5507, metadata !DIExpression()), !dbg !5508
  store i32 %port_id, i32* %port_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_id.addr, metadata !5509, metadata !DIExpression()), !dbg !5510
  %frombool = zext i1 %is_vf to i8
  store i8 %frombool, i8* %is_vf.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_vf.addr, metadata !5511, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.declare(metadata i8** %base, metadata !5513, metadata !DIExpression()), !dbg !5514
  call void @llvm.dbg.declare(metadata i64* %v, metadata !5515, metadata !DIExpression()), !dbg !5516
  %0 = load %struct.device*, %struct.device** %fme_dev.addr, align 8, !dbg !5517
  %call = call i8* @dfl_get_feature_ioaddr_by_id(%struct.device* %0, i16 zeroext 254) #11, !dbg !5518
  store i8* %call, i8** %base, align 8, !dbg !5519
  %1 = load i8*, i8** %base, align 8, !dbg !5520
  %2 = load i32, i32* %port_id.addr, align 4, !dbg !5521
  %mul = mul i32 %2, 8, !dbg !5521
  %add = add i32 56, %mul, !dbg !5521
  %idx.ext = sext i32 %add to i64, !dbg !5522
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !5522
  %call1 = call i64 @readq(i8* %add.ptr) #11, !dbg !5523
  store i64 %call1, i64* %v, align 8, !dbg !5524
  %3 = load i64, i64* %v, align 8, !dbg !5525
  %and = and i64 %3, -36028797018963969, !dbg !5525
  store i64 %and, i64* %v, align 8, !dbg !5525
  br label %do.body, !dbg !5526

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5529

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !5526

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !5531

do.end3:                                          ; preds = %do.body2
  br label %do.body4, !dbg !5526

do.body4:                                         ; preds = %do.end3
  br label %do.end5, !dbg !5533

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !5526

do.body6:                                         ; preds = %do.end5
  br label %do.end7, !dbg !5535

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !5526

do.body8:                                         ; preds = %do.end7
  br label %do.end9, !dbg !5537

do.end9:                                          ; preds = %do.body8
  %4 = load i8, i8* %is_vf.addr, align 1, !dbg !5539
  %tobool = trunc i8 %4 to i1, !dbg !5539
  %5 = zext i1 %tobool to i64, !dbg !5539
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !5539
  %conv = sext i32 %cond to i64, !dbg !5539
  %shl = shl i64 %conv, 55, !dbg !5539
  %and10 = and i64 %shl, 36028797018963968, !dbg !5539
  store i64 %and10, i64* %tmp, align 8, !dbg !5539
  %6 = load i64, i64* %tmp, align 8, !dbg !5539
  %7 = load i64, i64* %v, align 8, !dbg !5540
  %or = or i64 %7, %6, !dbg !5540
  store i64 %or, i64* %v, align 8, !dbg !5540
  %8 = load i64, i64* %v, align 8, !dbg !5541
  %9 = load i8*, i8** %base, align 8, !dbg !5542
  %10 = load i32, i32* %port_id.addr, align 4, !dbg !5543
  %mul11 = mul i32 %10, 8, !dbg !5543
  %add12 = add i32 56, %mul11, !dbg !5543
  %idx.ext13 = sext i32 %add12 to i64, !dbg !5544
  %add.ptr14 = getelementptr i8, i8* %9, i64 %idx.ext13, !dbg !5544
  call void @writeq(i64 %8, i8* %add.ptr14) #11, !dbg !5545
  ret void, !dbg !5546
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dfl_fpga_cdev_config_ports_vf(%struct.dfl_fpga_cdev* %cdev, i32 %num_vfs) #0 !dbg !5547 {
entry:
  %cdev.addr = alloca %struct.dfl_fpga_cdev*, align 8
  %num_vfs.addr = alloca i32, align 4
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_feature_platform_data*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp11 = alloca %struct.dfl_feature_platform_data*, align 8
  store %struct.dfl_fpga_cdev* %cdev, %struct.dfl_fpga_cdev** %cdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_cdev** %cdev.addr, metadata !5548, metadata !DIExpression()), !dbg !5549
  store i32 %num_vfs, i32* %num_vfs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_vfs.addr, metadata !5550, metadata !DIExpression()), !dbg !5551
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !5552, metadata !DIExpression()), !dbg !5553
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5554, metadata !DIExpression()), !dbg !5555
  store i32 0, i32* %ret, align 4, !dbg !5555
  %0 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5556
  %lock = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %0, i32 0, i32 3, !dbg !5557
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !5558
  %1 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5559
  %released_port_num = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %1, i32 0, i32 5, !dbg !5561
  %2 = load i32, i32* %released_port_num, align 8, !dbg !5561
  %3 = load i32, i32* %num_vfs.addr, align 4, !dbg !5562
  %cmp = icmp ne i32 %2, %3, !dbg !5563
  br i1 %cmp, label %if.then, label %if.end, !dbg !5564

if.then:                                          ; preds = %entry
  store i32 -22, i32* %ret, align 4, !dbg !5565
  br label %done, !dbg !5567

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5568, metadata !DIExpression()), !dbg !5571
  %4 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5571
  %port_dev_list = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %4, i32 0, i32 4, !dbg !5571
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %port_dev_list, i32 0, i32 0, !dbg !5571
  %5 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5571
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !5571
  store i8* %6, i8** %__mptr, align 8, !dbg !5571
  br label %do.body, !dbg !5571

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5572

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !5571
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !5571
  %8 = bitcast i8* %add.ptr to %struct.dfl_feature_platform_data*, !dbg !5571
  store %struct.dfl_feature_platform_data* %8, %struct.dfl_feature_platform_data** %tmp, align 8, !dbg !5572
  %9 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %tmp, align 8, !dbg !5571
  store %struct.dfl_feature_platform_data* %9, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5574
  br label %for.cond, !dbg !5574

for.cond:                                         ; preds = %do.end10, %do.end
  %10 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5575
  %node = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %10, i32 0, i32 0, !dbg !5575
  %11 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5575
  %port_dev_list1 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %11, i32 0, i32 4, !dbg !5575
  %cmp2 = icmp eq %struct.list_head* %node, %port_dev_list1, !dbg !5575
  %lnot = xor i1 %cmp2, true, !dbg !5575
  br i1 %lnot, label %for.body, label %for.end, !dbg !5574

for.body:                                         ; preds = %for.cond
  %12 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5577
  %dev = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %12, i32 0, i32 3, !dbg !5580
  %13 = load %struct.platform_device*, %struct.platform_device** %dev, align 8, !dbg !5580
  %dev3 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %13, i32 0, i32 3, !dbg !5581
  %call = call i32 @device_is_registered(%struct.device* %dev3) #11, !dbg !5582
  %tobool = icmp ne i32 %call, 0, !dbg !5582
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !5583

if.then4:                                         ; preds = %for.body
  br label %for.inc, !dbg !5584

if.end5:                                          ; preds = %for.body
  %14 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5585
  %fme_dev = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %14, i32 0, i32 2, !dbg !5585
  %15 = load %struct.device*, %struct.device** %fme_dev, align 8, !dbg !5585
  %16 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5585
  %id = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %16, i32 0, i32 5, !dbg !5585
  %17 = load i32, i32* %id, align 8, !dbg !5585
  call void @config_port_access_mode(%struct.device* %15, i32 %17, i1 zeroext true) #11, !dbg !5585
  br label %for.inc, !dbg !5586

for.inc:                                          ; preds = %if.end5, %if.then4
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !5587, metadata !DIExpression()), !dbg !5589
  %18 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5589
  %node7 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %18, i32 0, i32 0, !dbg !5589
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %node7, i32 0, i32 0, !dbg !5589
  %19 = load %struct.list_head*, %struct.list_head** %next8, align 8, !dbg !5589
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !5589
  store i8* %20, i8** %__mptr6, align 8, !dbg !5589
  br label %do.body9, !dbg !5589

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !5590

do.end10:                                         ; preds = %do.body9
  %21 = load i8*, i8** %__mptr6, align 8, !dbg !5589
  %add.ptr12 = getelementptr i8, i8* %21, i64 0, !dbg !5589
  %22 = bitcast i8* %add.ptr12 to %struct.dfl_feature_platform_data*, !dbg !5589
  store %struct.dfl_feature_platform_data* %22, %struct.dfl_feature_platform_data** %tmp11, align 8, !dbg !5590
  %23 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %tmp11, align 8, !dbg !5589
  store %struct.dfl_feature_platform_data* %23, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5575
  br label %for.cond, !dbg !5575, !llvm.loop !5592

for.end:                                          ; preds = %for.cond
  br label %done, !dbg !5593

done:                                             ; preds = %for.end, %if.then
  call void @llvm.dbg.label(metadata !5594), !dbg !5595
  %24 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !5596
  %lock13 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %24, i32 0, i32 3, !dbg !5597
  call void @mutex_unlock(%struct.mutex* %lock13) #11, !dbg !5598
  %25 = load i32, i32* %ret, align 4, !dbg !5599
  ret i32 %25, !dbg !5600
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dfl_fpga_set_irq_triggers(%struct.dfl_feature* %feature, i32 %start, i32 %count, i32* %fds) #0 !dbg !5601 {
entry:
  %retval = alloca i32, align 4
  %feature.addr = alloca %struct.dfl_feature*, align 8
  %start.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %fds.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %fd = alloca i32, align 4
  store %struct.dfl_feature* %feature, %struct.dfl_feature** %feature.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature.addr, metadata !5605, metadata !DIExpression()), !dbg !5606
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !5607, metadata !DIExpression()), !dbg !5608
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5609, metadata !DIExpression()), !dbg !5610
  store i32* %fds, i32** %fds.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fds.addr, metadata !5611, metadata !DIExpression()), !dbg !5612
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5613, metadata !DIExpression()), !dbg !5614
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5615, metadata !DIExpression()), !dbg !5616
  store i32 0, i32* %ret, align 4, !dbg !5616
  %0 = load i32, i32* %start.addr, align 4, !dbg !5617
  %1 = load i32, i32* %count.addr, align 4, !dbg !5617
  %add = add i32 %0, %1, !dbg !5617
  %2 = load i32, i32* %start.addr, align 4, !dbg !5617
  %cmp = icmp ult i32 %add, %2, !dbg !5617
  %lnot = xor i1 %cmp, true, !dbg !5617
  %lnot1 = xor i1 %lnot, true, !dbg !5617
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5617
  %conv = sext i32 %lnot.ext to i64, !dbg !5617
  %tobool = icmp ne i64 %conv, 0, !dbg !5617
  br i1 %tobool, label %if.then, label %if.end, !dbg !5619

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5620
  br label %return, !dbg !5620

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %start.addr, align 4, !dbg !5621
  %4 = load i32, i32* %count.addr, align 4, !dbg !5623
  %add2 = add i32 %3, %4, !dbg !5624
  %5 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5625
  %nr_irqs = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %5, i32 0, i32 5, !dbg !5626
  %6 = load i32, i32* %nr_irqs, align 8, !dbg !5626
  %cmp3 = icmp ugt i32 %add2, %6, !dbg !5627
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !5628

if.then5:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !5629
  br label %return, !dbg !5629

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !5630
  br label %for.cond, !dbg !5632

for.cond:                                         ; preds = %for.inc, %if.end6
  %7 = load i32, i32* %i, align 4, !dbg !5633
  %8 = load i32, i32* %count.addr, align 4, !dbg !5635
  %cmp7 = icmp ult i32 %7, %8, !dbg !5636
  br i1 %cmp7, label %for.body, label %for.end, !dbg !5637

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !5638, metadata !DIExpression()), !dbg !5640
  %9 = load i32*, i32** %fds.addr, align 8, !dbg !5641
  %tobool9 = icmp ne i32* %9, null, !dbg !5641
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !5641

cond.true:                                        ; preds = %for.body
  %10 = load i32*, i32** %fds.addr, align 8, !dbg !5642
  %11 = load i32, i32* %i, align 4, !dbg !5643
  %idxprom = zext i32 %11 to i64, !dbg !5642
  %arrayidx = getelementptr i32, i32* %10, i64 %idxprom, !dbg !5642
  %12 = load i32, i32* %arrayidx, align 4, !dbg !5642
  br label %cond.end, !dbg !5641

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !5641

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ -1, %cond.false ], !dbg !5641
  store i32 %cond, i32* %fd, align 4, !dbg !5640
  %13 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5644
  %14 = load i32, i32* %start.addr, align 4, !dbg !5645
  %15 = load i32, i32* %i, align 4, !dbg !5646
  %add10 = add i32 %14, %15, !dbg !5647
  %16 = load i32, i32* %fd, align 4, !dbg !5648
  %call = call i32 @do_set_irq_trigger(%struct.dfl_feature* %13, i32 %add10, i32 %16) #11, !dbg !5649
  store i32 %call, i32* %ret, align 4, !dbg !5650
  %17 = load i32, i32* %ret, align 4, !dbg !5651
  %tobool11 = icmp ne i32 %17, 0, !dbg !5651
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !5653

if.then12:                                        ; preds = %cond.end
  br label %while.cond, !dbg !5654

while.cond:                                       ; preds = %while.body, %if.then12
  %18 = load i32, i32* %i, align 4, !dbg !5656
  %dec = add i32 %18, -1, !dbg !5656
  store i32 %dec, i32* %i, align 4, !dbg !5656
  %tobool13 = icmp ne i32 %18, 0, !dbg !5654
  br i1 %tobool13, label %while.body, label %while.end, !dbg !5654

while.body:                                       ; preds = %while.cond
  %19 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5657
  %20 = load i32, i32* %start.addr, align 4, !dbg !5658
  %21 = load i32, i32* %i, align 4, !dbg !5659
  %add14 = add i32 %20, %21, !dbg !5660
  %call15 = call i32 @do_set_irq_trigger(%struct.dfl_feature* %19, i32 %add14, i32 -1) #11, !dbg !5661
  br label %while.cond, !dbg !5654, !llvm.loop !5662

while.end:                                        ; preds = %while.cond
  br label %for.end, !dbg !5664

if.end16:                                         ; preds = %cond.end
  br label %for.inc, !dbg !5665

for.inc:                                          ; preds = %if.end16
  %22 = load i32, i32* %i, align 4, !dbg !5666
  %inc = add i32 %22, 1, !dbg !5666
  store i32 %inc, i32* %i, align 4, !dbg !5666
  br label %for.cond, !dbg !5667, !llvm.loop !5668

for.end:                                          ; preds = %while.end, %for.cond
  %23 = load i32, i32* %ret, align 4, !dbg !5670
  store i32 %23, i32* %retval, align 4, !dbg !5671
  br label %return, !dbg !5671

return:                                           ; preds = %for.end, %if.then5, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !5672
  ret i32 %24, !dbg !5672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_set_irq_trigger(%struct.dfl_feature* %feature, i32 %idx, i32 %fd) #0 !dbg !5673 {
entry:
  %retval = alloca i32, align 4
  %feature.addr = alloca %struct.dfl_feature*, align 8
  %idx.addr = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %pdev = alloca %struct.platform_device*, align 8
  %trigger = alloca %struct.eventfd_ctx*, align 8
  %irq = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.dfl_feature* %feature, %struct.dfl_feature** %feature.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature.addr, metadata !5676, metadata !DIExpression()), !dbg !5677
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !5678, metadata !DIExpression()), !dbg !5679
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !5680, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev, metadata !5682, metadata !DIExpression()), !dbg !5683
  %0 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5684
  %dev = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %0, i32 0, i32 0, !dbg !5685
  %1 = load %struct.platform_device*, %struct.platform_device** %dev, align 8, !dbg !5685
  store %struct.platform_device* %1, %struct.platform_device** %pdev, align 8, !dbg !5683
  call void @llvm.dbg.declare(metadata %struct.eventfd_ctx** %trigger, metadata !5686, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !5688, metadata !DIExpression()), !dbg !5689
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5690, metadata !DIExpression()), !dbg !5691
  %2 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5692
  %irq_ctx = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %2, i32 0, i32 4, !dbg !5693
  %3 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %irq_ctx, align 8, !dbg !5693
  %4 = load i32, i32* %idx.addr, align 4, !dbg !5694
  %idxprom = zext i32 %4 to i64, !dbg !5692
  %arrayidx = getelementptr %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %3, i64 %idxprom, !dbg !5692
  %irq1 = getelementptr inbounds %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %arrayidx, i32 0, i32 0, !dbg !5695
  %5 = load i32, i32* %irq1, align 8, !dbg !5695
  store i32 %5, i32* %irq, align 4, !dbg !5696
  %6 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5697
  %irq_ctx2 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %6, i32 0, i32 4, !dbg !5699
  %7 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %irq_ctx2, align 8, !dbg !5699
  %8 = load i32, i32* %idx.addr, align 4, !dbg !5700
  %idxprom3 = zext i32 %8 to i64, !dbg !5697
  %arrayidx4 = getelementptr %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %7, i64 %idxprom3, !dbg !5697
  %trigger5 = getelementptr inbounds %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %arrayidx4, i32 0, i32 1, !dbg !5701
  %9 = load %struct.eventfd_ctx*, %struct.eventfd_ctx** %trigger5, align 8, !dbg !5701
  %tobool = icmp ne %struct.eventfd_ctx* %9, null, !dbg !5697
  br i1 %tobool, label %if.then, label %if.end, !dbg !5702

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %irq, align 4, !dbg !5703
  %11 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5705
  %irq_ctx6 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %11, i32 0, i32 4, !dbg !5706
  %12 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %irq_ctx6, align 8, !dbg !5706
  %13 = load i32, i32* %idx.addr, align 4, !dbg !5707
  %idxprom7 = zext i32 %13 to i64, !dbg !5705
  %arrayidx8 = getelementptr %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %12, i64 %idxprom7, !dbg !5705
  %trigger9 = getelementptr inbounds %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %arrayidx8, i32 0, i32 1, !dbg !5708
  %14 = load %struct.eventfd_ctx*, %struct.eventfd_ctx** %trigger9, align 8, !dbg !5708
  %15 = bitcast %struct.eventfd_ctx* %14 to i8*, !dbg !5705
  %call = call i8* @free_irq(i32 %10, i8* %15) #11, !dbg !5709
  %16 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5710
  %irq_ctx10 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %16, i32 0, i32 4, !dbg !5711
  %17 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %irq_ctx10, align 8, !dbg !5711
  %18 = load i32, i32* %idx.addr, align 4, !dbg !5712
  %idxprom11 = zext i32 %18 to i64, !dbg !5710
  %arrayidx12 = getelementptr %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %17, i64 %idxprom11, !dbg !5710
  %name = getelementptr inbounds %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %arrayidx12, i32 0, i32 2, !dbg !5713
  %19 = load i8*, i8** %name, align 8, !dbg !5713
  call void @kfree(i8* %19) #11, !dbg !5714
  %20 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5715
  %irq_ctx13 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %20, i32 0, i32 4, !dbg !5716
  %21 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %irq_ctx13, align 8, !dbg !5716
  %22 = load i32, i32* %idx.addr, align 4, !dbg !5717
  %idxprom14 = zext i32 %22 to i64, !dbg !5715
  %arrayidx15 = getelementptr %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %21, i64 %idxprom14, !dbg !5715
  %trigger16 = getelementptr inbounds %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %arrayidx15, i32 0, i32 1, !dbg !5718
  %23 = load %struct.eventfd_ctx*, %struct.eventfd_ctx** %trigger16, align 8, !dbg !5718
  call void @eventfd_ctx_put(%struct.eventfd_ctx* %23) #11, !dbg !5719
  %24 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5720
  %irq_ctx17 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %24, i32 0, i32 4, !dbg !5721
  %25 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %irq_ctx17, align 8, !dbg !5721
  %26 = load i32, i32* %idx.addr, align 4, !dbg !5722
  %idxprom18 = zext i32 %26 to i64, !dbg !5720
  %arrayidx19 = getelementptr %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %25, i64 %idxprom18, !dbg !5720
  %trigger20 = getelementptr inbounds %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %arrayidx19, i32 0, i32 1, !dbg !5723
  store %struct.eventfd_ctx* null, %struct.eventfd_ctx** %trigger20, align 8, !dbg !5724
  br label %if.end, !dbg !5725

if.end:                                           ; preds = %if.then, %entry
  %27 = load i32, i32* %fd.addr, align 4, !dbg !5726
  %cmp = icmp slt i32 %27, 0, !dbg !5728
  br i1 %cmp, label %if.then21, label %if.end22, !dbg !5729

if.then21:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5730
  br label %return, !dbg !5730

if.end22:                                         ; preds = %if.end
  %28 = load i32, i32* %idx.addr, align 4, !dbg !5731
  %29 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !5732
  %dev23 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %29, i32 0, i32 3, !dbg !5733
  %call24 = call i8* @dev_name(%struct.device* %dev23) #11, !dbg !5734
  %30 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5735
  %id = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %30, i32 0, i32 1, !dbg !5736
  %31 = load i16, i16* %id, align 8, !dbg !5736
  %conv = zext i16 %31 to i32, !dbg !5735
  %call25 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i64 0, i64 0), i32 %28, i8* %call24, i32 %conv) #11, !dbg !5737
  %32 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5738
  %irq_ctx26 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %32, i32 0, i32 4, !dbg !5739
  %33 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %irq_ctx26, align 8, !dbg !5739
  %34 = load i32, i32* %idx.addr, align 4, !dbg !5740
  %idxprom27 = zext i32 %34 to i64, !dbg !5738
  %arrayidx28 = getelementptr %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %33, i64 %idxprom27, !dbg !5738
  %name29 = getelementptr inbounds %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %arrayidx28, i32 0, i32 2, !dbg !5741
  store i8* %call25, i8** %name29, align 8, !dbg !5742
  %35 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5743
  %irq_ctx30 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %35, i32 0, i32 4, !dbg !5745
  %36 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %irq_ctx30, align 8, !dbg !5745
  %37 = load i32, i32* %idx.addr, align 4, !dbg !5746
  %idxprom31 = zext i32 %37 to i64, !dbg !5743
  %arrayidx32 = getelementptr %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %36, i64 %idxprom31, !dbg !5743
  %name33 = getelementptr inbounds %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %arrayidx32, i32 0, i32 2, !dbg !5747
  %38 = load i8*, i8** %name33, align 8, !dbg !5747
  %tobool34 = icmp ne i8* %38, null, !dbg !5743
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !5748

if.then35:                                        ; preds = %if.end22
  store i32 -12, i32* %retval, align 4, !dbg !5749
  br label %return, !dbg !5749

if.end36:                                         ; preds = %if.end22
  %39 = load i32, i32* %fd.addr, align 4, !dbg !5750
  %call37 = call %struct.eventfd_ctx* @eventfd_ctx_fdget(i32 %39) #11, !dbg !5751
  store %struct.eventfd_ctx* %call37, %struct.eventfd_ctx** %trigger, align 8, !dbg !5752
  %40 = load %struct.eventfd_ctx*, %struct.eventfd_ctx** %trigger, align 8, !dbg !5753
  %41 = bitcast %struct.eventfd_ctx* %40 to i8*, !dbg !5753
  %call38 = call zeroext i1 @IS_ERR(i8* %41) #11, !dbg !5755
  br i1 %call38, label %if.then39, label %if.end42, !dbg !5756

if.then39:                                        ; preds = %if.end36
  %42 = load %struct.eventfd_ctx*, %struct.eventfd_ctx** %trigger, align 8, !dbg !5757
  %43 = bitcast %struct.eventfd_ctx* %42 to i8*, !dbg !5757
  %call40 = call i64 @PTR_ERR(i8* %43) #11, !dbg !5759
  %conv41 = trunc i64 %call40 to i32, !dbg !5759
  store i32 %conv41, i32* %ret, align 4, !dbg !5760
  br label %free_name, !dbg !5761

if.end42:                                         ; preds = %if.end36
  %44 = load i32, i32* %irq, align 4, !dbg !5762
  %45 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5763
  %irq_ctx43 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %45, i32 0, i32 4, !dbg !5764
  %46 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %irq_ctx43, align 8, !dbg !5764
  %47 = load i32, i32* %idx.addr, align 4, !dbg !5765
  %idxprom44 = zext i32 %47 to i64, !dbg !5763
  %arrayidx45 = getelementptr %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %46, i64 %idxprom44, !dbg !5763
  %name46 = getelementptr inbounds %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %arrayidx45, i32 0, i32 2, !dbg !5766
  %48 = load i8*, i8** %name46, align 8, !dbg !5766
  %49 = load %struct.eventfd_ctx*, %struct.eventfd_ctx** %trigger, align 8, !dbg !5767
  %50 = bitcast %struct.eventfd_ctx* %49 to i8*, !dbg !5767
  %call47 = call i32 @request_irq(i32 %44, i32 (i32, i8*)* @dfl_irq_handler, i64 0, i8* %48, i8* %50) #11, !dbg !5768
  store i32 %call47, i32* %ret, align 4, !dbg !5769
  %51 = load i32, i32* %ret, align 4, !dbg !5770
  %tobool48 = icmp ne i32 %51, 0, !dbg !5770
  br i1 %tobool48, label %if.end54, label %if.then49, !dbg !5772

if.then49:                                        ; preds = %if.end42
  %52 = load %struct.eventfd_ctx*, %struct.eventfd_ctx** %trigger, align 8, !dbg !5773
  %53 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5775
  %irq_ctx50 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %53, i32 0, i32 4, !dbg !5776
  %54 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %irq_ctx50, align 8, !dbg !5776
  %55 = load i32, i32* %idx.addr, align 4, !dbg !5777
  %idxprom51 = zext i32 %55 to i64, !dbg !5775
  %arrayidx52 = getelementptr %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %54, i64 %idxprom51, !dbg !5775
  %trigger53 = getelementptr inbounds %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %arrayidx52, i32 0, i32 1, !dbg !5778
  store %struct.eventfd_ctx* %52, %struct.eventfd_ctx** %trigger53, align 8, !dbg !5779
  %56 = load i32, i32* %ret, align 4, !dbg !5780
  store i32 %56, i32* %retval, align 4, !dbg !5781
  br label %return, !dbg !5781

if.end54:                                         ; preds = %if.end42
  %57 = load %struct.eventfd_ctx*, %struct.eventfd_ctx** %trigger, align 8, !dbg !5782
  call void @eventfd_ctx_put(%struct.eventfd_ctx* %57) #11, !dbg !5783
  br label %free_name, !dbg !5783

free_name:                                        ; preds = %if.end54, %if.then39
  call void @llvm.dbg.label(metadata !5784), !dbg !5785
  %58 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5786
  %irq_ctx55 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %58, i32 0, i32 4, !dbg !5787
  %59 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %irq_ctx55, align 8, !dbg !5787
  %60 = load i32, i32* %idx.addr, align 4, !dbg !5788
  %idxprom56 = zext i32 %60 to i64, !dbg !5786
  %arrayidx57 = getelementptr %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %59, i64 %idxprom56, !dbg !5786
  %name58 = getelementptr inbounds %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %arrayidx57, i32 0, i32 2, !dbg !5789
  %61 = load i8*, i8** %name58, align 8, !dbg !5789
  call void @kfree(i8* %61) #11, !dbg !5790
  %62 = load i32, i32* %ret, align 4, !dbg !5791
  store i32 %62, i32* %retval, align 4, !dbg !5792
  br label %return, !dbg !5792

return:                                           ; preds = %free_name, %if.then49, %if.then35, %if.then21
  %63 = load i32, i32* %retval, align 4, !dbg !5793
  ret i32 %63, !dbg !5793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @dfl_feature_ioctl_get_num_irqs(%struct.platform_device* %pdev, %struct.dfl_feature* %feature, i64 %arg) #0 !dbg !5794 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  %feature.addr = alloca %struct.dfl_feature*, align 8
  %arg.addr = alloca i64, align 8
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp2 = alloca i64, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !5797, metadata !DIExpression()), !dbg !5798
  store %struct.dfl_feature* %feature, %struct.dfl_feature** %feature.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature.addr, metadata !5799, metadata !DIExpression()), !dbg !5800
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !5801, metadata !DIExpression()), !dbg !5802
  call void @might_fault() #11, !dbg !5803
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !5805, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !5808, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !5809, metadata !DIExpression()), !dbg !5807
  %0 = load i64, i64* %arg.addr, align 8, !dbg !5807
  %1 = inttoptr i64 %0 to i32*, !dbg !5807
  %2 = bitcast i32* %1 to i8*, !dbg !5807
  store i8* %2, i8** %__ptr_pu, align 8, !dbg !5807
  %3 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5807
  %nr_irqs = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %3, i32 0, i32 5, !dbg !5807
  %4 = load i32, i32* %nr_irqs, align 8, !dbg !5807
  store i32 %4, i32* %__val_pu, align 4, !dbg !5807
  %5 = call i64 @llvm.read_register.i64(metadata !3954), !dbg !5807
  %6 = load i8*, i8** %__ptr_pu, align 8, !dbg !5807
  %7 = load i32, i32* %__val_pu, align 4, !dbg !5807
  %8 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %6, i32 %7, i64 4, i64 %5) #4, !dbg !5807, !srcloc !5810
  %asmresult = extractvalue { i8*, i64 } %8, 0, !dbg !5807
  %asmresult1 = extractvalue { i8*, i64 } %8, 1, !dbg !5807
  %9 = ptrtoint i8* %asmresult to i64, !dbg !5807
  %10 = trunc i64 %9 to i32, !dbg !5807
  store i32 %10, i32* %__ret_pu, align 4, !dbg !5807
  call void @llvm.write_register.i64(metadata !3954, i64 %asmresult1), !dbg !5807
  %11 = load i32, i32* %__ret_pu, align 4, !dbg !5807
  %conv = sext i32 %11 to i64, !dbg !5807
  store i64 %conv, i64* %tmp2, align 8, !dbg !5807
  %12 = load i64, i64* %tmp2, align 8, !dbg !5807
  store i64 %12, i64* %tmp, align 8, !dbg !5803
  %13 = load i64, i64* %tmp, align 8, !dbg !5803
  ret i64 %13, !dbg !5811
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #0 !dbg !5812 {
entry:
  ret void, !dbg !5814
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #3

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @dfl_feature_ioctl_set_irq(%struct.platform_device* %pdev, %struct.dfl_feature* %feature, i64 %arg) #0 !dbg !5815 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5816, metadata !DIExpression()), !dbg !5821
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5830, metadata !DIExpression()), !dbg !5831
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5832, metadata !DIExpression()), !dbg !5833
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5834, metadata !DIExpression()), !dbg !5835
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5836, metadata !DIExpression()), !dbg !5839
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5840, metadata !DIExpression()), !dbg !5841
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5842, metadata !DIExpression()), !dbg !5843
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5844, metadata !DIExpression()), !dbg !5845
  %retval = alloca i64, align 8
  %pdev.addr = alloca %struct.platform_device*, align 8
  %feature.addr = alloca %struct.dfl_feature*, align 8
  %arg.addr = alloca i64, align 8
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  %hdr = alloca %struct.dfl_fpga_irq_set, align 4
  %fds = alloca i32*, align 8
  %ret = alloca i64, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !5846, metadata !DIExpression()), !dbg !5847
  store %struct.dfl_feature* %feature, %struct.dfl_feature** %feature.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature.addr, metadata !5848, metadata !DIExpression()), !dbg !5849
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !5850, metadata !DIExpression()), !dbg !5851
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !5852, metadata !DIExpression()), !dbg !5853
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !5854
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !5855
  %call = call i8* @dev_get_platdata(%struct.device* %dev) #11, !dbg !5856
  %1 = bitcast i8* %call to %struct.dfl_feature_platform_data*, !dbg !5856
  store %struct.dfl_feature_platform_data* %1, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5853
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_irq_set* %hdr, metadata !5857, metadata !DIExpression()), !dbg !5865
  call void @llvm.dbg.declare(metadata i32** %fds, metadata !5866, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !5869, metadata !DIExpression()), !dbg !5870
  %2 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5871
  %nr_irqs = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %2, i32 0, i32 5, !dbg !5873
  %3 = load i32, i32* %nr_irqs, align 8, !dbg !5873
  %tobool = icmp ne i32 %3, 0, !dbg !5871
  br i1 %tobool, label %if.end, label %if.then, !dbg !5874

if.then:                                          ; preds = %entry
  store i64 -2, i64* %retval, align 8, !dbg !5875
  br label %return, !dbg !5875

if.end:                                           ; preds = %entry
  %4 = bitcast %struct.dfl_fpga_irq_set* %hdr to i8*, !dbg !5876
  %5 = load i64, i64* %arg.addr, align 8, !dbg !5877
  %6 = inttoptr i64 %5 to i8*, !dbg !5878
  store i8* %4, i8** %to.addr.i, align 8
  store i8* %6, i8** %from.addr.i, align 8
  store i64 8, i64* %n.addr.i, align 8
  %7 = load i8*, i8** %to.addr.i, align 8, !dbg !5879
  %8 = load i64, i64* %n.addr.i, align 8, !dbg !5879
  store i8* %7, i8** %addr.addr.i.i, align 8
  store i64 %8, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !5835
  %9 = load i32, i32* %sz.i.i, align 4, !dbg !5880
  %cmp.i.i = icmp sge i32 %9, 0, !dbg !5880
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !5880

land.rhs.i.i:                                     ; preds = %if.end
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !5880
  %conv.i.i = sext i32 %10 to i64, !dbg !5880
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5880
  %cmp1.i.i = icmp ult i64 %conv.i.i, %11, !dbg !5880
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %12 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !5882
  %lnot.i.i = xor i1 %12, true, !dbg !5880
  %lnot.ext.i.i = zext i1 %12 to i32, !dbg !5880
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5880
  br i1 %12, label %if.then.i.i, label %if.end10.i.i, !dbg !5883

if.then.i.i:                                      ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5884
  %14 = call i1 @llvm.is.constant.i64(i64 %13) #4, !dbg !5887
  br i1 %14, label %if.else.i.i, label %if.then5.i.i, !dbg !5888

if.then5.i.i:                                     ; preds = %if.then.i.i
  %15 = load i32, i32* %sz.i.i, align 4, !dbg !5889
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5890
  call void @copy_overflow(i32 %15, i64 %16) #13, !dbg !5891
  br label %if.end9.i.i, !dbg !5891

if.else.i.i:                                      ; preds = %if.then.i.i
  %17 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !5892
  %tobool6.i.i = trunc i8 %17 to i1, !dbg !5892
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !5894

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !5895
  br label %if.end.i.i, !dbg !5895

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !5896
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !5897
  br label %check_copy_size.exit.i, !dbg !5897

if.end10.i.i:                                     ; preds = %land.end.i.i
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5839
  %cmp11.i.i = icmp ugt i64 %18, 2147483647, !dbg !5839
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !5839
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !5839
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !5839
  %19 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !5898
  %tobool17.i.i = icmp ne i32 %19, 0, !dbg !5898
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !5898
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !5898
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !5898
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !5839

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.28, i64 0, i64 0), i32 150, i32 2307, i64 12) #4, !dbg !5900, !srcloc !5903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #4, !dbg !5904, !srcloc !5906
  br label %if.end31.i.i, !dbg !5907

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %20 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !5839
  %tobool32.i.i = icmp ne i32 %20, 0, !dbg !5839
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !5839
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !5839
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !5839
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !5898
  %21 = load i64, i64* %tmp.i.i, align 8, !dbg !5839
  %tobool38.i.i = icmp ne i64 %21, 0, !dbg !5908
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !5909

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !5910
  br label %check_copy_size.exit.i, !dbg !5910

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %22 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !5911
  %23 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5912
  %24 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !5913
  %tobool41.i.i = trunc i8 %24 to i1, !dbg !5913
  call void @check_object_size(i8* %22, i64 %23, i1 zeroext %tobool41.i.i) #13, !dbg !5914
  store i1 true, i1* %retval.i.i, align 1, !dbg !5915
  br label %check_copy_size.exit.i, !dbg !5915

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %25 = load i1, i1* %retval.i.i, align 1, !dbg !5916
  %lnot.i = xor i1 %25, true, !dbg !5879
  %lnot.ext.i = zext i1 %25 to i32, !dbg !5879
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !5879
  br i1 %25, label %if.then.i, label %copy_from_user.exit, !dbg !5917

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %26 = load i8*, i8** %to.addr.i, align 8, !dbg !5918
  %27 = load i8*, i8** %from.addr.i, align 8, !dbg !5919
  %28 = load i64, i64* %n.addr.i, align 8, !dbg !5920
  %call2.i = call i64 @_copy_from_user(i8* %26, i8* %27, i64 %28) #13, !dbg !5921
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !5922
  br label %copy_from_user.exit, !dbg !5923

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %29 = load i64, i64* %n.addr.i, align 8, !dbg !5924
  %tobool2 = icmp ne i64 %29, 0, !dbg !5925
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5926

if.then3:                                         ; preds = %copy_from_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !5927
  br label %return, !dbg !5927

if.end4:                                          ; preds = %copy_from_user.exit
  %count = getelementptr inbounds %struct.dfl_fpga_irq_set, %struct.dfl_fpga_irq_set* %hdr, i32 0, i32 1, !dbg !5928
  %30 = load i32, i32* %count, align 4, !dbg !5928
  %tobool5 = icmp ne i32 %30, 0, !dbg !5930
  br i1 %tobool5, label %lor.lhs.false, label %if.then14, !dbg !5931

lor.lhs.false:                                    ; preds = %if.end4
  %start = getelementptr inbounds %struct.dfl_fpga_irq_set, %struct.dfl_fpga_irq_set* %hdr, i32 0, i32 0, !dbg !5932
  %31 = load i32, i32* %start, align 4, !dbg !5932
  %count6 = getelementptr inbounds %struct.dfl_fpga_irq_set, %struct.dfl_fpga_irq_set* %hdr, i32 0, i32 1, !dbg !5933
  %32 = load i32, i32* %count6, align 4, !dbg !5933
  %add = add i32 %31, %32, !dbg !5934
  %33 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5935
  %nr_irqs7 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %33, i32 0, i32 5, !dbg !5936
  %34 = load i32, i32* %nr_irqs7, align 8, !dbg !5936
  %cmp = icmp ugt i32 %add, %34, !dbg !5937
  br i1 %cmp, label %if.then14, label %lor.lhs.false8, !dbg !5938

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %start9 = getelementptr inbounds %struct.dfl_fpga_irq_set, %struct.dfl_fpga_irq_set* %hdr, i32 0, i32 0, !dbg !5939
  %35 = load i32, i32* %start9, align 4, !dbg !5939
  %count10 = getelementptr inbounds %struct.dfl_fpga_irq_set, %struct.dfl_fpga_irq_set* %hdr, i32 0, i32 1, !dbg !5940
  %36 = load i32, i32* %count10, align 4, !dbg !5940
  %add11 = add i32 %35, %36, !dbg !5941
  %start12 = getelementptr inbounds %struct.dfl_fpga_irq_set, %struct.dfl_fpga_irq_set* %hdr, i32 0, i32 0, !dbg !5942
  %37 = load i32, i32* %start12, align 4, !dbg !5942
  %cmp13 = icmp ult i32 %add11, %37, !dbg !5943
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5944

if.then14:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %if.end4
  store i64 -22, i64* %retval, align 8, !dbg !5945
  br label %return, !dbg !5945

if.end15:                                         ; preds = %lor.lhs.false8
  %38 = load i64, i64* %arg.addr, align 8, !dbg !5946
  %add16 = add i64 %38, 8, !dbg !5947
  %39 = inttoptr i64 %add16 to i8*, !dbg !5948
  %count17 = getelementptr inbounds %struct.dfl_fpga_irq_set, %struct.dfl_fpga_irq_set* %hdr, i32 0, i32 1, !dbg !5949
  %40 = load i32, i32* %count17, align 4, !dbg !5949
  %conv = zext i32 %40 to i64, !dbg !5950
  %mul = mul i64 %conv, 4, !dbg !5951
  %call18 = call i8* @memdup_user(i8* %39, i64 %mul) #11, !dbg !5952
  %41 = bitcast i8* %call18 to i32*, !dbg !5952
  store i32* %41, i32** %fds, align 8, !dbg !5953
  %42 = load i32*, i32** %fds, align 8, !dbg !5954
  %43 = bitcast i32* %42 to i8*, !dbg !5954
  %call19 = call zeroext i1 @IS_ERR(i8* %43) #11, !dbg !5956
  br i1 %call19, label %if.then20, label %if.end22, !dbg !5957

if.then20:                                        ; preds = %if.end15
  %44 = load i32*, i32** %fds, align 8, !dbg !5958
  %45 = bitcast i32* %44 to i8*, !dbg !5958
  %call21 = call i64 @PTR_ERR(i8* %45) #11, !dbg !5959
  store i64 %call21, i64* %retval, align 8, !dbg !5960
  br label %return, !dbg !5960

if.end22:                                         ; preds = %if.end15
  %46 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5961
  %lock = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %46, i32 0, i32 1, !dbg !5962
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !5963
  %47 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !5964
  %start23 = getelementptr inbounds %struct.dfl_fpga_irq_set, %struct.dfl_fpga_irq_set* %hdr, i32 0, i32 0, !dbg !5965
  %48 = load i32, i32* %start23, align 4, !dbg !5965
  %count24 = getelementptr inbounds %struct.dfl_fpga_irq_set, %struct.dfl_fpga_irq_set* %hdr, i32 0, i32 1, !dbg !5966
  %49 = load i32, i32* %count24, align 4, !dbg !5966
  %50 = load i32*, i32** %fds, align 8, !dbg !5967
  %call25 = call i32 @dfl_fpga_set_irq_triggers(%struct.dfl_feature* %47, i32 %48, i32 %49, i32* %50) #11, !dbg !5968
  %conv26 = sext i32 %call25 to i64, !dbg !5968
  store i64 %conv26, i64* %ret, align 8, !dbg !5969
  %51 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !5970
  %lock27 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %51, i32 0, i32 1, !dbg !5971
  call void @mutex_unlock(%struct.mutex* %lock27) #11, !dbg !5972
  %52 = load i32*, i32** %fds, align 8, !dbg !5973
  %53 = bitcast i32* %52 to i8*, !dbg !5973
  call void @kfree(i8* %53) #11, !dbg !5974
  %54 = load i64, i64* %ret, align 8, !dbg !5975
  store i64 %54, i64* %retval, align 8, !dbg !5976
  br label %return, !dbg !5976

return:                                           ; preds = %if.end22, %if.then20, %if.then14, %if.then3, %if.then
  %55 = load i64, i64* %retval, align 8, !dbg !5977
  ret i64 %55, !dbg !5977
}

; Function Attrs: noredzone
declare dso_local i8* @memdup_user(i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !5978 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5981, metadata !DIExpression()), !dbg !5982
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5983
  %1 = ptrtoint i8* %0 to i64, !dbg !5983
  %2 = inttoptr i64 %1 to i8*, !dbg !5983
  %3 = ptrtoint i8* %2 to i64, !dbg !5983
  %cmp = icmp uge i64 %3, -4095, !dbg !5983
  %lnot = xor i1 %cmp, true, !dbg !5983
  %lnot1 = xor i1 %lnot, true, !dbg !5983
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5983
  %conv = sext i32 %lnot.ext to i64, !dbg !5983
  %tobool = icmp ne i64 %conv, 0, !dbg !5983
  ret i1 %tobool, !dbg !5984
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !5985 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5988, metadata !DIExpression()), !dbg !5989
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5990
  %1 = ptrtoint i8* %0 to i64, !dbg !5991
  ret i64 %1, !dbg !5992
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @dfl_fpga_exit() #5 section ".exit.text" !dbg !5993 {
entry:
  call void @dfl_chardev_uinit() #11, !dbg !5994
  call void @dfl_ids_destroy() #11, !dbg !5995
  call void @bus_unregister(%struct.bus_type* @dfl_bus_type) #11, !dbg !5996
  ret void, !dbg !5997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dfl_chardev_uinit() #0 !dbg !5998 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5999, metadata !DIExpression()), !dbg !6000
  store i32 0, i32* %i, align 4, !dbg !6001
  br label %for.cond, !dbg !6003

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6004
  %cmp = icmp slt i32 %0, 2, !dbg !6006
  br i1 %cmp, label %for.body, label %for.end, !dbg !6007

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !6008
  %idxprom = sext i32 %1 to i64, !dbg !6008
  %arrayidx = getelementptr [2 x %struct.dfl_chardev_info], [2 x %struct.dfl_chardev_info]* @dfl_chrdevs, i64 0, i64 %idxprom, !dbg !6008
  %devt = getelementptr inbounds %struct.dfl_chardev_info, %struct.dfl_chardev_info* %arrayidx, i32 0, i32 1, !dbg !6008
  %2 = load i32, i32* %devt, align 8, !dbg !6008
  %shr = lshr i32 %2, 20, !dbg !6008
  %tobool = icmp ne i32 %shr, 0, !dbg !6008
  br i1 %tobool, label %if.then, label %if.end, !dbg !6010

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !6011
  %idxprom1 = sext i32 %3 to i64, !dbg !6013
  %arrayidx2 = getelementptr [2 x %struct.dfl_chardev_info], [2 x %struct.dfl_chardev_info]* @dfl_chrdevs, i64 0, i64 %idxprom1, !dbg !6013
  %devt3 = getelementptr inbounds %struct.dfl_chardev_info, %struct.dfl_chardev_info* %arrayidx2, i32 0, i32 1, !dbg !6014
  %4 = load i32, i32* %devt3, align 8, !dbg !6014
  call void @unregister_chrdev_region(i32 %4, i32 1048576) #11, !dbg !6015
  %5 = load i32, i32* %i, align 4, !dbg !6016
  %idxprom4 = sext i32 %5 to i64, !dbg !6017
  %arrayidx5 = getelementptr [2 x %struct.dfl_chardev_info], [2 x %struct.dfl_chardev_info]* @dfl_chrdevs, i64 0, i64 %idxprom4, !dbg !6017
  %devt6 = getelementptr inbounds %struct.dfl_chardev_info, %struct.dfl_chardev_info* %arrayidx5, i32 0, i32 1, !dbg !6018
  store i32 0, i32* %devt6, align 8, !dbg !6019
  br label %if.end, !dbg !6020

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6008

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !6021
  %inc = add i32 %6, 1, !dbg !6021
  store i32 %inc, i32* %i, align 4, !dbg !6021
  br label %for.cond, !dbg !6022, !llvm.loop !6023

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dfl_ids_destroy() #0 !dbg !6026 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6027, metadata !DIExpression()), !dbg !6028
  store i32 0, i32* %i, align 4, !dbg !6029
  br label %for.cond, !dbg !6031

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6032
  %conv = sext i32 %0 to i64, !dbg !6032
  %cmp = icmp ult i64 %conv, 2, !dbg !6034
  br i1 %cmp, label %for.body, label %for.end, !dbg !6035

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !6036
  %idxprom = sext i32 %1 to i64, !dbg !6037
  %arrayidx = getelementptr [2 x %struct.dfl_dev_info], [2 x %struct.dfl_dev_info]* @dfl_devs, i64 0, i64 %idxprom, !dbg !6037
  %id = getelementptr inbounds %struct.dfl_dev_info, %struct.dfl_dev_info* %arrayidx, i32 0, i32 2, !dbg !6038
  call void @idr_destroy(%struct.idr* %id) #11, !dbg !6039
  br label %for.inc, !dbg !6039

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !6040
  %inc = add i32 %2, 1, !dbg !6040
  store i32 %inc, i32* %i, align 4, !dbg !6040
  br label %for.cond, !dbg !6041, !llvm.loop !6042

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6044
}

; Function Attrs: noredzone
declare dso_local void @bus_unregister(%struct.bus_type*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @dfl_fpga_init() #5 section ".init.text" !dbg !6045 {
entry:
  %retval = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6048, metadata !DIExpression()), !dbg !6049
  %call = call i32 @bus_register(%struct.bus_type* @dfl_bus_type) #11, !dbg !6050
  store i32 %call, i32* %ret, align 4, !dbg !6051
  %0 = load i32, i32* %ret, align 4, !dbg !6052
  %tobool = icmp ne i32 %0, 0, !dbg !6052
  br i1 %tobool, label %if.then, label %if.end, !dbg !6054

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ret, align 4, !dbg !6055
  store i32 %1, i32* %retval, align 4, !dbg !6056
  br label %return, !dbg !6056

if.end:                                           ; preds = %entry
  call void @dfl_ids_init() #11, !dbg !6057
  %call1 = call i32 @dfl_chardev_init() #11, !dbg !6058
  store i32 %call1, i32* %ret, align 4, !dbg !6059
  %2 = load i32, i32* %ret, align 4, !dbg !6060
  %tobool2 = icmp ne i32 %2, 0, !dbg !6060
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6062

if.then3:                                         ; preds = %if.end
  call void @dfl_ids_destroy() #11, !dbg !6063
  call void @bus_unregister(%struct.bus_type* @dfl_bus_type) #11, !dbg !6065
  br label %if.end4, !dbg !6066

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i32, i32* %ret, align 4, !dbg !6067
  store i32 %3, i32* %retval, align 4, !dbg !6068
  br label %return, !dbg !6068

return:                                           ; preds = %if.end4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !6069
  ret i32 %4, !dbg !6069
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !6070 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6073, metadata !DIExpression()), !dbg !6074
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !6075, metadata !DIExpression()), !dbg !6076
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !6077, metadata !DIExpression()), !dbg !6078
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6079
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6081
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6082
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !6083
  br i1 %call, label %if.end, label %if.then, !dbg !6084

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !6085

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6086
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6087
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !6088
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !6089
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6090
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6091
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !6092
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !6093
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6094
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6095
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !6096
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !6097
  br label %do.body, !dbg !6098

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !6099

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !6101

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !6099

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6103
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6103
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !6103
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !6103
  br label %do.end7, !dbg !6103

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !6099

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !6105
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !6106 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6109, metadata !DIExpression()), !dbg !6110
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !6111, metadata !DIExpression()), !dbg !6112
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !6113, metadata !DIExpression()), !dbg !6114
  ret i1 true, !dbg !6115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !6116 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6117, metadata !DIExpression()), !dbg !6118
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6119
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !6121
  br i1 %call, label %if.end, label %if.then, !dbg !6122

if.then:                                          ; preds = %entry
  br label %return, !dbg !6123

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6124
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6125
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !6125
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6126
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !6127
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6127
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !6128
  br label %return, !dbg !6129

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6129
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !6130 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6133, metadata !DIExpression()), !dbg !6134
  ret i1 true, !dbg !6135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !6136 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !6137, metadata !DIExpression()), !dbg !6138
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !6139, metadata !DIExpression()), !dbg !6140
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6141
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6142
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6143
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !6144
  br label %do.body, !dbg !6145

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !6146

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !6148

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !6146

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6150
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6150
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !6150
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !6150
  br label %do.end5, !dbg !6150

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !6146

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !6152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dfl_bus_match(%struct.device* %dev, %struct.device_driver* %drv) #0 !dbg !6153 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %drv.addr = alloca %struct.device_driver*, align 8
  %ddev = alloca %struct.dfl_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_device*, align 8
  %ddrv = alloca %struct.dfl_driver*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.dfl_driver*, align 8
  %id_entry = alloca %struct.dfl_device_id*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6154, metadata !DIExpression()), !dbg !6155
  store %struct.device_driver* %drv, %struct.device_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_driver** %drv.addr, metadata !6156, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.declare(metadata %struct.dfl_device** %ddev, metadata !6158, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6160, metadata !DIExpression()), !dbg !6162
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6162
  %1 = bitcast %struct.device* %0 to i8*, !dbg !6162
  store i8* %1, i8** %__mptr, align 8, !dbg !6162
  br label %do.body, !dbg !6162

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6163

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6162
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6162
  %3 = bitcast i8* %add.ptr to %struct.dfl_device*, !dbg !6162
  store %struct.dfl_device* %3, %struct.dfl_device** %tmp, align 8, !dbg !6163
  %4 = load %struct.dfl_device*, %struct.dfl_device** %tmp, align 8, !dbg !6162
  store %struct.dfl_device* %4, %struct.dfl_device** %ddev, align 8, !dbg !6159
  call void @llvm.dbg.declare(metadata %struct.dfl_driver** %ddrv, metadata !6165, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !6167, metadata !DIExpression()), !dbg !6169
  %5 = load %struct.device_driver*, %struct.device_driver** %drv.addr, align 8, !dbg !6169
  %6 = bitcast %struct.device_driver* %5 to i8*, !dbg !6169
  store i8* %6, i8** %__mptr1, align 8, !dbg !6169
  br label %do.body2, !dbg !6169

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !6170

do.end3:                                          ; preds = %do.body2
  %7 = load i8*, i8** %__mptr1, align 8, !dbg !6169
  %add.ptr5 = getelementptr i8, i8* %7, i64 0, !dbg !6169
  %8 = bitcast i8* %add.ptr5 to %struct.dfl_driver*, !dbg !6169
  store %struct.dfl_driver* %8, %struct.dfl_driver** %tmp4, align 8, !dbg !6170
  %9 = load %struct.dfl_driver*, %struct.dfl_driver** %tmp4, align 8, !dbg !6169
  store %struct.dfl_driver* %9, %struct.dfl_driver** %ddrv, align 8, !dbg !6166
  call void @llvm.dbg.declare(metadata %struct.dfl_device_id** %id_entry, metadata !6172, metadata !DIExpression()), !dbg !6173
  %10 = load %struct.dfl_driver*, %struct.dfl_driver** %ddrv, align 8, !dbg !6174
  %id_table = getelementptr inbounds %struct.dfl_driver, %struct.dfl_driver* %10, i32 0, i32 1, !dbg !6175
  %11 = load %struct.dfl_device_id*, %struct.dfl_device_id** %id_table, align 8, !dbg !6175
  store %struct.dfl_device_id* %11, %struct.dfl_device_id** %id_entry, align 8, !dbg !6176
  %12 = load %struct.dfl_device_id*, %struct.dfl_device_id** %id_entry, align 8, !dbg !6177
  %tobool = icmp ne %struct.dfl_device_id* %12, null, !dbg !6177
  br i1 %tobool, label %if.then, label %if.end10, !dbg !6179

if.then:                                          ; preds = %do.end3
  br label %while.cond, !dbg !6180

while.cond:                                       ; preds = %if.end, %if.then
  %13 = load %struct.dfl_device_id*, %struct.dfl_device_id** %id_entry, align 8, !dbg !6182
  %feature_id = getelementptr inbounds %struct.dfl_device_id, %struct.dfl_device_id* %13, i32 0, i32 1, !dbg !6183
  %14 = load i16, i16* %feature_id, align 2, !dbg !6183
  %tobool6 = icmp ne i16 %14, 0, !dbg !6180
  br i1 %tobool6, label %while.body, label %while.end, !dbg !6180

while.body:                                       ; preds = %while.cond
  %15 = load %struct.dfl_device_id*, %struct.dfl_device_id** %id_entry, align 8, !dbg !6184
  %16 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6187
  %call = call %struct.dfl_device_id* @dfl_match_one_device(%struct.dfl_device_id* %15, %struct.dfl_device* %16) #11, !dbg !6188
  %tobool7 = icmp ne %struct.dfl_device_id* %call, null, !dbg !6188
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !6189

if.then8:                                         ; preds = %while.body
  %17 = load %struct.dfl_device_id*, %struct.dfl_device_id** %id_entry, align 8, !dbg !6190
  %18 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6192
  %id_entry9 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %18, i32 0, i32 8, !dbg !6193
  store %struct.dfl_device_id* %17, %struct.dfl_device_id** %id_entry9, align 8, !dbg !6194
  store i32 1, i32* %retval, align 4, !dbg !6195
  br label %return, !dbg !6195

if.end:                                           ; preds = %while.body
  %19 = load %struct.dfl_device_id*, %struct.dfl_device_id** %id_entry, align 8, !dbg !6196
  %incdec.ptr = getelementptr %struct.dfl_device_id, %struct.dfl_device_id* %19, i32 1, !dbg !6196
  store %struct.dfl_device_id* %incdec.ptr, %struct.dfl_device_id** %id_entry, align 8, !dbg !6196
  br label %while.cond, !dbg !6180, !llvm.loop !6197

while.end:                                        ; preds = %while.cond
  br label %if.end10, !dbg !6199

if.end10:                                         ; preds = %while.end, %do.end3
  store i32 0, i32* %retval, align 4, !dbg !6200
  br label %return, !dbg !6200

return:                                           ; preds = %if.end10, %if.then8
  %20 = load i32, i32* %retval, align 4, !dbg !6201
  ret i32 %20, !dbg !6201
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dfl_bus_uevent(%struct.device* %dev, %struct.kobj_uevent_env* %env) #0 !dbg !6202 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %env.addr = alloca %struct.kobj_uevent_env*, align 8
  %ddev = alloca %struct.dfl_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6203, metadata !DIExpression()), !dbg !6204
  store %struct.kobj_uevent_env* %env, %struct.kobj_uevent_env** %env.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobj_uevent_env** %env.addr, metadata !6205, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.declare(metadata %struct.dfl_device** %ddev, metadata !6207, metadata !DIExpression()), !dbg !6208
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6209, metadata !DIExpression()), !dbg !6211
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6211
  %1 = bitcast %struct.device* %0 to i8*, !dbg !6211
  store i8* %1, i8** %__mptr, align 8, !dbg !6211
  br label %do.body, !dbg !6211

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6212

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6211
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6211
  %3 = bitcast i8* %add.ptr to %struct.dfl_device*, !dbg !6211
  store %struct.dfl_device* %3, %struct.dfl_device** %tmp, align 8, !dbg !6212
  %4 = load %struct.dfl_device*, %struct.dfl_device** %tmp, align 8, !dbg !6211
  store %struct.dfl_device* %4, %struct.dfl_device** %ddev, align 8, !dbg !6208
  %5 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !6214
  %6 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6215
  %type = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %6, i32 0, i32 2, !dbg !6216
  %7 = load i8, i8* %type, align 4, !dbg !6216
  %conv = zext i8 %7 to i32, !dbg !6215
  %8 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6217
  %feature_id = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %8, i32 0, i32 3, !dbg !6218
  %9 = load i16, i16* %feature_id, align 2, !dbg !6218
  %conv1 = zext i16 %9 to i32, !dbg !6217
  %call = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %conv, i32 %conv1) #11, !dbg !6219
  ret i32 %call, !dbg !6220
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dfl_bus_probe(%struct.device* %dev) #0 !dbg !6221 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ddrv = alloca %struct.dfl_driver*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_driver*, align 8
  %ddev = alloca %struct.dfl_device*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.dfl_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6222, metadata !DIExpression()), !dbg !6223
  call void @llvm.dbg.declare(metadata %struct.dfl_driver** %ddrv, metadata !6224, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6226, metadata !DIExpression()), !dbg !6228
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6228
  %driver = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 6, !dbg !6228
  %1 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !6228
  %2 = bitcast %struct.device_driver* %1 to i8*, !dbg !6228
  store i8* %2, i8** %__mptr, align 8, !dbg !6228
  br label %do.body, !dbg !6228

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6229

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !6228
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !6228
  %4 = bitcast i8* %add.ptr to %struct.dfl_driver*, !dbg !6228
  store %struct.dfl_driver* %4, %struct.dfl_driver** %tmp, align 8, !dbg !6229
  %5 = load %struct.dfl_driver*, %struct.dfl_driver** %tmp, align 8, !dbg !6228
  store %struct.dfl_driver* %5, %struct.dfl_driver** %ddrv, align 8, !dbg !6225
  call void @llvm.dbg.declare(metadata %struct.dfl_device** %ddev, metadata !6231, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !6233, metadata !DIExpression()), !dbg !6235
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6235
  %7 = bitcast %struct.device* %6 to i8*, !dbg !6235
  store i8* %7, i8** %__mptr1, align 8, !dbg !6235
  br label %do.body2, !dbg !6235

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !6236

do.end3:                                          ; preds = %do.body2
  %8 = load i8*, i8** %__mptr1, align 8, !dbg !6235
  %add.ptr5 = getelementptr i8, i8* %8, i64 0, !dbg !6235
  %9 = bitcast i8* %add.ptr5 to %struct.dfl_device*, !dbg !6235
  store %struct.dfl_device* %9, %struct.dfl_device** %tmp4, align 8, !dbg !6236
  %10 = load %struct.dfl_device*, %struct.dfl_device** %tmp4, align 8, !dbg !6235
  store %struct.dfl_device* %10, %struct.dfl_device** %ddev, align 8, !dbg !6232
  %11 = load %struct.dfl_driver*, %struct.dfl_driver** %ddrv, align 8, !dbg !6238
  %probe = getelementptr inbounds %struct.dfl_driver, %struct.dfl_driver* %11, i32 0, i32 2, !dbg !6239
  %12 = load i32 (%struct.dfl_device*)*, i32 (%struct.dfl_device*)** %probe, align 8, !dbg !6239
  %13 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6240
  %call = call i32 %12(%struct.dfl_device* %13) #11, !dbg !6238
  ret i32 %call, !dbg !6241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dfl_bus_remove(%struct.device* %dev) #0 !dbg !6242 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ddrv = alloca %struct.dfl_driver*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_driver*, align 8
  %ddev = alloca %struct.dfl_device*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.dfl_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6243, metadata !DIExpression()), !dbg !6244
  call void @llvm.dbg.declare(metadata %struct.dfl_driver** %ddrv, metadata !6245, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6247, metadata !DIExpression()), !dbg !6249
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6249
  %driver = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 6, !dbg !6249
  %1 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !6249
  %2 = bitcast %struct.device_driver* %1 to i8*, !dbg !6249
  store i8* %2, i8** %__mptr, align 8, !dbg !6249
  br label %do.body, !dbg !6249

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6250

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !6249
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !6249
  %4 = bitcast i8* %add.ptr to %struct.dfl_driver*, !dbg !6249
  store %struct.dfl_driver* %4, %struct.dfl_driver** %tmp, align 8, !dbg !6250
  %5 = load %struct.dfl_driver*, %struct.dfl_driver** %tmp, align 8, !dbg !6249
  store %struct.dfl_driver* %5, %struct.dfl_driver** %ddrv, align 8, !dbg !6246
  call void @llvm.dbg.declare(metadata %struct.dfl_device** %ddev, metadata !6252, metadata !DIExpression()), !dbg !6253
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !6254, metadata !DIExpression()), !dbg !6256
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6256
  %7 = bitcast %struct.device* %6 to i8*, !dbg !6256
  store i8* %7, i8** %__mptr1, align 8, !dbg !6256
  br label %do.body2, !dbg !6256

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !6257

do.end3:                                          ; preds = %do.body2
  %8 = load i8*, i8** %__mptr1, align 8, !dbg !6256
  %add.ptr5 = getelementptr i8, i8* %8, i64 0, !dbg !6256
  %9 = bitcast i8* %add.ptr5 to %struct.dfl_device*, !dbg !6256
  store %struct.dfl_device* %9, %struct.dfl_device** %tmp4, align 8, !dbg !6257
  %10 = load %struct.dfl_device*, %struct.dfl_device** %tmp4, align 8, !dbg !6256
  store %struct.dfl_device* %10, %struct.dfl_device** %ddev, align 8, !dbg !6253
  %11 = load %struct.dfl_driver*, %struct.dfl_driver** %ddrv, align 8, !dbg !6259
  %remove = getelementptr inbounds %struct.dfl_driver, %struct.dfl_driver* %11, i32 0, i32 3, !dbg !6261
  %12 = load void (%struct.dfl_device*)*, void (%struct.dfl_device*)** %remove, align 8, !dbg !6261
  %tobool = icmp ne void (%struct.dfl_device*)* %12, null, !dbg !6259
  br i1 %tobool, label %if.then, label %if.end, !dbg !6262

if.then:                                          ; preds = %do.end3
  %13 = load %struct.dfl_driver*, %struct.dfl_driver** %ddrv, align 8, !dbg !6263
  %remove6 = getelementptr inbounds %struct.dfl_driver, %struct.dfl_driver* %13, i32 0, i32 3, !dbg !6264
  %14 = load void (%struct.dfl_device*)*, void (%struct.dfl_device*)** %remove6, align 8, !dbg !6264
  %15 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6265
  call void %14(%struct.dfl_device* %15) #11, !dbg !6263
  br label %if.end, !dbg !6263

if.end:                                           ; preds = %if.then, %do.end3
  ret i32 0, !dbg !6266
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @type_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !6267 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ddev = alloca %struct.dfl_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6268, metadata !DIExpression()), !dbg !6269
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6270, metadata !DIExpression()), !dbg !6271
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6272, metadata !DIExpression()), !dbg !6273
  call void @llvm.dbg.declare(metadata %struct.dfl_device** %ddev, metadata !6274, metadata !DIExpression()), !dbg !6275
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6276, metadata !DIExpression()), !dbg !6278
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6278
  %1 = bitcast %struct.device* %0 to i8*, !dbg !6278
  store i8* %1, i8** %__mptr, align 8, !dbg !6278
  br label %do.body, !dbg !6278

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6279

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6278
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6278
  %3 = bitcast i8* %add.ptr to %struct.dfl_device*, !dbg !6278
  store %struct.dfl_device* %3, %struct.dfl_device** %tmp, align 8, !dbg !6279
  %4 = load %struct.dfl_device*, %struct.dfl_device** %tmp, align 8, !dbg !6278
  store %struct.dfl_device* %4, %struct.dfl_device** %ddev, align 8, !dbg !6275
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !6281
  %6 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6282
  %type = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %6, i32 0, i32 2, !dbg !6283
  %7 = load i8, i8* %type, align 4, !dbg !6283
  %conv = zext i8 %7 to i32, !dbg !6282
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 %conv) #11, !dbg !6284
  %conv1 = sext i32 %call to i64, !dbg !6284
  ret i64 %conv1, !dbg !6285
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @feature_id_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !6286 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ddev = alloca %struct.dfl_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6287, metadata !DIExpression()), !dbg !6288
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6289, metadata !DIExpression()), !dbg !6290
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6291, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.declare(metadata %struct.dfl_device** %ddev, metadata !6293, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6295, metadata !DIExpression()), !dbg !6297
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6297
  %1 = bitcast %struct.device* %0 to i8*, !dbg !6297
  store i8* %1, i8** %__mptr, align 8, !dbg !6297
  br label %do.body, !dbg !6297

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6298

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6297
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6297
  %3 = bitcast i8* %add.ptr to %struct.dfl_device*, !dbg !6297
  store %struct.dfl_device* %3, %struct.dfl_device** %tmp, align 8, !dbg !6298
  %4 = load %struct.dfl_device*, %struct.dfl_device** %tmp, align 8, !dbg !6297
  store %struct.dfl_device* %4, %struct.dfl_device** %ddev, align 8, !dbg !6294
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !6300
  %6 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6301
  %feature_id = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %6, i32 0, i32 3, !dbg !6302
  %7 = load i16, i16* %feature_id, align 2, !dbg !6302
  %conv = zext i16 %7 to i32, !dbg !6301
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 %conv) #11, !dbg !6303
  %conv1 = sext i32 %call to i64, !dbg !6303
  ret i64 %conv1, !dbg !6304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dfl_device_id* @dfl_match_one_device(%struct.dfl_device_id* %id, %struct.dfl_device* %ddev) #0 !dbg !6305 {
entry:
  %retval = alloca %struct.dfl_device_id*, align 8
  %id.addr = alloca %struct.dfl_device_id*, align 8
  %ddev.addr = alloca %struct.dfl_device*, align 8
  store %struct.dfl_device_id* %id, %struct.dfl_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_device_id** %id.addr, metadata !6308, metadata !DIExpression()), !dbg !6309
  store %struct.dfl_device* %ddev, %struct.dfl_device** %ddev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_device** %ddev.addr, metadata !6310, metadata !DIExpression()), !dbg !6311
  %0 = load %struct.dfl_device_id*, %struct.dfl_device_id** %id.addr, align 8, !dbg !6312
  %type = getelementptr inbounds %struct.dfl_device_id, %struct.dfl_device_id* %0, i32 0, i32 0, !dbg !6314
  %1 = load i8, i8* %type, align 8, !dbg !6314
  %conv = zext i8 %1 to i32, !dbg !6312
  %2 = load %struct.dfl_device*, %struct.dfl_device** %ddev.addr, align 8, !dbg !6315
  %type1 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %2, i32 0, i32 2, !dbg !6316
  %3 = load i8, i8* %type1, align 4, !dbg !6316
  %conv2 = zext i8 %3 to i32, !dbg !6315
  %cmp = icmp eq i32 %conv, %conv2, !dbg !6317
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6318

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.dfl_device_id*, %struct.dfl_device_id** %id.addr, align 8, !dbg !6319
  %feature_id = getelementptr inbounds %struct.dfl_device_id, %struct.dfl_device_id* %4, i32 0, i32 1, !dbg !6320
  %5 = load i16, i16* %feature_id, align 2, !dbg !6320
  %conv4 = zext i16 %5 to i32, !dbg !6319
  %6 = load %struct.dfl_device*, %struct.dfl_device** %ddev.addr, align 8, !dbg !6321
  %feature_id5 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %6, i32 0, i32 3, !dbg !6322
  %7 = load i16, i16* %feature_id5, align 2, !dbg !6322
  %conv6 = zext i16 %7 to i32, !dbg !6321
  %cmp7 = icmp eq i32 %conv4, %conv6, !dbg !6323
  br i1 %cmp7, label %if.then, label %if.end, !dbg !6324

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.dfl_device_id*, %struct.dfl_device_id** %id.addr, align 8, !dbg !6325
  store %struct.dfl_device_id* %8, %struct.dfl_device_id** %retval, align 8, !dbg !6326
  br label %return, !dbg !6326

if.end:                                           ; preds = %land.lhs.true, %entry
  store %struct.dfl_device_id* null, %struct.dfl_device_id** %retval, align 8, !dbg !6327
  br label %return, !dbg !6327

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.dfl_device_id*, %struct.dfl_device_id** %retval, align 8, !dbg !6328
  ret %struct.dfl_device_id* %9, !dbg !6328
}

; Function Attrs: noredzone
declare dso_local i32 @add_uevent_var(%struct.kobj_uevent_env*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @device_unregister(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i8* @devm_platform_ioremap_resource(%struct.platform_device*, i32) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dfl_device* @dfl_dev_add(%struct.dfl_feature_platform_data* %pdata, %struct.dfl_feature* %feature) #0 !dbg !6329 {
entry:
  %retval = alloca %struct.dfl_device*, align 8
  %pdata.addr = alloca %struct.dfl_feature_platform_data*, align 8
  %feature.addr = alloca %struct.dfl_feature*, align 8
  %pdev = alloca %struct.platform_device*, align 8
  %parent_res = alloca %struct.resource*, align 8
  %ddev = alloca %struct.dfl_device*, align 8
  %id = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.dfl_feature_platform_data* %pdata, %struct.dfl_feature_platform_data** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata.addr, metadata !6332, metadata !DIExpression()), !dbg !6333
  store %struct.dfl_feature* %feature, %struct.dfl_feature** %feature.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature.addr, metadata !6334, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev, metadata !6336, metadata !DIExpression()), !dbg !6337
  %0 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !6338
  %dev = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %0, i32 0, i32 3, !dbg !6339
  %1 = load %struct.platform_device*, %struct.platform_device** %dev, align 8, !dbg !6339
  store %struct.platform_device* %1, %struct.platform_device** %pdev, align 8, !dbg !6337
  call void @llvm.dbg.declare(metadata %struct.resource** %parent_res, metadata !6340, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.declare(metadata %struct.dfl_device** %ddev, metadata !6342, metadata !DIExpression()), !dbg !6343
  call void @llvm.dbg.declare(metadata i32* %id, metadata !6344, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6346, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6348, metadata !DIExpression()), !dbg !6349
  %call = call i8* @kzalloc(i64 800, i32 3264) #11, !dbg !6350
  %2 = bitcast i8* %call to %struct.dfl_device*, !dbg !6350
  store %struct.dfl_device* %2, %struct.dfl_device** %ddev, align 8, !dbg !6351
  %3 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6352
  %tobool = icmp ne %struct.dfl_device* %3, null, !dbg !6352
  br i1 %tobool, label %if.end, label %if.then, !dbg !6354

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #11, !dbg !6355
  %4 = bitcast i8* %call1 to %struct.dfl_device*, !dbg !6355
  store %struct.dfl_device* %4, %struct.dfl_device** %retval, align 8, !dbg !6356
  br label %return, !dbg !6356

if.end:                                           ; preds = %entry
  %call2 = call i32 @ida_alloc_range(%struct.ida* @dfl_device_ida, i32 0, i32 -1, i32 3264) #11, !dbg !6357
  store i32 %call2, i32* %id, align 4, !dbg !6358
  %5 = load i32, i32* %id, align 4, !dbg !6359
  %cmp = icmp slt i32 %5, 0, !dbg !6361
  br i1 %cmp, label %if.then3, label %if.end6, !dbg !6362

if.then3:                                         ; preds = %if.end
  %6 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !6363
  %dev4 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %6, i32 0, i32 3, !dbg !6363
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !6363
  %7 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6365
  %8 = bitcast %struct.dfl_device* %7 to i8*, !dbg !6365
  call void @kfree(i8* %8) #11, !dbg !6366
  %9 = load i32, i32* %id, align 4, !dbg !6367
  %conv = sext i32 %9 to i64, !dbg !6367
  %call5 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !6368
  %10 = bitcast i8* %call5 to %struct.dfl_device*, !dbg !6368
  store %struct.dfl_device* %10, %struct.dfl_device** %retval, align 8, !dbg !6369
  br label %return, !dbg !6369

if.end6:                                          ; preds = %if.end
  %11 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6370
  %dev7 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %11, i32 0, i32 0, !dbg !6371
  call void @device_initialize(%struct.device* %dev7) #11, !dbg !6372
  %12 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !6373
  %dev8 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %12, i32 0, i32 3, !dbg !6374
  %13 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6375
  %dev9 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %13, i32 0, i32 0, !dbg !6376
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev9, i32 0, i32 1, !dbg !6377
  store %struct.device* %dev8, %struct.device** %parent, align 8, !dbg !6378
  %14 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6379
  %dev10 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %14, i32 0, i32 0, !dbg !6380
  %bus = getelementptr inbounds %struct.device, %struct.device* %dev10, i32 0, i32 5, !dbg !6381
  store %struct.bus_type* @dfl_bus_type, %struct.bus_type** %bus, align 8, !dbg !6382
  %15 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6383
  %dev11 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %15, i32 0, i32 0, !dbg !6384
  %release = getelementptr inbounds %struct.device, %struct.device* %dev11, i32 0, i32 31, !dbg !6385
  store void (%struct.device*)* @release_dfl_dev, void (%struct.device*)** %release, align 8, !dbg !6386
  %16 = load i32, i32* %id, align 4, !dbg !6387
  %17 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6388
  %id12 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %17, i32 0, i32 1, !dbg !6389
  store i32 %16, i32* %id12, align 8, !dbg !6390
  %18 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6391
  %dev13 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %18, i32 0, i32 0, !dbg !6392
  %19 = load i32, i32* %id, align 4, !dbg !6393
  %call14 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i32 %19) #11, !dbg !6394
  store i32 %call14, i32* %ret, align 4, !dbg !6395
  %20 = load i32, i32* %ret, align 4, !dbg !6396
  %tobool15 = icmp ne i32 %20, 0, !dbg !6396
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !6398

if.then16:                                        ; preds = %if.end6
  br label %put_dev, !dbg !6399

if.end17:                                         ; preds = %if.end6
  %21 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !6400
  %call18 = call i32 @feature_dev_id_type(%struct.platform_device* %21) #11, !dbg !6401
  %conv19 = trunc i32 %call18 to i8, !dbg !6401
  %22 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6402
  %type = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %22, i32 0, i32 2, !dbg !6403
  store i8 %conv19, i8* %type, align 4, !dbg !6404
  %23 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !6405
  %id20 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %23, i32 0, i32 1, !dbg !6406
  %24 = load i16, i16* %id20, align 8, !dbg !6406
  %25 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6407
  %feature_id = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %25, i32 0, i32 3, !dbg !6408
  store i16 %24, i16* %feature_id, align 2, !dbg !6409
  %26 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata.addr, align 8, !dbg !6410
  %dfl_cdev = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %26, i32 0, i32 4, !dbg !6411
  %27 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %dfl_cdev, align 8, !dbg !6411
  %28 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6412
  %cdev = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %28, i32 0, i32 7, !dbg !6413
  store %struct.dfl_fpga_cdev* %27, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !6414
  %29 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !6415
  %resource = getelementptr inbounds %struct.platform_device, %struct.platform_device* %29, i32 0, i32 7, !dbg !6416
  %30 = load %struct.resource*, %struct.resource** %resource, align 8, !dbg !6416
  %31 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !6417
  %resource_index = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %31, i32 0, i32 2, !dbg !6418
  %32 = load i32, i32* %resource_index, align 4, !dbg !6418
  %idxprom = sext i32 %32 to i64, !dbg !6415
  %arrayidx = getelementptr %struct.resource, %struct.resource* %30, i64 %idxprom, !dbg !6415
  store %struct.resource* %arrayidx, %struct.resource** %parent_res, align 8, !dbg !6419
  %33 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6420
  %mmio_res = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %33, i32 0, i32 4, !dbg !6421
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %mmio_res, i32 0, i32 3, !dbg !6422
  store i64 512, i64* %flags, align 8, !dbg !6423
  %34 = load %struct.resource*, %struct.resource** %parent_res, align 8, !dbg !6424
  %start = getelementptr inbounds %struct.resource, %struct.resource* %34, i32 0, i32 0, !dbg !6425
  %35 = load i64, i64* %start, align 8, !dbg !6425
  %36 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6426
  %mmio_res21 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %36, i32 0, i32 4, !dbg !6427
  %start22 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_res21, i32 0, i32 0, !dbg !6428
  store i64 %35, i64* %start22, align 8, !dbg !6429
  %37 = load %struct.resource*, %struct.resource** %parent_res, align 8, !dbg !6430
  %end = getelementptr inbounds %struct.resource, %struct.resource* %37, i32 0, i32 1, !dbg !6431
  %38 = load i64, i64* %end, align 8, !dbg !6431
  %39 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6432
  %mmio_res23 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %39, i32 0, i32 4, !dbg !6433
  %end24 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_res23, i32 0, i32 1, !dbg !6434
  store i64 %38, i64* %end24, align 8, !dbg !6435
  %40 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6436
  %dev25 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %40, i32 0, i32 0, !dbg !6437
  %call26 = call i8* @dev_name(%struct.device* %dev25) #11, !dbg !6438
  %41 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6439
  %mmio_res27 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %41, i32 0, i32 4, !dbg !6440
  %name = getelementptr inbounds %struct.resource, %struct.resource* %mmio_res27, i32 0, i32 2, !dbg !6441
  store i8* %call26, i8** %name, align 8, !dbg !6442
  %42 = load %struct.resource*, %struct.resource** %parent_res, align 8, !dbg !6443
  %43 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6444
  %mmio_res28 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %43, i32 0, i32 4, !dbg !6445
  %call29 = call i32 @insert_resource(%struct.resource* %42, %struct.resource* %mmio_res28) #11, !dbg !6446
  store i32 %call29, i32* %ret, align 4, !dbg !6447
  %44 = load i32, i32* %ret, align 4, !dbg !6448
  %tobool30 = icmp ne i32 %44, 0, !dbg !6448
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !6450

if.then31:                                        ; preds = %if.end17
  %45 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !6451
  %dev32 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %45, i32 0, i32 3, !dbg !6451
  %46 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6451
  %dev33 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %46, i32 0, i32 0, !dbg !6451
  %call34 = call i8* @dev_name(%struct.device* %dev33) #11, !dbg !6451
  %47 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6451
  %mmio_res35 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %47, i32 0, i32 4, !dbg !6451
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev32, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i8* %call34, %struct.resource* %mmio_res35) #12, !dbg !6451
  br label %put_dev, !dbg !6453

if.end36:                                         ; preds = %if.end17
  %48 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !6454
  %nr_irqs = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %48, i32 0, i32 5, !dbg !6456
  %49 = load i32, i32* %nr_irqs, align 8, !dbg !6456
  %tobool37 = icmp ne i32 %49, 0, !dbg !6454
  br i1 %tobool37, label %if.then38, label %if.end55, !dbg !6457

if.then38:                                        ; preds = %if.end36
  %50 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !6458
  %nr_irqs39 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %50, i32 0, i32 5, !dbg !6460
  %51 = load i32, i32* %nr_irqs39, align 8, !dbg !6460
  %conv40 = zext i32 %51 to i64, !dbg !6458
  %call41 = call i8* @kcalloc(i64 %conv40, i64 4, i32 3264) #11, !dbg !6461
  %52 = bitcast i8* %call41 to i32*, !dbg !6461
  %53 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6462
  %irqs = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %53, i32 0, i32 5, !dbg !6463
  store i32* %52, i32** %irqs, align 8, !dbg !6464
  %54 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6465
  %irqs42 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %54, i32 0, i32 5, !dbg !6467
  %55 = load i32*, i32** %irqs42, align 8, !dbg !6467
  %tobool43 = icmp ne i32* %55, null, !dbg !6465
  br i1 %tobool43, label %if.end45, label %if.then44, !dbg !6468

if.then44:                                        ; preds = %if.then38
  store i32 -12, i32* %ret, align 4, !dbg !6469
  br label %put_dev, !dbg !6471

if.end45:                                         ; preds = %if.then38
  store i32 0, i32* %i, align 4, !dbg !6472
  br label %for.cond, !dbg !6474

for.cond:                                         ; preds = %for.inc, %if.end45
  %56 = load i32, i32* %i, align 4, !dbg !6475
  %57 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !6477
  %nr_irqs46 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %57, i32 0, i32 5, !dbg !6478
  %58 = load i32, i32* %nr_irqs46, align 8, !dbg !6478
  %cmp47 = icmp ult i32 %56, %58, !dbg !6479
  br i1 %cmp47, label %for.body, label %for.end, !dbg !6480

for.body:                                         ; preds = %for.cond
  %59 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !6481
  %irq_ctx = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %59, i32 0, i32 4, !dbg !6482
  %60 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %irq_ctx, align 8, !dbg !6482
  %61 = load i32, i32* %i, align 4, !dbg !6483
  %idxprom49 = sext i32 %61 to i64, !dbg !6481
  %arrayidx50 = getelementptr %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %60, i64 %idxprom49, !dbg !6481
  %irq = getelementptr inbounds %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %arrayidx50, i32 0, i32 0, !dbg !6484
  %62 = load i32, i32* %irq, align 8, !dbg !6484
  %63 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6485
  %irqs51 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %63, i32 0, i32 5, !dbg !6486
  %64 = load i32*, i32** %irqs51, align 8, !dbg !6486
  %65 = load i32, i32* %i, align 4, !dbg !6487
  %idxprom52 = sext i32 %65 to i64, !dbg !6485
  %arrayidx53 = getelementptr i32, i32* %64, i64 %idxprom52, !dbg !6485
  store i32 %62, i32* %arrayidx53, align 4, !dbg !6488
  br label %for.inc, !dbg !6485

for.inc:                                          ; preds = %for.body
  %66 = load i32, i32* %i, align 4, !dbg !6489
  %inc = add i32 %66, 1, !dbg !6489
  store i32 %inc, i32* %i, align 4, !dbg !6489
  br label %for.cond, !dbg !6490, !llvm.loop !6491

for.end:                                          ; preds = %for.cond
  %67 = load %struct.dfl_feature*, %struct.dfl_feature** %feature.addr, align 8, !dbg !6493
  %nr_irqs54 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %67, i32 0, i32 5, !dbg !6494
  %68 = load i32, i32* %nr_irqs54, align 8, !dbg !6494
  %69 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6495
  %num_irqs = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %69, i32 0, i32 6, !dbg !6496
  store i32 %68, i32* %num_irqs, align 8, !dbg !6497
  br label %if.end55, !dbg !6498

if.end55:                                         ; preds = %for.end, %if.end36
  %70 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6499
  %dev56 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %70, i32 0, i32 0, !dbg !6500
  %call57 = call i32 @device_add(%struct.device* %dev56) #11, !dbg !6501
  store i32 %call57, i32* %ret, align 4, !dbg !6502
  %71 = load i32, i32* %ret, align 4, !dbg !6503
  %tobool58 = icmp ne i32 %71, 0, !dbg !6503
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !6505

if.then59:                                        ; preds = %if.end55
  br label %put_dev, !dbg !6506

if.end60:                                         ; preds = %if.end55
  %72 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6507
  store %struct.dfl_device* %72, %struct.dfl_device** %retval, align 8, !dbg !6508
  br label %return, !dbg !6508

put_dev:                                          ; preds = %if.then59, %if.then44, %if.then31, %if.then16
  call void @llvm.dbg.label(metadata !6509), !dbg !6510
  %73 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6511
  %dev61 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %73, i32 0, i32 0, !dbg !6512
  call void @put_device(%struct.device* %dev61) #11, !dbg !6513
  %74 = load i32, i32* %ret, align 4, !dbg !6514
  %conv62 = sext i32 %74 to i64, !dbg !6514
  %call63 = call i8* @ERR_PTR(i64 %conv62) #11, !dbg !6515
  %75 = bitcast i8* %call63 to %struct.dfl_device*, !dbg !6515
  store %struct.dfl_device* %75, %struct.dfl_device** %retval, align 8, !dbg !6516
  br label %return, !dbg !6516

return:                                           ; preds = %put_dev, %if.end60, %if.then3, %if.then
  %76 = load %struct.dfl_device*, %struct.dfl_device** %retval, align 8, !dbg !6517
  ret %struct.dfl_device* %76, !dbg !6517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !6518 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6521, metadata !DIExpression()), !dbg !6525
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6531, metadata !DIExpression()), !dbg !6532
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6533, metadata !DIExpression()), !dbg !6534
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6535, metadata !DIExpression()), !dbg !6536
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6537, metadata !DIExpression()), !dbg !6541
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6543, metadata !DIExpression()), !dbg !6547
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6549, metadata !DIExpression()), !dbg !6553
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6558, metadata !DIExpression()), !dbg !6559
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6560, metadata !DIExpression()), !dbg !6561
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6562, metadata !DIExpression()), !dbg !6563
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6564, metadata !DIExpression()), !dbg !6565
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6566, metadata !DIExpression()), !dbg !6567
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6568, metadata !DIExpression()), !dbg !6569
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6570, metadata !DIExpression()), !dbg !6571
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6572, metadata !DIExpression()), !dbg !6573
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6574, metadata !DIExpression()), !dbg !6575
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6576, metadata !DIExpression()), !dbg !6577
  %0 = load i64, i64* %size.addr, align 8, !dbg !6578
  %1 = load i32, i32* %flags.addr, align 4, !dbg !6579
  %or = or i32 %1, 256, !dbg !6580
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !6581
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #4, !dbg !6582
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !6583

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !6584
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !6585
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6586

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !6587
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !6588
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !6589
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !6590
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6567
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !6591
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6592
  %10 = load i32, i32* %order.i.i, align 4, !dbg !6593
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6594
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6595
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6596
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !6597
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6597
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6597
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6597
  call void @llvm.assume(i1 %maskcond.i.i.i) #4, !dbg !6597
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6598
  br label %kmalloc.exit, !dbg !6598

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !6599
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6600
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !6600
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6602

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !6603
  br label %kmalloc_index.exit.i, !dbg !6603

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6604
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !6606
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !6607

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6608
  br label %kmalloc_index.exit.i, !dbg !6608

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6609
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !6611
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !6612

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6613
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !6614
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !6615

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !6616
  br label %kmalloc_index.exit.i, !dbg !6616

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6617
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !6619
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !6620

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6621
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !6622
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !6623

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !6624
  br label %kmalloc_index.exit.i, !dbg !6624

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6625
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !6627
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !6628

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6629
  br label %kmalloc_index.exit.i, !dbg !6629

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6630
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !6632
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !6633

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !6634
  br label %kmalloc_index.exit.i, !dbg !6634

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6635
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !6637
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !6638

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !6639
  br label %kmalloc_index.exit.i, !dbg !6639

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6640
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !6642
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !6643

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !6644
  br label %kmalloc_index.exit.i, !dbg !6644

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6645
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !6647
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !6648

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !6649
  br label %kmalloc_index.exit.i, !dbg !6649

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6650
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !6652
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !6653

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !6654
  br label %kmalloc_index.exit.i, !dbg !6654

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6655
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !6657
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !6658

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6659
  br label %kmalloc_index.exit.i, !dbg !6659

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6660
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !6662
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6663

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6664
  br label %kmalloc_index.exit.i, !dbg !6664

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6665
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !6667
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6668

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6669
  br label %kmalloc_index.exit.i, !dbg !6669

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6670
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !6672
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6673

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !6674
  br label %kmalloc_index.exit.i, !dbg !6674

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6675
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !6677
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !6678

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !6679
  br label %kmalloc_index.exit.i, !dbg !6679

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6680
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !6682
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !6683

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !6684
  br label %kmalloc_index.exit.i, !dbg !6684

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6685
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !6687
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !6688

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !6689
  br label %kmalloc_index.exit.i, !dbg !6689

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6690
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !6692
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !6693

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !6694
  br label %kmalloc_index.exit.i, !dbg !6694

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6695
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !6697
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !6698

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !6699
  br label %kmalloc_index.exit.i, !dbg !6699

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6700
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !6702
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !6703

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !6704
  br label %kmalloc_index.exit.i, !dbg !6704

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6705
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !6707
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !6708

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !6709
  br label %kmalloc_index.exit.i, !dbg !6709

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6710
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !6712
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !6713

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !6714
  br label %kmalloc_index.exit.i, !dbg !6714

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6715
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !6717
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !6718

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !6719
  br label %kmalloc_index.exit.i, !dbg !6719

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6720
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !6722
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !6723

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !6724
  br label %kmalloc_index.exit.i, !dbg !6724

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6725
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !6727
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !6728

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !6729
  br label %kmalloc_index.exit.i, !dbg !6729

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6730
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !6732
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !6733

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !6734
  br label %kmalloc_index.exit.i, !dbg !6734

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6735
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !6737
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !6738

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !6739
  br label %kmalloc_index.exit.i, !dbg !6739

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6740
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !6742
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !6743

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !6744
  br label %kmalloc_index.exit.i, !dbg !6744

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #4, !dbg !6745, !srcloc !6748
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 202) #4, !dbg !6749, !srcloc !6752
  unreachable, !dbg !6753

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !6754
  store i32 %45, i32* %index.i, align 4, !dbg !6755
  %46 = load i32, i32* %index.i, align 4, !dbg !6756
  %tobool.i = icmp ne i32 %46, 0, !dbg !6756
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !6758

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !6759
  br label %kmalloc.exit, !dbg !6759

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !6760
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6761
  %and.i.i = and i32 %48, 17, !dbg !6761
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !6761
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !6761
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !6761
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6761
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !6763

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !6764
  br label %kmalloc_type.exit.i, !dbg !6764

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6765
  %and2.i.i = and i32 %49, 1, !dbg !6766
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !6765
  %50 = zext i1 %tobool3.i.i to i64, !dbg !6765
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !6765
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !6767
  br label %kmalloc_type.exit.i, !dbg !6767

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !6768
  %idxprom.i = zext i32 %51 to i64, !dbg !6769
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !6769
  %52 = load i32, i32* %index.i, align 4, !dbg !6770
  %idxprom6.i = zext i32 %52 to i64, !dbg !6769
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !6769
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !6769
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !6771
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !6772
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6773
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6774
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !6775
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !6775
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !6775
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !6775
  call void @llvm.assume(i1 %maskcond.i.i) #4, !dbg !6775
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6536
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6776
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !6777
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !6778
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6779
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !6780
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !6781
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !6782
  store i8* %62, i8** %retval.i, align 8, !dbg !6783
  br label %kmalloc.exit, !dbg !6783

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !6784
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !6785
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !6786
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !6786
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !6786
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !6786
  call void @llvm.assume(i1 %maskcond.i) #4, !dbg !6786
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !6787
  br label %kmalloc.exit, !dbg !6787

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !6788
  ret i8* %65, !dbg !6789
}

; Function Attrs: noredzone
declare dso_local i32 @ida_alloc_range(%struct.ida*, i32, i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @device_initialize(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @release_dfl_dev(%struct.device* %dev) #0 !dbg !6790 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ddev = alloca %struct.dfl_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dfl_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6791, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.declare(metadata %struct.dfl_device** %ddev, metadata !6793, metadata !DIExpression()), !dbg !6794
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6795, metadata !DIExpression()), !dbg !6797
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6797
  %1 = bitcast %struct.device* %0 to i8*, !dbg !6797
  store i8* %1, i8** %__mptr, align 8, !dbg !6797
  br label %do.body, !dbg !6797

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6798

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6797
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6797
  %3 = bitcast i8* %add.ptr to %struct.dfl_device*, !dbg !6797
  store %struct.dfl_device* %3, %struct.dfl_device** %tmp, align 8, !dbg !6798
  %4 = load %struct.dfl_device*, %struct.dfl_device** %tmp, align 8, !dbg !6797
  store %struct.dfl_device* %4, %struct.dfl_device** %ddev, align 8, !dbg !6794
  %5 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6800
  %mmio_res = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %5, i32 0, i32 4, !dbg !6802
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %mmio_res, i32 0, i32 5, !dbg !6803
  %6 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !6803
  %tobool = icmp ne %struct.resource* %6, null, !dbg !6800
  br i1 %tobool, label %if.then, label %if.end, !dbg !6804

if.then:                                          ; preds = %do.end
  %7 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6805
  %mmio_res1 = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %7, i32 0, i32 4, !dbg !6806
  %call = call i32 @release_resource(%struct.resource* %mmio_res1) #11, !dbg !6807
  br label %if.end, !dbg !6807

if.end:                                           ; preds = %if.then, %do.end
  %8 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6808
  %id = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %8, i32 0, i32 1, !dbg !6808
  %9 = load i32, i32* %id, align 8, !dbg !6808
  call void @ida_free(%struct.ida* @dfl_device_ida, i32 %9) #11, !dbg !6808
  %10 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6809
  %irqs = getelementptr inbounds %struct.dfl_device, %struct.dfl_device* %10, i32 0, i32 5, !dbg !6810
  %11 = load i32*, i32** %irqs, align 8, !dbg !6810
  %12 = bitcast i32* %11 to i8*, !dbg !6809
  call void @kfree(i8* %12) #11, !dbg !6811
  %13 = load %struct.dfl_device*, %struct.dfl_device** %ddev, align 8, !dbg !6812
  %14 = bitcast %struct.dfl_device* %13 to i8*, !dbg !6812
  call void @kfree(i8* %14) #11, !dbg !6813
  ret void, !dbg !6814
}

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !6815 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6818, metadata !DIExpression()), !dbg !6819
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6820
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !6822
  %1 = load i8*, i8** %init_name, align 8, !dbg !6822
  %tobool = icmp ne i8* %1, null, !dbg !6820
  br i1 %tobool, label %if.then, label %if.end, !dbg !6823

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6824
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !6825
  %3 = load i8*, i8** %init_name1, align 8, !dbg !6825
  store i8* %3, i8** %retval, align 8, !dbg !6826
  br label %return, !dbg !6826

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6827
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !6828
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !6829
  store i8* %call, i8** %retval, align 8, !dbg !6830
  br label %return, !dbg !6830

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !6831
  ret i8* %5, !dbg !6831
}

; Function Attrs: noredzone
declare dso_local i32 @insert_resource(%struct.resource*, %struct.resource*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !6832 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6835, metadata !DIExpression()), !dbg !6836
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6837, metadata !DIExpression()), !dbg !6838
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6839, metadata !DIExpression()), !dbg !6840
  %0 = load i64, i64* %n.addr, align 8, !dbg !6841
  %1 = load i64, i64* %size.addr, align 8, !dbg !6842
  %2 = load i32, i32* %flags.addr, align 4, !dbg !6843
  %or = or i32 %2, 256, !dbg !6844
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !6845
  ret i8* %call, !dbg !6846
}

; Function Attrs: noredzone
declare dso_local i32 @device_add(%struct.device*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #7

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #8

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #9 !dbg !6847 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6851, metadata !DIExpression()), !dbg !6856
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6858, metadata !DIExpression()), !dbg !6859
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6860, metadata !DIExpression()), !dbg !6861
  %0 = load i64, i64* %size.addr, align 8, !dbg !6862
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !6864
  br i1 %1, label %if.then, label %if.end447, !dbg !6865

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !6866
  %tobool = icmp ne i64 %2, 0, !dbg !6866
  br i1 %tobool, label %if.end, label %if.then1, !dbg !6869

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !6870
  br label %return, !dbg !6870

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !6871
  %cmp = icmp ult i64 %3, 4096, !dbg !6873
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6874

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6875
  br label %return, !dbg !6875

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub = sub i64 %4, 1, !dbg !6876
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !6876
  br i1 %5, label %cond.true, label %cond.false442, !dbg !6876

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub4 = sub i64 %6, 1, !dbg !6876
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !6876
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !6876

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub6 = sub i64 %8, 1, !dbg !6876
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !6876
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !6876

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !6876

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub9 = sub i64 %9, 1, !dbg !6876
  %and = and i64 %sub9, -9223372036854775808, !dbg !6876
  %tobool10 = icmp ne i64 %and, 0, !dbg !6876
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !6876

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !6876

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub13 = sub i64 %10, 1, !dbg !6876
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !6876
  %tobool15 = icmp ne i64 %and14, 0, !dbg !6876
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !6876

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !6876

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub18 = sub i64 %11, 1, !dbg !6876
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !6876
  %tobool20 = icmp ne i64 %and19, 0, !dbg !6876
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !6876

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !6876

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub23 = sub i64 %12, 1, !dbg !6876
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !6876
  %tobool25 = icmp ne i64 %and24, 0, !dbg !6876
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !6876

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !6876

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub28 = sub i64 %13, 1, !dbg !6876
  %and29 = and i64 %sub28, 576460752303423488, !dbg !6876
  %tobool30 = icmp ne i64 %and29, 0, !dbg !6876
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !6876

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !6876

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub33 = sub i64 %14, 1, !dbg !6876
  %and34 = and i64 %sub33, 288230376151711744, !dbg !6876
  %tobool35 = icmp ne i64 %and34, 0, !dbg !6876
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !6876

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !6876

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub38 = sub i64 %15, 1, !dbg !6876
  %and39 = and i64 %sub38, 144115188075855872, !dbg !6876
  %tobool40 = icmp ne i64 %and39, 0, !dbg !6876
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !6876

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !6876

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub43 = sub i64 %16, 1, !dbg !6876
  %and44 = and i64 %sub43, 72057594037927936, !dbg !6876
  %tobool45 = icmp ne i64 %and44, 0, !dbg !6876
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !6876

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !6876

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub48 = sub i64 %17, 1, !dbg !6876
  %and49 = and i64 %sub48, 36028797018963968, !dbg !6876
  %tobool50 = icmp ne i64 %and49, 0, !dbg !6876
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !6876

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !6876

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub53 = sub i64 %18, 1, !dbg !6876
  %and54 = and i64 %sub53, 18014398509481984, !dbg !6876
  %tobool55 = icmp ne i64 %and54, 0, !dbg !6876
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !6876

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !6876

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub58 = sub i64 %19, 1, !dbg !6876
  %and59 = and i64 %sub58, 9007199254740992, !dbg !6876
  %tobool60 = icmp ne i64 %and59, 0, !dbg !6876
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !6876

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !6876

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub63 = sub i64 %20, 1, !dbg !6876
  %and64 = and i64 %sub63, 4503599627370496, !dbg !6876
  %tobool65 = icmp ne i64 %and64, 0, !dbg !6876
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !6876

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !6876

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub68 = sub i64 %21, 1, !dbg !6876
  %and69 = and i64 %sub68, 2251799813685248, !dbg !6876
  %tobool70 = icmp ne i64 %and69, 0, !dbg !6876
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !6876

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !6876

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub73 = sub i64 %22, 1, !dbg !6876
  %and74 = and i64 %sub73, 1125899906842624, !dbg !6876
  %tobool75 = icmp ne i64 %and74, 0, !dbg !6876
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !6876

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !6876

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub78 = sub i64 %23, 1, !dbg !6876
  %and79 = and i64 %sub78, 562949953421312, !dbg !6876
  %tobool80 = icmp ne i64 %and79, 0, !dbg !6876
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !6876

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !6876

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub83 = sub i64 %24, 1, !dbg !6876
  %and84 = and i64 %sub83, 281474976710656, !dbg !6876
  %tobool85 = icmp ne i64 %and84, 0, !dbg !6876
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !6876

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !6876

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub88 = sub i64 %25, 1, !dbg !6876
  %and89 = and i64 %sub88, 140737488355328, !dbg !6876
  %tobool90 = icmp ne i64 %and89, 0, !dbg !6876
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !6876

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !6876

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub93 = sub i64 %26, 1, !dbg !6876
  %and94 = and i64 %sub93, 70368744177664, !dbg !6876
  %tobool95 = icmp ne i64 %and94, 0, !dbg !6876
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !6876

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !6876

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub98 = sub i64 %27, 1, !dbg !6876
  %and99 = and i64 %sub98, 35184372088832, !dbg !6876
  %tobool100 = icmp ne i64 %and99, 0, !dbg !6876
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !6876

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !6876

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub103 = sub i64 %28, 1, !dbg !6876
  %and104 = and i64 %sub103, 17592186044416, !dbg !6876
  %tobool105 = icmp ne i64 %and104, 0, !dbg !6876
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !6876

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !6876

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub108 = sub i64 %29, 1, !dbg !6876
  %and109 = and i64 %sub108, 8796093022208, !dbg !6876
  %tobool110 = icmp ne i64 %and109, 0, !dbg !6876
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !6876

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !6876

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub113 = sub i64 %30, 1, !dbg !6876
  %and114 = and i64 %sub113, 4398046511104, !dbg !6876
  %tobool115 = icmp ne i64 %and114, 0, !dbg !6876
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !6876

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !6876

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub118 = sub i64 %31, 1, !dbg !6876
  %and119 = and i64 %sub118, 2199023255552, !dbg !6876
  %tobool120 = icmp ne i64 %and119, 0, !dbg !6876
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !6876

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !6876

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub123 = sub i64 %32, 1, !dbg !6876
  %and124 = and i64 %sub123, 1099511627776, !dbg !6876
  %tobool125 = icmp ne i64 %and124, 0, !dbg !6876
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !6876

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !6876

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub128 = sub i64 %33, 1, !dbg !6876
  %and129 = and i64 %sub128, 549755813888, !dbg !6876
  %tobool130 = icmp ne i64 %and129, 0, !dbg !6876
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !6876

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !6876

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub133 = sub i64 %34, 1, !dbg !6876
  %and134 = and i64 %sub133, 274877906944, !dbg !6876
  %tobool135 = icmp ne i64 %and134, 0, !dbg !6876
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !6876

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !6876

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub138 = sub i64 %35, 1, !dbg !6876
  %and139 = and i64 %sub138, 137438953472, !dbg !6876
  %tobool140 = icmp ne i64 %and139, 0, !dbg !6876
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !6876

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !6876

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub143 = sub i64 %36, 1, !dbg !6876
  %and144 = and i64 %sub143, 68719476736, !dbg !6876
  %tobool145 = icmp ne i64 %and144, 0, !dbg !6876
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !6876

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !6876

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub148 = sub i64 %37, 1, !dbg !6876
  %and149 = and i64 %sub148, 34359738368, !dbg !6876
  %tobool150 = icmp ne i64 %and149, 0, !dbg !6876
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !6876

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !6876

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub153 = sub i64 %38, 1, !dbg !6876
  %and154 = and i64 %sub153, 17179869184, !dbg !6876
  %tobool155 = icmp ne i64 %and154, 0, !dbg !6876
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !6876

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !6876

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub158 = sub i64 %39, 1, !dbg !6876
  %and159 = and i64 %sub158, 8589934592, !dbg !6876
  %tobool160 = icmp ne i64 %and159, 0, !dbg !6876
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !6876

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !6876

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub163 = sub i64 %40, 1, !dbg !6876
  %and164 = and i64 %sub163, 4294967296, !dbg !6876
  %tobool165 = icmp ne i64 %and164, 0, !dbg !6876
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !6876

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !6876

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub168 = sub i64 %41, 1, !dbg !6876
  %and169 = and i64 %sub168, 2147483648, !dbg !6876
  %tobool170 = icmp ne i64 %and169, 0, !dbg !6876
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !6876

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !6876

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub173 = sub i64 %42, 1, !dbg !6876
  %and174 = and i64 %sub173, 1073741824, !dbg !6876
  %tobool175 = icmp ne i64 %and174, 0, !dbg !6876
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !6876

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !6876

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub178 = sub i64 %43, 1, !dbg !6876
  %and179 = and i64 %sub178, 536870912, !dbg !6876
  %tobool180 = icmp ne i64 %and179, 0, !dbg !6876
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !6876

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !6876

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub183 = sub i64 %44, 1, !dbg !6876
  %and184 = and i64 %sub183, 268435456, !dbg !6876
  %tobool185 = icmp ne i64 %and184, 0, !dbg !6876
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !6876

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !6876

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub188 = sub i64 %45, 1, !dbg !6876
  %and189 = and i64 %sub188, 134217728, !dbg !6876
  %tobool190 = icmp ne i64 %and189, 0, !dbg !6876
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !6876

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !6876

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub193 = sub i64 %46, 1, !dbg !6876
  %and194 = and i64 %sub193, 67108864, !dbg !6876
  %tobool195 = icmp ne i64 %and194, 0, !dbg !6876
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !6876

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !6876

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub198 = sub i64 %47, 1, !dbg !6876
  %and199 = and i64 %sub198, 33554432, !dbg !6876
  %tobool200 = icmp ne i64 %and199, 0, !dbg !6876
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !6876

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !6876

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub203 = sub i64 %48, 1, !dbg !6876
  %and204 = and i64 %sub203, 16777216, !dbg !6876
  %tobool205 = icmp ne i64 %and204, 0, !dbg !6876
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !6876

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !6876

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub208 = sub i64 %49, 1, !dbg !6876
  %and209 = and i64 %sub208, 8388608, !dbg !6876
  %tobool210 = icmp ne i64 %and209, 0, !dbg !6876
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !6876

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !6876

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub213 = sub i64 %50, 1, !dbg !6876
  %and214 = and i64 %sub213, 4194304, !dbg !6876
  %tobool215 = icmp ne i64 %and214, 0, !dbg !6876
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !6876

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !6876

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub218 = sub i64 %51, 1, !dbg !6876
  %and219 = and i64 %sub218, 2097152, !dbg !6876
  %tobool220 = icmp ne i64 %and219, 0, !dbg !6876
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !6876

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !6876

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub223 = sub i64 %52, 1, !dbg !6876
  %and224 = and i64 %sub223, 1048576, !dbg !6876
  %tobool225 = icmp ne i64 %and224, 0, !dbg !6876
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !6876

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !6876

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub228 = sub i64 %53, 1, !dbg !6876
  %and229 = and i64 %sub228, 524288, !dbg !6876
  %tobool230 = icmp ne i64 %and229, 0, !dbg !6876
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !6876

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !6876

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub233 = sub i64 %54, 1, !dbg !6876
  %and234 = and i64 %sub233, 262144, !dbg !6876
  %tobool235 = icmp ne i64 %and234, 0, !dbg !6876
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !6876

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !6876

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub238 = sub i64 %55, 1, !dbg !6876
  %and239 = and i64 %sub238, 131072, !dbg !6876
  %tobool240 = icmp ne i64 %and239, 0, !dbg !6876
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !6876

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !6876

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub243 = sub i64 %56, 1, !dbg !6876
  %and244 = and i64 %sub243, 65536, !dbg !6876
  %tobool245 = icmp ne i64 %and244, 0, !dbg !6876
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !6876

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !6876

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub248 = sub i64 %57, 1, !dbg !6876
  %and249 = and i64 %sub248, 32768, !dbg !6876
  %tobool250 = icmp ne i64 %and249, 0, !dbg !6876
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !6876

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !6876

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub253 = sub i64 %58, 1, !dbg !6876
  %and254 = and i64 %sub253, 16384, !dbg !6876
  %tobool255 = icmp ne i64 %and254, 0, !dbg !6876
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !6876

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !6876

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub258 = sub i64 %59, 1, !dbg !6876
  %and259 = and i64 %sub258, 8192, !dbg !6876
  %tobool260 = icmp ne i64 %and259, 0, !dbg !6876
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !6876

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !6876

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub263 = sub i64 %60, 1, !dbg !6876
  %and264 = and i64 %sub263, 4096, !dbg !6876
  %tobool265 = icmp ne i64 %and264, 0, !dbg !6876
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !6876

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !6876

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub268 = sub i64 %61, 1, !dbg !6876
  %and269 = and i64 %sub268, 2048, !dbg !6876
  %tobool270 = icmp ne i64 %and269, 0, !dbg !6876
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !6876

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !6876

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub273 = sub i64 %62, 1, !dbg !6876
  %and274 = and i64 %sub273, 1024, !dbg !6876
  %tobool275 = icmp ne i64 %and274, 0, !dbg !6876
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !6876

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !6876

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub278 = sub i64 %63, 1, !dbg !6876
  %and279 = and i64 %sub278, 512, !dbg !6876
  %tobool280 = icmp ne i64 %and279, 0, !dbg !6876
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !6876

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !6876

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub283 = sub i64 %64, 1, !dbg !6876
  %and284 = and i64 %sub283, 256, !dbg !6876
  %tobool285 = icmp ne i64 %and284, 0, !dbg !6876
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !6876

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !6876

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub288 = sub i64 %65, 1, !dbg !6876
  %and289 = and i64 %sub288, 128, !dbg !6876
  %tobool290 = icmp ne i64 %and289, 0, !dbg !6876
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !6876

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !6876

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub293 = sub i64 %66, 1, !dbg !6876
  %and294 = and i64 %sub293, 64, !dbg !6876
  %tobool295 = icmp ne i64 %and294, 0, !dbg !6876
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !6876

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !6876

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub298 = sub i64 %67, 1, !dbg !6876
  %and299 = and i64 %sub298, 32, !dbg !6876
  %tobool300 = icmp ne i64 %and299, 0, !dbg !6876
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !6876

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !6876

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub303 = sub i64 %68, 1, !dbg !6876
  %and304 = and i64 %sub303, 16, !dbg !6876
  %tobool305 = icmp ne i64 %and304, 0, !dbg !6876
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !6876

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !6876

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub308 = sub i64 %69, 1, !dbg !6876
  %and309 = and i64 %sub308, 8, !dbg !6876
  %tobool310 = icmp ne i64 %and309, 0, !dbg !6876
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !6876

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !6876

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub313 = sub i64 %70, 1, !dbg !6876
  %and314 = and i64 %sub313, 4, !dbg !6876
  %tobool315 = icmp ne i64 %and314, 0, !dbg !6876
  %71 = zext i1 %tobool315 to i64, !dbg !6876
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !6876
  br label %cond.end, !dbg !6876

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !6876
  br label %cond.end317, !dbg !6876

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !6876
  br label %cond.end319, !dbg !6876

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !6876
  br label %cond.end321, !dbg !6876

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !6876
  br label %cond.end323, !dbg !6876

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !6876
  br label %cond.end325, !dbg !6876

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !6876
  br label %cond.end327, !dbg !6876

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !6876
  br label %cond.end329, !dbg !6876

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !6876
  br label %cond.end331, !dbg !6876

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !6876
  br label %cond.end333, !dbg !6876

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !6876
  br label %cond.end335, !dbg !6876

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !6876
  br label %cond.end337, !dbg !6876

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !6876
  br label %cond.end339, !dbg !6876

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !6876
  br label %cond.end341, !dbg !6876

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !6876
  br label %cond.end343, !dbg !6876

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !6876
  br label %cond.end345, !dbg !6876

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !6876
  br label %cond.end347, !dbg !6876

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !6876
  br label %cond.end349, !dbg !6876

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !6876
  br label %cond.end351, !dbg !6876

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !6876
  br label %cond.end353, !dbg !6876

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !6876
  br label %cond.end355, !dbg !6876

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !6876
  br label %cond.end357, !dbg !6876

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !6876
  br label %cond.end359, !dbg !6876

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !6876
  br label %cond.end361, !dbg !6876

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !6876
  br label %cond.end363, !dbg !6876

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !6876
  br label %cond.end365, !dbg !6876

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !6876
  br label %cond.end367, !dbg !6876

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !6876
  br label %cond.end369, !dbg !6876

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !6876
  br label %cond.end371, !dbg !6876

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !6876
  br label %cond.end373, !dbg !6876

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !6876
  br label %cond.end375, !dbg !6876

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !6876
  br label %cond.end377, !dbg !6876

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !6876
  br label %cond.end379, !dbg !6876

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !6876
  br label %cond.end381, !dbg !6876

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !6876
  br label %cond.end383, !dbg !6876

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !6876
  br label %cond.end385, !dbg !6876

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !6876
  br label %cond.end387, !dbg !6876

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !6876
  br label %cond.end389, !dbg !6876

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !6876
  br label %cond.end391, !dbg !6876

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !6876
  br label %cond.end393, !dbg !6876

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !6876
  br label %cond.end395, !dbg !6876

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !6876
  br label %cond.end397, !dbg !6876

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !6876
  br label %cond.end399, !dbg !6876

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !6876
  br label %cond.end401, !dbg !6876

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !6876
  br label %cond.end403, !dbg !6876

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !6876
  br label %cond.end405, !dbg !6876

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !6876
  br label %cond.end407, !dbg !6876

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !6876
  br label %cond.end409, !dbg !6876

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !6876
  br label %cond.end411, !dbg !6876

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !6876
  br label %cond.end413, !dbg !6876

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !6876
  br label %cond.end415, !dbg !6876

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !6876
  br label %cond.end417, !dbg !6876

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !6876
  br label %cond.end419, !dbg !6876

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !6876
  br label %cond.end421, !dbg !6876

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !6876
  br label %cond.end423, !dbg !6876

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !6876
  br label %cond.end425, !dbg !6876

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !6876
  br label %cond.end427, !dbg !6876

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !6876
  br label %cond.end429, !dbg !6876

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !6876
  br label %cond.end431, !dbg !6876

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !6876
  br label %cond.end433, !dbg !6876

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !6876
  br label %cond.end435, !dbg !6876

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !6876
  br label %cond.end437, !dbg !6876

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !6876
  br label %cond.end440, !dbg !6876

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !6876

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !6876
  br label %cond.end444, !dbg !6876

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !6876
  %sub443 = sub i64 %72, 1, !dbg !6876
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !6876
  br label %cond.end444, !dbg !6876

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !6876
  %sub446 = sub i32 %cond445, 12, !dbg !6877
  %add = add i32 %sub446, 1, !dbg !6878
  store i32 %add, i32* %retval, align 4, !dbg !6879
  br label %return, !dbg !6879

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !6880
  %dec = add i64 %73, -1, !dbg !6880
  store i64 %dec, i64* %size.addr, align 8, !dbg !6880
  %74 = load i64, i64* %size.addr, align 8, !dbg !6881
  %shr = lshr i64 %74, 12, !dbg !6881
  store i64 %shr, i64* %size.addr, align 8, !dbg !6881
  %75 = load i64, i64* %size.addr, align 8, !dbg !6882
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6859
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !6883
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !6884
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #3, !dbg !6883, !srcloc !6885
  store i32 %78, i32* %bitpos.i, align 4, !dbg !6883
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !6886
  %add.i = add i32 %79, 1, !dbg !6887
  store i32 %add.i, i32* %retval, align 4, !dbg !6888
  br label %return, !dbg !6888

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !6889
  ret i32 %80, !dbg !6889
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #9 !dbg !6890 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6851, metadata !DIExpression()), !dbg !6894
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6858, metadata !DIExpression()), !dbg !6896
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6897, metadata !DIExpression()), !dbg !6898
  %0 = load i64, i64* %n.addr, align 8, !dbg !6899
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6896
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !6900
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !6901
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #3, !dbg !6900, !srcloc !6885
  store i32 %3, i32* %bitpos.i, align 4, !dbg !6900
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !6902
  %add.i = add i32 %4, 1, !dbg !6903
  %sub = sub i32 %add.i, 1, !dbg !6904
  ret i32 %sub, !dbg !6905
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !6906 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !6910, metadata !DIExpression()), !dbg !6911
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !6912, metadata !DIExpression()), !dbg !6913
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6914, metadata !DIExpression()), !dbg !6915
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6916, metadata !DIExpression()), !dbg !6917
  %0 = load i8*, i8** %object.addr, align 8, !dbg !6918
  ret i8* %0, !dbg !6919
}

; Function Attrs: noredzone
declare dso_local i32 @release_resource(%struct.resource*) #2

; Function Attrs: noredzone
declare dso_local void @ida_free(%struct.ida*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !6920 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !6925, metadata !DIExpression()), !dbg !6926
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !6927
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !6928
  %1 = load i8*, i8** %name, align 8, !dbg !6928
  ret i8* %1, !dbg !6929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !6930 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6521, metadata !DIExpression()), !dbg !6931
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6531, metadata !DIExpression()), !dbg !6935
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6533, metadata !DIExpression()), !dbg !6936
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6535, metadata !DIExpression()), !dbg !6937
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6537, metadata !DIExpression()), !dbg !6938
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6543, metadata !DIExpression()), !dbg !6940
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6549, metadata !DIExpression()), !dbg !6942
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6558, metadata !DIExpression()), !dbg !6945
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6560, metadata !DIExpression()), !dbg !6946
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6562, metadata !DIExpression()), !dbg !6947
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6564, metadata !DIExpression()), !dbg !6948
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6566, metadata !DIExpression()), !dbg !6949
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6568, metadata !DIExpression()), !dbg !6950
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6570, metadata !DIExpression()), !dbg !6951
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6572, metadata !DIExpression()), !dbg !6952
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6953, metadata !DIExpression()), !dbg !6954
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6955, metadata !DIExpression()), !dbg !6956
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6957, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !6959, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !6961, metadata !DIExpression()), !dbg !6964
  %0 = load i64, i64* %n.addr, align 8, !dbg !6964
  store i64 %0, i64* %__a, align 8, !dbg !6964
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !6965, metadata !DIExpression()), !dbg !6964
  %1 = load i64, i64* %size.addr, align 8, !dbg !6964
  store i64 %1, i64* %__b, align 8, !dbg !6964
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !6966, metadata !DIExpression()), !dbg !6964
  store i64* %bytes, i64** %__d, align 8, !dbg !6964
  %cmp = icmp eq i64* %__a, %__b, !dbg !6964
  %conv = zext i1 %cmp to i32, !dbg !6964
  %2 = load i64*, i64** %__d, align 8, !dbg !6964
  %cmp1 = icmp eq i64* %__a, %2, !dbg !6964
  %conv2 = zext i1 %cmp1 to i32, !dbg !6964
  %3 = load i64, i64* %__a, align 8, !dbg !6964
  %4 = load i64, i64* %__b, align 8, !dbg !6964
  %5 = load i64*, i64** %__d, align 8, !dbg !6964
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !6964
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !6964
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !6964
  store i64 %8, i64* %5, align 8, !dbg !6964
  %frombool = zext i1 %7 to i8, !dbg !6964
  store i8 %frombool, i8* %tmp, align 1, !dbg !6964
  %9 = load i8, i8* %tmp, align 1, !dbg !6964
  %tobool = trunc i8 %9 to i1, !dbg !6964
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !6968
  %lnot = xor i1 %call, true, !dbg !6968
  %lnot3 = xor i1 %lnot, true, !dbg !6968
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !6968
  %conv4 = sext i32 %lnot.ext to i64, !dbg !6968
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !6968
  br i1 %tobool5, label %if.then, label %if.end, !dbg !6969

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !6970
  br label %return, !dbg !6970

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !6971
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !6972
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !6973

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !6974
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !6975
  br i1 %13, label %if.then6, label %if.end8, !dbg !6976

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !6977
  %15 = load i32, i32* %flags.addr, align 4, !dbg !6978
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !6979
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #4, !dbg !6980
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !6981

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !6982
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !6983
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6984

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !6985
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !6986
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !6987
  %call.i.i = call i32 @get_order(i64 %21) #14, !dbg !6988
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6949
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !6989
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6990
  %24 = load i32, i32* %order.i.i, align 4, !dbg !6991
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6992
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6993
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6994
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #13, !dbg !6995
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6995
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6995
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6995
  call void @llvm.assume(i1 %maskcond.i.i.i) #4, !dbg !6995
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6996
  br label %kmalloc.exit, !dbg !6996

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !6997
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6998
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !6998
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6999

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7000
  br label %kmalloc_index.exit.i, !dbg !7000

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7001
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !7002
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7003

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7004
  br label %kmalloc_index.exit.i, !dbg !7004

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7005
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !7006
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7007

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7008
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !7009
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7010

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7011
  br label %kmalloc_index.exit.i, !dbg !7011

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7012
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !7013
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7014

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7015
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !7016
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7017

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7018
  br label %kmalloc_index.exit.i, !dbg !7018

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7019
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !7020
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7021

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7022
  br label %kmalloc_index.exit.i, !dbg !7022

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7023
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !7024
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7025

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7026
  br label %kmalloc_index.exit.i, !dbg !7026

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7027
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !7028
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7029

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7030
  br label %kmalloc_index.exit.i, !dbg !7030

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7031
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !7032
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7033

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7034
  br label %kmalloc_index.exit.i, !dbg !7034

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7035
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !7036
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7037

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7038
  br label %kmalloc_index.exit.i, !dbg !7038

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7039
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !7040
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7041

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7042
  br label %kmalloc_index.exit.i, !dbg !7042

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7043
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !7044
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7045

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7046
  br label %kmalloc_index.exit.i, !dbg !7046

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7047
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !7048
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7049

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7050
  br label %kmalloc_index.exit.i, !dbg !7050

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7051
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !7052
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7053

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7054
  br label %kmalloc_index.exit.i, !dbg !7054

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7055
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !7056
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7057

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7058
  br label %kmalloc_index.exit.i, !dbg !7058

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7059
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !7060
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7061

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7062
  br label %kmalloc_index.exit.i, !dbg !7062

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7063
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !7064
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7065

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7066
  br label %kmalloc_index.exit.i, !dbg !7066

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7067
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !7068
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7069

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7070
  br label %kmalloc_index.exit.i, !dbg !7070

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7071
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !7072
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7073

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7074
  br label %kmalloc_index.exit.i, !dbg !7074

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7075
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !7076
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7077

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7078
  br label %kmalloc_index.exit.i, !dbg !7078

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7079
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !7080
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7081

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7082
  br label %kmalloc_index.exit.i, !dbg !7082

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7083
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !7084
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7085

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7086
  br label %kmalloc_index.exit.i, !dbg !7086

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7087
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !7088
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7089

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7090
  br label %kmalloc_index.exit.i, !dbg !7090

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7091
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !7092
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7093

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7094
  br label %kmalloc_index.exit.i, !dbg !7094

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7095
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !7096
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7097

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7098
  br label %kmalloc_index.exit.i, !dbg !7098

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7099
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !7100
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7101

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7102
  br label %kmalloc_index.exit.i, !dbg !7102

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7103
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !7104
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7105

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7106
  br label %kmalloc_index.exit.i, !dbg !7106

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7107
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !7108
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7109

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7110
  br label %kmalloc_index.exit.i, !dbg !7110

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7111
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !7112
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7113

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7114
  br label %kmalloc_index.exit.i, !dbg !7114

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #4, !dbg !7115, !srcloc !6748
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 202) #4, !dbg !7116, !srcloc !6752
  unreachable, !dbg !7117

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !7118
  store i32 %59, i32* %index.i, align 4, !dbg !7119
  %60 = load i32, i32* %index.i, align 4, !dbg !7120
  %tobool.i = icmp ne i32 %60, 0, !dbg !7120
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7121

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7122
  br label %kmalloc.exit, !dbg !7122

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !7123
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7124
  %and.i.i = and i32 %62, 17, !dbg !7124
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7124
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7124
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7124
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7124
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7125

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7126
  br label %kmalloc_type.exit.i, !dbg !7126

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7127
  %and2.i.i = and i32 %63, 1, !dbg !7128
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7127
  %64 = zext i1 %tobool3.i.i to i64, !dbg !7127
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7127
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7129
  br label %kmalloc_type.exit.i, !dbg !7129

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !7130
  %idxprom.i = zext i32 %65 to i64, !dbg !7131
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7131
  %66 = load i32, i32* %index.i, align 4, !dbg !7132
  %idxprom6.i = zext i32 %66 to i64, !dbg !7131
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7131
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7131
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !7133
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !7134
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7135
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7136
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #13, !dbg !7137
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7137
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7137
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7137
  call void @llvm.assume(i1 %maskcond.i.i) #4, !dbg !7137
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6937
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7138
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !7139
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7140
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7141
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #13, !dbg !7142
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7143
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !7144
  store i8* %76, i8** %retval.i, align 8, !dbg !7145
  br label %kmalloc.exit, !dbg !7145

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !7146
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !7147
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #13, !dbg !7148
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7148
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7148
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7148
  call void @llvm.assume(i1 %maskcond.i) #4, !dbg !7148
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7149
  br label %kmalloc.exit, !dbg !7149

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !7150
  store i8* %79, i8** %retval, align 8, !dbg !7151
  br label %return, !dbg !7151

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !7152
  %81 = load i32, i32* %flags.addr, align 4, !dbg !7153
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !7154
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !7154
  %maskedptr = and i64 %ptrint, 7, !dbg !7154
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !7154
  call void @llvm.assume(i1 %maskcond), !dbg !7154
  store i8* %call9, i8** %retval, align 8, !dbg !7155
  br label %return, !dbg !7155

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !7156
  ret i8* %82, !dbg !7156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !7157 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !7161, metadata !DIExpression()), !dbg !7162
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !7163
  %tobool = trunc i8 %0 to i1, !dbg !7163
  %lnot = xor i1 %tobool, true, !dbg !7163
  %lnot1 = xor i1 %lnot, true, !dbg !7163
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7163
  %conv = sext i32 %lnot.ext to i64, !dbg !7163
  %tobool2 = icmp ne i64 %conv, 0, !dbg !7163
  ret i1 %tobool2, !dbg !7164
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kmalloc(%struct.device*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @build_info_prepare(%struct.build_feature_devs_info* %binfo, i64 %start, i64 %len) #0 !dbg !7165 {
entry:
  %retval = alloca i32, align 4
  %binfo.addr = alloca %struct.build_feature_devs_info*, align 8
  %start.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %dev = alloca %struct.device*, align 8
  %ioaddr = alloca i8*, align 8
  store %struct.build_feature_devs_info* %binfo, %struct.build_feature_devs_info** %binfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo.addr, metadata !7166, metadata !DIExpression()), !dbg !7167
  store i64 %start, i64* %start.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !7168, metadata !DIExpression()), !dbg !7169
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !7170, metadata !DIExpression()), !dbg !7171
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !7172, metadata !DIExpression()), !dbg !7173
  %0 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7174
  %dev1 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %0, i32 0, i32 0, !dbg !7175
  %1 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !7175
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !7173
  call void @llvm.dbg.declare(metadata i8** %ioaddr, metadata !7176, metadata !DIExpression()), !dbg !7177
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7178
  %3 = load i64, i64* %start.addr, align 8, !dbg !7178
  %4 = load i64, i64* %len.addr, align 8, !dbg !7178
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7178
  %call = call i8* @dev_name(%struct.device* %5) #11, !dbg !7178
  %call2 = call %struct.resource* @__devm_request_region(%struct.device* %2, %struct.resource* @iomem_resource, i64 %3, i64 %4, i8* %call) #11, !dbg !7178
  %tobool = icmp ne %struct.resource* %call2, null, !dbg !7178
  br i1 %tobool, label %if.end, label %if.then, !dbg !7180

if.then:                                          ; preds = %entry
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7181
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %6, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0), i64* %start.addr, i64* %len.addr) #12, !dbg !7181
  store i32 -16, i32* %retval, align 4, !dbg !7183
  br label %return, !dbg !7183

if.end:                                           ; preds = %entry
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7184
  %8 = load i64, i64* %start.addr, align 8, !dbg !7185
  %9 = load i64, i64* %len.addr, align 8, !dbg !7186
  %call3 = call i8* @devm_ioremap(%struct.device* %7, i64 %8, i64 %9) #11, !dbg !7187
  store i8* %call3, i8** %ioaddr, align 8, !dbg !7188
  %10 = load i8*, i8** %ioaddr, align 8, !dbg !7189
  %tobool4 = icmp ne i8* %10, null, !dbg !7189
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !7191

if.then5:                                         ; preds = %if.end
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7192
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %11, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.13, i64 0, i64 0), i64* %start.addr, i64* %len.addr) #12, !dbg !7192
  store i32 -12, i32* %retval, align 4, !dbg !7194
  br label %return, !dbg !7194

if.end6:                                          ; preds = %if.end
  %12 = load i64, i64* %start.addr, align 8, !dbg !7195
  %13 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7196
  %start7 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %13, i32 0, i32 6, !dbg !7197
  store i64 %12, i64* %start7, align 8, !dbg !7198
  %14 = load i64, i64* %len.addr, align 8, !dbg !7199
  %15 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7200
  %len8 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %15, i32 0, i32 7, !dbg !7201
  store i64 %14, i64* %len8, align 8, !dbg !7202
  %16 = load i8*, i8** %ioaddr, align 8, !dbg !7203
  %17 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7204
  %ioaddr9 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %17, i32 0, i32 5, !dbg !7205
  store i8* %16, i8** %ioaddr9, align 8, !dbg !7206
  store i32 0, i32* %retval, align 4, !dbg !7207
  br label %return, !dbg !7207

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !7208
  ret i32 %18, !dbg !7208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @parse_feature(%struct.build_feature_devs_info* %binfo, i64 %ofst) #0 !dbg !7209 {
entry:
  %retval = alloca i32, align 4
  %binfo.addr = alloca %struct.build_feature_devs_info*, align 8
  %ofst.addr = alloca i64, align 8
  %v = alloca i64, align 8
  %type = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.build_feature_devs_info* %binfo, %struct.build_feature_devs_info** %binfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo.addr, metadata !7212, metadata !DIExpression()), !dbg !7213
  store i64 %ofst, i64* %ofst.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofst.addr, metadata !7214, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.declare(metadata i64* %v, metadata !7216, metadata !DIExpression()), !dbg !7217
  call void @llvm.dbg.declare(metadata i32* %type, metadata !7218, metadata !DIExpression()), !dbg !7219
  %0 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7220
  %ioaddr = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %0, i32 0, i32 5, !dbg !7221
  %1 = load i8*, i8** %ioaddr, align 8, !dbg !7221
  %2 = load i64, i64* %ofst.addr, align 8, !dbg !7222
  %add.ptr = getelementptr i8, i8* %1, i64 %2, !dbg !7223
  %add.ptr1 = getelementptr i8, i8* %add.ptr, i64 0, !dbg !7224
  %call = call i64 @readq(i8* %add.ptr1) #11, !dbg !7225
  store i64 %call, i64* %v, align 8, !dbg !7226
  br label %do.body, !dbg !7227

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7230

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !7227

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !7232

do.end3:                                          ; preds = %do.body2
  br label %do.body4, !dbg !7227

do.body4:                                         ; preds = %do.end3
  br label %do.end5, !dbg !7234

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !7227

do.body6:                                         ; preds = %do.end5
  br label %do.end7, !dbg !7236

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !7227

do.body8:                                         ; preds = %do.end7
  br label %do.end9, !dbg !7238

do.end9:                                          ; preds = %do.body8
  %3 = load i64, i64* %v, align 8, !dbg !7240
  %and = and i64 %3, -1152921504606846976, !dbg !7240
  %shr = lshr i64 %and, 60, !dbg !7240
  store i64 %shr, i64* %tmp, align 8, !dbg !7240
  %4 = load i64, i64* %tmp, align 8, !dbg !7240
  %conv = trunc i64 %4 to i32, !dbg !7241
  store i32 %conv, i32* %type, align 4, !dbg !7242
  %5 = load i32, i32* %type, align 4, !dbg !7243
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb11
    i32 4, label %sw.bb13
  ], !dbg !7244

sw.bb:                                            ; preds = %do.end9
  %6 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7245
  %7 = load i64, i64* %ofst.addr, align 8, !dbg !7247
  %call10 = call i32 @parse_feature_afu(%struct.build_feature_devs_info* %6, i64 %7) #11, !dbg !7248
  store i32 %call10, i32* %retval, align 4, !dbg !7249
  br label %return, !dbg !7249

sw.bb11:                                          ; preds = %do.end9
  %8 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7250
  %9 = load i64, i64* %ofst.addr, align 8, !dbg !7251
  %call12 = call i32 @parse_feature_private(%struct.build_feature_devs_info* %8, i64 %9) #11, !dbg !7252
  store i32 %call12, i32* %retval, align 4, !dbg !7253
  br label %return, !dbg !7253

sw.bb13:                                          ; preds = %do.end9
  %10 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7254
  %11 = load i64, i64* %ofst.addr, align 8, !dbg !7255
  %call14 = call i32 @parse_feature_fiu(%struct.build_feature_devs_info* %10, i64 %11) #11, !dbg !7256
  store i32 %call14, i32* %retval, align 4, !dbg !7257
  br label %return, !dbg !7257

sw.default:                                       ; preds = %do.end9
  %12 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7258
  %dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %12, i32 0, i32 0, !dbg !7258
  %13 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7258
  %14 = load i32, i32* %type, align 4, !dbg !7258
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %13, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0), i32 %14) #12, !dbg !7258
  br label %sw.epilog, !dbg !7259

sw.epilog:                                        ; preds = %sw.default
  store i32 0, i32* %retval, align 4, !dbg !7260
  br label %return, !dbg !7260

return:                                           ; preds = %sw.epilog, %sw.bb13, %sw.bb11, %sw.bb
  %15 = load i32, i32* %retval, align 4, !dbg !7261
  ret i32 %15, !dbg !7261
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @readq(i8* %addr) #0 !dbg !7262 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i64, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !7269, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !7271, metadata !DIExpression()), !dbg !7270
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !7270
  %1 = bitcast i8* %0 to i64*, !dbg !7270
  %2 = call i64 asm sideeffect "movq $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %1) #4, !dbg !7270, !srcloc !7272
  store i64 %2, i64* %ret, align 8, !dbg !7270
  %3 = load i64, i64* %ret, align 8, !dbg !7270
  ret i64 %3, !dbg !7270
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_info_complete(%struct.build_feature_devs_info* %binfo) #0 !dbg !7273 {
entry:
  %binfo.addr = alloca %struct.build_feature_devs_info*, align 8
  store %struct.build_feature_devs_info* %binfo, %struct.build_feature_devs_info** %binfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo.addr, metadata !7274, metadata !DIExpression()), !dbg !7275
  %0 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7276
  %dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %0, i32 0, i32 0, !dbg !7277
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7277
  %2 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7278
  %ioaddr = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %2, i32 0, i32 5, !dbg !7279
  %3 = load i8*, i8** %ioaddr, align 8, !dbg !7279
  call void @devm_iounmap(%struct.device* %1, i8* %3) #11, !dbg !7280
  %4 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7281
  %dev1 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %4, i32 0, i32 0, !dbg !7281
  %5 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !7281
  %6 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7281
  %start = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %6, i32 0, i32 6, !dbg !7281
  %7 = load i64, i64* %start, align 8, !dbg !7281
  %8 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7281
  %len = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %8, i32 0, i32 7, !dbg !7281
  %9 = load i64, i64* %len, align 8, !dbg !7281
  call void @__devm_release_region(%struct.device* %5, %struct.resource* @iomem_resource, i64 %7, i64 %9) #11, !dbg !7281
  ret void, !dbg !7282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @build_info_commit_dev(%struct.build_feature_devs_info* %binfo) #0 !dbg !3932 {
entry:
  %retval = alloca i32, align 4
  %binfo.addr = alloca %struct.build_feature_devs_info*, align 8
  %fdev = alloca %struct.platform_device*, align 8
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  %finfo = alloca %struct.dfl_feature_info*, align 8
  %p = alloca %struct.dfl_feature_info*, align 8
  %type = alloca i32, align 4
  %ret = alloca i32, align 4
  %index = alloca i32, align 4
  %res_idx = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on35 = alloca i32, align 4
  %tmp58 = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp76 = alloca %struct.dfl_feature_info*, align 8
  %__mptr77 = alloca i8*, align 8
  %tmp81 = alloca %struct.dfl_feature_info*, align 8
  %feature = alloca %struct.dfl_feature*, align 8
  %ctx = alloca %struct.dfl_feature_irq_ctx*, align 8
  %i = alloca i32, align 4
  %__mptr138 = alloca i8*, align 8
  %tmp143 = alloca %struct.dfl_feature_info*, align 8
  store %struct.build_feature_devs_info* %binfo, %struct.build_feature_devs_info** %binfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo.addr, metadata !7283, metadata !DIExpression()), !dbg !7284
  call void @llvm.dbg.declare(metadata %struct.platform_device** %fdev, metadata !7285, metadata !DIExpression()), !dbg !7286
  %0 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7287
  %feature_dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %0, i32 0, i32 4, !dbg !7288
  %1 = load %struct.platform_device*, %struct.platform_device** %feature_dev, align 8, !dbg !7288
  store %struct.platform_device* %1, %struct.platform_device** %fdev, align 8, !dbg !7286
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !7289, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_info** %finfo, metadata !7291, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_info** %p, metadata !7293, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.declare(metadata i32* %type, metadata !7295, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7297, metadata !DIExpression()), !dbg !7298
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7299, metadata !DIExpression()), !dbg !7300
  store i32 0, i32* %index, align 4, !dbg !7300
  call void @llvm.dbg.declare(metadata i32* %res_idx, metadata !7301, metadata !DIExpression()), !dbg !7302
  store i32 0, i32* %res_idx, align 4, !dbg !7302
  %2 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !7303
  %call = call i32 @feature_dev_id_type(%struct.platform_device* %2) #11, !dbg !7304
  store i32 %call, i32* %type, align 4, !dbg !7305
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7306, metadata !DIExpression()), !dbg !7309
  %3 = load i32, i32* %type, align 4, !dbg !7309
  %cmp = icmp uge i32 %3, 2, !dbg !7309
  %lnot = xor i1 %cmp, true, !dbg !7309
  %lnot1 = xor i1 %lnot, true, !dbg !7309
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7309
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7309
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !7310
  %tobool = icmp ne i32 %4, 0, !dbg !7310
  %lnot2 = xor i1 %tobool, true, !dbg !7310
  %lnot4 = xor i1 %lnot2, true, !dbg !7310
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !7310
  %conv = sext i32 %lnot.ext5 to i64, !dbg !7310
  %tobool6 = icmp ne i64 %conv, 0, !dbg !7310
  br i1 %tobool6, label %if.then, label %if.end, !dbg !7309

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7310

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !7312

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !7314

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !7312

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), i32 752, i32 2307, i64 12) #4, !dbg !7316, !srcloc !7318
  br label %do.end9, !dbg !7316

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 245) #4, !dbg !7319, !srcloc !7321
  br label %do.body10, !dbg !7312

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !7322

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !7312

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !7312

if.end:                                           ; preds = %do.end12, %entry
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !7309
  %tobool13 = icmp ne i32 %5, 0, !dbg !7309
  %lnot14 = xor i1 %tobool13, true, !dbg !7309
  %lnot16 = xor i1 %lnot14, true, !dbg !7309
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !7309
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !7309
  store i64 %conv18, i64* %tmp, align 8, !dbg !7310
  %6 = load i64, i64* %tmp, align 8, !dbg !7309
  %tobool19 = icmp ne i64 %6, 0, !dbg !7324
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !7325

if.then20:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7326
  br label %return, !dbg !7326

if.end21:                                         ; preds = %if.end
  %7 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7327
  %feature_num = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %7, i32 0, i32 9, !dbg !7327
  %8 = load i32, i32* %feature_num, align 8, !dbg !7327
  %conv22 = sext i32 %8 to i64, !dbg !7327
  %call23 = call i64 @__ab_c_size(i64 %conv22, i64 64, i64 192) #11, !dbg !7327
  %call24 = call i8* @kzalloc(i64 %call23, i32 3264) #11, !dbg !7328
  %9 = bitcast i8* %call24 to %struct.dfl_feature_platform_data*, !dbg !7328
  store %struct.dfl_feature_platform_data* %9, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !7329
  %10 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !7330
  %tobool25 = icmp ne %struct.dfl_feature_platform_data* %10, null, !dbg !7330
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !7332

if.then26:                                        ; preds = %if.end21
  store i32 -12, i32* %retval, align 4, !dbg !7333
  br label %return, !dbg !7333

if.end27:                                         ; preds = %if.end21
  %11 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !7334
  %12 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !7335
  %dev = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %12, i32 0, i32 3, !dbg !7336
  store %struct.platform_device* %11, %struct.platform_device** %dev, align 8, !dbg !7337
  %13 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7338
  %feature_num28 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %13, i32 0, i32 9, !dbg !7339
  %14 = load i32, i32* %feature_num28, align 8, !dbg !7339
  %15 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !7340
  %num = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %15, i32 0, i32 10, !dbg !7341
  store i32 %14, i32* %num, align 8, !dbg !7342
  %16 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7343
  %cdev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %16, i32 0, i32 1, !dbg !7344
  %17 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !7344
  %18 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !7345
  %dfl_cdev = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %18, i32 0, i32 4, !dbg !7346
  store %struct.dfl_fpga_cdev* %17, %struct.dfl_fpga_cdev** %dfl_cdev, align 8, !dbg !7347
  %19 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !7348
  %id = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %19, i32 0, i32 5, !dbg !7349
  store i32 -1, i32* %id, align 8, !dbg !7350
  br label %do.body29, !dbg !7351

do.body29:                                        ; preds = %if.end27
  %20 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !7352
  %lock = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %20, i32 0, i32 1, !dbg !7352
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), %struct.lock_class_key* @build_info_commit_dev.__key) #11, !dbg !7352
  br label %do.end30, !dbg !7352

do.end30:                                         ; preds = %do.body29
  br label %do.body31, !dbg !7354

do.body31:                                        ; preds = %do.end30
  %21 = load i32, i32* %type, align 4, !dbg !7355
  %idxprom = zext i32 %21 to i64, !dbg !7355
  %arrayidx = getelementptr [2 x %struct.lock_class_key], [2 x %struct.lock_class_key]* @dfl_pdata_keys, i64 0, i64 %idxprom, !dbg !7355
  %22 = load i32, i32* %type, align 4, !dbg !7355
  %idxprom32 = zext i32 %22 to i64, !dbg !7355
  %arrayidx33 = getelementptr [2 x i8*], [2 x i8*]* @dfl_pdata_key_strings, i64 0, i64 %idxprom32, !dbg !7355
  %23 = load i8*, i8** %arrayidx33, align 8, !dbg !7355
  br label %do.end34, !dbg !7355

do.end34:                                         ; preds = %do.body31
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on35, metadata !7357, metadata !DIExpression()), !dbg !7359
  %24 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !7359
  %disable_count = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %24, i32 0, i32 6, !dbg !7359
  %25 = load i32, i32* %disable_count, align 4, !dbg !7359
  %tobool36 = icmp ne i32 %25, 0, !dbg !7359
  %lnot37 = xor i1 %tobool36, true, !dbg !7359
  %lnot39 = xor i1 %lnot37, true, !dbg !7359
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !7359
  store i32 %lnot.ext40, i32* %__ret_warn_on35, align 4, !dbg !7359
  %26 = load i32, i32* %__ret_warn_on35, align 4, !dbg !7360
  %tobool41 = icmp ne i32 %26, 0, !dbg !7360
  %lnot42 = xor i1 %tobool41, true, !dbg !7360
  %lnot44 = xor i1 %lnot42, true, !dbg !7360
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !7360
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !7360
  %tobool47 = icmp ne i64 %conv46, 0, !dbg !7360
  br i1 %tobool47, label %if.then48, label %if.end57, !dbg !7359

if.then48:                                        ; preds = %do.end34
  br label %do.body49, !dbg !7360

do.body49:                                        ; preds = %if.then48
  br label %do.body50, !dbg !7362

do.body50:                                        ; preds = %do.body49
  br label %do.end51, !dbg !7364

do.end51:                                         ; preds = %do.body50
  br label %do.body52, !dbg !7362

do.body52:                                        ; preds = %do.end51
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), i32 779, i32 2305, i64 12) #4, !dbg !7366, !srcloc !7368
  br label %do.end53, !dbg !7366

do.end53:                                         ; preds = %do.body52
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 246) #4, !dbg !7369, !srcloc !7371
  br label %do.body54, !dbg !7362

do.body54:                                        ; preds = %do.end53
  br label %do.end55, !dbg !7372

do.end55:                                         ; preds = %do.body54
  br label %do.end56, !dbg !7362

do.end56:                                         ; preds = %do.end55
  br label %if.end57, !dbg !7362

if.end57:                                         ; preds = %do.end56, %do.end34
  %27 = load i32, i32* %__ret_warn_on35, align 4, !dbg !7359
  %tobool59 = icmp ne i32 %27, 0, !dbg !7359
  %lnot60 = xor i1 %tobool59, true, !dbg !7359
  %lnot62 = xor i1 %lnot60, true, !dbg !7359
  %lnot.ext63 = zext i1 %lnot62 to i32, !dbg !7359
  %conv64 = sext i32 %lnot.ext63 to i64, !dbg !7359
  store i64 %conv64, i64* %tmp58, align 8, !dbg !7360
  %28 = load i64, i64* %tmp58, align 8, !dbg !7359
  %29 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !7374
  %30 = bitcast %struct.dfl_feature_platform_data* %29 to i8*, !dbg !7374
  %31 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !7375
  %dev65 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %31, i32 0, i32 3, !dbg !7376
  %platform_data = getelementptr inbounds %struct.device, %struct.device* %dev65, i32 0, i32 7, !dbg !7377
  store i8* %30, i8** %platform_data, align 8, !dbg !7378
  %32 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7379
  %feature_num66 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %32, i32 0, i32 9, !dbg !7380
  %33 = load i32, i32* %feature_num66, align 8, !dbg !7380
  %34 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !7381
  %num_resources = getelementptr inbounds %struct.platform_device, %struct.platform_device* %34, i32 0, i32 6, !dbg !7382
  store i32 %33, i32* %num_resources, align 8, !dbg !7383
  %35 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7384
  %feature_num67 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %35, i32 0, i32 9, !dbg !7385
  %36 = load i32, i32* %feature_num67, align 8, !dbg !7385
  %conv68 = sext i32 %36 to i64, !dbg !7384
  %call69 = call i8* @kcalloc(i64 %conv68, i64 64, i32 3264) #11, !dbg !7386
  %37 = bitcast i8* %call69 to %struct.resource*, !dbg !7386
  %38 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !7387
  %resource = getelementptr inbounds %struct.platform_device, %struct.platform_device* %38, i32 0, i32 7, !dbg !7388
  store %struct.resource* %37, %struct.resource** %resource, align 8, !dbg !7389
  %39 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !7390
  %resource70 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %39, i32 0, i32 7, !dbg !7392
  %40 = load %struct.resource*, %struct.resource** %resource70, align 8, !dbg !7392
  %tobool71 = icmp ne %struct.resource* %40, null, !dbg !7390
  br i1 %tobool71, label %if.end73, label %if.then72, !dbg !7393

if.then72:                                        ; preds = %if.end57
  store i32 -12, i32* %retval, align 4, !dbg !7394
  br label %return, !dbg !7394

if.end73:                                         ; preds = %if.end57
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7395, metadata !DIExpression()), !dbg !7398
  %41 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7398
  %sub_features = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %41, i32 0, i32 8, !dbg !7398
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %sub_features, i32 0, i32 0, !dbg !7398
  %42 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7398
  %43 = bitcast %struct.list_head* %42 to i8*, !dbg !7398
  store i8* %43, i8** %__mptr, align 8, !dbg !7398
  br label %do.body74, !dbg !7398

do.body74:                                        ; preds = %if.end73
  br label %do.end75, !dbg !7399

do.end75:                                         ; preds = %do.body74
  %44 = load i8*, i8** %__mptr, align 8, !dbg !7398
  %add.ptr = getelementptr i8, i8* %44, i64 -80, !dbg !7398
  %45 = bitcast i8* %add.ptr to %struct.dfl_feature_info*, !dbg !7398
  store %struct.dfl_feature_info* %45, %struct.dfl_feature_info** %tmp76, align 8, !dbg !7399
  %46 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %tmp76, align 8, !dbg !7398
  store %struct.dfl_feature_info* %46, %struct.dfl_feature_info** %finfo, align 8, !dbg !7401
  call void @llvm.dbg.declare(metadata i8** %__mptr77, metadata !7402, metadata !DIExpression()), !dbg !7404
  %47 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7404
  %node = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %47, i32 0, i32 3, !dbg !7404
  %next78 = getelementptr inbounds %struct.list_head, %struct.list_head* %node, i32 0, i32 0, !dbg !7404
  %48 = load %struct.list_head*, %struct.list_head** %next78, align 8, !dbg !7404
  %49 = bitcast %struct.list_head* %48 to i8*, !dbg !7404
  store i8* %49, i8** %__mptr77, align 8, !dbg !7404
  br label %do.body79, !dbg !7404

do.body79:                                        ; preds = %do.end75
  br label %do.end80, !dbg !7405

do.end80:                                         ; preds = %do.body79
  %50 = load i8*, i8** %__mptr77, align 8, !dbg !7404
  %add.ptr82 = getelementptr i8, i8* %50, i64 -80, !dbg !7404
  %51 = bitcast i8* %add.ptr82 to %struct.dfl_feature_info*, !dbg !7404
  store %struct.dfl_feature_info* %51, %struct.dfl_feature_info** %tmp81, align 8, !dbg !7405
  %52 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %tmp81, align 8, !dbg !7404
  store %struct.dfl_feature_info* %52, %struct.dfl_feature_info** %p, align 8, !dbg !7401
  br label %for.cond, !dbg !7401

for.cond:                                         ; preds = %do.end142, %do.end80
  %53 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7407
  %node83 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %53, i32 0, i32 3, !dbg !7407
  %54 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7407
  %sub_features84 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %54, i32 0, i32 8, !dbg !7407
  %cmp85 = icmp eq %struct.list_head* %node83, %sub_features84, !dbg !7407
  %lnot87 = xor i1 %cmp85, true, !dbg !7407
  br i1 %lnot87, label %for.body, label %for.end145, !dbg !7401

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature, metadata !7409, metadata !DIExpression()), !dbg !7411
  %55 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !7412
  %features = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %55, i32 0, i32 11, !dbg !7413
  %56 = load i32, i32* %index, align 4, !dbg !7414
  %inc = add i32 %56, 1, !dbg !7414
  store i32 %inc, i32* %index, align 4, !dbg !7414
  %idxprom89 = sext i32 %56 to i64, !dbg !7412
  %arrayidx90 = getelementptr [0 x %struct.dfl_feature], [0 x %struct.dfl_feature]* %features, i64 0, i64 %idxprom89, !dbg !7412
  store %struct.dfl_feature* %arrayidx90, %struct.dfl_feature** %feature, align 8, !dbg !7411
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_irq_ctx** %ctx, metadata !7415, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7417, metadata !DIExpression()), !dbg !7418
  %57 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !7419
  %58 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !7420
  %dev91 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %58, i32 0, i32 0, !dbg !7421
  store %struct.platform_device* %57, %struct.platform_device** %dev91, align 8, !dbg !7422
  %59 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7423
  %fid = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %59, i32 0, i32 0, !dbg !7424
  %60 = load i16, i16* %fid, align 8, !dbg !7424
  %61 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !7425
  %id92 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %61, i32 0, i32 1, !dbg !7426
  store i16 %60, i16* %id92, align 8, !dbg !7427
  %62 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !7428
  %id93 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %62, i32 0, i32 1, !dbg !7428
  %63 = load i16, i16* %id93, align 8, !dbg !7428
  %conv94 = zext i16 %63 to i32, !dbg !7428
  %cmp95 = icmp eq i32 %conv94, 254, !dbg !7428
  br i1 %cmp95, label %if.then97, label %if.else, !dbg !7430

if.then97:                                        ; preds = %for.body
  %64 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !7431
  %resource_index = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %64, i32 0, i32 2, !dbg !7433
  store i32 -1, i32* %resource_index, align 4, !dbg !7434
  %65 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7435
  %dev98 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %65, i32 0, i32 0, !dbg !7436
  %66 = load %struct.device*, %struct.device** %dev98, align 8, !dbg !7436
  %67 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7437
  %mmio_res = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %67, i32 0, i32 1, !dbg !7438
  %call99 = call i8* @devm_ioremap_resource(%struct.device* %66, %struct.resource* %mmio_res) #11, !dbg !7439
  %68 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !7440
  %ioaddr = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %68, i32 0, i32 3, !dbg !7441
  store i8* %call99, i8** %ioaddr, align 8, !dbg !7442
  %69 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !7443
  %ioaddr100 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %69, i32 0, i32 3, !dbg !7445
  %70 = load i8*, i8** %ioaddr100, align 8, !dbg !7445
  %call101 = call zeroext i1 @IS_ERR(i8* %70) #11, !dbg !7446
  br i1 %call101, label %if.then102, label %if.end106, !dbg !7447

if.then102:                                       ; preds = %if.then97
  %71 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !7448
  %ioaddr103 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %71, i32 0, i32 3, !dbg !7449
  %72 = load i8*, i8** %ioaddr103, align 8, !dbg !7449
  %call104 = call i64 @PTR_ERR(i8* %72) #11, !dbg !7450
  %conv105 = trunc i64 %call104 to i32, !dbg !7450
  store i32 %conv105, i32* %retval, align 4, !dbg !7451
  br label %return, !dbg !7451

if.end106:                                        ; preds = %if.then97
  br label %if.end113, !dbg !7452

if.else:                                          ; preds = %for.body
  %73 = load i32, i32* %res_idx, align 4, !dbg !7453
  %74 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !7455
  %resource_index107 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %74, i32 0, i32 2, !dbg !7456
  store i32 %73, i32* %resource_index107, align 4, !dbg !7457
  %75 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !7458
  %resource108 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %75, i32 0, i32 7, !dbg !7459
  %76 = load %struct.resource*, %struct.resource** %resource108, align 8, !dbg !7459
  %77 = load i32, i32* %res_idx, align 4, !dbg !7460
  %inc109 = add i32 %77, 1, !dbg !7460
  store i32 %inc109, i32* %res_idx, align 4, !dbg !7460
  %idxprom110 = sext i32 %77 to i64, !dbg !7458
  %arrayidx111 = getelementptr %struct.resource, %struct.resource* %76, i64 %idxprom110, !dbg !7458
  %78 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7461
  %mmio_res112 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %78, i32 0, i32 1, !dbg !7462
  %79 = bitcast %struct.resource* %arrayidx111 to i8*, !dbg !7462
  %80 = bitcast %struct.resource* %mmio_res112 to i8*, !dbg !7462
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 64, i1 false), !dbg !7462
  br label %if.end113

if.end113:                                        ; preds = %if.else, %if.end106
  %81 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7463
  %nr_irqs = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %81, i32 0, i32 5, !dbg !7465
  %82 = load i32, i32* %nr_irqs, align 4, !dbg !7465
  %tobool114 = icmp ne i32 %82, 0, !dbg !7463
  br i1 %tobool114, label %if.then115, label %if.end135, !dbg !7466

if.then115:                                       ; preds = %if.end113
  %83 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7467
  %dev116 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %83, i32 0, i32 0, !dbg !7469
  %84 = load %struct.device*, %struct.device** %dev116, align 8, !dbg !7469
  %85 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7470
  %nr_irqs117 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %85, i32 0, i32 5, !dbg !7471
  %86 = load i32, i32* %nr_irqs117, align 4, !dbg !7471
  %conv118 = zext i32 %86 to i64, !dbg !7470
  %call119 = call i8* @devm_kcalloc(%struct.device* %84, i64 %conv118, i64 24, i32 3264) #11, !dbg !7472
  %87 = bitcast i8* %call119 to %struct.dfl_feature_irq_ctx*, !dbg !7472
  store %struct.dfl_feature_irq_ctx* %87, %struct.dfl_feature_irq_ctx** %ctx, align 8, !dbg !7473
  %88 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %ctx, align 8, !dbg !7474
  %tobool120 = icmp ne %struct.dfl_feature_irq_ctx* %88, null, !dbg !7474
  br i1 %tobool120, label %if.end122, label %if.then121, !dbg !7476

if.then121:                                       ; preds = %if.then115
  store i32 -12, i32* %retval, align 4, !dbg !7477
  br label %return, !dbg !7477

if.end122:                                        ; preds = %if.then115
  store i32 0, i32* %i, align 4, !dbg !7478
  br label %for.cond123, !dbg !7480

for.cond123:                                      ; preds = %for.inc, %if.end122
  %89 = load i32, i32* %i, align 4, !dbg !7481
  %90 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7483
  %nr_irqs124 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %90, i32 0, i32 5, !dbg !7484
  %91 = load i32, i32* %nr_irqs124, align 4, !dbg !7484
  %cmp125 = icmp ult i32 %89, %91, !dbg !7485
  br i1 %cmp125, label %for.body127, label %for.end, !dbg !7486

for.body127:                                      ; preds = %for.cond123
  %92 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7487
  %irq_table = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %92, i32 0, i32 3, !dbg !7488
  %93 = load i32*, i32** %irq_table, align 8, !dbg !7488
  %94 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7489
  %irq_base = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %94, i32 0, i32 4, !dbg !7490
  %95 = load i32, i32* %irq_base, align 8, !dbg !7490
  %96 = load i32, i32* %i, align 4, !dbg !7491
  %add = add i32 %95, %96, !dbg !7492
  %idxprom128 = zext i32 %add to i64, !dbg !7487
  %arrayidx129 = getelementptr i32, i32* %93, i64 %idxprom128, !dbg !7487
  %97 = load i32, i32* %arrayidx129, align 4, !dbg !7487
  %98 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %ctx, align 8, !dbg !7493
  %99 = load i32, i32* %i, align 4, !dbg !7494
  %idxprom130 = zext i32 %99 to i64, !dbg !7493
  %arrayidx131 = getelementptr %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %98, i64 %idxprom130, !dbg !7493
  %irq = getelementptr inbounds %struct.dfl_feature_irq_ctx, %struct.dfl_feature_irq_ctx* %arrayidx131, i32 0, i32 0, !dbg !7495
  store i32 %97, i32* %irq, align 8, !dbg !7496
  br label %for.inc, !dbg !7493

for.inc:                                          ; preds = %for.body127
  %100 = load i32, i32* %i, align 4, !dbg !7497
  %inc132 = add i32 %100, 1, !dbg !7497
  store i32 %inc132, i32* %i, align 4, !dbg !7497
  br label %for.cond123, !dbg !7498, !llvm.loop !7499

for.end:                                          ; preds = %for.cond123
  %101 = load %struct.dfl_feature_irq_ctx*, %struct.dfl_feature_irq_ctx** %ctx, align 8, !dbg !7501
  %102 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !7502
  %irq_ctx = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %102, i32 0, i32 4, !dbg !7503
  store %struct.dfl_feature_irq_ctx* %101, %struct.dfl_feature_irq_ctx** %irq_ctx, align 8, !dbg !7504
  %103 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7505
  %nr_irqs133 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %103, i32 0, i32 5, !dbg !7506
  %104 = load i32, i32* %nr_irqs133, align 4, !dbg !7506
  %105 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !7507
  %nr_irqs134 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %105, i32 0, i32 5, !dbg !7508
  store i32 %104, i32* %nr_irqs134, align 8, !dbg !7509
  br label %if.end135, !dbg !7510

if.end135:                                        ; preds = %for.end, %if.end113
  %106 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7511
  %node136 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %106, i32 0, i32 3, !dbg !7512
  call void @list_del(%struct.list_head* %node136) #11, !dbg !7513
  %107 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7514
  %108 = bitcast %struct.dfl_feature_info* %107 to i8*, !dbg !7514
  call void @kfree(i8* %108) #11, !dbg !7515
  br label %for.inc137, !dbg !7516

for.inc137:                                       ; preds = %if.end135
  %109 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %p, align 8, !dbg !7407
  store %struct.dfl_feature_info* %109, %struct.dfl_feature_info** %finfo, align 8, !dbg !7407
  call void @llvm.dbg.declare(metadata i8** %__mptr138, metadata !7517, metadata !DIExpression()), !dbg !7519
  %110 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %p, align 8, !dbg !7519
  %node139 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %110, i32 0, i32 3, !dbg !7519
  %next140 = getelementptr inbounds %struct.list_head, %struct.list_head* %node139, i32 0, i32 0, !dbg !7519
  %111 = load %struct.list_head*, %struct.list_head** %next140, align 8, !dbg !7519
  %112 = bitcast %struct.list_head* %111 to i8*, !dbg !7519
  store i8* %112, i8** %__mptr138, align 8, !dbg !7519
  br label %do.body141, !dbg !7519

do.body141:                                       ; preds = %for.inc137
  br label %do.end142, !dbg !7520

do.end142:                                        ; preds = %do.body141
  %113 = load i8*, i8** %__mptr138, align 8, !dbg !7519
  %add.ptr144 = getelementptr i8, i8* %113, i64 -80, !dbg !7519
  %114 = bitcast i8* %add.ptr144 to %struct.dfl_feature_info*, !dbg !7519
  store %struct.dfl_feature_info* %114, %struct.dfl_feature_info** %tmp143, align 8, !dbg !7520
  %115 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %tmp143, align 8, !dbg !7519
  store %struct.dfl_feature_info* %115, %struct.dfl_feature_info** %p, align 8, !dbg !7407
  br label %for.cond, !dbg !7407, !llvm.loop !7522

for.end145:                                       ; preds = %for.cond
  %116 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7524
  %feature_dev146 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %116, i32 0, i32 4, !dbg !7525
  %117 = load %struct.platform_device*, %struct.platform_device** %feature_dev146, align 8, !dbg !7525
  %call147 = call i32 @platform_device_add(%struct.platform_device* %117) #11, !dbg !7526
  store i32 %call147, i32* %ret, align 4, !dbg !7527
  %118 = load i32, i32* %ret, align 4, !dbg !7528
  %tobool148 = icmp ne i32 %118, 0, !dbg !7528
  br i1 %tobool148, label %if.end162, label %if.then149, !dbg !7530

if.then149:                                       ; preds = %for.end145
  %119 = load i32, i32* %type, align 4, !dbg !7531
  %cmp150 = icmp eq i32 %119, 1, !dbg !7534
  br i1 %cmp150, label %if.then152, label %if.else155, !dbg !7535

if.then152:                                       ; preds = %if.then149
  %120 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7536
  %cdev153 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %120, i32 0, i32 1, !dbg !7537
  %121 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev153, align 8, !dbg !7537
  %122 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7538
  %feature_dev154 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %122, i32 0, i32 4, !dbg !7539
  %123 = load %struct.platform_device*, %struct.platform_device** %feature_dev154, align 8, !dbg !7539
  call void @dfl_fpga_cdev_add_port_dev(%struct.dfl_fpga_cdev* %121, %struct.platform_device* %123) #11, !dbg !7540
  br label %if.end160, !dbg !7540

if.else155:                                       ; preds = %if.then149
  %124 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7541
  %feature_dev156 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %124, i32 0, i32 4, !dbg !7542
  %125 = load %struct.platform_device*, %struct.platform_device** %feature_dev156, align 8, !dbg !7542
  %dev157 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %125, i32 0, i32 3, !dbg !7543
  %call158 = call %struct.device* @get_device(%struct.device* %dev157) #11, !dbg !7544
  %126 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7545
  %cdev159 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %126, i32 0, i32 1, !dbg !7546
  %127 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev159, align 8, !dbg !7546
  %fme_dev = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %127, i32 0, i32 2, !dbg !7547
  store %struct.device* %call158, %struct.device** %fme_dev, align 8, !dbg !7548
  br label %if.end160

if.end160:                                        ; preds = %if.else155, %if.then152
  %128 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7549
  %feature_dev161 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %128, i32 0, i32 4, !dbg !7550
  store %struct.platform_device* null, %struct.platform_device** %feature_dev161, align 8, !dbg !7551
  br label %if.end162, !dbg !7552

if.end162:                                        ; preds = %if.end160, %for.end145
  %129 = load i32, i32* %ret, align 4, !dbg !7553
  store i32 %129, i32* %retval, align 4, !dbg !7554
  br label %return, !dbg !7554

return:                                           ; preds = %if.end162, %if.then121, %if.then102, %if.then72, %if.then26, %if.then20
  %130 = load i32, i32* %retval, align 4, !dbg !7555
  ret i32 %130, !dbg !7555
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @__devm_request_region(%struct.device*, %struct.resource*, i64, i64, i8*) #2

; Function Attrs: noredzone
declare dso_local i8* @devm_ioremap(%struct.device*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @parse_feature_afu(%struct.build_feature_devs_info* %binfo, i64 %ofst) #0 !dbg !7556 {
entry:
  %retval = alloca i32, align 4
  %binfo.addr = alloca %struct.build_feature_devs_info*, align 8
  %ofst.addr = alloca i64, align 8
  store %struct.build_feature_devs_info* %binfo, %struct.build_feature_devs_info** %binfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo.addr, metadata !7557, metadata !DIExpression()), !dbg !7558
  store i64 %ofst, i64* %ofst.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofst.addr, metadata !7559, metadata !DIExpression()), !dbg !7560
  %0 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7561
  %feature_dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %0, i32 0, i32 4, !dbg !7561
  %1 = load %struct.platform_device*, %struct.platform_device** %feature_dev, align 8, !dbg !7561
  %tobool = icmp ne %struct.platform_device* %1, null, !dbg !7561
  br i1 %tobool, label %if.end, label %if.then, !dbg !7563

if.then:                                          ; preds = %entry
  %2 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7564
  %dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %2, i32 0, i32 0, !dbg !7564
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7564
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !7564
  store i32 -22, i32* %retval, align 4, !dbg !7566
  br label %return, !dbg !7566

if.end:                                           ; preds = %entry
  %4 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7567
  %feature_dev1 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %4, i32 0, i32 4, !dbg !7568
  %5 = load %struct.platform_device*, %struct.platform_device** %feature_dev1, align 8, !dbg !7568
  %call = call i32 @feature_dev_id_type(%struct.platform_device* %5) #11, !dbg !7569
  switch i32 %call, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !7570

sw.bb:                                            ; preds = %if.end
  %6 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7571
  %7 = load i64, i64* %ofst.addr, align 8, !dbg !7573
  %call2 = call i32 @parse_feature_port_afu(%struct.build_feature_devs_info* %6, i64 %7) #11, !dbg !7574
  store i32 %call2, i32* %retval, align 4, !dbg !7575
  br label %return, !dbg !7575

sw.default:                                       ; preds = %if.end
  %8 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7576
  %dev3 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %8, i32 0, i32 0, !dbg !7576
  %9 = load %struct.device*, %struct.device** %dev3, align 8, !dbg !7576
  %10 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7576
  %feature_dev4 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %10, i32 0, i32 4, !dbg !7576
  %11 = load %struct.platform_device*, %struct.platform_device** %feature_dev4, align 8, !dbg !7576
  %name = getelementptr inbounds %struct.platform_device, %struct.platform_device* %11, i32 0, i32 0, !dbg !7576
  %12 = load i8*, i8** %name, align 8, !dbg !7576
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %9, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i64 0, i64 0), i8* %12) #12, !dbg !7576
  br label %sw.epilog, !dbg !7577

sw.epilog:                                        ; preds = %sw.default
  store i32 0, i32* %retval, align 4, !dbg !7578
  br label %return, !dbg !7578

return:                                           ; preds = %sw.epilog, %sw.bb, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !7579
  ret i32 %13, !dbg !7579
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @parse_feature_private(%struct.build_feature_devs_info* %binfo, i64 %ofst) #0 !dbg !7580 {
entry:
  %retval = alloca i32, align 4
  %binfo.addr = alloca %struct.build_feature_devs_info*, align 8
  %ofst.addr = alloca i64, align 8
  store %struct.build_feature_devs_info* %binfo, %struct.build_feature_devs_info** %binfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo.addr, metadata !7581, metadata !DIExpression()), !dbg !7582
  store i64 %ofst, i64* %ofst.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofst.addr, metadata !7583, metadata !DIExpression()), !dbg !7584
  %0 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7585
  %feature_dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %0, i32 0, i32 4, !dbg !7585
  %1 = load %struct.platform_device*, %struct.platform_device** %feature_dev, align 8, !dbg !7585
  %tobool = icmp ne %struct.platform_device* %1, null, !dbg !7585
  br i1 %tobool, label %if.end, label %if.then, !dbg !7587

if.then:                                          ; preds = %entry
  %2 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7588
  %dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %2, i32 0, i32 0, !dbg !7588
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7588
  %4 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7588
  %ioaddr = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %4, i32 0, i32 5, !dbg !7588
  %5 = load i8*, i8** %ioaddr, align 8, !dbg !7588
  %6 = load i64, i64* %ofst.addr, align 8, !dbg !7588
  %add.ptr = getelementptr i8, i8* %5, i64 %6, !dbg !7588
  %call = call zeroext i16 @feature_id(i8* %add.ptr) #11, !dbg !7588
  %conv = zext i16 %call to i32, !dbg !7588
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.20, i64 0, i64 0), i32 %conv) #12, !dbg !7588
  store i32 -22, i32* %retval, align 4, !dbg !7590
  br label %return, !dbg !7590

if.end:                                           ; preds = %entry
  %7 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7591
  %8 = load i64, i64* %ofst.addr, align 8, !dbg !7592
  %call1 = call i32 @create_feature_instance(%struct.build_feature_devs_info* %7, i64 %8, i64 0, i16 zeroext 0) #11, !dbg !7593
  store i32 %call1, i32* %retval, align 4, !dbg !7594
  br label %return, !dbg !7594

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7595
  ret i32 %9, !dbg !7595
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @parse_feature_fiu(%struct.build_feature_devs_info* %binfo, i64 %ofst) #0 !dbg !7596 {
entry:
  %retval = alloca i32, align 4
  %binfo.addr = alloca %struct.build_feature_devs_info*, align 8
  %ofst.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %offset = alloca i32, align 4
  %id = alloca i16, align 2
  %v = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.build_feature_devs_info* %binfo, %struct.build_feature_devs_info** %binfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo.addr, metadata !7597, metadata !DIExpression()), !dbg !7598
  store i64 %ofst, i64* %ofst.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofst.addr, metadata !7599, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7601, metadata !DIExpression()), !dbg !7602
  store i32 0, i32* %ret, align 4, !dbg !7602
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !7603, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.declare(metadata i16* %id, metadata !7605, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.declare(metadata i64* %v, metadata !7607, metadata !DIExpression()), !dbg !7608
  %0 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7609
  %feature_dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %0, i32 0, i32 4, !dbg !7609
  %1 = load %struct.platform_device*, %struct.platform_device** %feature_dev, align 8, !dbg !7609
  %tobool = icmp ne %struct.platform_device* %1, null, !dbg !7609
  br i1 %tobool, label %if.then, label %if.end7, !dbg !7611

if.then:                                          ; preds = %entry
  %2 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7612
  call void @build_info_complete(%struct.build_feature_devs_info* %2) #11, !dbg !7614
  %3 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7615
  %call = call i32 @build_info_commit_dev(%struct.build_feature_devs_info* %3) #11, !dbg !7616
  store i32 %call, i32* %ret, align 4, !dbg !7617
  %4 = load i32, i32* %ret, align 4, !dbg !7618
  %tobool1 = icmp ne i32 %4, 0, !dbg !7618
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7620

if.then2:                                         ; preds = %if.then
  %5 = load i32, i32* %ret, align 4, !dbg !7621
  store i32 %5, i32* %retval, align 4, !dbg !7622
  br label %return, !dbg !7622

if.end:                                           ; preds = %if.then
  %6 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7623
  %7 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7624
  %start = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %7, i32 0, i32 6, !dbg !7625
  %8 = load i64, i64* %start, align 8, !dbg !7625
  %9 = load i64, i64* %ofst.addr, align 8, !dbg !7626
  %add = add i64 %8, %9, !dbg !7627
  %10 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7628
  %len = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %10, i32 0, i32 7, !dbg !7629
  %11 = load i64, i64* %len, align 8, !dbg !7629
  %12 = load i64, i64* %ofst.addr, align 8, !dbg !7630
  %sub = sub i64 %11, %12, !dbg !7631
  %call3 = call i32 @build_info_prepare(%struct.build_feature_devs_info* %6, i64 %add, i64 %sub) #11, !dbg !7632
  store i32 %call3, i32* %ret, align 4, !dbg !7633
  %13 = load i32, i32* %ret, align 4, !dbg !7634
  %tobool4 = icmp ne i32 %13, 0, !dbg !7634
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !7636

if.then5:                                         ; preds = %if.end
  %14 = load i32, i32* %ret, align 4, !dbg !7637
  store i32 %14, i32* %retval, align 4, !dbg !7638
  br label %return, !dbg !7638

if.end6:                                          ; preds = %if.end
  br label %if.end7, !dbg !7639

if.end7:                                          ; preds = %if.end6, %entry
  %15 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7640
  %ioaddr = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %15, i32 0, i32 5, !dbg !7641
  %16 = load i8*, i8** %ioaddr, align 8, !dbg !7641
  %add.ptr = getelementptr i8, i8* %16, i64 0, !dbg !7642
  %call8 = call i64 @readq(i8* %add.ptr) #11, !dbg !7643
  store i64 %call8, i64* %v, align 8, !dbg !7644
  br label %do.body, !dbg !7645

do.body:                                          ; preds = %if.end7
  br label %do.end, !dbg !7648

do.end:                                           ; preds = %do.body
  br label %do.body9, !dbg !7645

do.body9:                                         ; preds = %do.end
  br label %do.end10, !dbg !7650

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !7645

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !7652

do.end12:                                         ; preds = %do.body11
  br label %do.body13, !dbg !7645

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !7654

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !7645

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !7656

do.end16:                                         ; preds = %do.body15
  %17 = load i64, i64* %v, align 8, !dbg !7658
  %and = and i64 %17, 4095, !dbg !7658
  %shr = lshr i64 %and, 0, !dbg !7658
  store i64 %shr, i64* %tmp, align 8, !dbg !7658
  %18 = load i64, i64* %tmp, align 8, !dbg !7658
  %conv = trunc i64 %18 to i16, !dbg !7659
  store i16 %conv, i16* %id, align 2, !dbg !7660
  %19 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7661
  %20 = load i16, i16* %id, align 2, !dbg !7662
  %call17 = call i32 @dfh_id_to_type(i16 zeroext %20) #11, !dbg !7663
  %call18 = call i32 @build_info_create_dev(%struct.build_feature_devs_info* %19, i32 %call17) #11, !dbg !7664
  store i32 %call18, i32* %ret, align 4, !dbg !7665
  %21 = load i32, i32* %ret, align 4, !dbg !7666
  %tobool19 = icmp ne i32 %21, 0, !dbg !7666
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !7668

if.then20:                                        ; preds = %do.end16
  %22 = load i32, i32* %ret, align 4, !dbg !7669
  store i32 %22, i32* %retval, align 4, !dbg !7670
  br label %return, !dbg !7670

if.end21:                                         ; preds = %do.end16
  %23 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7671
  %call22 = call i32 @create_feature_instance(%struct.build_feature_devs_info* %23, i64 0, i64 0, i16 zeroext 0) #11, !dbg !7672
  store i32 %call22, i32* %ret, align 4, !dbg !7673
  %24 = load i32, i32* %ret, align 4, !dbg !7674
  %tobool23 = icmp ne i32 %24, 0, !dbg !7674
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !7676

if.then24:                                        ; preds = %if.end21
  %25 = load i32, i32* %ret, align 4, !dbg !7677
  store i32 %25, i32* %retval, align 4, !dbg !7678
  br label %return, !dbg !7678

if.end25:                                         ; preds = %if.end21
  %26 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7679
  %ioaddr26 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %26, i32 0, i32 5, !dbg !7680
  %27 = load i8*, i8** %ioaddr26, align 8, !dbg !7680
  %add.ptr27 = getelementptr i8, i8* %27, i64 24, !dbg !7681
  %call28 = call i64 @readq(i8* %add.ptr27) #11, !dbg !7682
  store i64 %call28, i64* %v, align 8, !dbg !7683
  br label %do.body29, !dbg !7684

do.body29:                                        ; preds = %if.end25
  br label %do.end30, !dbg !7687

do.end30:                                         ; preds = %do.body29
  br label %do.body31, !dbg !7684

do.body31:                                        ; preds = %do.end30
  br label %do.end32, !dbg !7689

do.end32:                                         ; preds = %do.body31
  br label %do.body33, !dbg !7684

do.body33:                                        ; preds = %do.end32
  br label %do.end34, !dbg !7691

do.end34:                                         ; preds = %do.body33
  br label %do.body35, !dbg !7684

do.body35:                                        ; preds = %do.end34
  br label %do.end36, !dbg !7693

do.end36:                                         ; preds = %do.body35
  br label %do.body37, !dbg !7684

do.body37:                                        ; preds = %do.end36
  br label %do.end38, !dbg !7695

do.end38:                                         ; preds = %do.body37
  %28 = load i64, i64* %v, align 8, !dbg !7697
  %and40 = and i64 %28, 16777215, !dbg !7697
  %shr41 = lshr i64 %and40, 0, !dbg !7697
  store i64 %shr41, i64* %tmp39, align 8, !dbg !7697
  %29 = load i64, i64* %tmp39, align 8, !dbg !7697
  %conv42 = trunc i64 %29 to i32, !dbg !7698
  store i32 %conv42, i32* %offset, align 4, !dbg !7699
  %30 = load i32, i32* %offset, align 4, !dbg !7700
  %tobool43 = icmp ne i32 %30, 0, !dbg !7700
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !7702

if.then44:                                        ; preds = %do.end38
  %31 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7703
  %32 = load i32, i32* %offset, align 4, !dbg !7704
  %conv45 = zext i32 %32 to i64, !dbg !7704
  %call46 = call i32 @parse_feature_afu(%struct.build_feature_devs_info* %31, i64 %conv45) #11, !dbg !7705
  store i32 %call46, i32* %retval, align 4, !dbg !7706
  br label %return, !dbg !7706

if.end47:                                         ; preds = %do.end38
  %33 = load i32, i32* %ret, align 4, !dbg !7707
  store i32 %33, i32* %retval, align 4, !dbg !7708
  br label %return, !dbg !7708

return:                                           ; preds = %if.end47, %if.then44, %if.then24, %if.then20, %if.then5, %if.then2
  %34 = load i32, i32* %retval, align 4, !dbg !7709
  ret i32 %34, !dbg !7709
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @parse_feature_port_afu(%struct.build_feature_devs_info* %binfo, i64 %ofst) #0 !dbg !7710 {
entry:
  %binfo.addr = alloca %struct.build_feature_devs_info*, align 8
  %ofst.addr = alloca i64, align 8
  %v = alloca i64, align 8
  %size = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp26 = alloca i64, align 8
  store %struct.build_feature_devs_info* %binfo, %struct.build_feature_devs_info** %binfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo.addr, metadata !7711, metadata !DIExpression()), !dbg !7712
  store i64 %ofst, i64* %ofst.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofst.addr, metadata !7713, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.declare(metadata i64* %v, metadata !7715, metadata !DIExpression()), !dbg !7716
  %0 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7717
  %ioaddr = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %0, i32 0, i32 5, !dbg !7718
  %1 = load i8*, i8** %ioaddr, align 8, !dbg !7718
  %add.ptr = getelementptr i8, i8* %1, i64 48, !dbg !7719
  %call = call i64 @readq(i8* %add.ptr) #11, !dbg !7720
  store i64 %call, i64* %v, align 8, !dbg !7716
  call void @llvm.dbg.declare(metadata i32* %size, metadata !7721, metadata !DIExpression()), !dbg !7722
  br label %do.body, !dbg !7723

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7726

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !7723

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !7728

do.end2:                                          ; preds = %do.body1
  br label %do.body3, !dbg !7723

do.body3:                                         ; preds = %do.end2
  br label %do.end4, !dbg !7730

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !7723

do.body5:                                         ; preds = %do.end4
  br label %do.end6, !dbg !7732

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !7723

do.body7:                                         ; preds = %do.end6
  br label %do.end8, !dbg !7734

do.end8:                                          ; preds = %do.body7
  %2 = load i64, i64* %v, align 8, !dbg !7736
  %and = and i64 %2, 16776960, !dbg !7736
  %shr = lshr i64 %and, 8, !dbg !7736
  store i64 %shr, i64* %tmp, align 8, !dbg !7736
  %3 = load i64, i64* %tmp, align 8, !dbg !7736
  %shl = shl i64 %3, 10, !dbg !7737
  %conv = trunc i64 %shl to i32, !dbg !7738
  store i32 %conv, i32* %size, align 4, !dbg !7722
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7739, metadata !DIExpression()), !dbg !7741
  %4 = load i32, i32* %size, align 4, !dbg !7741
  %tobool = icmp ne i32 %4, 0, !dbg !7741
  %lnot = xor i1 %tobool, true, !dbg !7741
  %lnot9 = xor i1 %lnot, true, !dbg !7741
  %lnot10 = xor i1 %lnot9, true, !dbg !7741
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !7741
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7741
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !7742
  %tobool11 = icmp ne i32 %5, 0, !dbg !7742
  %lnot12 = xor i1 %tobool11, true, !dbg !7742
  %lnot14 = xor i1 %lnot12, true, !dbg !7742
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !7742
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !7742
  %tobool17 = icmp ne i64 %conv16, 0, !dbg !7742
  br i1 %tobool17, label %if.then, label %if.end, !dbg !7741

if.then:                                          ; preds = %do.end8
  br label %do.body18, !dbg !7742

do.body18:                                        ; preds = %if.then
  br label %do.body19, !dbg !7744

do.body19:                                        ; preds = %do.body18
  br label %do.end20, !dbg !7746

do.end20:                                         ; preds = %do.body19
  br label %do.body21, !dbg !7744

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), i32 1059, i32 2305, i64 12) #4, !dbg !7748, !srcloc !7750
  br label %do.end22, !dbg !7748

do.end22:                                         ; preds = %do.body21
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 304) #4, !dbg !7751, !srcloc !7753
  br label %do.body23, !dbg !7744

do.body23:                                        ; preds = %do.end22
  br label %do.end24, !dbg !7754

do.end24:                                         ; preds = %do.body23
  br label %do.end25, !dbg !7744

do.end25:                                         ; preds = %do.end24
  br label %if.end, !dbg !7744

if.end:                                           ; preds = %do.end25, %do.end8
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !7741
  %tobool27 = icmp ne i32 %6, 0, !dbg !7741
  %lnot28 = xor i1 %tobool27, true, !dbg !7741
  %lnot30 = xor i1 %lnot28, true, !dbg !7741
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !7741
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !7741
  store i64 %conv32, i64* %tmp26, align 8, !dbg !7742
  %7 = load i64, i64* %tmp26, align 8, !dbg !7741
  %8 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7756
  %9 = load i64, i64* %ofst.addr, align 8, !dbg !7757
  %10 = load i32, i32* %size, align 4, !dbg !7758
  %conv33 = zext i32 %10 to i64, !dbg !7758
  %call34 = call i32 @create_feature_instance(%struct.build_feature_devs_info* %8, i64 %9, i64 %conv33, i16 zeroext 255) #11, !dbg !7759
  ret i32 %call34, !dbg !7760
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @create_feature_instance(%struct.build_feature_devs_info* %binfo, i64 %ofst, i64 %size, i16 zeroext %fid) #0 !dbg !7761 {
entry:
  %retval = alloca i32, align 4
  %binfo.addr = alloca %struct.build_feature_devs_info*, align 8
  %ofst.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %fid.addr = alloca i16, align 2
  %irq_base = alloca i32, align 4
  %nr_irqs = alloca i32, align 4
  %finfo = alloca %struct.dfl_feature_info*, align 8
  %ret = alloca i32, align 4
  store %struct.build_feature_devs_info* %binfo, %struct.build_feature_devs_info** %binfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo.addr, metadata !7764, metadata !DIExpression()), !dbg !7765
  store i64 %ofst, i64* %ofst.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofst.addr, metadata !7766, metadata !DIExpression()), !dbg !7767
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7768, metadata !DIExpression()), !dbg !7769
  store i16 %fid, i16* %fid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid.addr, metadata !7770, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.declare(metadata i32* %irq_base, metadata !7772, metadata !DIExpression()), !dbg !7773
  call void @llvm.dbg.declare(metadata i32* %nr_irqs, metadata !7774, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_info** %finfo, metadata !7776, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7778, metadata !DIExpression()), !dbg !7779
  %0 = load i64, i64* %size.addr, align 8, !dbg !7780
  %tobool = icmp ne i64 %0, 0, !dbg !7780
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7780

cond.true:                                        ; preds = %entry
  %1 = load i64, i64* %size.addr, align 8, !dbg !7781
  br label %cond.end, !dbg !7780

cond.false:                                       ; preds = %entry
  %2 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7782
  %ioaddr = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %2, i32 0, i32 5, !dbg !7783
  %3 = load i8*, i8** %ioaddr, align 8, !dbg !7783
  %4 = load i64, i64* %ofst.addr, align 8, !dbg !7784
  %add.ptr = getelementptr i8, i8* %3, i64 %4, !dbg !7785
  %call = call i32 @feature_size(i8* %add.ptr) #11, !dbg !7786
  %conv = zext i32 %call to i64, !dbg !7786
  br label %cond.end, !dbg !7780

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %1, %cond.true ], [ %conv, %cond.false ], !dbg !7780
  store i64 %cond, i64* %size.addr, align 8, !dbg !7787
  %5 = load i16, i16* %fid.addr, align 2, !dbg !7788
  %conv1 = zext i16 %5 to i32, !dbg !7788
  %tobool2 = icmp ne i32 %conv1, 0, !dbg !7788
  br i1 %tobool2, label %cond.true3, label %cond.false5, !dbg !7788

cond.true3:                                       ; preds = %cond.end
  %6 = load i16, i16* %fid.addr, align 2, !dbg !7789
  %conv4 = zext i16 %6 to i32, !dbg !7789
  br label %cond.end10, !dbg !7788

cond.false5:                                      ; preds = %cond.end
  %7 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7790
  %ioaddr6 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %7, i32 0, i32 5, !dbg !7791
  %8 = load i8*, i8** %ioaddr6, align 8, !dbg !7791
  %9 = load i64, i64* %ofst.addr, align 8, !dbg !7792
  %add.ptr7 = getelementptr i8, i8* %8, i64 %9, !dbg !7793
  %call8 = call zeroext i16 @feature_id(i8* %add.ptr7) #11, !dbg !7794
  %conv9 = zext i16 %call8 to i32, !dbg !7794
  br label %cond.end10, !dbg !7788

cond.end10:                                       ; preds = %cond.false5, %cond.true3
  %cond11 = phi i32 [ %conv4, %cond.true3 ], [ %conv9, %cond.false5 ], !dbg !7788
  %conv12 = trunc i32 %cond11 to i16, !dbg !7788
  store i16 %conv12, i16* %fid.addr, align 2, !dbg !7795
  %10 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7796
  %len = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %10, i32 0, i32 7, !dbg !7798
  %11 = load i64, i64* %len, align 8, !dbg !7798
  %12 = load i64, i64* %ofst.addr, align 8, !dbg !7799
  %sub = sub i64 %11, %12, !dbg !7800
  %13 = load i64, i64* %size.addr, align 8, !dbg !7801
  %cmp = icmp ult i64 %sub, %13, !dbg !7802
  br i1 %cmp, label %if.then, label %if.end, !dbg !7803

if.then:                                          ; preds = %cond.end10
  store i32 -22, i32* %retval, align 4, !dbg !7804
  br label %return, !dbg !7804

if.end:                                           ; preds = %cond.end10
  %14 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7805
  %15 = load i64, i64* %ofst.addr, align 8, !dbg !7806
  %16 = load i16, i16* %fid.addr, align 2, !dbg !7807
  %call14 = call i32 @parse_feature_irqs(%struct.build_feature_devs_info* %14, i64 %15, i16 zeroext %16, i32* %irq_base, i32* %nr_irqs) #11, !dbg !7808
  store i32 %call14, i32* %ret, align 4, !dbg !7809
  %17 = load i32, i32* %ret, align 4, !dbg !7810
  %tobool15 = icmp ne i32 %17, 0, !dbg !7810
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !7812

if.then16:                                        ; preds = %if.end
  %18 = load i32, i32* %ret, align 4, !dbg !7813
  store i32 %18, i32* %retval, align 4, !dbg !7814
  br label %return, !dbg !7814

if.end17:                                         ; preds = %if.end
  %call18 = call i8* @kzalloc(i64 104, i32 3264) #11, !dbg !7815
  %19 = bitcast i8* %call18 to %struct.dfl_feature_info*, !dbg !7815
  store %struct.dfl_feature_info* %19, %struct.dfl_feature_info** %finfo, align 8, !dbg !7816
  %20 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7817
  %tobool19 = icmp ne %struct.dfl_feature_info* %20, null, !dbg !7817
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !7819

if.then20:                                        ; preds = %if.end17
  store i32 -12, i32* %retval, align 4, !dbg !7820
  br label %return, !dbg !7820

if.end21:                                         ; preds = %if.end17
  %21 = load i16, i16* %fid.addr, align 2, !dbg !7821
  %22 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7822
  %fid22 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %22, i32 0, i32 0, !dbg !7823
  store i16 %21, i16* %fid22, align 8, !dbg !7824
  %23 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7825
  %start = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %23, i32 0, i32 6, !dbg !7826
  %24 = load i64, i64* %start, align 8, !dbg !7826
  %25 = load i64, i64* %ofst.addr, align 8, !dbg !7827
  %add = add i64 %24, %25, !dbg !7828
  %26 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7829
  %mmio_res = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %26, i32 0, i32 1, !dbg !7830
  %start23 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_res, i32 0, i32 0, !dbg !7831
  store i64 %add, i64* %start23, align 8, !dbg !7832
  %27 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7833
  %mmio_res24 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %27, i32 0, i32 1, !dbg !7834
  %start25 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_res24, i32 0, i32 0, !dbg !7835
  %28 = load i64, i64* %start25, align 8, !dbg !7835
  %29 = load i64, i64* %size.addr, align 8, !dbg !7836
  %add26 = add i64 %28, %29, !dbg !7837
  %sub27 = sub i64 %add26, 1, !dbg !7838
  %30 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7839
  %mmio_res28 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %30, i32 0, i32 1, !dbg !7840
  %end = getelementptr inbounds %struct.resource, %struct.resource* %mmio_res28, i32 0, i32 1, !dbg !7841
  store i64 %sub27, i64* %end, align 8, !dbg !7842
  %31 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7843
  %mmio_res29 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %31, i32 0, i32 1, !dbg !7844
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %mmio_res29, i32 0, i32 3, !dbg !7845
  store i64 512, i64* %flags, align 8, !dbg !7846
  %32 = load i32, i32* %irq_base, align 4, !dbg !7847
  %33 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7848
  %irq_base30 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %33, i32 0, i32 4, !dbg !7849
  store i32 %32, i32* %irq_base30, align 8, !dbg !7850
  %34 = load i32, i32* %nr_irqs, align 4, !dbg !7851
  %35 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7852
  %nr_irqs31 = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %35, i32 0, i32 5, !dbg !7853
  store i32 %34, i32* %nr_irqs31, align 4, !dbg !7854
  %36 = load %struct.dfl_feature_info*, %struct.dfl_feature_info** %finfo, align 8, !dbg !7855
  %node = getelementptr inbounds %struct.dfl_feature_info, %struct.dfl_feature_info* %36, i32 0, i32 3, !dbg !7856
  %37 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7857
  %sub_features = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %37, i32 0, i32 8, !dbg !7858
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* %sub_features) #11, !dbg !7859
  %38 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7860
  %feature_num = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %38, i32 0, i32 9, !dbg !7861
  %39 = load i32, i32* %feature_num, align 8, !dbg !7862
  %inc = add i32 %39, 1, !dbg !7862
  store i32 %inc, i32* %feature_num, align 8, !dbg !7862
  store i32 0, i32* %retval, align 4, !dbg !7863
  br label %return, !dbg !7863

return:                                           ; preds = %if.end21, %if.then20, %if.then16, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !7864
  ret i32 %40, !dbg !7864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @feature_size(i8* %start) #0 !dbg !7865 {
entry:
  %start.addr = alloca i8*, align 8
  %v = alloca i64, align 8
  %ofst = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !7868, metadata !DIExpression()), !dbg !7869
  call void @llvm.dbg.declare(metadata i64* %v, metadata !7870, metadata !DIExpression()), !dbg !7871
  %0 = load i8*, i8** %start.addr, align 8, !dbg !7872
  %add.ptr = getelementptr i8, i8* %0, i64 0, !dbg !7873
  %call = call i64 @readq(i8* %add.ptr) #11, !dbg !7874
  store i64 %call, i64* %v, align 8, !dbg !7871
  call void @llvm.dbg.declare(metadata i32* %ofst, metadata !7875, metadata !DIExpression()), !dbg !7876
  br label %do.body, !dbg !7877

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7880

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !7877

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !7882

do.end2:                                          ; preds = %do.body1
  br label %do.body3, !dbg !7877

do.body3:                                         ; preds = %do.end2
  br label %do.end4, !dbg !7884

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !7877

do.body5:                                         ; preds = %do.end4
  br label %do.end6, !dbg !7886

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !7877

do.body7:                                         ; preds = %do.end6
  br label %do.end8, !dbg !7888

do.end8:                                          ; preds = %do.body7
  %1 = load i64, i64* %v, align 8, !dbg !7890
  %and = and i64 %1, 1099511562240, !dbg !7890
  %shr = lshr i64 %and, 16, !dbg !7890
  store i64 %shr, i64* %tmp, align 8, !dbg !7890
  %2 = load i64, i64* %tmp, align 8, !dbg !7890
  %conv = trunc i64 %2 to i32, !dbg !7891
  store i32 %conv, i32* %ofst, align 4, !dbg !7876
  %3 = load i32, i32* %ofst, align 4, !dbg !7892
  %tobool = icmp ne i32 %3, 0, !dbg !7892
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7892

cond.true:                                        ; preds = %do.end8
  %4 = load i32, i32* %ofst, align 4, !dbg !7893
  br label %cond.end, !dbg !7892

cond.false:                                       ; preds = %do.end8
  br label %cond.end, !dbg !7892

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ 4096, %cond.false ], !dbg !7892
  ret i32 %cond, !dbg !7894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @feature_id(i8* %start) #0 !dbg !7895 {
entry:
  %retval = alloca i16, align 2
  %start.addr = alloca i8*, align 8
  %v = alloca i64, align 8
  %id = alloca i16, align 2
  %tmp = alloca i64, align 8
  %type = alloca i8, align 1
  %tmp19 = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp49 = alloca i64, align 8
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !7898, metadata !DIExpression()), !dbg !7899
  call void @llvm.dbg.declare(metadata i64* %v, metadata !7900, metadata !DIExpression()), !dbg !7901
  %0 = load i8*, i8** %start.addr, align 8, !dbg !7902
  %add.ptr = getelementptr i8, i8* %0, i64 0, !dbg !7903
  %call = call i64 @readq(i8* %add.ptr) #11, !dbg !7904
  store i64 %call, i64* %v, align 8, !dbg !7901
  call void @llvm.dbg.declare(metadata i16* %id, metadata !7905, metadata !DIExpression()), !dbg !7906
  br label %do.body, !dbg !7907

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7910

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !7907

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !7912

do.end2:                                          ; preds = %do.body1
  br label %do.body3, !dbg !7907

do.body3:                                         ; preds = %do.end2
  br label %do.end4, !dbg !7914

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !7907

do.body5:                                         ; preds = %do.end4
  br label %do.end6, !dbg !7916

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !7907

do.body7:                                         ; preds = %do.end6
  br label %do.end8, !dbg !7918

do.end8:                                          ; preds = %do.body7
  %1 = load i64, i64* %v, align 8, !dbg !7920
  %and = and i64 %1, 4095, !dbg !7920
  %shr = lshr i64 %and, 0, !dbg !7920
  store i64 %shr, i64* %tmp, align 8, !dbg !7920
  %2 = load i64, i64* %tmp, align 8, !dbg !7920
  %conv = trunc i64 %2 to i16, !dbg !7921
  store i16 %conv, i16* %id, align 2, !dbg !7906
  call void @llvm.dbg.declare(metadata i8* %type, metadata !7922, metadata !DIExpression()), !dbg !7923
  br label %do.body9, !dbg !7924

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !7927

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !7924

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !7929

do.end12:                                         ; preds = %do.body11
  br label %do.body13, !dbg !7924

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !7931

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !7924

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !7933

do.end16:                                         ; preds = %do.body15
  br label %do.body17, !dbg !7924

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !7935

do.end18:                                         ; preds = %do.body17
  %3 = load i64, i64* %v, align 8, !dbg !7937
  %and20 = and i64 %3, -1152921504606846976, !dbg !7937
  %shr21 = lshr i64 %and20, 60, !dbg !7937
  store i64 %shr21, i64* %tmp19, align 8, !dbg !7937
  %4 = load i64, i64* %tmp19, align 8, !dbg !7937
  %conv22 = trunc i64 %4 to i8, !dbg !7938
  store i8 %conv22, i8* %type, align 1, !dbg !7923
  %5 = load i8, i8* %type, align 1, !dbg !7939
  %conv23 = zext i8 %5 to i32, !dbg !7939
  %cmp = icmp eq i32 %conv23, 4, !dbg !7941
  br i1 %cmp, label %if.then, label %if.else, !dbg !7942

if.then:                                          ; preds = %do.end18
  store i16 254, i16* %retval, align 2, !dbg !7943
  br label %return, !dbg !7943

if.else:                                          ; preds = %do.end18
  %6 = load i8, i8* %type, align 1, !dbg !7944
  %conv25 = zext i8 %6 to i32, !dbg !7944
  %cmp26 = icmp eq i32 %conv25, 3, !dbg !7946
  br i1 %cmp26, label %if.then28, label %if.else29, !dbg !7947

if.then28:                                        ; preds = %if.else
  %7 = load i16, i16* %id, align 2, !dbg !7948
  store i16 %7, i16* %retval, align 2, !dbg !7949
  br label %return, !dbg !7949

if.else29:                                        ; preds = %if.else
  %8 = load i8, i8* %type, align 1, !dbg !7950
  %conv30 = zext i8 %8 to i32, !dbg !7950
  %cmp31 = icmp eq i32 %conv30, 1, !dbg !7952
  br i1 %cmp31, label %if.then33, label %if.end, !dbg !7953

if.then33:                                        ; preds = %if.else29
  store i16 255, i16* %retval, align 2, !dbg !7954
  br label %return, !dbg !7954

if.end:                                           ; preds = %if.else29
  br label %if.end34

if.end34:                                         ; preds = %if.end
  br label %if.end35

if.end35:                                         ; preds = %if.end34
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7955, metadata !DIExpression()), !dbg !7957
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !7957
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !7958
  %tobool = icmp ne i32 %9, 0, !dbg !7958
  %lnot = xor i1 %tobool, true, !dbg !7958
  %lnot36 = xor i1 %lnot, true, !dbg !7958
  %lnot.ext = zext i1 %lnot36 to i32, !dbg !7958
  %conv37 = sext i32 %lnot.ext to i64, !dbg !7958
  %tobool38 = icmp ne i64 %conv37, 0, !dbg !7958
  br i1 %tobool38, label %if.then39, label %if.end48, !dbg !7957

if.then39:                                        ; preds = %if.end35
  br label %do.body40, !dbg !7958

do.body40:                                        ; preds = %if.then39
  br label %do.body41, !dbg !7960

do.body41:                                        ; preds = %do.body40
  br label %do.end42, !dbg !7962

do.end42:                                         ; preds = %do.body41
  br label %do.body43, !dbg !7960

do.body43:                                        ; preds = %do.end42
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), i32 934, i32 2305, i64 12) #4, !dbg !7964, !srcloc !7966
  br label %do.end44, !dbg !7964

do.end44:                                         ; preds = %do.body43
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 268) #4, !dbg !7967, !srcloc !7969
  br label %do.body45, !dbg !7960

do.body45:                                        ; preds = %do.end44
  br label %do.end46, !dbg !7970

do.end46:                                         ; preds = %do.body45
  br label %do.end47, !dbg !7960

do.end47:                                         ; preds = %do.end46
  br label %if.end48, !dbg !7960

if.end48:                                         ; preds = %do.end47, %if.end35
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !7957
  %tobool50 = icmp ne i32 %10, 0, !dbg !7957
  %lnot51 = xor i1 %tobool50, true, !dbg !7957
  %lnot53 = xor i1 %lnot51, true, !dbg !7957
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !7957
  %conv55 = sext i32 %lnot.ext54 to i64, !dbg !7957
  store i64 %conv55, i64* %tmp49, align 8, !dbg !7958
  %11 = load i64, i64* %tmp49, align 8, !dbg !7957
  store i16 0, i16* %retval, align 2, !dbg !7972
  br label %return, !dbg !7972

return:                                           ; preds = %if.end48, %if.then33, %if.then28, %if.then
  %12 = load i16, i16* %retval, align 2, !dbg !7973
  ret i16 %12, !dbg !7973
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @parse_feature_irqs(%struct.build_feature_devs_info* %binfo, i64 %ofst, i16 zeroext %fid, i32* %irq_base, i32* %nr_irqs) #0 !dbg !7974 {
entry:
  %retval = alloca i32, align 4
  %binfo.addr = alloca %struct.build_feature_devs_info*, align 8
  %ofst.addr = alloca i64, align 8
  %fid.addr = alloca i16, align 2
  %irq_base.addr = alloca i32*, align 8
  %nr_irqs.addr = alloca i32*, align 8
  %base = alloca i8*, align 8
  %i = alloca i32, align 4
  %ibase = alloca i32, align 4
  %inr = alloca i32, align 4
  %virq = alloca i32, align 4
  %v = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp21 = alloca i64, align 8
  %tmp38 = alloca i64, align 8
  %tmp52 = alloca i64, align 8
  %tmp69 = alloca i64, align 8
  %tmp83 = alloca i64, align 8
  store %struct.build_feature_devs_info* %binfo, %struct.build_feature_devs_info** %binfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo.addr, metadata !7977, metadata !DIExpression()), !dbg !7978
  store i64 %ofst, i64* %ofst.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ofst.addr, metadata !7979, metadata !DIExpression()), !dbg !7980
  store i16 %fid, i16* %fid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %fid.addr, metadata !7981, metadata !DIExpression()), !dbg !7982
  store i32* %irq_base, i32** %irq_base.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %irq_base.addr, metadata !7983, metadata !DIExpression()), !dbg !7984
  store i32* %nr_irqs, i32** %nr_irqs.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %nr_irqs.addr, metadata !7985, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.declare(metadata i8** %base, metadata !7987, metadata !DIExpression()), !dbg !7988
  %0 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !7989
  %ioaddr = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %0, i32 0, i32 5, !dbg !7990
  %1 = load i8*, i8** %ioaddr, align 8, !dbg !7990
  %2 = load i64, i64* %ofst.addr, align 8, !dbg !7991
  %add.ptr = getelementptr i8, i8* %1, i64 %2, !dbg !7992
  store i8* %add.ptr, i8** %base, align 8, !dbg !7988
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7993, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.declare(metadata i32* %ibase, metadata !7995, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.declare(metadata i32* %inr, metadata !7997, metadata !DIExpression()), !dbg !7998
  store i32 0, i32* %inr, align 4, !dbg !7998
  call void @llvm.dbg.declare(metadata i32* %virq, metadata !7999, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.declare(metadata i64* %v, metadata !8001, metadata !DIExpression()), !dbg !8002
  %3 = load i16, i16* %fid.addr, align 2, !dbg !8003
  %conv = zext i16 %3 to i32, !dbg !8003
  switch i32 %conv, label %sw.epilog [
    i32 18, label %sw.bb
    i32 16, label %sw.bb25
    i32 4, label %sw.bb56
  ], !dbg !8004

sw.bb:                                            ; preds = %entry
  %4 = load i8*, i8** %base, align 8, !dbg !8005
  %add.ptr1 = getelementptr i8, i8* %4, i64 8, !dbg !8007
  %call = call i64 @readq(i8* %add.ptr1) #11, !dbg !8008
  store i64 %call, i64* %v, align 8, !dbg !8009
  br label %do.body, !dbg !8010

do.body:                                          ; preds = %sw.bb
  br label %do.end, !dbg !8013

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !8010

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !8015

do.end3:                                          ; preds = %do.body2
  br label %do.body4, !dbg !8010

do.body4:                                         ; preds = %do.end3
  br label %do.end5, !dbg !8017

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !8010

do.body6:                                         ; preds = %do.end5
  br label %do.end7, !dbg !8019

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !8010

do.body8:                                         ; preds = %do.end7
  br label %do.end9, !dbg !8021

do.end9:                                          ; preds = %do.body8
  %5 = load i64, i64* %v, align 8, !dbg !8023
  %and = and i64 %5, 16773120, !dbg !8023
  %shr = lshr i64 %and, 12, !dbg !8023
  store i64 %shr, i64* %tmp, align 8, !dbg !8023
  %6 = load i64, i64* %tmp, align 8, !dbg !8023
  %conv10 = trunc i64 %6 to i32, !dbg !8024
  store i32 %conv10, i32* %ibase, align 4, !dbg !8025
  br label %do.body11, !dbg !8026

do.body11:                                        ; preds = %do.end9
  br label %do.end12, !dbg !8029

do.end12:                                         ; preds = %do.body11
  br label %do.body13, !dbg !8026

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !8031

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !8026

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !8033

do.end16:                                         ; preds = %do.body15
  br label %do.body17, !dbg !8026

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !8035

do.end18:                                         ; preds = %do.body17
  br label %do.body19, !dbg !8026

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !8037

do.end20:                                         ; preds = %do.body19
  %7 = load i64, i64* %v, align 8, !dbg !8039
  %and22 = and i64 %7, 4095, !dbg !8039
  %shr23 = lshr i64 %and22, 0, !dbg !8039
  store i64 %shr23, i64* %tmp21, align 8, !dbg !8039
  %8 = load i64, i64* %tmp21, align 8, !dbg !8039
  %conv24 = trunc i64 %8 to i32, !dbg !8040
  store i32 %conv24, i32* %inr, align 4, !dbg !8041
  br label %sw.epilog, !dbg !8042

sw.bb25:                                          ; preds = %entry
  %9 = load i8*, i8** %base, align 8, !dbg !8043
  %add.ptr26 = getelementptr i8, i8* %9, i64 56, !dbg !8044
  %call27 = call i64 @readq(i8* %add.ptr26) #11, !dbg !8045
  store i64 %call27, i64* %v, align 8, !dbg !8046
  br label %do.body28, !dbg !8047

do.body28:                                        ; preds = %sw.bb25
  br label %do.end29, !dbg !8050

do.end29:                                         ; preds = %do.body28
  br label %do.body30, !dbg !8047

do.body30:                                        ; preds = %do.end29
  br label %do.end31, !dbg !8052

do.end31:                                         ; preds = %do.body30
  br label %do.body32, !dbg !8047

do.body32:                                        ; preds = %do.end31
  br label %do.end33, !dbg !8054

do.end33:                                         ; preds = %do.body32
  br label %do.body34, !dbg !8047

do.body34:                                        ; preds = %do.end33
  br label %do.end35, !dbg !8056

do.end35:                                         ; preds = %do.body34
  br label %do.body36, !dbg !8047

do.body36:                                        ; preds = %do.end35
  br label %do.end37, !dbg !8058

do.end37:                                         ; preds = %do.body36
  %10 = load i64, i64* %v, align 8, !dbg !8060
  %and39 = and i64 %10, 8190, !dbg !8060
  %shr40 = lshr i64 %and39, 1, !dbg !8060
  store i64 %shr40, i64* %tmp38, align 8, !dbg !8060
  %11 = load i64, i64* %tmp38, align 8, !dbg !8060
  %conv41 = trunc i64 %11 to i32, !dbg !8061
  store i32 %conv41, i32* %ibase, align 4, !dbg !8062
  br label %do.body42, !dbg !8063

do.body42:                                        ; preds = %do.end37
  br label %do.end43, !dbg !8066

do.end43:                                         ; preds = %do.body42
  br label %do.body44, !dbg !8063

do.body44:                                        ; preds = %do.end43
  br label %do.end45, !dbg !8068

do.end45:                                         ; preds = %do.body44
  br label %do.body46, !dbg !8063

do.body46:                                        ; preds = %do.end45
  br label %do.end47, !dbg !8070

do.end47:                                         ; preds = %do.body46
  br label %do.body48, !dbg !8063

do.body48:                                        ; preds = %do.end47
  br label %do.end49, !dbg !8072

do.end49:                                         ; preds = %do.body48
  br label %do.body50, !dbg !8063

do.body50:                                        ; preds = %do.end49
  br label %do.end51, !dbg !8074

do.end51:                                         ; preds = %do.body50
  %12 = load i64, i64* %v, align 8, !dbg !8076
  %and53 = and i64 %12, 1, !dbg !8076
  %shr54 = lshr i64 %and53, 0, !dbg !8076
  store i64 %shr54, i64* %tmp52, align 8, !dbg !8076
  %13 = load i64, i64* %tmp52, align 8, !dbg !8076
  %conv55 = trunc i64 %13 to i32, !dbg !8077
  store i32 %conv55, i32* %inr, align 4, !dbg !8078
  br label %sw.epilog, !dbg !8079

sw.bb56:                                          ; preds = %entry
  %14 = load i8*, i8** %base, align 8, !dbg !8080
  %add.ptr57 = getelementptr i8, i8* %14, i64 112, !dbg !8081
  %call58 = call i64 @readq(i8* %add.ptr57) #11, !dbg !8082
  store i64 %call58, i64* %v, align 8, !dbg !8083
  br label %do.body59, !dbg !8084

do.body59:                                        ; preds = %sw.bb56
  br label %do.end60, !dbg !8087

do.end60:                                         ; preds = %do.body59
  br label %do.body61, !dbg !8084

do.body61:                                        ; preds = %do.end60
  br label %do.end62, !dbg !8089

do.end62:                                         ; preds = %do.body61
  br label %do.body63, !dbg !8084

do.body63:                                        ; preds = %do.end62
  br label %do.end64, !dbg !8091

do.end64:                                         ; preds = %do.body63
  br label %do.body65, !dbg !8084

do.body65:                                        ; preds = %do.end64
  br label %do.end66, !dbg !8093

do.end66:                                         ; preds = %do.body65
  br label %do.body67, !dbg !8084

do.body67:                                        ; preds = %do.end66
  br label %do.end68, !dbg !8095

do.end68:                                         ; preds = %do.body67
  %15 = load i64, i64* %v, align 8, !dbg !8097
  %and70 = and i64 %15, 8190, !dbg !8097
  %shr71 = lshr i64 %and70, 1, !dbg !8097
  store i64 %shr71, i64* %tmp69, align 8, !dbg !8097
  %16 = load i64, i64* %tmp69, align 8, !dbg !8097
  %conv72 = trunc i64 %16 to i32, !dbg !8098
  store i32 %conv72, i32* %ibase, align 4, !dbg !8099
  br label %do.body73, !dbg !8100

do.body73:                                        ; preds = %do.end68
  br label %do.end74, !dbg !8103

do.end74:                                         ; preds = %do.body73
  br label %do.body75, !dbg !8100

do.body75:                                        ; preds = %do.end74
  br label %do.end76, !dbg !8105

do.end76:                                         ; preds = %do.body75
  br label %do.body77, !dbg !8100

do.body77:                                        ; preds = %do.end76
  br label %do.end78, !dbg !8107

do.end78:                                         ; preds = %do.body77
  br label %do.body79, !dbg !8100

do.body79:                                        ; preds = %do.end78
  br label %do.end80, !dbg !8109

do.end80:                                         ; preds = %do.body79
  br label %do.body81, !dbg !8100

do.body81:                                        ; preds = %do.end80
  br label %do.end82, !dbg !8111

do.end82:                                         ; preds = %do.body81
  %17 = load i64, i64* %v, align 8, !dbg !8113
  %and84 = and i64 %17, 1, !dbg !8113
  %shr85 = lshr i64 %and84, 0, !dbg !8113
  store i64 %shr85, i64* %tmp83, align 8, !dbg !8113
  %18 = load i64, i64* %tmp83, align 8, !dbg !8113
  %conv86 = trunc i64 %18 to i32, !dbg !8114
  store i32 %conv86, i32* %inr, align 4, !dbg !8115
  br label %sw.epilog, !dbg !8116

sw.epilog:                                        ; preds = %entry, %do.end82, %do.end51, %do.end20
  %19 = load i32, i32* %inr, align 4, !dbg !8117
  %tobool = icmp ne i32 %19, 0, !dbg !8117
  br i1 %tobool, label %if.end, label %if.then, !dbg !8119

if.then:                                          ; preds = %sw.epilog
  %20 = load i32*, i32** %irq_base.addr, align 8, !dbg !8120
  store i32 0, i32* %20, align 4, !dbg !8122
  %21 = load i32*, i32** %nr_irqs.addr, align 8, !dbg !8123
  store i32 0, i32* %21, align 4, !dbg !8124
  store i32 0, i32* %retval, align 4, !dbg !8125
  br label %return, !dbg !8125

if.end:                                           ; preds = %sw.epilog
  %22 = load i32, i32* %ibase, align 4, !dbg !8126
  %23 = load i32, i32* %inr, align 4, !dbg !8128
  %add = add i32 %22, %23, !dbg !8129
  %24 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !8130
  %nr_irqs87 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %24, i32 0, i32 2, !dbg !8131
  %25 = load i32, i32* %nr_irqs87, align 8, !dbg !8131
  %cmp = icmp ugt i32 %add, %25, !dbg !8132
  br i1 %cmp, label %if.then89, label %if.end91, !dbg !8133

if.then89:                                        ; preds = %if.end
  %26 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !8134
  %dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %26, i32 0, i32 0, !dbg !8134
  %27 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8134
  %28 = load i16, i16* %fid.addr, align 2, !dbg !8134
  %conv90 = zext i16 %28 to i32, !dbg !8134
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %27, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), i32 %conv90) #12, !dbg !8134
  store i32 -22, i32* %retval, align 4, !dbg !8136
  br label %return, !dbg !8136

if.end91:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !8137
  br label %for.cond, !dbg !8139

for.cond:                                         ; preds = %for.inc, %if.end91
  %29 = load i32, i32* %i, align 4, !dbg !8140
  %30 = load i32, i32* %inr, align 4, !dbg !8142
  %cmp92 = icmp ult i32 %29, %30, !dbg !8143
  br i1 %cmp92, label %for.body, label %for.end, !dbg !8144

for.body:                                         ; preds = %for.cond
  %31 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !8145
  %irq_table = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %31, i32 0, i32 3, !dbg !8147
  %32 = load i32*, i32** %irq_table, align 8, !dbg !8147
  %33 = load i32, i32* %ibase, align 4, !dbg !8148
  %34 = load i32, i32* %i, align 4, !dbg !8149
  %add94 = add i32 %33, %34, !dbg !8150
  %idxprom = zext i32 %add94 to i64, !dbg !8145
  %arrayidx = getelementptr i32, i32* %32, i64 %idxprom, !dbg !8145
  %35 = load i32, i32* %arrayidx, align 4, !dbg !8145
  store i32 %35, i32* %virq, align 4, !dbg !8151
  %36 = load i32, i32* %virq, align 4, !dbg !8152
  %cmp95 = icmp slt i32 %36, 0, !dbg !8154
  br i1 %cmp95, label %if.then99, label %lor.lhs.false, !dbg !8155

lor.lhs.false:                                    ; preds = %for.body
  %37 = load i32, i32* %virq, align 4, !dbg !8156
  %cmp97 = icmp sgt i32 %37, 4352, !dbg !8157
  br i1 %cmp97, label %if.then99, label %if.end102, !dbg !8158

if.then99:                                        ; preds = %lor.lhs.false, %for.body
  %38 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !8159
  %dev100 = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %38, i32 0, i32 0, !dbg !8159
  %39 = load %struct.device*, %struct.device** %dev100, align 8, !dbg !8159
  %40 = load i16, i16* %fid.addr, align 2, !dbg !8159
  %conv101 = zext i16 %40 to i32, !dbg !8159
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %39, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.19, i64 0, i64 0), i32 %conv101) #12, !dbg !8159
  store i32 -22, i32* %retval, align 4, !dbg !8161
  br label %return, !dbg !8161

if.end102:                                        ; preds = %lor.lhs.false
  br label %for.inc, !dbg !8162

for.inc:                                          ; preds = %if.end102
  %41 = load i32, i32* %i, align 4, !dbg !8163
  %inc = add i32 %41, 1, !dbg !8163
  store i32 %inc, i32* %i, align 4, !dbg !8163
  br label %for.cond, !dbg !8164, !llvm.loop !8165

for.end:                                          ; preds = %for.cond
  %42 = load i32, i32* %ibase, align 4, !dbg !8167
  %43 = load i32*, i32** %irq_base.addr, align 8, !dbg !8168
  store i32 %42, i32* %43, align 4, !dbg !8169
  %44 = load i32, i32* %inr, align 4, !dbg !8170
  %45 = load i32*, i32** %nr_irqs.addr, align 8, !dbg !8171
  store i32 %44, i32* %45, align 4, !dbg !8172
  store i32 0, i32* %retval, align 4, !dbg !8173
  br label %return, !dbg !8173

return:                                           ; preds = %for.end, %if.then99, %if.then89, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !8174
  ret i32 %46, !dbg !8174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @build_info_create_dev(%struct.build_feature_devs_info* %binfo, i32 %type) #0 !dbg !8175 {
entry:
  %retval = alloca i32, align 4
  %binfo.addr = alloca %struct.build_feature_devs_info*, align 8
  %type.addr = alloca i32, align 4
  %fdev = alloca %struct.platform_device*, align 8
  store %struct.build_feature_devs_info* %binfo, %struct.build_feature_devs_info** %binfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.build_feature_devs_info** %binfo.addr, metadata !8178, metadata !DIExpression()), !dbg !8179
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8180, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.declare(metadata %struct.platform_device** %fdev, metadata !8182, metadata !DIExpression()), !dbg !8183
  %0 = load i32, i32* %type.addr, align 4, !dbg !8184
  %cmp = icmp uge i32 %0, 2, !dbg !8186
  br i1 %cmp, label %if.then, label %if.end, !dbg !8187

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8188
  br label %return, !dbg !8188

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %type.addr, align 4, !dbg !8189
  %idxprom = zext i32 %1 to i64, !dbg !8190
  %arrayidx = getelementptr [2 x %struct.dfl_dev_info], [2 x %struct.dfl_dev_info]* @dfl_devs, i64 0, i64 %idxprom, !dbg !8190
  %name = getelementptr inbounds %struct.dfl_dev_info, %struct.dfl_dev_info* %arrayidx, i32 0, i32 0, !dbg !8191
  %2 = load i8*, i8** %name, align 16, !dbg !8191
  %call = call %struct.platform_device* @platform_device_alloc(i8* %2, i32 -19) #11, !dbg !8192
  store %struct.platform_device* %call, %struct.platform_device** %fdev, align 8, !dbg !8193
  %3 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !8194
  %tobool = icmp ne %struct.platform_device* %3, null, !dbg !8194
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !8196

if.then1:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !8197
  br label %return, !dbg !8197

if.end2:                                          ; preds = %if.end
  %4 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !8198
  %5 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !8199
  %feature_dev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %5, i32 0, i32 4, !dbg !8200
  store %struct.platform_device* %4, %struct.platform_device** %feature_dev, align 8, !dbg !8201
  %6 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !8202
  %feature_num = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %6, i32 0, i32 9, !dbg !8203
  store i32 0, i32* %feature_num, align 8, !dbg !8204
  %7 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !8205
  %sub_features = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %7, i32 0, i32 8, !dbg !8206
  call void @INIT_LIST_HEAD(%struct.list_head* %sub_features) #11, !dbg !8207
  %8 = load i32, i32* %type.addr, align 4, !dbg !8208
  %9 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !8209
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %9, i32 0, i32 3, !dbg !8210
  %call3 = call i32 @dfl_id_alloc(i32 %8, %struct.device* %dev) #11, !dbg !8211
  %10 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !8212
  %id = getelementptr inbounds %struct.platform_device, %struct.platform_device* %10, i32 0, i32 1, !dbg !8213
  store i32 %call3, i32* %id, align 8, !dbg !8214
  %11 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !8215
  %id4 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %11, i32 0, i32 1, !dbg !8217
  %12 = load i32, i32* %id4, align 8, !dbg !8217
  %cmp5 = icmp slt i32 %12, 0, !dbg !8218
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !8219

if.then6:                                         ; preds = %if.end2
  %13 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !8220
  %id7 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %13, i32 0, i32 1, !dbg !8221
  %14 = load i32, i32* %id7, align 8, !dbg !8221
  store i32 %14, i32* %retval, align 4, !dbg !8222
  br label %return, !dbg !8222

if.end8:                                          ; preds = %if.end2
  %15 = load %struct.build_feature_devs_info*, %struct.build_feature_devs_info** %binfo.addr, align 8, !dbg !8223
  %cdev = getelementptr inbounds %struct.build_feature_devs_info, %struct.build_feature_devs_info* %15, i32 0, i32 1, !dbg !8224
  %16 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev, align 8, !dbg !8224
  %region = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %16, i32 0, i32 1, !dbg !8225
  %17 = load %struct.fpga_region*, %struct.fpga_region** %region, align 8, !dbg !8225
  %dev9 = getelementptr inbounds %struct.fpga_region, %struct.fpga_region* %17, i32 0, i32 0, !dbg !8226
  %18 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !8227
  %dev10 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %18, i32 0, i32 3, !dbg !8228
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev10, i32 0, i32 1, !dbg !8229
  store %struct.device* %dev9, %struct.device** %parent, align 8, !dbg !8230
  %19 = load i32, i32* %type.addr, align 4, !dbg !8231
  %idxprom11 = zext i32 %19 to i64, !dbg !8232
  %arrayidx12 = getelementptr [2 x %struct.dfl_dev_info], [2 x %struct.dfl_dev_info]* @dfl_devs, i64 0, i64 %idxprom11, !dbg !8232
  %devt_type = getelementptr inbounds %struct.dfl_dev_info, %struct.dfl_dev_info* %arrayidx12, i32 0, i32 3, !dbg !8233
  %20 = load i32, i32* %devt_type, align 8, !dbg !8233
  %21 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !8234
  %id13 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %21, i32 0, i32 1, !dbg !8235
  %22 = load i32, i32* %id13, align 8, !dbg !8235
  %call14 = call i32 @dfl_get_devt(i32 %20, i32 %22) #11, !dbg !8236
  %23 = load %struct.platform_device*, %struct.platform_device** %fdev, align 8, !dbg !8237
  %dev15 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %23, i32 0, i32 3, !dbg !8238
  %devt = getelementptr inbounds %struct.device, %struct.device* %dev15, i32 0, i32 25, !dbg !8239
  store i32 %call14, i32* %devt, align 8, !dbg !8240
  store i32 0, i32* %retval, align 4, !dbg !8241
  br label %return, !dbg !8241

return:                                           ; preds = %if.end8, %if.then6, %if.then1, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !8242
  ret i32 %24, !dbg !8242
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dfh_id_to_type(i16 zeroext %id) #0 !dbg !8243 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca i16, align 2
  %i = alloca i32, align 4
  store i16 %id, i16* %id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %id.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8248, metadata !DIExpression()), !dbg !8249
  store i32 0, i32* %i, align 4, !dbg !8250
  br label %for.cond, !dbg !8252

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8253
  %conv = sext i32 %0 to i64, !dbg !8253
  %cmp = icmp ult i64 %conv, 2, !dbg !8255
  br i1 %cmp, label %for.body, label %for.end, !dbg !8256

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !8257
  %idxprom = sext i32 %1 to i64, !dbg !8259
  %arrayidx = getelementptr [2 x %struct.dfl_dev_info], [2 x %struct.dfl_dev_info]* @dfl_devs, i64 0, i64 %idxprom, !dbg !8259
  %dfh_id = getelementptr inbounds %struct.dfl_dev_info, %struct.dfl_dev_info* %arrayidx, i32 0, i32 1, !dbg !8260
  %2 = load i16, i16* %dfh_id, align 8, !dbg !8260
  %conv2 = zext i16 %2 to i32, !dbg !8259
  %3 = load i16, i16* %id.addr, align 2, !dbg !8261
  %conv3 = zext i16 %3 to i32, !dbg !8261
  %cmp4 = icmp eq i32 %conv2, %conv3, !dbg !8262
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8263

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !8264
  store i32 %4, i32* %retval, align 4, !dbg !8265
  br label %return, !dbg !8265

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8261

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !8266
  %inc = add i32 %5, 1, !dbg !8266
  store i32 %inc, i32* %i, align 4, !dbg !8266
  br label %for.cond, !dbg !8267, !llvm.loop !8268

for.end:                                          ; preds = %for.cond
  store i32 2, i32* %retval, align 4, !dbg !8270
  br label %return, !dbg !8270

return:                                           ; preds = %for.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !8271
  ret i32 %6, !dbg !8271
}

; Function Attrs: noredzone
declare dso_local %struct.platform_device* @platform_device_alloc(i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dfl_id_alloc(i32 %type, %struct.device* %dev) #0 !dbg !8272 {
entry:
  %type.addr = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %id = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8275, metadata !DIExpression()), !dbg !8276
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8277, metadata !DIExpression()), !dbg !8278
  call void @llvm.dbg.declare(metadata i32* %id, metadata !8279, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8281, metadata !DIExpression()), !dbg !8283
  %0 = load i32, i32* %type.addr, align 4, !dbg !8283
  %cmp = icmp uge i32 %0, 2, !dbg !8283
  %lnot = xor i1 %cmp, true, !dbg !8283
  %lnot1 = xor i1 %lnot, true, !dbg !8283
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8283
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8283
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !8284
  %tobool = icmp ne i32 %1, 0, !dbg !8284
  %lnot2 = xor i1 %tobool, true, !dbg !8284
  %lnot4 = xor i1 %lnot2, true, !dbg !8284
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !8284
  %conv = sext i32 %lnot.ext5 to i64, !dbg !8284
  %tobool6 = icmp ne i64 %conv, 0, !dbg !8284
  br i1 %tobool6, label %if.then, label %if.end, !dbg !8283

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8284

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !8286

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !8288

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !8286

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), i32 104, i32 2305, i64 12) #4, !dbg !8290, !srcloc !8292
  br label %do.end9, !dbg !8290

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 231) #4, !dbg !8293, !srcloc !8295
  br label %do.body10, !dbg !8286

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !8296

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !8286

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !8286

if.end:                                           ; preds = %do.end12, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !8283
  %tobool13 = icmp ne i32 %2, 0, !dbg !8283
  %lnot14 = xor i1 %tobool13, true, !dbg !8283
  %lnot16 = xor i1 %lnot14, true, !dbg !8283
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !8283
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !8283
  store i64 %conv18, i64* %tmp, align 8, !dbg !8284
  %3 = load i64, i64* %tmp, align 8, !dbg !8283
  call void @mutex_lock(%struct.mutex* @dfl_id_mutex) #11, !dbg !8298
  %4 = load i32, i32* %type.addr, align 4, !dbg !8299
  %idxprom = zext i32 %4 to i64, !dbg !8300
  %arrayidx = getelementptr [2 x %struct.dfl_dev_info], [2 x %struct.dfl_dev_info]* @dfl_devs, i64 0, i64 %idxprom, !dbg !8300
  %id19 = getelementptr inbounds %struct.dfl_dev_info, %struct.dfl_dev_info* %arrayidx, i32 0, i32 2, !dbg !8301
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8302
  %6 = bitcast %struct.device* %5 to i8*, !dbg !8302
  %call = call i32 @idr_alloc(%struct.idr* %id19, i8* %6, i32 0, i32 0, i32 3264) #11, !dbg !8303
  store i32 %call, i32* %id, align 4, !dbg !8304
  call void @mutex_unlock(%struct.mutex* @dfl_id_mutex) #11, !dbg !8305
  %7 = load i32, i32* %id, align 4, !dbg !8306
  ret i32 %7, !dbg !8307
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dfl_get_devt(i32 %type, i32 %id) #0 !dbg !8308 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8311, metadata !DIExpression()), !dbg !8312
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !8313, metadata !DIExpression()), !dbg !8314
  %0 = load i32, i32* %type.addr, align 4, !dbg !8315
  %cmp = icmp uge i32 %0, 2, !dbg !8317
  br i1 %cmp, label %if.then, label %if.end, !dbg !8318

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8319
  br label %return, !dbg !8319

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %type.addr, align 4, !dbg !8320
  %idxprom = zext i32 %1 to i64, !dbg !8320
  %arrayidx = getelementptr [2 x %struct.dfl_chardev_info], [2 x %struct.dfl_chardev_info]* @dfl_chrdevs, i64 0, i64 %idxprom, !dbg !8320
  %devt = getelementptr inbounds %struct.dfl_chardev_info, %struct.dfl_chardev_info* %arrayidx, i32 0, i32 1, !dbg !8320
  %2 = load i32, i32* %devt, align 8, !dbg !8320
  %shr = lshr i32 %2, 20, !dbg !8320
  %shl = shl i32 %shr, 20, !dbg !8320
  %3 = load i32, i32* %id.addr, align 4, !dbg !8320
  %or = or i32 %shl, %3, !dbg !8320
  store i32 %or, i32* %retval, align 4, !dbg !8321
  br label %return, !dbg !8321

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !8322
  ret i32 %4, !dbg !8322
}

; Function Attrs: noredzone
declare dso_local i32 @idr_alloc(%struct.idr*, i8*, i32, i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @devm_iounmap(%struct.device*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @__devm_release_region(%struct.device*, %struct.resource*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__ab_c_size(i64 %a, i64 %b, i64 %c) #0 !dbg !8323 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %c.addr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  %__a3 = alloca i64, align 8
  %__b4 = alloca i64, align 8
  %__d5 = alloca i64*, align 8
  %tmp10 = alloca i8, align 1
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !8326, metadata !DIExpression()), !dbg !8327
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !8328, metadata !DIExpression()), !dbg !8329
  store i64 %c, i64* %c.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %c.addr, metadata !8330, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !8332, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !8334, metadata !DIExpression()), !dbg !8337
  %0 = load i64, i64* %a.addr, align 8, !dbg !8337
  store i64 %0, i64* %__a, align 8, !dbg !8337
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !8338, metadata !DIExpression()), !dbg !8337
  %1 = load i64, i64* %b.addr, align 8, !dbg !8337
  store i64 %1, i64* %__b, align 8, !dbg !8337
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !8339, metadata !DIExpression()), !dbg !8337
  store i64* %bytes, i64** %__d, align 8, !dbg !8337
  %cmp = icmp eq i64* %__a, %__b, !dbg !8337
  %conv = zext i1 %cmp to i32, !dbg !8337
  %2 = load i64*, i64** %__d, align 8, !dbg !8337
  %cmp1 = icmp eq i64* %__a, %2, !dbg !8337
  %conv2 = zext i1 %cmp1 to i32, !dbg !8337
  %3 = load i64, i64* %__a, align 8, !dbg !8337
  %4 = load i64, i64* %__b, align 8, !dbg !8337
  %5 = load i64*, i64** %__d, align 8, !dbg !8337
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !8337
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !8337
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !8337
  store i64 %8, i64* %5, align 8, !dbg !8337
  %frombool = zext i1 %7 to i8, !dbg !8337
  store i8 %frombool, i8* %tmp, align 1, !dbg !8337
  %9 = load i8, i8* %tmp, align 1, !dbg !8337
  %tobool = trunc i8 %9 to i1, !dbg !8337
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !8340
  br i1 %call, label %if.then, label %if.end, !dbg !8341

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !8342
  br label %return, !dbg !8342

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__a3, metadata !8343, metadata !DIExpression()), !dbg !8346
  %10 = load i64, i64* %bytes, align 8, !dbg !8346
  store i64 %10, i64* %__a3, align 8, !dbg !8346
  call void @llvm.dbg.declare(metadata i64* %__b4, metadata !8347, metadata !DIExpression()), !dbg !8346
  %11 = load i64, i64* %c.addr, align 8, !dbg !8346
  store i64 %11, i64* %__b4, align 8, !dbg !8346
  call void @llvm.dbg.declare(metadata i64** %__d5, metadata !8348, metadata !DIExpression()), !dbg !8346
  store i64* %bytes, i64** %__d5, align 8, !dbg !8346
  %cmp6 = icmp eq i64* %__a3, %__b4, !dbg !8346
  %conv7 = zext i1 %cmp6 to i32, !dbg !8346
  %12 = load i64*, i64** %__d5, align 8, !dbg !8346
  %cmp8 = icmp eq i64* %__a3, %12, !dbg !8346
  %conv9 = zext i1 %cmp8 to i32, !dbg !8346
  %13 = load i64, i64* %__a3, align 8, !dbg !8346
  %14 = load i64, i64* %__b4, align 8, !dbg !8346
  %15 = load i64*, i64** %__d5, align 8, !dbg !8346
  %16 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 %14), !dbg !8346
  %17 = extractvalue { i64, i1 } %16, 1, !dbg !8346
  %18 = extractvalue { i64, i1 } %16, 0, !dbg !8346
  store i64 %18, i64* %15, align 8, !dbg !8346
  %frombool11 = zext i1 %17 to i8, !dbg !8346
  store i8 %frombool11, i8* %tmp10, align 1, !dbg !8346
  %19 = load i8, i8* %tmp10, align 1, !dbg !8346
  %tobool12 = trunc i8 %19 to i1, !dbg !8346
  %call13 = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool12) #11, !dbg !8349
  br i1 %call13, label %if.then14, label %if.end15, !dbg !8350

if.then14:                                        ; preds = %if.end
  store i64 -1, i64* %retval, align 8, !dbg !8351
  br label %return, !dbg !8351

if.end15:                                         ; preds = %if.end
  %20 = load i64, i64* %bytes, align 8, !dbg !8352
  store i64 %20, i64* %retval, align 8, !dbg !8353
  br label %return, !dbg !8353

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %21 = load i64, i64* %retval, align 8, !dbg !8354
  ret i64 %21, !dbg !8354
}

; Function Attrs: noredzone
declare dso_local i8* @devm_ioremap_resource(%struct.device*, %struct.resource*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kcalloc(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !8355 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8358, metadata !DIExpression()), !dbg !8359
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8360, metadata !DIExpression()), !dbg !8361
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8362, metadata !DIExpression()), !dbg !8363
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8364, metadata !DIExpression()), !dbg !8365
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8366
  %1 = load i64, i64* %n.addr, align 8, !dbg !8367
  %2 = load i64, i64* %size.addr, align 8, !dbg !8368
  %3 = load i32, i32* %flags.addr, align 4, !dbg !8369
  %or = or i32 %3, 256, !dbg !8370
  %call = call i8* @devm_kmalloc_array(%struct.device* %0, i64 %1, i64 %2, i32 %or) #11, !dbg !8371
  ret i8* %call, !dbg !8372
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dfl_fpga_cdev_add_port_dev(%struct.dfl_fpga_cdev* %cdev, %struct.platform_device* %port) #0 !dbg !8373 {
entry:
  %cdev.addr = alloca %struct.dfl_fpga_cdev*, align 8
  %port.addr = alloca %struct.platform_device*, align 8
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  store %struct.dfl_fpga_cdev* %cdev, %struct.dfl_fpga_cdev** %cdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfl_fpga_cdev** %cdev.addr, metadata !8376, metadata !DIExpression()), !dbg !8377
  store %struct.platform_device* %port, %struct.platform_device** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %port.addr, metadata !8378, metadata !DIExpression()), !dbg !8379
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !8380, metadata !DIExpression()), !dbg !8381
  %0 = load %struct.platform_device*, %struct.platform_device** %port.addr, align 8, !dbg !8382
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !8383
  %call = call i8* @dev_get_platdata(%struct.device* %dev) #11, !dbg !8384
  %1 = bitcast i8* %call to %struct.dfl_feature_platform_data*, !dbg !8384
  store %struct.dfl_feature_platform_data* %1, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !8381
  %2 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !8385
  %lock = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %2, i32 0, i32 3, !dbg !8386
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !8387
  %3 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !8388
  %node = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %3, i32 0, i32 0, !dbg !8389
  %4 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !8390
  %port_dev_list = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %4, i32 0, i32 4, !dbg !8391
  call void @list_add(%struct.list_head* %node, %struct.list_head* %port_dev_list) #11, !dbg !8392
  %5 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !8393
  %dev1 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %5, i32 0, i32 3, !dbg !8394
  %6 = load %struct.platform_device*, %struct.platform_device** %dev1, align 8, !dbg !8394
  %dev2 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %6, i32 0, i32 3, !dbg !8395
  %call3 = call %struct.device* @get_device(%struct.device* %dev2) #11, !dbg !8396
  %7 = load %struct.dfl_fpga_cdev*, %struct.dfl_fpga_cdev** %cdev.addr, align 8, !dbg !8397
  %lock4 = getelementptr inbounds %struct.dfl_fpga_cdev, %struct.dfl_fpga_cdev* %7, i32 0, i32 3, !dbg !8398
  call void @mutex_unlock(%struct.mutex* %lock4) #11, !dbg !8399
  ret void, !dbg !8400
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kmalloc_array(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !8401 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8402, metadata !DIExpression()), !dbg !8403
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8404, metadata !DIExpression()), !dbg !8405
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8406, metadata !DIExpression()), !dbg !8407
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8408, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !8410, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !8412, metadata !DIExpression()), !dbg !8415
  %0 = load i64, i64* %n.addr, align 8, !dbg !8415
  store i64 %0, i64* %__a, align 8, !dbg !8415
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !8416, metadata !DIExpression()), !dbg !8415
  %1 = load i64, i64* %size.addr, align 8, !dbg !8415
  store i64 %1, i64* %__b, align 8, !dbg !8415
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !8417, metadata !DIExpression()), !dbg !8415
  store i64* %bytes, i64** %__d, align 8, !dbg !8415
  %cmp = icmp eq i64* %__a, %__b, !dbg !8415
  %conv = zext i1 %cmp to i32, !dbg !8415
  %2 = load i64*, i64** %__d, align 8, !dbg !8415
  %cmp1 = icmp eq i64* %__a, %2, !dbg !8415
  %conv2 = zext i1 %cmp1 to i32, !dbg !8415
  %3 = load i64, i64* %__a, align 8, !dbg !8415
  %4 = load i64, i64* %__b, align 8, !dbg !8415
  %5 = load i64*, i64** %__d, align 8, !dbg !8415
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !8415
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !8415
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !8415
  store i64 %8, i64* %5, align 8, !dbg !8415
  %frombool = zext i1 %7 to i8, !dbg !8415
  store i8 %frombool, i8* %tmp, align 1, !dbg !8415
  %9 = load i8, i8* %tmp, align 1, !dbg !8415
  %tobool = trunc i8 %9 to i1, !dbg !8415
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !8418
  %lnot = xor i1 %call, true, !dbg !8418
  %lnot3 = xor i1 %lnot, true, !dbg !8418
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !8418
  %conv4 = sext i32 %lnot.ext to i64, !dbg !8418
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !8418
  br i1 %tobool5, label %if.then, label %if.end, !dbg !8419

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !8420
  br label %return, !dbg !8420

if.end:                                           ; preds = %entry
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8421
  %11 = load i64, i64* %bytes, align 8, !dbg !8422
  %12 = load i32, i32* %flags.addr, align 4, !dbg !8423
  %call6 = call noalias i8* @devm_kmalloc(%struct.device* %10, i64 %11, i32 %12) #11, !dbg !8424
  store i8* %call6, i8** %retval, align 8, !dbg !8425
  br label %return, !dbg !8425

return:                                           ; preds = %if.end, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !8426
  ret i8* %13, !dbg !8426
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !8427 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8428, metadata !DIExpression()), !dbg !8429
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8430, metadata !DIExpression()), !dbg !8431
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8432
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8433
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8434
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !8435
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8435
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !8436
  ret void, !dbg !8437
}

; Function Attrs: noredzone
declare dso_local i32 @device_for_each_child(%struct.device*, i8*, i32 (%struct.device*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @remove_feature_dev(%struct.device* %dev, i8* %data) #0 !dbg !8438 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %pdev = alloca %struct.platform_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.platform_device*, align 8
  %type = alloca i32, align 4
  %id = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8441, metadata !DIExpression()), !dbg !8442
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8443, metadata !DIExpression()), !dbg !8444
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev, metadata !8445, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8447, metadata !DIExpression()), !dbg !8449
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8449
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8449
  store i8* %1, i8** %__mptr, align 8, !dbg !8449
  br label %do.body, !dbg !8449

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8450

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8449
  %add.ptr = getelementptr i8, i8* %2, i64 -16, !dbg !8449
  %3 = bitcast i8* %add.ptr to %struct.platform_device*, !dbg !8449
  store %struct.platform_device* %3, %struct.platform_device** %tmp, align 8, !dbg !8450
  %4 = load %struct.platform_device*, %struct.platform_device** %tmp, align 8, !dbg !8449
  store %struct.platform_device* %4, %struct.platform_device** %pdev, align 8, !dbg !8446
  call void @llvm.dbg.declare(metadata i32* %type, metadata !8452, metadata !DIExpression()), !dbg !8453
  %5 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !8454
  %call = call i32 @feature_dev_id_type(%struct.platform_device* %5) #11, !dbg !8455
  store i32 %call, i32* %type, align 4, !dbg !8453
  call void @llvm.dbg.declare(metadata i32* %id, metadata !8456, metadata !DIExpression()), !dbg !8457
  %6 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !8458
  %id1 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %6, i32 0, i32 1, !dbg !8459
  %7 = load i32, i32* %id1, align 8, !dbg !8459
  store i32 %7, i32* %id, align 4, !dbg !8457
  %8 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !8460
  call void @platform_device_unregister(%struct.platform_device* %8) #11, !dbg !8461
  %9 = load i32, i32* %type, align 4, !dbg !8462
  %10 = load i32, i32* %id, align 4, !dbg !8463
  call void @dfl_id_free(i32 %9, i32 %10) #11, !dbg !8464
  ret i32 0, !dbg !8465
}

; Function Attrs: noredzone
declare dso_local void @platform_device_unregister(%struct.platform_device*) #2

; Function Attrs: noredzone
declare dso_local i8* @idr_remove(%struct.idr*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dfl_get_feature_ioaddr_by_id(%struct.device* %dev, i16 zeroext %id) #0 !dbg !8466 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %id.addr = alloca i16, align 2
  %feature = alloca %struct.dfl_feature*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8469, metadata !DIExpression()), !dbg !8470
  store i16 %id, i16* %id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %id.addr, metadata !8471, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature, metadata !8473, metadata !DIExpression()), !dbg !8474
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8475
  %1 = load i16, i16* %id.addr, align 2, !dbg !8476
  %call = call %struct.dfl_feature* @dfl_get_feature_by_id(%struct.device* %0, i16 zeroext %1) #11, !dbg !8477
  store %struct.dfl_feature* %call, %struct.dfl_feature** %feature, align 8, !dbg !8474
  %2 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !8478
  %tobool = icmp ne %struct.dfl_feature* %2, null, !dbg !8478
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8480

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !8481
  %ioaddr = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %3, i32 0, i32 3, !dbg !8482
  %4 = load i8*, i8** %ioaddr, align 8, !dbg !8482
  %tobool1 = icmp ne i8* %4, null, !dbg !8481
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8483

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !8484
  %ioaddr2 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %5, i32 0, i32 3, !dbg !8485
  %6 = load i8*, i8** %ioaddr2, align 8, !dbg !8485
  store i8* %6, i8** %retval, align 8, !dbg !8486
  br label %return, !dbg !8486

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8487, metadata !DIExpression()), !dbg !8489
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !8489
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !8490
  %tobool3 = icmp ne i32 %7, 0, !dbg !8490
  %lnot = xor i1 %tobool3, true, !dbg !8490
  %lnot4 = xor i1 %lnot, true, !dbg !8490
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !8490
  %conv = sext i32 %lnot.ext to i64, !dbg !8490
  %tobool5 = icmp ne i64 %conv, 0, !dbg !8490
  br i1 %tobool5, label %if.then6, label %if.end13, !dbg !8489

if.then6:                                         ; preds = %if.end
  br label %do.body, !dbg !8490

do.body:                                          ; preds = %if.then6
  br label %do.body7, !dbg !8492

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !8494

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !8492

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i64 0, i64 0), i32 390, i32 2305, i64 12) #4, !dbg !8496, !srcloc !8498
  br label %do.end9, !dbg !8496

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 205) #4, !dbg !8499, !srcloc !8501
  br label %do.body10, !dbg !8492

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !8502

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !8492

do.end12:                                         ; preds = %do.end11
  br label %if.end13, !dbg !8492

if.end13:                                         ; preds = %do.end12, %if.end
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !8489
  %tobool14 = icmp ne i32 %8, 0, !dbg !8489
  %lnot15 = xor i1 %tobool14, true, !dbg !8489
  %lnot17 = xor i1 %lnot15, true, !dbg !8489
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !8489
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !8489
  store i64 %conv19, i64* %tmp, align 8, !dbg !8490
  %9 = load i64, i64* %tmp, align 8, !dbg !8489
  store i8* null, i8** %retval, align 8, !dbg !8504
  br label %return, !dbg !8504

return:                                           ; preds = %if.end13, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !8505
  ret i8* %10, !dbg !8505
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeq(i64 %val, i8* %addr) #0 !dbg !8506 {
entry:
  %val.addr = alloca i64, align 8
  %addr.addr = alloca i8*, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !8510, metadata !DIExpression()), !dbg !8511
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8512, metadata !DIExpression()), !dbg !8511
  %0 = load i64, i64* %val.addr, align 8, !dbg !8511
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !8511
  %2 = bitcast i8* %1 to i64*, !dbg !8511
  call void asm sideeffect "movq $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64 %0, i64* %2) #4, !dbg !8511, !srcloc !8513
  ret void, !dbg !8511
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dfl_feature* @dfl_get_feature_by_id(%struct.device* %dev, i16 zeroext %id) #0 !dbg !8514 {
entry:
  %retval = alloca %struct.dfl_feature*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %id.addr = alloca i16, align 2
  %pdata = alloca %struct.dfl_feature_platform_data*, align 8
  %feature = alloca %struct.dfl_feature*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8517, metadata !DIExpression()), !dbg !8518
  store i16 %id, i16* %id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %id.addr, metadata !8519, metadata !DIExpression()), !dbg !8520
  call void @llvm.dbg.declare(metadata %struct.dfl_feature_platform_data** %pdata, metadata !8521, metadata !DIExpression()), !dbg !8522
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8523
  %call = call i8* @dev_get_platdata(%struct.device* %0) #11, !dbg !8524
  %1 = bitcast i8* %call to %struct.dfl_feature_platform_data*, !dbg !8524
  store %struct.dfl_feature_platform_data* %1, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !8522
  call void @llvm.dbg.declare(metadata %struct.dfl_feature** %feature, metadata !8525, metadata !DIExpression()), !dbg !8526
  %2 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !8527
  %features = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %2, i32 0, i32 11, !dbg !8527
  %arraydecay = getelementptr inbounds [0 x %struct.dfl_feature], [0 x %struct.dfl_feature]* %features, i64 0, i64 0, !dbg !8527
  store %struct.dfl_feature* %arraydecay, %struct.dfl_feature** %feature, align 8, !dbg !8527
  br label %for.cond, !dbg !8527

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !8529
  %4 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !8529
  %features1 = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %4, i32 0, i32 11, !dbg !8529
  %arraydecay2 = getelementptr inbounds [0 x %struct.dfl_feature], [0 x %struct.dfl_feature]* %features1, i64 0, i64 0, !dbg !8529
  %5 = load %struct.dfl_feature_platform_data*, %struct.dfl_feature_platform_data** %pdata, align 8, !dbg !8529
  %num = getelementptr inbounds %struct.dfl_feature_platform_data, %struct.dfl_feature_platform_data* %5, i32 0, i32 10, !dbg !8529
  %6 = load i32, i32* %num, align 8, !dbg !8529
  %idx.ext = sext i32 %6 to i64, !dbg !8529
  %add.ptr = getelementptr %struct.dfl_feature, %struct.dfl_feature* %arraydecay2, i64 %idx.ext, !dbg !8529
  %cmp = icmp ult %struct.dfl_feature* %3, %add.ptr, !dbg !8529
  br i1 %cmp, label %for.body, label %for.end, !dbg !8527

for.body:                                         ; preds = %for.cond
  %7 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !8531
  %id3 = getelementptr inbounds %struct.dfl_feature, %struct.dfl_feature* %7, i32 0, i32 1, !dbg !8533
  %8 = load i16, i16* %id3, align 8, !dbg !8533
  %conv = zext i16 %8 to i32, !dbg !8531
  %9 = load i16, i16* %id.addr, align 2, !dbg !8534
  %conv4 = zext i16 %9 to i32, !dbg !8534
  %cmp5 = icmp eq i32 %conv, %conv4, !dbg !8535
  br i1 %cmp5, label %if.then, label %if.end, !dbg !8536

if.then:                                          ; preds = %for.body
  %10 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !8537
  store %struct.dfl_feature* %10, %struct.dfl_feature** %retval, align 8, !dbg !8538
  br label %return, !dbg !8538

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8534

for.inc:                                          ; preds = %if.end
  %11 = load %struct.dfl_feature*, %struct.dfl_feature** %feature, align 8, !dbg !8529
  %incdec.ptr = getelementptr %struct.dfl_feature, %struct.dfl_feature* %11, i32 1, !dbg !8529
  store %struct.dfl_feature* %incdec.ptr, %struct.dfl_feature** %feature, align 8, !dbg !8529
  br label %for.cond, !dbg !8529, !llvm.loop !8539

for.end:                                          ; preds = %for.cond
  store %struct.dfl_feature* null, %struct.dfl_feature** %retval, align 8, !dbg !8541
  br label %return, !dbg !8541

return:                                           ; preds = %for.end, %if.then
  %12 = load %struct.dfl_feature*, %struct.dfl_feature** %retval, align 8, !dbg !8542
  ret %struct.dfl_feature* %12, !dbg !8542
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @eventfd_ctx_put(%struct.eventfd_ctx*) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kasprintf(i32, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local %struct.eventfd_ctx* @eventfd_ctx_fdget(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #0 !dbg !8543 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !8552, metadata !DIExpression()), !dbg !8553
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !8554, metadata !DIExpression()), !dbg !8555
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !8556, metadata !DIExpression()), !dbg !8557
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8558, metadata !DIExpression()), !dbg !8559
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !8560, metadata !DIExpression()), !dbg !8561
  %0 = load i32, i32* %irq.addr, align 4, !dbg !8562
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !8563
  %2 = load i64, i64* %flags.addr, align 8, !dbg !8564
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8565
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !8566
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !8567
  ret i32 %call, !dbg !8568
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dfl_irq_handler(i32 %irq, i8* %arg) #0 !dbg !8569 {
entry:
  %irq.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %trigger = alloca %struct.eventfd_ctx*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !8570, metadata !DIExpression()), !dbg !8571
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8572, metadata !DIExpression()), !dbg !8573
  call void @llvm.dbg.declare(metadata %struct.eventfd_ctx** %trigger, metadata !8574, metadata !DIExpression()), !dbg !8575
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8576
  %1 = bitcast i8* %0 to %struct.eventfd_ctx*, !dbg !8576
  store %struct.eventfd_ctx* %1, %struct.eventfd_ctx** %trigger, align 8, !dbg !8575
  %2 = load %struct.eventfd_ctx*, %struct.eventfd_ctx** %trigger, align 8, !dbg !8577
  %call = call i64 @eventfd_signal(%struct.eventfd_ctx* %2, i64 1) #11, !dbg !8578
  ret i32 1, !dbg !8579
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local i64 @eventfd_signal(%struct.eventfd_ctx*, i64) #2

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !8580 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8583, metadata !DIExpression()), !dbg !8584
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !8585, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8587, metadata !DIExpression()), !dbg !8589
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !8589
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !8590
  %tobool = icmp ne i32 %0, 0, !dbg !8590
  %lnot = xor i1 %tobool, true, !dbg !8590
  %lnot1 = xor i1 %lnot, true, !dbg !8590
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8590
  %conv = sext i32 %lnot.ext to i64, !dbg !8590
  %tobool2 = icmp ne i64 %conv, 0, !dbg !8590
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8589

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8590

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !8592

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !8594

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !8592
  %2 = load i64, i64* %count.addr, align 8, !dbg !8592
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29, i64 0, i64 0), i32 %1, i64 %2) #11, !dbg !8592
  br label %do.body4, !dbg !8592

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !8596

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !8598

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !8596

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.28, i64 0, i64 0), i32 134, i32 2313, i64 12) #4, !dbg !8600, !srcloc !8602
  br label %do.end8, !dbg !8600

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #4, !dbg !8603, !srcloc !8605
  br label %do.body9, !dbg !8596

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !8606

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !8596

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !8592

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8608

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8592

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8592

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !8589
  %tobool15 = icmp ne i32 %3, 0, !dbg !8589
  %lnot16 = xor i1 %tobool15, true, !dbg !8589
  %lnot18 = xor i1 %lnot16, true, !dbg !8589
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8589
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8589
  store i64 %conv20, i64* %tmp, align 8, !dbg !8590
  %4 = load i64, i64* %tmp, align 8, !dbg !8589
  ret void, !dbg !8610
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !8611 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8614, metadata !DIExpression()), !dbg !8615
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8616, metadata !DIExpression()), !dbg !8617
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !8618, metadata !DIExpression()), !dbg !8619
  ret void, !dbg !8620
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @unregister_chrdev_region(i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @idr_destroy(%struct.idr*) #2

; Function Attrs: noredzone
declare dso_local i32 @bus_register(%struct.bus_type*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dfl_ids_init() #0 !dbg !8621 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8622, metadata !DIExpression()), !dbg !8623
  store i32 0, i32* %i, align 4, !dbg !8624
  br label %for.cond, !dbg !8626

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8627
  %conv = sext i32 %0 to i64, !dbg !8627
  %cmp = icmp ult i64 %conv, 2, !dbg !8629
  br i1 %cmp, label %for.body, label %for.end, !dbg !8630

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !8631
  %idxprom = sext i32 %1 to i64, !dbg !8632
  %arrayidx = getelementptr [2 x %struct.dfl_dev_info], [2 x %struct.dfl_dev_info]* @dfl_devs, i64 0, i64 %idxprom, !dbg !8632
  %id = getelementptr inbounds %struct.dfl_dev_info, %struct.dfl_dev_info* %arrayidx, i32 0, i32 2, !dbg !8633
  call void @idr_init(%struct.idr* %id) #11, !dbg !8634
  br label %for.inc, !dbg !8634

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !8635
  %inc = add i32 %2, 1, !dbg !8635
  store i32 %inc, i32* %i, align 4, !dbg !8635
  br label %for.cond, !dbg !8636, !llvm.loop !8637

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8639
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dfl_chardev_init() #0 !dbg !8640 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8641, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8643, metadata !DIExpression()), !dbg !8644
  store i32 0, i32* %i, align 4, !dbg !8645
  br label %for.cond, !dbg !8647

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8648
  %cmp = icmp slt i32 %0, 2, !dbg !8650
  br i1 %cmp, label %for.body, label %for.end, !dbg !8651

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !8652
  %idxprom = sext i32 %1 to i64, !dbg !8654
  %arrayidx = getelementptr [2 x %struct.dfl_chardev_info], [2 x %struct.dfl_chardev_info]* @dfl_chrdevs, i64 0, i64 %idxprom, !dbg !8654
  %devt = getelementptr inbounds %struct.dfl_chardev_info, %struct.dfl_chardev_info* %arrayidx, i32 0, i32 1, !dbg !8655
  %2 = load i32, i32* %i, align 4, !dbg !8656
  %idxprom1 = sext i32 %2 to i64, !dbg !8657
  %arrayidx2 = getelementptr [2 x %struct.dfl_chardev_info], [2 x %struct.dfl_chardev_info]* @dfl_chrdevs, i64 0, i64 %idxprom1, !dbg !8657
  %name = getelementptr inbounds %struct.dfl_chardev_info, %struct.dfl_chardev_info* %arrayidx2, i32 0, i32 0, !dbg !8658
  %3 = load i8*, i8** %name, align 16, !dbg !8658
  %call = call i32 @alloc_chrdev_region(i32* %devt, i32 0, i32 1048576, i8* %3) #11, !dbg !8659
  store i32 %call, i32* %ret, align 4, !dbg !8660
  %4 = load i32, i32* %ret, align 4, !dbg !8661
  %tobool = icmp ne i32 %4, 0, !dbg !8661
  br i1 %tobool, label %if.then, label %if.end, !dbg !8663

if.then:                                          ; preds = %for.body
  br label %exit, !dbg !8664

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8665

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !8666
  %inc = add i32 %5, 1, !dbg !8666
  store i32 %inc, i32* %i, align 4, !dbg !8666
  br label %for.cond, !dbg !8667, !llvm.loop !8668

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8670
  br label %return, !dbg !8670

exit:                                             ; preds = %if.then
  call void @llvm.dbg.label(metadata !8671), !dbg !8672
  call void @dfl_chardev_uinit() #11, !dbg !8673
  %6 = load i32, i32* %ret, align 4, !dbg !8674
  store i32 %6, i32* %retval, align 4, !dbg !8675
  br label %return, !dbg !8675

return:                                           ; preds = %exit, %for.end
  %7 = load i32, i32* %retval, align 4, !dbg !8676
  ret i32 %7, !dbg !8676
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @idr_init(%struct.idr* %idr) #0 !dbg !8677 {
entry:
  %idr.addr = alloca %struct.idr*, align 8
  store %struct.idr* %idr, %struct.idr** %idr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.idr** %idr.addr, metadata !8681, metadata !DIExpression()), !dbg !8682
  %0 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !8683
  call void @idr_init_base(%struct.idr* %0, i32 0) #11, !dbg !8684
  ret void, !dbg !8685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @idr_init_base(%struct.idr* %idr, i32 %base) #0 !dbg !8686 {
entry:
  %idr.addr = alloca %struct.idr*, align 8
  %base.addr = alloca i32, align 4
  store %struct.idr* %idr, %struct.idr** %idr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.idr** %idr.addr, metadata !8689, metadata !DIExpression()), !dbg !8690
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !8691, metadata !DIExpression()), !dbg !8692
  %0 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !8693
  %idr_rt = getelementptr inbounds %struct.idr, %struct.idr* %0, i32 0, i32 0, !dbg !8693
  call void @xa_init_flags(%struct.xarray* %idr_rt, i32 8388612) #11, !dbg !8693
  %1 = load i32, i32* %base.addr, align 4, !dbg !8694
  %2 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !8695
  %idr_base = getelementptr inbounds %struct.idr, %struct.idr* %2, i32 0, i32 1, !dbg !8696
  store i32 %1, i32* %idr_base, align 8, !dbg !8697
  %3 = load %struct.idr*, %struct.idr** %idr.addr, align 8, !dbg !8698
  %idr_next = getelementptr inbounds %struct.idr, %struct.idr* %3, i32 0, i32 2, !dbg !8699
  store i32 0, i32* %idr_next, align 4, !dbg !8700
  ret void, !dbg !8701
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xa_init_flags(%struct.xarray* %xa, i32 %flags) #0 !dbg !8702 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8706, metadata !DIExpression()), !dbg !8713
  %xa.addr = alloca %struct.xarray*, align 8
  %flags.addr = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.xarray* %xa, %struct.xarray** %xa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xarray** %xa.addr, metadata !8716, metadata !DIExpression()), !dbg !8717
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8718, metadata !DIExpression()), !dbg !8719
  br label %do.body, !dbg !8720

do.body:                                          ; preds = %entry
  %0 = load %struct.xarray*, %struct.xarray** %xa.addr, align 8, !dbg !8721
  %xa_lock = getelementptr inbounds %struct.xarray, %struct.xarray* %0, i32 0, i32 0, !dbg !8721
  store %struct.spinlock* %xa_lock, %struct.spinlock** %lock.addr.i, align 8
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8722
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !8723
  %rlock.i = bitcast %union.anon.3* %2 to %struct.raw_spinlock*, !dbg !8723
  %3 = load %struct.xarray*, %struct.xarray** %xa.addr, align 8, !dbg !8721
  %xa_lock1 = getelementptr inbounds %struct.xarray, %struct.xarray* %3, i32 0, i32 0, !dbg !8721
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8721
  %rlock = bitcast %union.anon.3* %4 to %struct.raw_spinlock*, !dbg !8721
  %5 = bitcast %struct.spinlock* %xa_lock1 to i8*, !dbg !8721
  %6 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8721
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 %6, i64 0, i1 false), !dbg !8721
  br label %do.end, !dbg !8721

do.end:                                           ; preds = %do.body
  %7 = load i32, i32* %flags.addr, align 4, !dbg !8724
  %8 = load %struct.xarray*, %struct.xarray** %xa.addr, align 8, !dbg !8725
  %xa_flags = getelementptr inbounds %struct.xarray, %struct.xarray* %8, i32 0, i32 1, !dbg !8726
  store i32 %7, i32* %xa_flags, align 8, !dbg !8727
  %9 = load %struct.xarray*, %struct.xarray** %xa.addr, align 8, !dbg !8728
  %xa_head = getelementptr inbounds %struct.xarray, %struct.xarray* %9, i32 0, i32 2, !dbg !8729
  store i8* null, i8** %xa_head, align 8, !dbg !8730
  ret void, !dbg !8731
}

; Function Attrs: noredzone
declare dso_local i32 @alloc_chrdev_region(i32*, i32, i32, i8*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly }
attributes #4 = { nounwind }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone willreturn }
attributes #8 = { nounwind willreturn }
attributes #9 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind willreturn }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!3954}
!llvm.module.flags = !{!3955, !3956, !3957, !3958}
!llvm.ident = !{!3959}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "dfl_port_ops_mutex", scope: !2, file: !3, line: 152, type: !1035, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !125, globals: !3839, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/fpga/dfl.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !18, !24, !30, !39, !47, !53, !59, !66, !74, !80, !96, !101, !108, !114, !119}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !14, line: 65, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17}
!16 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !19, line: 16, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !25, line: 54, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !31, line: 296, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36, !37, !38}
!33 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !40, line: 9, baseType: !7, size: 32, elements: !41)
!40 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!41 = !{!42, !43, !44, !45, !46}
!42 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!46 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !48, line: 26, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !54, line: 44, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58}
!56 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !60, line: 343, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !67, line: 524, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71, !72, !73}
!69 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!73 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !67, line: 502, baseType: !7, size: 32, elements: !75)
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fpga_mgr_states", file: !81, line: 33, baseType: !7, size: 32, elements: !82)
!81 = !DIFile(filename: "./include/linux/fpga/fpga-mgr.h", directory: "/home/lizy2001/genbc/linux")
!82 = !{!83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95}
!83 = !DIEnumerator(name: "FPGA_MGR_STATE_UNKNOWN", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "FPGA_MGR_STATE_POWER_OFF", value: 1, isUnsigned: true)
!85 = !DIEnumerator(name: "FPGA_MGR_STATE_POWER_UP", value: 2, isUnsigned: true)
!86 = !DIEnumerator(name: "FPGA_MGR_STATE_RESET", value: 3, isUnsigned: true)
!87 = !DIEnumerator(name: "FPGA_MGR_STATE_FIRMWARE_REQ", value: 4, isUnsigned: true)
!88 = !DIEnumerator(name: "FPGA_MGR_STATE_FIRMWARE_REQ_ERR", value: 5, isUnsigned: true)
!89 = !DIEnumerator(name: "FPGA_MGR_STATE_WRITE_INIT", value: 6, isUnsigned: true)
!90 = !DIEnumerator(name: "FPGA_MGR_STATE_WRITE_INIT_ERR", value: 7, isUnsigned: true)
!91 = !DIEnumerator(name: "FPGA_MGR_STATE_WRITE", value: 8, isUnsigned: true)
!92 = !DIEnumerator(name: "FPGA_MGR_STATE_WRITE_ERR", value: 9, isUnsigned: true)
!93 = !DIEnumerator(name: "FPGA_MGR_STATE_WRITE_COMPLETE", value: 10, isUnsigned: true)
!94 = !DIEnumerator(name: "FPGA_MGR_STATE_WRITE_COMPLETE_ERR", value: 11, isUnsigned: true)
!95 = !DIEnumerator(name: "FPGA_MGR_STATE_OPERATING", value: 12, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !97, line: 10, baseType: !7, size: 32, elements: !98)
!97 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!98 = !{!99, !100}
!99 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!100 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !102, line: 305, baseType: !7, size: 32, elements: !103)
!102 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!103 = !{!104, !105, !106, !107}
!104 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dfl_id_type", file: !109, line: 522, baseType: !7, size: 32, elements: !110)
!109 = !DIFile(filename: "drivers/fpga/dfl.h", directory: "/home/lizy2001/genbc/linux")
!110 = !{!111, !112, !113}
!111 = !DIEnumerator(name: "FME_ID", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "PORT_ID", value: 1, isUnsigned: true)
!113 = !DIEnumerator(name: "DFL_ID_MAX", value: 2, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dfl_fpga_devt_type", file: !3, line: 33, baseType: !7, size: 32, elements: !115)
!115 = !{!116, !117, !118}
!116 = !DIEnumerator(name: "DFL_FPGA_DEVT_FME", value: 0, isUnsigned: true)
!117 = !DIEnumerator(name: "DFL_FPGA_DEVT_PORT", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "DFL_FPGA_DEVT_MAX", value: 2, isUnsigned: true)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !120, line: 11, baseType: !7, size: 32, elements: !121)
!120 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!121 = !{!122, !123, !124}
!122 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!125 = !{!126, !127, !646, !685, !3643, !3649, !3810, !3811, !3814, !3790, !3815, !366, !149, !7, !3828, !3830, !264, !150, !267, !252}
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_fpga_port_ops", file: !109, line: 180, size: 384, elements: !129)
!129 = !{!130, !134, !138, !145, !3639}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !128, file: !109, line: 181, baseType: !131, size: 64)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !133)
!133 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !128, file: !109, line: 182, baseType: !135, size: 64, offset: 64)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!136 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !137, line: 76, flags: DIFlagFwdDecl)
!137 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!138 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !128, file: !109, line: 183, baseType: !139, size: 128, offset: 128)
!139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !140, line: 178, size: 128, elements: !141)
!140 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!141 = !{!142, !144}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !139, file: !140, line: 179, baseType: !143, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !139, file: !140, line: 179, baseType: !143, size: 64, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "get_id", scope: !128, file: !109, line: 184, baseType: !146, size: 64, offset: 256)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!147 = !DISubroutineType(types: !148)
!148 = !{!149, !150}
!149 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device", file: !152, line: 22, size: 6208, elements: !153)
!152 = !DIFile(filename: "./include/linux/platform_device.h", directory: "/home/lizy2001/genbc/linux")
!153 = !{!154, !155, !156, !159, !3612, !3613, !3614, !3615, !3629, !3633, !3634, !3637}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !151, file: !152, line: 23, baseType: !131, size: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !151, file: !152, line: 24, baseType: !149, size: 32, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "id_auto", scope: !151, file: !152, line: 25, baseType: !157, size: 8, offset: 96)
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !140, line: 30, baseType: !158)
!158 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !151, file: !152, line: 26, baseType: !160, size: 5568, offset: 128)
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !60, line: 461, size: 5568, elements: !161)
!161 = !{!162, !3183, !3185, !3188, !3189, !3240, !3313, !3314, !3315, !3316, !3317, !3326, !3431, !3444, !3447, !3448, !3452, !3454, !3455, !3456, !3460, !3466, !3467, !3470, !3474, !3564, !3565, !3566, !3567, !3568, !3600, !3601, !3602, !3605, !3608, !3609, !3610, !3611}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !160, file: !60, line: 462, baseType: !163, size: 512)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !164, line: 64, size: 512, elements: !165)
!164 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!165 = !{!166, !167, !168, !170, !230, !3034, !3173, !3178, !3179, !3180, !3181, !3182}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !163, file: !164, line: 65, baseType: !131, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !163, file: !164, line: 66, baseType: !139, size: 128, offset: 64)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !163, file: !164, line: 67, baseType: !169, size: 64, offset: 192)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !163, file: !164, line: 68, baseType: !171, size: 64, offset: 256)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !164, line: 192, size: 704, elements: !173)
!173 = !{!174, !175, !191, !192}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !172, file: !164, line: 193, baseType: !139, size: 128)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !172, file: !164, line: 194, baseType: !176, offset: 128)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !177, line: 83, baseType: !178)
!177 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !177, line: 71, elements: !179)
!179 = !{!180}
!180 = !DIDerivedType(tag: DW_TAG_member, scope: !178, file: !177, line: 72, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !178, file: !177, line: 72, elements: !182)
!182 = !{!183}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !181, file: !177, line: 73, baseType: !184)
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !177, line: 20, elements: !185)
!185 = !{!186}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !184, file: !177, line: 21, baseType: !187)
!187 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !188, line: 25, baseType: !189)
!188 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 25, elements: !190)
!190 = !{}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !172, file: !164, line: 195, baseType: !163, size: 512, offset: 128)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !172, file: !164, line: 196, baseType: !193, size: 64, offset: 640)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !164, line: 156, size: 192, elements: !196)
!196 = !{!197, !202, !207}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !195, file: !164, line: 157, baseType: !198, size: 64)
!198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = !DISubroutineType(types: !201)
!201 = !{!149, !171, !169}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !195, file: !164, line: 158, baseType: !203, size: 64, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!205 = !DISubroutineType(types: !206)
!206 = !{!131, !171, !169}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !195, file: !164, line: 159, baseType: !208, size: 64, offset: 128)
!208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!210 = !DISubroutineType(types: !211)
!211 = !{!149, !171, !169, !212}
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !164, line: 148, size: 20736, elements: !214)
!214 = !{!215, !220, !224, !225, !229}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !213, file: !164, line: 149, baseType: !216, size: 192)
!216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 192, elements: !218)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!218 = !{!219}
!219 = !DISubrange(count: 3)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !213, file: !164, line: 150, baseType: !221, size: 4096, offset: 192)
!221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 4096, elements: !222)
!222 = !{!223}
!223 = !DISubrange(count: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !213, file: !164, line: 151, baseType: !149, size: 32, offset: 4288)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !213, file: !164, line: 152, baseType: !226, size: 16384, offset: 4320)
!226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !133, size: 16384, elements: !227)
!227 = !{!228}
!228 = !DISubrange(count: 2048)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !213, file: !164, line: 153, baseType: !149, size: 32, offset: 20704)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !163, file: !164, line: 69, baseType: !231, size: 64, offset: 320)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !164, line: 138, size: 448, elements: !233)
!233 = !{!234, !238, !268, !270, !2996, !3024, !3028}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !232, file: !164, line: 139, baseType: !235, size: 64)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!236 = !DISubroutineType(types: !237)
!237 = !{null, !169}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !232, file: !164, line: 140, baseType: !239, size: 64, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !241)
!241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !242, line: 230, size: 128, elements: !243)
!242 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!243 = !{!244, !260}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !241, file: !242, line: 231, baseType: !245, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DISubroutineType(types: !247)
!247 = !{!248, !169, !253, !217}
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !140, line: 60, baseType: !249)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !250, line: 73, baseType: !251)
!250 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !250, line: 15, baseType: !252)
!252 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !242, line: 30, size: 128, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !254, file: !242, line: 31, baseType: !131, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !254, file: !242, line: 32, baseType: !258, size: 16, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !140, line: 19, baseType: !259)
!259 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !241, file: !242, line: 232, baseType: !261, size: 64, offset: 64)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = !DISubroutineType(types: !263)
!263 = !{!248, !169, !253, !131, !264}
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !140, line: 55, baseType: !265)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !250, line: 72, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !250, line: 16, baseType: !267)
!267 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !232, file: !164, line: 141, baseType: !269, size: 64, offset: 128)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !232, file: !164, line: 142, baseType: !271, size: 64, offset: 192)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !274)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !242, line: 84, size: 320, elements: !275)
!275 = !{!276, !277, !281, !2993, !2994}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !274, file: !242, line: 85, baseType: !131, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !274, file: !242, line: 86, baseType: !278, size: 64, offset: 64)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!279 = !DISubroutineType(types: !280)
!280 = !{!258, !169, !253, !149}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !274, file: !242, line: 88, baseType: !282, size: 64, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!283 = !DISubroutineType(types: !284)
!284 = !{!258, !169, !285, !149}
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !242, line: 168, size: 448, elements: !287)
!287 = !{!288, !289, !290, !291, !2988, !2989}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !286, file: !242, line: 169, baseType: !254, size: 128)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !286, file: !242, line: 170, baseType: !264, size: 64, offset: 128)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !286, file: !242, line: 171, baseType: !126, size: 64, offset: 192)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !286, file: !242, line: 172, baseType: !292, size: 64, offset: 256)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DISubroutineType(types: !294)
!294 = !{!248, !295, !169, !285, !217, !472, !264}
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !31, line: 916, size: 1856, align: 32, elements: !297)
!297 = !{!298, !316, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2971, !2972, !2981, !2982, !2983, !2984, !2985, !2986, !2987}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !296, file: !31, line: 920, baseType: !299, size: 128)
!299 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !296, file: !31, line: 917, size: 128, elements: !300)
!300 = !{!301, !307}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !299, file: !31, line: 918, baseType: !302, size: 64)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !303, line: 58, size: 64, elements: !304)
!303 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!304 = !{!305}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !302, file: !303, line: 59, baseType: !306, size: 64)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !299, file: !31, line: 919, baseType: !308, size: 128, align: 64)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !140, line: 216, size: 128, align: 64, elements: !309)
!309 = !{!310, !312}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !308, file: !140, line: 217, baseType: !311, size: 64)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !308, file: !140, line: 218, baseType: !313, size: 64, offset: 64)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = !DISubroutineType(types: !315)
!315 = !{null, !311}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !296, file: !31, line: 921, baseType: !317, size: 128, offset: 128)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !318, line: 8, size: 128, elements: !319)
!318 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!319 = !{!320, !324}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !317, file: !318, line: 9, baseType: !321, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!322 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !323, line: 18, flags: DIFlagFwdDecl)
!323 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!324 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !317, file: !318, line: 10, baseType: !325, size: 64, offset: 64)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !323, line: 89, size: 1536, elements: !327)
!327 = !{!328, !329, !339, !347, !348, !371, !2921, !2923, !2935, !2936, !2937, !2938, !2939, !2945, !2946, !2947}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !326, file: !323, line: 91, baseType: !7, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !326, file: !323, line: 92, baseType: !330, size: 32, offset: 32)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !331, line: 277, baseType: !332)
!331 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !331, line: 277, size: 32, elements: !333)
!333 = !{!334}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !332, file: !331, line: 277, baseType: !335, size: 32)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !331, line: 70, baseType: !336)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !331, line: 65, size: 32, elements: !337)
!337 = !{!338}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !336, file: !331, line: 66, baseType: !7, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !326, file: !323, line: 93, baseType: !340, size: 128, offset: 64)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !341, line: 38, size: 128, elements: !342)
!341 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!342 = !{!343, !345}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !340, file: !341, line: 39, baseType: !344, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !340, file: !341, line: 39, baseType: !346, size: 64, offset: 64)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !326, file: !323, line: 94, baseType: !325, size: 64, offset: 192)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !326, file: !323, line: 95, baseType: !349, size: 128, offset: 256)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !323, line: 47, size: 128, elements: !350)
!350 = !{!351, !367}
!351 = !DIDerivedType(tag: DW_TAG_member, scope: !349, file: !323, line: 48, baseType: !352, size: 64)
!352 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !349, file: !323, line: 48, size: 64, elements: !353)
!353 = !{!354, !363}
!354 = !DIDerivedType(tag: DW_TAG_member, scope: !352, file: !323, line: 49, baseType: !355, size: 64)
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !352, file: !323, line: 49, size: 64, elements: !356)
!356 = !{!357, !362}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !355, file: !323, line: 50, baseType: !358, size: 32)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !359, line: 21, baseType: !360)
!359 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !361, line: 27, baseType: !7)
!361 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!362 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !355, file: !323, line: 50, baseType: !358, size: 32, offset: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !352, file: !323, line: 52, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !359, line: 23, baseType: !365)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !361, line: 31, baseType: !366)
!366 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !349, file: !323, line: 54, baseType: !368, size: 64, offset: 64)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !370)
!370 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !326, file: !323, line: 96, baseType: !372, size: 64, offset: 384)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !31, line: 610, size: 4224, elements: !374)
!374 = !{!375, !376, !377, !385, !392, !393, !539, !2624, !2625, !2626, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2889, !2897, !2898, !2899, !2917, !2918, !2919, !2920}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !373, file: !31, line: 611, baseType: !258, size: 16)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !373, file: !31, line: 612, baseType: !259, size: 16, offset: 16)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !373, file: !31, line: 613, baseType: !378, size: 32, offset: 32)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !379, line: 23, baseType: !380)
!379 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !379, line: 21, size: 32, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !380, file: !379, line: 22, baseType: !383, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !140, line: 32, baseType: !384)
!384 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !250, line: 49, baseType: !7)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !373, file: !31, line: 614, baseType: !386, size: 32, offset: 64)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !379, line: 28, baseType: !387)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !379, line: 26, size: 32, elements: !388)
!388 = !{!389}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !387, file: !379, line: 27, baseType: !390, size: 32)
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !140, line: 33, baseType: !391)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !250, line: 50, baseType: !7)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !373, file: !31, line: 615, baseType: !7, size: 32, offset: 96)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !373, file: !31, line: 622, baseType: !394, size: 64, offset: 128)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !396)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !31, line: 1864, size: 1536, align: 512, elements: !397)
!397 = !{!398, !402, !415, !419, !425, !429, !433, !437, !441, !445, !449, !450, !456, !460, !486, !515, !519, !525, !530, !534, !535}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !396, file: !31, line: 1865, baseType: !399, size: 64)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = !DISubroutineType(types: !401)
!401 = !{!325, !372, !325, !7}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !396, file: !31, line: 1866, baseType: !403, size: 64, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!404 = !DISubroutineType(types: !405)
!405 = !{!131, !325, !372, !406}
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !408, line: 10, size: 128, elements: !409)
!408 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!409 = !{!410, !414}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !407, file: !408, line: 11, baseType: !411, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DISubroutineType(types: !413)
!413 = !{null, !126}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !407, file: !408, line: 12, baseType: !126, size: 64, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !396, file: !31, line: 1867, baseType: !416, size: 64, offset: 128)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DISubroutineType(types: !418)
!418 = !{!149, !372, !149}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !396, file: !31, line: 1868, baseType: !420, size: 64, offset: 192)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!421 = !DISubroutineType(types: !422)
!422 = !{!423, !372, !149}
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !31, line: 581, flags: DIFlagFwdDecl)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !396, file: !31, line: 1870, baseType: !426, size: 64, offset: 256)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = !DISubroutineType(types: !428)
!428 = !{!149, !325, !217, !149}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !396, file: !31, line: 1872, baseType: !430, size: 64, offset: 320)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DISubroutineType(types: !432)
!432 = !{!149, !372, !325, !258, !157}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !396, file: !31, line: 1873, baseType: !434, size: 64, offset: 384)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DISubroutineType(types: !436)
!436 = !{!149, !325, !372, !325}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !396, file: !31, line: 1874, baseType: !438, size: 64, offset: 448)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = !DISubroutineType(types: !440)
!440 = !{!149, !372, !325}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !396, file: !31, line: 1875, baseType: !442, size: 64, offset: 512)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DISubroutineType(types: !444)
!444 = !{!149, !372, !325, !131}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !396, file: !31, line: 1876, baseType: !446, size: 64, offset: 576)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DISubroutineType(types: !448)
!448 = !{!149, !372, !325, !258}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !396, file: !31, line: 1877, baseType: !438, size: 64, offset: 640)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !396, file: !31, line: 1878, baseType: !451, size: 64, offset: 704)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DISubroutineType(types: !453)
!453 = !{!149, !372, !325, !258, !454}
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !140, line: 16, baseType: !455)
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !140, line: 13, baseType: !358)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !396, file: !31, line: 1879, baseType: !457, size: 64, offset: 768)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = !DISubroutineType(types: !459)
!459 = !{!149, !372, !325, !372, !325, !7}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !396, file: !31, line: 1881, baseType: !461, size: 64, offset: 832)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = !DISubroutineType(types: !463)
!463 = !{!149, !325, !464}
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !31, line: 219, size: 640, elements: !466)
!466 = !{!467, !468, !469, !470, !471, !475, !483, !484, !485}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !465, file: !31, line: 220, baseType: !7, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !465, file: !31, line: 221, baseType: !258, size: 16, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !465, file: !31, line: 222, baseType: !378, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !465, file: !31, line: 223, baseType: !386, size: 32, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !465, file: !31, line: 224, baseType: !472, size: 64, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !140, line: 46, baseType: !473)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !250, line: 88, baseType: !474)
!474 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !465, file: !31, line: 225, baseType: !476, size: 128, offset: 192)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !477, line: 13, size: 128, elements: !478)
!477 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!478 = !{!479, !482}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !476, file: !477, line: 14, baseType: !480, size: 64)
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !477, line: 8, baseType: !481)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !361, line: 30, baseType: !474)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !476, file: !477, line: 15, baseType: !252, size: 64, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !465, file: !31, line: 226, baseType: !476, size: 128, offset: 320)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !465, file: !31, line: 227, baseType: !476, size: 128, offset: 448)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !465, file: !31, line: 234, baseType: !295, size: 64, offset: 576)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !396, file: !31, line: 1882, baseType: !487, size: 64, offset: 896)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = !DISubroutineType(types: !489)
!489 = !{!149, !490, !492, !358, !7}
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !494, line: 22, size: 1152, elements: !495)
!494 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!495 = !{!496, !497, !498, !499, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !493, file: !494, line: 23, baseType: !358, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !493, file: !494, line: 24, baseType: !258, size: 16, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !493, file: !494, line: 25, baseType: !7, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !493, file: !494, line: 26, baseType: !500, size: 32, offset: 96)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !140, line: 104, baseType: !358)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !493, file: !494, line: 27, baseType: !364, size: 64, offset: 128)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !493, file: !494, line: 28, baseType: !364, size: 64, offset: 192)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !493, file: !494, line: 37, baseType: !364, size: 64, offset: 256)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !493, file: !494, line: 38, baseType: !454, size: 32, offset: 320)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !493, file: !494, line: 39, baseType: !454, size: 32, offset: 352)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !493, file: !494, line: 40, baseType: !378, size: 32, offset: 384)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !493, file: !494, line: 41, baseType: !386, size: 32, offset: 416)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !493, file: !494, line: 42, baseType: !472, size: 64, offset: 448)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !493, file: !494, line: 43, baseType: !476, size: 128, offset: 512)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !493, file: !494, line: 44, baseType: !476, size: 128, offset: 640)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !493, file: !494, line: 45, baseType: !476, size: 128, offset: 768)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !493, file: !494, line: 46, baseType: !476, size: 128, offset: 896)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !493, file: !494, line: 47, baseType: !364, size: 64, offset: 1024)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !493, file: !494, line: 48, baseType: !364, size: 64, offset: 1088)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !396, file: !31, line: 1883, baseType: !516, size: 64, offset: 960)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DISubroutineType(types: !518)
!518 = !{!248, !325, !217, !264}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !396, file: !31, line: 1884, baseType: !520, size: 64, offset: 1024)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = !DISubroutineType(types: !522)
!522 = !{!149, !372, !523, !364, !364}
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !31, line: 50, flags: DIFlagFwdDecl)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !396, file: !31, line: 1886, baseType: !526, size: 64, offset: 1088)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DISubroutineType(types: !528)
!528 = !{!149, !372, !529, !149}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !396, file: !31, line: 1887, baseType: !531, size: 64, offset: 1152)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DISubroutineType(types: !533)
!533 = !{!149, !372, !325, !295, !7, !258}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !396, file: !31, line: 1890, baseType: !446, size: 64, offset: 1216)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !396, file: !31, line: 1891, baseType: !536, size: 64, offset: 1280)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = !DISubroutineType(types: !538)
!538 = !{!149, !372, !423, !149}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !373, file: !31, line: 623, baseType: !540, size: 64, offset: 192)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !31, line: 1416, size: 9472, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548, !595, !2231, !2313, !2396, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2412, !2416, !2417, !2420, !2421, !2424, !2425, !2426, !2467, !2494, !2495, !2496, !2497, !2498, !2499, !2502, !2504, !2511, !2512, !2514, !2515, !2516, !2575, !2576, !2591, !2592, !2593, !2594, !2595, !2598, !2599, !2600, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !541, file: !31, line: 1417, baseType: !139, size: 128)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !541, file: !31, line: 1418, baseType: !454, size: 32, offset: 128)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !541, file: !31, line: 1419, baseType: !370, size: 8, offset: 160)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !541, file: !31, line: 1420, baseType: !267, size: 64, offset: 192)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !541, file: !31, line: 1421, baseType: !472, size: 64, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !541, file: !31, line: 1422, baseType: !549, size: 64, offset: 320)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !31, line: 2228, size: 576, elements: !551)
!551 = !{!552, !553, !554, !561, !565, !569, !573, !574, !575, !585, !588, !589, !590, !592, !593, !594}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !550, file: !31, line: 2229, baseType: !131, size: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !550, file: !31, line: 2230, baseType: !149, size: 32, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !550, file: !31, line: 2238, baseType: !555, size: 64, offset: 128)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DISubroutineType(types: !557)
!557 = !{!149, !558}
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!559 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !560, line: 28, flags: DIFlagFwdDecl)
!560 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!561 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !550, file: !31, line: 2239, baseType: !562, size: 64, offset: 192)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !564)
!564 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !31, line: 70, flags: DIFlagFwdDecl)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !550, file: !31, line: 2240, baseType: !566, size: 64, offset: 256)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DISubroutineType(types: !568)
!568 = !{!325, !549, !149, !131, !126}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !550, file: !31, line: 2242, baseType: !570, size: 64, offset: 320)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DISubroutineType(types: !572)
!572 = !{null, !540}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !550, file: !31, line: 2243, baseType: !135, size: 64, offset: 384)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !550, file: !31, line: 2244, baseType: !549, size: 64, offset: 448)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !550, file: !31, line: 2245, baseType: !576, size: 64, offset: 512)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !140, line: 182, size: 64, elements: !577)
!577 = !{!578}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !576, file: !140, line: 183, baseType: !579, size: 64)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !140, line: 186, size: 128, elements: !581)
!581 = !{!582, !583}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !580, file: !140, line: 187, baseType: !579, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !580, file: !140, line: 187, baseType: !584, size: 64, offset: 64)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !550, file: !31, line: 2247, baseType: !586, offset: 576)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !587, line: 187, elements: !190)
!587 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!588 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !550, file: !31, line: 2248, baseType: !586, offset: 576)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !550, file: !31, line: 2249, baseType: !586, offset: 576)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !550, file: !31, line: 2250, baseType: !591, offset: 576)
!591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, elements: !218)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !550, file: !31, line: 2252, baseType: !586, offset: 576)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !550, file: !31, line: 2253, baseType: !586, offset: 576)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !550, file: !31, line: 2254, baseType: !586, offset: 576)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !541, file: !31, line: 1423, baseType: !596, size: 64, offset: 384)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !598)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !31, line: 1935, size: 1472, elements: !599)
!599 = !{!600, !604, !608, !609, !613, !619, !623, !624, !625, !629, !633, !634, !635, !636, !642, !647, !648, !655, !656, !657, !658, !2215, !2230}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !598, file: !31, line: 1936, baseType: !601, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DISubroutineType(types: !603)
!603 = !{!372, !540}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !598, file: !31, line: 1937, baseType: !605, size: 64, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = !DISubroutineType(types: !607)
!607 = !{null, !372}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !598, file: !31, line: 1938, baseType: !605, size: 64, offset: 128)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !598, file: !31, line: 1940, baseType: !610, size: 64, offset: 192)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = !DISubroutineType(types: !612)
!612 = !{null, !372, !149}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !598, file: !31, line: 1941, baseType: !614, size: 64, offset: 256)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DISubroutineType(types: !616)
!616 = !{!149, !372, !617}
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !31, line: 289, flags: DIFlagFwdDecl)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !598, file: !31, line: 1942, baseType: !620, size: 64, offset: 320)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = !DISubroutineType(types: !622)
!622 = !{!149, !372}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !598, file: !31, line: 1943, baseType: !605, size: 64, offset: 384)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !598, file: !31, line: 1944, baseType: !570, size: 64, offset: 448)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !598, file: !31, line: 1945, baseType: !626, size: 64, offset: 512)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DISubroutineType(types: !628)
!628 = !{!149, !540, !149}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !598, file: !31, line: 1946, baseType: !630, size: 64, offset: 576)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DISubroutineType(types: !632)
!632 = !{!149, !540}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !598, file: !31, line: 1947, baseType: !630, size: 64, offset: 640)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !598, file: !31, line: 1948, baseType: !630, size: 64, offset: 704)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !598, file: !31, line: 1949, baseType: !630, size: 64, offset: 768)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !598, file: !31, line: 1950, baseType: !637, size: 64, offset: 832)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DISubroutineType(types: !639)
!639 = !{!149, !325, !640}
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !31, line: 57, flags: DIFlagFwdDecl)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !598, file: !31, line: 1951, baseType: !643, size: 64, offset: 896)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DISubroutineType(types: !645)
!645 = !{!149, !540, !646, !217}
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !598, file: !31, line: 1952, baseType: !570, size: 64, offset: 960)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !598, file: !31, line: 1954, baseType: !649, size: 64, offset: 1024)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DISubroutineType(types: !651)
!651 = !{!149, !652, !325}
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !654, line: 539, flags: DIFlagFwdDecl)
!654 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!655 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !598, file: !31, line: 1955, baseType: !649, size: 64, offset: 1088)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !598, file: !31, line: 1956, baseType: !649, size: 64, offset: 1152)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !598, file: !31, line: 1957, baseType: !649, size: 64, offset: 1216)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !598, file: !31, line: 1963, baseType: !659, size: 64, offset: 1280)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DISubroutineType(types: !661)
!661 = !{!149, !540, !662, !685}
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !664, line: 68, size: 512, align: 128, elements: !665)
!664 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!665 = !{!666, !667, !2207, !2214}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !663, file: !664, line: 69, baseType: !267, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, scope: !663, file: !664, line: 77, baseType: !668, size: 320, offset: 64)
!668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !663, file: !664, line: 77, size: 320, elements: !669)
!669 = !{!670, !858, !863, !891, !899, !905, !2199, !2206}
!670 = !DIDerivedType(tag: DW_TAG_member, scope: !668, file: !664, line: 78, baseType: !671, size: 320)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !668, file: !664, line: 78, size: 320, elements: !672)
!672 = !{!673, !674, !856, !857}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !671, file: !664, line: 84, baseType: !139, size: 128)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !671, file: !664, line: 86, baseType: !675, size: 64, offset: 128)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !31, line: 451, size: 1216, align: 64, elements: !677)
!677 = !{!678, !679, !687, !688, !693, !708, !724, !725, !726, !727, !849, !850, !853, !854, !855}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !676, file: !31, line: 452, baseType: !372, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !676, file: !31, line: 453, baseType: !680, size: 128, offset: 64)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !681, line: 292, size: 128, elements: !682)
!681 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!682 = !{!683, !684, !686}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !680, file: !681, line: 293, baseType: !176)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !680, file: !681, line: 295, baseType: !685, size: 32)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !140, line: 148, baseType: !7)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !680, file: !681, line: 296, baseType: !126, size: 64, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !676, file: !31, line: 454, baseType: !685, size: 32, offset: 192)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !676, file: !31, line: 455, baseType: !689, size: 32, offset: 224)
!689 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !140, line: 168, baseType: !690)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !140, line: 166, size: 32, elements: !691)
!691 = !{!692}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !690, file: !140, line: 167, baseType: !149, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !676, file: !31, line: 460, baseType: !694, size: 128, offset: 256)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !695, line: 125, size: 128, elements: !696)
!695 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!696 = !{!697, !707}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !694, file: !695, line: 126, baseType: !698, size: 64)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !695, line: 31, size: 64, elements: !699)
!699 = !{!700}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !698, file: !695, line: 32, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !695, line: 24, size: 192, align: 64, elements: !703)
!703 = !{!704, !705, !706}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !702, file: !695, line: 25, baseType: !267, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !702, file: !695, line: 26, baseType: !701, size: 64, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !702, file: !695, line: 27, baseType: !701, size: 64, offset: 128)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !694, file: !695, line: 127, baseType: !701, size: 64, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !676, file: !31, line: 461, baseType: !709, size: 256, offset: 384)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !710, line: 35, size: 256, elements: !711)
!710 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!711 = !{!712, !720, !721, !723}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !709, file: !710, line: 36, baseType: !713, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !714, line: 13, baseType: !715)
!714 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !140, line: 175, baseType: !716)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !140, line: 173, size: 64, elements: !717)
!717 = !{!718}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !716, file: !140, line: 174, baseType: !719, size: 64)
!719 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !359, line: 22, baseType: !481)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !709, file: !710, line: 42, baseType: !713, size: 64, offset: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !709, file: !710, line: 46, baseType: !722, offset: 128)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !177, line: 29, baseType: !184)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !709, file: !710, line: 47, baseType: !139, size: 128, offset: 128)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !676, file: !31, line: 462, baseType: !267, size: 64, offset: 640)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !676, file: !31, line: 463, baseType: !267, size: 64, offset: 704)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !676, file: !31, line: 464, baseType: !267, size: 64, offset: 768)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !676, file: !31, line: 465, baseType: !728, size: 64, offset: 832)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !730)
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !31, line: 367, size: 1408, elements: !731)
!731 = !{!732, !736, !740, !744, !748, !752, !758, !764, !768, !773, !777, !781, !785, !813, !817, !823, !824, !825, !829, !834, !838, !845}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !730, file: !31, line: 368, baseType: !733, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{!149, !662, !617}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !730, file: !31, line: 369, baseType: !737, size: 64, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DISubroutineType(types: !739)
!739 = !{!149, !295, !662}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !730, file: !31, line: 372, baseType: !741, size: 64, offset: 128)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DISubroutineType(types: !743)
!743 = !{!149, !675, !617}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !730, file: !31, line: 375, baseType: !745, size: 64, offset: 192)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DISubroutineType(types: !747)
!747 = !{!149, !662}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !730, file: !31, line: 381, baseType: !749, size: 64, offset: 256)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DISubroutineType(types: !751)
!751 = !{!149, !295, !675, !143, !7}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !730, file: !31, line: 383, baseType: !753, size: 64, offset: 320)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DISubroutineType(types: !755)
!755 = !{null, !756}
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !31, line: 290, flags: DIFlagFwdDecl)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !730, file: !31, line: 385, baseType: !759, size: 64, offset: 384)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DISubroutineType(types: !761)
!761 = !{!149, !295, !675, !472, !7, !7, !762, !763}
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !730, file: !31, line: 388, baseType: !765, size: 64, offset: 448)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DISubroutineType(types: !767)
!767 = !{!149, !295, !675, !472, !7, !7, !662, !126}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !730, file: !31, line: 393, baseType: !769, size: 64, offset: 512)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DISubroutineType(types: !771)
!771 = !{!772, !675, !772}
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !140, line: 125, baseType: !364)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !730, file: !31, line: 394, baseType: !774, size: 64, offset: 576)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DISubroutineType(types: !776)
!776 = !{null, !662, !7, !7}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !730, file: !31, line: 395, baseType: !778, size: 64, offset: 640)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = !DISubroutineType(types: !780)
!780 = !{!149, !662, !685}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !730, file: !31, line: 396, baseType: !782, size: 64, offset: 704)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{null, !662}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !730, file: !31, line: 397, baseType: !786, size: 64, offset: 768)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DISubroutineType(types: !788)
!788 = !{!248, !789, !811}
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !31, line: 320, size: 384, elements: !791)
!791 = !{!792, !793, !794, !798, !799, !800, !803, !804}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !790, file: !31, line: 321, baseType: !295, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !790, file: !31, line: 326, baseType: !472, size: 64, offset: 64)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !790, file: !31, line: 327, baseType: !795, size: 64, offset: 128)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DISubroutineType(types: !797)
!797 = !{null, !789, !252, !252}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !790, file: !31, line: 328, baseType: !126, size: 64, offset: 192)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !790, file: !31, line: 329, baseType: !149, size: 32, offset: 256)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !790, file: !31, line: 330, baseType: !801, size: 16, offset: 288)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !359, line: 19, baseType: !802)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !361, line: 24, baseType: !259)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !790, file: !31, line: 331, baseType: !801, size: 16, offset: 304)
!804 = !DIDerivedType(tag: DW_TAG_member, scope: !790, file: !31, line: 332, baseType: !805, size: 64, offset: 320)
!805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !790, file: !31, line: 332, size: 64, elements: !806)
!806 = !{!807, !808}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !805, file: !31, line: 333, baseType: !7, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !805, file: !31, line: 334, baseType: !809, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !31, line: 334, flags: DIFlagFwdDecl)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !31, line: 64, flags: DIFlagFwdDecl)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !730, file: !31, line: 402, baseType: !814, size: 64, offset: 832)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{!149, !675, !662, !662, !5}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !730, file: !31, line: 404, baseType: !818, size: 64, offset: 896)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DISubroutineType(types: !820)
!820 = !{!157, !662, !821}
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !822, line: 305, baseType: !7)
!822 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!823 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !730, file: !31, line: 405, baseType: !782, size: 64, offset: 960)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !730, file: !31, line: 406, baseType: !745, size: 64, offset: 1024)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !730, file: !31, line: 407, baseType: !826, size: 64, offset: 1088)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DISubroutineType(types: !828)
!828 = !{!149, !662, !267, !267}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !730, file: !31, line: 409, baseType: !830, size: 64, offset: 1152)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DISubroutineType(types: !832)
!832 = !{null, !662, !833, !833}
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !730, file: !31, line: 410, baseType: !835, size: 64, offset: 1216)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!149, !675, !662}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !730, file: !31, line: 413, baseType: !839, size: 64, offset: 1280)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DISubroutineType(types: !841)
!841 = !{!149, !842, !295, !844}
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !31, line: 61, flags: DIFlagFwdDecl)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !730, file: !31, line: 415, baseType: !846, size: 64, offset: 1344)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DISubroutineType(types: !848)
!848 = !{null, !295}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !676, file: !31, line: 466, baseType: !267, size: 64, offset: 896)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !676, file: !31, line: 467, baseType: !851, size: 32, offset: 960)
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !852, line: 8, baseType: !358)
!852 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!853 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !676, file: !31, line: 468, baseType: !176, offset: 992)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !676, file: !31, line: 469, baseType: !139, size: 128, offset: 1024)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !676, file: !31, line: 470, baseType: !126, size: 64, offset: 1152)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !671, file: !664, line: 87, baseType: !267, size: 64, offset: 192)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !671, file: !664, line: 94, baseType: !267, size: 64, offset: 256)
!858 = !DIDerivedType(tag: DW_TAG_member, scope: !668, file: !664, line: 96, baseType: !859, size: 64)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !668, file: !664, line: 96, size: 64, elements: !860)
!860 = !{!861}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !859, file: !664, line: 101, baseType: !862, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !140, line: 143, baseType: !364)
!863 = !DIDerivedType(tag: DW_TAG_member, scope: !668, file: !664, line: 103, baseType: !864, size: 320)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !668, file: !664, line: 103, size: 320, elements: !865)
!865 = !{!866, !876, !879, !880}
!866 = !DIDerivedType(tag: DW_TAG_member, scope: !864, file: !664, line: 104, baseType: !867, size: 128)
!867 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !864, file: !664, line: 104, size: 128, elements: !868)
!868 = !{!869, !870}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !867, file: !664, line: 105, baseType: !139, size: 128)
!870 = !DIDerivedType(tag: DW_TAG_member, scope: !867, file: !664, line: 106, baseType: !871, size: 128)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !867, file: !664, line: 106, size: 128, elements: !872)
!872 = !{!873, !874, !875}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !871, file: !664, line: 107, baseType: !662, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !871, file: !664, line: 109, baseType: !149, size: 32, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !871, file: !664, line: 110, baseType: !149, size: 32, offset: 96)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !864, file: !664, line: 117, baseType: !877, size: 64, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !664, line: 117, flags: DIFlagFwdDecl)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !864, file: !664, line: 119, baseType: !126, size: 64, offset: 192)
!880 = !DIDerivedType(tag: DW_TAG_member, scope: !864, file: !664, line: 120, baseType: !881, size: 64, offset: 256)
!881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !864, file: !664, line: 120, size: 64, elements: !882)
!882 = !{!883, !884, !885}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !881, file: !664, line: 121, baseType: !126, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !881, file: !664, line: 122, baseType: !267, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, scope: !881, file: !664, line: 123, baseType: !886, size: 32)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !881, file: !664, line: 123, size: 32, elements: !887)
!887 = !{!888, !889, !890}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !886, file: !664, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !886, file: !664, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !886, file: !664, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!891 = !DIDerivedType(tag: DW_TAG_member, scope: !668, file: !664, line: 130, baseType: !892, size: 192)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !668, file: !664, line: 130, size: 192, elements: !893)
!893 = !{!894, !895, !896, !897, !898}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !892, file: !664, line: 131, baseType: !267, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !892, file: !664, line: 134, baseType: !370, size: 8, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !892, file: !664, line: 135, baseType: !370, size: 8, offset: 72)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !892, file: !664, line: 136, baseType: !689, size: 32, offset: 96)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !892, file: !664, line: 137, baseType: !7, size: 32, offset: 128)
!899 = !DIDerivedType(tag: DW_TAG_member, scope: !668, file: !664, line: 139, baseType: !900, size: 256)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !668, file: !664, line: 139, size: 256, elements: !901)
!901 = !{!902, !903, !904}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !900, file: !664, line: 140, baseType: !267, size: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !900, file: !664, line: 141, baseType: !689, size: 32, offset: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !900, file: !664, line: 143, baseType: !139, size: 128, offset: 128)
!905 = !DIDerivedType(tag: DW_TAG_member, scope: !668, file: !664, line: 145, baseType: !906, size: 256)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !668, file: !664, line: 145, size: 256, elements: !907)
!907 = !{!908, !909, !911, !912, !2198}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !906, file: !664, line: 146, baseType: !267, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !906, file: !664, line: 147, baseType: !910, size: 64, offset: 64)
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !654, line: 509, baseType: !662)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !906, file: !664, line: 148, baseType: !267, size: 64, offset: 128)
!912 = !DIDerivedType(tag: DW_TAG_member, scope: !906, file: !664, line: 149, baseType: !913, size: 64, offset: 192)
!913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !906, file: !664, line: 149, size: 64, elements: !914)
!914 = !{!915, !2197}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !913, file: !664, line: 150, baseType: !916, size: 64)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !664, line: 388, size: 7296, elements: !918)
!918 = !{!919, !2193}
!919 = !DIDerivedType(tag: DW_TAG_member, scope: !917, file: !664, line: 389, baseType: !920, size: 7296)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !917, file: !664, line: 389, size: 7296, elements: !921)
!921 = !{!922, !960, !961, !962, !966, !967, !968, !969, !970, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1011, !1019, !1022, !1068, !1069, !2177, !2178, !2181, !2182, !2183, !2186, !2187, !2188, !2191, !2192}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !920, file: !664, line: 390, baseType: !923, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !664, line: 305, size: 1472, elements: !925)
!925 = !{!926, !927, !928, !929, !930, !931, !932, !933, !940, !941, !946, !947, !950, !954, !955, !956, !957, !958}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !924, file: !664, line: 308, baseType: !267, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !924, file: !664, line: 309, baseType: !267, size: 64, offset: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !924, file: !664, line: 313, baseType: !923, size: 64, offset: 128)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !924, file: !664, line: 313, baseType: !923, size: 64, offset: 192)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !924, file: !664, line: 315, baseType: !702, size: 192, align: 64, offset: 256)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !924, file: !664, line: 323, baseType: !267, size: 64, offset: 448)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !924, file: !664, line: 327, baseType: !916, size: 64, offset: 512)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !924, file: !664, line: 333, baseType: !934, size: 64, offset: 576)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !654, line: 284, baseType: !935)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !654, line: 284, size: 64, elements: !936)
!936 = !{!937}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !935, file: !654, line: 284, baseType: !938, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !939, line: 19, baseType: !267)
!939 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!940 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !924, file: !664, line: 334, baseType: !267, size: 64, offset: 640)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !924, file: !664, line: 343, baseType: !942, size: 256, offset: 704)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !924, file: !664, line: 340, size: 256, elements: !943)
!943 = !{!944, !945}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !942, file: !664, line: 341, baseType: !702, size: 192, align: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !942, file: !664, line: 342, baseType: !267, size: 64, offset: 192)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !924, file: !664, line: 351, baseType: !139, size: 128, offset: 960)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !924, file: !664, line: 353, baseType: !948, size: 64, offset: 1088)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !664, line: 353, flags: DIFlagFwdDecl)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !924, file: !664, line: 356, baseType: !951, size: 64, offset: 1152)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!953 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !664, line: 356, flags: DIFlagFwdDecl)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !924, file: !664, line: 359, baseType: !267, size: 64, offset: 1216)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !924, file: !664, line: 361, baseType: !295, size: 64, offset: 1280)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !924, file: !664, line: 362, baseType: !126, size: 64, offset: 1344)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !924, file: !664, line: 365, baseType: !713, size: 64, offset: 1408)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !924, file: !664, line: 373, baseType: !959, offset: 1472)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !664, line: 296, elements: !190)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !920, file: !664, line: 391, baseType: !698, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !920, file: !664, line: 392, baseType: !364, size: 64, offset: 128)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !920, file: !664, line: 394, baseType: !963, size: 64, offset: 192)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DISubroutineType(types: !965)
!965 = !{!267, !295, !267, !267, !267, !267}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !920, file: !664, line: 398, baseType: !267, size: 64, offset: 256)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !920, file: !664, line: 399, baseType: !267, size: 64, offset: 320)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !920, file: !664, line: 405, baseType: !267, size: 64, offset: 384)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !920, file: !664, line: 406, baseType: !267, size: 64, offset: 448)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !920, file: !664, line: 407, baseType: !971, size: 64, offset: 512)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !654, line: 286, baseType: !973)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 286, size: 64, elements: !974)
!974 = !{!975}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !973, file: !654, line: 286, baseType: !976, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !939, line: 18, baseType: !267)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !920, file: !664, line: 416, baseType: !689, size: 32, offset: 576)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !920, file: !664, line: 428, baseType: !689, size: 32, offset: 608)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !920, file: !664, line: 437, baseType: !689, size: 32, offset: 640)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !920, file: !664, line: 447, baseType: !689, size: 32, offset: 672)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !920, file: !664, line: 450, baseType: !713, size: 64, offset: 704)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !920, file: !664, line: 452, baseType: !149, size: 32, offset: 768)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !920, file: !664, line: 454, baseType: !176, offset: 800)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !920, file: !664, line: 457, baseType: !709, size: 256, offset: 832)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !920, file: !664, line: 459, baseType: !139, size: 128, offset: 1088)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !920, file: !664, line: 466, baseType: !267, size: 64, offset: 1216)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !920, file: !664, line: 467, baseType: !267, size: 64, offset: 1280)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !920, file: !664, line: 469, baseType: !267, size: 64, offset: 1344)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !920, file: !664, line: 470, baseType: !267, size: 64, offset: 1408)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !920, file: !664, line: 471, baseType: !715, size: 64, offset: 1472)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !920, file: !664, line: 472, baseType: !267, size: 64, offset: 1536)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !920, file: !664, line: 473, baseType: !267, size: 64, offset: 1600)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !920, file: !664, line: 474, baseType: !267, size: 64, offset: 1664)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !920, file: !664, line: 475, baseType: !267, size: 64, offset: 1728)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !920, file: !664, line: 477, baseType: !176, offset: 1792)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !920, file: !664, line: 478, baseType: !267, size: 64, offset: 1792)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !920, file: !664, line: 478, baseType: !267, size: 64, offset: 1856)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !920, file: !664, line: 478, baseType: !267, size: 64, offset: 1920)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !920, file: !664, line: 478, baseType: !267, size: 64, offset: 1984)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !920, file: !664, line: 479, baseType: !267, size: 64, offset: 2048)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !920, file: !664, line: 479, baseType: !267, size: 64, offset: 2112)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !920, file: !664, line: 479, baseType: !267, size: 64, offset: 2176)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !920, file: !664, line: 480, baseType: !267, size: 64, offset: 2240)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !920, file: !664, line: 480, baseType: !267, size: 64, offset: 2304)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !920, file: !664, line: 480, baseType: !267, size: 64, offset: 2368)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !920, file: !664, line: 480, baseType: !267, size: 64, offset: 2432)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !920, file: !664, line: 482, baseType: !1008, size: 2816, offset: 2496)
!1008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 2816, elements: !1009)
!1009 = !{!1010}
!1010 = !DISubrange(count: 44)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !920, file: !664, line: 488, baseType: !1012, size: 256, offset: 5312)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1013, line: 60, size: 256, elements: !1014)
!1013 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1014 = !{!1015}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1012, file: !1013, line: 61, baseType: !1016, size: 256)
!1016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 256, elements: !1017)
!1017 = !{!1018}
!1018 = !DISubrange(count: 4)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !920, file: !664, line: 490, baseType: !1020, size: 64, offset: 5568)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !664, line: 490, flags: DIFlagFwdDecl)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !920, file: !664, line: 493, baseType: !1023, size: 896, offset: 5632)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1024, line: 53, baseType: !1025)
!1024 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1024, line: 13, size: 896, elements: !1026)
!1026 = !{!1027, !1028, !1029, !1030, !1033, !1034, !1041, !1042, !1062, !1063, !1064}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1025, file: !1024, line: 18, baseType: !364, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1025, file: !1024, line: 28, baseType: !715, size: 64, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1025, file: !1024, line: 31, baseType: !709, size: 256, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1025, file: !1024, line: 32, baseType: !1031, size: 64, offset: 384)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1024, line: 32, flags: DIFlagFwdDecl)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1025, file: !1024, line: 37, baseType: !259, size: 16, offset: 448)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1025, file: !1024, line: 40, baseType: !1035, size: 192, offset: 512)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1036, line: 53, size: 192, elements: !1037)
!1036 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1037 = !{!1038, !1039, !1040}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1035, file: !1036, line: 54, baseType: !713, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1035, file: !1036, line: 55, baseType: !176, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1035, file: !1036, line: 59, baseType: !139, size: 128, offset: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1025, file: !1024, line: 41, baseType: !126, size: 64, offset: 704)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1025, file: !1024, line: 42, baseType: !1043, size: 64, offset: 768)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1045)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1046, line: 13, size: 896, elements: !1047)
!1046 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1047 = !{!1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1045, file: !1046, line: 14, baseType: !126, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1045, file: !1046, line: 15, baseType: !267, size: 64, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1045, file: !1046, line: 17, baseType: !267, size: 64, offset: 128)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1045, file: !1046, line: 17, baseType: !267, size: 64, offset: 192)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1045, file: !1046, line: 19, baseType: !252, size: 64, offset: 256)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1045, file: !1046, line: 21, baseType: !252, size: 64, offset: 320)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1045, file: !1046, line: 22, baseType: !252, size: 64, offset: 384)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1045, file: !1046, line: 23, baseType: !252, size: 64, offset: 448)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1045, file: !1046, line: 24, baseType: !252, size: 64, offset: 512)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1045, file: !1046, line: 25, baseType: !252, size: 64, offset: 576)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1045, file: !1046, line: 26, baseType: !252, size: 64, offset: 640)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1045, file: !1046, line: 27, baseType: !252, size: 64, offset: 704)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1045, file: !1046, line: 28, baseType: !252, size: 64, offset: 768)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1045, file: !1046, line: 29, baseType: !252, size: 64, offset: 832)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1025, file: !1024, line: 44, baseType: !689, size: 32, offset: 832)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1025, file: !1024, line: 50, baseType: !801, size: 16, offset: 864)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1025, file: !1024, line: 51, baseType: !1065, size: 16, offset: 880)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !359, line: 18, baseType: !1066)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !361, line: 23, baseType: !1067)
!1067 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !920, file: !664, line: 495, baseType: !267, size: 64, offset: 6528)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !920, file: !664, line: 497, baseType: !1070, size: 64, offset: 6592)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !664, line: 381, size: 384, elements: !1072)
!1072 = !{!1073, !1074, !2176}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1071, file: !664, line: 382, baseType: !689, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1071, file: !664, line: 383, baseType: !1075, size: 128, offset: 64)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !664, line: 376, size: 128, elements: !1076)
!1076 = !{!1077, !2174}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1075, file: !664, line: 377, baseType: !1078, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1080, line: 640, size: 48640, elements: !1081)
!1080 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1081 = !{!1082, !1088, !1090, !1091, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1108, !1126, !1137, !1222, !1223, !1224, !1235, !1236, !1238, !1239, !1240, !1241, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1320, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1358, !1360, !1361, !1362, !1374, !1375, !1376, !1377, !1378, !1379, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1403, !1408, !1592, !1593, !1594, !1595, !1599, !1602, !1605, !1608, !1611, !1615, !1716, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1762, !1763, !1764, !1765, !1766, !1771, !1772, !1773, !1776, !1777, !1780, !1783, !1786, !1789, !1832, !1835, !1836, !1915, !1916, !1919, !1920, !1923, !1924, !1925, !1929, !1930, !1931, !1944, !1945, !1946, !1956, !1961, !1964, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1079, file: !1080, line: 646, baseType: !1083, size: 128)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1084, line: 56, size: 128, elements: !1085)
!1084 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1085 = !{!1086, !1087}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1083, file: !1084, line: 57, baseType: !267, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1083, file: !1084, line: 58, baseType: !358, size: 32, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1079, file: !1080, line: 649, baseType: !1089, size: 64, offset: 128)
!1089 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !252)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1079, file: !1080, line: 657, baseType: !126, size: 64, offset: 192)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1079, file: !1080, line: 658, baseType: !1092, size: 32, offset: 256)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1093, line: 113, baseType: !1094)
!1093 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1093, line: 111, size: 32, elements: !1095)
!1095 = !{!1096}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1094, file: !1093, line: 112, baseType: !689, size: 32)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1079, file: !1080, line: 660, baseType: !7, size: 32, offset: 288)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1079, file: !1080, line: 661, baseType: !7, size: 32, offset: 320)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1079, file: !1080, line: 684, baseType: !149, size: 32, offset: 352)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1079, file: !1080, line: 686, baseType: !149, size: 32, offset: 384)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1079, file: !1080, line: 687, baseType: !149, size: 32, offset: 416)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1079, file: !1080, line: 688, baseType: !149, size: 32, offset: 448)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1079, file: !1080, line: 689, baseType: !7, size: 32, offset: 480)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1079, file: !1080, line: 691, baseType: !1105, size: 64, offset: 512)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!1107 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1080, line: 691, flags: DIFlagFwdDecl)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1079, file: !1080, line: 692, baseType: !1109, size: 832, offset: 576)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1080, line: 451, size: 832, elements: !1110)
!1110 = !{!1111, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1109, file: !1080, line: 453, baseType: !1112, size: 128)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1080, line: 325, size: 128, elements: !1113)
!1113 = !{!1114, !1115}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1112, file: !1080, line: 326, baseType: !267, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1112, file: !1080, line: 327, baseType: !358, size: 32, offset: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1109, file: !1080, line: 454, baseType: !702, size: 192, align: 64, offset: 128)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1109, file: !1080, line: 455, baseType: !139, size: 128, offset: 320)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1109, file: !1080, line: 456, baseType: !7, size: 32, offset: 448)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1109, file: !1080, line: 458, baseType: !364, size: 64, offset: 512)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1109, file: !1080, line: 459, baseType: !364, size: 64, offset: 576)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1109, file: !1080, line: 460, baseType: !364, size: 64, offset: 640)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1109, file: !1080, line: 461, baseType: !364, size: 64, offset: 704)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1109, file: !1080, line: 463, baseType: !364, size: 64, offset: 768)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1109, file: !1080, line: 465, baseType: !1125, offset: 832)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1080, line: 415, elements: !190)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1079, file: !1080, line: 693, baseType: !1127, size: 384, offset: 1408)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1080, line: 489, size: 384, elements: !1128)
!1128 = !{!1129, !1130, !1131, !1132, !1133, !1134, !1135}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1127, file: !1080, line: 490, baseType: !139, size: 128)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1127, file: !1080, line: 491, baseType: !267, size: 64, offset: 128)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1127, file: !1080, line: 492, baseType: !267, size: 64, offset: 192)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1127, file: !1080, line: 493, baseType: !7, size: 32, offset: 256)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1127, file: !1080, line: 494, baseType: !259, size: 16, offset: 288)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1127, file: !1080, line: 495, baseType: !259, size: 16, offset: 304)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1127, file: !1080, line: 497, baseType: !1136, size: 64, offset: 320)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1079, file: !1080, line: 697, baseType: !1138, size: 1792, offset: 1792)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1080, line: 507, size: 1792, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1219, !1220}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1138, file: !1080, line: 508, baseType: !702, size: 192, align: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1138, file: !1080, line: 515, baseType: !364, size: 64, offset: 192)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1138, file: !1080, line: 516, baseType: !364, size: 64, offset: 256)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1138, file: !1080, line: 517, baseType: !364, size: 64, offset: 320)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1138, file: !1080, line: 518, baseType: !364, size: 64, offset: 384)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1138, file: !1080, line: 519, baseType: !364, size: 64, offset: 448)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1138, file: !1080, line: 526, baseType: !719, size: 64, offset: 512)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1138, file: !1080, line: 527, baseType: !364, size: 64, offset: 576)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1138, file: !1080, line: 528, baseType: !7, size: 32, offset: 640)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1138, file: !1080, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1138, file: !1080, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1138, file: !1080, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1138, file: !1080, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1138, file: !1080, line: 563, baseType: !1154, size: 512, offset: 704)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !14, line: 118, size: 512, elements: !1155)
!1155 = !{!1156, !1164, !1165, !1170, !1213, !1216, !1217, !1218}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1154, file: !14, line: 119, baseType: !1157, size: 256)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1158, line: 9, size: 256, elements: !1159)
!1158 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1159 = !{!1160, !1161}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1157, file: !1158, line: 10, baseType: !702, size: 192, align: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1157, file: !1158, line: 11, baseType: !1162, size: 64, offset: 192)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1163, line: 29, baseType: !719)
!1163 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1154, file: !14, line: 120, baseType: !1162, size: 64, offset: 256)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1154, file: !14, line: 121, baseType: !1166, size: 64, offset: 320)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!13, !1169}
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1154, file: !14, line: 122, baseType: !1171, size: 64, offset: 384)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !14, line: 159, size: 512, align: 512, elements: !1173)
!1173 = !{!1174, !1194, !1195, !1198, !1203, !1204, !1208, !1212}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1172, file: !14, line: 160, baseType: !1175, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !14, line: 214, size: 4608, align: 512, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1176, file: !14, line: 215, baseType: !722)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1176, file: !14, line: 216, baseType: !7, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1176, file: !14, line: 217, baseType: !7, size: 32, offset: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1176, file: !14, line: 218, baseType: !7, size: 32, offset: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1176, file: !14, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1176, file: !14, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1176, file: !14, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1176, file: !14, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1176, file: !14, line: 233, baseType: !1162, size: 64, offset: 128)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1176, file: !14, line: 234, baseType: !1169, size: 64, offset: 192)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1176, file: !14, line: 235, baseType: !1162, size: 64, offset: 256)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1176, file: !14, line: 236, baseType: !1169, size: 64, offset: 320)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1176, file: !14, line: 237, baseType: !1191, size: 4096, offset: 512)
!1191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1172, size: 4096, elements: !1192)
!1192 = !{!1193}
!1193 = !DISubrange(count: 8)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1172, file: !14, line: 161, baseType: !7, size: 32, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1172, file: !14, line: 162, baseType: !1196, size: 32, offset: 96)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !140, line: 27, baseType: !1197)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !250, line: 96, baseType: !149)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1172, file: !14, line: 163, baseType: !1199, size: 32, offset: 128)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !331, line: 276, baseType: !1200)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !331, line: 276, size: 32, elements: !1201)
!1201 = !{!1202}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1200, file: !331, line: 276, baseType: !335, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1172, file: !14, line: 164, baseType: !1169, size: 64, offset: 192)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1172, file: !14, line: 165, baseType: !1205, size: 128, offset: 256)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1158, line: 14, size: 128, elements: !1206)
!1206 = !{!1207}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1205, file: !1158, line: 15, baseType: !694, size: 128)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1172, file: !14, line: 166, baseType: !1209, size: 64, offset: 384)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!1162}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1172, file: !14, line: 167, baseType: !1162, size: 64, offset: 448)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1154, file: !14, line: 123, baseType: !1214, size: 8, offset: 448)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !359, line: 17, baseType: !1215)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !361, line: 21, baseType: !370)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1154, file: !14, line: 124, baseType: !1214, size: 8, offset: 456)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1154, file: !14, line: 125, baseType: !1214, size: 8, offset: 464)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1154, file: !14, line: 126, baseType: !1214, size: 8, offset: 472)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1138, file: !1080, line: 572, baseType: !1154, size: 512, offset: 1216)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1138, file: !1080, line: 580, baseType: !1221, size: 64, offset: 1728)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1079, file: !1080, line: 721, baseType: !7, size: 32, offset: 3584)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1079, file: !1080, line: 722, baseType: !149, size: 32, offset: 3616)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1079, file: !1080, line: 723, baseType: !1225, size: 64, offset: 3648)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1227)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1228, line: 17, baseType: !1229)
!1228 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1228, line: 17, size: 64, elements: !1230)
!1230 = !{!1231}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1229, file: !1228, line: 17, baseType: !1232, size: 64)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 64, elements: !1233)
!1233 = !{!1234}
!1234 = !DISubrange(count: 1)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1079, file: !1080, line: 724, baseType: !1227, size: 64, offset: 3712)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1079, file: !1080, line: 749, baseType: !1237, offset: 3776)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1080, line: 290, elements: !190)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1079, file: !1080, line: 751, baseType: !139, size: 128, offset: 3776)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1079, file: !1080, line: 757, baseType: !916, size: 64, offset: 3904)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1079, file: !1080, line: 758, baseType: !916, size: 64, offset: 3968)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1079, file: !1080, line: 761, baseType: !1242, size: 320, offset: 4032)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1013, line: 34, size: 320, elements: !1243)
!1243 = !{!1244, !1245}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1242, file: !1013, line: 35, baseType: !364, size: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1242, file: !1013, line: 36, baseType: !1246, size: 256, offset: 64)
!1246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 256, elements: !1017)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1079, file: !1080, line: 766, baseType: !149, size: 32, offset: 4352)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1079, file: !1080, line: 767, baseType: !149, size: 32, offset: 4384)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1079, file: !1080, line: 768, baseType: !149, size: 32, offset: 4416)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1079, file: !1080, line: 770, baseType: !149, size: 32, offset: 4448)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1079, file: !1080, line: 772, baseType: !267, size: 64, offset: 4480)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1079, file: !1080, line: 775, baseType: !7, size: 32, offset: 4544)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1079, file: !1080, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1079, file: !1080, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1079, file: !1080, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1079, file: !1080, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1079, file: !1080, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1079, file: !1080, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1079, file: !1080, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1079, file: !1080, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1079, file: !1080, line: 831, baseType: !267, size: 64, offset: 4672)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1079, file: !1080, line: 833, baseType: !1263, size: 384, offset: 4736)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !19, line: 25, size: 384, elements: !1264)
!1264 = !{!1265, !1270}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1263, file: !19, line: 26, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!252, !1269}
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, scope: !1263, file: !19, line: 27, baseType: !1271, size: 320, offset: 64)
!1271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1263, file: !19, line: 27, size: 320, elements: !1272)
!1272 = !{!1273, !1283, !1310}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1271, file: !19, line: 36, baseType: !1274, size: 320)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1271, file: !19, line: 29, size: 320, elements: !1275)
!1275 = !{!1276, !1278, !1279, !1280, !1281, !1282}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1274, file: !19, line: 30, baseType: !1277, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1274, file: !19, line: 31, baseType: !358, size: 32, offset: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1274, file: !19, line: 32, baseType: !358, size: 32, offset: 96)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1274, file: !19, line: 33, baseType: !358, size: 32, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1274, file: !19, line: 34, baseType: !364, size: 64, offset: 192)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1274, file: !19, line: 35, baseType: !1277, size: 64, offset: 256)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1271, file: !19, line: 46, baseType: !1284, size: 192)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1271, file: !19, line: 38, size: 192, elements: !1285)
!1285 = !{!1286, !1287, !1288, !1309}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1284, file: !19, line: 39, baseType: !1196, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1284, file: !19, line: 40, baseType: !18, size: 32, offset: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, scope: !1284, file: !19, line: 41, baseType: !1289, size: 64, offset: 64)
!1289 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1284, file: !19, line: 41, size: 64, elements: !1290)
!1290 = !{!1291, !1299}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1289, file: !19, line: 42, baseType: !1292, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1294, line: 7, size: 128, elements: !1295)
!1294 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1295 = !{!1296, !1298}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1293, file: !1294, line: 8, baseType: !1297, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !250, line: 93, baseType: !474)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1293, file: !1294, line: 9, baseType: !474, size: 64, offset: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1289, file: !19, line: 43, baseType: !1300, size: 64)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1302, line: 7, size: 64, elements: !1303)
!1302 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1303 = !{!1304, !1308}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1301, file: !1302, line: 8, baseType: !1305, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1302, line: 5, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !359, line: 20, baseType: !1307)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !361, line: 26, baseType: !149)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1301, file: !1302, line: 9, baseType: !1306, size: 32, offset: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1284, file: !19, line: 45, baseType: !364, size: 64, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1271, file: !19, line: 54, baseType: !1311, size: 256)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1271, file: !19, line: 48, size: 256, elements: !1312)
!1312 = !{!1313, !1316, !1317, !1318, !1319}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1311, file: !19, line: 49, baseType: !1314, size: 64)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !19, line: 14, flags: DIFlagFwdDecl)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1311, file: !19, line: 50, baseType: !149, size: 32, offset: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1311, file: !19, line: 51, baseType: !149, size: 32, offset: 96)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1311, file: !19, line: 52, baseType: !267, size: 64, offset: 128)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1311, file: !19, line: 53, baseType: !267, size: 64, offset: 192)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1079, file: !1080, line: 835, baseType: !1321, size: 32, offset: 5120)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !140, line: 22, baseType: !1322)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !250, line: 28, baseType: !149)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1079, file: !1080, line: 836, baseType: !1321, size: 32, offset: 5152)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1079, file: !1080, line: 840, baseType: !267, size: 64, offset: 5184)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1079, file: !1080, line: 849, baseType: !1078, size: 64, offset: 5248)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1079, file: !1080, line: 852, baseType: !1078, size: 64, offset: 5312)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1079, file: !1080, line: 857, baseType: !139, size: 128, offset: 5376)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1079, file: !1080, line: 858, baseType: !139, size: 128, offset: 5504)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1079, file: !1080, line: 859, baseType: !1078, size: 64, offset: 5632)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1079, file: !1080, line: 867, baseType: !139, size: 128, offset: 5696)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1079, file: !1080, line: 868, baseType: !139, size: 128, offset: 5824)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1079, file: !1080, line: 871, baseType: !1333, size: 64, offset: 5952)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !40, line: 59, size: 768, elements: !1335)
!1335 = !{!1336, !1337, !1338, !1339, !1341, !1342, !1349, !1350}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1334, file: !40, line: 61, baseType: !1092, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1334, file: !40, line: 62, baseType: !7, size: 32, offset: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1334, file: !40, line: 63, baseType: !176, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1334, file: !40, line: 65, baseType: !1340, size: 256, offset: 64)
!1340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 256, elements: !1017)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1334, file: !40, line: 66, baseType: !576, size: 64, offset: 320)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1334, file: !40, line: 68, baseType: !1343, size: 128, offset: 384)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1344, line: 40, baseType: !1345)
!1344 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1344, line: 36, size: 128, elements: !1346)
!1346 = !{!1347, !1348}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1345, file: !1344, line: 37, baseType: !176)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1345, file: !1344, line: 38, baseType: !139, size: 128)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1334, file: !40, line: 69, baseType: !308, size: 128, align: 64, offset: 512)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1334, file: !40, line: 70, baseType: !1351, size: 128, offset: 640)
!1351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1352, size: 128, elements: !1233)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !40, line: 54, size: 128, elements: !1353)
!1353 = !{!1354, !1355}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1352, file: !40, line: 55, baseType: !149, size: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1352, file: !40, line: 56, baseType: !1356, size: 64, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !40, line: 56, flags: DIFlagFwdDecl)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1079, file: !1080, line: 872, baseType: !1359, size: 512, offset: 6016)
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !580, size: 512, elements: !1017)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1079, file: !1080, line: 873, baseType: !139, size: 128, offset: 6528)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1079, file: !1080, line: 874, baseType: !139, size: 128, offset: 6656)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1079, file: !1080, line: 876, baseType: !1363, size: 64, offset: 6784)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1365, line: 26, size: 192, elements: !1366)
!1365 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1366 = !{!1367, !1368}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1364, file: !1365, line: 27, baseType: !7, size: 32)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1364, file: !1365, line: 28, baseType: !1369, size: 128, offset: 64)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1370, line: 43, size: 128, elements: !1371)
!1370 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1371 = !{!1372, !1373}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1369, file: !1370, line: 44, baseType: !722)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1369, file: !1370, line: 45, baseType: !139, size: 128)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1079, file: !1080, line: 879, baseType: !646, size: 64, offset: 6848)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1079, file: !1080, line: 882, baseType: !646, size: 64, offset: 6912)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1079, file: !1080, line: 884, baseType: !364, size: 64, offset: 6976)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1079, file: !1080, line: 885, baseType: !364, size: 64, offset: 7040)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1079, file: !1080, line: 890, baseType: !364, size: 64, offset: 7104)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1079, file: !1080, line: 891, baseType: !1380, size: 128, offset: 7168)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1080, line: 242, size: 128, elements: !1381)
!1381 = !{!1382, !1383, !1384}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1380, file: !1080, line: 244, baseType: !364, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1380, file: !1080, line: 245, baseType: !364, size: 64, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1380, file: !1080, line: 246, baseType: !722, offset: 128)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1079, file: !1080, line: 900, baseType: !267, size: 64, offset: 7296)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1079, file: !1080, line: 901, baseType: !267, size: 64, offset: 7360)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1079, file: !1080, line: 904, baseType: !364, size: 64, offset: 7424)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1079, file: !1080, line: 907, baseType: !364, size: 64, offset: 7488)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1079, file: !1080, line: 910, baseType: !267, size: 64, offset: 7552)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1079, file: !1080, line: 911, baseType: !267, size: 64, offset: 7616)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1079, file: !1080, line: 914, baseType: !1392, size: 640, offset: 7680)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1393, line: 123, size: 640, elements: !1394)
!1393 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1394 = !{!1395, !1401, !1402}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1392, file: !1393, line: 124, baseType: !1396, size: 576)
!1396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 576, elements: !218)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1393, line: 108, size: 192, elements: !1398)
!1398 = !{!1399, !1400}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1397, file: !1393, line: 109, baseType: !364, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1397, file: !1393, line: 110, baseType: !1205, size: 128, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1392, file: !1393, line: 125, baseType: !7, size: 32, offset: 576)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1392, file: !1393, line: 126, baseType: !7, size: 32, offset: 608)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1079, file: !1080, line: 917, baseType: !1404, size: 192, offset: 8320)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1393, line: 134, size: 192, elements: !1405)
!1405 = !{!1406, !1407}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1404, file: !1393, line: 135, baseType: !308, size: 128, align: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1404, file: !1393, line: 136, baseType: !7, size: 32, offset: 128)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1079, file: !1080, line: 923, baseType: !1409, size: 64, offset: 8512)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1411)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1412, line: 111, size: 1280, elements: !1413)
!1412 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1413 = !{!1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1433, !1434, !1435, !1436, !1437, !1438, !1545, !1546, !1547, !1548, !1574, !1577, !1587}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1411, file: !1412, line: 112, baseType: !689, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1411, file: !1412, line: 120, baseType: !378, size: 32, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1411, file: !1412, line: 121, baseType: !386, size: 32, offset: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1411, file: !1412, line: 122, baseType: !378, size: 32, offset: 96)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1411, file: !1412, line: 123, baseType: !386, size: 32, offset: 128)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1411, file: !1412, line: 124, baseType: !378, size: 32, offset: 160)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1411, file: !1412, line: 125, baseType: !386, size: 32, offset: 192)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1411, file: !1412, line: 126, baseType: !378, size: 32, offset: 224)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1411, file: !1412, line: 127, baseType: !386, size: 32, offset: 256)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1411, file: !1412, line: 128, baseType: !7, size: 32, offset: 288)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1411, file: !1412, line: 129, baseType: !1425, size: 64, offset: 320)
!1425 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1426, line: 26, baseType: !1427)
!1426 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1426, line: 24, size: 64, elements: !1428)
!1428 = !{!1429}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1427, file: !1426, line: 25, baseType: !1430, size: 64)
!1430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 64, elements: !1431)
!1431 = !{!1432}
!1432 = !DISubrange(count: 2)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1411, file: !1412, line: 130, baseType: !1425, size: 64, offset: 384)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1411, file: !1412, line: 131, baseType: !1425, size: 64, offset: 448)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1411, file: !1412, line: 132, baseType: !1425, size: 64, offset: 512)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1411, file: !1412, line: 133, baseType: !1425, size: 64, offset: 576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1411, file: !1412, line: 135, baseType: !370, size: 8, offset: 640)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1411, file: !1412, line: 137, baseType: !1439, size: 64, offset: 704)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1441, line: 189, size: 1664, elements: !1442)
!1441 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1442 = !{!1443, !1444, !1447, !1452, !1453, !1456, !1457, !1462, !1463, !1464, !1465, !1467, !1468, !1469, !1470, !1471, !1509, !1530}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1440, file: !1441, line: 190, baseType: !1092, size: 32)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1440, file: !1441, line: 191, baseType: !1445, size: 32, offset: 32)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1441, line: 28, baseType: !1446)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !140, line: 98, baseType: !1306)
!1447 = !DIDerivedType(tag: DW_TAG_member, scope: !1440, file: !1441, line: 192, baseType: !1448, size: 192, offset: 64)
!1448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1440, file: !1441, line: 192, size: 192, elements: !1449)
!1449 = !{!1450, !1451}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1448, file: !1441, line: 193, baseType: !139, size: 128)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1448, file: !1441, line: 194, baseType: !702, size: 192, align: 64)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1440, file: !1441, line: 199, baseType: !709, size: 256, offset: 256)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1440, file: !1441, line: 200, baseType: !1454, size: 64, offset: 512)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1455 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1441, line: 200, flags: DIFlagFwdDecl)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1440, file: !1441, line: 201, baseType: !126, size: 64, offset: 576)
!1457 = !DIDerivedType(tag: DW_TAG_member, scope: !1440, file: !1441, line: 202, baseType: !1458, size: 64, offset: 640)
!1458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1440, file: !1441, line: 202, size: 64, elements: !1459)
!1459 = !{!1460, !1461}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1458, file: !1441, line: 203, baseType: !480, size: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1458, file: !1441, line: 204, baseType: !480, size: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1440, file: !1441, line: 206, baseType: !480, size: 64, offset: 704)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1440, file: !1441, line: 207, baseType: !378, size: 32, offset: 768)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1440, file: !1441, line: 208, baseType: !386, size: 32, offset: 800)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1440, file: !1441, line: 209, baseType: !1466, size: 32, offset: 832)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1441, line: 31, baseType: !500)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1440, file: !1441, line: 210, baseType: !259, size: 16, offset: 864)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1440, file: !1441, line: 211, baseType: !259, size: 16, offset: 880)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1440, file: !1441, line: 215, baseType: !1067, size: 16, offset: 896)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1440, file: !1441, line: 222, baseType: !267, size: 64, offset: 960)
!1471 = !DIDerivedType(tag: DW_TAG_member, scope: !1440, file: !1441, line: 239, baseType: !1472, size: 320, offset: 1024)
!1472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1440, file: !1441, line: 239, size: 320, elements: !1473)
!1473 = !{!1474, !1501}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1472, file: !1441, line: 240, baseType: !1475, size: 320)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1441, line: 108, size: 320, elements: !1476)
!1476 = !{!1477, !1478, !1490, !1493, !1500}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1475, file: !1441, line: 110, baseType: !267, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, scope: !1475, file: !1441, line: 111, baseType: !1479, size: 64, offset: 64)
!1479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1475, file: !1441, line: 111, size: 64, elements: !1480)
!1480 = !{!1481, !1489}
!1481 = !DIDerivedType(tag: DW_TAG_member, scope: !1479, file: !1441, line: 112, baseType: !1482, size: 64)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1479, file: !1441, line: 112, size: 64, elements: !1483)
!1483 = !{!1484, !1485}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1482, file: !1441, line: 114, baseType: !801, size: 16)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1482, file: !1441, line: 115, baseType: !1486, size: 48, offset: 16)
!1486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !133, size: 48, elements: !1487)
!1487 = !{!1488}
!1488 = !DISubrange(count: 6)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1479, file: !1441, line: 121, baseType: !267, size: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1475, file: !1441, line: 123, baseType: !1491, size: 64, offset: 128)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!1492 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1441, line: 96, flags: DIFlagFwdDecl)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1475, file: !1441, line: 124, baseType: !1494, size: 64, offset: 192)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1441, line: 102, size: 192, elements: !1496)
!1496 = !{!1497, !1498, !1499}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1495, file: !1441, line: 103, baseType: !308, size: 128, align: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1495, file: !1441, line: 104, baseType: !1092, size: 32, offset: 128)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1495, file: !1441, line: 105, baseType: !157, size: 8, offset: 160)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1475, file: !1441, line: 125, baseType: !131, size: 64, offset: 256)
!1501 = !DIDerivedType(tag: DW_TAG_member, scope: !1472, file: !1441, line: 241, baseType: !1502, size: 320)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1472, file: !1441, line: 241, size: 320, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507, !1508}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1502, file: !1441, line: 242, baseType: !267, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1502, file: !1441, line: 243, baseType: !267, size: 64, offset: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1502, file: !1441, line: 244, baseType: !1491, size: 64, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1502, file: !1441, line: 245, baseType: !1494, size: 64, offset: 192)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1502, file: !1441, line: 246, baseType: !217, size: 64, offset: 256)
!1509 = !DIDerivedType(tag: DW_TAG_member, scope: !1440, file: !1441, line: 254, baseType: !1510, size: 256, offset: 1344)
!1510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1440, file: !1441, line: 254, size: 256, elements: !1511)
!1511 = !{!1512, !1518}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1510, file: !1441, line: 255, baseType: !1513, size: 256)
!1513 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1441, line: 128, size: 256, elements: !1514)
!1514 = !{!1515, !1516}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1513, file: !1441, line: 129, baseType: !126, size: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1513, file: !1441, line: 130, baseType: !1517, size: 256)
!1517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 256, elements: !1017)
!1518 = !DIDerivedType(tag: DW_TAG_member, scope: !1510, file: !1441, line: 256, baseType: !1519, size: 256)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1510, file: !1441, line: 256, size: 256, elements: !1520)
!1520 = !{!1521, !1522}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1519, file: !1441, line: 258, baseType: !139, size: 128)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1519, file: !1441, line: 259, baseType: !1523, size: 128, offset: 128)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1524, line: 22, size: 128, elements: !1525)
!1524 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1525 = !{!1526, !1529}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1523, file: !1524, line: 23, baseType: !1527, size: 64)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1524, line: 23, flags: DIFlagFwdDecl)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1523, file: !1524, line: 24, baseType: !267, size: 64, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1440, file: !1441, line: 274, baseType: !1531, size: 64, offset: 1600)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1441, line: 170, size: 192, elements: !1533)
!1533 = !{!1534, !1543, !1544}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1532, file: !1441, line: 171, baseType: !1535, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1441, line: 165, baseType: !1536)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!149, !1439, !1539, !1541, !1439}
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1492)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1532, file: !1441, line: 172, baseType: !1439, size: 64, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1532, file: !1441, line: 173, baseType: !1491, size: 64, offset: 128)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1411, file: !1412, line: 138, baseType: !1439, size: 64, offset: 768)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1411, file: !1412, line: 139, baseType: !1439, size: 64, offset: 832)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1411, file: !1412, line: 140, baseType: !1439, size: 64, offset: 896)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1411, file: !1412, line: 145, baseType: !1549, size: 64, offset: 960)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1551, line: 13, size: 896, elements: !1552)
!1551 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1552 = !{!1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1550, file: !1551, line: 14, baseType: !1092, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1550, file: !1551, line: 15, baseType: !689, size: 32, offset: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1550, file: !1551, line: 16, baseType: !689, size: 32, offset: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1550, file: !1551, line: 21, baseType: !713, size: 64, offset: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1550, file: !1551, line: 27, baseType: !267, size: 64, offset: 192)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1550, file: !1551, line: 28, baseType: !267, size: 64, offset: 256)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1550, file: !1551, line: 29, baseType: !713, size: 64, offset: 320)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1550, file: !1551, line: 32, baseType: !580, size: 128, offset: 384)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1550, file: !1551, line: 33, baseType: !378, size: 32, offset: 512)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1550, file: !1551, line: 37, baseType: !713, size: 64, offset: 576)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1550, file: !1551, line: 44, baseType: !1564, size: 256, offset: 640)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1565, line: 15, size: 256, elements: !1566)
!1565 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1566 = !{!1567, !1568, !1569, !1570, !1571, !1572, !1573}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1564, file: !1565, line: 16, baseType: !722)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1564, file: !1565, line: 18, baseType: !149, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1564, file: !1565, line: 19, baseType: !149, size: 32, offset: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1564, file: !1565, line: 20, baseType: !149, size: 32, offset: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1564, file: !1565, line: 21, baseType: !149, size: 32, offset: 96)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1564, file: !1565, line: 22, baseType: !267, size: 64, offset: 128)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1564, file: !1565, line: 23, baseType: !267, size: 64, offset: 192)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1411, file: !1412, line: 146, baseType: !1575, size: 64, offset: 1024)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !379, line: 18, flags: DIFlagFwdDecl)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1411, file: !1412, line: 147, baseType: !1578, size: 64, offset: 1088)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1412, line: 25, size: 64, elements: !1580)
!1580 = !{!1581, !1582, !1583}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1579, file: !1412, line: 26, baseType: !689, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1579, file: !1412, line: 27, baseType: !149, size: 32, offset: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1579, file: !1412, line: 28, baseType: !1584, offset: 64)
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !386, elements: !1585)
!1585 = !{!1586}
!1586 = !DISubrange(count: 0)
!1587 = !DIDerivedType(tag: DW_TAG_member, scope: !1411, file: !1412, line: 149, baseType: !1588, size: 128, offset: 1152)
!1588 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1411, file: !1412, line: 149, size: 128, elements: !1589)
!1589 = !{!1590, !1591}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1588, file: !1412, line: 150, baseType: !149, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1588, file: !1412, line: 151, baseType: !308, size: 128, align: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1079, file: !1080, line: 926, baseType: !1409, size: 64, offset: 8576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1079, file: !1080, line: 929, baseType: !1409, size: 64, offset: 8640)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1079, file: !1080, line: 933, baseType: !1439, size: 64, offset: 8704)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1079, file: !1080, line: 943, baseType: !1596, size: 128, offset: 8768)
!1596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !133, size: 128, elements: !1597)
!1597 = !{!1598}
!1598 = !DISubrange(count: 16)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1079, file: !1080, line: 945, baseType: !1600, size: 64, offset: 8896)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1080, line: 49, flags: DIFlagFwdDecl)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1079, file: !1080, line: 956, baseType: !1603, size: 64, offset: 8960)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1080, line: 45, flags: DIFlagFwdDecl)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1079, file: !1080, line: 959, baseType: !1606, size: 64, offset: 9024)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!1607 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1080, line: 959, flags: DIFlagFwdDecl)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1079, file: !1080, line: 962, baseType: !1609, size: 64, offset: 9088)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1080, line: 66, flags: DIFlagFwdDecl)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1079, file: !1080, line: 966, baseType: !1612, size: 64, offset: 9152)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1614, line: 35, flags: DIFlagFwdDecl)
!1614 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1079, file: !1080, line: 969, baseType: !1616, size: 64, offset: 9216)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1618, line: 82, size: 7296, elements: !1619)
!1618 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1619 = !{!1620, !1621, !1622, !1623, !1624, !1625, !1626, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1655, !1664, !1665, !1667, !1668, !1669, !1672, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1702, !1703, !1710, !1711, !1712, !1713, !1714, !1715}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1617, file: !1618, line: 83, baseType: !1092, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1617, file: !1618, line: 84, baseType: !689, size: 32, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1617, file: !1618, line: 85, baseType: !149, size: 32, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1617, file: !1618, line: 86, baseType: !139, size: 128, offset: 128)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1617, file: !1618, line: 88, baseType: !1343, size: 128, offset: 256)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1617, file: !1618, line: 91, baseType: !1078, size: 64, offset: 384)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1617, file: !1618, line: 94, baseType: !1627, size: 192, offset: 448)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1628, line: 30, size: 192, elements: !1629)
!1628 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1629 = !{!1630, !1631}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1627, file: !1628, line: 31, baseType: !139, size: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1627, file: !1628, line: 32, baseType: !1632, size: 64, offset: 128)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1633, line: 25, baseType: !1634)
!1633 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1633, line: 23, size: 64, elements: !1635)
!1635 = !{!1636}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1634, file: !1633, line: 24, baseType: !1232, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1617, file: !1618, line: 97, baseType: !576, size: 64, offset: 640)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1617, file: !1618, line: 100, baseType: !149, size: 32, offset: 704)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1617, file: !1618, line: 106, baseType: !149, size: 32, offset: 736)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1617, file: !1618, line: 107, baseType: !1078, size: 64, offset: 768)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1617, file: !1618, line: 110, baseType: !149, size: 32, offset: 832)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1617, file: !1618, line: 111, baseType: !7, size: 32, offset: 864)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1617, file: !1618, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1617, file: !1618, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1617, file: !1618, line: 128, baseType: !149, size: 32, offset: 928)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1617, file: !1618, line: 129, baseType: !139, size: 128, offset: 960)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1617, file: !1618, line: 132, baseType: !1154, size: 512, offset: 1088)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1617, file: !1618, line: 133, baseType: !1162, size: 64, offset: 1600)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1617, file: !1618, line: 140, baseType: !1650, size: 256, offset: 1664)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1651, size: 256, elements: !1431)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1618, line: 38, size: 128, elements: !1652)
!1652 = !{!1653, !1654}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1651, file: !1618, line: 39, baseType: !364, size: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1651, file: !1618, line: 40, baseType: !364, size: 64, offset: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1617, file: !1618, line: 146, baseType: !1656, size: 192, offset: 1920)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1618, line: 66, size: 192, elements: !1657)
!1657 = !{!1658}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1656, file: !1618, line: 67, baseType: !1659, size: 192)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1618, line: 47, size: 192, elements: !1660)
!1660 = !{!1661, !1662, !1663}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1659, file: !1618, line: 48, baseType: !715, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1659, file: !1618, line: 49, baseType: !715, size: 64, offset: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1659, file: !1618, line: 50, baseType: !715, size: 64, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1617, file: !1618, line: 150, baseType: !1392, size: 640, offset: 2112)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1617, file: !1618, line: 153, baseType: !1666, size: 256, offset: 2752)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1333, size: 256, elements: !1017)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1617, file: !1618, line: 159, baseType: !1333, size: 64, offset: 3008)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1617, file: !1618, line: 162, baseType: !149, size: 32, offset: 3072)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1617, file: !1618, line: 164, baseType: !1670, size: 64, offset: 3136)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1618, line: 164, flags: DIFlagFwdDecl)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1617, file: !1618, line: 175, baseType: !1673, size: 32, offset: 3200)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !331, line: 805, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !331, line: 798, size: 32, elements: !1675)
!1675 = !{!1676, !1677}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1674, file: !331, line: 803, baseType: !330, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1674, file: !331, line: 804, baseType: !176, offset: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1617, file: !1618, line: 176, baseType: !364, size: 64, offset: 3264)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1617, file: !1618, line: 176, baseType: !364, size: 64, offset: 3328)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1617, file: !1618, line: 176, baseType: !364, size: 64, offset: 3392)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1617, file: !1618, line: 176, baseType: !364, size: 64, offset: 3456)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1617, file: !1618, line: 177, baseType: !364, size: 64, offset: 3520)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1617, file: !1618, line: 178, baseType: !364, size: 64, offset: 3584)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1617, file: !1618, line: 179, baseType: !1380, size: 128, offset: 3648)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1617, file: !1618, line: 180, baseType: !267, size: 64, offset: 3776)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1617, file: !1618, line: 180, baseType: !267, size: 64, offset: 3840)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1617, file: !1618, line: 180, baseType: !267, size: 64, offset: 3904)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1617, file: !1618, line: 180, baseType: !267, size: 64, offset: 3968)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1617, file: !1618, line: 181, baseType: !267, size: 64, offset: 4032)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1617, file: !1618, line: 181, baseType: !267, size: 64, offset: 4096)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1617, file: !1618, line: 181, baseType: !267, size: 64, offset: 4160)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1617, file: !1618, line: 181, baseType: !267, size: 64, offset: 4224)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1617, file: !1618, line: 182, baseType: !267, size: 64, offset: 4288)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1617, file: !1618, line: 182, baseType: !267, size: 64, offset: 4352)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1617, file: !1618, line: 182, baseType: !267, size: 64, offset: 4416)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1617, file: !1618, line: 182, baseType: !267, size: 64, offset: 4480)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1617, file: !1618, line: 183, baseType: !267, size: 64, offset: 4544)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1617, file: !1618, line: 183, baseType: !267, size: 64, offset: 4608)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1617, file: !1618, line: 184, baseType: !1700, offset: 4672)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1701, line: 12, elements: !190)
!1701 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1617, file: !1618, line: 192, baseType: !366, size: 64, offset: 4672)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1617, file: !1618, line: 203, baseType: !1704, size: 2048, offset: 4736)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1705, size: 2048, elements: !1597)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1706, line: 43, size: 128, elements: !1707)
!1706 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1707 = !{!1708, !1709}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1705, file: !1706, line: 44, baseType: !266, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1705, file: !1706, line: 45, baseType: !266, size: 64, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1617, file: !1618, line: 220, baseType: !157, size: 8, offset: 6784)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1617, file: !1618, line: 221, baseType: !1067, size: 16, offset: 6800)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1617, file: !1618, line: 222, baseType: !1067, size: 16, offset: 6816)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1617, file: !1618, line: 224, baseType: !916, size: 64, offset: 6848)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1617, file: !1618, line: 227, baseType: !1035, size: 192, offset: 6912)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1617, file: !1618, line: 233, baseType: !1035, size: 192, offset: 7104)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1079, file: !1080, line: 970, baseType: !1717, size: 64, offset: 9280)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1618, line: 20, size: 16576, elements: !1719)
!1719 = !{!1720, !1721, !1722, !1723}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1718, file: !1618, line: 21, baseType: !176)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1718, file: !1618, line: 22, baseType: !1092, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1718, file: !1618, line: 23, baseType: !1343, size: 128, offset: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1718, file: !1618, line: 24, baseType: !1724, size: 16384, offset: 192)
!1724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1725, size: 16384, elements: !222)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1628, line: 49, size: 256, elements: !1726)
!1726 = !{!1727}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1725, file: !1628, line: 50, baseType: !1728, size: 256)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1628, line: 35, size: 256, elements: !1729)
!1729 = !{!1730, !1737, !1738, !1744}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1728, file: !1628, line: 37, baseType: !1731, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1732, line: 19, baseType: !1733)
!1732 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1732, line: 18, baseType: !1735)
!1735 = !DISubroutineType(types: !1736)
!1736 = !{null, !149}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1728, file: !1628, line: 38, baseType: !267, size: 64, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1728, file: !1628, line: 44, baseType: !1739, size: 64, offset: 128)
!1739 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1732, line: 22, baseType: !1740)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1732, line: 21, baseType: !1742)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{null}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1728, file: !1628, line: 46, baseType: !1632, size: 64, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1079, file: !1080, line: 971, baseType: !1632, size: 64, offset: 9344)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1079, file: !1080, line: 972, baseType: !1632, size: 64, offset: 9408)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1079, file: !1080, line: 974, baseType: !1632, size: 64, offset: 9472)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1079, file: !1080, line: 975, baseType: !1627, size: 192, offset: 9536)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1079, file: !1080, line: 976, baseType: !267, size: 64, offset: 9728)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1079, file: !1080, line: 977, baseType: !264, size: 64, offset: 9792)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1079, file: !1080, line: 978, baseType: !7, size: 32, offset: 9856)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1079, file: !1080, line: 980, baseType: !311, size: 64, offset: 9920)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1079, file: !1080, line: 989, baseType: !1754, size: 128, offset: 9984)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1755, line: 35, size: 128, elements: !1756)
!1755 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1756 = !{!1757, !1758, !1759}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1754, file: !1755, line: 36, baseType: !149, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1754, file: !1755, line: 37, baseType: !689, size: 32, offset: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1754, file: !1755, line: 38, baseType: !1760, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!1761 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1755, line: 23, flags: DIFlagFwdDecl)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1079, file: !1080, line: 992, baseType: !364, size: 64, offset: 10112)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1079, file: !1080, line: 993, baseType: !364, size: 64, offset: 10176)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1079, file: !1080, line: 996, baseType: !176, offset: 10240)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1079, file: !1080, line: 999, baseType: !722, offset: 10240)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1079, file: !1080, line: 1001, baseType: !1767, size: 64, offset: 10240)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1080, line: 636, size: 64, elements: !1768)
!1768 = !{!1769}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1767, file: !1080, line: 637, baseType: !1770, size: 64)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1079, file: !1080, line: 1005, baseType: !694, size: 128, offset: 10304)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1079, file: !1080, line: 1007, baseType: !1078, size: 64, offset: 10432)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1079, file: !1080, line: 1009, baseType: !1774, size: 64, offset: 10496)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1080, line: 1009, flags: DIFlagFwdDecl)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1079, file: !1080, line: 1043, baseType: !126, size: 64, offset: 10560)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1079, file: !1080, line: 1046, baseType: !1778, size: 64, offset: 10624)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64)
!1779 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1080, line: 41, flags: DIFlagFwdDecl)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1079, file: !1080, line: 1050, baseType: !1781, size: 64, offset: 10688)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1080, line: 42, flags: DIFlagFwdDecl)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1079, file: !1080, line: 1054, baseType: !1784, size: 64, offset: 10752)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1080, line: 55, flags: DIFlagFwdDecl)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1079, file: !1080, line: 1056, baseType: !1787, size: 64, offset: 10816)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1080, line: 40, flags: DIFlagFwdDecl)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1079, file: !1080, line: 1058, baseType: !1790, size: 64, offset: 10880)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1792, line: 99, size: 704, elements: !1793)
!1792 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1793 = !{!1794, !1795, !1796, !1797, !1798, !1799, !1800, !1819, !1820}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1791, file: !1792, line: 100, baseType: !713, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1791, file: !1792, line: 101, baseType: !689, size: 32, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1791, file: !1792, line: 102, baseType: !689, size: 32, offset: 96)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1791, file: !1792, line: 105, baseType: !176, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1791, file: !1792, line: 107, baseType: !259, size: 16, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1791, file: !1792, line: 109, baseType: !680, size: 128, offset: 192)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1791, file: !1792, line: 110, baseType: !1801, size: 64, offset: 320)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1792, line: 73, size: 448, elements: !1803)
!1803 = !{!1804, !1807, !1808, !1813, !1818}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1802, file: !1792, line: 74, baseType: !1805, size: 64)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1792, line: 74, flags: DIFlagFwdDecl)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1802, file: !1792, line: 75, baseType: !1790, size: 64, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, scope: !1802, file: !1792, line: 83, baseType: !1809, size: 128, offset: 128)
!1809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1802, file: !1792, line: 83, size: 128, elements: !1810)
!1810 = !{!1811, !1812}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1809, file: !1792, line: 84, baseType: !139, size: 128)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1809, file: !1792, line: 85, baseType: !877, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, scope: !1802, file: !1792, line: 87, baseType: !1814, size: 128, offset: 256)
!1814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1802, file: !1792, line: 87, size: 128, elements: !1815)
!1815 = !{!1816, !1817}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1814, file: !1792, line: 88, baseType: !580, size: 128)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1814, file: !1792, line: 89, baseType: !308, size: 128, align: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1802, file: !1792, line: 92, baseType: !7, size: 32, offset: 384)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1791, file: !1792, line: 111, baseType: !576, size: 64, offset: 384)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1791, file: !1792, line: 113, baseType: !1821, size: 256, offset: 448)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1822, line: 102, size: 256, elements: !1823)
!1822 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1823 = !{!1824, !1825, !1826}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1821, file: !1822, line: 103, baseType: !713, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1821, file: !1822, line: 104, baseType: !139, size: 128, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1821, file: !1822, line: 105, baseType: !1827, size: 64, offset: 192)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1822, line: 21, baseType: !1828)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{null, !1831}
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1079, file: !1080, line: 1061, baseType: !1833, size: 64, offset: 10944)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1080, line: 43, flags: DIFlagFwdDecl)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1079, file: !1080, line: 1064, baseType: !267, size: 64, offset: 11008)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1079, file: !1080, line: 1065, baseType: !1837, size: 64, offset: 11072)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1628, line: 14, baseType: !1839)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1628, line: 12, size: 384, elements: !1840)
!1840 = !{!1841}
!1841 = !DIDerivedType(tag: DW_TAG_member, scope: !1839, file: !1628, line: 13, baseType: !1842, size: 384)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1839, file: !1628, line: 13, size: 384, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1842, file: !1628, line: 13, baseType: !149, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1842, file: !1628, line: 13, baseType: !149, size: 32, offset: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1842, file: !1628, line: 13, baseType: !149, size: 32, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1842, file: !1628, line: 13, baseType: !1848, size: 256, offset: 128)
!1848 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1849, line: 32, size: 256, elements: !1850)
!1849 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1850 = !{!1851, !1856, !1869, !1875, !1884, !1904, !1909}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1848, file: !1849, line: 37, baseType: !1852, size: 64)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1848, file: !1849, line: 34, size: 64, elements: !1853)
!1853 = !{!1854, !1855}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1852, file: !1849, line: 35, baseType: !1322, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1852, file: !1849, line: 36, baseType: !384, size: 32, offset: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1848, file: !1849, line: 45, baseType: !1857, size: 192)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1848, file: !1849, line: 40, size: 192, elements: !1858)
!1858 = !{!1859, !1861, !1862, !1868}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1857, file: !1849, line: 41, baseType: !1860, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !250, line: 95, baseType: !149)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1857, file: !1849, line: 42, baseType: !149, size: 32, offset: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1857, file: !1849, line: 43, baseType: !1863, size: 64, offset: 64)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1849, line: 11, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1849, line: 8, size: 64, elements: !1865)
!1865 = !{!1866, !1867}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1864, file: !1849, line: 9, baseType: !149, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1864, file: !1849, line: 10, baseType: !126, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1857, file: !1849, line: 44, baseType: !149, size: 32, offset: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1848, file: !1849, line: 52, baseType: !1870, size: 128)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1848, file: !1849, line: 48, size: 128, elements: !1871)
!1871 = !{!1872, !1873, !1874}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1870, file: !1849, line: 49, baseType: !1322, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1870, file: !1849, line: 50, baseType: !384, size: 32, offset: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1870, file: !1849, line: 51, baseType: !1863, size: 64, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1848, file: !1849, line: 61, baseType: !1876, size: 256)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1848, file: !1849, line: 55, size: 256, elements: !1877)
!1877 = !{!1878, !1879, !1880, !1881, !1883}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1876, file: !1849, line: 56, baseType: !1322, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1876, file: !1849, line: 57, baseType: !384, size: 32, offset: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !1876, file: !1849, line: 58, baseType: !149, size: 32, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !1876, file: !1849, line: 59, baseType: !1882, size: 64, offset: 128)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !250, line: 94, baseType: !251)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !1876, file: !1849, line: 60, baseType: !1882, size: 64, offset: 192)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1848, file: !1849, line: 95, baseType: !1885, size: 256)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1848, file: !1849, line: 64, size: 256, elements: !1886)
!1886 = !{!1887, !1888}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !1885, file: !1849, line: 65, baseType: !126, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, scope: !1885, file: !1849, line: 77, baseType: !1889, size: 192, offset: 64)
!1889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1885, file: !1849, line: 77, size: 192, elements: !1890)
!1890 = !{!1891, !1892, !1899}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !1889, file: !1849, line: 82, baseType: !1067, size: 16)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !1889, file: !1849, line: 88, baseType: !1893, size: 192)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1889, file: !1849, line: 84, size: 192, elements: !1894)
!1894 = !{!1895, !1897, !1898}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !1893, file: !1849, line: 85, baseType: !1896, size: 64)
!1896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !133, size: 64, elements: !1192)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !1893, file: !1849, line: 86, baseType: !126, size: 64, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !1893, file: !1849, line: 87, baseType: !126, size: 64, offset: 128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !1889, file: !1849, line: 93, baseType: !1900, size: 96)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1889, file: !1849, line: 90, size: 96, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !1900, file: !1849, line: 91, baseType: !1896, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !1900, file: !1849, line: 92, baseType: !360, size: 32, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1848, file: !1849, line: 101, baseType: !1905, size: 128)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1848, file: !1849, line: 98, size: 128, elements: !1906)
!1906 = !{!1907, !1908}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !1905, file: !1849, line: 99, baseType: !252, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !1905, file: !1849, line: 100, baseType: !149, size: 32, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1848, file: !1849, line: 108, baseType: !1910, size: 128)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1848, file: !1849, line: 104, size: 128, elements: !1911)
!1911 = !{!1912, !1913, !1914}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !1910, file: !1849, line: 105, baseType: !126, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !1910, file: !1849, line: 106, baseType: !149, size: 32, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !1910, file: !1849, line: 107, baseType: !7, size: 32, offset: 96)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1079, file: !1080, line: 1067, baseType: !1700, offset: 11136)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1079, file: !1080, line: 1099, baseType: !1917, size: 64, offset: 11136)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1080, line: 56, flags: DIFlagFwdDecl)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1079, file: !1080, line: 1103, baseType: !139, size: 128, offset: 11200)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1079, file: !1080, line: 1104, baseType: !1921, size: 64, offset: 11328)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1922 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1080, line: 46, flags: DIFlagFwdDecl)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1079, file: !1080, line: 1105, baseType: !1035, size: 192, offset: 11392)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1079, file: !1080, line: 1106, baseType: !7, size: 32, offset: 11584)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1079, file: !1080, line: 1109, baseType: !1926, size: 128, offset: 11648)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1927, size: 128, elements: !1431)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1080, line: 51, flags: DIFlagFwdDecl)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1079, file: !1080, line: 1110, baseType: !1035, size: 192, offset: 11776)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1079, file: !1080, line: 1111, baseType: !139, size: 128, offset: 11968)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1079, file: !1080, line: 1173, baseType: !1932, size: 64, offset: 12096)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !1934, line: 62, size: 256, align: 256, elements: !1935)
!1934 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!1935 = !{!1936, !1937, !1938, !1943}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !1933, file: !1934, line: 75, baseType: !360, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !1933, file: !1934, line: 90, baseType: !360, size: 32, offset: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !1933, file: !1934, line: 124, baseType: !1939, size: 64, offset: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1933, file: !1934, line: 109, size: 64, elements: !1940)
!1940 = !{!1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !1939, file: !1934, line: 110, baseType: !365, size: 64)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1939, file: !1934, line: 112, baseType: !365, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1933, file: !1934, line: 144, baseType: !360, size: 32, offset: 128)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1079, file: !1080, line: 1174, baseType: !358, size: 32, offset: 12160)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1079, file: !1080, line: 1179, baseType: !267, size: 64, offset: 12224)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1079, file: !1080, line: 1182, baseType: !1947, size: 128, offset: 12288)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1013, line: 76, size: 128, elements: !1948)
!1948 = !{!1949, !1954, !1955}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1947, file: !1013, line: 85, baseType: !1950, size: 64)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !1951, line: 7, size: 64, elements: !1952)
!1951 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!1952 = !{!1953}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !1950, file: !1951, line: 12, baseType: !1229, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !1947, file: !1013, line: 88, baseType: !157, size: 8, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !1947, file: !1013, line: 95, baseType: !157, size: 8, offset: 72)
!1956 = !DIDerivedType(tag: DW_TAG_member, scope: !1079, file: !1080, line: 1184, baseType: !1957, size: 128, offset: 12416)
!1957 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1079, file: !1080, line: 1184, size: 128, elements: !1958)
!1958 = !{!1959, !1960}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !1957, file: !1080, line: 1185, baseType: !1092, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1957, file: !1080, line: 1186, baseType: !308, size: 128, align: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1079, file: !1080, line: 1190, baseType: !1962, size: 64, offset: 12544)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1080, line: 53, flags: DIFlagFwdDecl)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1079, file: !1080, line: 1192, baseType: !1965, size: 128, offset: 12608)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1013, line: 64, size: 128, elements: !1966)
!1966 = !{!1967, !1968, !1969}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1965, file: !1013, line: 65, baseType: !662, size: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1965, file: !1013, line: 67, baseType: !360, size: 32, offset: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1965, file: !1013, line: 68, baseType: !360, size: 32, offset: 96)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1079, file: !1080, line: 1206, baseType: !149, size: 32, offset: 12736)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1079, file: !1080, line: 1207, baseType: !149, size: 32, offset: 12768)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1079, file: !1080, line: 1209, baseType: !267, size: 64, offset: 12800)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1079, file: !1080, line: 1219, baseType: !364, size: 64, offset: 12864)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1079, file: !1080, line: 1220, baseType: !364, size: 64, offset: 12928)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1079, file: !1080, line: 1317, baseType: !149, size: 32, offset: 12992)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1079, file: !1080, line: 1319, baseType: !1078, size: 64, offset: 13056)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1079, file: !1080, line: 1322, baseType: !1978, size: 64, offset: 13120)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !1980, line: 56, size: 512, elements: !1981)
!1980 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!1981 = !{!1982, !1983, !1984, !1985, !1986, !1987, !1988, !1990}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1979, file: !1980, line: 57, baseType: !1978, size: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1979, file: !1980, line: 58, baseType: !126, size: 64, offset: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1979, file: !1980, line: 59, baseType: !267, size: 64, offset: 128)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1979, file: !1980, line: 60, baseType: !267, size: 64, offset: 192)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1979, file: !1980, line: 61, baseType: !762, size: 64, offset: 256)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !1979, file: !1980, line: 62, baseType: !7, size: 32, offset: 320)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !1979, file: !1980, line: 63, baseType: !1989, size: 64, offset: 384)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !140, line: 153, baseType: !364)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !1979, file: !1980, line: 64, baseType: !1991, size: 64, offset: 448)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1079, file: !1080, line: 1326, baseType: !1092, size: 32, offset: 13184)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1079, file: !1080, line: 1342, baseType: !126, size: 64, offset: 13248)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1079, file: !1080, line: 1343, baseType: !365, size: 64, offset: 13312)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1079, file: !1080, line: 1344, baseType: !364, size: 64, offset: 13376)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1079, file: !1080, line: 1345, baseType: !365, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1079, file: !1080, line: 1346, baseType: !365, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1079, file: !1080, line: 1347, baseType: !365, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1079, file: !1080, line: 1348, baseType: !308, size: 128, align: 64, offset: 13504)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1079, file: !1080, line: 1358, baseType: !2002, size: 34816, offset: 13824)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2003, line: 485, size: 34816, elements: !2004)
!2003 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2004 = !{!2005, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2034, !2035, !2036, !2037, !2038, !2039, !2042, !2043, !2044}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2002, file: !2003, line: 487, baseType: !2006, size: 192)
!2006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2007, size: 192, elements: !218)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2008, line: 16, size: 64, elements: !2009)
!2008 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2009 = !{!2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2007, file: !2008, line: 17, baseType: !801, size: 16)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2007, file: !2008, line: 18, baseType: !801, size: 16, offset: 16)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2007, file: !2008, line: 19, baseType: !801, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2007, file: !2008, line: 19, baseType: !801, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2007, file: !2008, line: 19, baseType: !801, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2007, file: !2008, line: 19, baseType: !801, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2007, file: !2008, line: 19, baseType: !801, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2007, file: !2008, line: 20, baseType: !801, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2007, file: !2008, line: 20, baseType: !801, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2007, file: !2008, line: 20, baseType: !801, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2007, file: !2008, line: 20, baseType: !801, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2007, file: !2008, line: 20, baseType: !801, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2007, file: !2008, line: 20, baseType: !801, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2002, file: !2003, line: 491, baseType: !267, size: 64, offset: 192)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2002, file: !2003, line: 495, baseType: !259, size: 16, offset: 256)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2002, file: !2003, line: 496, baseType: !259, size: 16, offset: 272)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2002, file: !2003, line: 497, baseType: !259, size: 16, offset: 288)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2002, file: !2003, line: 498, baseType: !259, size: 16, offset: 304)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2002, file: !2003, line: 502, baseType: !267, size: 64, offset: 320)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2002, file: !2003, line: 503, baseType: !267, size: 64, offset: 384)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2002, file: !2003, line: 514, baseType: !2031, size: 256, offset: 448)
!2031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2032, size: 256, elements: !1017)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2003, line: 483, flags: DIFlagFwdDecl)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2002, file: !2003, line: 516, baseType: !267, size: 64, offset: 704)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2002, file: !2003, line: 518, baseType: !267, size: 64, offset: 768)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2002, file: !2003, line: 520, baseType: !267, size: 64, offset: 832)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2002, file: !2003, line: 521, baseType: !267, size: 64, offset: 896)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2002, file: !2003, line: 522, baseType: !267, size: 64, offset: 960)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2002, file: !2003, line: 528, baseType: !2040, size: 64, offset: 1024)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2003, line: 10, flags: DIFlagFwdDecl)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2002, file: !2003, line: 535, baseType: !267, size: 64, offset: 1088)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2002, file: !2003, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2002, file: !2003, line: 540, baseType: !2045, size: 33280, offset: 1536)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2046, line: 317, size: 33280, elements: !2047)
!2046 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2047 = !{!2048, !2049, !2050}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2045, file: !2046, line: 330, baseType: !7, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2045, file: !2046, line: 337, baseType: !267, size: 64, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2045, file: !2046, line: 348, baseType: !2051, size: 32768, offset: 512)
!2051 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2046, line: 304, size: 32768, elements: !2052)
!2052 = !{!2053, !2068, !2107, !2157, !2170}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2051, file: !2046, line: 305, baseType: !2054, size: 896)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2046, line: 12, size: 896, elements: !2055)
!2055 = !{!2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2067}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2054, file: !2046, line: 13, baseType: !358, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2054, file: !2046, line: 14, baseType: !358, size: 32, offset: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2054, file: !2046, line: 15, baseType: !358, size: 32, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2054, file: !2046, line: 16, baseType: !358, size: 32, offset: 96)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2054, file: !2046, line: 17, baseType: !358, size: 32, offset: 128)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2054, file: !2046, line: 18, baseType: !358, size: 32, offset: 160)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2054, file: !2046, line: 19, baseType: !358, size: 32, offset: 192)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2054, file: !2046, line: 22, baseType: !2064, size: 640, offset: 224)
!2064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 640, elements: !2065)
!2065 = !{!2066}
!2066 = !DISubrange(count: 20)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2054, file: !2046, line: 25, baseType: !358, size: 32, offset: 864)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2051, file: !2046, line: 306, baseType: !2069, size: 4096, align: 128)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2046, line: 34, size: 4096, align: 128, elements: !2070)
!2070 = !{!2071, !2072, !2073, !2074, !2075, !2090, !2091, !2092, !2096, !2098, !2102}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2069, file: !2046, line: 35, baseType: !801, size: 16)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2069, file: !2046, line: 36, baseType: !801, size: 16, offset: 16)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2069, file: !2046, line: 37, baseType: !801, size: 16, offset: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2069, file: !2046, line: 38, baseType: !801, size: 16, offset: 48)
!2075 = !DIDerivedType(tag: DW_TAG_member, scope: !2069, file: !2046, line: 39, baseType: !2076, size: 128, offset: 64)
!2076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2069, file: !2046, line: 39, size: 128, elements: !2077)
!2077 = !{!2078, !2083}
!2078 = !DIDerivedType(tag: DW_TAG_member, scope: !2076, file: !2046, line: 40, baseType: !2079, size: 128)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2076, file: !2046, line: 40, size: 128, elements: !2080)
!2080 = !{!2081, !2082}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2079, file: !2046, line: 41, baseType: !364, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2079, file: !2046, line: 42, baseType: !364, size: 64, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, scope: !2076, file: !2046, line: 44, baseType: !2084, size: 128)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2076, file: !2046, line: 44, size: 128, elements: !2085)
!2085 = !{!2086, !2087, !2088, !2089}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2084, file: !2046, line: 45, baseType: !358, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2084, file: !2046, line: 46, baseType: !358, size: 32, offset: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2084, file: !2046, line: 47, baseType: !358, size: 32, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2084, file: !2046, line: 48, baseType: !358, size: 32, offset: 96)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2069, file: !2046, line: 51, baseType: !358, size: 32, offset: 192)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2069, file: !2046, line: 52, baseType: !358, size: 32, offset: 224)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2069, file: !2046, line: 55, baseType: !2093, size: 1024, offset: 256)
!2093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 1024, elements: !2094)
!2094 = !{!2095}
!2095 = !DISubrange(count: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2069, file: !2046, line: 58, baseType: !2097, size: 2048, offset: 1280)
!2097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 2048, elements: !222)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2069, file: !2046, line: 60, baseType: !2099, size: 384, offset: 3328)
!2099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 384, elements: !2100)
!2100 = !{!2101}
!2101 = !DISubrange(count: 12)
!2102 = !DIDerivedType(tag: DW_TAG_member, scope: !2069, file: !2046, line: 62, baseType: !2103, size: 384, offset: 3712)
!2103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2069, file: !2046, line: 62, size: 384, elements: !2104)
!2104 = !{!2105, !2106}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2103, file: !2046, line: 63, baseType: !2099, size: 384)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2103, file: !2046, line: 64, baseType: !2099, size: 384)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2051, file: !2046, line: 307, baseType: !2108, size: 1088)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2046, line: 79, size: 1088, elements: !2109)
!2109 = !{!2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2156}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2108, file: !2046, line: 80, baseType: !358, size: 32)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2108, file: !2046, line: 81, baseType: !358, size: 32, offset: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2108, file: !2046, line: 82, baseType: !358, size: 32, offset: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2108, file: !2046, line: 83, baseType: !358, size: 32, offset: 96)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2108, file: !2046, line: 84, baseType: !358, size: 32, offset: 128)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2108, file: !2046, line: 85, baseType: !358, size: 32, offset: 160)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2108, file: !2046, line: 86, baseType: !358, size: 32, offset: 192)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2108, file: !2046, line: 88, baseType: !2064, size: 640, offset: 224)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2108, file: !2046, line: 89, baseType: !1214, size: 8, offset: 864)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2108, file: !2046, line: 90, baseType: !1214, size: 8, offset: 872)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2108, file: !2046, line: 91, baseType: !1214, size: 8, offset: 880)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2108, file: !2046, line: 92, baseType: !1214, size: 8, offset: 888)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2108, file: !2046, line: 93, baseType: !1214, size: 8, offset: 896)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2108, file: !2046, line: 94, baseType: !1214, size: 8, offset: 904)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2108, file: !2046, line: 95, baseType: !2125, size: 64, offset: 960)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2127, line: 11, size: 128, elements: !2128)
!2127 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2128 = !{!2129, !2130}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2126, file: !2127, line: 12, baseType: !252, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2126, file: !2127, line: 13, baseType: !2131, size: 64, offset: 64)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2133, line: 56, size: 1344, elements: !2134)
!2133 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2134 = !{!2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2132, file: !2133, line: 61, baseType: !267, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2132, file: !2133, line: 62, baseType: !267, size: 64, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2132, file: !2133, line: 63, baseType: !267, size: 64, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2132, file: !2133, line: 64, baseType: !267, size: 64, offset: 192)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2132, file: !2133, line: 65, baseType: !267, size: 64, offset: 256)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2132, file: !2133, line: 66, baseType: !267, size: 64, offset: 320)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2132, file: !2133, line: 68, baseType: !267, size: 64, offset: 384)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2132, file: !2133, line: 69, baseType: !267, size: 64, offset: 448)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2132, file: !2133, line: 70, baseType: !267, size: 64, offset: 512)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2132, file: !2133, line: 71, baseType: !267, size: 64, offset: 576)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2132, file: !2133, line: 72, baseType: !267, size: 64, offset: 640)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2132, file: !2133, line: 73, baseType: !267, size: 64, offset: 704)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2132, file: !2133, line: 74, baseType: !267, size: 64, offset: 768)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2132, file: !2133, line: 75, baseType: !267, size: 64, offset: 832)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2132, file: !2133, line: 76, baseType: !267, size: 64, offset: 896)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2132, file: !2133, line: 81, baseType: !267, size: 64, offset: 960)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2132, file: !2133, line: 83, baseType: !267, size: 64, offset: 1024)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2132, file: !2133, line: 84, baseType: !267, size: 64, offset: 1088)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2132, file: !2133, line: 85, baseType: !267, size: 64, offset: 1152)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2132, file: !2133, line: 86, baseType: !267, size: 64, offset: 1216)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2132, file: !2133, line: 87, baseType: !267, size: 64, offset: 1280)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2108, file: !2046, line: 96, baseType: !358, size: 32, offset: 1024)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2051, file: !2046, line: 308, baseType: !2158, size: 4608, align: 512)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2046, line: 289, size: 4608, align: 512, elements: !2159)
!2159 = !{!2160, !2161, !2168}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2158, file: !2046, line: 290, baseType: !2069, size: 4096, align: 128)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2158, file: !2046, line: 291, baseType: !2162, size: 512, offset: 4096)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2046, line: 268, size: 512, elements: !2163)
!2163 = !{!2164, !2165, !2166}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2162, file: !2046, line: 269, baseType: !364, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2162, file: !2046, line: 270, baseType: !364, size: 64, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2162, file: !2046, line: 271, baseType: !2167, size: 384, offset: 128)
!2167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 384, elements: !1487)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2158, file: !2046, line: 292, baseType: !2169, offset: 4608)
!2169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1214, elements: !1585)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2051, file: !2046, line: 309, baseType: !2171, size: 32768)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1214, size: 32768, elements: !2172)
!2172 = !{!2173}
!2173 = !DISubrange(count: 4096)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1075, file: !664, line: 378, baseType: !2175, size: 64, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1071, file: !664, line: 384, baseType: !1364, size: 192, offset: 192)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !920, file: !664, line: 500, baseType: !176, offset: 6656)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !920, file: !664, line: 501, baseType: !2179, size: 64, offset: 6656)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !664, line: 387, flags: DIFlagFwdDecl)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !920, file: !664, line: 516, baseType: !1575, size: 64, offset: 6720)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !920, file: !664, line: 519, baseType: !295, size: 64, offset: 6784)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !920, file: !664, line: 521, baseType: !2184, size: 64, offset: 6848)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !664, line: 521, flags: DIFlagFwdDecl)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !920, file: !664, line: 545, baseType: !689, size: 32, offset: 6912)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !920, file: !664, line: 548, baseType: !157, size: 8, offset: 6944)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !920, file: !664, line: 550, baseType: !2189, offset: 6952)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2190, line: 142, elements: !190)
!2190 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !920, file: !664, line: 554, baseType: !1821, size: 256, offset: 6976)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !920, file: !664, line: 557, baseType: !358, size: 32, offset: 7232)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !917, file: !664, line: 565, baseType: !2194, offset: 7296)
!2194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, elements: !2195)
!2195 = !{!2196}
!2196 = !DISubrange(count: -1)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !913, file: !664, line: 151, baseType: !689, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !906, file: !664, line: 156, baseType: !176, offset: 256)
!2199 = !DIDerivedType(tag: DW_TAG_member, scope: !668, file: !664, line: 159, baseType: !2200, size: 128)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !668, file: !664, line: 159, size: 128, elements: !2201)
!2201 = !{!2202, !2205}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2200, file: !664, line: 161, baseType: !2203, size: 64)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !664, line: 161, flags: DIFlagFwdDecl)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2200, file: !664, line: 162, baseType: !126, size: 64, offset: 64)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !668, file: !664, line: 176, baseType: !308, size: 128, align: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, scope: !663, file: !664, line: 179, baseType: !2208, size: 32, offset: 384)
!2208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !663, file: !664, line: 179, size: 32, elements: !2209)
!2209 = !{!2210, !2211, !2212, !2213}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2208, file: !664, line: 184, baseType: !689, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2208, file: !664, line: 192, baseType: !7, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2208, file: !664, line: 194, baseType: !7, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2208, file: !664, line: 195, baseType: !149, size: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !663, file: !664, line: 199, baseType: !689, size: 32, offset: 416)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !598, file: !31, line: 1964, baseType: !2216, size: 64, offset: 1344)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{!252, !540, !2219}
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2221, line: 12, size: 256, elements: !2222)
!2221 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2222 = !{!2223, !2224, !2225, !2226, !2227}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2220, file: !2221, line: 13, baseType: !685, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2220, file: !2221, line: 16, baseType: !149, size: 32, offset: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2220, file: !2221, line: 23, baseType: !267, size: 64, offset: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2220, file: !2221, line: 30, baseType: !267, size: 64, offset: 128)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2220, file: !2221, line: 33, baseType: !2228, size: 64, offset: 192)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!2229 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !664, line: 27, flags: DIFlagFwdDecl)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !598, file: !31, line: 1966, baseType: !2216, size: 64, offset: 1408)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !541, file: !31, line: 1424, baseType: !2232, size: 64, offset: 448)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2234)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !25, line: 322, size: 704, elements: !2235)
!2235 = !{!2236, !2282, !2286, !2290, !2291, !2292, !2293, !2294, !2299, !2304, !2308}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2234, file: !25, line: 323, baseType: !2237, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64)
!2238 = !DISubroutineType(types: !2239)
!2239 = !{!149, !2240}
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !25, line: 294, size: 1600, elements: !2242)
!2242 = !{!2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2267, !2268, !2269}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2241, file: !25, line: 295, baseType: !580, size: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2241, file: !25, line: 296, baseType: !139, size: 128, offset: 128)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2241, file: !25, line: 297, baseType: !139, size: 128, offset: 256)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2241, file: !25, line: 298, baseType: !139, size: 128, offset: 384)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2241, file: !25, line: 299, baseType: !1035, size: 192, offset: 512)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2241, file: !25, line: 300, baseType: !176, offset: 704)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2241, file: !25, line: 301, baseType: !689, size: 32, offset: 704)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2241, file: !25, line: 302, baseType: !540, size: 64, offset: 768)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2241, file: !25, line: 303, baseType: !2252, size: 64, offset: 832)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !25, line: 68, size: 64, elements: !2253)
!2253 = !{!2254, !2266}
!2254 = !DIDerivedType(tag: DW_TAG_member, scope: !2252, file: !25, line: 69, baseType: !2255, size: 32)
!2255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2252, file: !25, line: 69, size: 32, elements: !2256)
!2256 = !{!2257, !2258, !2259}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2255, file: !25, line: 70, baseType: !378, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2255, file: !25, line: 71, baseType: !386, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2255, file: !25, line: 72, baseType: !2260, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2261, line: 24, baseType: !2262)
!2261 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2261, line: 22, size: 32, elements: !2263)
!2263 = !{!2264}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2262, file: !2261, line: 23, baseType: !2265, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2261, line: 20, baseType: !384)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2252, file: !25, line: 74, baseType: !24, size: 32, offset: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2241, file: !25, line: 304, baseType: !472, size: 64, offset: 896)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2241, file: !25, line: 305, baseType: !267, size: 64, offset: 960)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2241, file: !25, line: 306, baseType: !2270, size: 576, offset: 1024)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !25, line: 205, size: 576, elements: !2271)
!2271 = !{!2272, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2270, file: !25, line: 206, baseType: !2273, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !25, line: 66, baseType: !474)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2270, file: !25, line: 207, baseType: !2273, size: 64, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2270, file: !25, line: 208, baseType: !2273, size: 64, offset: 128)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2270, file: !25, line: 209, baseType: !2273, size: 64, offset: 192)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2270, file: !25, line: 210, baseType: !2273, size: 64, offset: 256)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2270, file: !25, line: 211, baseType: !2273, size: 64, offset: 320)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2270, file: !25, line: 212, baseType: !2273, size: 64, offset: 384)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2270, file: !25, line: 213, baseType: !480, size: 64, offset: 448)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2270, file: !25, line: 214, baseType: !480, size: 64, offset: 512)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2234, file: !25, line: 324, baseType: !2283, size: 64, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 64)
!2284 = !DISubroutineType(types: !2285)
!2285 = !{!2240, !540, !149}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2234, file: !25, line: 325, baseType: !2287, size: 64, offset: 128)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{null, !2240}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2234, file: !25, line: 326, baseType: !2237, size: 64, offset: 192)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2234, file: !25, line: 327, baseType: !2237, size: 64, offset: 256)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2234, file: !25, line: 328, baseType: !2237, size: 64, offset: 320)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2234, file: !25, line: 329, baseType: !626, size: 64, offset: 384)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2234, file: !25, line: 332, baseType: !2295, size: 64, offset: 448)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{!2298, !372}
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2234, file: !25, line: 333, baseType: !2300, size: 64, offset: 512)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{!149, !372, !2303}
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2234, file: !25, line: 335, baseType: !2305, size: 64, offset: 576)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2306 = !DISubroutineType(types: !2307)
!2307 = !{!149, !372, !2298}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2234, file: !25, line: 337, baseType: !2309, size: 64, offset: 640)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{!149, !540, !2312}
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !541, file: !31, line: 1425, baseType: !2314, size: 64, offset: 512)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2316)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !25, line: 428, size: 704, elements: !2317)
!2317 = !{!2318, !2322, !2323, !2327, !2328, !2329, !2344, !2367, !2371, !2372, !2395}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2316, file: !25, line: 429, baseType: !2319, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{!149, !540, !149, !149, !490}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2316, file: !25, line: 430, baseType: !626, size: 64, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2316, file: !25, line: 431, baseType: !2324, size: 64, offset: 128)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{!149, !540, !7}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2316, file: !25, line: 432, baseType: !2324, size: 64, offset: 192)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2316, file: !25, line: 433, baseType: !626, size: 64, offset: 256)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2316, file: !25, line: 434, baseType: !2330, size: 64, offset: 320)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2331 = !DISubroutineType(types: !2332)
!2332 = !{!149, !540, !149, !2333}
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !25, line: 415, size: 256, elements: !2335)
!2335 = !{!2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2334, file: !25, line: 416, baseType: !149, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2334, file: !25, line: 417, baseType: !7, size: 32, offset: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2334, file: !25, line: 418, baseType: !7, size: 32, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2334, file: !25, line: 420, baseType: !7, size: 32, offset: 96)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2334, file: !25, line: 421, baseType: !7, size: 32, offset: 128)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2334, file: !25, line: 422, baseType: !7, size: 32, offset: 160)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2334, file: !25, line: 423, baseType: !7, size: 32, offset: 192)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2334, file: !25, line: 424, baseType: !7, size: 32, offset: 224)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2316, file: !25, line: 435, baseType: !2345, size: 64, offset: 384)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64)
!2346 = !DISubroutineType(types: !2347)
!2347 = !{!149, !540, !2252, !2348}
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !25, line: 343, size: 960, elements: !2350)
!2350 = !{!2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2349, file: !25, line: 344, baseType: !149, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2349, file: !25, line: 345, baseType: !364, size: 64, offset: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2349, file: !25, line: 346, baseType: !364, size: 64, offset: 128)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2349, file: !25, line: 347, baseType: !364, size: 64, offset: 192)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2349, file: !25, line: 348, baseType: !364, size: 64, offset: 256)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2349, file: !25, line: 349, baseType: !364, size: 64, offset: 320)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2349, file: !25, line: 350, baseType: !364, size: 64, offset: 384)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2349, file: !25, line: 351, baseType: !719, size: 64, offset: 448)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2349, file: !25, line: 353, baseType: !719, size: 64, offset: 512)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2349, file: !25, line: 354, baseType: !149, size: 32, offset: 576)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2349, file: !25, line: 355, baseType: !149, size: 32, offset: 608)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2349, file: !25, line: 356, baseType: !364, size: 64, offset: 640)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2349, file: !25, line: 357, baseType: !364, size: 64, offset: 704)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2349, file: !25, line: 358, baseType: !364, size: 64, offset: 768)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2349, file: !25, line: 359, baseType: !719, size: 64, offset: 832)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2349, file: !25, line: 360, baseType: !149, size: 32, offset: 896)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2316, file: !25, line: 436, baseType: !2368, size: 64, offset: 448)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = !DISubroutineType(types: !2370)
!2370 = !{!149, !540, !2312, !2348}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2316, file: !25, line: 438, baseType: !2345, size: 64, offset: 512)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2316, file: !25, line: 439, baseType: !2373, size: 64, offset: 576)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!149, !540, !2376}
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !25, line: 409, size: 1408, elements: !2378)
!2378 = !{!2379, !2380}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2377, file: !25, line: 410, baseType: !7, size: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2377, file: !25, line: 411, baseType: !2381, size: 1344, offset: 64)
!2381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2382, size: 1344, elements: !218)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !25, line: 395, size: 448, elements: !2383)
!2383 = !{!2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2394}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2382, file: !25, line: 396, baseType: !7, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2382, file: !25, line: 397, baseType: !7, size: 32, offset: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2382, file: !25, line: 399, baseType: !7, size: 32, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2382, file: !25, line: 400, baseType: !7, size: 32, offset: 96)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2382, file: !25, line: 401, baseType: !7, size: 32, offset: 128)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2382, file: !25, line: 402, baseType: !7, size: 32, offset: 160)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2382, file: !25, line: 403, baseType: !7, size: 32, offset: 192)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2382, file: !25, line: 404, baseType: !366, size: 64, offset: 256)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2382, file: !25, line: 405, baseType: !2393, size: 64, offset: 320)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !140, line: 126, baseType: !364)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2382, file: !25, line: 406, baseType: !2393, size: 64, offset: 384)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2316, file: !25, line: 440, baseType: !2324, size: 64, offset: 640)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !541, file: !31, line: 1426, baseType: !2397, size: 64, offset: 576)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2399)
!2399 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !31, line: 49, flags: DIFlagFwdDecl)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !541, file: !31, line: 1427, baseType: !267, size: 64, offset: 640)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !541, file: !31, line: 1428, baseType: !267, size: 64, offset: 704)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !541, file: !31, line: 1429, baseType: !267, size: 64, offset: 768)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !541, file: !31, line: 1430, baseType: !325, size: 64, offset: 832)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !541, file: !31, line: 1431, baseType: !709, size: 256, offset: 896)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !541, file: !31, line: 1432, baseType: !149, size: 32, offset: 1152)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !541, file: !31, line: 1433, baseType: !689, size: 32, offset: 1184)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !541, file: !31, line: 1437, baseType: !2408, size: 64, offset: 1216)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2411)
!2411 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !31, line: 1437, flags: DIFlagFwdDecl)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !541, file: !31, line: 1449, baseType: !2413, size: 64, offset: 1280)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !341, line: 34, size: 64, elements: !2414)
!2414 = !{!2415}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2413, file: !341, line: 35, baseType: !344, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !541, file: !31, line: 1450, baseType: !139, size: 128, offset: 1344)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !541, file: !31, line: 1451, baseType: !2418, size: 64, offset: 1472)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 64)
!2419 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !31, line: 699, flags: DIFlagFwdDecl)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !541, file: !31, line: 1452, baseType: !1787, size: 64, offset: 1536)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !541, file: !31, line: 1453, baseType: !2422, size: 64, offset: 1600)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2423 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !31, line: 1453, flags: DIFlagFwdDecl)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !541, file: !31, line: 1454, baseType: !580, size: 128, offset: 1664)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !541, file: !31, line: 1455, baseType: !7, size: 32, offset: 1792)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !541, file: !31, line: 1456, baseType: !2427, size: 2432, offset: 1856)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !25, line: 518, size: 2432, elements: !2428)
!2428 = !{!2429, !2430, !2431, !2433, !2465}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2427, file: !25, line: 519, baseType: !7, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2427, file: !25, line: 520, baseType: !709, size: 256, offset: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2427, file: !25, line: 521, baseType: !2432, size: 192, offset: 320)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 192, elements: !218)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2427, file: !25, line: 522, baseType: !2434, size: 1728, offset: 512)
!2434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2435, size: 1728, elements: !218)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !25, line: 222, size: 576, elements: !2436)
!2436 = !{!2437, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2435, file: !25, line: 223, baseType: !2438, size: 64)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 64)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !25, line: 443, size: 256, elements: !2440)
!2440 = !{!2441, !2442, !2455, !2456}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2439, file: !25, line: 444, baseType: !149, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2439, file: !25, line: 445, baseType: !2443, size: 64, offset: 64)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2445)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !25, line: 310, size: 512, elements: !2446)
!2446 = !{!2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2445, file: !25, line: 311, baseType: !626, size: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2445, file: !25, line: 312, baseType: !626, size: 64, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2445, file: !25, line: 313, baseType: !626, size: 64, offset: 128)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2445, file: !25, line: 314, baseType: !626, size: 64, offset: 192)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2445, file: !25, line: 315, baseType: !2237, size: 64, offset: 256)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2445, file: !25, line: 316, baseType: !2237, size: 64, offset: 320)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2445, file: !25, line: 317, baseType: !2237, size: 64, offset: 384)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2445, file: !25, line: 318, baseType: !2309, size: 64, offset: 448)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2439, file: !25, line: 446, baseType: !135, size: 64, offset: 128)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2439, file: !25, line: 447, baseType: !2438, size: 64, offset: 192)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2435, file: !25, line: 224, baseType: !149, size: 32, offset: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2435, file: !25, line: 226, baseType: !139, size: 128, offset: 128)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2435, file: !25, line: 227, baseType: !267, size: 64, offset: 256)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2435, file: !25, line: 228, baseType: !7, size: 32, offset: 320)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2435, file: !25, line: 229, baseType: !7, size: 32, offset: 352)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2435, file: !25, line: 230, baseType: !2273, size: 64, offset: 384)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2435, file: !25, line: 231, baseType: !2273, size: 64, offset: 448)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2435, file: !25, line: 232, baseType: !126, size: 64, offset: 512)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2427, file: !25, line: 523, baseType: !2466, size: 192, offset: 2240)
!2466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2443, size: 192, elements: !218)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !541, file: !31, line: 1458, baseType: !2468, size: 2112, offset: 4288)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !31, line: 1410, size: 2112, elements: !2469)
!2469 = !{!2470, !2471, !2472}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2468, file: !31, line: 1411, baseType: !149, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2468, file: !31, line: 1412, baseType: !1343, size: 128, offset: 64)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2468, file: !31, line: 1413, baseType: !2473, size: 1920, offset: 192)
!2473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2474, size: 1920, elements: !218)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2475, line: 12, size: 640, elements: !2476)
!2475 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2476 = !{!2477, !2485, !2487, !2492, !2493}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2474, file: !2475, line: 13, baseType: !2478, size: 320)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2479, line: 17, size: 320, elements: !2480)
!2479 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2480 = !{!2481, !2482, !2483, !2484}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2478, file: !2479, line: 18, baseType: !149, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2478, file: !2479, line: 19, baseType: !149, size: 32, offset: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2478, file: !2479, line: 20, baseType: !1343, size: 128, offset: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2478, file: !2479, line: 22, baseType: !308, size: 128, align: 64, offset: 192)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2474, file: !2475, line: 14, baseType: !2486, size: 64, offset: 320)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2474, file: !2475, line: 15, baseType: !2488, size: 64, offset: 384)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2489, line: 16, size: 64, elements: !2490)
!2489 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2490 = !{!2491}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2488, file: !2489, line: 17, baseType: !1078, size: 64)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2474, file: !2475, line: 16, baseType: !1343, size: 128, offset: 448)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2474, file: !2475, line: 17, baseType: !689, size: 32, offset: 576)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !541, file: !31, line: 1465, baseType: !126, size: 64, offset: 6400)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !541, file: !31, line: 1468, baseType: !358, size: 32, offset: 6464)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !541, file: !31, line: 1470, baseType: !480, size: 64, offset: 6528)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !541, file: !31, line: 1471, baseType: !480, size: 64, offset: 6592)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !541, file: !31, line: 1473, baseType: !360, size: 32, offset: 6656)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !541, file: !31, line: 1474, baseType: !2500, size: 64, offset: 6720)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !31, line: 603, flags: DIFlagFwdDecl)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !541, file: !31, line: 1477, baseType: !2503, size: 256, offset: 6784)
!2503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !133, size: 256, elements: !2094)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !541, file: !31, line: 1478, baseType: !2505, size: 128, offset: 7040)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2506, line: 18, baseType: !2507)
!2506 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2506, line: 16, size: 128, elements: !2508)
!2508 = !{!2509}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2507, file: !2506, line: 17, baseType: !2510, size: 128)
!2510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 128, elements: !1597)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !541, file: !31, line: 1480, baseType: !7, size: 32, offset: 7168)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !541, file: !31, line: 1481, baseType: !2513, size: 32, offset: 7200)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !140, line: 150, baseType: !7)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !541, file: !31, line: 1487, baseType: !1035, size: 192, offset: 7232)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !541, file: !31, line: 1493, baseType: !131, size: 64, offset: 7424)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !541, file: !31, line: 1495, baseType: !2517, size: 64, offset: 7488)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2519)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !323, line: 135, size: 1024, align: 512, elements: !2520)
!2520 = !{!2521, !2525, !2526, !2533, !2539, !2543, !2547, !2551, !2552, !2556, !2560, !2565, !2569}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2519, file: !323, line: 136, baseType: !2522, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{!149, !325, !7}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2519, file: !323, line: 137, baseType: !2522, size: 64, offset: 64)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2519, file: !323, line: 138, baseType: !2527, size: 64, offset: 128)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{!149, !2530, !2532}
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2519, file: !323, line: 139, baseType: !2534, size: 64, offset: 192)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64)
!2535 = !DISubroutineType(types: !2536)
!2536 = !{!149, !2530, !7, !131, !2537}
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64)
!2538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !349)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2519, file: !323, line: 141, baseType: !2540, size: 64, offset: 256)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{!149, !2530}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2519, file: !323, line: 142, baseType: !2544, size: 64, offset: 320)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 64)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{!149, !325}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2519, file: !323, line: 143, baseType: !2548, size: 64, offset: 384)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 64)
!2549 = !DISubroutineType(types: !2550)
!2550 = !{null, !325}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2519, file: !323, line: 144, baseType: !2548, size: 64, offset: 448)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2519, file: !323, line: 145, baseType: !2553, size: 64, offset: 512)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 64)
!2554 = !DISubroutineType(types: !2555)
!2555 = !{null, !325, !372}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2519, file: !323, line: 146, baseType: !2557, size: 64, offset: 576)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!217, !325, !217, !149}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2519, file: !323, line: 147, baseType: !2561, size: 64, offset: 640)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!2562 = !DISubroutineType(types: !2563)
!2563 = !{!321, !2564}
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2519, file: !323, line: 148, baseType: !2566, size: 64, offset: 704)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{!149, !490, !157}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2519, file: !323, line: 149, baseType: !2570, size: 64, offset: 768)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = !DISubroutineType(types: !2572)
!2572 = !{!325, !325, !2573}
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !541, file: !31, line: 1500, baseType: !149, size: 32, offset: 7552)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !541, file: !31, line: 1502, baseType: !2577, size: 448, offset: 7616)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2221, line: 60, size: 448, elements: !2578)
!2578 = !{!2579, !2584, !2585, !2586, !2587, !2588, !2589}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2577, file: !2221, line: 61, baseType: !2580, size: 64)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = !DISubroutineType(types: !2582)
!2582 = !{!267, !2583, !2219}
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2577, file: !2221, line: 63, baseType: !2580, size: 64, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2577, file: !2221, line: 66, baseType: !252, size: 64, offset: 128)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2577, file: !2221, line: 67, baseType: !149, size: 32, offset: 192)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2577, file: !2221, line: 68, baseType: !7, size: 32, offset: 224)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2577, file: !2221, line: 71, baseType: !139, size: 128, offset: 256)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2577, file: !2221, line: 77, baseType: !2590, size: 64, offset: 384)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !541, file: !31, line: 1505, baseType: !713, size: 64, offset: 8064)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !541, file: !31, line: 1508, baseType: !713, size: 64, offset: 8128)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !541, file: !31, line: 1511, baseType: !149, size: 32, offset: 8192)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !541, file: !31, line: 1514, baseType: !851, size: 32, offset: 8224)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !541, file: !31, line: 1517, baseType: !2596, size: 64, offset: 8256)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1822, line: 18, flags: DIFlagFwdDecl)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !541, file: !31, line: 1518, baseType: !576, size: 64, offset: 8320)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !541, file: !31, line: 1525, baseType: !1575, size: 64, offset: 8384)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !541, file: !31, line: 1532, baseType: !2601, size: 64, offset: 8448)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2602, line: 52, size: 64, elements: !2603)
!2602 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2603 = !{!2604}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2601, file: !2602, line: 53, baseType: !2605, size: 64)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2602, line: 40, size: 256, elements: !2607)
!2607 = !{!2608, !2609, !2614}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2606, file: !2602, line: 42, baseType: !176)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2606, file: !2602, line: 44, baseType: !2610, size: 192)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2602, line: 28, size: 192, elements: !2611)
!2611 = !{!2612, !2613}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2610, file: !2602, line: 29, baseType: !139, size: 128)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2610, file: !2602, line: 31, baseType: !252, size: 64, offset: 128)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2606, file: !2602, line: 49, baseType: !252, size: 64, offset: 192)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !541, file: !31, line: 1533, baseType: !2601, size: 64, offset: 8512)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !541, file: !31, line: 1534, baseType: !308, size: 128, align: 64, offset: 8576)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !541, file: !31, line: 1535, baseType: !1821, size: 256, offset: 8704)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !541, file: !31, line: 1537, baseType: !1035, size: 192, offset: 8960)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !541, file: !31, line: 1542, baseType: !149, size: 32, offset: 9152)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !541, file: !31, line: 1545, baseType: !176, offset: 9184)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !541, file: !31, line: 1546, baseType: !139, size: 128, offset: 9216)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !541, file: !31, line: 1548, baseType: !176, offset: 9344)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !541, file: !31, line: 1549, baseType: !139, size: 128, offset: 9344)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !373, file: !31, line: 624, baseType: !675, size: 64, offset: 256)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !373, file: !31, line: 631, baseType: !267, size: 64, offset: 320)
!2626 = !DIDerivedType(tag: DW_TAG_member, scope: !373, file: !31, line: 639, baseType: !2627, size: 32, offset: 384)
!2627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !373, file: !31, line: 639, size: 32, elements: !2628)
!2628 = !{!2629, !2631}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2627, file: !31, line: 640, baseType: !2630, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2627, file: !31, line: 641, baseType: !7, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !373, file: !31, line: 643, baseType: !454, size: 32, offset: 416)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !373, file: !31, line: 644, baseType: !472, size: 64, offset: 448)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !373, file: !31, line: 645, baseType: !476, size: 128, offset: 512)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !373, file: !31, line: 646, baseType: !476, size: 128, offset: 640)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !373, file: !31, line: 647, baseType: !476, size: 128, offset: 768)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !373, file: !31, line: 648, baseType: !176, offset: 896)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !373, file: !31, line: 649, baseType: !259, size: 16, offset: 896)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !373, file: !31, line: 650, baseType: !1214, size: 8, offset: 912)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !373, file: !31, line: 651, baseType: !1214, size: 8, offset: 920)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !373, file: !31, line: 652, baseType: !2393, size: 64, offset: 960)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !373, file: !31, line: 659, baseType: !267, size: 64, offset: 1024)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !373, file: !31, line: 660, baseType: !709, size: 256, offset: 1088)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !373, file: !31, line: 662, baseType: !267, size: 64, offset: 1344)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !373, file: !31, line: 663, baseType: !267, size: 64, offset: 1408)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !373, file: !31, line: 665, baseType: !580, size: 128, offset: 1472)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !373, file: !31, line: 666, baseType: !139, size: 128, offset: 1600)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !373, file: !31, line: 675, baseType: !139, size: 128, offset: 1728)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !373, file: !31, line: 676, baseType: !139, size: 128, offset: 1856)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !373, file: !31, line: 677, baseType: !139, size: 128, offset: 1984)
!2651 = !DIDerivedType(tag: DW_TAG_member, scope: !373, file: !31, line: 678, baseType: !2652, size: 128, offset: 2112)
!2652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !373, file: !31, line: 678, size: 128, elements: !2653)
!2653 = !{!2654, !2655}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2652, file: !31, line: 679, baseType: !576, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2652, file: !31, line: 680, baseType: !308, size: 128, align: 64)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !373, file: !31, line: 682, baseType: !715, size: 64, offset: 2240)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !373, file: !31, line: 683, baseType: !715, size: 64, offset: 2304)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !373, file: !31, line: 684, baseType: !689, size: 32, offset: 2368)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !373, file: !31, line: 685, baseType: !689, size: 32, offset: 2400)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !373, file: !31, line: 686, baseType: !689, size: 32, offset: 2432)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !373, file: !31, line: 688, baseType: !689, size: 32, offset: 2464)
!2662 = !DIDerivedType(tag: DW_TAG_member, scope: !373, file: !31, line: 690, baseType: !2663, size: 64, offset: 2496)
!2663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !373, file: !31, line: 690, size: 64, elements: !2664)
!2664 = !{!2665, !2888}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2663, file: !31, line: 691, baseType: !2666, size: 64)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2668)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !31, line: 1822, size: 2048, elements: !2669)
!2669 = !{!2670, !2671, !2675, !2680, !2684, !2685, !2686, !2690, !2703, !2704, !2712, !2716, !2717, !2721, !2722, !2726, !2731, !2732, !2736, !2740, !2848, !2852, !2853, !2857, !2858, !2862, !2866, !2871, !2875, !2879, !2883, !2887}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2668, file: !31, line: 1823, baseType: !135, size: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2668, file: !31, line: 1824, baseType: !2672, size: 64, offset: 64)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = !DISubroutineType(types: !2674)
!2674 = !{!472, !295, !472, !149}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2668, file: !31, line: 1825, baseType: !2676, size: 64, offset: 128)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2677 = !DISubroutineType(types: !2678)
!2678 = !{!248, !295, !217, !264, !2679}
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2668, file: !31, line: 1826, baseType: !2681, size: 64, offset: 192)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{!248, !295, !131, !264, !2679}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2668, file: !31, line: 1827, baseType: !786, size: 64, offset: 256)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2668, file: !31, line: 1828, baseType: !786, size: 64, offset: 320)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2668, file: !31, line: 1829, baseType: !2687, size: 64, offset: 384)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DISubroutineType(types: !2689)
!2689 = !{!149, !789, !157}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2668, file: !31, line: 1830, baseType: !2691, size: 64, offset: 448)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = !DISubroutineType(types: !2693)
!2693 = !{!149, !295, !2694}
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !31, line: 1776, size: 128, elements: !2696)
!2696 = !{!2697, !2702}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2695, file: !31, line: 1777, baseType: !2698, size: 64)
!2698 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !31, line: 1773, baseType: !2699)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2700 = !DISubroutineType(types: !2701)
!2701 = !{!149, !2694, !131, !149, !472, !364, !7}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2695, file: !31, line: 1778, baseType: !472, size: 64, offset: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2668, file: !31, line: 1831, baseType: !2691, size: 64, offset: 512)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2668, file: !31, line: 1832, baseType: !2705, size: 64, offset: 576)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{!2708, !295, !2710}
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2709, line: 52, baseType: !7)
!2709 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!2711 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !560, line: 27, flags: DIFlagFwdDecl)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2668, file: !31, line: 1833, baseType: !2713, size: 64, offset: 640)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 64)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{!252, !295, !7, !267}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2668, file: !31, line: 1834, baseType: !2713, size: 64, offset: 704)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2668, file: !31, line: 1835, baseType: !2718, size: 64, offset: 768)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{!149, !295, !923}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2668, file: !31, line: 1836, baseType: !267, size: 64, offset: 832)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2668, file: !31, line: 1837, baseType: !2723, size: 64, offset: 896)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!149, !372, !295}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2668, file: !31, line: 1838, baseType: !2727, size: 64, offset: 960)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!149, !295, !2730}
!2730 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !31, line: 1007, baseType: !126)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2668, file: !31, line: 1839, baseType: !2723, size: 64, offset: 1024)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2668, file: !31, line: 1840, baseType: !2733, size: 64, offset: 1088)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = !DISubroutineType(types: !2735)
!2735 = !{!149, !295, !472, !472, !149}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2668, file: !31, line: 1841, baseType: !2737, size: 64, offset: 1152)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = !DISubroutineType(types: !2739)
!2739 = !{!149, !149, !295, !149}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2668, file: !31, line: 1842, baseType: !2741, size: 64, offset: 1216)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{!149, !295, !149, !2744}
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !31, line: 1062, size: 1664, elements: !2746)
!2746 = !{!2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2778, !2779, !2780, !2793, !2824}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2745, file: !31, line: 1063, baseType: !2744, size: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2745, file: !31, line: 1064, baseType: !139, size: 128, offset: 64)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2745, file: !31, line: 1065, baseType: !580, size: 128, offset: 192)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2745, file: !31, line: 1066, baseType: !139, size: 128, offset: 320)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2745, file: !31, line: 1069, baseType: !139, size: 128, offset: 448)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2745, file: !31, line: 1072, baseType: !2730, size: 64, offset: 576)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2745, file: !31, line: 1073, baseType: !7, size: 32, offset: 640)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2745, file: !31, line: 1074, baseType: !370, size: 8, offset: 672)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2745, file: !31, line: 1075, baseType: !7, size: 32, offset: 704)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2745, file: !31, line: 1076, baseType: !149, size: 32, offset: 736)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2745, file: !31, line: 1077, baseType: !1343, size: 128, offset: 768)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2745, file: !31, line: 1078, baseType: !295, size: 64, offset: 896)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2745, file: !31, line: 1079, baseType: !472, size: 64, offset: 960)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2745, file: !31, line: 1080, baseType: !472, size: 64, offset: 1024)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2745, file: !31, line: 1082, baseType: !2762, size: 64, offset: 1088)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !31, line: 1314, size: 320, elements: !2764)
!2764 = !{!2765, !2773, !2774, !2775, !2776, !2777}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2763, file: !31, line: 1315, baseType: !2766)
!2766 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2767, line: 20, baseType: !2768)
!2767 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2767, line: 11, elements: !2769)
!2769 = !{!2770}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2768, file: !2767, line: 12, baseType: !2771)
!2771 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !188, line: 33, baseType: !2772)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 31, elements: !190)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2763, file: !31, line: 1316, baseType: !149, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2763, file: !31, line: 1317, baseType: !149, size: 32, offset: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2763, file: !31, line: 1318, baseType: !2762, size: 64, offset: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2763, file: !31, line: 1319, baseType: !295, size: 64, offset: 128)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2763, file: !31, line: 1320, baseType: !308, size: 128, align: 64, offset: 192)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2745, file: !31, line: 1084, baseType: !267, size: 64, offset: 1152)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2745, file: !31, line: 1085, baseType: !267, size: 64, offset: 1216)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2745, file: !31, line: 1087, baseType: !2781, size: 64, offset: 1280)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2783)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !31, line: 1011, size: 128, elements: !2784)
!2784 = !{!2785, !2789}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2783, file: !31, line: 1012, baseType: !2786, size: 64)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{null, !2744, !2744}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2783, file: !31, line: 1013, baseType: !2790, size: 64, offset: 64)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 64)
!2791 = !DISubroutineType(types: !2792)
!2792 = !{null, !2744}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2745, file: !31, line: 1088, baseType: !2794, size: 64, offset: 1344)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 64)
!2795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2796)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !31, line: 1016, size: 512, elements: !2797)
!2797 = !{!2798, !2802, !2806, !2807, !2811, !2815, !2819, !2823}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2796, file: !31, line: 1017, baseType: !2799, size: 64)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = !DISubroutineType(types: !2801)
!2801 = !{!2730, !2730}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2796, file: !31, line: 1018, baseType: !2803, size: 64, offset: 64)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2804 = !DISubroutineType(types: !2805)
!2805 = !{null, !2730}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2796, file: !31, line: 1019, baseType: !2790, size: 64, offset: 128)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2796, file: !31, line: 1020, baseType: !2808, size: 64, offset: 192)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = !DISubroutineType(types: !2810)
!2810 = !{!149, !2744, !149}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2796, file: !31, line: 1021, baseType: !2812, size: 64, offset: 256)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{!157, !2744}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2796, file: !31, line: 1022, baseType: !2816, size: 64, offset: 320)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!149, !2744, !149, !143}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2796, file: !31, line: 1023, baseType: !2820, size: 64, offset: 384)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{null, !2744, !763}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2796, file: !31, line: 1024, baseType: !2812, size: 64, offset: 448)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2745, file: !31, line: 1097, baseType: !2825, size: 256, offset: 1408)
!2825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2745, file: !31, line: 1089, size: 256, elements: !2826)
!2826 = !{!2827, !2836, !2842}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2825, file: !31, line: 1090, baseType: !2828, size: 256)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2829, line: 10, size: 256, elements: !2830)
!2829 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2830 = !{!2831, !2832, !2835}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2828, file: !2829, line: 11, baseType: !358, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2828, file: !2829, line: 12, baseType: !2833, size: 64, offset: 64)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2829, line: 5, flags: DIFlagFwdDecl)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2828, file: !2829, line: 13, baseType: !139, size: 128, offset: 128)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2825, file: !31, line: 1091, baseType: !2837, size: 64)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2829, line: 17, size: 64, elements: !2838)
!2838 = !{!2839}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2837, file: !2829, line: 18, baseType: !2840, size: 64)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2829, line: 16, flags: DIFlagFwdDecl)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2825, file: !31, line: 1096, baseType: !2843, size: 192)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2825, file: !31, line: 1092, size: 192, elements: !2844)
!2844 = !{!2845, !2846, !2847}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2843, file: !31, line: 1093, baseType: !139, size: 128)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2843, file: !31, line: 1094, baseType: !149, size: 32, offset: 128)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !2843, file: !31, line: 1095, baseType: !7, size: 32, offset: 160)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2668, file: !31, line: 1843, baseType: !2849, size: 64, offset: 1280)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{!248, !295, !662, !149, !264, !2679, !149}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2668, file: !31, line: 1844, baseType: !963, size: 64, offset: 1344)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2668, file: !31, line: 1845, baseType: !2854, size: 64, offset: 1408)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 64)
!2855 = !DISubroutineType(types: !2856)
!2856 = !{!149, !149}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2668, file: !31, line: 1846, baseType: !2741, size: 64, offset: 1472)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2668, file: !31, line: 1847, baseType: !2859, size: 64, offset: 1536)
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2860, size: 64)
!2860 = !DISubroutineType(types: !2861)
!2861 = !{!248, !1962, !295, !2679, !264, !7}
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2668, file: !31, line: 1848, baseType: !2863, size: 64, offset: 1600)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 64)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{!248, !295, !2679, !1962, !264, !7}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2668, file: !31, line: 1849, baseType: !2867, size: 64, offset: 1664)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{!149, !295, !252, !2870, !763}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2668, file: !31, line: 1850, baseType: !2872, size: 64, offset: 1728)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!252, !295, !149, !472, !472}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2668, file: !31, line: 1852, baseType: !2876, size: 64, offset: 1792)
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{null, !652, !295}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2668, file: !31, line: 1856, baseType: !2880, size: 64, offset: 1856)
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 64)
!2881 = !DISubroutineType(types: !2882)
!2882 = !{!248, !295, !472, !295, !472, !264, !7}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2668, file: !31, line: 1858, baseType: !2884, size: 64, offset: 1920)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64)
!2885 = !DISubroutineType(types: !2886)
!2886 = !{!472, !295, !472, !295, !472, !472, !7}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2668, file: !31, line: 1861, baseType: !2733, size: 64, offset: 1984)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2663, file: !31, line: 692, baseType: !605, size: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !373, file: !31, line: 694, baseType: !2890, size: 64, offset: 2560)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !31, line: 1100, size: 384, elements: !2892)
!2892 = !{!2893, !2894, !2895, !2896}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2891, file: !31, line: 1101, baseType: !176)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2891, file: !31, line: 1102, baseType: !139, size: 128)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2891, file: !31, line: 1103, baseType: !139, size: 128, offset: 128)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2891, file: !31, line: 1104, baseType: !139, size: 128, offset: 256)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !373, file: !31, line: 695, baseType: !676, size: 1216, align: 64, offset: 2624)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !373, file: !31, line: 696, baseType: !139, size: 128, offset: 3840)
!2899 = !DIDerivedType(tag: DW_TAG_member, scope: !373, file: !31, line: 697, baseType: !2900, size: 64, offset: 3968)
!2900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !373, file: !31, line: 697, size: 64, elements: !2901)
!2901 = !{!2902, !2903, !2904, !2915, !2916}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2900, file: !31, line: 698, baseType: !1962, size: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2900, file: !31, line: 699, baseType: !2418, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2900, file: !31, line: 700, baseType: !2905, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !2907, line: 14, size: 832, elements: !2908)
!2907 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!2908 = !{!2909, !2910, !2911, !2912, !2913, !2914}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2906, file: !2907, line: 15, baseType: !163, size: 512)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2906, file: !2907, line: 16, baseType: !135, size: 64, offset: 512)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2906, file: !2907, line: 17, baseType: !2666, size: 64, offset: 576)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2906, file: !2907, line: 18, baseType: !139, size: 128, offset: 640)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2906, file: !2907, line: 19, baseType: !454, size: 32, offset: 768)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2906, file: !2907, line: 20, baseType: !7, size: 32, offset: 800)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2900, file: !31, line: 701, baseType: !217, size: 64)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2900, file: !31, line: 702, baseType: !7, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !373, file: !31, line: 705, baseType: !360, size: 32, offset: 4032)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !373, file: !31, line: 708, baseType: !360, size: 32, offset: 4064)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !373, file: !31, line: 709, baseType: !2500, size: 64, offset: 4096)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !373, file: !31, line: 720, baseType: !126, size: 64, offset: 4160)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !326, file: !323, line: 98, baseType: !2922, size: 256, offset: 448)
!2922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !370, size: 256, elements: !2094)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !326, file: !323, line: 101, baseType: !2924, size: 32, offset: 704)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !2925, line: 25, size: 32, elements: !2926)
!2925 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!2926 = !{!2927}
!2927 = !DIDerivedType(tag: DW_TAG_member, scope: !2924, file: !2925, line: 26, baseType: !2928, size: 32)
!2928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2924, file: !2925, line: 26, size: 32, elements: !2929)
!2929 = !{!2930}
!2930 = !DIDerivedType(tag: DW_TAG_member, scope: !2928, file: !2925, line: 30, baseType: !2931, size: 32)
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2928, file: !2925, line: 30, size: 32, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2931, file: !2925, line: 31, baseType: !176)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2931, file: !2925, line: 32, baseType: !149, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !326, file: !323, line: 102, baseType: !2517, size: 64, offset: 768)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !326, file: !323, line: 103, baseType: !540, size: 64, offset: 832)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !326, file: !323, line: 104, baseType: !267, size: 64, offset: 896)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !326, file: !323, line: 105, baseType: !126, size: 64, offset: 960)
!2939 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !323, line: 107, baseType: !2940, size: 128, offset: 1024)
!2940 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !323, line: 107, size: 128, elements: !2941)
!2941 = !{!2942, !2943}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !2940, file: !323, line: 108, baseType: !139, size: 128)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !2940, file: !323, line: 109, baseType: !2944, size: 64)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !326, file: !323, line: 111, baseType: !139, size: 128, offset: 1152)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !326, file: !323, line: 112, baseType: !139, size: 128, offset: 1280)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !326, file: !323, line: 120, baseType: !2948, size: 128, offset: 1408)
!2948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !323, line: 116, size: 128, elements: !2949)
!2949 = !{!2950, !2951, !2952}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !2948, file: !323, line: 117, baseType: !580, size: 128)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !2948, file: !323, line: 118, baseType: !340, size: 128)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !2948, file: !323, line: 119, baseType: !308, size: 128, align: 64)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !296, file: !31, line: 922, baseType: !372, size: 64, offset: 256)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !296, file: !31, line: 923, baseType: !2666, size: 64, offset: 320)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !296, file: !31, line: 929, baseType: !176, offset: 384)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !296, file: !31, line: 930, baseType: !30, size: 32, offset: 384)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !296, file: !31, line: 931, baseType: !713, size: 64, offset: 448)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !296, file: !31, line: 932, baseType: !7, size: 32, offset: 512)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !296, file: !31, line: 933, baseType: !2513, size: 32, offset: 544)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !296, file: !31, line: 934, baseType: !1035, size: 192, offset: 576)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !296, file: !31, line: 935, baseType: !472, size: 64, offset: 768)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !296, file: !31, line: 936, baseType: !2963, size: 192, offset: 832)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !31, line: 885, size: 192, elements: !2964)
!2964 = !{!2965, !2966, !2967, !2968, !2969, !2970}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2963, file: !31, line: 886, baseType: !2766)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2963, file: !31, line: 887, baseType: !1333, size: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !2963, file: !31, line: 888, baseType: !39, size: 32, offset: 64)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2963, file: !31, line: 889, baseType: !378, size: 32, offset: 96)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2963, file: !31, line: 889, baseType: !378, size: 32, offset: 128)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !2963, file: !31, line: 890, baseType: !149, size: 32, offset: 160)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !296, file: !31, line: 937, baseType: !1409, size: 64, offset: 1024)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !296, file: !31, line: 938, baseType: !2973, size: 256, offset: 1088)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !31, line: 896, size: 256, elements: !2974)
!2974 = !{!2975, !2976, !2977, !2978, !2979, !2980}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2973, file: !31, line: 897, baseType: !267, size: 64)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2973, file: !31, line: 898, baseType: !7, size: 32, offset: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !2973, file: !31, line: 899, baseType: !7, size: 32, offset: 96)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2973, file: !31, line: 902, baseType: !7, size: 32, offset: 128)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !2973, file: !31, line: 903, baseType: !7, size: 32, offset: 160)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !2973, file: !31, line: 904, baseType: !472, size: 64, offset: 192)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !296, file: !31, line: 940, baseType: !364, size: 64, offset: 1344)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !296, file: !31, line: 945, baseType: !126, size: 64, offset: 1408)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !296, file: !31, line: 949, baseType: !139, size: 128, offset: 1472)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !296, file: !31, line: 950, baseType: !139, size: 128, offset: 1600)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !296, file: !31, line: 952, baseType: !675, size: 64, offset: 1728)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !296, file: !31, line: 953, baseType: !851, size: 32, offset: 1792)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !296, file: !31, line: 954, baseType: !851, size: 32, offset: 1824)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !286, file: !242, line: 174, baseType: !292, size: 64, offset: 320)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !286, file: !242, line: 176, baseType: !2990, size: 64, offset: 384)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!2991 = !DISubroutineType(types: !2992)
!2992 = !{!149, !295, !169, !285, !923}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !274, file: !242, line: 90, baseType: !269, size: 64, offset: 192)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !274, file: !242, line: 91, baseType: !2995, size: 64, offset: 256)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !232, file: !164, line: 143, baseType: !2997, size: 64, offset: 256)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = !DISubroutineType(types: !2999)
!2999 = !{!3000, !169}
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3002)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !48, line: 39, size: 384, elements: !3003)
!3003 = !{!3004, !3005, !3009, !3013, !3019, !3023}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3002, file: !48, line: 40, baseType: !47, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3002, file: !48, line: 41, baseType: !3006, size: 64, offset: 64)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = !DISubroutineType(types: !3008)
!3008 = !{!157}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3002, file: !48, line: 42, baseType: !3010, size: 64, offset: 128)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DISubroutineType(types: !3012)
!3012 = !{!126}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3002, file: !48, line: 43, baseType: !3014, size: 64, offset: 192)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!1991, !3017}
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3018, size: 64)
!3018 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !48, line: 19, flags: DIFlagFwdDecl)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3002, file: !48, line: 44, baseType: !3020, size: 64, offset: 256)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = !DISubroutineType(types: !3022)
!3022 = !{!1991}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3002, file: !48, line: 45, baseType: !411, size: 64, offset: 320)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !232, file: !164, line: 144, baseType: !3025, size: 64, offset: 320)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = !DISubroutineType(types: !3027)
!3027 = !{!1991, !169}
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !232, file: !164, line: 145, baseType: !3029, size: 64, offset: 384)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3030 = !DISubroutineType(types: !3031)
!3031 = !{null, !169, !3032, !3033}
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !163, file: !164, line: 70, baseType: !3035, size: 64, offset: 384)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 64)
!3036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !560, line: 123, size: 1024, elements: !3037)
!3037 = !{!3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3166, !3167, !3168, !3169, !3170}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3036, file: !560, line: 124, baseType: !689, size: 32)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3036, file: !560, line: 125, baseType: !689, size: 32, offset: 32)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3036, file: !560, line: 135, baseType: !3035, size: 64, offset: 64)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3036, file: !560, line: 136, baseType: !131, size: 64, offset: 128)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3036, file: !560, line: 138, baseType: !702, size: 192, align: 64, offset: 192)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3036, file: !560, line: 140, baseType: !1991, size: 64, offset: 384)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3036, file: !560, line: 141, baseType: !7, size: 32, offset: 448)
!3045 = !DIDerivedType(tag: DW_TAG_member, scope: !3036, file: !560, line: 142, baseType: !3046, size: 256, offset: 512)
!3046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3036, file: !560, line: 142, size: 256, elements: !3047)
!3047 = !{!3048, !3094, !3098}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3046, file: !560, line: 143, baseType: !3049, size: 192)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !560, line: 91, size: 192, elements: !3050)
!3050 = !{!3051, !3052, !3053}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3049, file: !560, line: 92, baseType: !267, size: 64)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3049, file: !560, line: 94, baseType: !698, size: 64, offset: 64)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3049, file: !560, line: 100, baseType: !3054, size: 64, offset: 128)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !560, line: 180, size: 704, elements: !3056)
!3056 = !{!3057, !3058, !3059, !3066, !3067, !3068, !3092, !3093}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3055, file: !560, line: 182, baseType: !3035, size: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3055, file: !560, line: 183, baseType: !7, size: 32, offset: 64)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3055, file: !560, line: 186, baseType: !3060, size: 192, offset: 128)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3061, line: 19, size: 192, elements: !3062)
!3061 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3062 = !{!3063, !3064, !3065}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3060, file: !3061, line: 20, baseType: !680, size: 128)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3060, file: !3061, line: 21, baseType: !7, size: 32, offset: 128)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3060, file: !3061, line: 22, baseType: !7, size: 32, offset: 160)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3055, file: !560, line: 187, baseType: !358, size: 32, offset: 320)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3055, file: !560, line: 188, baseType: !358, size: 32, offset: 352)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3055, file: !560, line: 189, baseType: !3069, size: 64, offset: 384)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !560, line: 168, size: 320, elements: !3071)
!3071 = !{!3072, !3076, !3080, !3084, !3088}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3070, file: !560, line: 169, baseType: !3073, size: 64)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!149, !652, !3054}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3070, file: !560, line: 171, baseType: !3077, size: 64, offset: 64)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DISubroutineType(types: !3079)
!3079 = !{!149, !3035, !131, !258}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3070, file: !560, line: 173, baseType: !3081, size: 64, offset: 128)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{!149, !3035}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3070, file: !560, line: 174, baseType: !3085, size: 64, offset: 192)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 64)
!3086 = !DISubroutineType(types: !3087)
!3087 = !{!149, !3035, !3035, !131}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3070, file: !560, line: 176, baseType: !3089, size: 64, offset: 256)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{!149, !652, !3035, !3054}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3055, file: !560, line: 192, baseType: !139, size: 128, offset: 448)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3055, file: !560, line: 194, baseType: !1343, size: 128, offset: 576)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3046, file: !560, line: 144, baseType: !3095, size: 64)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !560, line: 103, size: 64, elements: !3096)
!3096 = !{!3097}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3095, file: !560, line: 104, baseType: !3035, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3046, file: !560, line: 145, baseType: !3099, size: 256)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !560, line: 107, size: 256, elements: !3100)
!3100 = !{!3101, !3161, !3164, !3165}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3099, file: !560, line: 108, baseType: !3102, size: 64)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3104)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !560, line: 217, size: 768, elements: !3105)
!3105 = !{!3106, !3126, !3130, !3134, !3138, !3142, !3146, !3150, !3151, !3152, !3153, !3157}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3104, file: !560, line: 222, baseType: !3107, size: 64)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{!149, !3110}
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 64)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !560, line: 197, size: 1088, elements: !3112)
!3112 = !{!3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3111, file: !560, line: 199, baseType: !3035, size: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3111, file: !560, line: 200, baseType: !295, size: 64, offset: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3111, file: !560, line: 201, baseType: !652, size: 64, offset: 128)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3111, file: !560, line: 202, baseType: !126, size: 64, offset: 192)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3111, file: !560, line: 205, baseType: !1035, size: 192, offset: 256)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3111, file: !560, line: 206, baseType: !1035, size: 192, offset: 448)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3111, file: !560, line: 207, baseType: !149, size: 32, offset: 640)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3111, file: !560, line: 208, baseType: !139, size: 128, offset: 704)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3111, file: !560, line: 209, baseType: !217, size: 64, offset: 832)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3111, file: !560, line: 211, baseType: !264, size: 64, offset: 896)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3111, file: !560, line: 212, baseType: !157, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3111, file: !560, line: 213, baseType: !157, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3111, file: !560, line: 214, baseType: !951, size: 64, offset: 1024)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3104, file: !560, line: 223, baseType: !3127, size: 64, offset: 64)
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 64)
!3128 = !DISubroutineType(types: !3129)
!3129 = !{null, !3110}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3104, file: !560, line: 236, baseType: !3131, size: 64, offset: 128)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = !DISubroutineType(types: !3133)
!3133 = !{!149, !652, !126}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3104, file: !560, line: 238, baseType: !3135, size: 64, offset: 192)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 64)
!3136 = !DISubroutineType(types: !3137)
!3137 = !{!126, !652, !2679}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3104, file: !560, line: 239, baseType: !3139, size: 64, offset: 256)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 64)
!3140 = !DISubroutineType(types: !3141)
!3141 = !{!126, !652, !126, !2679}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3104, file: !560, line: 240, baseType: !3143, size: 64, offset: 320)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{null, !652, !126}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3104, file: !560, line: 242, baseType: !3147, size: 64, offset: 384)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 64)
!3148 = !DISubroutineType(types: !3149)
!3149 = !{!248, !3110, !217, !264, !472}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3104, file: !560, line: 252, baseType: !264, size: 64, offset: 448)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3104, file: !560, line: 259, baseType: !157, size: 8, offset: 512)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3104, file: !560, line: 260, baseType: !3147, size: 64, offset: 576)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3104, file: !560, line: 263, baseType: !3154, size: 64, offset: 640)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3155 = !DISubroutineType(types: !3156)
!3156 = !{!2708, !3110, !2710}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3104, file: !560, line: 266, baseType: !3158, size: 64, offset: 704)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 64)
!3159 = !DISubroutineType(types: !3160)
!3160 = !{!149, !3110, !923}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3099, file: !560, line: 109, baseType: !3162, size: 64, offset: 64)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !560, line: 31, flags: DIFlagFwdDecl)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3099, file: !560, line: 110, baseType: !472, size: 64, offset: 128)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3099, file: !560, line: 111, baseType: !3035, size: 64, offset: 192)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3036, file: !560, line: 148, baseType: !126, size: 64, offset: 768)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3036, file: !560, line: 154, baseType: !364, size: 64, offset: 832)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3036, file: !560, line: 156, baseType: !259, size: 16, offset: 896)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3036, file: !560, line: 157, baseType: !258, size: 16, offset: 912)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3036, file: !560, line: 158, baseType: !3171, size: 64, offset: 960)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3172 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !560, line: 32, flags: DIFlagFwdDecl)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !163, file: !164, line: 71, baseType: !3174, size: 32, offset: 448)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3175, line: 19, size: 32, elements: !3176)
!3175 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3176 = !{!3177}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3174, file: !3175, line: 20, baseType: !1092, size: 32)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !163, file: !164, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !163, file: !164, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !163, file: !164, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !163, file: !164, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !163, file: !164, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !160, file: !60, line: 463, baseType: !3184, size: 64, offset: 512)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !160, file: !60, line: 465, baseType: !3186, size: 64, offset: 576)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !60, line: 36, flags: DIFlagFwdDecl)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !160, file: !60, line: 467, baseType: !131, size: 64, offset: 640)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !160, file: !60, line: 468, baseType: !3190, size: 64, offset: 704)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3192)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !60, line: 87, size: 384, elements: !3193)
!3193 = !{!3194, !3195, !3196, !3200, !3205, !3209}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3192, file: !60, line: 88, baseType: !131, size: 64)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3192, file: !60, line: 89, baseType: !271, size: 64, offset: 64)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3192, file: !60, line: 90, baseType: !3197, size: 64, offset: 128)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 64)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!149, !3184, !212}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3192, file: !60, line: 91, baseType: !3201, size: 64, offset: 192)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DISubroutineType(types: !3203)
!3203 = !{!217, !3184, !3204, !3032, !3033}
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3192, file: !60, line: 93, baseType: !3206, size: 64, offset: 256)
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{null, !3184}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3192, file: !60, line: 95, baseType: !3210, size: 64, offset: 320)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3212)
!3212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !67, line: 278, size: 1472, elements: !3213)
!3213 = !{!3214, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239}
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3212, file: !67, line: 279, baseType: !3215, size: 64)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = !DISubroutineType(types: !3217)
!3217 = !{!149, !3184}
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3212, file: !67, line: 280, baseType: !3206, size: 64, offset: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3212, file: !67, line: 281, baseType: !3215, size: 64, offset: 128)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3212, file: !67, line: 282, baseType: !3215, size: 64, offset: 192)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3212, file: !67, line: 283, baseType: !3215, size: 64, offset: 256)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3212, file: !67, line: 284, baseType: !3215, size: 64, offset: 320)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3212, file: !67, line: 285, baseType: !3215, size: 64, offset: 384)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3212, file: !67, line: 286, baseType: !3215, size: 64, offset: 448)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3212, file: !67, line: 287, baseType: !3215, size: 64, offset: 512)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3212, file: !67, line: 288, baseType: !3215, size: 64, offset: 576)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3212, file: !67, line: 289, baseType: !3215, size: 64, offset: 640)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3212, file: !67, line: 290, baseType: !3215, size: 64, offset: 704)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3212, file: !67, line: 291, baseType: !3215, size: 64, offset: 768)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3212, file: !67, line: 292, baseType: !3215, size: 64, offset: 832)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3212, file: !67, line: 293, baseType: !3215, size: 64, offset: 896)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3212, file: !67, line: 294, baseType: !3215, size: 64, offset: 960)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3212, file: !67, line: 295, baseType: !3215, size: 64, offset: 1024)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3212, file: !67, line: 296, baseType: !3215, size: 64, offset: 1088)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3212, file: !67, line: 297, baseType: !3215, size: 64, offset: 1152)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3212, file: !67, line: 298, baseType: !3215, size: 64, offset: 1216)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3212, file: !67, line: 299, baseType: !3215, size: 64, offset: 1280)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3212, file: !67, line: 300, baseType: !3215, size: 64, offset: 1344)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3212, file: !67, line: 301, baseType: !3215, size: 64, offset: 1408)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !160, file: !60, line: 470, baseType: !3241, size: 64, offset: 768)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3243, line: 82, size: 1408, elements: !3244)
!3243 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3244 = !{!3245, !3246, !3247, !3248, !3249, !3250, !3251, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3308, !3311, !3312}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3242, file: !3243, line: 83, baseType: !131, size: 64)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3242, file: !3243, line: 84, baseType: !131, size: 64, offset: 64)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3242, file: !3243, line: 85, baseType: !3184, size: 64, offset: 128)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3242, file: !3243, line: 86, baseType: !271, size: 64, offset: 192)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3242, file: !3243, line: 87, baseType: !271, size: 64, offset: 256)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3242, file: !3243, line: 88, baseType: !271, size: 64, offset: 320)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3242, file: !3243, line: 90, baseType: !3252, size: 64, offset: 384)
!3252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3253 = !DISubroutineType(types: !3254)
!3254 = !{!149, !3184, !3255}
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !54, line: 95, size: 1152, elements: !3257)
!3257 = !{!3258, !3259, !3260, !3261, !3262, !3263, !3264, !3268, !3272, !3273, !3274, !3275, !3276, !3284, !3285, !3286, !3287, !3288, !3289}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3256, file: !54, line: 96, baseType: !131, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3256, file: !54, line: 97, baseType: !3241, size: 64, offset: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3256, file: !54, line: 99, baseType: !135, size: 64, offset: 128)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3256, file: !54, line: 100, baseType: !131, size: 64, offset: 192)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3256, file: !54, line: 102, baseType: !157, size: 8, offset: 256)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3256, file: !54, line: 103, baseType: !53, size: 32, offset: 288)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3256, file: !54, line: 105, baseType: !3265, size: 64, offset: 320)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3267)
!3267 = !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !54, line: 105, flags: DIFlagFwdDecl)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3256, file: !54, line: 106, baseType: !3269, size: 64, offset: 384)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3271)
!3271 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !54, line: 106, flags: DIFlagFwdDecl)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3256, file: !54, line: 108, baseType: !3215, size: 64, offset: 448)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3256, file: !54, line: 109, baseType: !3206, size: 64, offset: 512)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3256, file: !54, line: 110, baseType: !3215, size: 64, offset: 576)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3256, file: !54, line: 111, baseType: !3206, size: 64, offset: 640)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3256, file: !54, line: 112, baseType: !3277, size: 64, offset: 704)
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 64)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{!149, !3184, !3280}
!3280 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !67, line: 52, baseType: !3281)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !67, line: 50, size: 32, elements: !3282)
!3282 = !{!3283}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3281, file: !67, line: 51, baseType: !149, size: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3256, file: !54, line: 113, baseType: !3215, size: 64, offset: 768)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3256, file: !54, line: 114, baseType: !271, size: 64, offset: 832)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3256, file: !54, line: 115, baseType: !271, size: 64, offset: 896)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3256, file: !54, line: 117, baseType: !3210, size: 64, offset: 960)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3256, file: !54, line: 118, baseType: !3206, size: 64, offset: 1024)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3256, file: !54, line: 120, baseType: !3290, size: 64, offset: 1088)
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 64)
!3291 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !54, line: 120, flags: DIFlagFwdDecl)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3242, file: !3243, line: 91, baseType: !3197, size: 64, offset: 448)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3242, file: !3243, line: 92, baseType: !3215, size: 64, offset: 512)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3242, file: !3243, line: 93, baseType: !3206, size: 64, offset: 576)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3242, file: !3243, line: 94, baseType: !3215, size: 64, offset: 640)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3242, file: !3243, line: 95, baseType: !3206, size: 64, offset: 704)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3242, file: !3243, line: 97, baseType: !3215, size: 64, offset: 768)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3242, file: !3243, line: 98, baseType: !3215, size: 64, offset: 832)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3242, file: !3243, line: 100, baseType: !3277, size: 64, offset: 896)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3242, file: !3243, line: 101, baseType: !3215, size: 64, offset: 960)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3242, file: !3243, line: 103, baseType: !3215, size: 64, offset: 1024)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3242, file: !3243, line: 105, baseType: !3215, size: 64, offset: 1088)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3242, file: !3243, line: 107, baseType: !3210, size: 64, offset: 1152)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3242, file: !3243, line: 109, baseType: !3305, size: 64, offset: 1216)
!3305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 64)
!3306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3307)
!3307 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3243, line: 109, flags: DIFlagFwdDecl)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3242, file: !3243, line: 111, baseType: !3309, size: 64, offset: 1280)
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3310, size: 64)
!3310 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3243, line: 111, flags: DIFlagFwdDecl)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3242, file: !3243, line: 112, baseType: !586, offset: 1344)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3242, file: !3243, line: 114, baseType: !157, size: 8, offset: 1344)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !160, file: !60, line: 471, baseType: !3255, size: 64, offset: 832)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !160, file: !60, line: 473, baseType: !126, size: 64, offset: 896)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !160, file: !60, line: 475, baseType: !126, size: 64, offset: 960)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !160, file: !60, line: 480, baseType: !1035, size: 192, offset: 1024)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !160, file: !60, line: 484, baseType: !3318, size: 576, offset: 1216)
!3318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !60, line: 361, size: 576, elements: !3319)
!3319 = !{!3320, !3321, !3322, !3323, !3324, !3325}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3318, file: !60, line: 362, baseType: !139, size: 128)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3318, file: !60, line: 363, baseType: !139, size: 128, offset: 128)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3318, file: !60, line: 364, baseType: !139, size: 128, offset: 256)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3318, file: !60, line: 365, baseType: !139, size: 128, offset: 384)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3318, file: !60, line: 366, baseType: !157, size: 8, offset: 512)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3318, file: !60, line: 367, baseType: !59, size: 32, offset: 544)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !160, file: !60, line: 485, baseType: !3327, size: 2304, offset: 1792)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !67, line: 565, size: 2304, elements: !3328)
!3328 = !{!3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3424, !3428}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3327, file: !67, line: 566, baseType: !3280, size: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3327, file: !67, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3327, file: !67, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3327, file: !67, line: 569, baseType: !157, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3327, file: !67, line: 570, baseType: !157, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3327, file: !67, line: 571, baseType: !157, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3327, file: !67, line: 572, baseType: !157, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3327, file: !67, line: 573, baseType: !157, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3327, file: !67, line: 574, baseType: !157, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3327, file: !67, line: 575, baseType: !157, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3327, file: !67, line: 576, baseType: !157, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3327, file: !67, line: 577, baseType: !358, size: 32, offset: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3327, file: !67, line: 578, baseType: !176, offset: 96)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3327, file: !67, line: 580, baseType: !139, size: 128, offset: 128)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3327, file: !67, line: 581, baseType: !1364, size: 192, offset: 256)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3327, file: !67, line: 582, baseType: !3345, size: 64, offset: 448)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 64)
!3346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3347, line: 43, size: 1472, elements: !3348)
!3347 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3348 = !{!3349, !3350, !3351, !3352, !3353, !3356, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3346, file: !3347, line: 44, baseType: !131, size: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3346, file: !3347, line: 45, baseType: !149, size: 32, offset: 64)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3346, file: !3347, line: 46, baseType: !139, size: 128, offset: 128)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3346, file: !3347, line: 47, baseType: !176, offset: 256)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3346, file: !3347, line: 48, baseType: !3354, size: 64, offset: 256)
!3354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3355, size: 64)
!3355 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !67, line: 533, flags: DIFlagFwdDecl)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3346, file: !3347, line: 49, baseType: !3357, size: 320, offset: 320)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3358, line: 11, size: 320, elements: !3359)
!3358 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3359 = !{!3360, !3361, !3362, !3367}
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3357, file: !3358, line: 16, baseType: !580, size: 128)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3357, file: !3358, line: 17, baseType: !267, size: 64, offset: 128)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3357, file: !3358, line: 18, baseType: !3363, size: 64, offset: 192)
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3364, size: 64)
!3364 = !DISubroutineType(types: !3365)
!3365 = !{null, !3366}
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3357, file: !3358, line: 19, baseType: !358, size: 32, offset: 256)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3346, file: !3347, line: 50, baseType: !267, size: 64, offset: 640)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3346, file: !3347, line: 51, baseType: !1162, size: 64, offset: 704)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3346, file: !3347, line: 52, baseType: !1162, size: 64, offset: 768)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3346, file: !3347, line: 53, baseType: !1162, size: 64, offset: 832)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3346, file: !3347, line: 54, baseType: !1162, size: 64, offset: 896)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3346, file: !3347, line: 55, baseType: !1162, size: 64, offset: 960)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3346, file: !3347, line: 56, baseType: !267, size: 64, offset: 1024)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3346, file: !3347, line: 57, baseType: !267, size: 64, offset: 1088)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3346, file: !3347, line: 58, baseType: !267, size: 64, offset: 1152)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3346, file: !3347, line: 59, baseType: !267, size: 64, offset: 1216)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3346, file: !3347, line: 60, baseType: !267, size: 64, offset: 1280)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3346, file: !3347, line: 61, baseType: !3184, size: 64, offset: 1344)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3346, file: !3347, line: 62, baseType: !157, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3346, file: !3347, line: 63, baseType: !157, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3327, file: !67, line: 583, baseType: !157, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3327, file: !67, line: 584, baseType: !157, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3327, file: !67, line: 585, baseType: !157, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3327, file: !67, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3327, file: !67, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3327, file: !67, line: 592, baseType: !1154, size: 512, offset: 576)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3327, file: !67, line: 593, baseType: !364, size: 64, offset: 1088)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3327, file: !67, line: 594, baseType: !1821, size: 256, offset: 1152)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3327, file: !67, line: 595, baseType: !1343, size: 128, offset: 1408)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3327, file: !67, line: 596, baseType: !3354, size: 64, offset: 1536)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3327, file: !67, line: 597, baseType: !689, size: 32, offset: 1600)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3327, file: !67, line: 598, baseType: !689, size: 32, offset: 1632)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3327, file: !67, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3327, file: !67, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3327, file: !67, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3327, file: !67, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3327, file: !67, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3327, file: !67, line: 604, baseType: !157, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3327, file: !67, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3327, file: !67, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3327, file: !67, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3327, file: !67, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3327, file: !67, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3327, file: !67, line: 610, baseType: !7, size: 32, offset: 1696)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3327, file: !67, line: 611, baseType: !66, size: 32, offset: 1728)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3327, file: !67, line: 612, baseType: !74, size: 32, offset: 1760)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3327, file: !67, line: 613, baseType: !149, size: 32, offset: 1792)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3327, file: !67, line: 614, baseType: !149, size: 32, offset: 1824)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3327, file: !67, line: 615, baseType: !364, size: 64, offset: 1856)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3327, file: !67, line: 616, baseType: !364, size: 64, offset: 1920)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3327, file: !67, line: 617, baseType: !364, size: 64, offset: 1984)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3327, file: !67, line: 618, baseType: !364, size: 64, offset: 2048)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3327, file: !67, line: 620, baseType: !3415, size: 64, offset: 2112)
!3415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 64)
!3416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !67, line: 536, size: 256, elements: !3417)
!3417 = !{!3418, !3419, !3420, !3421}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3416, file: !67, line: 537, baseType: !176)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3416, file: !67, line: 538, baseType: !7, size: 32)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3416, file: !67, line: 540, baseType: !139, size: 128, offset: 64)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3416, file: !67, line: 543, baseType: !3422, size: 64, offset: 192)
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3423, size: 64)
!3423 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !67, line: 534, flags: DIFlagFwdDecl)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3327, file: !67, line: 621, baseType: !3425, size: 64, offset: 2176)
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3426, size: 64)
!3426 = !DISubroutineType(types: !3427)
!3427 = !{null, !3184, !1306}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3327, file: !67, line: 622, baseType: !3429, size: 64, offset: 2240)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !67, line: 622, flags: DIFlagFwdDecl)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !160, file: !60, line: 486, baseType: !3432, size: 64, offset: 4096)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !67, line: 642, size: 1792, elements: !3434)
!3434 = !{!3435, !3436, !3437, !3441, !3442, !3443}
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3433, file: !67, line: 643, baseType: !3212, size: 1472)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3433, file: !67, line: 644, baseType: !3215, size: 64, offset: 1472)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3433, file: !67, line: 645, baseType: !3438, size: 64, offset: 1536)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 64)
!3439 = !DISubroutineType(types: !3440)
!3440 = !{null, !3184, !157}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3433, file: !67, line: 646, baseType: !3215, size: 64, offset: 1600)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3433, file: !67, line: 647, baseType: !3206, size: 64, offset: 1664)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3433, file: !67, line: 648, baseType: !3206, size: 64, offset: 1728)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !160, file: !60, line: 493, baseType: !3445, size: 64, offset: 4160)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !60, line: 493, flags: DIFlagFwdDecl)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !160, file: !60, line: 499, baseType: !139, size: 128, offset: 4224)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !160, file: !60, line: 502, baseType: !3449, size: 64, offset: 4352)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3451)
!3451 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !60, line: 502, flags: DIFlagFwdDecl)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !160, file: !60, line: 504, baseType: !3453, size: 64, offset: 4416)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !160, file: !60, line: 505, baseType: !364, size: 64, offset: 4480)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !160, file: !60, line: 510, baseType: !364, size: 64, offset: 4544)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !160, file: !60, line: 511, baseType: !3457, size: 64, offset: 4608)
!3457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3458, size: 64)
!3458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3459)
!3459 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !60, line: 511, flags: DIFlagFwdDecl)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !160, file: !60, line: 513, baseType: !3461, size: 64, offset: 4672)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !60, line: 288, size: 128, elements: !3463)
!3463 = !{!3464, !3465}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3462, file: !60, line: 293, baseType: !7, size: 32)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3462, file: !60, line: 294, baseType: !267, size: 64, offset: 64)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !160, file: !60, line: 515, baseType: !139, size: 128, offset: 4736)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !160, file: !60, line: 526, baseType: !3468, offset: 4864)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3469, line: 5, elements: !190)
!3469 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !160, file: !60, line: 528, baseType: !3471, size: 64, offset: 4864)
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 64)
!3472 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3473, line: 14, flags: DIFlagFwdDecl)
!3473 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !160, file: !60, line: 529, baseType: !3475, size: 64, offset: 4928)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3477, line: 17, size: 192, elements: !3478)
!3477 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3478 = !{!3479, !3480, !3563}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3476, file: !3477, line: 18, baseType: !3475, size: 64)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3476, file: !3477, line: 19, baseType: !3481, size: 64, offset: 64)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3483)
!3483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3477, line: 110, size: 1152, elements: !3484)
!3484 = !{!3485, !3489, !3493, !3499, !3505, !3509, !3513, !3518, !3522, !3523, !3527, !3531, !3535, !3546, !3547, !3548, !3549, !3559}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3483, file: !3477, line: 111, baseType: !3486, size: 64)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{!3475, !3475}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3483, file: !3477, line: 112, baseType: !3490, size: 64, offset: 64)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = !DISubroutineType(types: !3492)
!3492 = !{null, !3475}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3483, file: !3477, line: 113, baseType: !3494, size: 64, offset: 128)
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 64)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{!157, !3497}
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3476)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3483, file: !3477, line: 114, baseType: !3500, size: 64, offset: 192)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{!1991, !3497, !3503}
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !160)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3483, file: !3477, line: 116, baseType: !3506, size: 64, offset: 256)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{!157, !3497, !131}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3483, file: !3477, line: 118, baseType: !3510, size: 64, offset: 320)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!149, !3497, !131, !7, !126, !264}
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3483, file: !3477, line: 123, baseType: !3514, size: 64, offset: 384)
!3514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 64)
!3515 = !DISubroutineType(types: !3516)
!3516 = !{!149, !3497, !131, !3517, !264}
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3483, file: !3477, line: 126, baseType: !3519, size: 64, offset: 448)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = !DISubroutineType(types: !3521)
!3521 = !{!131, !3497}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3483, file: !3477, line: 127, baseType: !3519, size: 64, offset: 512)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3483, file: !3477, line: 128, baseType: !3524, size: 64, offset: 576)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DISubroutineType(types: !3526)
!3526 = !{!3475, !3497}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3483, file: !3477, line: 130, baseType: !3528, size: 64, offset: 640)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 64)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!3475, !3497, !3475}
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3483, file: !3477, line: 133, baseType: !3532, size: 64, offset: 704)
!3532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3533, size: 64)
!3533 = !DISubroutineType(types: !3534)
!3534 = !{!3475, !3497, !131}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3483, file: !3477, line: 135, baseType: !3536, size: 64, offset: 768)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3537, size: 64)
!3537 = !DISubroutineType(types: !3538)
!3538 = !{!149, !3497, !131, !131, !7, !7, !3539}
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3477, line: 43, size: 640, elements: !3541)
!3541 = !{!3542, !3543, !3544}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3540, file: !3477, line: 44, baseType: !3475, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3540, file: !3477, line: 45, baseType: !7, size: 32, offset: 64)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3540, file: !3477, line: 46, baseType: !3545, size: 512, offset: 128)
!3545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 512, elements: !1192)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3483, file: !3477, line: 140, baseType: !3528, size: 64, offset: 832)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3483, file: !3477, line: 143, baseType: !3524, size: 64, offset: 896)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3483, file: !3477, line: 145, baseType: !3486, size: 64, offset: 960)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3483, file: !3477, line: 146, baseType: !3550, size: 64, offset: 1024)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{!149, !3497, !3553}
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3477, line: 29, size: 128, elements: !3555)
!3555 = !{!3556, !3557, !3558}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3554, file: !3477, line: 30, baseType: !7, size: 32)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3554, file: !3477, line: 31, baseType: !7, size: 32, offset: 32)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3554, file: !3477, line: 32, baseType: !3497, size: 64, offset: 64)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3483, file: !3477, line: 148, baseType: !3560, size: 64, offset: 1088)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 64)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{!149, !3497, !3184}
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3476, file: !3477, line: 20, baseType: !3184, size: 64, offset: 128)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !160, file: !60, line: 534, baseType: !454, size: 32, offset: 4992)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !160, file: !60, line: 535, baseType: !358, size: 32, offset: 5024)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !160, file: !60, line: 537, baseType: !176, offset: 5056)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !160, file: !60, line: 538, baseType: !139, size: 128, offset: 5056)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !160, file: !60, line: 540, baseType: !3569, size: 64, offset: 5184)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3571, line: 54, size: 960, elements: !3572)
!3571 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3572 = !{!3573, !3574, !3575, !3576, !3577, !3578, !3579, !3583, !3587, !3588, !3589, !3590, !3594, !3598, !3599}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3570, file: !3571, line: 55, baseType: !131, size: 64)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3570, file: !3571, line: 56, baseType: !135, size: 64, offset: 64)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3570, file: !3571, line: 58, baseType: !271, size: 64, offset: 128)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3570, file: !3571, line: 59, baseType: !271, size: 64, offset: 192)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3570, file: !3571, line: 60, baseType: !169, size: 64, offset: 256)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3570, file: !3571, line: 62, baseType: !3197, size: 64, offset: 320)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3570, file: !3571, line: 63, baseType: !3580, size: 64, offset: 384)
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3581, size: 64)
!3581 = !DISubroutineType(types: !3582)
!3582 = !{!217, !3184, !3204}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3570, file: !3571, line: 65, baseType: !3584, size: 64, offset: 448)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = !DISubroutineType(types: !3586)
!3586 = !{null, !3569}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3570, file: !3571, line: 66, baseType: !3206, size: 64, offset: 512)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3570, file: !3571, line: 68, baseType: !3215, size: 64, offset: 576)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3570, file: !3571, line: 70, baseType: !3000, size: 64, offset: 640)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3570, file: !3571, line: 71, baseType: !3591, size: 64, offset: 704)
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 64)
!3592 = !DISubroutineType(types: !3593)
!3593 = !{!1991, !3184}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3570, file: !3571, line: 73, baseType: !3595, size: 64, offset: 768)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 64)
!3596 = !DISubroutineType(types: !3597)
!3597 = !{null, !3184, !3032, !3033}
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3570, file: !3571, line: 75, baseType: !3210, size: 64, offset: 832)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3570, file: !3571, line: 77, baseType: !3309, size: 64, offset: 896)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !160, file: !60, line: 541, baseType: !271, size: 64, offset: 5248)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !160, file: !60, line: 543, baseType: !3206, size: 64, offset: 5312)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !160, file: !60, line: 544, baseType: !3603, size: 64, offset: 5376)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3604 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !60, line: 45, flags: DIFlagFwdDecl)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !160, file: !60, line: 545, baseType: !3606, size: 64, offset: 5440)
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3607, size: 64)
!3607 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !60, line: 47, flags: DIFlagFwdDecl)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !160, file: !60, line: 547, baseType: !157, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !160, file: !60, line: 548, baseType: !157, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !160, file: !60, line: 549, baseType: !157, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !160, file: !60, line: 550, baseType: !157, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "platform_dma_mask", scope: !151, file: !152, line: 27, baseType: !364, size: 64, offset: 5696)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !151, file: !152, line: 28, baseType: !3462, size: 128, offset: 5760)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "num_resources", scope: !151, file: !152, line: 29, baseType: !358, size: 32, offset: 5888)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !151, file: !152, line: 30, baseType: !3616, size: 64, offset: 5952)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !3618, line: 20, size: 512, elements: !3619)
!3618 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!3619 = !{!3620, !3622, !3623, !3624, !3625, !3626, !3627, !3628}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3617, file: !3618, line: 21, baseType: !3621, size: 64)
!3621 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !140, line: 158, baseType: !1989)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3617, file: !3618, line: 22, baseType: !3621, size: 64, offset: 64)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3617, file: !3618, line: 23, baseType: !131, size: 64, offset: 128)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3617, file: !3618, line: 24, baseType: !267, size: 64, offset: 192)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3617, file: !3618, line: 25, baseType: !267, size: 64, offset: 256)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3617, file: !3618, line: 26, baseType: !3616, size: 64, offset: 320)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3617, file: !3618, line: 26, baseType: !3616, size: 64, offset: 384)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3617, file: !3618, line: 26, baseType: !3616, size: 64, offset: 448)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "id_entry", scope: !151, file: !152, line: 32, baseType: !3630, size: 64, offset: 6016)
!3630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3631, size: 64)
!3631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3632)
!3632 = !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device_id", file: !152, line: 20, flags: DIFlagFwdDecl)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !151, file: !152, line: 33, baseType: !217, size: 64, offset: 6080)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "mfd_cell", scope: !151, file: !152, line: 36, baseType: !3635, size: 64, offset: 6144)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = !DICompositeType(tag: DW_TAG_structure_type, name: "mfd_cell", file: !152, line: 18, flags: DIFlagFwdDecl)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !151, file: !152, line: 39, baseType: !3638, offset: 6208)
!3638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pdev_archdata", file: !3469, line: 8, elements: !190)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "enable_set", scope: !128, file: !109, line: 185, baseType: !3640, size: 64, offset: 320)
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3641, size: 64)
!3641 = !DISubroutineType(types: !3642)
!3642 = !{!149, !150, !157}
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_fpga_enum_dfl", file: !109, line: 448, size: 256, elements: !3645)
!3645 = !{!3646, !3647, !3648}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3644, file: !109, line: 449, baseType: !3621, size: 64)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3644, file: !109, line: 450, baseType: !3621, size: 64, offset: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3644, file: !109, line: 451, baseType: !139, size: 128, offset: 128)
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 64)
!3650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_feature_platform_data", file: !109, line: 272, size: 1536, elements: !3651)
!3651 = !{!3652, !3653, !3654, !3655, !3656, !3746, !3747, !3748, !3749, !3750, !3751, !3752}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3650, file: !109, line: 273, baseType: !139, size: 128)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3650, file: !109, line: 274, baseType: !1035, size: 192, offset: 128)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "cdev", scope: !3650, file: !109, line: 275, baseType: !2906, size: 832, offset: 320)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3650, file: !109, line: 276, baseType: !150, size: 64, offset: 1152)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "dfl_cdev", scope: !3650, file: !109, line: 277, baseType: !3657, size: 64, offset: 1216)
!3657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3658, size: 64)
!3658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_fpga_cdev", file: !109, line: 471, size: 576, elements: !3659)
!3659 = !{!3660, !3661, !3742, !3743, !3744, !3745}
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3658, file: !109, line: 472, baseType: !3184, size: 64)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !3658, file: !109, line: 473, baseType: !3662, size: 64, offset: 64)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpga_region", file: !3664, line: 21, size: 6208, elements: !3665)
!3664 = !DIFile(filename: "./include/linux/fpga/fpga-region.h", directory: "/home/lizy2001/genbc/linux")
!3665 = !{!3666, !3667, !3668, !3669, !3735, !3736, !3737, !3738}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3663, file: !3664, line: 22, baseType: !160, size: 5568)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3663, file: !3664, line: 23, baseType: !1035, size: 192, offset: 5568)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_list", scope: !3663, file: !3664, line: 24, baseType: !139, size: 128, offset: 5760)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "mgr", scope: !3663, file: !3664, line: 25, baseType: !3670, size: 64, offset: 5888)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpga_manager", file: !81, line: 167, size: 6080, elements: !3672)
!3672 = !{!3673, !3674, !3675, !3676, !3677, !3683, !3734}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3671, file: !81, line: 168, baseType: !131, size: 64)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3671, file: !81, line: 169, baseType: !160, size: 5568, offset: 64)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "ref_mutex", scope: !3671, file: !81, line: 170, baseType: !1035, size: 192, offset: 5632)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3671, file: !81, line: 171, baseType: !80, size: 32, offset: 5824)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "compat_id", scope: !3671, file: !81, line: 172, baseType: !3678, size: 64, offset: 5888)
!3678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3679, size: 64)
!3679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpga_compat_id", file: !81, line: 152, size: 128, elements: !3680)
!3680 = !{!3681, !3682}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "id_h", scope: !3679, file: !81, line: 153, baseType: !364, size: 64)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "id_l", scope: !3679, file: !81, line: 154, baseType: !364, size: 64, offset: 64)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "mops", scope: !3671, file: !81, line: 173, baseType: !3684, size: 64, offset: 5952)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3686)
!3686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpga_manager_ops", file: !81, line: 124, size: 576, elements: !3687)
!3687 = !{!3688, !3689, !3693, !3697, !3717, !3721, !3725, !3729, !3733}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "initial_header_size", scope: !3686, file: !81, line: 125, baseType: !264, size: 64)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3686, file: !81, line: 126, baseType: !3690, size: 64, offset: 64)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DISubroutineType(types: !3692)
!3692 = !{!80, !3670}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3686, file: !81, line: 127, baseType: !3694, size: 64, offset: 128)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3695 = !DISubroutineType(types: !3696)
!3696 = !{!364, !3670}
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "write_init", scope: !3686, file: !81, line: 128, baseType: !3698, size: 64, offset: 192)
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 64)
!3699 = !DISubroutineType(types: !3700)
!3700 = !{!149, !3670, !3701, !131, !264}
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpga_image_info", file: !81, line: 92, size: 576, elements: !3703)
!3703 = !{!3704, !3705, !3706, !3707, !3708, !3709, !3712, !3713, !3714, !3715, !3716}
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3702, file: !81, line: 93, baseType: !358, size: 32)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "enable_timeout_us", scope: !3702, file: !81, line: 94, baseType: !358, size: 32, offset: 32)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "disable_timeout_us", scope: !3702, file: !81, line: 95, baseType: !358, size: 32, offset: 64)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "config_complete_timeout_us", scope: !3702, file: !81, line: 96, baseType: !358, size: 32, offset: 96)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "firmware_name", scope: !3702, file: !81, line: 97, baseType: !217, size: 64, offset: 128)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "sgt", scope: !3702, file: !81, line: 98, baseType: !3710, size: 64, offset: 192)
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 64)
!3711 = !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !81, line: 15, flags: DIFlagFwdDecl)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3702, file: !81, line: 99, baseType: !131, size: 64, offset: 256)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3702, file: !81, line: 100, baseType: !264, size: 64, offset: 320)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "region_id", scope: !3702, file: !81, line: 101, baseType: !149, size: 32, offset: 384)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3702, file: !81, line: 102, baseType: !3184, size: 64, offset: 448)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "overlay", scope: !3702, file: !81, line: 104, baseType: !3471, size: 64, offset: 512)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3686, file: !81, line: 131, baseType: !3718, size: 64, offset: 256)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{!149, !3670, !131, !264}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "write_sg", scope: !3686, file: !81, line: 132, baseType: !3722, size: 64, offset: 320)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DISubroutineType(types: !3724)
!3724 = !{!149, !3670, !3710}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "write_complete", scope: !3686, file: !81, line: 133, baseType: !3726, size: 64, offset: 384)
!3726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3727, size: 64)
!3727 = !DISubroutineType(types: !3728)
!3728 = !{!149, !3670, !3701}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "fpga_remove", scope: !3686, file: !81, line: 135, baseType: !3730, size: 64, offset: 448)
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3731, size: 64)
!3731 = !DISubroutineType(types: !3732)
!3732 = !{null, !3670}
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3686, file: !81, line: 136, baseType: !271, size: 64, offset: 512)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3671, file: !81, line: 174, baseType: !126, size: 64, offset: 6016)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3663, file: !3664, line: 26, baseType: !3701, size: 64, offset: 5952)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "compat_id", scope: !3663, file: !3664, line: 27, baseType: !3678, size: 64, offset: 6016)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3663, file: !3664, line: 28, baseType: !126, size: 64, offset: 6080)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "get_bridges", scope: !3663, file: !3664, line: 29, baseType: !3739, size: 64, offset: 6144)
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3740, size: 64)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{!149, !3662}
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "fme_dev", scope: !3658, file: !109, line: 474, baseType: !3184, size: 64, offset: 128)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3658, file: !109, line: 475, baseType: !1035, size: 192, offset: 192)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "port_dev_list", scope: !3658, file: !109, line: 476, baseType: !139, size: 128, offset: 384)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "released_port_num", scope: !3658, file: !109, line: 477, baseType: !149, size: 32, offset: 512)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3650, file: !109, line: 278, baseType: !149, size: 32, offset: 1280)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "disable_count", scope: !3650, file: !109, line: 279, baseType: !7, size: 32, offset: 1312)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "excl_open", scope: !3650, file: !109, line: 280, baseType: !157, size: 8, offset: 1344)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "open_count", scope: !3650, file: !109, line: 281, baseType: !149, size: 32, offset: 1376)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3650, file: !109, line: 282, baseType: !126, size: 64, offset: 1408)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3650, file: !109, line: 283, baseType: !149, size: 32, offset: 1472)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !3650, file: !109, line: 284, baseType: !3753, offset: 1536)
!3753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3754, elements: !2195)
!3754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_feature", file: !109, line: 242, size: 512, elements: !3755)
!3755 = !{!3756, !3757, !3758, !3759, !3760, !3770, !3771, !3789, !3809}
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3754, file: !109, line: 243, baseType: !150, size: 64)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3754, file: !109, line: 244, baseType: !801, size: 16, offset: 64)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "resource_index", scope: !3754, file: !109, line: 245, baseType: !149, size: 32, offset: 96)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "ioaddr", scope: !3754, file: !109, line: 246, baseType: !126, size: 64, offset: 128)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ctx", scope: !3754, file: !109, line: 247, baseType: !3761, size: 64, offset: 192)
!3761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3762, size: 64)
!3762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_feature_irq_ctx", file: !109, line: 221, size: 192, elements: !3763)
!3763 = !{!3764, !3765, !3769}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3762, file: !109, line: 222, baseType: !149, size: 32)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "trigger", scope: !3762, file: !109, line: 223, baseType: !3766, size: 64, offset: 64)
!3766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3767, size: 64)
!3767 = !DICompositeType(tag: DW_TAG_structure_type, name: "eventfd_ctx", file: !3768, line: 32, flags: DIFlagFwdDecl)
!3768 = !DIFile(filename: "./include/linux/eventfd.h", directory: "/home/lizy2001/genbc/linux")
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3762, file: !109, line: 224, baseType: !217, size: 64, offset: 128)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "nr_irqs", scope: !3754, file: !109, line: 248, baseType: !7, size: 32, offset: 256)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3754, file: !109, line: 249, baseType: !3772, size: 64, offset: 320)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 64)
!3773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3774)
!3774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_feature_ops", file: !109, line: 335, size: 192, elements: !3775)
!3775 = !{!3776, !3781, !3785}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3774, file: !109, line: 336, baseType: !3777, size: 64)
!3777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3778, size: 64)
!3778 = !DISubroutineType(types: !3779)
!3779 = !{!149, !150, !3780}
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "uinit", scope: !3774, file: !109, line: 337, baseType: !3782, size: 64, offset: 64)
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 64)
!3783 = !DISubroutineType(types: !3784)
!3784 = !{null, !150, !3780}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !3774, file: !109, line: 339, baseType: !3786, size: 64, offset: 128)
!3786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!3787 = !DISubroutineType(types: !3788)
!3788 = !{!252, !150, !3780, !7, !267}
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "ddev", scope: !3754, file: !109, line: 250, baseType: !3790, size: 64, offset: 384)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_device", file: !109, line: 553, size: 6400, elements: !3792)
!3792 = !{!3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3791, file: !109, line: 554, baseType: !160, size: 5568)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3791, file: !109, line: 555, baseType: !149, size: 32, offset: 5568)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3791, file: !109, line: 556, baseType: !1214, size: 8, offset: 5600)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "feature_id", scope: !3791, file: !109, line: 557, baseType: !801, size: 16, offset: 5616)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_res", scope: !3791, file: !109, line: 558, baseType: !3617, size: 512, offset: 5632)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "irqs", scope: !3791, file: !109, line: 559, baseType: !646, size: 64, offset: 6144)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "num_irqs", scope: !3791, file: !109, line: 560, baseType: !7, size: 32, offset: 6208)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "cdev", scope: !3791, file: !109, line: 561, baseType: !3657, size: 64, offset: 6272)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "id_entry", scope: !3791, file: !109, line: 562, baseType: !3802, size: 64, offset: 6336)
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64)
!3803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3804)
!3804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_device_id", file: !109, line: 534, size: 128, elements: !3805)
!3805 = !{!3806, !3807, !3808}
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3804, file: !109, line: 535, baseType: !1214, size: 8)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "feature_id", scope: !3804, file: !109, line: 536, baseType: !801, size: 16, offset: 16)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3804, file: !109, line: 537, baseType: !267, size: 64, offset: 64)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3754, file: !109, line: 251, baseType: !126, size: 64, offset: 448)
!3810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64)
!3811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3812, size: 64)
!3812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3813)
!3813 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !143)
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_driver", file: !109, line: 574, size: 1344, elements: !3817)
!3817 = !{!3818, !3819, !3820, !3824}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !3816, file: !109, line: 575, baseType: !3256, size: 1152)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !3816, file: !109, line: 576, baseType: !3802, size: 64, offset: 1152)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3816, file: !109, line: 578, baseType: !3821, size: 64, offset: 1216)
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3822, size: 64)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{!149, !3790}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3816, file: !109, line: 579, baseType: !3825, size: 64, offset: 1280)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 64)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{null, !3790}
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !364)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_feature_info", file: !3, line: 718, size: 832, elements: !3832)
!3832 = !{!3833, !3834, !3835, !3836, !3837, !3838}
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "fid", scope: !3831, file: !3, line: 719, baseType: !801, size: 16)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_res", scope: !3831, file: !3, line: 720, baseType: !3617, size: 512, offset: 64)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "ioaddr", scope: !3831, file: !3, line: 721, baseType: !126, size: 64, offset: 576)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3831, file: !3, line: 722, baseType: !139, size: 128, offset: 640)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "irq_base", scope: !3831, file: !3, line: 723, baseType: !7, size: 32, offset: 768)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "nr_irqs", scope: !3831, file: !3, line: 724, baseType: !7, size: 32, offset: 800)
!3839 = !{!3840, !3852, !3854, !3859, !3864, !3869, !3874, !0, !3879, !3881, !3883, !3886, !3888, !3891, !3905, !3907, !3912, !3921, !3923, !3930, !3948, !3951}
!3840 = !DIGlobalVariableExpression(var: !3841, expr: !DIExpression())
!3841 = distinct !DIGlobalVariable(name: "__key", scope: !3842, file: !3, line: 1410, type: !586, isLocal: true, isDefinition: true)
!3842 = distinct !DISubprogram(name: "dfl_fpga_feature_devs_enumerate", scope: !3, file: !3, line: 1389, type: !3843, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{!3657, !3845}
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_fpga_enum_info", file: !109, line: 434, size: 320, elements: !3847)
!3847 = !{!3848, !3849, !3850, !3851}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3846, file: !109, line: 435, baseType: !3184, size: 64)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "dfls", scope: !3846, file: !109, line: 436, baseType: !139, size: 128, offset: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "nr_irqs", scope: !3846, file: !109, line: 437, baseType: !7, size: 32, offset: 192)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "irq_table", scope: !3846, file: !109, line: 438, baseType: !646, size: 64, offset: 256)
!3852 = !DIGlobalVariableExpression(var: !3853, expr: !DIExpression())
!3853 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_dfl_fpga_init345", scope: !2, file: !3, line: 1880, type: !126, isLocal: true, isDefinition: true)
!3854 = !DIGlobalVariableExpression(var: !3855, expr: !DIExpression())
!3855 = distinct !DIGlobalVariable(name: "__exitcall_dfl_fpga_exit", scope: !2, file: !3, line: 1881, type: !3856, isLocal: true, isDefinition: true)
!3856 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !3857, line: 117, baseType: !3858)
!3857 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!3859 = !DIGlobalVariableExpression(var: !3860, expr: !DIExpression())
!3860 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description346", scope: !2, file: !3, line: 1883, type: !3861, isLocal: true, isDefinition: true, align: 8)
!3861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 440, elements: !3862)
!3862 = !{!3863}
!3863 = !DISubrange(count: 55)
!3864 = !DIGlobalVariableExpression(var: !3865, expr: !DIExpression())
!3865 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author347", scope: !2, file: !3, line: 1884, type: !3866, isLocal: true, isDefinition: true, align: 8)
!3866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 232, elements: !3867)
!3867 = !{!3868}
!3868 = !DISubrange(count: 29)
!3869 = !DIGlobalVariableExpression(var: !3870, expr: !DIExpression())
!3870 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file348", scope: !2, file: !3, line: 1885, type: !3871, isLocal: true, isDefinition: true, align: 8)
!3871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 208, elements: !3872)
!3872 = !{!3873}
!3873 = !DISubrange(count: 26)
!3874 = !DIGlobalVariableExpression(var: !3875, expr: !DIExpression())
!3875 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license349", scope: !2, file: !3, line: 1885, type: !3876, isLocal: true, isDefinition: true, align: 8)
!3876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 152, elements: !3877)
!3877 = !{!3878}
!3878 = !DISubrange(count: 19)
!3879 = !DIGlobalVariableExpression(var: !3880, expr: !DIExpression())
!3880 = distinct !DIGlobalVariable(name: "dfl_port_ops_list", scope: !2, file: !3, line: 153, type: !139, isLocal: true, isDefinition: true)
!3881 = !DIGlobalVariableExpression(var: !3882, expr: !DIExpression())
!3882 = distinct !DIGlobalVariable(name: "dfl_bus_type", scope: !2, file: !3, line: 331, type: !3242, isLocal: true, isDefinition: true)
!3883 = !DIGlobalVariableExpression(var: !3884, expr: !DIExpression())
!3884 = distinct !DIGlobalVariable(name: "dfl_dev_groups", scope: !2, file: !3, line: 329, type: !3885, isLocal: true, isDefinition: true)
!3885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 128, elements: !1431)
!3886 = !DIGlobalVariableExpression(var: !3887, expr: !DIExpression())
!3887 = distinct !DIGlobalVariable(name: "dfl_dev_group", scope: !2, file: !3, line: 329, type: !273, isLocal: true, isDefinition: true)
!3888 = !DIGlobalVariableExpression(var: !3889, expr: !DIExpression())
!3889 = distinct !DIGlobalVariable(name: "dfl_dev_attrs", scope: !2, file: !3, line: 324, type: !3890, isLocal: true, isDefinition: true)
!3890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !253, size: 192, elements: !218)
!3891 = !DIGlobalVariableExpression(var: !3892, expr: !DIExpression())
!3892 = distinct !DIGlobalVariable(name: "dev_attr_type", scope: !2, file: !3, line: 313, type: !3893, isLocal: true, isDefinition: true)
!3893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !60, line: 99, size: 256, elements: !3894)
!3894 = !{!3895, !3896, !3901}
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3893, file: !60, line: 100, baseType: !254, size: 128)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3893, file: !60, line: 101, baseType: !3897, size: 64, offset: 128)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 64)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{!248, !3184, !3900, !217}
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3893, file: !60, line: 103, baseType: !3902, size: 64, offset: 192)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{!248, !3184, !3900, !131, !264}
!3905 = !DIGlobalVariableExpression(var: !3906, expr: !DIExpression())
!3906 = distinct !DIGlobalVariable(name: "dev_attr_feature_id", scope: !2, file: !3, line: 322, type: !3893, isLocal: true, isDefinition: true)
!3907 = !DIGlobalVariableExpression(var: !3908, expr: !DIExpression())
!3908 = distinct !DIGlobalVariable(name: "dfl_device_ida", scope: !2, file: !3, line: 247, type: !3909, isLocal: true, isDefinition: true)
!3909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !3061, line: 244, size: 128, elements: !3910)
!3910 = !{!3911}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !3909, file: !3061, line: 245, baseType: !680, size: 128)
!3912 = !DIGlobalVariableExpression(var: !3913, expr: !DIExpression())
!3913 = distinct !DIGlobalVariable(name: "dfl_devs", scope: !2, file: !3, line: 61, type: !3914, isLocal: true, isDefinition: true)
!3914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3915, size: 768, elements: !1431)
!3915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_dev_info", file: !3, line: 53, size: 384, elements: !3916)
!3916 = !{!3917, !3918, !3919, !3920}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3915, file: !3, line: 54, baseType: !131, size: 64)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "dfh_id", scope: !3915, file: !3, line: 55, baseType: !801, size: 16, offset: 64)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3915, file: !3, line: 56, baseType: !3060, size: 192, offset: 128)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "devt_type", scope: !3915, file: !3, line: 57, baseType: !114, size: 32, offset: 320)
!3921 = !DIGlobalVariableExpression(var: !3922, expr: !DIExpression())
!3922 = distinct !DIGlobalVariable(name: "dfl_id_mutex", scope: !2, file: !3, line: 19, type: !1035, isLocal: true, isDefinition: true)
!3923 = !DIGlobalVariableExpression(var: !3924, expr: !DIExpression())
!3924 = distinct !DIGlobalVariable(name: "dfl_chrdevs", scope: !2, file: !3, line: 79, type: !3925, isLocal: true, isDefinition: true)
!3925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3926, size: 256, elements: !1431)
!3926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_chardev_info", file: !3, line: 73, size: 128, elements: !3927)
!3927 = !{!3928, !3929}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3926, file: !3, line: 74, baseType: !131, size: 64)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3926, file: !3, line: 75, baseType: !454, size: 32, offset: 64)
!3930 = !DIGlobalVariableExpression(var: !3931, expr: !DIExpression())
!3931 = distinct !DIGlobalVariable(name: "__key", scope: !3932, file: !3, line: 769, type: !586, isLocal: true, isDefinition: true)
!3932 = distinct !DISubprogram(name: "build_info_commit_dev", scope: !3, file: !3, line: 743, type: !3933, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{!149, !3935}
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "build_feature_devs_info", file: !3, line: 694, size: 704, elements: !3937)
!3937 = !{!3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3936, file: !3, line: 695, baseType: !3184, size: 64)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "cdev", scope: !3936, file: !3, line: 696, baseType: !3657, size: 64, offset: 64)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "nr_irqs", scope: !3936, file: !3, line: 697, baseType: !7, size: 32, offset: 128)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "irq_table", scope: !3936, file: !3, line: 698, baseType: !646, size: 64, offset: 192)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "feature_dev", scope: !3936, file: !3, line: 700, baseType: !150, size: 64, offset: 256)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "ioaddr", scope: !3936, file: !3, line: 701, baseType: !126, size: 64, offset: 320)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3936, file: !3, line: 702, baseType: !3621, size: 64, offset: 384)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3936, file: !3, line: 703, baseType: !3621, size: 64, offset: 448)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "sub_features", scope: !3936, file: !3, line: 704, baseType: !139, size: 128, offset: 512)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "feature_num", scope: !3936, file: !3, line: 705, baseType: !149, size: 32, offset: 640)
!3948 = !DIGlobalVariableExpression(var: !3949, expr: !DIExpression())
!3949 = distinct !DIGlobalVariable(name: "dfl_pdata_keys", scope: !2, file: !3, line: 39, type: !3950, isLocal: true, isDefinition: true)
!3950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, elements: !1431)
!3951 = !DIGlobalVariableExpression(var: !3952, expr: !DIExpression())
!3952 = distinct !DIGlobalVariable(name: "dfl_pdata_key_strings", scope: !2, file: !3, line: 41, type: !3953, isLocal: true, isDefinition: true)
!3953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 128, elements: !1431)
!3954 = !{!"rsp"}
!3955 = !{i32 7, !"Dwarf Version", i32 4}
!3956 = !{i32 2, !"Debug Info Version", i32 3}
!3957 = !{i32 1, !"wchar_size", i32 2}
!3958 = !{i32 1, !"Code Model", i32 2}
!3959 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!3960 = distinct !DISubprogram(name: "dfl_fpga_port_ops_get", scope: !3, file: !3, line: 162, type: !3961, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!3961 = !DISubroutineType(types: !3962)
!3962 = !{!127, !150}
!3963 = !DILocalVariable(name: "pdev", arg: 1, scope: !3960, file: !3, line: 162, type: !150)
!3964 = !DILocation(line: 162, column: 73, scope: !3960)
!3965 = !DILocalVariable(name: "ops", scope: !3960, file: !3, line: 164, type: !127)
!3966 = !DILocation(line: 164, column: 28, scope: !3960)
!3967 = !DILocation(line: 166, column: 2, scope: !3960)
!3968 = !DILocation(line: 167, column: 6, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 167, column: 6)
!3970 = !DILocation(line: 167, column: 6, scope: !3960)
!3971 = !DILocation(line: 168, column: 3, scope: !3969)
!3972 = !DILocalVariable(name: "__mptr", scope: !3973, file: !3, line: 170, type: !126)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 170, column: 2)
!3974 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 170, column: 2)
!3975 = !DILocation(line: 170, column: 2, scope: !3973)
!3976 = !DILocation(line: 170, column: 2, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 170, column: 2)
!3978 = !DILocation(line: 170, column: 2, scope: !3974)
!3979 = !DILocation(line: 170, column: 2, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 170, column: 2)
!3981 = !DILocation(line: 172, column: 15, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 172, column: 7)
!3983 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 170, column: 53)
!3984 = !DILocation(line: 172, column: 21, scope: !3982)
!3985 = !DILocation(line: 172, column: 27, scope: !3982)
!3986 = !DILocation(line: 172, column: 32, scope: !3982)
!3987 = !DILocation(line: 172, column: 8, scope: !3982)
!3988 = !DILocation(line: 172, column: 7, scope: !3983)
!3989 = !DILocation(line: 173, column: 24, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 173, column: 8)
!3991 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 172, column: 39)
!3992 = !DILocation(line: 173, column: 29, scope: !3990)
!3993 = !DILocation(line: 173, column: 9, scope: !3990)
!3994 = !DILocation(line: 173, column: 8, scope: !3991)
!3995 = !DILocation(line: 174, column: 9, scope: !3990)
!3996 = !DILocation(line: 174, column: 5, scope: !3990)
!3997 = !DILocation(line: 175, column: 4, scope: !3991)
!3998 = !DILocation(line: 177, column: 2, scope: !3983)
!3999 = !DILocalVariable(name: "__mptr", scope: !4000, file: !3, line: 170, type: !126)
!4000 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 170, column: 2)
!4001 = !DILocation(line: 170, column: 2, scope: !4000)
!4002 = !DILocation(line: 170, column: 2, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 170, column: 2)
!4004 = distinct !{!4004, !3978, !4005}
!4005 = !DILocation(line: 177, column: 2, scope: !3974)
!4006 = !DILocation(line: 179, column: 6, scope: !3960)
!4007 = !DILocation(line: 179, column: 2, scope: !3960)
!4008 = !DILabel(scope: !3960, name: "done", file: !3, line: 180)
!4009 = !DILocation(line: 180, column: 1, scope: !3960)
!4010 = !DILocation(line: 181, column: 2, scope: !3960)
!4011 = !DILocation(line: 182, column: 9, scope: !3960)
!4012 = !DILocation(line: 182, column: 2, scope: !3960)
!4013 = distinct !DISubprogram(name: "list_empty", scope: !4014, file: !4014, line: 280, type: !4015, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4014 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!149, !4017}
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !139)
!4019 = !DILocalVariable(name: "head", arg: 1, scope: !4013, file: !4014, line: 280, type: !4017)
!4020 = !DILocation(line: 280, column: 54, scope: !4013)
!4021 = !DILocation(line: 282, column: 9, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4013, file: !4014, line: 282, column: 9)
!4023 = !DILocation(line: 282, column: 9, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4022, file: !4014, line: 282, column: 9)
!4025 = !DILocation(line: 282, column: 34, scope: !4013)
!4026 = !DILocation(line: 282, column: 31, scope: !4013)
!4027 = !DILocation(line: 282, column: 2, scope: !4013)
!4028 = distinct !DISubprogram(name: "try_module_get", scope: !4029, file: !4029, line: 751, type: !4030, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4029 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!4030 = !DISubroutineType(types: !4031)
!4031 = !{!157, !135}
!4032 = !DILocalVariable(name: "module", arg: 1, scope: !4028, file: !4029, line: 751, type: !135)
!4033 = !DILocation(line: 751, column: 50, scope: !4028)
!4034 = !DILocation(line: 753, column: 2, scope: !4028)
!4035 = distinct !DISubprogram(name: "dfl_fpga_port_ops_put", scope: !3, file: !3, line: 190, type: !4036, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4036 = !DISubroutineType(types: !4037)
!4037 = !{null, !127}
!4038 = !DILocalVariable(name: "ops", arg: 1, scope: !4035, file: !3, line: 190, type: !127)
!4039 = !DILocation(line: 190, column: 54, scope: !4035)
!4040 = !DILocation(line: 192, column: 6, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 192, column: 6)
!4042 = !DILocation(line: 192, column: 10, scope: !4041)
!4043 = !DILocation(line: 192, column: 13, scope: !4041)
!4044 = !DILocation(line: 192, column: 18, scope: !4041)
!4045 = !DILocation(line: 192, column: 6, scope: !4035)
!4046 = !DILocation(line: 193, column: 14, scope: !4041)
!4047 = !DILocation(line: 193, column: 19, scope: !4041)
!4048 = !DILocation(line: 193, column: 3, scope: !4041)
!4049 = !DILocation(line: 194, column: 1, scope: !4035)
!4050 = distinct !DISubprogram(name: "module_put", scope: !4029, file: !4029, line: 756, type: !4051, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{null, !135}
!4053 = !DILocalVariable(name: "module", arg: 1, scope: !4050, file: !4029, line: 756, type: !135)
!4054 = !DILocation(line: 756, column: 46, scope: !4050)
!4055 = !DILocation(line: 758, column: 1, scope: !4050)
!4056 = distinct !DISubprogram(name: "dfl_fpga_port_ops_add", scope: !3, file: !3, line: 201, type: !4036, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4057 = !DILocalVariable(name: "ops", arg: 1, scope: !4056, file: !3, line: 201, type: !127)
!4058 = !DILocation(line: 201, column: 54, scope: !4056)
!4059 = !DILocation(line: 203, column: 2, scope: !4056)
!4060 = !DILocation(line: 204, column: 17, scope: !4056)
!4061 = !DILocation(line: 204, column: 22, scope: !4056)
!4062 = !DILocation(line: 204, column: 2, scope: !4056)
!4063 = !DILocation(line: 205, column: 2, scope: !4056)
!4064 = !DILocation(line: 206, column: 1, scope: !4056)
!4065 = distinct !DISubprogram(name: "list_add_tail", scope: !4014, file: !4014, line: 98, type: !4066, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{null, !143, !143}
!4068 = !DILocalVariable(name: "new", arg: 1, scope: !4065, file: !4014, line: 98, type: !143)
!4069 = !DILocation(line: 98, column: 52, scope: !4065)
!4070 = !DILocalVariable(name: "head", arg: 2, scope: !4065, file: !4014, line: 98, type: !143)
!4071 = !DILocation(line: 98, column: 75, scope: !4065)
!4072 = !DILocation(line: 100, column: 13, scope: !4065)
!4073 = !DILocation(line: 100, column: 18, scope: !4065)
!4074 = !DILocation(line: 100, column: 24, scope: !4065)
!4075 = !DILocation(line: 100, column: 30, scope: !4065)
!4076 = !DILocation(line: 100, column: 2, scope: !4065)
!4077 = !DILocation(line: 101, column: 1, scope: !4065)
!4078 = distinct !DISubprogram(name: "dfl_fpga_port_ops_del", scope: !3, file: !3, line: 213, type: !4036, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4079 = !DILocalVariable(name: "ops", arg: 1, scope: !4078, file: !3, line: 213, type: !127)
!4080 = !DILocation(line: 213, column: 54, scope: !4078)
!4081 = !DILocation(line: 215, column: 2, scope: !4078)
!4082 = !DILocation(line: 216, column: 12, scope: !4078)
!4083 = !DILocation(line: 216, column: 17, scope: !4078)
!4084 = !DILocation(line: 216, column: 2, scope: !4078)
!4085 = !DILocation(line: 217, column: 2, scope: !4078)
!4086 = !DILocation(line: 218, column: 1, scope: !4078)
!4087 = distinct !DISubprogram(name: "list_del", scope: !4014, file: !4014, line: 144, type: !4088, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4088 = !DISubroutineType(types: !4089)
!4089 = !{null, !143}
!4090 = !DILocalVariable(name: "entry", arg: 1, scope: !4087, file: !4014, line: 144, type: !143)
!4091 = !DILocation(line: 144, column: 47, scope: !4087)
!4092 = !DILocation(line: 146, column: 19, scope: !4087)
!4093 = !DILocation(line: 146, column: 2, scope: !4087)
!4094 = !DILocation(line: 147, column: 2, scope: !4087)
!4095 = !DILocation(line: 147, column: 9, scope: !4087)
!4096 = !DILocation(line: 147, column: 14, scope: !4087)
!4097 = !DILocation(line: 148, column: 2, scope: !4087)
!4098 = !DILocation(line: 148, column: 9, scope: !4087)
!4099 = !DILocation(line: 148, column: 14, scope: !4087)
!4100 = !DILocation(line: 149, column: 1, scope: !4087)
!4101 = distinct !DISubprogram(name: "dfl_fpga_check_port_id", scope: !3, file: !3, line: 228, type: !4102, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4102 = !DISubroutineType(types: !4103)
!4103 = !{!149, !150, !126}
!4104 = !DILocalVariable(name: "pdev", arg: 1, scope: !4101, file: !3, line: 228, type: !150)
!4105 = !DILocation(line: 228, column: 52, scope: !4101)
!4106 = !DILocalVariable(name: "pport_id", arg: 2, scope: !4101, file: !3, line: 228, type: !126)
!4107 = !DILocation(line: 228, column: 64, scope: !4101)
!4108 = !DILocalVariable(name: "pdata", scope: !4101, file: !3, line: 230, type: !3649)
!4109 = !DILocation(line: 230, column: 36, scope: !4101)
!4110 = !DILocation(line: 230, column: 62, scope: !4101)
!4111 = !DILocation(line: 230, column: 68, scope: !4101)
!4112 = !DILocation(line: 230, column: 44, scope: !4101)
!4113 = !DILocalVariable(name: "port_ops", scope: !4101, file: !3, line: 231, type: !127)
!4114 = !DILocation(line: 231, column: 28, scope: !4101)
!4115 = !DILocation(line: 233, column: 6, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 233, column: 6)
!4117 = !DILocation(line: 233, column: 13, scope: !4116)
!4118 = !DILocation(line: 233, column: 16, scope: !4116)
!4119 = !DILocation(line: 233, column: 6, scope: !4101)
!4120 = !DILocation(line: 234, column: 10, scope: !4116)
!4121 = !DILocation(line: 234, column: 17, scope: !4116)
!4122 = !DILocation(line: 234, column: 31, scope: !4116)
!4123 = !DILocation(line: 234, column: 24, scope: !4116)
!4124 = !DILocation(line: 234, column: 23, scope: !4116)
!4125 = !DILocation(line: 234, column: 20, scope: !4116)
!4126 = !DILocation(line: 234, column: 3, scope: !4116)
!4127 = !DILocation(line: 236, column: 35, scope: !4101)
!4128 = !DILocation(line: 236, column: 13, scope: !4101)
!4129 = !DILocation(line: 236, column: 11, scope: !4101)
!4130 = !DILocation(line: 237, column: 7, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 237, column: 6)
!4132 = !DILocation(line: 237, column: 16, scope: !4131)
!4133 = !DILocation(line: 237, column: 20, scope: !4131)
!4134 = !DILocation(line: 237, column: 30, scope: !4131)
!4135 = !DILocation(line: 237, column: 6, scope: !4101)
!4136 = !DILocation(line: 238, column: 3, scope: !4131)
!4137 = !DILocation(line: 240, column: 14, scope: !4101)
!4138 = !DILocation(line: 240, column: 24, scope: !4101)
!4139 = !DILocation(line: 240, column: 31, scope: !4101)
!4140 = !DILocation(line: 240, column: 2, scope: !4101)
!4141 = !DILocation(line: 240, column: 9, scope: !4101)
!4142 = !DILocation(line: 240, column: 12, scope: !4101)
!4143 = !DILocation(line: 241, column: 24, scope: !4101)
!4144 = !DILocation(line: 241, column: 2, scope: !4101)
!4145 = !DILocation(line: 243, column: 9, scope: !4101)
!4146 = !DILocation(line: 243, column: 16, scope: !4101)
!4147 = !DILocation(line: 243, column: 30, scope: !4101)
!4148 = !DILocation(line: 243, column: 23, scope: !4101)
!4149 = !DILocation(line: 243, column: 22, scope: !4101)
!4150 = !DILocation(line: 243, column: 19, scope: !4101)
!4151 = !DILocation(line: 243, column: 2, scope: !4101)
!4152 = !DILocation(line: 244, column: 1, scope: !4101)
!4153 = distinct !DISubprogram(name: "dev_get_platdata", scope: !60, file: !60, line: 828, type: !4154, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4154 = !DISubroutineType(types: !4155)
!4155 = !{!126, !3503}
!4156 = !DILocalVariable(name: "dev", arg: 1, scope: !4153, file: !60, line: 828, type: !3503)
!4157 = !DILocation(line: 828, column: 59, scope: !4153)
!4158 = !DILocation(line: 830, column: 9, scope: !4153)
!4159 = !DILocation(line: 830, column: 14, scope: !4153)
!4160 = !DILocation(line: 830, column: 2, scope: !4153)
!4161 = distinct !DISubprogram(name: "__dfl_driver_register", scope: !3, file: !3, line: 470, type: !4162, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4162 = !DISubroutineType(types: !4163)
!4163 = !{!149, !3815, !135}
!4164 = !DILocalVariable(name: "dfl_drv", arg: 1, scope: !4161, file: !3, line: 470, type: !3815)
!4165 = !DILocation(line: 470, column: 46, scope: !4161)
!4166 = !DILocalVariable(name: "owner", arg: 2, scope: !4161, file: !3, line: 470, type: !135)
!4167 = !DILocation(line: 470, column: 70, scope: !4161)
!4168 = !DILocation(line: 472, column: 7, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 472, column: 6)
!4170 = !DILocation(line: 472, column: 15, scope: !4169)
!4171 = !DILocation(line: 472, column: 19, scope: !4169)
!4172 = !DILocation(line: 472, column: 28, scope: !4169)
!4173 = !DILocation(line: 472, column: 34, scope: !4169)
!4174 = !DILocation(line: 472, column: 38, scope: !4169)
!4175 = !DILocation(line: 472, column: 47, scope: !4169)
!4176 = !DILocation(line: 472, column: 6, scope: !4161)
!4177 = !DILocation(line: 473, column: 3, scope: !4169)
!4178 = !DILocation(line: 475, column: 23, scope: !4161)
!4179 = !DILocation(line: 475, column: 2, scope: !4161)
!4180 = !DILocation(line: 475, column: 11, scope: !4161)
!4181 = !DILocation(line: 475, column: 15, scope: !4161)
!4182 = !DILocation(line: 475, column: 21, scope: !4161)
!4183 = !DILocation(line: 476, column: 2, scope: !4161)
!4184 = !DILocation(line: 476, column: 11, scope: !4161)
!4185 = !DILocation(line: 476, column: 15, scope: !4161)
!4186 = !DILocation(line: 476, column: 19, scope: !4161)
!4187 = !DILocation(line: 478, column: 26, scope: !4161)
!4188 = !DILocation(line: 478, column: 35, scope: !4161)
!4189 = !DILocation(line: 478, column: 9, scope: !4161)
!4190 = !DILocation(line: 478, column: 2, scope: !4161)
!4191 = !DILocation(line: 479, column: 1, scope: !4161)
!4192 = distinct !DISubprogram(name: "dfl_driver_unregister", scope: !3, file: !3, line: 482, type: !4193, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{null, !3815}
!4195 = !DILocalVariable(name: "dfl_drv", arg: 1, scope: !4192, file: !3, line: 482, type: !3815)
!4196 = !DILocation(line: 482, column: 47, scope: !4192)
!4197 = !DILocation(line: 484, column: 21, scope: !4192)
!4198 = !DILocation(line: 484, column: 30, scope: !4192)
!4199 = !DILocation(line: 484, column: 2, scope: !4192)
!4200 = !DILocation(line: 485, column: 1, scope: !4192)
!4201 = distinct !DISubprogram(name: "dfl_fpga_dev_feature_uinit", scope: !3, file: !3, line: 494, type: !4202, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{null, !150}
!4204 = !DILocalVariable(name: "pdev", arg: 1, scope: !4201, file: !3, line: 494, type: !150)
!4205 = !DILocation(line: 494, column: 57, scope: !4201)
!4206 = !DILocalVariable(name: "pdata", scope: !4201, file: !3, line: 496, type: !3649)
!4207 = !DILocation(line: 496, column: 36, scope: !4201)
!4208 = !DILocation(line: 496, column: 62, scope: !4201)
!4209 = !DILocation(line: 496, column: 68, scope: !4201)
!4210 = !DILocation(line: 496, column: 44, scope: !4201)
!4211 = !DILocalVariable(name: "feature", scope: !4201, file: !3, line: 497, type: !3780)
!4212 = !DILocation(line: 497, column: 22, scope: !4201)
!4213 = !DILocation(line: 499, column: 18, scope: !4201)
!4214 = !DILocation(line: 499, column: 2, scope: !4201)
!4215 = !DILocation(line: 501, column: 2, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 501, column: 2)
!4217 = !DILocation(line: 501, column: 2, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4216, file: !3, line: 501, column: 2)
!4219 = !DILocation(line: 502, column: 7, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 502, column: 7)
!4221 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 501, column: 48)
!4222 = !DILocation(line: 502, column: 16, scope: !4220)
!4223 = !DILocation(line: 502, column: 7, scope: !4221)
!4224 = !DILocation(line: 503, column: 8, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 503, column: 8)
!4226 = distinct !DILexicalBlock(scope: !4220, file: !3, line: 502, column: 21)
!4227 = !DILocation(line: 503, column: 17, scope: !4225)
!4228 = !DILocation(line: 503, column: 22, scope: !4225)
!4229 = !DILocation(line: 503, column: 8, scope: !4226)
!4230 = !DILocation(line: 504, column: 5, scope: !4225)
!4231 = !DILocation(line: 504, column: 14, scope: !4225)
!4232 = !DILocation(line: 504, column: 19, scope: !4225)
!4233 = !DILocation(line: 504, column: 25, scope: !4225)
!4234 = !DILocation(line: 504, column: 31, scope: !4225)
!4235 = !DILocation(line: 505, column: 4, scope: !4226)
!4236 = !DILocation(line: 505, column: 13, scope: !4226)
!4237 = !DILocation(line: 505, column: 17, scope: !4226)
!4238 = !DILocation(line: 506, column: 3, scope: !4226)
!4239 = !DILocation(line: 507, column: 2, scope: !4221)
!4240 = distinct !{!4240, !4215, !4241}
!4241 = !DILocation(line: 507, column: 2, scope: !4216)
!4242 = !DILocation(line: 508, column: 1, scope: !4201)
!4243 = distinct !DISubprogram(name: "dfl_devs_remove", scope: !3, file: !3, line: 427, type: !4244, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{null, !3649}
!4246 = !DILocalVariable(name: "pdata", arg: 1, scope: !4243, file: !3, line: 427, type: !3649)
!4247 = !DILocation(line: 427, column: 63, scope: !4243)
!4248 = !DILocalVariable(name: "feature", scope: !4243, file: !3, line: 429, type: !3780)
!4249 = !DILocation(line: 429, column: 22, scope: !4243)
!4250 = !DILocation(line: 431, column: 2, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 431, column: 2)
!4252 = !DILocation(line: 431, column: 2, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 431, column: 2)
!4254 = !DILocation(line: 432, column: 7, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 432, column: 7)
!4256 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 431, column: 48)
!4257 = !DILocation(line: 432, column: 16, scope: !4255)
!4258 = !DILocation(line: 432, column: 7, scope: !4256)
!4259 = !DILocation(line: 433, column: 23, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 432, column: 22)
!4261 = !DILocation(line: 433, column: 32, scope: !4260)
!4262 = !DILocation(line: 433, column: 38, scope: !4260)
!4263 = !DILocation(line: 433, column: 4, scope: !4260)
!4264 = !DILocation(line: 434, column: 4, scope: !4260)
!4265 = !DILocation(line: 434, column: 13, scope: !4260)
!4266 = !DILocation(line: 434, column: 18, scope: !4260)
!4267 = !DILocation(line: 435, column: 3, scope: !4260)
!4268 = !DILocation(line: 436, column: 2, scope: !4256)
!4269 = distinct !{!4269, !4250, !4270}
!4270 = !DILocation(line: 436, column: 2, scope: !4251)
!4271 = !DILocation(line: 437, column: 1, scope: !4243)
!4272 = distinct !DISubprogram(name: "dfl_fpga_dev_feature_init", scope: !3, file: !3, line: 568, type: !4273, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{!149, !150, !4275}
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_feature_driver", file: !109, line: 209, size: 128, elements: !4277)
!4277 = !{!4278, !4284}
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4276, file: !109, line: 210, baseType: !4279, size: 64)
!4279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4280, size: 64)
!4280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4281)
!4281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_feature_id", file: !109, line: 199, size: 16, elements: !4282)
!4282 = !{!4283}
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4281, file: !109, line: 200, baseType: !801, size: 16)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4276, file: !109, line: 211, baseType: !3772, size: 64, offset: 64)
!4285 = !DILocalVariable(name: "pdev", arg: 1, scope: !4272, file: !3, line: 568, type: !150)
!4286 = !DILocation(line: 568, column: 55, scope: !4272)
!4287 = !DILocalVariable(name: "feature_drvs", arg: 2, scope: !4272, file: !3, line: 569, type: !4275)
!4288 = !DILocation(line: 569, column: 37, scope: !4272)
!4289 = !DILocalVariable(name: "pdata", scope: !4272, file: !3, line: 571, type: !3649)
!4290 = !DILocation(line: 571, column: 36, scope: !4272)
!4291 = !DILocation(line: 571, column: 62, scope: !4272)
!4292 = !DILocation(line: 571, column: 68, scope: !4272)
!4293 = !DILocation(line: 571, column: 44, scope: !4272)
!4294 = !DILocalVariable(name: "drv", scope: !4272, file: !3, line: 572, type: !4275)
!4295 = !DILocation(line: 572, column: 29, scope: !4272)
!4296 = !DILocation(line: 572, column: 35, scope: !4272)
!4297 = !DILocalVariable(name: "feature", scope: !4272, file: !3, line: 573, type: !3780)
!4298 = !DILocation(line: 573, column: 22, scope: !4272)
!4299 = !DILocalVariable(name: "ret", scope: !4272, file: !3, line: 574, type: !149)
!4300 = !DILocation(line: 574, column: 6, scope: !4272)
!4301 = !DILocation(line: 576, column: 2, scope: !4272)
!4302 = !DILocation(line: 576, column: 9, scope: !4272)
!4303 = !DILocation(line: 576, column: 14, scope: !4272)
!4304 = !DILocation(line: 577, column: 3, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !3, line: 577, column: 3)
!4306 = distinct !DILexicalBlock(scope: !4272, file: !3, line: 576, column: 19)
!4307 = !DILocation(line: 577, column: 3, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 577, column: 3)
!4309 = !DILocation(line: 578, column: 30, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 578, column: 8)
!4311 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 577, column: 49)
!4312 = !DILocation(line: 578, column: 39, scope: !4310)
!4313 = !DILocation(line: 578, column: 8, scope: !4310)
!4314 = !DILocation(line: 578, column: 8, scope: !4311)
!4315 = !DILocation(line: 579, column: 37, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 578, column: 45)
!4317 = !DILocation(line: 579, column: 43, scope: !4316)
!4318 = !DILocation(line: 580, column: 9, scope: !4316)
!4319 = !DILocation(line: 580, column: 18, scope: !4316)
!4320 = !DILocation(line: 579, column: 11, scope: !4316)
!4321 = !DILocation(line: 579, column: 9, scope: !4316)
!4322 = !DILocation(line: 581, column: 9, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 581, column: 9)
!4324 = !DILocation(line: 581, column: 9, scope: !4316)
!4325 = !DILocation(line: 582, column: 6, scope: !4323)
!4326 = !DILocation(line: 583, column: 4, scope: !4316)
!4327 = !DILocation(line: 584, column: 3, scope: !4311)
!4328 = distinct !{!4328, !4304, !4329}
!4329 = !DILocation(line: 584, column: 3, scope: !4305)
!4330 = !DILocation(line: 585, column: 6, scope: !4306)
!4331 = distinct !{!4331, !4301, !4332}
!4332 = !DILocation(line: 586, column: 2, scope: !4272)
!4333 = !DILocation(line: 588, column: 21, scope: !4272)
!4334 = !DILocation(line: 588, column: 8, scope: !4272)
!4335 = !DILocation(line: 588, column: 6, scope: !4272)
!4336 = !DILocation(line: 589, column: 6, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4272, file: !3, line: 589, column: 6)
!4338 = !DILocation(line: 589, column: 6, scope: !4272)
!4339 = !DILocation(line: 590, column: 3, scope: !4337)
!4340 = !DILocation(line: 592, column: 2, scope: !4272)
!4341 = !DILabel(scope: !4272, name: "exit", file: !3, line: 593)
!4342 = !DILocation(line: 593, column: 1, scope: !4272)
!4343 = !DILocation(line: 594, column: 29, scope: !4272)
!4344 = !DILocation(line: 594, column: 2, scope: !4272)
!4345 = !DILocation(line: 595, column: 9, scope: !4272)
!4346 = !DILocation(line: 595, column: 2, scope: !4272)
!4347 = !DILocation(line: 596, column: 1, scope: !4272)
!4348 = distinct !DISubprogram(name: "dfl_feature_drv_match", scope: !3, file: !3, line: 543, type: !4349, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4349 = !DISubroutineType(types: !4350)
!4350 = !{!157, !3780, !4275}
!4351 = !DILocalVariable(name: "feature", arg: 1, scope: !4348, file: !3, line: 543, type: !3780)
!4352 = !DILocation(line: 543, column: 55, scope: !4348)
!4353 = !DILocalVariable(name: "driver", arg: 2, scope: !4348, file: !3, line: 544, type: !4275)
!4354 = !DILocation(line: 544, column: 34, scope: !4348)
!4355 = !DILocalVariable(name: "ids", scope: !4348, file: !3, line: 546, type: !4279)
!4356 = !DILocation(line: 546, column: 31, scope: !4348)
!4357 = !DILocation(line: 546, column: 37, scope: !4348)
!4358 = !DILocation(line: 546, column: 45, scope: !4348)
!4359 = !DILocation(line: 548, column: 6, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4348, file: !3, line: 548, column: 6)
!4361 = !DILocation(line: 548, column: 6, scope: !4348)
!4362 = !DILocation(line: 549, column: 3, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 548, column: 11)
!4364 = !DILocation(line: 549, column: 10, scope: !4363)
!4365 = !DILocation(line: 549, column: 15, scope: !4363)
!4366 = !DILocation(line: 550, column: 8, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 550, column: 8)
!4368 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 549, column: 19)
!4369 = !DILocation(line: 550, column: 13, scope: !4367)
!4370 = !DILocation(line: 550, column: 19, scope: !4367)
!4371 = !DILocation(line: 550, column: 28, scope: !4367)
!4372 = !DILocation(line: 550, column: 16, scope: !4367)
!4373 = !DILocation(line: 550, column: 8, scope: !4368)
!4374 = !DILocation(line: 551, column: 5, scope: !4367)
!4375 = !DILocation(line: 552, column: 7, scope: !4368)
!4376 = distinct !{!4376, !4362, !4377}
!4377 = !DILocation(line: 553, column: 3, scope: !4363)
!4378 = !DILocation(line: 554, column: 2, scope: !4363)
!4379 = !DILocation(line: 555, column: 2, scope: !4348)
!4380 = !DILocation(line: 556, column: 1, scope: !4348)
!4381 = distinct !DISubprogram(name: "dfl_feature_instance_init", scope: !3, file: !3, line: 511, type: !4382, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4382 = !DISubroutineType(types: !4383)
!4383 = !{!149, !150, !3649, !3780, !4275}
!4384 = !DILocalVariable(name: "pdev", arg: 1, scope: !4381, file: !3, line: 511, type: !150)
!4385 = !DILocation(line: 511, column: 62, scope: !4381)
!4386 = !DILocalVariable(name: "pdata", arg: 2, scope: !4381, file: !3, line: 512, type: !3649)
!4387 = !DILocation(line: 512, column: 44, scope: !4381)
!4388 = !DILocalVariable(name: "feature", arg: 3, scope: !4381, file: !3, line: 513, type: !3780)
!4389 = !DILocation(line: 513, column: 30, scope: !4381)
!4390 = !DILocalVariable(name: "drv", arg: 4, scope: !4381, file: !3, line: 514, type: !4275)
!4391 = !DILocation(line: 514, column: 37, scope: !4381)
!4392 = !DILocalVariable(name: "base", scope: !4381, file: !3, line: 516, type: !126)
!4393 = !DILocation(line: 516, column: 16, scope: !4381)
!4394 = !DILocalVariable(name: "ret", scope: !4381, file: !3, line: 517, type: !149)
!4395 = !DILocation(line: 517, column: 6, scope: !4381)
!4396 = !DILocation(line: 519, column: 7, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 519, column: 6)
!4398 = !DILocation(line: 519, column: 6, scope: !4381)
!4399 = !DILocation(line: 520, column: 41, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 519, column: 35)
!4401 = !DILocation(line: 521, column: 13, scope: !4400)
!4402 = !DILocation(line: 521, column: 22, scope: !4400)
!4403 = !DILocation(line: 520, column: 10, scope: !4400)
!4404 = !DILocation(line: 520, column: 8, scope: !4400)
!4405 = !DILocation(line: 522, column: 14, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 522, column: 7)
!4407 = !DILocation(line: 522, column: 7, scope: !4406)
!4408 = !DILocation(line: 522, column: 7, scope: !4400)
!4409 = !DILocation(line: 523, column: 4, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 522, column: 21)
!4411 = !DILocation(line: 526, column: 19, scope: !4410)
!4412 = !DILocation(line: 526, column: 11, scope: !4410)
!4413 = !DILocation(line: 526, column: 4, scope: !4410)
!4414 = !DILocation(line: 529, column: 21, scope: !4400)
!4415 = !DILocation(line: 529, column: 3, scope: !4400)
!4416 = !DILocation(line: 529, column: 12, scope: !4400)
!4417 = !DILocation(line: 529, column: 19, scope: !4400)
!4418 = !DILocation(line: 530, column: 2, scope: !4400)
!4419 = !DILocation(line: 532, column: 6, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 532, column: 6)
!4421 = !DILocation(line: 532, column: 11, scope: !4420)
!4422 = !DILocation(line: 532, column: 16, scope: !4420)
!4423 = !DILocation(line: 532, column: 6, scope: !4381)
!4424 = !DILocation(line: 533, column: 9, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 532, column: 22)
!4426 = !DILocation(line: 533, column: 14, scope: !4425)
!4427 = !DILocation(line: 533, column: 19, scope: !4425)
!4428 = !DILocation(line: 533, column: 24, scope: !4425)
!4429 = !DILocation(line: 533, column: 30, scope: !4425)
!4430 = !DILocation(line: 533, column: 7, scope: !4425)
!4431 = !DILocation(line: 534, column: 7, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 534, column: 7)
!4433 = !DILocation(line: 534, column: 7, scope: !4425)
!4434 = !DILocation(line: 535, column: 11, scope: !4432)
!4435 = !DILocation(line: 535, column: 4, scope: !4432)
!4436 = !DILocation(line: 536, column: 2, scope: !4425)
!4437 = !DILocation(line: 538, column: 17, scope: !4381)
!4438 = !DILocation(line: 538, column: 22, scope: !4381)
!4439 = !DILocation(line: 538, column: 2, scope: !4381)
!4440 = !DILocation(line: 538, column: 11, scope: !4381)
!4441 = !DILocation(line: 538, column: 15, scope: !4381)
!4442 = !DILocation(line: 540, column: 9, scope: !4381)
!4443 = !DILocation(line: 540, column: 2, scope: !4381)
!4444 = !DILocation(line: 541, column: 1, scope: !4381)
!4445 = distinct !DISubprogram(name: "dfl_devs_add", scope: !3, file: !3, line: 439, type: !4446, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{!149, !3649}
!4448 = !DILocalVariable(name: "pdata", arg: 1, scope: !4445, file: !3, line: 439, type: !3649)
!4449 = !DILocation(line: 439, column: 59, scope: !4445)
!4450 = !DILocalVariable(name: "feature", scope: !4445, file: !3, line: 441, type: !3780)
!4451 = !DILocation(line: 441, column: 22, scope: !4445)
!4452 = !DILocalVariable(name: "ddev", scope: !4445, file: !3, line: 442, type: !3790)
!4453 = !DILocation(line: 442, column: 21, scope: !4445)
!4454 = !DILocalVariable(name: "ret", scope: !4445, file: !3, line: 443, type: !149)
!4455 = !DILocation(line: 443, column: 6, scope: !4445)
!4456 = !DILocation(line: 445, column: 2, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 445, column: 2)
!4458 = !DILocation(line: 445, column: 2, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 445, column: 2)
!4460 = !DILocation(line: 446, column: 7, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 446, column: 7)
!4462 = distinct !DILexicalBlock(scope: !4459, file: !3, line: 445, column: 48)
!4463 = !DILocation(line: 446, column: 16, scope: !4461)
!4464 = !DILocation(line: 446, column: 7, scope: !4462)
!4465 = !DILocation(line: 447, column: 4, scope: !4461)
!4466 = !DILocation(line: 449, column: 7, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 449, column: 7)
!4468 = !DILocation(line: 449, column: 16, scope: !4467)
!4469 = !DILocation(line: 449, column: 7, scope: !4462)
!4470 = !DILocation(line: 450, column: 8, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 449, column: 22)
!4472 = !DILocation(line: 451, column: 4, scope: !4471)
!4473 = !DILocation(line: 454, column: 22, scope: !4462)
!4474 = !DILocation(line: 454, column: 29, scope: !4462)
!4475 = !DILocation(line: 454, column: 10, scope: !4462)
!4476 = !DILocation(line: 454, column: 8, scope: !4462)
!4477 = !DILocation(line: 455, column: 14, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 455, column: 7)
!4479 = !DILocation(line: 455, column: 7, scope: !4478)
!4480 = !DILocation(line: 455, column: 7, scope: !4462)
!4481 = !DILocation(line: 456, column: 18, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 455, column: 21)
!4483 = !DILocation(line: 456, column: 10, scope: !4482)
!4484 = !DILocation(line: 456, column: 8, scope: !4482)
!4485 = !DILocation(line: 457, column: 4, scope: !4482)
!4486 = !DILocation(line: 460, column: 19, scope: !4462)
!4487 = !DILocation(line: 460, column: 3, scope: !4462)
!4488 = !DILocation(line: 460, column: 12, scope: !4462)
!4489 = !DILocation(line: 460, column: 17, scope: !4462)
!4490 = !DILocation(line: 461, column: 2, scope: !4462)
!4491 = distinct !{!4491, !4456, !4492}
!4492 = !DILocation(line: 461, column: 2, scope: !4457)
!4493 = !DILocation(line: 463, column: 2, scope: !4445)
!4494 = !DILabel(scope: !4445, name: "err", file: !3, line: 465)
!4495 = !DILocation(line: 465, column: 1, scope: !4445)
!4496 = !DILocation(line: 466, column: 18, scope: !4445)
!4497 = !DILocation(line: 466, column: 2, scope: !4445)
!4498 = !DILocation(line: 467, column: 9, scope: !4445)
!4499 = !DILocation(line: 467, column: 2, scope: !4445)
!4500 = !DILocation(line: 468, column: 1, scope: !4445)
!4501 = distinct !DISubprogram(name: "dfl_fpga_dev_ops_register", scope: !3, file: !3, line: 646, type: !4502, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4502 = !DISubroutineType(types: !4503)
!4503 = !{!149, !150, !2666, !135}
!4504 = !DILocalVariable(name: "pdev", arg: 1, scope: !4501, file: !3, line: 646, type: !150)
!4505 = !DILocation(line: 646, column: 55, scope: !4501)
!4506 = !DILocalVariable(name: "fops", arg: 2, scope: !4501, file: !3, line: 647, type: !2666)
!4507 = !DILocation(line: 647, column: 40, scope: !4501)
!4508 = !DILocalVariable(name: "owner", arg: 3, scope: !4501, file: !3, line: 648, type: !135)
!4509 = !DILocation(line: 648, column: 25, scope: !4501)
!4510 = !DILocalVariable(name: "pdata", scope: !4501, file: !3, line: 650, type: !3649)
!4511 = !DILocation(line: 650, column: 36, scope: !4501)
!4512 = !DILocation(line: 650, column: 62, scope: !4501)
!4513 = !DILocation(line: 650, column: 68, scope: !4501)
!4514 = !DILocation(line: 650, column: 44, scope: !4501)
!4515 = !DILocation(line: 652, column: 13, scope: !4501)
!4516 = !DILocation(line: 652, column: 20, scope: !4501)
!4517 = !DILocation(line: 652, column: 26, scope: !4501)
!4518 = !DILocation(line: 652, column: 2, scope: !4501)
!4519 = !DILocation(line: 653, column: 22, scope: !4501)
!4520 = !DILocation(line: 653, column: 2, scope: !4501)
!4521 = !DILocation(line: 653, column: 9, scope: !4501)
!4522 = !DILocation(line: 653, column: 14, scope: !4501)
!4523 = !DILocation(line: 653, column: 20, scope: !4501)
!4524 = !DILocation(line: 661, column: 29, scope: !4501)
!4525 = !DILocation(line: 661, column: 35, scope: !4501)
!4526 = !DILocation(line: 661, column: 39, scope: !4501)
!4527 = !DILocation(line: 661, column: 2, scope: !4501)
!4528 = !DILocation(line: 661, column: 9, scope: !4501)
!4529 = !DILocation(line: 661, column: 14, scope: !4501)
!4530 = !DILocation(line: 661, column: 19, scope: !4501)
!4531 = !DILocation(line: 661, column: 26, scope: !4501)
!4532 = !DILocation(line: 663, column: 19, scope: !4501)
!4533 = !DILocation(line: 663, column: 26, scope: !4501)
!4534 = !DILocation(line: 663, column: 32, scope: !4501)
!4535 = !DILocation(line: 663, column: 38, scope: !4501)
!4536 = !DILocation(line: 663, column: 42, scope: !4501)
!4537 = !DILocation(line: 663, column: 9, scope: !4501)
!4538 = !DILocation(line: 663, column: 2, scope: !4501)
!4539 = distinct !DISubprogram(name: "dfl_fpga_dev_ops_unregister", scope: !3, file: !3, line: 671, type: !4202, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4540 = !DILocalVariable(name: "pdev", arg: 1, scope: !4539, file: !3, line: 671, type: !150)
!4541 = !DILocation(line: 671, column: 58, scope: !4539)
!4542 = !DILocalVariable(name: "pdata", scope: !4539, file: !3, line: 673, type: !3649)
!4543 = !DILocation(line: 673, column: 36, scope: !4539)
!4544 = !DILocation(line: 673, column: 62, scope: !4539)
!4545 = !DILocation(line: 673, column: 68, scope: !4539)
!4546 = !DILocation(line: 673, column: 44, scope: !4539)
!4547 = !DILocation(line: 675, column: 12, scope: !4539)
!4548 = !DILocation(line: 675, column: 19, scope: !4539)
!4549 = !DILocation(line: 675, column: 2, scope: !4539)
!4550 = !DILocation(line: 676, column: 1, scope: !4539)
!4551 = distinct !DISubprogram(name: "dfl_fpga_enum_info_alloc", scope: !3, file: !3, line: 1246, type: !4552, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4552 = !DISubroutineType(types: !4553)
!4553 = !{!3845, !3184}
!4554 = !DILocalVariable(name: "dev", arg: 1, scope: !4551, file: !3, line: 1246, type: !3184)
!4555 = !DILocation(line: 1246, column: 68, scope: !4551)
!4556 = !DILocalVariable(name: "info", scope: !4551, file: !3, line: 1248, type: !3845)
!4557 = !DILocation(line: 1248, column: 29, scope: !4551)
!4558 = !DILocation(line: 1250, column: 13, scope: !4551)
!4559 = !DILocation(line: 1250, column: 2, scope: !4551)
!4560 = !DILocation(line: 1252, column: 22, scope: !4551)
!4561 = !DILocation(line: 1252, column: 9, scope: !4551)
!4562 = !DILocation(line: 1252, column: 7, scope: !4551)
!4563 = !DILocation(line: 1253, column: 7, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 1253, column: 6)
!4565 = !DILocation(line: 1253, column: 6, scope: !4551)
!4566 = !DILocation(line: 1254, column: 14, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 1253, column: 13)
!4568 = !DILocation(line: 1254, column: 3, scope: !4567)
!4569 = !DILocation(line: 1255, column: 3, scope: !4567)
!4570 = !DILocation(line: 1258, column: 14, scope: !4551)
!4571 = !DILocation(line: 1258, column: 2, scope: !4551)
!4572 = !DILocation(line: 1258, column: 8, scope: !4551)
!4573 = !DILocation(line: 1258, column: 12, scope: !4551)
!4574 = !DILocation(line: 1259, column: 18, scope: !4551)
!4575 = !DILocation(line: 1259, column: 24, scope: !4551)
!4576 = !DILocation(line: 1259, column: 2, scope: !4551)
!4577 = !DILocation(line: 1261, column: 9, scope: !4551)
!4578 = !DILocation(line: 1261, column: 2, scope: !4551)
!4579 = !DILocation(line: 1262, column: 1, scope: !4551)
!4580 = distinct !DISubprogram(name: "devm_kzalloc", scope: !60, file: !60, line: 215, type: !4581, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{!126, !3184, !264, !685}
!4583 = !DILocalVariable(name: "dev", arg: 1, scope: !4580, file: !60, line: 215, type: !3184)
!4584 = !DILocation(line: 215, column: 49, scope: !4580)
!4585 = !DILocalVariable(name: "size", arg: 2, scope: !4580, file: !60, line: 215, type: !264)
!4586 = !DILocation(line: 215, column: 61, scope: !4580)
!4587 = !DILocalVariable(name: "gfp", arg: 3, scope: !4580, file: !60, line: 215, type: !685)
!4588 = !DILocation(line: 215, column: 73, scope: !4580)
!4589 = !DILocation(line: 217, column: 22, scope: !4580)
!4590 = !DILocation(line: 217, column: 27, scope: !4580)
!4591 = !DILocation(line: 217, column: 33, scope: !4580)
!4592 = !DILocation(line: 217, column: 37, scope: !4580)
!4593 = !DILocation(line: 217, column: 9, scope: !4580)
!4594 = !DILocation(line: 217, column: 2, scope: !4580)
!4595 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !4014, file: !4014, line: 33, type: !4088, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4596 = !DILocalVariable(name: "list", arg: 1, scope: !4595, file: !4014, line: 33, type: !143)
!4597 = !DILocation(line: 33, column: 53, scope: !4595)
!4598 = !DILocation(line: 35, column: 2, scope: !4595)
!4599 = !DILocation(line: 35, column: 2, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4595, file: !4014, line: 35, column: 2)
!4601 = !DILocation(line: 35, column: 2, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4600, file: !4014, line: 35, column: 2)
!4603 = !DILocation(line: 35, column: 2, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4600, file: !4014, line: 35, column: 2)
!4605 = !DILocation(line: 36, column: 15, scope: !4595)
!4606 = !DILocation(line: 36, column: 2, scope: !4595)
!4607 = !DILocation(line: 36, column: 8, scope: !4595)
!4608 = !DILocation(line: 36, column: 13, scope: !4595)
!4609 = !DILocation(line: 37, column: 1, scope: !4595)
!4610 = distinct !DISubprogram(name: "dfl_fpga_enum_info_free", scope: !3, file: !3, line: 1265, type: !4611, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4611 = !DISubroutineType(types: !4612)
!4612 = !{null, !3845}
!4613 = !DILocalVariable(name: "info", arg: 1, scope: !4610, file: !3, line: 1265, type: !3845)
!4614 = !DILocation(line: 1265, column: 57, scope: !4610)
!4615 = !DILocalVariable(name: "tmp", scope: !4610, file: !3, line: 1267, type: !3643)
!4616 = !DILocation(line: 1267, column: 28, scope: !4610)
!4617 = !DILocalVariable(name: "dfl", scope: !4610, file: !3, line: 1267, type: !3643)
!4618 = !DILocation(line: 1267, column: 34, scope: !4610)
!4619 = !DILocalVariable(name: "dev", scope: !4610, file: !3, line: 1268, type: !3184)
!4620 = !DILocation(line: 1268, column: 17, scope: !4610)
!4621 = !DILocation(line: 1270, column: 7, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 1270, column: 6)
!4623 = !DILocation(line: 1270, column: 6, scope: !4610)
!4624 = !DILocation(line: 1271, column: 3, scope: !4622)
!4625 = !DILocation(line: 1273, column: 8, scope: !4610)
!4626 = !DILocation(line: 1273, column: 14, scope: !4610)
!4627 = !DILocation(line: 1273, column: 6, scope: !4610)
!4628 = !DILocalVariable(name: "__mptr", scope: !4629, file: !3, line: 1276, type: !126)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 1276, column: 2)
!4630 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 1276, column: 2)
!4631 = !DILocation(line: 1276, column: 2, scope: !4629)
!4632 = !DILocation(line: 1276, column: 2, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4629, file: !3, line: 1276, column: 2)
!4634 = !DILocation(line: 1276, column: 2, scope: !4630)
!4635 = !DILocalVariable(name: "__mptr", scope: !4636, file: !3, line: 1276, type: !126)
!4636 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 1276, column: 2)
!4637 = !DILocation(line: 1276, column: 2, scope: !4636)
!4638 = !DILocation(line: 1276, column: 2, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4636, file: !3, line: 1276, column: 2)
!4640 = !DILocation(line: 1276, column: 2, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 1276, column: 2)
!4642 = !DILocation(line: 1277, column: 13, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 1276, column: 56)
!4644 = !DILocation(line: 1277, column: 18, scope: !4643)
!4645 = !DILocation(line: 1277, column: 3, scope: !4643)
!4646 = !DILocation(line: 1278, column: 14, scope: !4643)
!4647 = !DILocation(line: 1278, column: 19, scope: !4643)
!4648 = !DILocation(line: 1278, column: 3, scope: !4643)
!4649 = !DILocation(line: 1279, column: 2, scope: !4643)
!4650 = !DILocalVariable(name: "__mptr", scope: !4651, file: !3, line: 1276, type: !126)
!4651 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 1276, column: 2)
!4652 = !DILocation(line: 1276, column: 2, scope: !4651)
!4653 = !DILocation(line: 1276, column: 2, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 1276, column: 2)
!4655 = distinct !{!4655, !4634, !4656}
!4656 = !DILocation(line: 1279, column: 2, scope: !4630)
!4657 = !DILocation(line: 1282, column: 6, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 1282, column: 6)
!4659 = !DILocation(line: 1282, column: 12, scope: !4658)
!4660 = !DILocation(line: 1282, column: 6, scope: !4610)
!4661 = !DILocation(line: 1283, column: 14, scope: !4658)
!4662 = !DILocation(line: 1283, column: 19, scope: !4658)
!4663 = !DILocation(line: 1283, column: 25, scope: !4658)
!4664 = !DILocation(line: 1283, column: 3, scope: !4658)
!4665 = !DILocation(line: 1285, column: 13, scope: !4610)
!4666 = !DILocation(line: 1285, column: 18, scope: !4610)
!4667 = !DILocation(line: 1285, column: 2, scope: !4610)
!4668 = !DILocation(line: 1286, column: 13, scope: !4610)
!4669 = !DILocation(line: 1286, column: 2, scope: !4610)
!4670 = !DILocation(line: 1287, column: 1, scope: !4610)
!4671 = distinct !DISubprogram(name: "dfl_fpga_enum_info_add_dfl", scope: !3, file: !3, line: 1303, type: !4672, scopeLine: 1305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{!149, !3845, !3621, !3621}
!4674 = !DILocalVariable(name: "info", arg: 1, scope: !4671, file: !3, line: 1303, type: !3845)
!4675 = !DILocation(line: 1303, column: 59, scope: !4671)
!4676 = !DILocalVariable(name: "start", arg: 2, scope: !4671, file: !3, line: 1304, type: !3621)
!4677 = !DILocation(line: 1304, column: 27, scope: !4671)
!4678 = !DILocalVariable(name: "len", arg: 3, scope: !4671, file: !3, line: 1304, type: !3621)
!4679 = !DILocation(line: 1304, column: 50, scope: !4671)
!4680 = !DILocalVariable(name: "dfl", scope: !4671, file: !3, line: 1306, type: !3643)
!4681 = !DILocation(line: 1306, column: 28, scope: !4671)
!4682 = !DILocation(line: 1308, column: 21, scope: !4671)
!4683 = !DILocation(line: 1308, column: 27, scope: !4671)
!4684 = !DILocation(line: 1308, column: 8, scope: !4671)
!4685 = !DILocation(line: 1308, column: 6, scope: !4671)
!4686 = !DILocation(line: 1309, column: 7, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 1309, column: 6)
!4688 = !DILocation(line: 1309, column: 6, scope: !4671)
!4689 = !DILocation(line: 1310, column: 3, scope: !4687)
!4690 = !DILocation(line: 1312, column: 15, scope: !4671)
!4691 = !DILocation(line: 1312, column: 2, scope: !4671)
!4692 = !DILocation(line: 1312, column: 7, scope: !4671)
!4693 = !DILocation(line: 1312, column: 13, scope: !4671)
!4694 = !DILocation(line: 1313, column: 13, scope: !4671)
!4695 = !DILocation(line: 1313, column: 2, scope: !4671)
!4696 = !DILocation(line: 1313, column: 7, scope: !4671)
!4697 = !DILocation(line: 1313, column: 11, scope: !4671)
!4698 = !DILocation(line: 1315, column: 17, scope: !4671)
!4699 = !DILocation(line: 1315, column: 22, scope: !4671)
!4700 = !DILocation(line: 1315, column: 29, scope: !4671)
!4701 = !DILocation(line: 1315, column: 35, scope: !4671)
!4702 = !DILocation(line: 1315, column: 2, scope: !4671)
!4703 = !DILocation(line: 1317, column: 2, scope: !4671)
!4704 = !DILocation(line: 1318, column: 1, scope: !4671)
!4705 = distinct !DISubprogram(name: "dfl_fpga_enum_info_add_irq", scope: !3, file: !3, line: 1340, type: !4706, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4706 = !DISubroutineType(types: !4707)
!4707 = !{!149, !3845, !7, !646}
!4708 = !DILocalVariable(name: "info", arg: 1, scope: !4705, file: !3, line: 1340, type: !3845)
!4709 = !DILocation(line: 1340, column: 59, scope: !4705)
!4710 = !DILocalVariable(name: "nr_irqs", arg: 2, scope: !4705, file: !3, line: 1341, type: !7)
!4711 = !DILocation(line: 1341, column: 24, scope: !4705)
!4712 = !DILocalVariable(name: "irq_table", arg: 3, scope: !4705, file: !3, line: 1341, type: !646)
!4713 = !DILocation(line: 1341, column: 38, scope: !4705)
!4714 = !DILocation(line: 1343, column: 7, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 1343, column: 6)
!4716 = !DILocation(line: 1343, column: 15, scope: !4715)
!4717 = !DILocation(line: 1343, column: 19, scope: !4715)
!4718 = !DILocation(line: 1343, column: 6, scope: !4705)
!4719 = !DILocation(line: 1344, column: 3, scope: !4715)
!4720 = !DILocation(line: 1346, column: 6, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 1346, column: 6)
!4722 = !DILocation(line: 1346, column: 12, scope: !4721)
!4723 = !DILocation(line: 1346, column: 6, scope: !4705)
!4724 = !DILocation(line: 1347, column: 3, scope: !4721)
!4725 = !DILocation(line: 1349, column: 33, scope: !4705)
!4726 = !DILocation(line: 1349, column: 39, scope: !4705)
!4727 = !DILocation(line: 1349, column: 44, scope: !4705)
!4728 = !DILocation(line: 1350, column: 26, scope: !4705)
!4729 = !DILocation(line: 1350, column: 24, scope: !4705)
!4730 = !DILocation(line: 1349, column: 20, scope: !4705)
!4731 = !DILocation(line: 1349, column: 2, scope: !4705)
!4732 = !DILocation(line: 1349, column: 8, scope: !4705)
!4733 = !DILocation(line: 1349, column: 18, scope: !4705)
!4734 = !DILocation(line: 1351, column: 7, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 1351, column: 6)
!4736 = !DILocation(line: 1351, column: 13, scope: !4735)
!4737 = !DILocation(line: 1351, column: 6, scope: !4705)
!4738 = !DILocation(line: 1352, column: 3, scope: !4735)
!4739 = !DILocation(line: 1354, column: 18, scope: !4705)
!4740 = !DILocation(line: 1354, column: 2, scope: !4705)
!4741 = !DILocation(line: 1354, column: 8, scope: !4705)
!4742 = !DILocation(line: 1354, column: 16, scope: !4705)
!4743 = !DILocation(line: 1356, column: 2, scope: !4705)
!4744 = !DILocation(line: 1357, column: 1, scope: !4705)
!4745 = !DILocalVariable(name: "info", arg: 1, scope: !3842, file: !3, line: 1389, type: !3845)
!4746 = !DILocation(line: 1389, column: 60, scope: !3842)
!4747 = !DILocalVariable(name: "binfo", scope: !3842, file: !3, line: 1391, type: !3935)
!4748 = !DILocation(line: 1391, column: 34, scope: !3842)
!4749 = !DILocalVariable(name: "dfl", scope: !3842, file: !3, line: 1392, type: !3643)
!4750 = !DILocation(line: 1392, column: 28, scope: !3842)
!4751 = !DILocalVariable(name: "cdev", scope: !3842, file: !3, line: 1393, type: !3657)
!4752 = !DILocation(line: 1393, column: 24, scope: !3842)
!4753 = !DILocalVariable(name: "ret", scope: !3842, file: !3, line: 1394, type: !149)
!4754 = !DILocation(line: 1394, column: 6, scope: !3842)
!4755 = !DILocation(line: 1396, column: 7, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 1396, column: 6)
!4757 = !DILocation(line: 1396, column: 13, scope: !4756)
!4758 = !DILocation(line: 1396, column: 6, scope: !3842)
!4759 = !DILocation(line: 1397, column: 10, scope: !4756)
!4760 = !DILocation(line: 1397, column: 3, scope: !4756)
!4761 = !DILocation(line: 1399, column: 22, scope: !3842)
!4762 = !DILocation(line: 1399, column: 28, scope: !3842)
!4763 = !DILocation(line: 1399, column: 9, scope: !3842)
!4764 = !DILocation(line: 1399, column: 7, scope: !3842)
!4765 = !DILocation(line: 1400, column: 7, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 1400, column: 6)
!4767 = !DILocation(line: 1400, column: 6, scope: !3842)
!4768 = !DILocation(line: 1401, column: 10, scope: !4766)
!4769 = !DILocation(line: 1401, column: 3, scope: !4766)
!4770 = !DILocation(line: 1403, column: 41, scope: !3842)
!4771 = !DILocation(line: 1403, column: 47, scope: !3842)
!4772 = !DILocation(line: 1403, column: 17, scope: !3842)
!4773 = !DILocation(line: 1403, column: 2, scope: !3842)
!4774 = !DILocation(line: 1403, column: 8, scope: !3842)
!4775 = !DILocation(line: 1403, column: 15, scope: !3842)
!4776 = !DILocation(line: 1404, column: 7, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 1404, column: 6)
!4778 = !DILocation(line: 1404, column: 13, scope: !4777)
!4779 = !DILocation(line: 1404, column: 6, scope: !3842)
!4780 = !DILocation(line: 1405, column: 7, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 1404, column: 21)
!4782 = !DILocation(line: 1406, column: 3, scope: !4781)
!4783 = !DILocation(line: 1409, column: 17, scope: !3842)
!4784 = !DILocation(line: 1409, column: 23, scope: !3842)
!4785 = !DILocation(line: 1409, column: 2, scope: !3842)
!4786 = !DILocation(line: 1409, column: 8, scope: !3842)
!4787 = !DILocation(line: 1409, column: 15, scope: !3842)
!4788 = !DILocation(line: 1410, column: 2, scope: !3842)
!4789 = !DILocation(line: 1410, column: 2, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 1410, column: 2)
!4791 = !DILocation(line: 1411, column: 18, scope: !3842)
!4792 = !DILocation(line: 1411, column: 24, scope: !3842)
!4793 = !DILocation(line: 1411, column: 2, scope: !3842)
!4794 = !DILocation(line: 1413, column: 29, scope: !3842)
!4795 = !DILocation(line: 1413, column: 35, scope: !3842)
!4796 = !DILocation(line: 1413, column: 8, scope: !3842)
!4797 = !DILocation(line: 1413, column: 6, scope: !3842)
!4798 = !DILocation(line: 1414, column: 6, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 1414, column: 6)
!4800 = !DILocation(line: 1414, column: 6, scope: !3842)
!4801 = !DILocation(line: 1415, column: 3, scope: !4799)
!4802 = !DILocation(line: 1418, column: 23, scope: !3842)
!4803 = !DILocation(line: 1418, column: 29, scope: !3842)
!4804 = !DILocation(line: 1418, column: 10, scope: !3842)
!4805 = !DILocation(line: 1418, column: 8, scope: !3842)
!4806 = !DILocation(line: 1419, column: 7, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 1419, column: 6)
!4808 = !DILocation(line: 1419, column: 6, scope: !3842)
!4809 = !DILocation(line: 1420, column: 7, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 1419, column: 14)
!4811 = !DILocation(line: 1421, column: 3, scope: !4810)
!4812 = !DILocation(line: 1424, column: 15, scope: !3842)
!4813 = !DILocation(line: 1424, column: 21, scope: !3842)
!4814 = !DILocation(line: 1424, column: 2, scope: !3842)
!4815 = !DILocation(line: 1424, column: 9, scope: !3842)
!4816 = !DILocation(line: 1424, column: 13, scope: !3842)
!4817 = !DILocation(line: 1425, column: 16, scope: !3842)
!4818 = !DILocation(line: 1425, column: 2, scope: !3842)
!4819 = !DILocation(line: 1425, column: 9, scope: !3842)
!4820 = !DILocation(line: 1425, column: 14, scope: !3842)
!4821 = !DILocation(line: 1427, column: 19, scope: !3842)
!4822 = !DILocation(line: 1427, column: 25, scope: !3842)
!4823 = !DILocation(line: 1427, column: 2, scope: !3842)
!4824 = !DILocation(line: 1427, column: 9, scope: !3842)
!4825 = !DILocation(line: 1427, column: 17, scope: !3842)
!4826 = !DILocation(line: 1428, column: 6, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 1428, column: 6)
!4828 = !DILocation(line: 1428, column: 12, scope: !4827)
!4829 = !DILocation(line: 1428, column: 6, scope: !3842)
!4830 = !DILocation(line: 1429, column: 22, scope: !4827)
!4831 = !DILocation(line: 1429, column: 28, scope: !4827)
!4832 = !DILocation(line: 1429, column: 3, scope: !4827)
!4833 = !DILocation(line: 1429, column: 10, scope: !4827)
!4834 = !DILocation(line: 1429, column: 20, scope: !4827)
!4835 = !DILocalVariable(name: "__mptr", scope: !4836, file: !3, line: 1435, type: !126)
!4836 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 1435, column: 2)
!4837 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 1435, column: 2)
!4838 = !DILocation(line: 1435, column: 2, scope: !4836)
!4839 = !DILocation(line: 1435, column: 2, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 1435, column: 2)
!4841 = !DILocation(line: 1435, column: 2, scope: !4837)
!4842 = !DILocation(line: 1435, column: 2, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 1435, column: 2)
!4844 = !DILocation(line: 1436, column: 28, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 1435, column: 46)
!4846 = !DILocation(line: 1436, column: 35, scope: !4845)
!4847 = !DILocation(line: 1436, column: 40, scope: !4845)
!4848 = !DILocation(line: 1436, column: 47, scope: !4845)
!4849 = !DILocation(line: 1436, column: 52, scope: !4845)
!4850 = !DILocation(line: 1436, column: 9, scope: !4845)
!4851 = !DILocation(line: 1436, column: 7, scope: !4845)
!4852 = !DILocation(line: 1437, column: 7, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 1437, column: 7)
!4854 = !DILocation(line: 1437, column: 7, scope: !4845)
!4855 = !DILocation(line: 1438, column: 24, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 1437, column: 12)
!4857 = !DILocation(line: 1438, column: 4, scope: !4856)
!4858 = !DILocation(line: 1439, column: 20, scope: !4856)
!4859 = !DILocation(line: 1439, column: 4, scope: !4856)
!4860 = !DILocation(line: 1440, column: 4, scope: !4856)
!4861 = !DILocation(line: 1442, column: 2, scope: !4845)
!4862 = !DILocalVariable(name: "__mptr", scope: !4863, file: !3, line: 1435, type: !126)
!4863 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 1435, column: 2)
!4864 = !DILocation(line: 1435, column: 2, scope: !4863)
!4865 = !DILocation(line: 1435, column: 2, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 1435, column: 2)
!4867 = distinct !{!4867, !4841, !4868}
!4868 = !DILocation(line: 1442, column: 2, scope: !4837)
!4869 = !DILocation(line: 1444, column: 18, scope: !3842)
!4870 = !DILocation(line: 1444, column: 2, scope: !3842)
!4871 = !DILocation(line: 1446, column: 9, scope: !3842)
!4872 = !DILocation(line: 1446, column: 2, scope: !3842)
!4873 = !DILabel(scope: !3842, name: "unregister_region_exit", file: !3, line: 1448)
!4874 = !DILocation(line: 1448, column: 1, scope: !3842)
!4875 = !DILocation(line: 1449, column: 25, scope: !3842)
!4876 = !DILocation(line: 1449, column: 31, scope: !3842)
!4877 = !DILocation(line: 1449, column: 2, scope: !3842)
!4878 = !DILabel(scope: !3842, name: "free_cdev_exit", file: !3, line: 1450)
!4879 = !DILocation(line: 1450, column: 1, scope: !3842)
!4880 = !DILocation(line: 1451, column: 13, scope: !3842)
!4881 = !DILocation(line: 1451, column: 19, scope: !3842)
!4882 = !DILocation(line: 1451, column: 24, scope: !3842)
!4883 = !DILocation(line: 1451, column: 2, scope: !3842)
!4884 = !DILocation(line: 1452, column: 17, scope: !3842)
!4885 = !DILocation(line: 1452, column: 9, scope: !3842)
!4886 = !DILocation(line: 1452, column: 2, scope: !3842)
!4887 = !DILocation(line: 1453, column: 1, scope: !3842)
!4888 = distinct !DISubprogram(name: "ERR_PTR", scope: !4889, file: !4889, line: 24, type: !4890, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4889 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!4890 = !DISubroutineType(types: !4891)
!4891 = !{!126, !252}
!4892 = !DILocalVariable(name: "error", arg: 1, scope: !4888, file: !4889, line: 24, type: !252)
!4893 = !DILocation(line: 24, column: 48, scope: !4888)
!4894 = !DILocation(line: 26, column: 18, scope: !4888)
!4895 = !DILocation(line: 26, column: 9, scope: !4888)
!4896 = !DILocation(line: 26, column: 2, scope: !4888)
!4897 = distinct !DISubprogram(name: "parse_feature_list", scope: !3, file: !3, line: 1206, type: !4898, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{!149, !3935, !3621, !3621}
!4900 = !DILocalVariable(name: "binfo", arg: 1, scope: !4897, file: !3, line: 1206, type: !3935)
!4901 = !DILocation(line: 1206, column: 63, scope: !4897)
!4902 = !DILocalVariable(name: "start", arg: 2, scope: !4897, file: !3, line: 1207, type: !3621)
!4903 = !DILocation(line: 1207, column: 26, scope: !4897)
!4904 = !DILocalVariable(name: "len", arg: 3, scope: !4897, file: !3, line: 1207, type: !3621)
!4905 = !DILocation(line: 1207, column: 49, scope: !4897)
!4906 = !DILocalVariable(name: "end", scope: !4897, file: !3, line: 1209, type: !3621)
!4907 = !DILocation(line: 1209, column: 18, scope: !4897)
!4908 = !DILocation(line: 1209, column: 24, scope: !4897)
!4909 = !DILocation(line: 1209, column: 32, scope: !4897)
!4910 = !DILocation(line: 1209, column: 30, scope: !4897)
!4911 = !DILocalVariable(name: "ret", scope: !4897, file: !3, line: 1210, type: !149)
!4912 = !DILocation(line: 1210, column: 6, scope: !4897)
!4913 = !DILocalVariable(name: "ofst", scope: !4897, file: !3, line: 1211, type: !358)
!4914 = !DILocation(line: 1211, column: 6, scope: !4897)
!4915 = !DILocalVariable(name: "v", scope: !4897, file: !3, line: 1212, type: !364)
!4916 = !DILocation(line: 1212, column: 6, scope: !4897)
!4917 = !DILocation(line: 1214, column: 27, scope: !4897)
!4918 = !DILocation(line: 1214, column: 34, scope: !4897)
!4919 = !DILocation(line: 1214, column: 41, scope: !4897)
!4920 = !DILocation(line: 1214, column: 8, scope: !4897)
!4921 = !DILocation(line: 1214, column: 6, scope: !4897)
!4922 = !DILocation(line: 1215, column: 6, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 1215, column: 6)
!4924 = !DILocation(line: 1215, column: 6, scope: !4897)
!4925 = !DILocation(line: 1216, column: 10, scope: !4923)
!4926 = !DILocation(line: 1216, column: 3, scope: !4923)
!4927 = !DILocation(line: 1219, column: 2, scope: !4897)
!4928 = !DILocation(line: 1219, column: 9, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4930, file: !3, line: 1219, column: 2)
!4930 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 1219, column: 2)
!4931 = !DILocation(line: 1219, column: 17, scope: !4929)
!4932 = !DILocation(line: 1219, column: 15, scope: !4929)
!4933 = !DILocation(line: 1219, column: 2, scope: !4930)
!4934 = !DILocation(line: 1220, column: 7, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 1220, column: 7)
!4936 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 1219, column: 37)
!4937 = !DILocation(line: 1220, column: 13, scope: !4935)
!4938 = !DILocation(line: 1220, column: 11, scope: !4935)
!4939 = !DILocation(line: 1220, column: 19, scope: !4935)
!4940 = !DILocation(line: 1220, column: 7, scope: !4936)
!4941 = !DILocation(line: 1221, column: 4, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 1220, column: 31)
!4943 = !DILocation(line: 1222, column: 4, scope: !4942)
!4944 = !DILocation(line: 1225, column: 23, scope: !4936)
!4945 = !DILocation(line: 1225, column: 30, scope: !4936)
!4946 = !DILocation(line: 1225, column: 38, scope: !4936)
!4947 = !DILocation(line: 1225, column: 45, scope: !4936)
!4948 = !DILocation(line: 1225, column: 36, scope: !4936)
!4949 = !DILocation(line: 1225, column: 9, scope: !4936)
!4950 = !DILocation(line: 1225, column: 7, scope: !4936)
!4951 = !DILocation(line: 1226, column: 7, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 1226, column: 7)
!4953 = !DILocation(line: 1226, column: 7, scope: !4936)
!4954 = !DILocation(line: 1227, column: 11, scope: !4952)
!4955 = !DILocation(line: 1227, column: 4, scope: !4952)
!4956 = !DILocation(line: 1229, column: 13, scope: !4936)
!4957 = !DILocation(line: 1229, column: 20, scope: !4936)
!4958 = !DILocation(line: 1229, column: 29, scope: !4936)
!4959 = !DILocation(line: 1229, column: 27, scope: !4936)
!4960 = !DILocation(line: 1229, column: 37, scope: !4936)
!4961 = !DILocation(line: 1229, column: 44, scope: !4936)
!4962 = !DILocation(line: 1229, column: 35, scope: !4936)
!4963 = !DILocation(line: 1229, column: 50, scope: !4936)
!4964 = !DILocation(line: 1229, column: 7, scope: !4936)
!4965 = !DILocation(line: 1229, column: 5, scope: !4936)
!4966 = !DILocation(line: 1230, column: 10, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 1230, column: 10)
!4968 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 1230, column: 10)
!4969 = !DILocation(line: 1230, column: 10, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1230, column: 10)
!4971 = !DILocation(line: 1230, column: 10, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1230, column: 10)
!4973 = !DILocation(line: 1230, column: 10, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1230, column: 10)
!4975 = !DILocation(line: 1230, column: 10, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1230, column: 10)
!4977 = !DILocation(line: 1230, column: 10, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1230, column: 10)
!4979 = !DILocation(line: 1230, column: 10, scope: !4968)
!4980 = !DILocation(line: 1230, column: 10, scope: !4936)
!4981 = !DILocation(line: 1230, column: 8, scope: !4936)
!4982 = !DILocation(line: 1233, column: 8, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 1233, column: 7)
!4984 = !DILocation(line: 1233, column: 10, scope: !4983)
!4985 = !DILocation(line: 1233, column: 21, scope: !4983)
!4986 = !DILocation(line: 1233, column: 25, scope: !4983)
!4987 = !DILocation(line: 1233, column: 7, scope: !4936)
!4988 = !DILocation(line: 1234, column: 4, scope: !4983)
!4989 = !DILocation(line: 1235, column: 2, scope: !4936)
!4990 = !DILocation(line: 1219, column: 31, scope: !4929)
!4991 = !DILocation(line: 1219, column: 28, scope: !4929)
!4992 = !DILocation(line: 1219, column: 2, scope: !4929)
!4993 = distinct !{!4993, !4933, !4994}
!4994 = !DILocation(line: 1235, column: 2, scope: !4930)
!4995 = !DILocation(line: 1238, column: 22, scope: !4897)
!4996 = !DILocation(line: 1238, column: 2, scope: !4897)
!4997 = !DILocation(line: 1240, column: 6, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 1240, column: 6)
!4999 = !DILocation(line: 1240, column: 6, scope: !4897)
!5000 = !DILocation(line: 1241, column: 31, scope: !4998)
!5001 = !DILocation(line: 1241, column: 9, scope: !4998)
!5002 = !DILocation(line: 1241, column: 7, scope: !4998)
!5003 = !DILocation(line: 1241, column: 3, scope: !4998)
!5004 = !DILocation(line: 1243, column: 9, scope: !4897)
!5005 = !DILocation(line: 1243, column: 2, scope: !4897)
!5006 = !DILocation(line: 1244, column: 1, scope: !4897)
!5007 = distinct !DISubprogram(name: "remove_feature_devs", scope: !3, file: !3, line: 1373, type: !5008, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5008 = !DISubroutineType(types: !5009)
!5009 = !{null, !3657}
!5010 = !DILocalVariable(name: "cdev", arg: 1, scope: !5007, file: !3, line: 1373, type: !3657)
!5011 = !DILocation(line: 1373, column: 55, scope: !5007)
!5012 = !DILocation(line: 1375, column: 25, scope: !5007)
!5013 = !DILocation(line: 1375, column: 31, scope: !5007)
!5014 = !DILocation(line: 1375, column: 39, scope: !5007)
!5015 = !DILocation(line: 1375, column: 2, scope: !5007)
!5016 = !DILocation(line: 1376, column: 1, scope: !5007)
!5017 = distinct !DISubprogram(name: "build_info_free", scope: !3, file: !3, line: 890, type: !5018, scopeLine: 891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5018 = !DISubroutineType(types: !5019)
!5019 = !{null, !3935}
!5020 = !DILocalVariable(name: "binfo", arg: 1, scope: !5017, file: !3, line: 890, type: !3935)
!5021 = !DILocation(line: 890, column: 61, scope: !5017)
!5022 = !DILocalVariable(name: "finfo", scope: !5017, file: !3, line: 892, type: !3830)
!5023 = !DILocation(line: 892, column: 27, scope: !5017)
!5024 = !DILocalVariable(name: "p", scope: !5017, file: !3, line: 892, type: !3830)
!5025 = !DILocation(line: 892, column: 35, scope: !5017)
!5026 = !DILocation(line: 898, column: 6, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 898, column: 6)
!5028 = !DILocation(line: 898, column: 13, scope: !5027)
!5029 = !DILocation(line: 898, column: 25, scope: !5027)
!5030 = !DILocation(line: 898, column: 28, scope: !5027)
!5031 = !DILocation(line: 898, column: 35, scope: !5027)
!5032 = !DILocation(line: 898, column: 48, scope: !5027)
!5033 = !DILocation(line: 898, column: 51, scope: !5027)
!5034 = !DILocation(line: 898, column: 6, scope: !5017)
!5035 = !DILocation(line: 899, column: 35, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 898, column: 57)
!5037 = !DILocation(line: 899, column: 42, scope: !5036)
!5038 = !DILocation(line: 899, column: 15, scope: !5036)
!5039 = !DILocation(line: 900, column: 8, scope: !5036)
!5040 = !DILocation(line: 900, column: 15, scope: !5036)
!5041 = !DILocation(line: 900, column: 28, scope: !5036)
!5042 = !DILocation(line: 899, column: 3, scope: !5036)
!5043 = !DILocalVariable(name: "__mptr", scope: !5044, file: !3, line: 902, type: !126)
!5044 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 902, column: 3)
!5045 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 902, column: 3)
!5046 = !DILocation(line: 902, column: 3, scope: !5044)
!5047 = !DILocation(line: 902, column: 3, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 902, column: 3)
!5049 = !DILocation(line: 902, column: 3, scope: !5045)
!5050 = !DILocalVariable(name: "__mptr", scope: !5051, file: !3, line: 902, type: !126)
!5051 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 902, column: 3)
!5052 = !DILocation(line: 902, column: 3, scope: !5051)
!5053 = !DILocation(line: 902, column: 3, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 902, column: 3)
!5055 = !DILocation(line: 902, column: 3, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 902, column: 3)
!5057 = !DILocation(line: 903, column: 14, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 902, column: 66)
!5059 = !DILocation(line: 903, column: 21, scope: !5058)
!5060 = !DILocation(line: 903, column: 4, scope: !5058)
!5061 = !DILocation(line: 904, column: 10, scope: !5058)
!5062 = !DILocation(line: 904, column: 4, scope: !5058)
!5063 = !DILocation(line: 905, column: 3, scope: !5058)
!5064 = !DILocalVariable(name: "__mptr", scope: !5065, file: !3, line: 902, type: !126)
!5065 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 902, column: 3)
!5066 = !DILocation(line: 902, column: 3, scope: !5065)
!5067 = !DILocation(line: 902, column: 3, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 902, column: 3)
!5069 = distinct !{!5069, !5049, !5070}
!5070 = !DILocation(line: 905, column: 3, scope: !5045)
!5071 = !DILocation(line: 906, column: 2, scope: !5036)
!5072 = !DILocation(line: 908, column: 22, scope: !5017)
!5073 = !DILocation(line: 908, column: 29, scope: !5017)
!5074 = !DILocation(line: 908, column: 2, scope: !5017)
!5075 = !DILocation(line: 910, column: 13, scope: !5017)
!5076 = !DILocation(line: 910, column: 20, scope: !5017)
!5077 = !DILocation(line: 910, column: 25, scope: !5017)
!5078 = !DILocation(line: 910, column: 2, scope: !5017)
!5079 = !DILocation(line: 911, column: 1, scope: !5017)
!5080 = distinct !DISubprogram(name: "dfl_fpga_feature_devs_remove", scope: !3, file: !3, line: 1463, type: !5008, scopeLine: 1464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5081 = !DILocalVariable(name: "cdev", arg: 1, scope: !5080, file: !3, line: 1463, type: !3657)
!5082 = !DILocation(line: 1463, column: 57, scope: !5080)
!5083 = !DILocalVariable(name: "pdata", scope: !5080, file: !3, line: 1465, type: !3649)
!5084 = !DILocation(line: 1465, column: 36, scope: !5080)
!5085 = !DILocalVariable(name: "ptmp", scope: !5080, file: !3, line: 1465, type: !3649)
!5086 = !DILocation(line: 1465, column: 44, scope: !5080)
!5087 = !DILocation(line: 1467, column: 14, scope: !5080)
!5088 = !DILocation(line: 1467, column: 20, scope: !5080)
!5089 = !DILocation(line: 1467, column: 2, scope: !5080)
!5090 = !DILocation(line: 1468, column: 6, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 1468, column: 6)
!5092 = !DILocation(line: 1468, column: 12, scope: !5091)
!5093 = !DILocation(line: 1468, column: 6, scope: !5080)
!5094 = !DILocation(line: 1469, column: 14, scope: !5091)
!5095 = !DILocation(line: 1469, column: 20, scope: !5091)
!5096 = !DILocation(line: 1469, column: 3, scope: !5091)
!5097 = !DILocalVariable(name: "__mptr", scope: !5098, file: !3, line: 1471, type: !126)
!5098 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 1471, column: 2)
!5099 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 1471, column: 2)
!5100 = !DILocation(line: 1471, column: 2, scope: !5098)
!5101 = !DILocation(line: 1471, column: 2, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 1471, column: 2)
!5103 = !DILocation(line: 1471, column: 2, scope: !5099)
!5104 = !DILocalVariable(name: "__mptr", scope: !5105, file: !3, line: 1471, type: !126)
!5105 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 1471, column: 2)
!5106 = !DILocation(line: 1471, column: 2, scope: !5105)
!5107 = !DILocation(line: 1471, column: 2, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1471, column: 2)
!5109 = !DILocation(line: 1471, column: 2, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 1471, column: 2)
!5111 = !DILocalVariable(name: "port_dev", scope: !5112, file: !3, line: 1472, type: !150)
!5112 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1471, column: 68)
!5113 = !DILocation(line: 1472, column: 27, scope: !5112)
!5114 = !DILocation(line: 1472, column: 38, scope: !5112)
!5115 = !DILocation(line: 1472, column: 45, scope: !5112)
!5116 = !DILocation(line: 1475, column: 30, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 1475, column: 7)
!5118 = !DILocation(line: 1475, column: 40, scope: !5117)
!5119 = !DILocation(line: 1475, column: 8, scope: !5117)
!5120 = !DILocation(line: 1475, column: 7, scope: !5112)
!5121 = !DILocation(line: 1476, column: 36, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 1475, column: 46)
!5123 = !DILocation(line: 1476, column: 16, scope: !5122)
!5124 = !DILocation(line: 1477, column: 9, scope: !5122)
!5125 = !DILocation(line: 1477, column: 19, scope: !5122)
!5126 = !DILocation(line: 1476, column: 4, scope: !5122)
!5127 = !DILocation(line: 1478, column: 24, scope: !5122)
!5128 = !DILocation(line: 1478, column: 4, scope: !5122)
!5129 = !DILocation(line: 1479, column: 3, scope: !5122)
!5130 = !DILocation(line: 1481, column: 13, scope: !5112)
!5131 = !DILocation(line: 1481, column: 20, scope: !5112)
!5132 = !DILocation(line: 1481, column: 3, scope: !5112)
!5133 = !DILocation(line: 1482, column: 15, scope: !5112)
!5134 = !DILocation(line: 1482, column: 25, scope: !5112)
!5135 = !DILocation(line: 1482, column: 3, scope: !5112)
!5136 = !DILocation(line: 1483, column: 2, scope: !5112)
!5137 = !DILocalVariable(name: "__mptr", scope: !5138, file: !3, line: 1471, type: !126)
!5138 = distinct !DILexicalBlock(scope: !5110, file: !3, line: 1471, column: 2)
!5139 = !DILocation(line: 1471, column: 2, scope: !5138)
!5140 = !DILocation(line: 1471, column: 2, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 1471, column: 2)
!5142 = distinct !{!5142, !5103, !5143}
!5143 = !DILocation(line: 1483, column: 2, scope: !5099)
!5144 = !DILocation(line: 1484, column: 16, scope: !5080)
!5145 = !DILocation(line: 1484, column: 22, scope: !5080)
!5146 = !DILocation(line: 1484, column: 2, scope: !5080)
!5147 = !DILocation(line: 1486, column: 22, scope: !5080)
!5148 = !DILocation(line: 1486, column: 2, scope: !5080)
!5149 = !DILocation(line: 1488, column: 25, scope: !5080)
!5150 = !DILocation(line: 1488, column: 31, scope: !5080)
!5151 = !DILocation(line: 1488, column: 2, scope: !5080)
!5152 = !DILocation(line: 1489, column: 13, scope: !5080)
!5153 = !DILocation(line: 1489, column: 19, scope: !5080)
!5154 = !DILocation(line: 1489, column: 27, scope: !5080)
!5155 = !DILocation(line: 1489, column: 2, scope: !5080)
!5156 = !DILocation(line: 1490, column: 1, scope: !5080)
!5157 = distinct !DISubprogram(name: "device_is_registered", scope: !60, file: !60, line: 680, type: !3216, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5158 = !DILocalVariable(name: "dev", arg: 1, scope: !5157, file: !60, line: 680, type: !3184)
!5159 = !DILocation(line: 680, column: 55, scope: !5157)
!5160 = !DILocation(line: 682, column: 9, scope: !5157)
!5161 = !DILocation(line: 682, column: 14, scope: !5157)
!5162 = !DILocation(line: 682, column: 19, scope: !5157)
!5163 = !DILocation(line: 682, column: 2, scope: !5157)
!5164 = distinct !DISubprogram(name: "dfl_id_free", scope: !3, file: !3, line: 112, type: !5165, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5165 = !DISubroutineType(types: !5166)
!5166 = !{null, !108, !149}
!5167 = !DILocalVariable(name: "type", arg: 1, scope: !5164, file: !3, line: 112, type: !108)
!5168 = !DILocation(line: 112, column: 42, scope: !5164)
!5169 = !DILocalVariable(name: "id", arg: 2, scope: !5164, file: !3, line: 112, type: !149)
!5170 = !DILocation(line: 112, column: 52, scope: !5164)
!5171 = !DILocalVariable(name: "__ret_warn_on", scope: !5172, file: !3, line: 114, type: !149)
!5172 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 114, column: 2)
!5173 = !DILocation(line: 114, column: 2, scope: !5172)
!5174 = !DILocation(line: 114, column: 2, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5172, file: !3, line: 114, column: 2)
!5176 = !DILocation(line: 114, column: 2, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 114, column: 2)
!5178 = !DILocation(line: 114, column: 2, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 114, column: 2)
!5180 = !DILocation(line: 114, column: 2, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 114, column: 2)
!5182 = !{i32 -2142478185, i32 -2142478156, i32 -2142478110, i32 -2142478052, i32 -2142477998, i32 -2142477944, i32 -2142477889, i32 -2142477858}
!5183 = !DILocation(line: 114, column: 2, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 114, column: 2)
!5185 = !{i32 -2142477458, i32 -2142477451, i32 -2142477399, i32 -2142477368, i32 -2142477338}
!5186 = !DILocation(line: 114, column: 2, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 114, column: 2)
!5188 = !DILocation(line: 115, column: 2, scope: !5164)
!5189 = !DILocation(line: 116, column: 23, scope: !5164)
!5190 = !DILocation(line: 116, column: 14, scope: !5164)
!5191 = !DILocation(line: 116, column: 29, scope: !5164)
!5192 = !DILocation(line: 116, column: 33, scope: !5164)
!5193 = !DILocation(line: 116, column: 2, scope: !5164)
!5194 = !DILocation(line: 117, column: 2, scope: !5164)
!5195 = !DILocation(line: 118, column: 1, scope: !5164)
!5196 = distinct !DISubprogram(name: "feature_dev_id_type", scope: !3, file: !3, line: 120, type: !5197, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5197 = !DISubroutineType(types: !5198)
!5198 = !{!108, !150}
!5199 = !DILocalVariable(name: "pdev", arg: 1, scope: !5196, file: !3, line: 120, type: !150)
!5200 = !DILocation(line: 120, column: 69, scope: !5196)
!5201 = !DILocalVariable(name: "i", scope: !5196, file: !3, line: 122, type: !149)
!5202 = !DILocation(line: 122, column: 6, scope: !5196)
!5203 = !DILocation(line: 124, column: 9, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 124, column: 2)
!5205 = !DILocation(line: 124, column: 7, scope: !5204)
!5206 = !DILocation(line: 124, column: 14, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 124, column: 2)
!5208 = !DILocation(line: 124, column: 16, scope: !5207)
!5209 = !DILocation(line: 124, column: 2, scope: !5204)
!5210 = !DILocation(line: 125, column: 24, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5207, file: !3, line: 125, column: 7)
!5212 = !DILocation(line: 125, column: 15, scope: !5211)
!5213 = !DILocation(line: 125, column: 27, scope: !5211)
!5214 = !DILocation(line: 125, column: 33, scope: !5211)
!5215 = !DILocation(line: 125, column: 39, scope: !5211)
!5216 = !DILocation(line: 125, column: 8, scope: !5211)
!5217 = !DILocation(line: 125, column: 7, scope: !5207)
!5218 = !DILocation(line: 126, column: 11, scope: !5211)
!5219 = !DILocation(line: 126, column: 4, scope: !5211)
!5220 = !DILocation(line: 125, column: 43, scope: !5211)
!5221 = !DILocation(line: 124, column: 41, scope: !5207)
!5222 = !DILocation(line: 124, column: 2, scope: !5207)
!5223 = distinct !{!5223, !5209, !5224}
!5224 = !DILocation(line: 126, column: 11, scope: !5204)
!5225 = !DILocation(line: 128, column: 2, scope: !5196)
!5226 = !DILocation(line: 129, column: 1, scope: !5196)
!5227 = distinct !DISubprogram(name: "__dfl_fpga_cdev_find_port", scope: !3, file: !3, line: 1508, type: !5228, scopeLine: 1510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5228 = !DISubroutineType(types: !5229)
!5229 = !{!150, !3657, !126, !5230}
!5230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4102, size: 64)
!5231 = !DILocalVariable(name: "cdev", arg: 1, scope: !5227, file: !3, line: 1508, type: !3657)
!5232 = !DILocation(line: 1508, column: 49, scope: !5227)
!5233 = !DILocalVariable(name: "data", arg: 2, scope: !5227, file: !3, line: 1508, type: !126)
!5234 = !DILocation(line: 1508, column: 61, scope: !5227)
!5235 = !DILocalVariable(name: "match", arg: 3, scope: !5227, file: !3, line: 1509, type: !5230)
!5236 = !DILocation(line: 1509, column: 12, scope: !5227)
!5237 = !DILocalVariable(name: "pdata", scope: !5227, file: !3, line: 1511, type: !3649)
!5238 = !DILocation(line: 1511, column: 36, scope: !5227)
!5239 = !DILocalVariable(name: "port_dev", scope: !5227, file: !3, line: 1512, type: !150)
!5240 = !DILocation(line: 1512, column: 26, scope: !5227)
!5241 = !DILocalVariable(name: "__mptr", scope: !5242, file: !3, line: 1514, type: !126)
!5242 = distinct !DILexicalBlock(scope: !5243, file: !3, line: 1514, column: 2)
!5243 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 1514, column: 2)
!5244 = !DILocation(line: 1514, column: 2, scope: !5242)
!5245 = !DILocation(line: 1514, column: 2, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 1514, column: 2)
!5247 = !DILocation(line: 1514, column: 2, scope: !5243)
!5248 = !DILocation(line: 1514, column: 2, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5243, file: !3, line: 1514, column: 2)
!5250 = !DILocation(line: 1515, column: 14, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 1514, column: 57)
!5252 = !DILocation(line: 1515, column: 21, scope: !5251)
!5253 = !DILocation(line: 1515, column: 12, scope: !5251)
!5254 = !DILocation(line: 1517, column: 7, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 1517, column: 7)
!5256 = !DILocation(line: 1517, column: 13, scope: !5255)
!5257 = !DILocation(line: 1517, column: 23, scope: !5255)
!5258 = !DILocation(line: 1517, column: 29, scope: !5255)
!5259 = !DILocation(line: 1517, column: 44, scope: !5255)
!5260 = !DILocation(line: 1517, column: 54, scope: !5255)
!5261 = !DILocation(line: 1517, column: 32, scope: !5255)
!5262 = !DILocation(line: 1517, column: 7, scope: !5251)
!5263 = !DILocation(line: 1518, column: 11, scope: !5255)
!5264 = !DILocation(line: 1518, column: 4, scope: !5255)
!5265 = !DILocation(line: 1519, column: 2, scope: !5251)
!5266 = !DILocalVariable(name: "__mptr", scope: !5267, file: !3, line: 1514, type: !126)
!5267 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 1514, column: 2)
!5268 = !DILocation(line: 1514, column: 2, scope: !5267)
!5269 = !DILocation(line: 1514, column: 2, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 1514, column: 2)
!5271 = distinct !{!5271, !5247, !5272}
!5272 = !DILocation(line: 1519, column: 2, scope: !5243)
!5273 = !DILocation(line: 1521, column: 2, scope: !5227)
!5274 = !DILocation(line: 1522, column: 1, scope: !5227)
!5275 = distinct !DISubprogram(name: "dfl_fpga_cdev_release_port", scope: !3, file: !3, line: 1555, type: !5276, scopeLine: 1556, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{!149, !3657, !149}
!5278 = !DILocalVariable(name: "cdev", arg: 1, scope: !5275, file: !3, line: 1555, type: !3657)
!5279 = !DILocation(line: 1555, column: 54, scope: !5275)
!5280 = !DILocalVariable(name: "port_id", arg: 2, scope: !5275, file: !3, line: 1555, type: !149)
!5281 = !DILocation(line: 1555, column: 64, scope: !5275)
!5282 = !DILocalVariable(name: "pdata", scope: !5275, file: !3, line: 1557, type: !3649)
!5283 = !DILocation(line: 1557, column: 36, scope: !5275)
!5284 = !DILocalVariable(name: "port_pdev", scope: !5275, file: !3, line: 1558, type: !150)
!5285 = !DILocation(line: 1558, column: 26, scope: !5275)
!5286 = !DILocalVariable(name: "ret", scope: !5275, file: !3, line: 1559, type: !149)
!5287 = !DILocation(line: 1559, column: 6, scope: !5275)
!5288 = !DILocation(line: 1561, column: 14, scope: !5275)
!5289 = !DILocation(line: 1561, column: 20, scope: !5275)
!5290 = !DILocation(line: 1561, column: 2, scope: !5275)
!5291 = !DILocation(line: 1562, column: 40, scope: !5275)
!5292 = !DILocation(line: 1562, column: 46, scope: !5275)
!5293 = !DILocation(line: 1562, column: 14, scope: !5275)
!5294 = !DILocation(line: 1562, column: 12, scope: !5275)
!5295 = !DILocation(line: 1564, column: 7, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 1564, column: 6)
!5297 = !DILocation(line: 1564, column: 6, scope: !5275)
!5298 = !DILocation(line: 1565, column: 3, scope: !5296)
!5299 = !DILocation(line: 1567, column: 29, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 1567, column: 6)
!5301 = !DILocation(line: 1567, column: 40, scope: !5300)
!5302 = !DILocation(line: 1567, column: 7, scope: !5300)
!5303 = !DILocation(line: 1567, column: 6, scope: !5275)
!5304 = !DILocation(line: 1568, column: 7, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 1567, column: 46)
!5306 = !DILocation(line: 1569, column: 3, scope: !5305)
!5307 = !DILocation(line: 1572, column: 28, scope: !5275)
!5308 = !DILocation(line: 1572, column: 39, scope: !5275)
!5309 = !DILocation(line: 1572, column: 10, scope: !5275)
!5310 = !DILocation(line: 1572, column: 8, scope: !5275)
!5311 = !DILocation(line: 1574, column: 14, scope: !5275)
!5312 = !DILocation(line: 1574, column: 21, scope: !5275)
!5313 = !DILocation(line: 1574, column: 2, scope: !5275)
!5314 = !DILocation(line: 1575, column: 34, scope: !5275)
!5315 = !DILocation(line: 1575, column: 8, scope: !5275)
!5316 = !DILocation(line: 1575, column: 6, scope: !5275)
!5317 = !DILocation(line: 1576, column: 16, scope: !5275)
!5318 = !DILocation(line: 1576, column: 23, scope: !5275)
!5319 = !DILocation(line: 1576, column: 2, scope: !5275)
!5320 = !DILocation(line: 1577, column: 6, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 1577, column: 6)
!5322 = !DILocation(line: 1577, column: 6, scope: !5275)
!5323 = !DILocation(line: 1578, column: 3, scope: !5321)
!5324 = !DILocation(line: 1580, column: 22, scope: !5275)
!5325 = !DILocation(line: 1580, column: 2, scope: !5275)
!5326 = !DILocation(line: 1581, column: 2, scope: !5275)
!5327 = !DILocation(line: 1581, column: 8, scope: !5275)
!5328 = !DILocation(line: 1581, column: 25, scope: !5275)
!5329 = !DILabel(scope: !5275, name: "put_dev_exit", file: !3, line: 1582)
!5330 = !DILocation(line: 1582, column: 1, scope: !5275)
!5331 = !DILocation(line: 1583, column: 14, scope: !5275)
!5332 = !DILocation(line: 1583, column: 25, scope: !5275)
!5333 = !DILocation(line: 1583, column: 2, scope: !5275)
!5334 = !DILabel(scope: !5275, name: "unlock_exit", file: !3, line: 1584)
!5335 = !DILocation(line: 1584, column: 1, scope: !5275)
!5336 = !DILocation(line: 1585, column: 16, scope: !5275)
!5337 = !DILocation(line: 1585, column: 22, scope: !5275)
!5338 = !DILocation(line: 1585, column: 2, scope: !5275)
!5339 = !DILocation(line: 1586, column: 9, scope: !5275)
!5340 = !DILocation(line: 1586, column: 2, scope: !5275)
!5341 = distinct !DISubprogram(name: "dfl_feature_dev_use_begin", scope: !109, file: !109, line: 288, type: !5342, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5342 = !DISubroutineType(types: !5343)
!5343 = !{!149, !3649, !157}
!5344 = !DILocalVariable(name: "pdata", arg: 1, scope: !5341, file: !109, line: 288, type: !3649)
!5345 = !DILocation(line: 288, column: 65, scope: !5341)
!5346 = !DILocalVariable(name: "excl", arg: 2, scope: !5341, file: !109, line: 289, type: !157)
!5347 = !DILocation(line: 289, column: 15, scope: !5341)
!5348 = !DILocation(line: 291, column: 6, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5341, file: !109, line: 291, column: 6)
!5350 = !DILocation(line: 291, column: 13, scope: !5349)
!5351 = !DILocation(line: 291, column: 6, scope: !5341)
!5352 = !DILocation(line: 292, column: 3, scope: !5349)
!5353 = !DILocation(line: 294, column: 6, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5341, file: !109, line: 294, column: 6)
!5355 = !DILocation(line: 294, column: 6, scope: !5341)
!5356 = !DILocation(line: 295, column: 7, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5358, file: !109, line: 295, column: 7)
!5358 = distinct !DILexicalBlock(scope: !5354, file: !109, line: 294, column: 12)
!5359 = !DILocation(line: 295, column: 14, scope: !5357)
!5360 = !DILocation(line: 295, column: 7, scope: !5358)
!5361 = !DILocation(line: 296, column: 4, scope: !5357)
!5362 = !DILocation(line: 298, column: 3, scope: !5358)
!5363 = !DILocation(line: 298, column: 10, scope: !5358)
!5364 = !DILocation(line: 298, column: 20, scope: !5358)
!5365 = !DILocation(line: 299, column: 2, scope: !5358)
!5366 = !DILocation(line: 300, column: 2, scope: !5341)
!5367 = !DILocation(line: 300, column: 9, scope: !5341)
!5368 = !DILocation(line: 300, column: 19, scope: !5341)
!5369 = !DILocation(line: 302, column: 2, scope: !5341)
!5370 = !DILocation(line: 303, column: 1, scope: !5341)
!5371 = distinct !DISubprogram(name: "dfl_fpga_cdev_assign_port", scope: !3, file: !3, line: 1601, type: !5276, scopeLine: 1602, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5372 = !DILocalVariable(name: "cdev", arg: 1, scope: !5371, file: !3, line: 1601, type: !3657)
!5373 = !DILocation(line: 1601, column: 53, scope: !5371)
!5374 = !DILocalVariable(name: "port_id", arg: 2, scope: !5371, file: !3, line: 1601, type: !149)
!5375 = !DILocation(line: 1601, column: 63, scope: !5371)
!5376 = !DILocalVariable(name: "pdata", scope: !5371, file: !3, line: 1603, type: !3649)
!5377 = !DILocation(line: 1603, column: 36, scope: !5371)
!5378 = !DILocalVariable(name: "port_pdev", scope: !5371, file: !3, line: 1604, type: !150)
!5379 = !DILocation(line: 1604, column: 26, scope: !5371)
!5380 = !DILocalVariable(name: "ret", scope: !5371, file: !3, line: 1605, type: !149)
!5381 = !DILocation(line: 1605, column: 6, scope: !5371)
!5382 = !DILocation(line: 1607, column: 14, scope: !5371)
!5383 = !DILocation(line: 1607, column: 20, scope: !5371)
!5384 = !DILocation(line: 1607, column: 2, scope: !5371)
!5385 = !DILocation(line: 1608, column: 40, scope: !5371)
!5386 = !DILocation(line: 1608, column: 46, scope: !5371)
!5387 = !DILocation(line: 1608, column: 14, scope: !5371)
!5388 = !DILocation(line: 1608, column: 12, scope: !5371)
!5389 = !DILocation(line: 1610, column: 7, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1610, column: 6)
!5391 = !DILocation(line: 1610, column: 6, scope: !5371)
!5392 = !DILocation(line: 1611, column: 3, scope: !5390)
!5393 = !DILocation(line: 1613, column: 28, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1613, column: 6)
!5395 = !DILocation(line: 1613, column: 39, scope: !5394)
!5396 = !DILocation(line: 1613, column: 6, scope: !5394)
!5397 = !DILocation(line: 1613, column: 6, scope: !5371)
!5398 = !DILocation(line: 1614, column: 7, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5394, file: !3, line: 1613, column: 45)
!5400 = !DILocation(line: 1615, column: 3, scope: !5399)
!5401 = !DILocation(line: 1618, column: 28, scope: !5371)
!5402 = !DILocation(line: 1618, column: 8, scope: !5371)
!5403 = !DILocation(line: 1618, column: 6, scope: !5371)
!5404 = !DILocation(line: 1619, column: 6, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1619, column: 6)
!5406 = !DILocation(line: 1619, column: 6, scope: !5371)
!5407 = !DILocation(line: 1620, column: 3, scope: !5405)
!5408 = !DILocation(line: 1622, column: 28, scope: !5371)
!5409 = !DILocation(line: 1622, column: 39, scope: !5371)
!5410 = !DILocation(line: 1622, column: 10, scope: !5371)
!5411 = !DILocation(line: 1622, column: 8, scope: !5371)
!5412 = !DILocation(line: 1624, column: 14, scope: !5371)
!5413 = !DILocation(line: 1624, column: 21, scope: !5371)
!5414 = !DILocation(line: 1624, column: 2, scope: !5371)
!5415 = !DILocation(line: 1625, column: 26, scope: !5371)
!5416 = !DILocation(line: 1625, column: 2, scope: !5371)
!5417 = !DILocation(line: 1626, column: 16, scope: !5371)
!5418 = !DILocation(line: 1626, column: 23, scope: !5371)
!5419 = !DILocation(line: 1626, column: 2, scope: !5371)
!5420 = !DILocation(line: 1628, column: 2, scope: !5371)
!5421 = !DILocation(line: 1628, column: 8, scope: !5371)
!5422 = !DILocation(line: 1628, column: 25, scope: !5371)
!5423 = !DILabel(scope: !5371, name: "put_dev_exit", file: !3, line: 1629)
!5424 = !DILocation(line: 1629, column: 1, scope: !5371)
!5425 = !DILocation(line: 1630, column: 14, scope: !5371)
!5426 = !DILocation(line: 1630, column: 25, scope: !5371)
!5427 = !DILocation(line: 1630, column: 2, scope: !5371)
!5428 = !DILabel(scope: !5371, name: "unlock_exit", file: !3, line: 1631)
!5429 = !DILocation(line: 1631, column: 1, scope: !5371)
!5430 = !DILocation(line: 1632, column: 16, scope: !5371)
!5431 = !DILocation(line: 1632, column: 22, scope: !5371)
!5432 = !DILocation(line: 1632, column: 2, scope: !5371)
!5433 = !DILocation(line: 1633, column: 9, scope: !5371)
!5434 = !DILocation(line: 1633, column: 2, scope: !5371)
!5435 = distinct !DISubprogram(name: "dfl_feature_dev_use_end", scope: !109, file: !109, line: 306, type: !4244, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5436 = !DILocalVariable(name: "pdata", arg: 1, scope: !5435, file: !109, line: 306, type: !3649)
!5437 = !DILocation(line: 306, column: 64, scope: !5435)
!5438 = !DILocation(line: 308, column: 2, scope: !5435)
!5439 = !DILocation(line: 308, column: 9, scope: !5435)
!5440 = !DILocation(line: 308, column: 19, scope: !5435)
!5441 = !DILocalVariable(name: "__ret_warn_on", scope: !5442, file: !109, line: 310, type: !149)
!5442 = distinct !DILexicalBlock(scope: !5443, file: !109, line: 310, column: 6)
!5443 = distinct !DILexicalBlock(scope: !5435, file: !109, line: 310, column: 6)
!5444 = !DILocation(line: 310, column: 6, scope: !5442)
!5445 = !DILocation(line: 310, column: 6, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5442, file: !109, line: 310, column: 6)
!5447 = !DILocation(line: 310, column: 6, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5446, file: !109, line: 310, column: 6)
!5449 = !DILocation(line: 310, column: 6, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5448, file: !109, line: 310, column: 6)
!5451 = !DILocation(line: 310, column: 6, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5448, file: !109, line: 310, column: 6)
!5453 = !{i32 -2142591675, i32 -2142591646, i32 -2142591600, i32 -2142591542, i32 -2142591488, i32 -2142591434, i32 -2142591379, i32 -2142591348}
!5454 = !DILocation(line: 310, column: 6, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5448, file: !109, line: 310, column: 6)
!5456 = !{i32 -2142590948, i32 -2142590941, i32 -2142590889, i32 -2142590858, i32 -2142590828}
!5457 = !DILocation(line: 310, column: 6, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5448, file: !109, line: 310, column: 6)
!5459 = !DILocation(line: 310, column: 6, scope: !5443)
!5460 = !DILocation(line: 310, column: 6, scope: !5435)
!5461 = !DILocation(line: 311, column: 3, scope: !5443)
!5462 = !DILocation(line: 313, column: 2, scope: !5435)
!5463 = !DILocation(line: 313, column: 9, scope: !5435)
!5464 = !DILocation(line: 313, column: 19, scope: !5435)
!5465 = !DILocation(line: 314, column: 1, scope: !5435)
!5466 = distinct !DISubprogram(name: "dfl_fpga_cdev_config_ports_pf", scope: !3, file: !3, line: 1665, type: !5008, scopeLine: 1666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5467 = !DILocalVariable(name: "cdev", arg: 1, scope: !5466, file: !3, line: 1665, type: !3657)
!5468 = !DILocation(line: 1665, column: 58, scope: !5466)
!5469 = !DILocalVariable(name: "pdata", scope: !5466, file: !3, line: 1667, type: !3649)
!5470 = !DILocation(line: 1667, column: 36, scope: !5466)
!5471 = !DILocation(line: 1669, column: 14, scope: !5466)
!5472 = !DILocation(line: 1669, column: 20, scope: !5466)
!5473 = !DILocation(line: 1669, column: 2, scope: !5466)
!5474 = !DILocalVariable(name: "__mptr", scope: !5475, file: !3, line: 1670, type: !126)
!5475 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 1670, column: 2)
!5476 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 1670, column: 2)
!5477 = !DILocation(line: 1670, column: 2, scope: !5475)
!5478 = !DILocation(line: 1670, column: 2, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 1670, column: 2)
!5480 = !DILocation(line: 1670, column: 2, scope: !5476)
!5481 = !DILocation(line: 1670, column: 2, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 1670, column: 2)
!5483 = !DILocation(line: 1671, column: 29, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 1671, column: 7)
!5485 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 1670, column: 57)
!5486 = !DILocation(line: 1671, column: 36, scope: !5484)
!5487 = !DILocation(line: 1671, column: 41, scope: !5484)
!5488 = !DILocation(line: 1671, column: 7, scope: !5484)
!5489 = !DILocation(line: 1671, column: 7, scope: !5485)
!5490 = !DILocation(line: 1672, column: 4, scope: !5484)
!5491 = !DILocation(line: 1674, column: 3, scope: !5485)
!5492 = !DILocation(line: 1675, column: 2, scope: !5485)
!5493 = !DILocalVariable(name: "__mptr", scope: !5494, file: !3, line: 1670, type: !126)
!5494 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 1670, column: 2)
!5495 = !DILocation(line: 1670, column: 2, scope: !5494)
!5496 = !DILocation(line: 1670, column: 2, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 1670, column: 2)
!5498 = distinct !{!5498, !5480, !5499}
!5499 = !DILocation(line: 1675, column: 2, scope: !5476)
!5500 = !DILocation(line: 1676, column: 16, scope: !5466)
!5501 = !DILocation(line: 1676, column: 22, scope: !5466)
!5502 = !DILocation(line: 1676, column: 2, scope: !5466)
!5503 = !DILocation(line: 1677, column: 1, scope: !5466)
!5504 = distinct !DISubprogram(name: "config_port_access_mode", scope: !3, file: !3, line: 1637, type: !5505, scopeLine: 1639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5505 = !DISubroutineType(types: !5506)
!5506 = !{null, !3184, !149, !157}
!5507 = !DILocalVariable(name: "fme_dev", arg: 1, scope: !5504, file: !3, line: 1637, type: !3184)
!5508 = !DILocation(line: 1637, column: 52, scope: !5504)
!5509 = !DILocalVariable(name: "port_id", arg: 2, scope: !5504, file: !3, line: 1637, type: !149)
!5510 = !DILocation(line: 1637, column: 65, scope: !5504)
!5511 = !DILocalVariable(name: "is_vf", arg: 3, scope: !5504, file: !3, line: 1638, type: !157)
!5512 = !DILocation(line: 1638, column: 14, scope: !5504)
!5513 = !DILocalVariable(name: "base", scope: !5504, file: !3, line: 1640, type: !126)
!5514 = !DILocation(line: 1640, column: 16, scope: !5504)
!5515 = !DILocalVariable(name: "v", scope: !5504, file: !3, line: 1641, type: !364)
!5516 = !DILocation(line: 1641, column: 6, scope: !5504)
!5517 = !DILocation(line: 1643, column: 38, scope: !5504)
!5518 = !DILocation(line: 1643, column: 9, scope: !5504)
!5519 = !DILocation(line: 1643, column: 7, scope: !5504)
!5520 = !DILocation(line: 1645, column: 12, scope: !5504)
!5521 = !DILocation(line: 1645, column: 19, scope: !5504)
!5522 = !DILocation(line: 1645, column: 17, scope: !5504)
!5523 = !DILocation(line: 1645, column: 6, scope: !5504)
!5524 = !DILocation(line: 1645, column: 4, scope: !5504)
!5525 = !DILocation(line: 1647, column: 4, scope: !5504)
!5526 = !DILocation(line: 1648, column: 7, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 1648, column: 7)
!5528 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 1648, column: 7)
!5529 = !DILocation(line: 1648, column: 7, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1648, column: 7)
!5531 = !DILocation(line: 1648, column: 7, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1648, column: 7)
!5533 = !DILocation(line: 1648, column: 7, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1648, column: 7)
!5535 = !DILocation(line: 1648, column: 7, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1648, column: 7)
!5537 = !DILocation(line: 1648, column: 7, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1648, column: 7)
!5539 = !DILocation(line: 1648, column: 7, scope: !5528)
!5540 = !DILocation(line: 1648, column: 4, scope: !5504)
!5541 = !DILocation(line: 1651, column: 9, scope: !5504)
!5542 = !DILocation(line: 1651, column: 12, scope: !5504)
!5543 = !DILocation(line: 1651, column: 19, scope: !5504)
!5544 = !DILocation(line: 1651, column: 17, scope: !5504)
!5545 = !DILocation(line: 1651, column: 2, scope: !5504)
!5546 = !DILocation(line: 1652, column: 1, scope: !5504)
!5547 = distinct !DISubprogram(name: "dfl_fpga_cdev_config_ports_vf", scope: !3, file: !3, line: 1691, type: !5276, scopeLine: 1692, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5548 = !DILocalVariable(name: "cdev", arg: 1, scope: !5547, file: !3, line: 1691, type: !3657)
!5549 = !DILocation(line: 1691, column: 57, scope: !5547)
!5550 = !DILocalVariable(name: "num_vfs", arg: 2, scope: !5547, file: !3, line: 1691, type: !149)
!5551 = !DILocation(line: 1691, column: 67, scope: !5547)
!5552 = !DILocalVariable(name: "pdata", scope: !5547, file: !3, line: 1693, type: !3649)
!5553 = !DILocation(line: 1693, column: 36, scope: !5547)
!5554 = !DILocalVariable(name: "ret", scope: !5547, file: !3, line: 1694, type: !149)
!5555 = !DILocation(line: 1694, column: 6, scope: !5547)
!5556 = !DILocation(line: 1696, column: 14, scope: !5547)
!5557 = !DILocation(line: 1696, column: 20, scope: !5547)
!5558 = !DILocation(line: 1696, column: 2, scope: !5547)
!5559 = !DILocation(line: 1702, column: 6, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 1702, column: 6)
!5561 = !DILocation(line: 1702, column: 12, scope: !5560)
!5562 = !DILocation(line: 1702, column: 33, scope: !5560)
!5563 = !DILocation(line: 1702, column: 30, scope: !5560)
!5564 = !DILocation(line: 1702, column: 6, scope: !5547)
!5565 = !DILocation(line: 1703, column: 7, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 1702, column: 42)
!5567 = !DILocation(line: 1704, column: 3, scope: !5566)
!5568 = !DILocalVariable(name: "__mptr", scope: !5569, file: !3, line: 1707, type: !126)
!5569 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 1707, column: 2)
!5570 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 1707, column: 2)
!5571 = !DILocation(line: 1707, column: 2, scope: !5569)
!5572 = !DILocation(line: 1707, column: 2, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1707, column: 2)
!5574 = !DILocation(line: 1707, column: 2, scope: !5570)
!5575 = !DILocation(line: 1707, column: 2, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 1707, column: 2)
!5577 = !DILocation(line: 1708, column: 29, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 1708, column: 7)
!5579 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 1707, column: 57)
!5580 = !DILocation(line: 1708, column: 36, scope: !5578)
!5581 = !DILocation(line: 1708, column: 41, scope: !5578)
!5582 = !DILocation(line: 1708, column: 7, scope: !5578)
!5583 = !DILocation(line: 1708, column: 7, scope: !5579)
!5584 = !DILocation(line: 1709, column: 4, scope: !5578)
!5585 = !DILocation(line: 1711, column: 3, scope: !5579)
!5586 = !DILocation(line: 1712, column: 2, scope: !5579)
!5587 = !DILocalVariable(name: "__mptr", scope: !5588, file: !3, line: 1707, type: !126)
!5588 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 1707, column: 2)
!5589 = !DILocation(line: 1707, column: 2, scope: !5588)
!5590 = !DILocation(line: 1707, column: 2, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 1707, column: 2)
!5592 = distinct !{!5592, !5574, !5593}
!5593 = !DILocation(line: 1712, column: 2, scope: !5570)
!5594 = !DILabel(scope: !5547, name: "done", file: !3, line: 1713)
!5595 = !DILocation(line: 1713, column: 1, scope: !5547)
!5596 = !DILocation(line: 1714, column: 16, scope: !5547)
!5597 = !DILocation(line: 1714, column: 22, scope: !5547)
!5598 = !DILocation(line: 1714, column: 2, scope: !5547)
!5599 = !DILocation(line: 1715, column: 9, scope: !5547)
!5600 = !DILocation(line: 1715, column: 2, scope: !5547)
!5601 = distinct !DISubprogram(name: "dfl_fpga_set_irq_triggers", scope: !3, file: !3, line: 1787, type: !5602, scopeLine: 1789, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5602 = !DISubroutineType(types: !5603)
!5603 = !{!149, !3780, !7, !7, !5604}
!5604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!5605 = !DILocalVariable(name: "feature", arg: 1, scope: !5601, file: !3, line: 1787, type: !3780)
!5606 = !DILocation(line: 1787, column: 51, scope: !5601)
!5607 = !DILocalVariable(name: "start", arg: 2, scope: !5601, file: !3, line: 1787, type: !7)
!5608 = !DILocation(line: 1787, column: 73, scope: !5601)
!5609 = !DILocalVariable(name: "count", arg: 3, scope: !5601, file: !3, line: 1788, type: !7)
!5610 = !DILocation(line: 1788, column: 23, scope: !5601)
!5611 = !DILocalVariable(name: "fds", arg: 4, scope: !5601, file: !3, line: 1788, type: !5604)
!5612 = !DILocation(line: 1788, column: 39, scope: !5601)
!5613 = !DILocalVariable(name: "i", scope: !5601, file: !3, line: 1790, type: !7)
!5614 = !DILocation(line: 1790, column: 15, scope: !5601)
!5615 = !DILocalVariable(name: "ret", scope: !5601, file: !3, line: 1791, type: !149)
!5616 = !DILocation(line: 1791, column: 6, scope: !5601)
!5617 = !DILocation(line: 1794, column: 6, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1794, column: 6)
!5619 = !DILocation(line: 1794, column: 6, scope: !5601)
!5620 = !DILocation(line: 1795, column: 3, scope: !5618)
!5621 = !DILocation(line: 1798, column: 6, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1798, column: 6)
!5623 = !DILocation(line: 1798, column: 14, scope: !5622)
!5624 = !DILocation(line: 1798, column: 12, scope: !5622)
!5625 = !DILocation(line: 1798, column: 22, scope: !5622)
!5626 = !DILocation(line: 1798, column: 31, scope: !5622)
!5627 = !DILocation(line: 1798, column: 20, scope: !5622)
!5628 = !DILocation(line: 1798, column: 6, scope: !5601)
!5629 = !DILocation(line: 1799, column: 3, scope: !5622)
!5630 = !DILocation(line: 1801, column: 9, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1801, column: 2)
!5632 = !DILocation(line: 1801, column: 7, scope: !5631)
!5633 = !DILocation(line: 1801, column: 14, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 1801, column: 2)
!5635 = !DILocation(line: 1801, column: 18, scope: !5634)
!5636 = !DILocation(line: 1801, column: 16, scope: !5634)
!5637 = !DILocation(line: 1801, column: 2, scope: !5631)
!5638 = !DILocalVariable(name: "fd", scope: !5639, file: !3, line: 1802, type: !149)
!5639 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1801, column: 30)
!5640 = !DILocation(line: 1802, column: 7, scope: !5639)
!5641 = !DILocation(line: 1802, column: 12, scope: !5639)
!5642 = !DILocation(line: 1802, column: 18, scope: !5639)
!5643 = !DILocation(line: 1802, column: 22, scope: !5639)
!5644 = !DILocation(line: 1804, column: 28, scope: !5639)
!5645 = !DILocation(line: 1804, column: 37, scope: !5639)
!5646 = !DILocation(line: 1804, column: 45, scope: !5639)
!5647 = !DILocation(line: 1804, column: 43, scope: !5639)
!5648 = !DILocation(line: 1804, column: 48, scope: !5639)
!5649 = !DILocation(line: 1804, column: 9, scope: !5639)
!5650 = !DILocation(line: 1804, column: 7, scope: !5639)
!5651 = !DILocation(line: 1805, column: 7, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 1805, column: 7)
!5653 = !DILocation(line: 1805, column: 7, scope: !5639)
!5654 = !DILocation(line: 1806, column: 4, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 1805, column: 12)
!5656 = !DILocation(line: 1806, column: 12, scope: !5655)
!5657 = !DILocation(line: 1807, column: 24, scope: !5655)
!5658 = !DILocation(line: 1807, column: 33, scope: !5655)
!5659 = !DILocation(line: 1807, column: 41, scope: !5655)
!5660 = !DILocation(line: 1807, column: 39, scope: !5655)
!5661 = !DILocation(line: 1807, column: 5, scope: !5655)
!5662 = distinct !{!5662, !5654, !5663}
!5663 = !DILocation(line: 1807, column: 46, scope: !5655)
!5664 = !DILocation(line: 1808, column: 4, scope: !5655)
!5665 = !DILocation(line: 1810, column: 2, scope: !5639)
!5666 = !DILocation(line: 1801, column: 26, scope: !5634)
!5667 = !DILocation(line: 1801, column: 2, scope: !5634)
!5668 = distinct !{!5668, !5637, !5669}
!5669 = !DILocation(line: 1810, column: 2, scope: !5631)
!5670 = !DILocation(line: 1812, column: 9, scope: !5601)
!5671 = !DILocation(line: 1812, column: 2, scope: !5601)
!5672 = !DILocation(line: 1813, column: 1, scope: !5601)
!5673 = distinct !DISubprogram(name: "do_set_irq_trigger", scope: !3, file: !3, line: 1727, type: !5674, scopeLine: 1729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5674 = !DISubroutineType(types: !5675)
!5675 = !{!149, !3780, !7, !149}
!5676 = !DILocalVariable(name: "feature", arg: 1, scope: !5673, file: !3, line: 1727, type: !3780)
!5677 = !DILocation(line: 1727, column: 51, scope: !5673)
!5678 = !DILocalVariable(name: "idx", arg: 2, scope: !5673, file: !3, line: 1727, type: !7)
!5679 = !DILocation(line: 1727, column: 73, scope: !5673)
!5680 = !DILocalVariable(name: "fd", arg: 3, scope: !5673, file: !3, line: 1728, type: !149)
!5681 = !DILocation(line: 1728, column: 14, scope: !5673)
!5682 = !DILocalVariable(name: "pdev", scope: !5673, file: !3, line: 1730, type: !150)
!5683 = !DILocation(line: 1730, column: 26, scope: !5673)
!5684 = !DILocation(line: 1730, column: 33, scope: !5673)
!5685 = !DILocation(line: 1730, column: 42, scope: !5673)
!5686 = !DILocalVariable(name: "trigger", scope: !5673, file: !3, line: 1731, type: !3766)
!5687 = !DILocation(line: 1731, column: 22, scope: !5673)
!5688 = !DILocalVariable(name: "irq", scope: !5673, file: !3, line: 1732, type: !149)
!5689 = !DILocation(line: 1732, column: 6, scope: !5673)
!5690 = !DILocalVariable(name: "ret", scope: !5673, file: !3, line: 1732, type: !149)
!5691 = !DILocation(line: 1732, column: 11, scope: !5673)
!5692 = !DILocation(line: 1734, column: 8, scope: !5673)
!5693 = !DILocation(line: 1734, column: 17, scope: !5673)
!5694 = !DILocation(line: 1734, column: 25, scope: !5673)
!5695 = !DILocation(line: 1734, column: 30, scope: !5673)
!5696 = !DILocation(line: 1734, column: 6, scope: !5673)
!5697 = !DILocation(line: 1736, column: 6, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 1736, column: 6)
!5699 = !DILocation(line: 1736, column: 15, scope: !5698)
!5700 = !DILocation(line: 1736, column: 23, scope: !5698)
!5701 = !DILocation(line: 1736, column: 28, scope: !5698)
!5702 = !DILocation(line: 1736, column: 6, scope: !5673)
!5703 = !DILocation(line: 1737, column: 12, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 1736, column: 37)
!5705 = !DILocation(line: 1737, column: 17, scope: !5704)
!5706 = !DILocation(line: 1737, column: 26, scope: !5704)
!5707 = !DILocation(line: 1737, column: 34, scope: !5704)
!5708 = !DILocation(line: 1737, column: 39, scope: !5704)
!5709 = !DILocation(line: 1737, column: 3, scope: !5704)
!5710 = !DILocation(line: 1738, column: 9, scope: !5704)
!5711 = !DILocation(line: 1738, column: 18, scope: !5704)
!5712 = !DILocation(line: 1738, column: 26, scope: !5704)
!5713 = !DILocation(line: 1738, column: 31, scope: !5704)
!5714 = !DILocation(line: 1738, column: 3, scope: !5704)
!5715 = !DILocation(line: 1739, column: 19, scope: !5704)
!5716 = !DILocation(line: 1739, column: 28, scope: !5704)
!5717 = !DILocation(line: 1739, column: 36, scope: !5704)
!5718 = !DILocation(line: 1739, column: 41, scope: !5704)
!5719 = !DILocation(line: 1739, column: 3, scope: !5704)
!5720 = !DILocation(line: 1740, column: 3, scope: !5704)
!5721 = !DILocation(line: 1740, column: 12, scope: !5704)
!5722 = !DILocation(line: 1740, column: 20, scope: !5704)
!5723 = !DILocation(line: 1740, column: 25, scope: !5704)
!5724 = !DILocation(line: 1740, column: 33, scope: !5704)
!5725 = !DILocation(line: 1741, column: 2, scope: !5704)
!5726 = !DILocation(line: 1743, column: 6, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 1743, column: 6)
!5728 = !DILocation(line: 1743, column: 9, scope: !5727)
!5729 = !DILocation(line: 1743, column: 6, scope: !5673)
!5730 = !DILocation(line: 1744, column: 3, scope: !5727)
!5731 = !DILocation(line: 1747, column: 48, scope: !5673)
!5732 = !DILocation(line: 1748, column: 16, scope: !5673)
!5733 = !DILocation(line: 1748, column: 22, scope: !5673)
!5734 = !DILocation(line: 1748, column: 6, scope: !5673)
!5735 = !DILocation(line: 1748, column: 28, scope: !5673)
!5736 = !DILocation(line: 1748, column: 37, scope: !5673)
!5737 = !DILocation(line: 1747, column: 3, scope: !5673)
!5738 = !DILocation(line: 1746, column: 2, scope: !5673)
!5739 = !DILocation(line: 1746, column: 11, scope: !5673)
!5740 = !DILocation(line: 1746, column: 19, scope: !5673)
!5741 = !DILocation(line: 1746, column: 24, scope: !5673)
!5742 = !DILocation(line: 1746, column: 29, scope: !5673)
!5743 = !DILocation(line: 1749, column: 7, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 1749, column: 6)
!5745 = !DILocation(line: 1749, column: 16, scope: !5744)
!5746 = !DILocation(line: 1749, column: 24, scope: !5744)
!5747 = !DILocation(line: 1749, column: 29, scope: !5744)
!5748 = !DILocation(line: 1749, column: 6, scope: !5673)
!5749 = !DILocation(line: 1750, column: 3, scope: !5744)
!5750 = !DILocation(line: 1752, column: 30, scope: !5673)
!5751 = !DILocation(line: 1752, column: 12, scope: !5673)
!5752 = !DILocation(line: 1752, column: 10, scope: !5673)
!5753 = !DILocation(line: 1753, column: 13, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 1753, column: 6)
!5755 = !DILocation(line: 1753, column: 6, scope: !5754)
!5756 = !DILocation(line: 1753, column: 6, scope: !5673)
!5757 = !DILocation(line: 1754, column: 17, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 1753, column: 23)
!5759 = !DILocation(line: 1754, column: 9, scope: !5758)
!5760 = !DILocation(line: 1754, column: 7, scope: !5758)
!5761 = !DILocation(line: 1755, column: 3, scope: !5758)
!5762 = !DILocation(line: 1758, column: 20, scope: !5673)
!5763 = !DILocation(line: 1759, column: 6, scope: !5673)
!5764 = !DILocation(line: 1759, column: 15, scope: !5673)
!5765 = !DILocation(line: 1759, column: 23, scope: !5673)
!5766 = !DILocation(line: 1759, column: 28, scope: !5673)
!5767 = !DILocation(line: 1759, column: 34, scope: !5673)
!5768 = !DILocation(line: 1758, column: 8, scope: !5673)
!5769 = !DILocation(line: 1758, column: 6, scope: !5673)
!5770 = !DILocation(line: 1760, column: 7, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 1760, column: 6)
!5772 = !DILocation(line: 1760, column: 6, scope: !5673)
!5773 = !DILocation(line: 1761, column: 35, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 1760, column: 12)
!5775 = !DILocation(line: 1761, column: 3, scope: !5774)
!5776 = !DILocation(line: 1761, column: 12, scope: !5774)
!5777 = !DILocation(line: 1761, column: 20, scope: !5774)
!5778 = !DILocation(line: 1761, column: 25, scope: !5774)
!5779 = !DILocation(line: 1761, column: 33, scope: !5774)
!5780 = !DILocation(line: 1762, column: 10, scope: !5774)
!5781 = !DILocation(line: 1762, column: 3, scope: !5774)
!5782 = !DILocation(line: 1765, column: 18, scope: !5673)
!5783 = !DILocation(line: 1765, column: 2, scope: !5673)
!5784 = !DILabel(scope: !5673, name: "free_name", file: !3, line: 1766)
!5785 = !DILocation(line: 1766, column: 1, scope: !5673)
!5786 = !DILocation(line: 1767, column: 8, scope: !5673)
!5787 = !DILocation(line: 1767, column: 17, scope: !5673)
!5788 = !DILocation(line: 1767, column: 25, scope: !5673)
!5789 = !DILocation(line: 1767, column: 30, scope: !5673)
!5790 = !DILocation(line: 1767, column: 2, scope: !5673)
!5791 = !DILocation(line: 1769, column: 9, scope: !5673)
!5792 = !DILocation(line: 1769, column: 2, scope: !5673)
!5793 = !DILocation(line: 1770, column: 1, scope: !5673)
!5794 = distinct !DISubprogram(name: "dfl_feature_ioctl_get_num_irqs", scope: !3, file: !3, line: 1824, type: !5795, scopeLine: 1827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5795 = !DISubroutineType(types: !5796)
!5796 = !{!252, !150, !3780, !267}
!5797 = !DILocalVariable(name: "pdev", arg: 1, scope: !5794, file: !3, line: 1824, type: !150)
!5798 = !DILocation(line: 1824, column: 61, scope: !5794)
!5799 = !DILocalVariable(name: "feature", arg: 2, scope: !5794, file: !3, line: 1825, type: !3780)
!5800 = !DILocation(line: 1825, column: 29, scope: !5794)
!5801 = !DILocalVariable(name: "arg", arg: 3, scope: !5794, file: !3, line: 1826, type: !267)
!5802 = !DILocation(line: 1826, column: 23, scope: !5794)
!5803 = !DILocation(line: 1828, column: 9, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 1828, column: 9)
!5805 = !DILocalVariable(name: "__ret_pu", scope: !5806, file: !3, line: 1828, type: !149)
!5806 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 1828, column: 9)
!5807 = !DILocation(line: 1828, column: 9, scope: !5806)
!5808 = !DILocalVariable(name: "__ptr_pu", scope: !5806, file: !3, line: 1828, type: !126)
!5809 = !DILocalVariable(name: "__val_pu", scope: !5806, file: !3, line: 1828, type: !360)
!5810 = !{i32 -2142124176}
!5811 = !DILocation(line: 1828, column: 2, scope: !5794)
!5812 = distinct !DISubprogram(name: "might_fault", scope: !5813, file: !5813, line: 315, type: !1742, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5813 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!5814 = !DILocation(line: 315, column: 40, scope: !5812)
!5815 = distinct !DISubprogram(name: "dfl_feature_ioctl_set_irq", scope: !3, file: !3, line: 1840, type: !5795, scopeLine: 1843, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5816 = !DILocalVariable(name: "addr", arg: 1, scope: !5817, file: !5818, line: 138, type: !1991)
!5817 = distinct !DISubprogram(name: "check_copy_size", scope: !5818, file: !5818, line: 138, type: !5819, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5818 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!5819 = !DISubroutineType(types: !5820)
!5820 = !{!157, !1991, !264, !157}
!5821 = !DILocation(line: 138, column: 29, scope: !5817, inlinedAt: !5822)
!5822 = distinct !DILocation(line: 191, column: 6, scope: !5823, inlinedAt: !5828)
!5823 = distinct !DILexicalBlock(scope: !5825, file: !5824, line: 191, column: 6)
!5824 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!5825 = distinct !DISubprogram(name: "copy_from_user", scope: !5824, file: !5824, line: 189, type: !5826, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5826 = !DISubroutineType(types: !5827)
!5827 = !{!267, !126, !1991, !267}
!5828 = distinct !DILocation(line: 1852, column: 6, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 1852, column: 6)
!5830 = !DILocalVariable(name: "bytes", arg: 2, scope: !5817, file: !5818, line: 138, type: !264)
!5831 = !DILocation(line: 138, column: 42, scope: !5817, inlinedAt: !5822)
!5832 = !DILocalVariable(name: "is_source", arg: 3, scope: !5817, file: !5818, line: 138, type: !157)
!5833 = !DILocation(line: 138, column: 54, scope: !5817, inlinedAt: !5822)
!5834 = !DILocalVariable(name: "sz", scope: !5817, file: !5818, line: 140, type: !149)
!5835 = !DILocation(line: 140, column: 6, scope: !5817, inlinedAt: !5822)
!5836 = !DILocalVariable(name: "__ret_warn_on", scope: !5837, file: !5818, line: 150, type: !149)
!5837 = distinct !DILexicalBlock(scope: !5838, file: !5818, line: 150, column: 6)
!5838 = distinct !DILexicalBlock(scope: !5817, file: !5818, line: 150, column: 6)
!5839 = !DILocation(line: 150, column: 6, scope: !5837, inlinedAt: !5822)
!5840 = !DILocalVariable(name: "to", arg: 1, scope: !5825, file: !5824, line: 189, type: !126)
!5841 = !DILocation(line: 189, column: 22, scope: !5825, inlinedAt: !5828)
!5842 = !DILocalVariable(name: "from", arg: 2, scope: !5825, file: !5824, line: 189, type: !1991)
!5843 = !DILocation(line: 189, column: 45, scope: !5825, inlinedAt: !5828)
!5844 = !DILocalVariable(name: "n", arg: 3, scope: !5825, file: !5824, line: 189, type: !267)
!5845 = !DILocation(line: 189, column: 65, scope: !5825, inlinedAt: !5828)
!5846 = !DILocalVariable(name: "pdev", arg: 1, scope: !5815, file: !3, line: 1840, type: !150)
!5847 = !DILocation(line: 1840, column: 56, scope: !5815)
!5848 = !DILocalVariable(name: "feature", arg: 2, scope: !5815, file: !3, line: 1841, type: !3780)
!5849 = !DILocation(line: 1841, column: 31, scope: !5815)
!5850 = !DILocalVariable(name: "arg", arg: 3, scope: !5815, file: !3, line: 1842, type: !267)
!5851 = !DILocation(line: 1842, column: 25, scope: !5815)
!5852 = !DILocalVariable(name: "pdata", scope: !5815, file: !3, line: 1844, type: !3649)
!5853 = !DILocation(line: 1844, column: 36, scope: !5815)
!5854 = !DILocation(line: 1844, column: 62, scope: !5815)
!5855 = !DILocation(line: 1844, column: 68, scope: !5815)
!5856 = !DILocation(line: 1844, column: 44, scope: !5815)
!5857 = !DILocalVariable(name: "hdr", scope: !5815, file: !3, line: 1845, type: !5858)
!5858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfl_fpga_irq_set", file: !5859, line: 161, size: 64, elements: !5860)
!5859 = !DIFile(filename: "./include/uapi/linux/fpga-dfl.h", directory: "/home/lizy2001/genbc/linux")
!5860 = !{!5861, !5862, !5863}
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5858, file: !5859, line: 162, baseType: !360, size: 32)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5858, file: !5859, line: 163, baseType: !360, size: 32, offset: 32)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "evtfds", scope: !5858, file: !5859, line: 164, baseType: !5864, offset: 64)
!5864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1307, elements: !2195)
!5865 = !DILocation(line: 1845, column: 26, scope: !5815)
!5866 = !DILocalVariable(name: "fds", scope: !5815, file: !3, line: 1846, type: !5867)
!5867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!5868 = !DILocation(line: 1846, column: 7, scope: !5815)
!5869 = !DILocalVariable(name: "ret", scope: !5815, file: !3, line: 1847, type: !252)
!5870 = !DILocation(line: 1847, column: 7, scope: !5815)
!5871 = !DILocation(line: 1849, column: 7, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 1849, column: 6)
!5873 = !DILocation(line: 1849, column: 16, scope: !5872)
!5874 = !DILocation(line: 1849, column: 6, scope: !5815)
!5875 = !DILocation(line: 1850, column: 3, scope: !5872)
!5876 = !DILocation(line: 1852, column: 21, scope: !5829)
!5877 = !DILocation(line: 1852, column: 42, scope: !5829)
!5878 = !DILocation(line: 1852, column: 27, scope: !5829)
!5879 = !DILocation(line: 191, column: 6, scope: !5823, inlinedAt: !5828)
!5880 = !DILocation(line: 141, column: 6, scope: !5881, inlinedAt: !5822)
!5881 = distinct !DILexicalBlock(scope: !5817, file: !5818, line: 141, column: 6)
!5882 = !DILocation(line: 0, scope: !5881, inlinedAt: !5822)
!5883 = !DILocation(line: 141, column: 6, scope: !5817, inlinedAt: !5822)
!5884 = !DILocation(line: 142, column: 29, scope: !5885, inlinedAt: !5822)
!5885 = distinct !DILexicalBlock(scope: !5886, file: !5818, line: 142, column: 7)
!5886 = distinct !DILexicalBlock(scope: !5881, file: !5818, line: 141, column: 39)
!5887 = !DILocation(line: 142, column: 8, scope: !5885, inlinedAt: !5822)
!5888 = !DILocation(line: 142, column: 7, scope: !5886, inlinedAt: !5822)
!5889 = !DILocation(line: 143, column: 18, scope: !5885, inlinedAt: !5822)
!5890 = !DILocation(line: 143, column: 22, scope: !5885, inlinedAt: !5822)
!5891 = !DILocation(line: 143, column: 4, scope: !5885, inlinedAt: !5822)
!5892 = !DILocation(line: 144, column: 12, scope: !5893, inlinedAt: !5822)
!5893 = distinct !DILexicalBlock(scope: !5885, file: !5818, line: 144, column: 12)
!5894 = !DILocation(line: 144, column: 12, scope: !5885, inlinedAt: !5822)
!5895 = !DILocation(line: 145, column: 4, scope: !5893, inlinedAt: !5822)
!5896 = !DILocation(line: 147, column: 4, scope: !5893, inlinedAt: !5822)
!5897 = !DILocation(line: 148, column: 3, scope: !5886, inlinedAt: !5822)
!5898 = !DILocation(line: 150, column: 6, scope: !5899, inlinedAt: !5822)
!5899 = distinct !DILexicalBlock(scope: !5837, file: !5818, line: 150, column: 6)
!5900 = !DILocation(line: 150, column: 6, scope: !5901, inlinedAt: !5822)
!5901 = distinct !DILexicalBlock(scope: !5902, file: !5818, line: 150, column: 6)
!5902 = distinct !DILexicalBlock(scope: !5899, file: !5818, line: 150, column: 6)
!5903 = !{i32 -2145504198, i32 -2145504169, i32 -2145504123, i32 -2145504065, i32 -2145504011, i32 -2145503957, i32 -2145503902, i32 -2145503871}
!5904 = !DILocation(line: 150, column: 6, scope: !5905, inlinedAt: !5822)
!5905 = distinct !DILexicalBlock(scope: !5902, file: !5818, line: 150, column: 6)
!5906 = !{i32 -2145503451, i32 -2145503444, i32 -2145503392, i32 -2145503361, i32 -2145503331}
!5907 = !DILocation(line: 150, column: 6, scope: !5902, inlinedAt: !5822)
!5908 = !DILocation(line: 150, column: 6, scope: !5838, inlinedAt: !5822)
!5909 = !DILocation(line: 150, column: 6, scope: !5817, inlinedAt: !5822)
!5910 = !DILocation(line: 151, column: 3, scope: !5838, inlinedAt: !5822)
!5911 = !DILocation(line: 152, column: 20, scope: !5817, inlinedAt: !5822)
!5912 = !DILocation(line: 152, column: 26, scope: !5817, inlinedAt: !5822)
!5913 = !DILocation(line: 152, column: 33, scope: !5817, inlinedAt: !5822)
!5914 = !DILocation(line: 152, column: 2, scope: !5817, inlinedAt: !5822)
!5915 = !DILocation(line: 153, column: 2, scope: !5817, inlinedAt: !5822)
!5916 = !DILocation(line: 154, column: 1, scope: !5817, inlinedAt: !5822)
!5917 = !DILocation(line: 191, column: 6, scope: !5825, inlinedAt: !5828)
!5918 = !DILocation(line: 192, column: 23, scope: !5823, inlinedAt: !5828)
!5919 = !DILocation(line: 192, column: 27, scope: !5823, inlinedAt: !5828)
!5920 = !DILocation(line: 192, column: 33, scope: !5823, inlinedAt: !5828)
!5921 = !DILocation(line: 192, column: 7, scope: !5823, inlinedAt: !5828)
!5922 = !DILocation(line: 192, column: 5, scope: !5823, inlinedAt: !5828)
!5923 = !DILocation(line: 192, column: 3, scope: !5823, inlinedAt: !5828)
!5924 = !DILocation(line: 193, column: 9, scope: !5825, inlinedAt: !5828)
!5925 = !DILocation(line: 1852, column: 6, scope: !5829)
!5926 = !DILocation(line: 1852, column: 6, scope: !5815)
!5927 = !DILocation(line: 1853, column: 3, scope: !5829)
!5928 = !DILocation(line: 1855, column: 11, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 1855, column: 6)
!5930 = !DILocation(line: 1855, column: 7, scope: !5929)
!5931 = !DILocation(line: 1855, column: 17, scope: !5929)
!5932 = !DILocation(line: 1855, column: 25, scope: !5929)
!5933 = !DILocation(line: 1855, column: 37, scope: !5929)
!5934 = !DILocation(line: 1855, column: 31, scope: !5929)
!5935 = !DILocation(line: 1855, column: 45, scope: !5929)
!5936 = !DILocation(line: 1855, column: 54, scope: !5929)
!5937 = !DILocation(line: 1855, column: 43, scope: !5929)
!5938 = !DILocation(line: 1855, column: 63, scope: !5929)
!5939 = !DILocation(line: 1856, column: 11, scope: !5929)
!5940 = !DILocation(line: 1856, column: 23, scope: !5929)
!5941 = !DILocation(line: 1856, column: 17, scope: !5929)
!5942 = !DILocation(line: 1856, column: 35, scope: !5929)
!5943 = !DILocation(line: 1856, column: 29, scope: !5929)
!5944 = !DILocation(line: 1855, column: 6, scope: !5815)
!5945 = !DILocation(line: 1857, column: 3, scope: !5929)
!5946 = !DILocation(line: 1859, column: 36, scope: !5815)
!5947 = !DILocation(line: 1859, column: 40, scope: !5815)
!5948 = !DILocation(line: 1859, column: 20, scope: !5815)
!5949 = !DILocation(line: 1860, column: 10, scope: !5815)
!5950 = !DILocation(line: 1860, column: 6, scope: !5815)
!5951 = !DILocation(line: 1860, column: 16, scope: !5815)
!5952 = !DILocation(line: 1859, column: 8, scope: !5815)
!5953 = !DILocation(line: 1859, column: 6, scope: !5815)
!5954 = !DILocation(line: 1861, column: 13, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 1861, column: 6)
!5956 = !DILocation(line: 1861, column: 6, scope: !5955)
!5957 = !DILocation(line: 1861, column: 6, scope: !5815)
!5958 = !DILocation(line: 1862, column: 18, scope: !5955)
!5959 = !DILocation(line: 1862, column: 10, scope: !5955)
!5960 = !DILocation(line: 1862, column: 3, scope: !5955)
!5961 = !DILocation(line: 1864, column: 14, scope: !5815)
!5962 = !DILocation(line: 1864, column: 21, scope: !5815)
!5963 = !DILocation(line: 1864, column: 2, scope: !5815)
!5964 = !DILocation(line: 1865, column: 34, scope: !5815)
!5965 = !DILocation(line: 1865, column: 47, scope: !5815)
!5966 = !DILocation(line: 1865, column: 58, scope: !5815)
!5967 = !DILocation(line: 1865, column: 65, scope: !5815)
!5968 = !DILocation(line: 1865, column: 8, scope: !5815)
!5969 = !DILocation(line: 1865, column: 6, scope: !5815)
!5970 = !DILocation(line: 1866, column: 16, scope: !5815)
!5971 = !DILocation(line: 1866, column: 23, scope: !5815)
!5972 = !DILocation(line: 1866, column: 2, scope: !5815)
!5973 = !DILocation(line: 1868, column: 8, scope: !5815)
!5974 = !DILocation(line: 1868, column: 2, scope: !5815)
!5975 = !DILocation(line: 1869, column: 9, scope: !5815)
!5976 = !DILocation(line: 1869, column: 2, scope: !5815)
!5977 = !DILocation(line: 1870, column: 1, scope: !5815)
!5978 = distinct !DISubprogram(name: "IS_ERR", scope: !4889, file: !4889, line: 34, type: !5979, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5979 = !DISubroutineType(types: !5980)
!5980 = !{!157, !1991}
!5981 = !DILocalVariable(name: "ptr", arg: 1, scope: !5978, file: !4889, line: 34, type: !1991)
!5982 = !DILocation(line: 34, column: 60, scope: !5978)
!5983 = !DILocation(line: 36, column: 9, scope: !5978)
!5984 = !DILocation(line: 36, column: 2, scope: !5978)
!5985 = distinct !DISubprogram(name: "PTR_ERR", scope: !4889, file: !4889, line: 29, type: !5986, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{!252, !1991}
!5988 = !DILocalVariable(name: "ptr", arg: 1, scope: !5985, file: !4889, line: 29, type: !1991)
!5989 = !DILocation(line: 29, column: 61, scope: !5985)
!5990 = !DILocation(line: 31, column: 16, scope: !5985)
!5991 = !DILocation(line: 31, column: 9, scope: !5985)
!5992 = !DILocation(line: 31, column: 2, scope: !5985)
!5993 = distinct !DISubprogram(name: "dfl_fpga_exit", scope: !3, file: !3, line: 1873, type: !1742, scopeLine: 1874, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5994 = !DILocation(line: 1875, column: 2, scope: !5993)
!5995 = !DILocation(line: 1876, column: 2, scope: !5993)
!5996 = !DILocation(line: 1877, column: 2, scope: !5993)
!5997 = !DILocation(line: 1878, column: 1, scope: !5993)
!5998 = distinct !DISubprogram(name: "dfl_chardev_uinit", scope: !3, file: !3, line: 599, type: !1742, scopeLine: 600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!5999 = !DILocalVariable(name: "i", scope: !5998, file: !3, line: 601, type: !149)
!6000 = !DILocation(line: 601, column: 6, scope: !5998)
!6001 = !DILocation(line: 603, column: 9, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 603, column: 2)
!6003 = !DILocation(line: 603, column: 7, scope: !6002)
!6004 = !DILocation(line: 603, column: 14, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 603, column: 2)
!6006 = !DILocation(line: 603, column: 16, scope: !6005)
!6007 = !DILocation(line: 603, column: 2, scope: !6002)
!6008 = !DILocation(line: 604, column: 7, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6005, file: !3, line: 604, column: 7)
!6010 = !DILocation(line: 604, column: 7, scope: !6005)
!6011 = !DILocation(line: 605, column: 41, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 604, column: 35)
!6013 = !DILocation(line: 605, column: 29, scope: !6012)
!6014 = !DILocation(line: 605, column: 44, scope: !6012)
!6015 = !DILocation(line: 605, column: 4, scope: !6012)
!6016 = !DILocation(line: 607, column: 16, scope: !6012)
!6017 = !DILocation(line: 607, column: 4, scope: !6012)
!6018 = !DILocation(line: 607, column: 19, scope: !6012)
!6019 = !DILocation(line: 607, column: 24, scope: !6012)
!6020 = !DILocation(line: 608, column: 3, scope: !6012)
!6021 = !DILocation(line: 603, column: 38, scope: !6005)
!6022 = !DILocation(line: 603, column: 2, scope: !6005)
!6023 = distinct !{!6023, !6007, !6024}
!6024 = !DILocation(line: 608, column: 3, scope: !6002)
!6025 = !DILocation(line: 609, column: 1, scope: !5998)
!6026 = distinct !DISubprogram(name: "dfl_ids_destroy", scope: !3, file: !3, line: 92, type: !1742, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6027 = !DILocalVariable(name: "i", scope: !6026, file: !3, line: 94, type: !149)
!6028 = !DILocation(line: 94, column: 6, scope: !6026)
!6029 = !DILocation(line: 96, column: 9, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 96, column: 2)
!6031 = !DILocation(line: 96, column: 7, scope: !6030)
!6032 = !DILocation(line: 96, column: 14, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 96, column: 2)
!6034 = !DILocation(line: 96, column: 16, scope: !6033)
!6035 = !DILocation(line: 96, column: 2, scope: !6030)
!6036 = !DILocation(line: 97, column: 25, scope: !6033)
!6037 = !DILocation(line: 97, column: 16, scope: !6033)
!6038 = !DILocation(line: 97, column: 28, scope: !6033)
!6039 = !DILocation(line: 97, column: 3, scope: !6033)
!6040 = !DILocation(line: 96, column: 41, scope: !6033)
!6041 = !DILocation(line: 96, column: 2, scope: !6033)
!6042 = distinct !{!6042, !6035, !6043}
!6043 = !DILocation(line: 97, column: 30, scope: !6030)
!6044 = !DILocation(line: 98, column: 1, scope: !6026)
!6045 = distinct !DISubprogram(name: "dfl_fpga_init", scope: !3, file: !3, line: 1525, type: !6046, scopeLine: 1526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6046 = !DISubroutineType(types: !6047)
!6047 = !{!149}
!6048 = !DILocalVariable(name: "ret", scope: !6045, file: !3, line: 1527, type: !149)
!6049 = !DILocation(line: 1527, column: 6, scope: !6045)
!6050 = !DILocation(line: 1529, column: 8, scope: !6045)
!6051 = !DILocation(line: 1529, column: 6, scope: !6045)
!6052 = !DILocation(line: 1530, column: 6, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 1530, column: 6)
!6054 = !DILocation(line: 1530, column: 6, scope: !6045)
!6055 = !DILocation(line: 1531, column: 10, scope: !6053)
!6056 = !DILocation(line: 1531, column: 3, scope: !6053)
!6057 = !DILocation(line: 1533, column: 2, scope: !6045)
!6058 = !DILocation(line: 1535, column: 8, scope: !6045)
!6059 = !DILocation(line: 1535, column: 6, scope: !6045)
!6060 = !DILocation(line: 1536, column: 6, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 1536, column: 6)
!6062 = !DILocation(line: 1536, column: 6, scope: !6045)
!6063 = !DILocation(line: 1537, column: 3, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 1536, column: 11)
!6065 = !DILocation(line: 1538, column: 3, scope: !6064)
!6066 = !DILocation(line: 1539, column: 2, scope: !6064)
!6067 = !DILocation(line: 1541, column: 9, scope: !6045)
!6068 = !DILocation(line: 1541, column: 2, scope: !6045)
!6069 = !DILocation(line: 1542, column: 1, scope: !6045)
!6070 = distinct !DISubprogram(name: "__list_add", scope: !4014, file: !4014, line: 63, type: !6071, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6071 = !DISubroutineType(types: !6072)
!6072 = !{null, !143, !143, !143}
!6073 = !DILocalVariable(name: "new", arg: 1, scope: !6070, file: !4014, line: 63, type: !143)
!6074 = !DILocation(line: 63, column: 49, scope: !6070)
!6075 = !DILocalVariable(name: "prev", arg: 2, scope: !6070, file: !4014, line: 64, type: !143)
!6076 = !DILocation(line: 64, column: 28, scope: !6070)
!6077 = !DILocalVariable(name: "next", arg: 3, scope: !6070, file: !4014, line: 65, type: !143)
!6078 = !DILocation(line: 65, column: 28, scope: !6070)
!6079 = !DILocation(line: 67, column: 24, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6070, file: !4014, line: 67, column: 6)
!6081 = !DILocation(line: 67, column: 29, scope: !6080)
!6082 = !DILocation(line: 67, column: 35, scope: !6080)
!6083 = !DILocation(line: 67, column: 7, scope: !6080)
!6084 = !DILocation(line: 67, column: 6, scope: !6070)
!6085 = !DILocation(line: 68, column: 3, scope: !6080)
!6086 = !DILocation(line: 70, column: 15, scope: !6070)
!6087 = !DILocation(line: 70, column: 2, scope: !6070)
!6088 = !DILocation(line: 70, column: 8, scope: !6070)
!6089 = !DILocation(line: 70, column: 13, scope: !6070)
!6090 = !DILocation(line: 71, column: 14, scope: !6070)
!6091 = !DILocation(line: 71, column: 2, scope: !6070)
!6092 = !DILocation(line: 71, column: 7, scope: !6070)
!6093 = !DILocation(line: 71, column: 12, scope: !6070)
!6094 = !DILocation(line: 72, column: 14, scope: !6070)
!6095 = !DILocation(line: 72, column: 2, scope: !6070)
!6096 = !DILocation(line: 72, column: 7, scope: !6070)
!6097 = !DILocation(line: 72, column: 12, scope: !6070)
!6098 = !DILocation(line: 73, column: 2, scope: !6070)
!6099 = !DILocation(line: 73, column: 2, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6070, file: !4014, line: 73, column: 2)
!6101 = !DILocation(line: 73, column: 2, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6100, file: !4014, line: 73, column: 2)
!6103 = !DILocation(line: 73, column: 2, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6100, file: !4014, line: 73, column: 2)
!6105 = !DILocation(line: 74, column: 1, scope: !6070)
!6106 = distinct !DISubprogram(name: "__list_add_valid", scope: !4014, file: !4014, line: 45, type: !6107, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{!157, !143, !143, !143}
!6109 = !DILocalVariable(name: "new", arg: 1, scope: !6106, file: !4014, line: 45, type: !143)
!6110 = !DILocation(line: 45, column: 55, scope: !6106)
!6111 = !DILocalVariable(name: "prev", arg: 2, scope: !6106, file: !4014, line: 46, type: !143)
!6112 = !DILocation(line: 46, column: 23, scope: !6106)
!6113 = !DILocalVariable(name: "next", arg: 3, scope: !6106, file: !4014, line: 47, type: !143)
!6114 = !DILocation(line: 47, column: 23, scope: !6106)
!6115 = !DILocation(line: 49, column: 2, scope: !6106)
!6116 = distinct !DISubprogram(name: "__list_del_entry", scope: !4014, file: !4014, line: 130, type: !4088, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6117 = !DILocalVariable(name: "entry", arg: 1, scope: !6116, file: !4014, line: 130, type: !143)
!6118 = !DILocation(line: 130, column: 55, scope: !6116)
!6119 = !DILocation(line: 132, column: 30, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6116, file: !4014, line: 132, column: 6)
!6121 = !DILocation(line: 132, column: 7, scope: !6120)
!6122 = !DILocation(line: 132, column: 6, scope: !6116)
!6123 = !DILocation(line: 133, column: 3, scope: !6120)
!6124 = !DILocation(line: 135, column: 13, scope: !6116)
!6125 = !DILocation(line: 135, column: 20, scope: !6116)
!6126 = !DILocation(line: 135, column: 26, scope: !6116)
!6127 = !DILocation(line: 135, column: 33, scope: !6116)
!6128 = !DILocation(line: 135, column: 2, scope: !6116)
!6129 = !DILocation(line: 136, column: 1, scope: !6116)
!6130 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !4014, file: !4014, line: 51, type: !6131, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6131 = !DISubroutineType(types: !6132)
!6132 = !{!157, !143}
!6133 = !DILocalVariable(name: "entry", arg: 1, scope: !6130, file: !4014, line: 51, type: !143)
!6134 = !DILocation(line: 51, column: 61, scope: !6130)
!6135 = !DILocation(line: 53, column: 2, scope: !6130)
!6136 = distinct !DISubprogram(name: "__list_del", scope: !4014, file: !4014, line: 110, type: !4066, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6137 = !DILocalVariable(name: "prev", arg: 1, scope: !6136, file: !4014, line: 110, type: !143)
!6138 = !DILocation(line: 110, column: 50, scope: !6136)
!6139 = !DILocalVariable(name: "next", arg: 2, scope: !6136, file: !4014, line: 110, type: !143)
!6140 = !DILocation(line: 110, column: 75, scope: !6136)
!6141 = !DILocation(line: 112, column: 15, scope: !6136)
!6142 = !DILocation(line: 112, column: 2, scope: !6136)
!6143 = !DILocation(line: 112, column: 8, scope: !6136)
!6144 = !DILocation(line: 112, column: 13, scope: !6136)
!6145 = !DILocation(line: 113, column: 2, scope: !6136)
!6146 = !DILocation(line: 113, column: 2, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6136, file: !4014, line: 113, column: 2)
!6148 = !DILocation(line: 113, column: 2, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6147, file: !4014, line: 113, column: 2)
!6150 = !DILocation(line: 113, column: 2, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6147, file: !4014, line: 113, column: 2)
!6152 = !DILocation(line: 114, column: 1, scope: !6136)
!6153 = distinct !DISubprogram(name: "dfl_bus_match", scope: !3, file: !3, line: 258, type: !3253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6154 = !DILocalVariable(name: "dev", arg: 1, scope: !6153, file: !3, line: 258, type: !3184)
!6155 = !DILocation(line: 258, column: 41, scope: !6153)
!6156 = !DILocalVariable(name: "drv", arg: 2, scope: !6153, file: !3, line: 258, type: !3255)
!6157 = !DILocation(line: 258, column: 68, scope: !6153)
!6158 = !DILocalVariable(name: "ddev", scope: !6153, file: !3, line: 260, type: !3790)
!6159 = !DILocation(line: 260, column: 21, scope: !6153)
!6160 = !DILocalVariable(name: "__mptr", scope: !6161, file: !3, line: 260, type: !126)
!6161 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 260, column: 28)
!6162 = !DILocation(line: 260, column: 28, scope: !6161)
!6163 = !DILocation(line: 260, column: 28, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 260, column: 28)
!6165 = !DILocalVariable(name: "ddrv", scope: !6153, file: !3, line: 261, type: !3815)
!6166 = !DILocation(line: 261, column: 21, scope: !6153)
!6167 = !DILocalVariable(name: "__mptr", scope: !6168, file: !3, line: 261, type: !126)
!6168 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 261, column: 28)
!6169 = !DILocation(line: 261, column: 28, scope: !6168)
!6170 = !DILocation(line: 261, column: 28, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 261, column: 28)
!6172 = !DILocalVariable(name: "id_entry", scope: !6153, file: !3, line: 262, type: !3802)
!6173 = !DILocation(line: 262, column: 30, scope: !6153)
!6174 = !DILocation(line: 264, column: 13, scope: !6153)
!6175 = !DILocation(line: 264, column: 19, scope: !6153)
!6176 = !DILocation(line: 264, column: 11, scope: !6153)
!6177 = !DILocation(line: 265, column: 6, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 265, column: 6)
!6179 = !DILocation(line: 265, column: 6, scope: !6153)
!6180 = !DILocation(line: 266, column: 3, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 265, column: 16)
!6182 = !DILocation(line: 266, column: 10, scope: !6181)
!6183 = !DILocation(line: 266, column: 20, scope: !6181)
!6184 = !DILocation(line: 267, column: 29, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 267, column: 8)
!6186 = distinct !DILexicalBlock(scope: !6181, file: !3, line: 266, column: 32)
!6187 = !DILocation(line: 267, column: 39, scope: !6185)
!6188 = !DILocation(line: 267, column: 8, scope: !6185)
!6189 = !DILocation(line: 267, column: 8, scope: !6186)
!6190 = !DILocation(line: 268, column: 22, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 267, column: 46)
!6192 = !DILocation(line: 268, column: 5, scope: !6191)
!6193 = !DILocation(line: 268, column: 11, scope: !6191)
!6194 = !DILocation(line: 268, column: 20, scope: !6191)
!6195 = !DILocation(line: 269, column: 5, scope: !6191)
!6196 = !DILocation(line: 271, column: 12, scope: !6186)
!6197 = distinct !{!6197, !6180, !6198}
!6198 = !DILocation(line: 272, column: 3, scope: !6181)
!6199 = !DILocation(line: 273, column: 2, scope: !6181)
!6200 = !DILocation(line: 275, column: 2, scope: !6153)
!6201 = !DILocation(line: 276, column: 1, scope: !6153)
!6202 = distinct !DISubprogram(name: "dfl_bus_uevent", scope: !3, file: !3, line: 297, type: !3198, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6203 = !DILocalVariable(name: "dev", arg: 1, scope: !6202, file: !3, line: 297, type: !3184)
!6204 = !DILocation(line: 297, column: 42, scope: !6202)
!6205 = !DILocalVariable(name: "env", arg: 2, scope: !6202, file: !3, line: 297, type: !212)
!6206 = !DILocation(line: 297, column: 71, scope: !6202)
!6207 = !DILocalVariable(name: "ddev", scope: !6202, file: !3, line: 299, type: !3790)
!6208 = !DILocation(line: 299, column: 21, scope: !6202)
!6209 = !DILocalVariable(name: "__mptr", scope: !6210, file: !3, line: 299, type: !126)
!6210 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 299, column: 28)
!6211 = !DILocation(line: 299, column: 28, scope: !6210)
!6212 = !DILocation(line: 299, column: 28, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 299, column: 28)
!6214 = !DILocation(line: 302, column: 24, scope: !6202)
!6215 = !DILocation(line: 303, column: 10, scope: !6202)
!6216 = !DILocation(line: 303, column: 16, scope: !6202)
!6217 = !DILocation(line: 303, column: 22, scope: !6202)
!6218 = !DILocation(line: 303, column: 28, scope: !6202)
!6219 = !DILocation(line: 302, column: 9, scope: !6202)
!6220 = !DILocation(line: 302, column: 2, scope: !6202)
!6221 = distinct !DISubprogram(name: "dfl_bus_probe", scope: !3, file: !3, line: 278, type: !3216, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6222 = !DILocalVariable(name: "dev", arg: 1, scope: !6221, file: !3, line: 278, type: !3184)
!6223 = !DILocation(line: 278, column: 41, scope: !6221)
!6224 = !DILocalVariable(name: "ddrv", scope: !6221, file: !3, line: 280, type: !3815)
!6225 = !DILocation(line: 280, column: 21, scope: !6221)
!6226 = !DILocalVariable(name: "__mptr", scope: !6227, file: !3, line: 280, type: !126)
!6227 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 280, column: 28)
!6228 = !DILocation(line: 280, column: 28, scope: !6227)
!6229 = !DILocation(line: 280, column: 28, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 280, column: 28)
!6231 = !DILocalVariable(name: "ddev", scope: !6221, file: !3, line: 281, type: !3790)
!6232 = !DILocation(line: 281, column: 21, scope: !6221)
!6233 = !DILocalVariable(name: "__mptr", scope: !6234, file: !3, line: 281, type: !126)
!6234 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 281, column: 28)
!6235 = !DILocation(line: 281, column: 28, scope: !6234)
!6236 = !DILocation(line: 281, column: 28, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 281, column: 28)
!6238 = !DILocation(line: 283, column: 9, scope: !6221)
!6239 = !DILocation(line: 283, column: 15, scope: !6221)
!6240 = !DILocation(line: 283, column: 21, scope: !6221)
!6241 = !DILocation(line: 283, column: 2, scope: !6221)
!6242 = distinct !DISubprogram(name: "dfl_bus_remove", scope: !3, file: !3, line: 286, type: !3216, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6243 = !DILocalVariable(name: "dev", arg: 1, scope: !6242, file: !3, line: 286, type: !3184)
!6244 = !DILocation(line: 286, column: 42, scope: !6242)
!6245 = !DILocalVariable(name: "ddrv", scope: !6242, file: !3, line: 288, type: !3815)
!6246 = !DILocation(line: 288, column: 21, scope: !6242)
!6247 = !DILocalVariable(name: "__mptr", scope: !6248, file: !3, line: 288, type: !126)
!6248 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 288, column: 28)
!6249 = !DILocation(line: 288, column: 28, scope: !6248)
!6250 = !DILocation(line: 288, column: 28, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 288, column: 28)
!6252 = !DILocalVariable(name: "ddev", scope: !6242, file: !3, line: 289, type: !3790)
!6253 = !DILocation(line: 289, column: 21, scope: !6242)
!6254 = !DILocalVariable(name: "__mptr", scope: !6255, file: !3, line: 289, type: !126)
!6255 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 289, column: 28)
!6256 = !DILocation(line: 289, column: 28, scope: !6255)
!6257 = !DILocation(line: 289, column: 28, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 289, column: 28)
!6259 = !DILocation(line: 291, column: 6, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 291, column: 6)
!6261 = !DILocation(line: 291, column: 12, scope: !6260)
!6262 = !DILocation(line: 291, column: 6, scope: !6242)
!6263 = !DILocation(line: 292, column: 3, scope: !6260)
!6264 = !DILocation(line: 292, column: 9, scope: !6260)
!6265 = !DILocation(line: 292, column: 16, scope: !6260)
!6266 = !DILocation(line: 294, column: 2, scope: !6242)
!6267 = distinct !DISubprogram(name: "type_show", scope: !3, file: !3, line: 307, type: !3898, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6268 = !DILocalVariable(name: "dev", arg: 1, scope: !6267, file: !3, line: 307, type: !3184)
!6269 = !DILocation(line: 307, column: 26, scope: !6267)
!6270 = !DILocalVariable(name: "attr", arg: 2, scope: !6267, file: !3, line: 307, type: !3900)
!6271 = !DILocation(line: 307, column: 56, scope: !6267)
!6272 = !DILocalVariable(name: "buf", arg: 3, scope: !6267, file: !3, line: 307, type: !217)
!6273 = !DILocation(line: 307, column: 68, scope: !6267)
!6274 = !DILocalVariable(name: "ddev", scope: !6267, file: !3, line: 309, type: !3790)
!6275 = !DILocation(line: 309, column: 21, scope: !6267)
!6276 = !DILocalVariable(name: "__mptr", scope: !6277, file: !3, line: 309, type: !126)
!6277 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 309, column: 28)
!6278 = !DILocation(line: 309, column: 28, scope: !6277)
!6279 = !DILocation(line: 309, column: 28, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 309, column: 28)
!6281 = !DILocation(line: 311, column: 17, scope: !6267)
!6282 = !DILocation(line: 311, column: 32, scope: !6267)
!6283 = !DILocation(line: 311, column: 38, scope: !6267)
!6284 = !DILocation(line: 311, column: 9, scope: !6267)
!6285 = !DILocation(line: 311, column: 2, scope: !6267)
!6286 = distinct !DISubprogram(name: "feature_id_show", scope: !3, file: !3, line: 316, type: !3898, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6287 = !DILocalVariable(name: "dev", arg: 1, scope: !6286, file: !3, line: 316, type: !3184)
!6288 = !DILocation(line: 316, column: 32, scope: !6286)
!6289 = !DILocalVariable(name: "attr", arg: 2, scope: !6286, file: !3, line: 316, type: !3900)
!6290 = !DILocation(line: 316, column: 62, scope: !6286)
!6291 = !DILocalVariable(name: "buf", arg: 3, scope: !6286, file: !3, line: 316, type: !217)
!6292 = !DILocation(line: 316, column: 74, scope: !6286)
!6293 = !DILocalVariable(name: "ddev", scope: !6286, file: !3, line: 318, type: !3790)
!6294 = !DILocation(line: 318, column: 21, scope: !6286)
!6295 = !DILocalVariable(name: "__mptr", scope: !6296, file: !3, line: 318, type: !126)
!6296 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 318, column: 28)
!6297 = !DILocation(line: 318, column: 28, scope: !6296)
!6298 = !DILocation(line: 318, column: 28, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 318, column: 28)
!6300 = !DILocation(line: 320, column: 17, scope: !6286)
!6301 = !DILocation(line: 320, column: 32, scope: !6286)
!6302 = !DILocation(line: 320, column: 38, scope: !6286)
!6303 = !DILocation(line: 320, column: 9, scope: !6286)
!6304 = !DILocation(line: 320, column: 2, scope: !6286)
!6305 = distinct !DISubprogram(name: "dfl_match_one_device", scope: !3, file: !3, line: 250, type: !6306, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6306 = !DISubroutineType(types: !6307)
!6307 = !{!3802, !3802, !3790}
!6308 = !DILocalVariable(name: "id", arg: 1, scope: !6305, file: !3, line: 250, type: !3802)
!6309 = !DILocation(line: 250, column: 50, scope: !6305)
!6310 = !DILocalVariable(name: "ddev", arg: 2, scope: !6305, file: !3, line: 250, type: !3790)
!6311 = !DILocation(line: 250, column: 73, scope: !6305)
!6312 = !DILocation(line: 252, column: 6, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6305, file: !3, line: 252, column: 6)
!6314 = !DILocation(line: 252, column: 10, scope: !6313)
!6315 = !DILocation(line: 252, column: 18, scope: !6313)
!6316 = !DILocation(line: 252, column: 24, scope: !6313)
!6317 = !DILocation(line: 252, column: 15, scope: !6313)
!6318 = !DILocation(line: 252, column: 29, scope: !6313)
!6319 = !DILocation(line: 252, column: 32, scope: !6313)
!6320 = !DILocation(line: 252, column: 36, scope: !6313)
!6321 = !DILocation(line: 252, column: 50, scope: !6313)
!6322 = !DILocation(line: 252, column: 56, scope: !6313)
!6323 = !DILocation(line: 252, column: 47, scope: !6313)
!6324 = !DILocation(line: 252, column: 6, scope: !6305)
!6325 = !DILocation(line: 253, column: 10, scope: !6313)
!6326 = !DILocation(line: 253, column: 3, scope: !6313)
!6327 = !DILocation(line: 255, column: 2, scope: !6305)
!6328 = !DILocation(line: 256, column: 1, scope: !6305)
!6329 = distinct !DISubprogram(name: "dfl_dev_add", scope: !3, file: !3, line: 353, type: !6330, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6330 = !DISubroutineType(types: !6331)
!6331 = !{!3790, !3649, !3780}
!6332 = !DILocalVariable(name: "pdata", arg: 1, scope: !6329, file: !3, line: 353, type: !3649)
!6333 = !DILocation(line: 353, column: 47, scope: !6329)
!6334 = !DILocalVariable(name: "feature", arg: 2, scope: !6329, file: !3, line: 354, type: !3780)
!6335 = !DILocation(line: 354, column: 26, scope: !6329)
!6336 = !DILocalVariable(name: "pdev", scope: !6329, file: !3, line: 356, type: !150)
!6337 = !DILocation(line: 356, column: 26, scope: !6329)
!6338 = !DILocation(line: 356, column: 33, scope: !6329)
!6339 = !DILocation(line: 356, column: 40, scope: !6329)
!6340 = !DILocalVariable(name: "parent_res", scope: !6329, file: !3, line: 357, type: !3616)
!6341 = !DILocation(line: 357, column: 19, scope: !6329)
!6342 = !DILocalVariable(name: "ddev", scope: !6329, file: !3, line: 358, type: !3790)
!6343 = !DILocation(line: 358, column: 21, scope: !6329)
!6344 = !DILocalVariable(name: "id", scope: !6329, file: !3, line: 359, type: !149)
!6345 = !DILocation(line: 359, column: 6, scope: !6329)
!6346 = !DILocalVariable(name: "i", scope: !6329, file: !3, line: 359, type: !149)
!6347 = !DILocation(line: 359, column: 10, scope: !6329)
!6348 = !DILocalVariable(name: "ret", scope: !6329, file: !3, line: 359, type: !149)
!6349 = !DILocation(line: 359, column: 13, scope: !6329)
!6350 = !DILocation(line: 361, column: 9, scope: !6329)
!6351 = !DILocation(line: 361, column: 7, scope: !6329)
!6352 = !DILocation(line: 362, column: 7, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 362, column: 6)
!6354 = !DILocation(line: 362, column: 6, scope: !6329)
!6355 = !DILocation(line: 363, column: 10, scope: !6353)
!6356 = !DILocation(line: 363, column: 3, scope: !6353)
!6357 = !DILocation(line: 365, column: 7, scope: !6329)
!6358 = !DILocation(line: 365, column: 5, scope: !6329)
!6359 = !DILocation(line: 366, column: 6, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 366, column: 6)
!6361 = !DILocation(line: 366, column: 9, scope: !6360)
!6362 = !DILocation(line: 366, column: 6, scope: !6329)
!6363 = !DILocation(line: 367, column: 3, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 366, column: 14)
!6365 = !DILocation(line: 368, column: 9, scope: !6364)
!6366 = !DILocation(line: 368, column: 3, scope: !6364)
!6367 = !DILocation(line: 369, column: 18, scope: !6364)
!6368 = !DILocation(line: 369, column: 10, scope: !6364)
!6369 = !DILocation(line: 369, column: 3, scope: !6364)
!6370 = !DILocation(line: 373, column: 21, scope: !6329)
!6371 = !DILocation(line: 373, column: 27, scope: !6329)
!6372 = !DILocation(line: 373, column: 2, scope: !6329)
!6373 = !DILocation(line: 374, column: 22, scope: !6329)
!6374 = !DILocation(line: 374, column: 28, scope: !6329)
!6375 = !DILocation(line: 374, column: 2, scope: !6329)
!6376 = !DILocation(line: 374, column: 8, scope: !6329)
!6377 = !DILocation(line: 374, column: 12, scope: !6329)
!6378 = !DILocation(line: 374, column: 19, scope: !6329)
!6379 = !DILocation(line: 375, column: 2, scope: !6329)
!6380 = !DILocation(line: 375, column: 8, scope: !6329)
!6381 = !DILocation(line: 375, column: 12, scope: !6329)
!6382 = !DILocation(line: 375, column: 16, scope: !6329)
!6383 = !DILocation(line: 376, column: 2, scope: !6329)
!6384 = !DILocation(line: 376, column: 8, scope: !6329)
!6385 = !DILocation(line: 376, column: 12, scope: !6329)
!6386 = !DILocation(line: 376, column: 20, scope: !6329)
!6387 = !DILocation(line: 377, column: 13, scope: !6329)
!6388 = !DILocation(line: 377, column: 2, scope: !6329)
!6389 = !DILocation(line: 377, column: 8, scope: !6329)
!6390 = !DILocation(line: 377, column: 11, scope: !6329)
!6391 = !DILocation(line: 378, column: 22, scope: !6329)
!6392 = !DILocation(line: 378, column: 28, scope: !6329)
!6393 = !DILocation(line: 378, column: 47, scope: !6329)
!6394 = !DILocation(line: 378, column: 8, scope: !6329)
!6395 = !DILocation(line: 378, column: 6, scope: !6329)
!6396 = !DILocation(line: 379, column: 6, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 379, column: 6)
!6398 = !DILocation(line: 379, column: 6, scope: !6329)
!6399 = !DILocation(line: 380, column: 3, scope: !6397)
!6400 = !DILocation(line: 382, column: 35, scope: !6329)
!6401 = !DILocation(line: 382, column: 15, scope: !6329)
!6402 = !DILocation(line: 382, column: 2, scope: !6329)
!6403 = !DILocation(line: 382, column: 8, scope: !6329)
!6404 = !DILocation(line: 382, column: 13, scope: !6329)
!6405 = !DILocation(line: 383, column: 21, scope: !6329)
!6406 = !DILocation(line: 383, column: 30, scope: !6329)
!6407 = !DILocation(line: 383, column: 2, scope: !6329)
!6408 = !DILocation(line: 383, column: 8, scope: !6329)
!6409 = !DILocation(line: 383, column: 19, scope: !6329)
!6410 = !DILocation(line: 384, column: 15, scope: !6329)
!6411 = !DILocation(line: 384, column: 22, scope: !6329)
!6412 = !DILocation(line: 384, column: 2, scope: !6329)
!6413 = !DILocation(line: 384, column: 8, scope: !6329)
!6414 = !DILocation(line: 384, column: 13, scope: !6329)
!6415 = !DILocation(line: 387, column: 16, scope: !6329)
!6416 = !DILocation(line: 387, column: 22, scope: !6329)
!6417 = !DILocation(line: 387, column: 31, scope: !6329)
!6418 = !DILocation(line: 387, column: 40, scope: !6329)
!6419 = !DILocation(line: 387, column: 13, scope: !6329)
!6420 = !DILocation(line: 388, column: 2, scope: !6329)
!6421 = !DILocation(line: 388, column: 8, scope: !6329)
!6422 = !DILocation(line: 388, column: 17, scope: !6329)
!6423 = !DILocation(line: 388, column: 23, scope: !6329)
!6424 = !DILocation(line: 389, column: 25, scope: !6329)
!6425 = !DILocation(line: 389, column: 37, scope: !6329)
!6426 = !DILocation(line: 389, column: 2, scope: !6329)
!6427 = !DILocation(line: 389, column: 8, scope: !6329)
!6428 = !DILocation(line: 389, column: 17, scope: !6329)
!6429 = !DILocation(line: 389, column: 23, scope: !6329)
!6430 = !DILocation(line: 390, column: 23, scope: !6329)
!6431 = !DILocation(line: 390, column: 35, scope: !6329)
!6432 = !DILocation(line: 390, column: 2, scope: !6329)
!6433 = !DILocation(line: 390, column: 8, scope: !6329)
!6434 = !DILocation(line: 390, column: 17, scope: !6329)
!6435 = !DILocation(line: 390, column: 21, scope: !6329)
!6436 = !DILocation(line: 391, column: 34, scope: !6329)
!6437 = !DILocation(line: 391, column: 40, scope: !6329)
!6438 = !DILocation(line: 391, column: 24, scope: !6329)
!6439 = !DILocation(line: 391, column: 2, scope: !6329)
!6440 = !DILocation(line: 391, column: 8, scope: !6329)
!6441 = !DILocation(line: 391, column: 17, scope: !6329)
!6442 = !DILocation(line: 391, column: 22, scope: !6329)
!6443 = !DILocation(line: 392, column: 24, scope: !6329)
!6444 = !DILocation(line: 392, column: 37, scope: !6329)
!6445 = !DILocation(line: 392, column: 43, scope: !6329)
!6446 = !DILocation(line: 392, column: 8, scope: !6329)
!6447 = !DILocation(line: 392, column: 6, scope: !6329)
!6448 = !DILocation(line: 393, column: 6, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 393, column: 6)
!6450 = !DILocation(line: 393, column: 6, scope: !6329)
!6451 = !DILocation(line: 394, column: 3, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 393, column: 11)
!6453 = !DILocation(line: 396, column: 3, scope: !6452)
!6454 = !DILocation(line: 400, column: 6, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 400, column: 6)
!6456 = !DILocation(line: 400, column: 15, scope: !6455)
!6457 = !DILocation(line: 400, column: 6, scope: !6329)
!6458 = !DILocation(line: 401, column: 24, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 400, column: 24)
!6460 = !DILocation(line: 401, column: 33, scope: !6459)
!6461 = !DILocation(line: 401, column: 16, scope: !6459)
!6462 = !DILocation(line: 401, column: 3, scope: !6459)
!6463 = !DILocation(line: 401, column: 9, scope: !6459)
!6464 = !DILocation(line: 401, column: 14, scope: !6459)
!6465 = !DILocation(line: 403, column: 8, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 403, column: 7)
!6467 = !DILocation(line: 403, column: 14, scope: !6466)
!6468 = !DILocation(line: 403, column: 7, scope: !6459)
!6469 = !DILocation(line: 404, column: 8, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 403, column: 20)
!6471 = !DILocation(line: 405, column: 4, scope: !6470)
!6472 = !DILocation(line: 408, column: 10, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 408, column: 3)
!6474 = !DILocation(line: 408, column: 8, scope: !6473)
!6475 = !DILocation(line: 408, column: 15, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 408, column: 3)
!6477 = !DILocation(line: 408, column: 19, scope: !6476)
!6478 = !DILocation(line: 408, column: 28, scope: !6476)
!6479 = !DILocation(line: 408, column: 17, scope: !6476)
!6480 = !DILocation(line: 408, column: 3, scope: !6473)
!6481 = !DILocation(line: 409, column: 20, scope: !6476)
!6482 = !DILocation(line: 409, column: 29, scope: !6476)
!6483 = !DILocation(line: 409, column: 37, scope: !6476)
!6484 = !DILocation(line: 409, column: 40, scope: !6476)
!6485 = !DILocation(line: 409, column: 4, scope: !6476)
!6486 = !DILocation(line: 409, column: 10, scope: !6476)
!6487 = !DILocation(line: 409, column: 15, scope: !6476)
!6488 = !DILocation(line: 409, column: 18, scope: !6476)
!6489 = !DILocation(line: 408, column: 38, scope: !6476)
!6490 = !DILocation(line: 408, column: 3, scope: !6476)
!6491 = distinct !{!6491, !6480, !6492}
!6492 = !DILocation(line: 409, column: 40, scope: !6473)
!6493 = !DILocation(line: 411, column: 20, scope: !6459)
!6494 = !DILocation(line: 411, column: 29, scope: !6459)
!6495 = !DILocation(line: 411, column: 3, scope: !6459)
!6496 = !DILocation(line: 411, column: 9, scope: !6459)
!6497 = !DILocation(line: 411, column: 18, scope: !6459)
!6498 = !DILocation(line: 412, column: 2, scope: !6459)
!6499 = !DILocation(line: 414, column: 20, scope: !6329)
!6500 = !DILocation(line: 414, column: 26, scope: !6329)
!6501 = !DILocation(line: 414, column: 8, scope: !6329)
!6502 = !DILocation(line: 414, column: 6, scope: !6329)
!6503 = !DILocation(line: 415, column: 6, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 415, column: 6)
!6505 = !DILocation(line: 415, column: 6, scope: !6329)
!6506 = !DILocation(line: 416, column: 3, scope: !6504)
!6507 = !DILocation(line: 419, column: 9, scope: !6329)
!6508 = !DILocation(line: 419, column: 2, scope: !6329)
!6509 = !DILabel(scope: !6329, name: "put_dev", file: !3, line: 421)
!6510 = !DILocation(line: 421, column: 1, scope: !6329)
!6511 = !DILocation(line: 423, column: 14, scope: !6329)
!6512 = !DILocation(line: 423, column: 20, scope: !6329)
!6513 = !DILocation(line: 423, column: 2, scope: !6329)
!6514 = !DILocation(line: 424, column: 17, scope: !6329)
!6515 = !DILocation(line: 424, column: 9, scope: !6329)
!6516 = !DILocation(line: 424, column: 2, scope: !6329)
!6517 = !DILocation(line: 425, column: 1, scope: !6329)
!6518 = distinct !DISubprogram(name: "kzalloc", scope: !102, file: !102, line: 662, type: !6519, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6519 = !DISubroutineType(types: !6520)
!6520 = !{!126, !264, !685}
!6521 = !DILocalVariable(name: "s", arg: 1, scope: !6522, file: !102, line: 445, type: !877)
!6522 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !102, file: !102, line: 445, type: !6523, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6523 = !DISubroutineType(types: !6524)
!6524 = !{!126, !877, !685, !264}
!6525 = !DILocation(line: 445, column: 72, scope: !6522, inlinedAt: !6526)
!6526 = distinct !DILocation(line: 552, column: 10, scope: !6527, inlinedAt: !6530)
!6527 = distinct !DILexicalBlock(scope: !6528, file: !102, line: 540, column: 34)
!6528 = distinct !DILexicalBlock(scope: !6529, file: !102, line: 540, column: 6)
!6529 = distinct !DISubprogram(name: "kmalloc", scope: !102, file: !102, line: 538, type: !6519, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6530 = distinct !DILocation(line: 664, column: 9, scope: !6518)
!6531 = !DILocalVariable(name: "flags", arg: 2, scope: !6522, file: !102, line: 446, type: !685)
!6532 = !DILocation(line: 446, column: 9, scope: !6522, inlinedAt: !6526)
!6533 = !DILocalVariable(name: "size", arg: 3, scope: !6522, file: !102, line: 446, type: !264)
!6534 = !DILocation(line: 446, column: 23, scope: !6522, inlinedAt: !6526)
!6535 = !DILocalVariable(name: "ret", scope: !6522, file: !102, line: 448, type: !126)
!6536 = !DILocation(line: 448, column: 8, scope: !6522, inlinedAt: !6526)
!6537 = !DILocalVariable(name: "flags", arg: 1, scope: !6538, file: !102, line: 318, type: !685)
!6538 = distinct !DISubprogram(name: "kmalloc_type", scope: !102, file: !102, line: 318, type: !6539, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{!101, !685}
!6541 = !DILocation(line: 318, column: 67, scope: !6538, inlinedAt: !6542)
!6542 = distinct !DILocation(line: 553, column: 20, scope: !6527, inlinedAt: !6530)
!6543 = !DILocalVariable(name: "size", arg: 1, scope: !6544, file: !102, line: 346, type: !264)
!6544 = distinct !DISubprogram(name: "kmalloc_index", scope: !102, file: !102, line: 346, type: !6545, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6545 = !DISubroutineType(types: !6546)
!6546 = !{!7, !264}
!6547 = !DILocation(line: 346, column: 58, scope: !6544, inlinedAt: !6548)
!6548 = distinct !DILocation(line: 547, column: 11, scope: !6527, inlinedAt: !6530)
!6549 = !DILocalVariable(name: "size", arg: 1, scope: !6550, file: !102, line: 472, type: !264)
!6550 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !102, file: !102, line: 472, type: !6551, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6551 = !DISubroutineType(types: !6552)
!6552 = !{!126, !264, !685, !7}
!6553 = !DILocation(line: 472, column: 28, scope: !6550, inlinedAt: !6554)
!6554 = distinct !DILocation(line: 481, column: 9, scope: !6555, inlinedAt: !6556)
!6555 = distinct !DISubprogram(name: "kmalloc_large", scope: !102, file: !102, line: 478, type: !6519, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6556 = distinct !DILocation(line: 545, column: 11, scope: !6557, inlinedAt: !6530)
!6557 = distinct !DILexicalBlock(scope: !6527, file: !102, line: 544, column: 7)
!6558 = !DILocalVariable(name: "flags", arg: 2, scope: !6550, file: !102, line: 472, type: !685)
!6559 = !DILocation(line: 472, column: 40, scope: !6550, inlinedAt: !6554)
!6560 = !DILocalVariable(name: "order", arg: 3, scope: !6550, file: !102, line: 472, type: !7)
!6561 = !DILocation(line: 472, column: 60, scope: !6550, inlinedAt: !6554)
!6562 = !DILocalVariable(name: "size", arg: 1, scope: !6555, file: !102, line: 478, type: !264)
!6563 = !DILocation(line: 478, column: 51, scope: !6555, inlinedAt: !6556)
!6564 = !DILocalVariable(name: "flags", arg: 2, scope: !6555, file: !102, line: 478, type: !685)
!6565 = !DILocation(line: 478, column: 63, scope: !6555, inlinedAt: !6556)
!6566 = !DILocalVariable(name: "order", scope: !6555, file: !102, line: 480, type: !7)
!6567 = !DILocation(line: 480, column: 15, scope: !6555, inlinedAt: !6556)
!6568 = !DILocalVariable(name: "size", arg: 1, scope: !6529, file: !102, line: 538, type: !264)
!6569 = !DILocation(line: 538, column: 45, scope: !6529, inlinedAt: !6530)
!6570 = !DILocalVariable(name: "flags", arg: 2, scope: !6529, file: !102, line: 538, type: !685)
!6571 = !DILocation(line: 538, column: 57, scope: !6529, inlinedAt: !6530)
!6572 = !DILocalVariable(name: "index", scope: !6527, file: !102, line: 542, type: !7)
!6573 = !DILocation(line: 542, column: 16, scope: !6527, inlinedAt: !6530)
!6574 = !DILocalVariable(name: "size", arg: 1, scope: !6518, file: !102, line: 662, type: !264)
!6575 = !DILocation(line: 662, column: 36, scope: !6518)
!6576 = !DILocalVariable(name: "flags", arg: 2, scope: !6518, file: !102, line: 662, type: !685)
!6577 = !DILocation(line: 662, column: 48, scope: !6518)
!6578 = !DILocation(line: 664, column: 17, scope: !6518)
!6579 = !DILocation(line: 664, column: 23, scope: !6518)
!6580 = !DILocation(line: 664, column: 29, scope: !6518)
!6581 = !DILocation(line: 540, column: 27, scope: !6528, inlinedAt: !6530)
!6582 = !DILocation(line: 540, column: 6, scope: !6528, inlinedAt: !6530)
!6583 = !DILocation(line: 540, column: 6, scope: !6529, inlinedAt: !6530)
!6584 = !DILocation(line: 544, column: 7, scope: !6557, inlinedAt: !6530)
!6585 = !DILocation(line: 544, column: 12, scope: !6557, inlinedAt: !6530)
!6586 = !DILocation(line: 544, column: 7, scope: !6527, inlinedAt: !6530)
!6587 = !DILocation(line: 545, column: 25, scope: !6557, inlinedAt: !6530)
!6588 = !DILocation(line: 545, column: 31, scope: !6557, inlinedAt: !6530)
!6589 = !DILocation(line: 480, column: 33, scope: !6555, inlinedAt: !6556)
!6590 = !DILocation(line: 480, column: 23, scope: !6555, inlinedAt: !6556)
!6591 = !DILocation(line: 481, column: 29, scope: !6555, inlinedAt: !6556)
!6592 = !DILocation(line: 481, column: 35, scope: !6555, inlinedAt: !6556)
!6593 = !DILocation(line: 481, column: 42, scope: !6555, inlinedAt: !6556)
!6594 = !DILocation(line: 474, column: 23, scope: !6550, inlinedAt: !6554)
!6595 = !DILocation(line: 474, column: 29, scope: !6550, inlinedAt: !6554)
!6596 = !DILocation(line: 474, column: 36, scope: !6550, inlinedAt: !6554)
!6597 = !DILocation(line: 474, column: 9, scope: !6550, inlinedAt: !6554)
!6598 = !DILocation(line: 545, column: 4, scope: !6557, inlinedAt: !6530)
!6599 = !DILocation(line: 547, column: 25, scope: !6527, inlinedAt: !6530)
!6600 = !DILocation(line: 348, column: 7, scope: !6601, inlinedAt: !6548)
!6601 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 348, column: 6)
!6602 = !DILocation(line: 348, column: 6, scope: !6544, inlinedAt: !6548)
!6603 = !DILocation(line: 349, column: 3, scope: !6601, inlinedAt: !6548)
!6604 = !DILocation(line: 351, column: 6, scope: !6605, inlinedAt: !6548)
!6605 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 351, column: 6)
!6606 = !DILocation(line: 351, column: 11, scope: !6605, inlinedAt: !6548)
!6607 = !DILocation(line: 351, column: 6, scope: !6544, inlinedAt: !6548)
!6608 = !DILocation(line: 352, column: 3, scope: !6605, inlinedAt: !6548)
!6609 = !DILocation(line: 354, column: 32, scope: !6610, inlinedAt: !6548)
!6610 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 354, column: 6)
!6611 = !DILocation(line: 354, column: 37, scope: !6610, inlinedAt: !6548)
!6612 = !DILocation(line: 354, column: 42, scope: !6610, inlinedAt: !6548)
!6613 = !DILocation(line: 354, column: 45, scope: !6610, inlinedAt: !6548)
!6614 = !DILocation(line: 354, column: 50, scope: !6610, inlinedAt: !6548)
!6615 = !DILocation(line: 354, column: 6, scope: !6544, inlinedAt: !6548)
!6616 = !DILocation(line: 355, column: 3, scope: !6610, inlinedAt: !6548)
!6617 = !DILocation(line: 356, column: 32, scope: !6618, inlinedAt: !6548)
!6618 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 356, column: 6)
!6619 = !DILocation(line: 356, column: 37, scope: !6618, inlinedAt: !6548)
!6620 = !DILocation(line: 356, column: 43, scope: !6618, inlinedAt: !6548)
!6621 = !DILocation(line: 356, column: 46, scope: !6618, inlinedAt: !6548)
!6622 = !DILocation(line: 356, column: 51, scope: !6618, inlinedAt: !6548)
!6623 = !DILocation(line: 356, column: 6, scope: !6544, inlinedAt: !6548)
!6624 = !DILocation(line: 357, column: 3, scope: !6618, inlinedAt: !6548)
!6625 = !DILocation(line: 358, column: 6, scope: !6626, inlinedAt: !6548)
!6626 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 358, column: 6)
!6627 = !DILocation(line: 358, column: 11, scope: !6626, inlinedAt: !6548)
!6628 = !DILocation(line: 358, column: 6, scope: !6544, inlinedAt: !6548)
!6629 = !DILocation(line: 358, column: 26, scope: !6626, inlinedAt: !6548)
!6630 = !DILocation(line: 359, column: 6, scope: !6631, inlinedAt: !6548)
!6631 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 359, column: 6)
!6632 = !DILocation(line: 359, column: 11, scope: !6631, inlinedAt: !6548)
!6633 = !DILocation(line: 359, column: 6, scope: !6544, inlinedAt: !6548)
!6634 = !DILocation(line: 359, column: 26, scope: !6631, inlinedAt: !6548)
!6635 = !DILocation(line: 360, column: 6, scope: !6636, inlinedAt: !6548)
!6636 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 360, column: 6)
!6637 = !DILocation(line: 360, column: 11, scope: !6636, inlinedAt: !6548)
!6638 = !DILocation(line: 360, column: 6, scope: !6544, inlinedAt: !6548)
!6639 = !DILocation(line: 360, column: 26, scope: !6636, inlinedAt: !6548)
!6640 = !DILocation(line: 361, column: 6, scope: !6641, inlinedAt: !6548)
!6641 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 361, column: 6)
!6642 = !DILocation(line: 361, column: 11, scope: !6641, inlinedAt: !6548)
!6643 = !DILocation(line: 361, column: 6, scope: !6544, inlinedAt: !6548)
!6644 = !DILocation(line: 361, column: 26, scope: !6641, inlinedAt: !6548)
!6645 = !DILocation(line: 362, column: 6, scope: !6646, inlinedAt: !6548)
!6646 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 362, column: 6)
!6647 = !DILocation(line: 362, column: 11, scope: !6646, inlinedAt: !6548)
!6648 = !DILocation(line: 362, column: 6, scope: !6544, inlinedAt: !6548)
!6649 = !DILocation(line: 362, column: 26, scope: !6646, inlinedAt: !6548)
!6650 = !DILocation(line: 363, column: 6, scope: !6651, inlinedAt: !6548)
!6651 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 363, column: 6)
!6652 = !DILocation(line: 363, column: 11, scope: !6651, inlinedAt: !6548)
!6653 = !DILocation(line: 363, column: 6, scope: !6544, inlinedAt: !6548)
!6654 = !DILocation(line: 363, column: 26, scope: !6651, inlinedAt: !6548)
!6655 = !DILocation(line: 364, column: 6, scope: !6656, inlinedAt: !6548)
!6656 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 364, column: 6)
!6657 = !DILocation(line: 364, column: 11, scope: !6656, inlinedAt: !6548)
!6658 = !DILocation(line: 364, column: 6, scope: !6544, inlinedAt: !6548)
!6659 = !DILocation(line: 364, column: 26, scope: !6656, inlinedAt: !6548)
!6660 = !DILocation(line: 365, column: 6, scope: !6661, inlinedAt: !6548)
!6661 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 365, column: 6)
!6662 = !DILocation(line: 365, column: 11, scope: !6661, inlinedAt: !6548)
!6663 = !DILocation(line: 365, column: 6, scope: !6544, inlinedAt: !6548)
!6664 = !DILocation(line: 365, column: 26, scope: !6661, inlinedAt: !6548)
!6665 = !DILocation(line: 366, column: 6, scope: !6666, inlinedAt: !6548)
!6666 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 366, column: 6)
!6667 = !DILocation(line: 366, column: 11, scope: !6666, inlinedAt: !6548)
!6668 = !DILocation(line: 366, column: 6, scope: !6544, inlinedAt: !6548)
!6669 = !DILocation(line: 366, column: 26, scope: !6666, inlinedAt: !6548)
!6670 = !DILocation(line: 367, column: 6, scope: !6671, inlinedAt: !6548)
!6671 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 367, column: 6)
!6672 = !DILocation(line: 367, column: 11, scope: !6671, inlinedAt: !6548)
!6673 = !DILocation(line: 367, column: 6, scope: !6544, inlinedAt: !6548)
!6674 = !DILocation(line: 367, column: 26, scope: !6671, inlinedAt: !6548)
!6675 = !DILocation(line: 368, column: 6, scope: !6676, inlinedAt: !6548)
!6676 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 368, column: 6)
!6677 = !DILocation(line: 368, column: 11, scope: !6676, inlinedAt: !6548)
!6678 = !DILocation(line: 368, column: 6, scope: !6544, inlinedAt: !6548)
!6679 = !DILocation(line: 368, column: 26, scope: !6676, inlinedAt: !6548)
!6680 = !DILocation(line: 369, column: 6, scope: !6681, inlinedAt: !6548)
!6681 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 369, column: 6)
!6682 = !DILocation(line: 369, column: 11, scope: !6681, inlinedAt: !6548)
!6683 = !DILocation(line: 369, column: 6, scope: !6544, inlinedAt: !6548)
!6684 = !DILocation(line: 369, column: 26, scope: !6681, inlinedAt: !6548)
!6685 = !DILocation(line: 370, column: 6, scope: !6686, inlinedAt: !6548)
!6686 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 370, column: 6)
!6687 = !DILocation(line: 370, column: 11, scope: !6686, inlinedAt: !6548)
!6688 = !DILocation(line: 370, column: 6, scope: !6544, inlinedAt: !6548)
!6689 = !DILocation(line: 370, column: 26, scope: !6686, inlinedAt: !6548)
!6690 = !DILocation(line: 371, column: 6, scope: !6691, inlinedAt: !6548)
!6691 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 371, column: 6)
!6692 = !DILocation(line: 371, column: 11, scope: !6691, inlinedAt: !6548)
!6693 = !DILocation(line: 371, column: 6, scope: !6544, inlinedAt: !6548)
!6694 = !DILocation(line: 371, column: 26, scope: !6691, inlinedAt: !6548)
!6695 = !DILocation(line: 372, column: 6, scope: !6696, inlinedAt: !6548)
!6696 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 372, column: 6)
!6697 = !DILocation(line: 372, column: 11, scope: !6696, inlinedAt: !6548)
!6698 = !DILocation(line: 372, column: 6, scope: !6544, inlinedAt: !6548)
!6699 = !DILocation(line: 372, column: 26, scope: !6696, inlinedAt: !6548)
!6700 = !DILocation(line: 373, column: 6, scope: !6701, inlinedAt: !6548)
!6701 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 373, column: 6)
!6702 = !DILocation(line: 373, column: 11, scope: !6701, inlinedAt: !6548)
!6703 = !DILocation(line: 373, column: 6, scope: !6544, inlinedAt: !6548)
!6704 = !DILocation(line: 373, column: 26, scope: !6701, inlinedAt: !6548)
!6705 = !DILocation(line: 374, column: 6, scope: !6706, inlinedAt: !6548)
!6706 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 374, column: 6)
!6707 = !DILocation(line: 374, column: 11, scope: !6706, inlinedAt: !6548)
!6708 = !DILocation(line: 374, column: 6, scope: !6544, inlinedAt: !6548)
!6709 = !DILocation(line: 374, column: 26, scope: !6706, inlinedAt: !6548)
!6710 = !DILocation(line: 375, column: 6, scope: !6711, inlinedAt: !6548)
!6711 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 375, column: 6)
!6712 = !DILocation(line: 375, column: 11, scope: !6711, inlinedAt: !6548)
!6713 = !DILocation(line: 375, column: 6, scope: !6544, inlinedAt: !6548)
!6714 = !DILocation(line: 375, column: 27, scope: !6711, inlinedAt: !6548)
!6715 = !DILocation(line: 376, column: 6, scope: !6716, inlinedAt: !6548)
!6716 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 376, column: 6)
!6717 = !DILocation(line: 376, column: 11, scope: !6716, inlinedAt: !6548)
!6718 = !DILocation(line: 376, column: 6, scope: !6544, inlinedAt: !6548)
!6719 = !DILocation(line: 376, column: 32, scope: !6716, inlinedAt: !6548)
!6720 = !DILocation(line: 377, column: 6, scope: !6721, inlinedAt: !6548)
!6721 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 377, column: 6)
!6722 = !DILocation(line: 377, column: 11, scope: !6721, inlinedAt: !6548)
!6723 = !DILocation(line: 377, column: 6, scope: !6544, inlinedAt: !6548)
!6724 = !DILocation(line: 377, column: 32, scope: !6721, inlinedAt: !6548)
!6725 = !DILocation(line: 378, column: 6, scope: !6726, inlinedAt: !6548)
!6726 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 378, column: 6)
!6727 = !DILocation(line: 378, column: 11, scope: !6726, inlinedAt: !6548)
!6728 = !DILocation(line: 378, column: 6, scope: !6544, inlinedAt: !6548)
!6729 = !DILocation(line: 378, column: 32, scope: !6726, inlinedAt: !6548)
!6730 = !DILocation(line: 379, column: 6, scope: !6731, inlinedAt: !6548)
!6731 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 379, column: 6)
!6732 = !DILocation(line: 379, column: 11, scope: !6731, inlinedAt: !6548)
!6733 = !DILocation(line: 379, column: 6, scope: !6544, inlinedAt: !6548)
!6734 = !DILocation(line: 379, column: 33, scope: !6731, inlinedAt: !6548)
!6735 = !DILocation(line: 380, column: 6, scope: !6736, inlinedAt: !6548)
!6736 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 380, column: 6)
!6737 = !DILocation(line: 380, column: 11, scope: !6736, inlinedAt: !6548)
!6738 = !DILocation(line: 380, column: 6, scope: !6544, inlinedAt: !6548)
!6739 = !DILocation(line: 380, column: 33, scope: !6736, inlinedAt: !6548)
!6740 = !DILocation(line: 381, column: 6, scope: !6741, inlinedAt: !6548)
!6741 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 381, column: 6)
!6742 = !DILocation(line: 381, column: 11, scope: !6741, inlinedAt: !6548)
!6743 = !DILocation(line: 381, column: 6, scope: !6544, inlinedAt: !6548)
!6744 = !DILocation(line: 381, column: 33, scope: !6741, inlinedAt: !6548)
!6745 = !DILocation(line: 382, column: 2, scope: !6746, inlinedAt: !6548)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !102, line: 382, column: 2)
!6747 = distinct !DILexicalBlock(scope: !6544, file: !102, line: 382, column: 2)
!6748 = !{i32 -2142609468, i32 -2142609439, i32 -2142609393, i32 -2142609335, i32 -2142609281, i32 -2142609227, i32 -2142609172, i32 -2142609141}
!6749 = !DILocation(line: 382, column: 2, scope: !6750, inlinedAt: !6548)
!6750 = distinct !DILexicalBlock(scope: !6751, file: !102, line: 382, column: 2)
!6751 = distinct !DILexicalBlock(scope: !6747, file: !102, line: 382, column: 2)
!6752 = !{i32 -2142608698, i32 -2142608691, i32 -2142608637, i32 -2142608606, i32 -2142608576}
!6753 = !DILocation(line: 382, column: 2, scope: !6751, inlinedAt: !6548)
!6754 = !DILocation(line: 386, column: 1, scope: !6544, inlinedAt: !6548)
!6755 = !DILocation(line: 547, column: 9, scope: !6527, inlinedAt: !6530)
!6756 = !DILocation(line: 549, column: 8, scope: !6757, inlinedAt: !6530)
!6757 = distinct !DILexicalBlock(scope: !6527, file: !102, line: 549, column: 7)
!6758 = !DILocation(line: 549, column: 7, scope: !6527, inlinedAt: !6530)
!6759 = !DILocation(line: 550, column: 4, scope: !6757, inlinedAt: !6530)
!6760 = !DILocation(line: 553, column: 33, scope: !6527, inlinedAt: !6530)
!6761 = !DILocation(line: 325, column: 6, scope: !6762, inlinedAt: !6542)
!6762 = distinct !DILexicalBlock(scope: !6538, file: !102, line: 325, column: 6)
!6763 = !DILocation(line: 325, column: 6, scope: !6538, inlinedAt: !6542)
!6764 = !DILocation(line: 326, column: 3, scope: !6762, inlinedAt: !6542)
!6765 = !DILocation(line: 332, column: 9, scope: !6538, inlinedAt: !6542)
!6766 = !DILocation(line: 332, column: 15, scope: !6538, inlinedAt: !6542)
!6767 = !DILocation(line: 332, column: 2, scope: !6538, inlinedAt: !6542)
!6768 = !DILocation(line: 336, column: 1, scope: !6538, inlinedAt: !6542)
!6769 = !DILocation(line: 553, column: 5, scope: !6527, inlinedAt: !6530)
!6770 = !DILocation(line: 553, column: 41, scope: !6527, inlinedAt: !6530)
!6771 = !DILocation(line: 554, column: 5, scope: !6527, inlinedAt: !6530)
!6772 = !DILocation(line: 554, column: 12, scope: !6527, inlinedAt: !6530)
!6773 = !DILocation(line: 448, column: 31, scope: !6522, inlinedAt: !6526)
!6774 = !DILocation(line: 448, column: 34, scope: !6522, inlinedAt: !6526)
!6775 = !DILocation(line: 448, column: 14, scope: !6522, inlinedAt: !6526)
!6776 = !DILocation(line: 450, column: 22, scope: !6522, inlinedAt: !6526)
!6777 = !DILocation(line: 450, column: 25, scope: !6522, inlinedAt: !6526)
!6778 = !DILocation(line: 450, column: 30, scope: !6522, inlinedAt: !6526)
!6779 = !DILocation(line: 450, column: 36, scope: !6522, inlinedAt: !6526)
!6780 = !DILocation(line: 450, column: 8, scope: !6522, inlinedAt: !6526)
!6781 = !DILocation(line: 450, column: 6, scope: !6522, inlinedAt: !6526)
!6782 = !DILocation(line: 451, column: 9, scope: !6522, inlinedAt: !6526)
!6783 = !DILocation(line: 552, column: 3, scope: !6527, inlinedAt: !6530)
!6784 = !DILocation(line: 557, column: 19, scope: !6529, inlinedAt: !6530)
!6785 = !DILocation(line: 557, column: 25, scope: !6529, inlinedAt: !6530)
!6786 = !DILocation(line: 557, column: 9, scope: !6529, inlinedAt: !6530)
!6787 = !DILocation(line: 557, column: 2, scope: !6529, inlinedAt: !6530)
!6788 = !DILocation(line: 558, column: 1, scope: !6529, inlinedAt: !6530)
!6789 = !DILocation(line: 664, column: 2, scope: !6518)
!6790 = distinct !DISubprogram(name: "release_dfl_dev", scope: !3, file: !3, line: 340, type: !3207, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6791 = !DILocalVariable(name: "dev", arg: 1, scope: !6790, file: !3, line: 340, type: !3184)
!6792 = !DILocation(line: 340, column: 44, scope: !6790)
!6793 = !DILocalVariable(name: "ddev", scope: !6790, file: !3, line: 342, type: !3790)
!6794 = !DILocation(line: 342, column: 21, scope: !6790)
!6795 = !DILocalVariable(name: "__mptr", scope: !6796, file: !3, line: 342, type: !126)
!6796 = distinct !DILexicalBlock(scope: !6790, file: !3, line: 342, column: 28)
!6797 = !DILocation(line: 342, column: 28, scope: !6796)
!6798 = !DILocation(line: 342, column: 28, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 342, column: 28)
!6800 = !DILocation(line: 344, column: 6, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6790, file: !3, line: 344, column: 6)
!6802 = !DILocation(line: 344, column: 12, scope: !6801)
!6803 = !DILocation(line: 344, column: 21, scope: !6801)
!6804 = !DILocation(line: 344, column: 6, scope: !6790)
!6805 = !DILocation(line: 345, column: 21, scope: !6801)
!6806 = !DILocation(line: 345, column: 27, scope: !6801)
!6807 = !DILocation(line: 345, column: 3, scope: !6801)
!6808 = !DILocation(line: 347, column: 2, scope: !6790)
!6809 = !DILocation(line: 348, column: 8, scope: !6790)
!6810 = !DILocation(line: 348, column: 14, scope: !6790)
!6811 = !DILocation(line: 348, column: 2, scope: !6790)
!6812 = !DILocation(line: 349, column: 8, scope: !6790)
!6813 = !DILocation(line: 349, column: 2, scope: !6790)
!6814 = !DILocation(line: 350, column: 1, scope: !6790)
!6815 = distinct !DISubprogram(name: "dev_name", scope: !60, file: !60, line: 609, type: !6816, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6816 = !DISubroutineType(types: !6817)
!6817 = !{!131, !3503}
!6818 = !DILocalVariable(name: "dev", arg: 1, scope: !6815, file: !60, line: 609, type: !3503)
!6819 = !DILocation(line: 609, column: 57, scope: !6815)
!6820 = !DILocation(line: 612, column: 6, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6815, file: !60, line: 612, column: 6)
!6822 = !DILocation(line: 612, column: 11, scope: !6821)
!6823 = !DILocation(line: 612, column: 6, scope: !6815)
!6824 = !DILocation(line: 613, column: 10, scope: !6821)
!6825 = !DILocation(line: 613, column: 15, scope: !6821)
!6826 = !DILocation(line: 613, column: 3, scope: !6821)
!6827 = !DILocation(line: 615, column: 23, scope: !6815)
!6828 = !DILocation(line: 615, column: 28, scope: !6815)
!6829 = !DILocation(line: 615, column: 9, scope: !6815)
!6830 = !DILocation(line: 615, column: 2, scope: !6815)
!6831 = !DILocation(line: 616, column: 1, scope: !6815)
!6832 = distinct !DISubprogram(name: "kcalloc", scope: !102, file: !102, line: 601, type: !6833, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6833 = !DISubroutineType(types: !6834)
!6834 = !{!126, !264, !264, !685}
!6835 = !DILocalVariable(name: "n", arg: 1, scope: !6832, file: !102, line: 601, type: !264)
!6836 = !DILocation(line: 601, column: 36, scope: !6832)
!6837 = !DILocalVariable(name: "size", arg: 2, scope: !6832, file: !102, line: 601, type: !264)
!6838 = !DILocation(line: 601, column: 46, scope: !6832)
!6839 = !DILocalVariable(name: "flags", arg: 3, scope: !6832, file: !102, line: 601, type: !685)
!6840 = !DILocation(line: 601, column: 58, scope: !6832)
!6841 = !DILocation(line: 603, column: 23, scope: !6832)
!6842 = !DILocation(line: 603, column: 26, scope: !6832)
!6843 = !DILocation(line: 603, column: 32, scope: !6832)
!6844 = !DILocation(line: 603, column: 38, scope: !6832)
!6845 = !DILocation(line: 603, column: 9, scope: !6832)
!6846 = !DILocation(line: 603, column: 2, scope: !6832)
!6847 = distinct !DISubprogram(name: "get_order", scope: !6848, file: !6848, line: 29, type: !6849, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6848 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!6849 = !DISubroutineType(types: !6850)
!6850 = !{!149, !267}
!6851 = !DILocalVariable(name: "x", arg: 1, scope: !6852, file: !6853, line: 366, type: !365)
!6852 = distinct !DISubprogram(name: "fls64", scope: !6853, file: !6853, line: 366, type: !6854, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6853 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!6854 = !DISubroutineType(types: !6855)
!6855 = !{!149, !365}
!6856 = !DILocation(line: 366, column: 40, scope: !6852, inlinedAt: !6857)
!6857 = distinct !DILocation(line: 46, column: 9, scope: !6847)
!6858 = !DILocalVariable(name: "bitpos", scope: !6852, file: !6853, line: 368, type: !149)
!6859 = !DILocation(line: 368, column: 6, scope: !6852, inlinedAt: !6857)
!6860 = !DILocalVariable(name: "size", arg: 1, scope: !6847, file: !6848, line: 29, type: !267)
!6861 = !DILocation(line: 29, column: 63, scope: !6847)
!6862 = !DILocation(line: 31, column: 27, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6847, file: !6848, line: 31, column: 6)
!6864 = !DILocation(line: 31, column: 6, scope: !6863)
!6865 = !DILocation(line: 31, column: 6, scope: !6847)
!6866 = !DILocation(line: 32, column: 8, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !6848, line: 32, column: 7)
!6868 = distinct !DILexicalBlock(scope: !6863, file: !6848, line: 31, column: 34)
!6869 = !DILocation(line: 32, column: 7, scope: !6868)
!6870 = !DILocation(line: 33, column: 4, scope: !6867)
!6871 = !DILocation(line: 35, column: 7, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6868, file: !6848, line: 35, column: 7)
!6873 = !DILocation(line: 35, column: 12, scope: !6872)
!6874 = !DILocation(line: 35, column: 7, scope: !6868)
!6875 = !DILocation(line: 36, column: 4, scope: !6872)
!6876 = !DILocation(line: 38, column: 10, scope: !6868)
!6877 = !DILocation(line: 38, column: 28, scope: !6868)
!6878 = !DILocation(line: 38, column: 41, scope: !6868)
!6879 = !DILocation(line: 38, column: 3, scope: !6868)
!6880 = !DILocation(line: 41, column: 6, scope: !6847)
!6881 = !DILocation(line: 42, column: 7, scope: !6847)
!6882 = !DILocation(line: 46, column: 15, scope: !6847)
!6883 = !DILocation(line: 374, column: 2, scope: !6852, inlinedAt: !6857)
!6884 = !DILocation(line: 376, column: 14, scope: !6852, inlinedAt: !6857)
!6885 = !{i32 356857}
!6886 = !DILocation(line: 377, column: 9, scope: !6852, inlinedAt: !6857)
!6887 = !DILocation(line: 377, column: 16, scope: !6852, inlinedAt: !6857)
!6888 = !DILocation(line: 46, column: 2, scope: !6847)
!6889 = !DILocation(line: 48, column: 1, scope: !6847)
!6890 = distinct !DISubprogram(name: "__ilog2_u64", scope: !6891, file: !6891, line: 30, type: !6892, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6891 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!6892 = !DISubroutineType(types: !6893)
!6893 = !{!149, !364}
!6894 = !DILocation(line: 366, column: 40, scope: !6852, inlinedAt: !6895)
!6895 = distinct !DILocation(line: 32, column: 9, scope: !6890)
!6896 = !DILocation(line: 368, column: 6, scope: !6852, inlinedAt: !6895)
!6897 = !DILocalVariable(name: "n", arg: 1, scope: !6890, file: !6891, line: 30, type: !364)
!6898 = !DILocation(line: 30, column: 21, scope: !6890)
!6899 = !DILocation(line: 32, column: 15, scope: !6890)
!6900 = !DILocation(line: 374, column: 2, scope: !6852, inlinedAt: !6895)
!6901 = !DILocation(line: 376, column: 14, scope: !6852, inlinedAt: !6895)
!6902 = !DILocation(line: 377, column: 9, scope: !6852, inlinedAt: !6895)
!6903 = !DILocation(line: 377, column: 16, scope: !6852, inlinedAt: !6895)
!6904 = !DILocation(line: 32, column: 18, scope: !6890)
!6905 = !DILocation(line: 32, column: 2, scope: !6890)
!6906 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !6907, file: !6907, line: 137, type: !6908, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6907 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!6908 = !DISubroutineType(types: !6909)
!6909 = !{!126, !877, !1991, !264, !685}
!6910 = !DILocalVariable(name: "s", arg: 1, scope: !6906, file: !6907, line: 137, type: !877)
!6911 = !DILocation(line: 137, column: 54, scope: !6906)
!6912 = !DILocalVariable(name: "object", arg: 2, scope: !6906, file: !6907, line: 137, type: !1991)
!6913 = !DILocation(line: 137, column: 69, scope: !6906)
!6914 = !DILocalVariable(name: "size", arg: 3, scope: !6906, file: !6907, line: 138, type: !264)
!6915 = !DILocation(line: 138, column: 12, scope: !6906)
!6916 = !DILocalVariable(name: "flags", arg: 4, scope: !6906, file: !6907, line: 138, type: !685)
!6917 = !DILocation(line: 138, column: 24, scope: !6906)
!6918 = !DILocation(line: 140, column: 17, scope: !6906)
!6919 = !DILocation(line: 140, column: 2, scope: !6906)
!6920 = distinct !DISubprogram(name: "kobject_name", scope: !164, file: !164, line: 88, type: !6921, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6921 = !DISubroutineType(types: !6922)
!6922 = !{!131, !6923}
!6923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6924, size: 64)
!6924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !163)
!6925 = !DILocalVariable(name: "kobj", arg: 1, scope: !6920, file: !164, line: 88, type: !6923)
!6926 = !DILocation(line: 88, column: 62, scope: !6920)
!6927 = !DILocation(line: 90, column: 9, scope: !6920)
!6928 = !DILocation(line: 90, column: 15, scope: !6920)
!6929 = !DILocation(line: 90, column: 2, scope: !6920)
!6930 = distinct !DISubprogram(name: "kmalloc_array", scope: !102, file: !102, line: 584, type: !6833, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!6931 = !DILocation(line: 445, column: 72, scope: !6522, inlinedAt: !6932)
!6932 = distinct !DILocation(line: 552, column: 10, scope: !6527, inlinedAt: !6933)
!6933 = distinct !DILocation(line: 591, column: 10, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6930, file: !102, line: 590, column: 6)
!6935 = !DILocation(line: 446, column: 9, scope: !6522, inlinedAt: !6932)
!6936 = !DILocation(line: 446, column: 23, scope: !6522, inlinedAt: !6932)
!6937 = !DILocation(line: 448, column: 8, scope: !6522, inlinedAt: !6932)
!6938 = !DILocation(line: 318, column: 67, scope: !6538, inlinedAt: !6939)
!6939 = distinct !DILocation(line: 553, column: 20, scope: !6527, inlinedAt: !6933)
!6940 = !DILocation(line: 346, column: 58, scope: !6544, inlinedAt: !6941)
!6941 = distinct !DILocation(line: 547, column: 11, scope: !6527, inlinedAt: !6933)
!6942 = !DILocation(line: 472, column: 28, scope: !6550, inlinedAt: !6943)
!6943 = distinct !DILocation(line: 481, column: 9, scope: !6555, inlinedAt: !6944)
!6944 = distinct !DILocation(line: 545, column: 11, scope: !6557, inlinedAt: !6933)
!6945 = !DILocation(line: 472, column: 40, scope: !6550, inlinedAt: !6943)
!6946 = !DILocation(line: 472, column: 60, scope: !6550, inlinedAt: !6943)
!6947 = !DILocation(line: 478, column: 51, scope: !6555, inlinedAt: !6944)
!6948 = !DILocation(line: 478, column: 63, scope: !6555, inlinedAt: !6944)
!6949 = !DILocation(line: 480, column: 15, scope: !6555, inlinedAt: !6944)
!6950 = !DILocation(line: 538, column: 45, scope: !6529, inlinedAt: !6933)
!6951 = !DILocation(line: 538, column: 57, scope: !6529, inlinedAt: !6933)
!6952 = !DILocation(line: 542, column: 16, scope: !6527, inlinedAt: !6933)
!6953 = !DILocalVariable(name: "n", arg: 1, scope: !6930, file: !102, line: 584, type: !264)
!6954 = !DILocation(line: 584, column: 42, scope: !6930)
!6955 = !DILocalVariable(name: "size", arg: 2, scope: !6930, file: !102, line: 584, type: !264)
!6956 = !DILocation(line: 584, column: 52, scope: !6930)
!6957 = !DILocalVariable(name: "flags", arg: 3, scope: !6930, file: !102, line: 584, type: !685)
!6958 = !DILocation(line: 584, column: 64, scope: !6930)
!6959 = !DILocalVariable(name: "bytes", scope: !6930, file: !102, line: 586, type: !264)
!6960 = !DILocation(line: 586, column: 9, scope: !6930)
!6961 = !DILocalVariable(name: "__a", scope: !6962, file: !102, line: 588, type: !264)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !102, line: 588, column: 6)
!6963 = distinct !DILexicalBlock(scope: !6930, file: !102, line: 588, column: 6)
!6964 = !DILocation(line: 588, column: 6, scope: !6962)
!6965 = !DILocalVariable(name: "__b", scope: !6962, file: !102, line: 588, type: !264)
!6966 = !DILocalVariable(name: "__d", scope: !6962, file: !102, line: 588, type: !6967)
!6967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!6968 = !DILocation(line: 588, column: 6, scope: !6963)
!6969 = !DILocation(line: 588, column: 6, scope: !6930)
!6970 = !DILocation(line: 589, column: 3, scope: !6963)
!6971 = !DILocation(line: 590, column: 27, scope: !6934)
!6972 = !DILocation(line: 590, column: 6, scope: !6934)
!6973 = !DILocation(line: 590, column: 30, scope: !6934)
!6974 = !DILocation(line: 590, column: 54, scope: !6934)
!6975 = !DILocation(line: 590, column: 33, scope: !6934)
!6976 = !DILocation(line: 590, column: 6, scope: !6930)
!6977 = !DILocation(line: 591, column: 18, scope: !6934)
!6978 = !DILocation(line: 591, column: 25, scope: !6934)
!6979 = !DILocation(line: 540, column: 27, scope: !6528, inlinedAt: !6933)
!6980 = !DILocation(line: 540, column: 6, scope: !6528, inlinedAt: !6933)
!6981 = !DILocation(line: 540, column: 6, scope: !6529, inlinedAt: !6933)
!6982 = !DILocation(line: 544, column: 7, scope: !6557, inlinedAt: !6933)
!6983 = !DILocation(line: 544, column: 12, scope: !6557, inlinedAt: !6933)
!6984 = !DILocation(line: 544, column: 7, scope: !6527, inlinedAt: !6933)
!6985 = !DILocation(line: 545, column: 25, scope: !6557, inlinedAt: !6933)
!6986 = !DILocation(line: 545, column: 31, scope: !6557, inlinedAt: !6933)
!6987 = !DILocation(line: 480, column: 33, scope: !6555, inlinedAt: !6944)
!6988 = !DILocation(line: 480, column: 23, scope: !6555, inlinedAt: !6944)
!6989 = !DILocation(line: 481, column: 29, scope: !6555, inlinedAt: !6944)
!6990 = !DILocation(line: 481, column: 35, scope: !6555, inlinedAt: !6944)
!6991 = !DILocation(line: 481, column: 42, scope: !6555, inlinedAt: !6944)
!6992 = !DILocation(line: 474, column: 23, scope: !6550, inlinedAt: !6943)
!6993 = !DILocation(line: 474, column: 29, scope: !6550, inlinedAt: !6943)
!6994 = !DILocation(line: 474, column: 36, scope: !6550, inlinedAt: !6943)
!6995 = !DILocation(line: 474, column: 9, scope: !6550, inlinedAt: !6943)
!6996 = !DILocation(line: 545, column: 4, scope: !6557, inlinedAt: !6933)
!6997 = !DILocation(line: 547, column: 25, scope: !6527, inlinedAt: !6933)
!6998 = !DILocation(line: 348, column: 7, scope: !6601, inlinedAt: !6941)
!6999 = !DILocation(line: 348, column: 6, scope: !6544, inlinedAt: !6941)
!7000 = !DILocation(line: 349, column: 3, scope: !6601, inlinedAt: !6941)
!7001 = !DILocation(line: 351, column: 6, scope: !6605, inlinedAt: !6941)
!7002 = !DILocation(line: 351, column: 11, scope: !6605, inlinedAt: !6941)
!7003 = !DILocation(line: 351, column: 6, scope: !6544, inlinedAt: !6941)
!7004 = !DILocation(line: 352, column: 3, scope: !6605, inlinedAt: !6941)
!7005 = !DILocation(line: 354, column: 32, scope: !6610, inlinedAt: !6941)
!7006 = !DILocation(line: 354, column: 37, scope: !6610, inlinedAt: !6941)
!7007 = !DILocation(line: 354, column: 42, scope: !6610, inlinedAt: !6941)
!7008 = !DILocation(line: 354, column: 45, scope: !6610, inlinedAt: !6941)
!7009 = !DILocation(line: 354, column: 50, scope: !6610, inlinedAt: !6941)
!7010 = !DILocation(line: 354, column: 6, scope: !6544, inlinedAt: !6941)
!7011 = !DILocation(line: 355, column: 3, scope: !6610, inlinedAt: !6941)
!7012 = !DILocation(line: 356, column: 32, scope: !6618, inlinedAt: !6941)
!7013 = !DILocation(line: 356, column: 37, scope: !6618, inlinedAt: !6941)
!7014 = !DILocation(line: 356, column: 43, scope: !6618, inlinedAt: !6941)
!7015 = !DILocation(line: 356, column: 46, scope: !6618, inlinedAt: !6941)
!7016 = !DILocation(line: 356, column: 51, scope: !6618, inlinedAt: !6941)
!7017 = !DILocation(line: 356, column: 6, scope: !6544, inlinedAt: !6941)
!7018 = !DILocation(line: 357, column: 3, scope: !6618, inlinedAt: !6941)
!7019 = !DILocation(line: 358, column: 6, scope: !6626, inlinedAt: !6941)
!7020 = !DILocation(line: 358, column: 11, scope: !6626, inlinedAt: !6941)
!7021 = !DILocation(line: 358, column: 6, scope: !6544, inlinedAt: !6941)
!7022 = !DILocation(line: 358, column: 26, scope: !6626, inlinedAt: !6941)
!7023 = !DILocation(line: 359, column: 6, scope: !6631, inlinedAt: !6941)
!7024 = !DILocation(line: 359, column: 11, scope: !6631, inlinedAt: !6941)
!7025 = !DILocation(line: 359, column: 6, scope: !6544, inlinedAt: !6941)
!7026 = !DILocation(line: 359, column: 26, scope: !6631, inlinedAt: !6941)
!7027 = !DILocation(line: 360, column: 6, scope: !6636, inlinedAt: !6941)
!7028 = !DILocation(line: 360, column: 11, scope: !6636, inlinedAt: !6941)
!7029 = !DILocation(line: 360, column: 6, scope: !6544, inlinedAt: !6941)
!7030 = !DILocation(line: 360, column: 26, scope: !6636, inlinedAt: !6941)
!7031 = !DILocation(line: 361, column: 6, scope: !6641, inlinedAt: !6941)
!7032 = !DILocation(line: 361, column: 11, scope: !6641, inlinedAt: !6941)
!7033 = !DILocation(line: 361, column: 6, scope: !6544, inlinedAt: !6941)
!7034 = !DILocation(line: 361, column: 26, scope: !6641, inlinedAt: !6941)
!7035 = !DILocation(line: 362, column: 6, scope: !6646, inlinedAt: !6941)
!7036 = !DILocation(line: 362, column: 11, scope: !6646, inlinedAt: !6941)
!7037 = !DILocation(line: 362, column: 6, scope: !6544, inlinedAt: !6941)
!7038 = !DILocation(line: 362, column: 26, scope: !6646, inlinedAt: !6941)
!7039 = !DILocation(line: 363, column: 6, scope: !6651, inlinedAt: !6941)
!7040 = !DILocation(line: 363, column: 11, scope: !6651, inlinedAt: !6941)
!7041 = !DILocation(line: 363, column: 6, scope: !6544, inlinedAt: !6941)
!7042 = !DILocation(line: 363, column: 26, scope: !6651, inlinedAt: !6941)
!7043 = !DILocation(line: 364, column: 6, scope: !6656, inlinedAt: !6941)
!7044 = !DILocation(line: 364, column: 11, scope: !6656, inlinedAt: !6941)
!7045 = !DILocation(line: 364, column: 6, scope: !6544, inlinedAt: !6941)
!7046 = !DILocation(line: 364, column: 26, scope: !6656, inlinedAt: !6941)
!7047 = !DILocation(line: 365, column: 6, scope: !6661, inlinedAt: !6941)
!7048 = !DILocation(line: 365, column: 11, scope: !6661, inlinedAt: !6941)
!7049 = !DILocation(line: 365, column: 6, scope: !6544, inlinedAt: !6941)
!7050 = !DILocation(line: 365, column: 26, scope: !6661, inlinedAt: !6941)
!7051 = !DILocation(line: 366, column: 6, scope: !6666, inlinedAt: !6941)
!7052 = !DILocation(line: 366, column: 11, scope: !6666, inlinedAt: !6941)
!7053 = !DILocation(line: 366, column: 6, scope: !6544, inlinedAt: !6941)
!7054 = !DILocation(line: 366, column: 26, scope: !6666, inlinedAt: !6941)
!7055 = !DILocation(line: 367, column: 6, scope: !6671, inlinedAt: !6941)
!7056 = !DILocation(line: 367, column: 11, scope: !6671, inlinedAt: !6941)
!7057 = !DILocation(line: 367, column: 6, scope: !6544, inlinedAt: !6941)
!7058 = !DILocation(line: 367, column: 26, scope: !6671, inlinedAt: !6941)
!7059 = !DILocation(line: 368, column: 6, scope: !6676, inlinedAt: !6941)
!7060 = !DILocation(line: 368, column: 11, scope: !6676, inlinedAt: !6941)
!7061 = !DILocation(line: 368, column: 6, scope: !6544, inlinedAt: !6941)
!7062 = !DILocation(line: 368, column: 26, scope: !6676, inlinedAt: !6941)
!7063 = !DILocation(line: 369, column: 6, scope: !6681, inlinedAt: !6941)
!7064 = !DILocation(line: 369, column: 11, scope: !6681, inlinedAt: !6941)
!7065 = !DILocation(line: 369, column: 6, scope: !6544, inlinedAt: !6941)
!7066 = !DILocation(line: 369, column: 26, scope: !6681, inlinedAt: !6941)
!7067 = !DILocation(line: 370, column: 6, scope: !6686, inlinedAt: !6941)
!7068 = !DILocation(line: 370, column: 11, scope: !6686, inlinedAt: !6941)
!7069 = !DILocation(line: 370, column: 6, scope: !6544, inlinedAt: !6941)
!7070 = !DILocation(line: 370, column: 26, scope: !6686, inlinedAt: !6941)
!7071 = !DILocation(line: 371, column: 6, scope: !6691, inlinedAt: !6941)
!7072 = !DILocation(line: 371, column: 11, scope: !6691, inlinedAt: !6941)
!7073 = !DILocation(line: 371, column: 6, scope: !6544, inlinedAt: !6941)
!7074 = !DILocation(line: 371, column: 26, scope: !6691, inlinedAt: !6941)
!7075 = !DILocation(line: 372, column: 6, scope: !6696, inlinedAt: !6941)
!7076 = !DILocation(line: 372, column: 11, scope: !6696, inlinedAt: !6941)
!7077 = !DILocation(line: 372, column: 6, scope: !6544, inlinedAt: !6941)
!7078 = !DILocation(line: 372, column: 26, scope: !6696, inlinedAt: !6941)
!7079 = !DILocation(line: 373, column: 6, scope: !6701, inlinedAt: !6941)
!7080 = !DILocation(line: 373, column: 11, scope: !6701, inlinedAt: !6941)
!7081 = !DILocation(line: 373, column: 6, scope: !6544, inlinedAt: !6941)
!7082 = !DILocation(line: 373, column: 26, scope: !6701, inlinedAt: !6941)
!7083 = !DILocation(line: 374, column: 6, scope: !6706, inlinedAt: !6941)
!7084 = !DILocation(line: 374, column: 11, scope: !6706, inlinedAt: !6941)
!7085 = !DILocation(line: 374, column: 6, scope: !6544, inlinedAt: !6941)
!7086 = !DILocation(line: 374, column: 26, scope: !6706, inlinedAt: !6941)
!7087 = !DILocation(line: 375, column: 6, scope: !6711, inlinedAt: !6941)
!7088 = !DILocation(line: 375, column: 11, scope: !6711, inlinedAt: !6941)
!7089 = !DILocation(line: 375, column: 6, scope: !6544, inlinedAt: !6941)
!7090 = !DILocation(line: 375, column: 27, scope: !6711, inlinedAt: !6941)
!7091 = !DILocation(line: 376, column: 6, scope: !6716, inlinedAt: !6941)
!7092 = !DILocation(line: 376, column: 11, scope: !6716, inlinedAt: !6941)
!7093 = !DILocation(line: 376, column: 6, scope: !6544, inlinedAt: !6941)
!7094 = !DILocation(line: 376, column: 32, scope: !6716, inlinedAt: !6941)
!7095 = !DILocation(line: 377, column: 6, scope: !6721, inlinedAt: !6941)
!7096 = !DILocation(line: 377, column: 11, scope: !6721, inlinedAt: !6941)
!7097 = !DILocation(line: 377, column: 6, scope: !6544, inlinedAt: !6941)
!7098 = !DILocation(line: 377, column: 32, scope: !6721, inlinedAt: !6941)
!7099 = !DILocation(line: 378, column: 6, scope: !6726, inlinedAt: !6941)
!7100 = !DILocation(line: 378, column: 11, scope: !6726, inlinedAt: !6941)
!7101 = !DILocation(line: 378, column: 6, scope: !6544, inlinedAt: !6941)
!7102 = !DILocation(line: 378, column: 32, scope: !6726, inlinedAt: !6941)
!7103 = !DILocation(line: 379, column: 6, scope: !6731, inlinedAt: !6941)
!7104 = !DILocation(line: 379, column: 11, scope: !6731, inlinedAt: !6941)
!7105 = !DILocation(line: 379, column: 6, scope: !6544, inlinedAt: !6941)
!7106 = !DILocation(line: 379, column: 33, scope: !6731, inlinedAt: !6941)
!7107 = !DILocation(line: 380, column: 6, scope: !6736, inlinedAt: !6941)
!7108 = !DILocation(line: 380, column: 11, scope: !6736, inlinedAt: !6941)
!7109 = !DILocation(line: 380, column: 6, scope: !6544, inlinedAt: !6941)
!7110 = !DILocation(line: 380, column: 33, scope: !6736, inlinedAt: !6941)
!7111 = !DILocation(line: 381, column: 6, scope: !6741, inlinedAt: !6941)
!7112 = !DILocation(line: 381, column: 11, scope: !6741, inlinedAt: !6941)
!7113 = !DILocation(line: 381, column: 6, scope: !6544, inlinedAt: !6941)
!7114 = !DILocation(line: 381, column: 33, scope: !6741, inlinedAt: !6941)
!7115 = !DILocation(line: 382, column: 2, scope: !6746, inlinedAt: !6941)
!7116 = !DILocation(line: 382, column: 2, scope: !6750, inlinedAt: !6941)
!7117 = !DILocation(line: 382, column: 2, scope: !6751, inlinedAt: !6941)
!7118 = !DILocation(line: 386, column: 1, scope: !6544, inlinedAt: !6941)
!7119 = !DILocation(line: 547, column: 9, scope: !6527, inlinedAt: !6933)
!7120 = !DILocation(line: 549, column: 8, scope: !6757, inlinedAt: !6933)
!7121 = !DILocation(line: 549, column: 7, scope: !6527, inlinedAt: !6933)
!7122 = !DILocation(line: 550, column: 4, scope: !6757, inlinedAt: !6933)
!7123 = !DILocation(line: 553, column: 33, scope: !6527, inlinedAt: !6933)
!7124 = !DILocation(line: 325, column: 6, scope: !6762, inlinedAt: !6939)
!7125 = !DILocation(line: 325, column: 6, scope: !6538, inlinedAt: !6939)
!7126 = !DILocation(line: 326, column: 3, scope: !6762, inlinedAt: !6939)
!7127 = !DILocation(line: 332, column: 9, scope: !6538, inlinedAt: !6939)
!7128 = !DILocation(line: 332, column: 15, scope: !6538, inlinedAt: !6939)
!7129 = !DILocation(line: 332, column: 2, scope: !6538, inlinedAt: !6939)
!7130 = !DILocation(line: 336, column: 1, scope: !6538, inlinedAt: !6939)
!7131 = !DILocation(line: 553, column: 5, scope: !6527, inlinedAt: !6933)
!7132 = !DILocation(line: 553, column: 41, scope: !6527, inlinedAt: !6933)
!7133 = !DILocation(line: 554, column: 5, scope: !6527, inlinedAt: !6933)
!7134 = !DILocation(line: 554, column: 12, scope: !6527, inlinedAt: !6933)
!7135 = !DILocation(line: 448, column: 31, scope: !6522, inlinedAt: !6932)
!7136 = !DILocation(line: 448, column: 34, scope: !6522, inlinedAt: !6932)
!7137 = !DILocation(line: 448, column: 14, scope: !6522, inlinedAt: !6932)
!7138 = !DILocation(line: 450, column: 22, scope: !6522, inlinedAt: !6932)
!7139 = !DILocation(line: 450, column: 25, scope: !6522, inlinedAt: !6932)
!7140 = !DILocation(line: 450, column: 30, scope: !6522, inlinedAt: !6932)
!7141 = !DILocation(line: 450, column: 36, scope: !6522, inlinedAt: !6932)
!7142 = !DILocation(line: 450, column: 8, scope: !6522, inlinedAt: !6932)
!7143 = !DILocation(line: 450, column: 6, scope: !6522, inlinedAt: !6932)
!7144 = !DILocation(line: 451, column: 9, scope: !6522, inlinedAt: !6932)
!7145 = !DILocation(line: 552, column: 3, scope: !6527, inlinedAt: !6933)
!7146 = !DILocation(line: 557, column: 19, scope: !6529, inlinedAt: !6933)
!7147 = !DILocation(line: 557, column: 25, scope: !6529, inlinedAt: !6933)
!7148 = !DILocation(line: 557, column: 9, scope: !6529, inlinedAt: !6933)
!7149 = !DILocation(line: 557, column: 2, scope: !6529, inlinedAt: !6933)
!7150 = !DILocation(line: 558, column: 1, scope: !6529, inlinedAt: !6933)
!7151 = !DILocation(line: 591, column: 3, scope: !6934)
!7152 = !DILocation(line: 592, column: 19, scope: !6930)
!7153 = !DILocation(line: 592, column: 26, scope: !6930)
!7154 = !DILocation(line: 592, column: 9, scope: !6930)
!7155 = !DILocation(line: 592, column: 2, scope: !6930)
!7156 = !DILocation(line: 593, column: 1, scope: !6930)
!7157 = distinct !DISubprogram(name: "__must_check_overflow", scope: !7158, file: !7158, line: 52, type: !7159, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!7158 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!7159 = !DISubroutineType(types: !7160)
!7160 = !{!157, !157}
!7161 = !DILocalVariable(name: "overflow", arg: 1, scope: !7157, file: !7158, line: 52, type: !157)
!7162 = !DILocation(line: 52, column: 60, scope: !7157)
!7163 = !DILocation(line: 54, column: 9, scope: !7157)
!7164 = !DILocation(line: 54, column: 2, scope: !7157)
!7165 = distinct !DISubprogram(name: "build_info_prepare", scope: !3, file: !3, line: 1085, type: !4898, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!7166 = !DILocalVariable(name: "binfo", arg: 1, scope: !7165, file: !3, line: 1085, type: !3935)
!7167 = !DILocation(line: 1085, column: 63, scope: !7165)
!7168 = !DILocalVariable(name: "start", arg: 2, scope: !7165, file: !3, line: 1086, type: !3621)
!7169 = !DILocation(line: 1086, column: 26, scope: !7165)
!7170 = !DILocalVariable(name: "len", arg: 3, scope: !7165, file: !3, line: 1086, type: !3621)
!7171 = !DILocation(line: 1086, column: 49, scope: !7165)
!7172 = !DILocalVariable(name: "dev", scope: !7165, file: !3, line: 1088, type: !3184)
!7173 = !DILocation(line: 1088, column: 17, scope: !7165)
!7174 = !DILocation(line: 1088, column: 23, scope: !7165)
!7175 = !DILocation(line: 1088, column: 30, scope: !7165)
!7176 = !DILocalVariable(name: "ioaddr", scope: !7165, file: !3, line: 1089, type: !126)
!7177 = !DILocation(line: 1089, column: 16, scope: !7165)
!7178 = !DILocation(line: 1091, column: 7, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1091, column: 6)
!7180 = !DILocation(line: 1091, column: 6, scope: !7165)
!7181 = !DILocation(line: 1092, column: 3, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 1091, column: 64)
!7183 = !DILocation(line: 1094, column: 3, scope: !7182)
!7184 = !DILocation(line: 1097, column: 24, scope: !7165)
!7185 = !DILocation(line: 1097, column: 29, scope: !7165)
!7186 = !DILocation(line: 1097, column: 36, scope: !7165)
!7187 = !DILocation(line: 1097, column: 11, scope: !7165)
!7188 = !DILocation(line: 1097, column: 9, scope: !7165)
!7189 = !DILocation(line: 1098, column: 7, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1098, column: 6)
!7191 = !DILocation(line: 1098, column: 6, scope: !7165)
!7192 = !DILocation(line: 1099, column: 3, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7190, file: !3, line: 1098, column: 15)
!7194 = !DILocation(line: 1101, column: 3, scope: !7193)
!7195 = !DILocation(line: 1104, column: 17, scope: !7165)
!7196 = !DILocation(line: 1104, column: 2, scope: !7165)
!7197 = !DILocation(line: 1104, column: 9, scope: !7165)
!7198 = !DILocation(line: 1104, column: 15, scope: !7165)
!7199 = !DILocation(line: 1105, column: 15, scope: !7165)
!7200 = !DILocation(line: 1105, column: 2, scope: !7165)
!7201 = !DILocation(line: 1105, column: 9, scope: !7165)
!7202 = !DILocation(line: 1105, column: 13, scope: !7165)
!7203 = !DILocation(line: 1106, column: 18, scope: !7165)
!7204 = !DILocation(line: 1106, column: 2, scope: !7165)
!7205 = !DILocation(line: 1106, column: 9, scope: !7165)
!7206 = !DILocation(line: 1106, column: 16, scope: !7165)
!7207 = !DILocation(line: 1108, column: 2, scope: !7165)
!7208 = !DILocation(line: 1109, column: 1, scope: !7165)
!7209 = distinct !DISubprogram(name: "parse_feature", scope: !3, file: !3, line: 1182, type: !7210, scopeLine: 1184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!7210 = !DISubroutineType(types: !7211)
!7211 = !{!149, !3935, !3621}
!7212 = !DILocalVariable(name: "binfo", arg: 1, scope: !7209, file: !3, line: 1182, type: !3935)
!7213 = !DILocation(line: 1182, column: 58, scope: !7209)
!7214 = !DILocalVariable(name: "ofst", arg: 2, scope: !7209, file: !3, line: 1183, type: !3621)
!7215 = !DILocation(line: 1183, column: 21, scope: !7209)
!7216 = !DILocalVariable(name: "v", scope: !7209, file: !3, line: 1185, type: !364)
!7217 = !DILocation(line: 1185, column: 6, scope: !7209)
!7218 = !DILocalVariable(name: "type", scope: !7209, file: !3, line: 1186, type: !358)
!7219 = !DILocation(line: 1186, column: 6, scope: !7209)
!7220 = !DILocation(line: 1188, column: 12, scope: !7209)
!7221 = !DILocation(line: 1188, column: 19, scope: !7209)
!7222 = !DILocation(line: 1188, column: 28, scope: !7209)
!7223 = !DILocation(line: 1188, column: 26, scope: !7209)
!7224 = !DILocation(line: 1188, column: 33, scope: !7209)
!7225 = !DILocation(line: 1188, column: 6, scope: !7209)
!7226 = !DILocation(line: 1188, column: 4, scope: !7209)
!7227 = !DILocation(line: 1189, column: 9, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 1189, column: 9)
!7229 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 1189, column: 9)
!7230 = !DILocation(line: 1189, column: 9, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 1189, column: 9)
!7232 = !DILocation(line: 1189, column: 9, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 1189, column: 9)
!7234 = !DILocation(line: 1189, column: 9, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 1189, column: 9)
!7236 = !DILocation(line: 1189, column: 9, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 1189, column: 9)
!7238 = !DILocation(line: 1189, column: 9, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 1189, column: 9)
!7240 = !DILocation(line: 1189, column: 9, scope: !7229)
!7241 = !DILocation(line: 1189, column: 9, scope: !7209)
!7242 = !DILocation(line: 1189, column: 7, scope: !7209)
!7243 = !DILocation(line: 1191, column: 10, scope: !7209)
!7244 = !DILocation(line: 1191, column: 2, scope: !7209)
!7245 = !DILocation(line: 1193, column: 28, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 1191, column: 16)
!7247 = !DILocation(line: 1193, column: 35, scope: !7246)
!7248 = !DILocation(line: 1193, column: 10, scope: !7246)
!7249 = !DILocation(line: 1193, column: 3, scope: !7246)
!7250 = !DILocation(line: 1195, column: 32, scope: !7246)
!7251 = !DILocation(line: 1195, column: 39, scope: !7246)
!7252 = !DILocation(line: 1195, column: 10, scope: !7246)
!7253 = !DILocation(line: 1195, column: 3, scope: !7246)
!7254 = !DILocation(line: 1197, column: 28, scope: !7246)
!7255 = !DILocation(line: 1197, column: 35, scope: !7246)
!7256 = !DILocation(line: 1197, column: 10, scope: !7246)
!7257 = !DILocation(line: 1197, column: 3, scope: !7246)
!7258 = !DILocation(line: 1199, column: 3, scope: !7246)
!7259 = !DILocation(line: 1201, column: 2, scope: !7246)
!7260 = !DILocation(line: 1203, column: 2, scope: !7209)
!7261 = !DILocation(line: 1204, column: 1, scope: !7209)
!7262 = distinct !DISubprogram(name: "readq", scope: !7263, file: !7263, line: 95, type: !7264, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!7263 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!7264 = !DISubroutineType(types: !7265)
!7265 = !{!364, !7266}
!7266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7267, size: 64)
!7267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7268)
!7268 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!7269 = !DILocalVariable(name: "addr", arg: 1, scope: !7262, file: !7263, line: 95, type: !7266)
!7270 = !DILocation(line: 95, column: 1, scope: !7262)
!7271 = !DILocalVariable(name: "ret", scope: !7262, file: !7263, line: 95, type: !364)
!7272 = !{i32 -2142771975}
!7273 = distinct !DISubprogram(name: "build_info_complete", scope: !3, file: !3, line: 1111, type: !5018, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!7274 = !DILocalVariable(name: "binfo", arg: 1, scope: !7273, file: !3, line: 1111, type: !3935)
!7275 = !DILocation(line: 1111, column: 65, scope: !7273)
!7276 = !DILocation(line: 1113, column: 15, scope: !7273)
!7277 = !DILocation(line: 1113, column: 22, scope: !7273)
!7278 = !DILocation(line: 1113, column: 27, scope: !7273)
!7279 = !DILocation(line: 1113, column: 34, scope: !7273)
!7280 = !DILocation(line: 1113, column: 2, scope: !7273)
!7281 = !DILocation(line: 1114, column: 2, scope: !7273)
!7282 = !DILocation(line: 1115, column: 1, scope: !7273)
!7283 = !DILocalVariable(name: "binfo", arg: 1, scope: !3932, file: !3, line: 743, type: !3935)
!7284 = !DILocation(line: 743, column: 66, scope: !3932)
!7285 = !DILocalVariable(name: "fdev", scope: !3932, file: !3, line: 745, type: !150)
!7286 = !DILocation(line: 745, column: 26, scope: !3932)
!7287 = !DILocation(line: 745, column: 33, scope: !3932)
!7288 = !DILocation(line: 745, column: 40, scope: !3932)
!7289 = !DILocalVariable(name: "pdata", scope: !3932, file: !3, line: 746, type: !3649)
!7290 = !DILocation(line: 746, column: 36, scope: !3932)
!7291 = !DILocalVariable(name: "finfo", scope: !3932, file: !3, line: 747, type: !3830)
!7292 = !DILocation(line: 747, column: 27, scope: !3932)
!7293 = !DILocalVariable(name: "p", scope: !3932, file: !3, line: 747, type: !3830)
!7294 = !DILocation(line: 747, column: 35, scope: !3932)
!7295 = !DILocalVariable(name: "type", scope: !3932, file: !3, line: 748, type: !108)
!7296 = !DILocation(line: 748, column: 19, scope: !3932)
!7297 = !DILocalVariable(name: "ret", scope: !3932, file: !3, line: 749, type: !149)
!7298 = !DILocation(line: 749, column: 6, scope: !3932)
!7299 = !DILocalVariable(name: "index", scope: !3932, file: !3, line: 749, type: !149)
!7300 = !DILocation(line: 749, column: 11, scope: !3932)
!7301 = !DILocalVariable(name: "res_idx", scope: !3932, file: !3, line: 749, type: !149)
!7302 = !DILocation(line: 749, column: 22, scope: !3932)
!7303 = !DILocation(line: 751, column: 29, scope: !3932)
!7304 = !DILocation(line: 751, column: 9, scope: !3932)
!7305 = !DILocation(line: 751, column: 7, scope: !3932)
!7306 = !DILocalVariable(name: "__ret_warn_on", scope: !7307, file: !3, line: 752, type: !149)
!7307 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 752, column: 6)
!7308 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 752, column: 6)
!7309 = !DILocation(line: 752, column: 6, scope: !7307)
!7310 = !DILocation(line: 752, column: 6, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 752, column: 6)
!7312 = !DILocation(line: 752, column: 6, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 752, column: 6)
!7314 = !DILocation(line: 752, column: 6, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 752, column: 6)
!7316 = !DILocation(line: 752, column: 6, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 752, column: 6)
!7318 = !{i32 -2142445876, i32 -2142445847, i32 -2142445801, i32 -2142445743, i32 -2142445689, i32 -2142445635, i32 -2142445580, i32 -2142445549}
!7319 = !DILocation(line: 752, column: 6, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 752, column: 6)
!7321 = !{i32 -2142445138, i32 -2142445131, i32 -2142445079, i32 -2142445048, i32 -2142445018}
!7322 = !DILocation(line: 752, column: 6, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 752, column: 6)
!7324 = !DILocation(line: 752, column: 6, scope: !7308)
!7325 = !DILocation(line: 752, column: 6, scope: !3932)
!7326 = !DILocation(line: 753, column: 3, scope: !7308)
!7327 = !DILocation(line: 761, column: 18, scope: !3932)
!7328 = !DILocation(line: 761, column: 10, scope: !3932)
!7329 = !DILocation(line: 761, column: 8, scope: !3932)
!7330 = !DILocation(line: 762, column: 7, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 762, column: 6)
!7332 = !DILocation(line: 762, column: 6, scope: !3932)
!7333 = !DILocation(line: 763, column: 3, scope: !7331)
!7334 = !DILocation(line: 765, column: 15, scope: !3932)
!7335 = !DILocation(line: 765, column: 2, scope: !3932)
!7336 = !DILocation(line: 765, column: 9, scope: !3932)
!7337 = !DILocation(line: 765, column: 13, scope: !3932)
!7338 = !DILocation(line: 766, column: 15, scope: !3932)
!7339 = !DILocation(line: 766, column: 22, scope: !3932)
!7340 = !DILocation(line: 766, column: 2, scope: !3932)
!7341 = !DILocation(line: 766, column: 9, scope: !3932)
!7342 = !DILocation(line: 766, column: 13, scope: !3932)
!7343 = !DILocation(line: 767, column: 20, scope: !3932)
!7344 = !DILocation(line: 767, column: 27, scope: !3932)
!7345 = !DILocation(line: 767, column: 2, scope: !3932)
!7346 = !DILocation(line: 767, column: 9, scope: !3932)
!7347 = !DILocation(line: 767, column: 18, scope: !3932)
!7348 = !DILocation(line: 768, column: 2, scope: !3932)
!7349 = !DILocation(line: 768, column: 9, scope: !3932)
!7350 = !DILocation(line: 768, column: 12, scope: !3932)
!7351 = !DILocation(line: 769, column: 2, scope: !3932)
!7352 = !DILocation(line: 769, column: 2, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 769, column: 2)
!7354 = !DILocation(line: 770, column: 2, scope: !3932)
!7355 = !DILocation(line: 770, column: 2, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 770, column: 2)
!7357 = !DILocalVariable(name: "__ret_warn_on", scope: !7358, file: !3, line: 779, type: !149)
!7358 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 779, column: 2)
!7359 = !DILocation(line: 779, column: 2, scope: !7358)
!7360 = !DILocation(line: 779, column: 2, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 779, column: 2)
!7362 = !DILocation(line: 779, column: 2, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7361, file: !3, line: 779, column: 2)
!7364 = !DILocation(line: 779, column: 2, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 779, column: 2)
!7366 = !DILocation(line: 779, column: 2, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 779, column: 2)
!7368 = !{i32 -2142443485, i32 -2142443456, i32 -2142443410, i32 -2142443352, i32 -2142443298, i32 -2142443244, i32 -2142443189, i32 -2142443158}
!7369 = !DILocation(line: 779, column: 2, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 779, column: 2)
!7371 = !{i32 -2142442758, i32 -2142442751, i32 -2142442699, i32 -2142442668, i32 -2142442638}
!7372 = !DILocation(line: 779, column: 2, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 779, column: 2)
!7374 = !DILocation(line: 781, column: 28, scope: !3932)
!7375 = !DILocation(line: 781, column: 2, scope: !3932)
!7376 = !DILocation(line: 781, column: 8, scope: !3932)
!7377 = !DILocation(line: 781, column: 12, scope: !3932)
!7378 = !DILocation(line: 781, column: 26, scope: !3932)
!7379 = !DILocation(line: 784, column: 24, scope: !3932)
!7380 = !DILocation(line: 784, column: 31, scope: !3932)
!7381 = !DILocation(line: 784, column: 2, scope: !3932)
!7382 = !DILocation(line: 784, column: 8, scope: !3932)
!7383 = !DILocation(line: 784, column: 22, scope: !3932)
!7384 = !DILocation(line: 785, column: 27, scope: !3932)
!7385 = !DILocation(line: 785, column: 34, scope: !3932)
!7386 = !DILocation(line: 785, column: 19, scope: !3932)
!7387 = !DILocation(line: 785, column: 2, scope: !3932)
!7388 = !DILocation(line: 785, column: 8, scope: !3932)
!7389 = !DILocation(line: 785, column: 17, scope: !3932)
!7390 = !DILocation(line: 787, column: 7, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 787, column: 6)
!7392 = !DILocation(line: 787, column: 13, scope: !7391)
!7393 = !DILocation(line: 787, column: 6, scope: !3932)
!7394 = !DILocation(line: 788, column: 3, scope: !7391)
!7395 = !DILocalVariable(name: "__mptr", scope: !7396, file: !3, line: 791, type: !126)
!7396 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 791, column: 2)
!7397 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 791, column: 2)
!7398 = !DILocation(line: 791, column: 2, scope: !7396)
!7399 = !DILocation(line: 791, column: 2, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 791, column: 2)
!7401 = !DILocation(line: 791, column: 2, scope: !7397)
!7402 = !DILocalVariable(name: "__mptr", scope: !7403, file: !3, line: 791, type: !126)
!7403 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 791, column: 2)
!7404 = !DILocation(line: 791, column: 2, scope: !7403)
!7405 = !DILocation(line: 791, column: 2, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 791, column: 2)
!7407 = !DILocation(line: 791, column: 2, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 791, column: 2)
!7409 = !DILocalVariable(name: "feature", scope: !7410, file: !3, line: 792, type: !3780)
!7410 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 791, column: 65)
!7411 = !DILocation(line: 792, column: 23, scope: !7410)
!7412 = !DILocation(line: 792, column: 34, scope: !7410)
!7413 = !DILocation(line: 792, column: 41, scope: !7410)
!7414 = !DILocation(line: 792, column: 55, scope: !7410)
!7415 = !DILocalVariable(name: "ctx", scope: !7410, file: !3, line: 793, type: !3761)
!7416 = !DILocation(line: 793, column: 31, scope: !7410)
!7417 = !DILocalVariable(name: "i", scope: !7410, file: !3, line: 794, type: !7)
!7418 = !DILocation(line: 794, column: 16, scope: !7410)
!7419 = !DILocation(line: 797, column: 18, scope: !7410)
!7420 = !DILocation(line: 797, column: 3, scope: !7410)
!7421 = !DILocation(line: 797, column: 12, scope: !7410)
!7422 = !DILocation(line: 797, column: 16, scope: !7410)
!7423 = !DILocation(line: 798, column: 17, scope: !7410)
!7424 = !DILocation(line: 798, column: 24, scope: !7410)
!7425 = !DILocation(line: 798, column: 3, scope: !7410)
!7426 = !DILocation(line: 798, column: 12, scope: !7410)
!7427 = !DILocation(line: 798, column: 15, scope: !7410)
!7428 = !DILocation(line: 807, column: 7, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 807, column: 7)
!7430 = !DILocation(line: 807, column: 7, scope: !7410)
!7431 = !DILocation(line: 808, column: 4, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 807, column: 35)
!7433 = !DILocation(line: 808, column: 13, scope: !7432)
!7434 = !DILocation(line: 808, column: 28, scope: !7432)
!7435 = !DILocation(line: 810, column: 27, scope: !7432)
!7436 = !DILocation(line: 810, column: 34, scope: !7432)
!7437 = !DILocation(line: 811, column: 14, scope: !7432)
!7438 = !DILocation(line: 811, column: 21, scope: !7432)
!7439 = !DILocation(line: 810, column: 5, scope: !7432)
!7440 = !DILocation(line: 809, column: 4, scope: !7432)
!7441 = !DILocation(line: 809, column: 13, scope: !7432)
!7442 = !DILocation(line: 809, column: 20, scope: !7432)
!7443 = !DILocation(line: 812, column: 15, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 812, column: 8)
!7445 = !DILocation(line: 812, column: 24, scope: !7444)
!7446 = !DILocation(line: 812, column: 8, scope: !7444)
!7447 = !DILocation(line: 812, column: 8, scope: !7432)
!7448 = !DILocation(line: 813, column: 20, scope: !7444)
!7449 = !DILocation(line: 813, column: 29, scope: !7444)
!7450 = !DILocation(line: 813, column: 12, scope: !7444)
!7451 = !DILocation(line: 813, column: 5, scope: !7444)
!7452 = !DILocation(line: 814, column: 3, scope: !7432)
!7453 = !DILocation(line: 815, column: 30, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 814, column: 10)
!7455 = !DILocation(line: 815, column: 4, scope: !7454)
!7456 = !DILocation(line: 815, column: 13, scope: !7454)
!7457 = !DILocation(line: 815, column: 28, scope: !7454)
!7458 = !DILocation(line: 816, column: 4, scope: !7454)
!7459 = !DILocation(line: 816, column: 10, scope: !7454)
!7460 = !DILocation(line: 816, column: 26, scope: !7454)
!7461 = !DILocation(line: 816, column: 32, scope: !7454)
!7462 = !DILocation(line: 816, column: 39, scope: !7454)
!7463 = !DILocation(line: 819, column: 7, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 819, column: 7)
!7465 = !DILocation(line: 819, column: 14, scope: !7464)
!7466 = !DILocation(line: 819, column: 7, scope: !7410)
!7467 = !DILocation(line: 820, column: 23, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 819, column: 23)
!7469 = !DILocation(line: 820, column: 30, scope: !7468)
!7470 = !DILocation(line: 820, column: 35, scope: !7468)
!7471 = !DILocation(line: 820, column: 42, scope: !7468)
!7472 = !DILocation(line: 820, column: 10, scope: !7468)
!7473 = !DILocation(line: 820, column: 8, scope: !7468)
!7474 = !DILocation(line: 822, column: 9, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 822, column: 8)
!7476 = !DILocation(line: 822, column: 8, scope: !7468)
!7477 = !DILocation(line: 823, column: 5, scope: !7475)
!7478 = !DILocation(line: 825, column: 11, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 825, column: 4)
!7480 = !DILocation(line: 825, column: 9, scope: !7479)
!7481 = !DILocation(line: 825, column: 16, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7479, file: !3, line: 825, column: 4)
!7483 = !DILocation(line: 825, column: 20, scope: !7482)
!7484 = !DILocation(line: 825, column: 27, scope: !7482)
!7485 = !DILocation(line: 825, column: 18, scope: !7482)
!7486 = !DILocation(line: 825, column: 4, scope: !7479)
!7487 = !DILocation(line: 827, column: 6, scope: !7482)
!7488 = !DILocation(line: 827, column: 13, scope: !7482)
!7489 = !DILocation(line: 827, column: 23, scope: !7482)
!7490 = !DILocation(line: 827, column: 30, scope: !7482)
!7491 = !DILocation(line: 827, column: 41, scope: !7482)
!7492 = !DILocation(line: 827, column: 39, scope: !7482)
!7493 = !DILocation(line: 826, column: 5, scope: !7482)
!7494 = !DILocation(line: 826, column: 9, scope: !7482)
!7495 = !DILocation(line: 826, column: 12, scope: !7482)
!7496 = !DILocation(line: 826, column: 16, scope: !7482)
!7497 = !DILocation(line: 825, column: 37, scope: !7482)
!7498 = !DILocation(line: 825, column: 4, scope: !7482)
!7499 = distinct !{!7499, !7486, !7500}
!7500 = !DILocation(line: 827, column: 42, scope: !7479)
!7501 = !DILocation(line: 829, column: 23, scope: !7468)
!7502 = !DILocation(line: 829, column: 4, scope: !7468)
!7503 = !DILocation(line: 829, column: 13, scope: !7468)
!7504 = !DILocation(line: 829, column: 21, scope: !7468)
!7505 = !DILocation(line: 830, column: 23, scope: !7468)
!7506 = !DILocation(line: 830, column: 30, scope: !7468)
!7507 = !DILocation(line: 830, column: 4, scope: !7468)
!7508 = !DILocation(line: 830, column: 13, scope: !7468)
!7509 = !DILocation(line: 830, column: 21, scope: !7468)
!7510 = !DILocation(line: 831, column: 3, scope: !7468)
!7511 = !DILocation(line: 833, column: 13, scope: !7410)
!7512 = !DILocation(line: 833, column: 20, scope: !7410)
!7513 = !DILocation(line: 833, column: 3, scope: !7410)
!7514 = !DILocation(line: 834, column: 9, scope: !7410)
!7515 = !DILocation(line: 834, column: 3, scope: !7410)
!7516 = !DILocation(line: 835, column: 2, scope: !7410)
!7517 = !DILocalVariable(name: "__mptr", scope: !7518, file: !3, line: 791, type: !126)
!7518 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 791, column: 2)
!7519 = !DILocation(line: 791, column: 2, scope: !7518)
!7520 = !DILocation(line: 791, column: 2, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 791, column: 2)
!7522 = distinct !{!7522, !7401, !7523}
!7523 = !DILocation(line: 835, column: 2, scope: !7397)
!7524 = !DILocation(line: 837, column: 28, scope: !3932)
!7525 = !DILocation(line: 837, column: 35, scope: !3932)
!7526 = !DILocation(line: 837, column: 8, scope: !3932)
!7527 = !DILocation(line: 837, column: 6, scope: !3932)
!7528 = !DILocation(line: 838, column: 7, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 838, column: 6)
!7530 = !DILocation(line: 838, column: 6, scope: !3932)
!7531 = !DILocation(line: 839, column: 7, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 839, column: 7)
!7533 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 838, column: 12)
!7534 = !DILocation(line: 839, column: 12, scope: !7532)
!7535 = !DILocation(line: 839, column: 7, scope: !7533)
!7536 = !DILocation(line: 840, column: 31, scope: !7532)
!7537 = !DILocation(line: 840, column: 38, scope: !7532)
!7538 = !DILocation(line: 841, column: 10, scope: !7532)
!7539 = !DILocation(line: 841, column: 17, scope: !7532)
!7540 = !DILocation(line: 840, column: 4, scope: !7532)
!7541 = !DILocation(line: 844, column: 18, scope: !7532)
!7542 = !DILocation(line: 844, column: 25, scope: !7532)
!7543 = !DILocation(line: 844, column: 38, scope: !7532)
!7544 = !DILocation(line: 844, column: 6, scope: !7532)
!7545 = !DILocation(line: 843, column: 4, scope: !7532)
!7546 = !DILocation(line: 843, column: 11, scope: !7532)
!7547 = !DILocation(line: 843, column: 17, scope: !7532)
!7548 = !DILocation(line: 843, column: 25, scope: !7532)
!7549 = !DILocation(line: 852, column: 3, scope: !7533)
!7550 = !DILocation(line: 852, column: 10, scope: !7533)
!7551 = !DILocation(line: 852, column: 22, scope: !7533)
!7552 = !DILocation(line: 853, column: 2, scope: !7533)
!7553 = !DILocation(line: 855, column: 9, scope: !3932)
!7554 = !DILocation(line: 855, column: 2, scope: !3932)
!7555 = !DILocation(line: 856, column: 1, scope: !3932)
!7556 = distinct !DISubprogram(name: "parse_feature_afu", scope: !3, file: !3, line: 1066, type: !7210, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!7557 = !DILocalVariable(name: "binfo", arg: 1, scope: !7556, file: !3, line: 1066, type: !3935)
!7558 = !DILocation(line: 1066, column: 62, scope: !7556)
!7559 = !DILocalVariable(name: "ofst", arg: 2, scope: !7556, file: !3, line: 1067, type: !3621)
!7560 = !DILocation(line: 1067, column: 25, scope: !7556)
!7561 = !DILocation(line: 1069, column: 7, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 1069, column: 6)
!7563 = !DILocation(line: 1069, column: 6, scope: !7556)
!7564 = !DILocation(line: 1070, column: 3, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7562, file: !3, line: 1069, column: 39)
!7566 = !DILocation(line: 1071, column: 3, scope: !7565)
!7567 = !DILocation(line: 1074, column: 30, scope: !7556)
!7568 = !DILocation(line: 1074, column: 37, scope: !7556)
!7569 = !DILocation(line: 1074, column: 10, scope: !7556)
!7570 = !DILocation(line: 1074, column: 2, scope: !7556)
!7571 = !DILocation(line: 1076, column: 33, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 1074, column: 51)
!7573 = !DILocation(line: 1076, column: 40, scope: !7572)
!7574 = !DILocation(line: 1076, column: 10, scope: !7572)
!7575 = !DILocation(line: 1076, column: 3, scope: !7572)
!7576 = !DILocation(line: 1078, column: 3, scope: !7572)
!7577 = !DILocation(line: 1080, column: 2, scope: !7572)
!7578 = !DILocation(line: 1082, column: 2, scope: !7556)
!7579 = !DILocation(line: 1083, column: 1, scope: !7556)
!7580 = distinct !DISubprogram(name: "parse_feature_private", scope: !3, file: !3, line: 1164, type: !7210, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!7581 = !DILocalVariable(name: "binfo", arg: 1, scope: !7580, file: !3, line: 1164, type: !3935)
!7582 = !DILocation(line: 1164, column: 66, scope: !7580)
!7583 = !DILocalVariable(name: "ofst", arg: 2, scope: !7580, file: !3, line: 1165, type: !3621)
!7584 = !DILocation(line: 1165, column: 22, scope: !7580)
!7585 = !DILocation(line: 1167, column: 7, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 1167, column: 6)
!7587 = !DILocation(line: 1167, column: 6, scope: !7580)
!7588 = !DILocation(line: 1168, column: 3, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7586, file: !3, line: 1167, column: 39)
!7590 = !DILocation(line: 1170, column: 3, scope: !7589)
!7591 = !DILocation(line: 1173, column: 33, scope: !7580)
!7592 = !DILocation(line: 1173, column: 40, scope: !7580)
!7593 = !DILocation(line: 1173, column: 9, scope: !7580)
!7594 = !DILocation(line: 1173, column: 2, scope: !7580)
!7595 = !DILocation(line: 1174, column: 1, scope: !7580)
!7596 = distinct !DISubprogram(name: "parse_feature_fiu", scope: !3, file: !3, line: 1117, type: !7210, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!7597 = !DILocalVariable(name: "binfo", arg: 1, scope: !7596, file: !3, line: 1117, type: !3935)
!7598 = !DILocation(line: 1117, column: 62, scope: !7596)
!7599 = !DILocalVariable(name: "ofst", arg: 2, scope: !7596, file: !3, line: 1118, type: !3621)
!7600 = !DILocation(line: 1118, column: 25, scope: !7596)
!7601 = !DILocalVariable(name: "ret", scope: !7596, file: !3, line: 1120, type: !149)
!7602 = !DILocation(line: 1120, column: 6, scope: !7596)
!7603 = !DILocalVariable(name: "offset", scope: !7596, file: !3, line: 1121, type: !358)
!7604 = !DILocation(line: 1121, column: 6, scope: !7596)
!7605 = !DILocalVariable(name: "id", scope: !7596, file: !3, line: 1122, type: !801)
!7606 = !DILocation(line: 1122, column: 6, scope: !7596)
!7607 = !DILocalVariable(name: "v", scope: !7596, file: !3, line: 1123, type: !364)
!7608 = !DILocation(line: 1123, column: 6, scope: !7596)
!7609 = !DILocation(line: 1125, column: 6, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 1125, column: 6)
!7611 = !DILocation(line: 1125, column: 6, scope: !7596)
!7612 = !DILocation(line: 1126, column: 23, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 1125, column: 38)
!7614 = !DILocation(line: 1126, column: 3, scope: !7613)
!7615 = !DILocation(line: 1128, column: 31, scope: !7613)
!7616 = !DILocation(line: 1128, column: 9, scope: !7613)
!7617 = !DILocation(line: 1128, column: 7, scope: !7613)
!7618 = !DILocation(line: 1129, column: 7, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 1129, column: 7)
!7620 = !DILocation(line: 1129, column: 7, scope: !7613)
!7621 = !DILocation(line: 1130, column: 11, scope: !7619)
!7622 = !DILocation(line: 1130, column: 4, scope: !7619)
!7623 = !DILocation(line: 1132, column: 28, scope: !7613)
!7624 = !DILocation(line: 1132, column: 35, scope: !7613)
!7625 = !DILocation(line: 1132, column: 42, scope: !7613)
!7626 = !DILocation(line: 1132, column: 50, scope: !7613)
!7627 = !DILocation(line: 1132, column: 48, scope: !7613)
!7628 = !DILocation(line: 1133, column: 7, scope: !7613)
!7629 = !DILocation(line: 1133, column: 14, scope: !7613)
!7630 = !DILocation(line: 1133, column: 20, scope: !7613)
!7631 = !DILocation(line: 1133, column: 18, scope: !7613)
!7632 = !DILocation(line: 1132, column: 9, scope: !7613)
!7633 = !DILocation(line: 1132, column: 7, scope: !7613)
!7634 = !DILocation(line: 1134, column: 7, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 1134, column: 7)
!7636 = !DILocation(line: 1134, column: 7, scope: !7613)
!7637 = !DILocation(line: 1135, column: 11, scope: !7635)
!7638 = !DILocation(line: 1135, column: 4, scope: !7635)
!7639 = !DILocation(line: 1136, column: 2, scope: !7613)
!7640 = !DILocation(line: 1138, column: 12, scope: !7596)
!7641 = !DILocation(line: 1138, column: 19, scope: !7596)
!7642 = !DILocation(line: 1138, column: 26, scope: !7596)
!7643 = !DILocation(line: 1138, column: 6, scope: !7596)
!7644 = !DILocation(line: 1138, column: 4, scope: !7596)
!7645 = !DILocation(line: 1139, column: 7, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 1139, column: 7)
!7647 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 1139, column: 7)
!7648 = !DILocation(line: 1139, column: 7, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 1139, column: 7)
!7650 = !DILocation(line: 1139, column: 7, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 1139, column: 7)
!7652 = !DILocation(line: 1139, column: 7, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 1139, column: 7)
!7654 = !DILocation(line: 1139, column: 7, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 1139, column: 7)
!7656 = !DILocation(line: 1139, column: 7, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 1139, column: 7)
!7658 = !DILocation(line: 1139, column: 7, scope: !7647)
!7659 = !DILocation(line: 1139, column: 7, scope: !7596)
!7660 = !DILocation(line: 1139, column: 5, scope: !7596)
!7661 = !DILocation(line: 1142, column: 30, scope: !7596)
!7662 = !DILocation(line: 1142, column: 52, scope: !7596)
!7663 = !DILocation(line: 1142, column: 37, scope: !7596)
!7664 = !DILocation(line: 1142, column: 8, scope: !7596)
!7665 = !DILocation(line: 1142, column: 6, scope: !7596)
!7666 = !DILocation(line: 1143, column: 6, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 1143, column: 6)
!7668 = !DILocation(line: 1143, column: 6, scope: !7596)
!7669 = !DILocation(line: 1144, column: 10, scope: !7667)
!7670 = !DILocation(line: 1144, column: 3, scope: !7667)
!7671 = !DILocation(line: 1146, column: 32, scope: !7596)
!7672 = !DILocation(line: 1146, column: 8, scope: !7596)
!7673 = !DILocation(line: 1146, column: 6, scope: !7596)
!7674 = !DILocation(line: 1147, column: 6, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 1147, column: 6)
!7676 = !DILocation(line: 1147, column: 6, scope: !7596)
!7677 = !DILocation(line: 1148, column: 10, scope: !7675)
!7678 = !DILocation(line: 1148, column: 3, scope: !7675)
!7679 = !DILocation(line: 1153, column: 12, scope: !7596)
!7680 = !DILocation(line: 1153, column: 19, scope: !7596)
!7681 = !DILocation(line: 1153, column: 26, scope: !7596)
!7682 = !DILocation(line: 1153, column: 6, scope: !7596)
!7683 = !DILocation(line: 1153, column: 4, scope: !7596)
!7684 = !DILocation(line: 1155, column: 11, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7686, file: !3, line: 1155, column: 11)
!7686 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 1155, column: 11)
!7687 = !DILocation(line: 1155, column: 11, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 1155, column: 11)
!7689 = !DILocation(line: 1155, column: 11, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 1155, column: 11)
!7691 = !DILocation(line: 1155, column: 11, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 1155, column: 11)
!7693 = !DILocation(line: 1155, column: 11, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 1155, column: 11)
!7695 = !DILocation(line: 1155, column: 11, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 1155, column: 11)
!7697 = !DILocation(line: 1155, column: 11, scope: !7686)
!7698 = !DILocation(line: 1155, column: 11, scope: !7596)
!7699 = !DILocation(line: 1155, column: 9, scope: !7596)
!7700 = !DILocation(line: 1156, column: 6, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 1156, column: 6)
!7702 = !DILocation(line: 1156, column: 6, scope: !7596)
!7703 = !DILocation(line: 1157, column: 28, scope: !7701)
!7704 = !DILocation(line: 1157, column: 35, scope: !7701)
!7705 = !DILocation(line: 1157, column: 10, scope: !7701)
!7706 = !DILocation(line: 1157, column: 3, scope: !7701)
!7707 = !DILocation(line: 1161, column: 9, scope: !7596)
!7708 = !DILocation(line: 1161, column: 2, scope: !7596)
!7709 = !DILocation(line: 1162, column: 1, scope: !7596)
!7710 = distinct !DISubprogram(name: "parse_feature_port_afu", scope: !3, file: !3, line: 1053, type: !7210, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!7711 = !DILocalVariable(name: "binfo", arg: 1, scope: !7710, file: !3, line: 1053, type: !3935)
!7712 = !DILocation(line: 1053, column: 67, scope: !7710)
!7713 = !DILocalVariable(name: "ofst", arg: 2, scope: !7710, file: !3, line: 1054, type: !3621)
!7714 = !DILocation(line: 1054, column: 23, scope: !7710)
!7715 = !DILocalVariable(name: "v", scope: !7710, file: !3, line: 1056, type: !364)
!7716 = !DILocation(line: 1056, column: 6, scope: !7710)
!7717 = !DILocation(line: 1056, column: 16, scope: !7710)
!7718 = !DILocation(line: 1056, column: 23, scope: !7710)
!7719 = !DILocation(line: 1056, column: 30, scope: !7710)
!7720 = !DILocation(line: 1056, column: 10, scope: !7710)
!7721 = !DILocalVariable(name: "size", scope: !7710, file: !3, line: 1057, type: !358)
!7722 = !DILocation(line: 1057, column: 6, scope: !7710)
!7723 = !DILocation(line: 1057, column: 13, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !3, line: 1057, column: 13)
!7725 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 1057, column: 13)
!7726 = !DILocation(line: 1057, column: 13, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7724, file: !3, line: 1057, column: 13)
!7728 = !DILocation(line: 1057, column: 13, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7724, file: !3, line: 1057, column: 13)
!7730 = !DILocation(line: 1057, column: 13, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7724, file: !3, line: 1057, column: 13)
!7732 = !DILocation(line: 1057, column: 13, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7724, file: !3, line: 1057, column: 13)
!7734 = !DILocation(line: 1057, column: 13, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7724, file: !3, line: 1057, column: 13)
!7736 = !DILocation(line: 1057, column: 13, scope: !7725)
!7737 = !DILocation(line: 1057, column: 46, scope: !7710)
!7738 = !DILocation(line: 1057, column: 13, scope: !7710)
!7739 = !DILocalVariable(name: "__ret_warn_on", scope: !7740, file: !3, line: 1059, type: !149)
!7740 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 1059, column: 2)
!7741 = !DILocation(line: 1059, column: 2, scope: !7740)
!7742 = !DILocation(line: 1059, column: 2, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 1059, column: 2)
!7744 = !DILocation(line: 1059, column: 2, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 1059, column: 2)
!7746 = !DILocation(line: 1059, column: 2, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 1059, column: 2)
!7748 = !DILocation(line: 1059, column: 2, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 1059, column: 2)
!7750 = !{i32 -2142248908, i32 -2142248879, i32 -2142248833, i32 -2142248775, i32 -2142248721, i32 -2142248667, i32 -2142248612, i32 -2142248581}
!7751 = !DILocation(line: 1059, column: 2, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 1059, column: 2)
!7753 = !{i32 -2142248180, i32 -2142248173, i32 -2142248121, i32 -2142248090, i32 -2142248060}
!7754 = !DILocation(line: 1059, column: 2, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 1059, column: 2)
!7756 = !DILocation(line: 1061, column: 33, scope: !7710)
!7757 = !DILocation(line: 1061, column: 40, scope: !7710)
!7758 = !DILocation(line: 1061, column: 46, scope: !7710)
!7759 = !DILocation(line: 1061, column: 9, scope: !7710)
!7760 = !DILocation(line: 1061, column: 2, scope: !7710)
!7761 = distinct !DISubprogram(name: "create_feature_instance", scope: !3, file: !3, line: 1018, type: !7762, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{!149, !3935, !3621, !3621, !801}
!7764 = !DILocalVariable(name: "binfo", arg: 1, scope: !7761, file: !3, line: 1018, type: !3935)
!7765 = !DILocation(line: 1018, column: 57, scope: !7761)
!7766 = !DILocalVariable(name: "ofst", arg: 2, scope: !7761, file: !3, line: 1019, type: !3621)
!7767 = !DILocation(line: 1019, column: 20, scope: !7761)
!7768 = !DILocalVariable(name: "size", arg: 3, scope: !7761, file: !3, line: 1019, type: !3621)
!7769 = !DILocation(line: 1019, column: 42, scope: !7761)
!7770 = !DILocalVariable(name: "fid", arg: 4, scope: !7761, file: !3, line: 1019, type: !801)
!7771 = !DILocation(line: 1019, column: 52, scope: !7761)
!7772 = !DILocalVariable(name: "irq_base", scope: !7761, file: !3, line: 1021, type: !7)
!7773 = !DILocation(line: 1021, column: 15, scope: !7761)
!7774 = !DILocalVariable(name: "nr_irqs", scope: !7761, file: !3, line: 1021, type: !7)
!7775 = !DILocation(line: 1021, column: 25, scope: !7761)
!7776 = !DILocalVariable(name: "finfo", scope: !7761, file: !3, line: 1022, type: !3830)
!7777 = !DILocation(line: 1022, column: 27, scope: !7761)
!7778 = !DILocalVariable(name: "ret", scope: !7761, file: !3, line: 1023, type: !149)
!7779 = !DILocation(line: 1023, column: 6, scope: !7761)
!7780 = !DILocation(line: 1026, column: 9, scope: !7761)
!7781 = !DILocation(line: 1026, column: 16, scope: !7761)
!7782 = !DILocation(line: 1026, column: 36, scope: !7761)
!7783 = !DILocation(line: 1026, column: 43, scope: !7761)
!7784 = !DILocation(line: 1026, column: 52, scope: !7761)
!7785 = !DILocation(line: 1026, column: 50, scope: !7761)
!7786 = !DILocation(line: 1026, column: 23, scope: !7761)
!7787 = !DILocation(line: 1026, column: 7, scope: !7761)
!7788 = !DILocation(line: 1027, column: 8, scope: !7761)
!7789 = !DILocation(line: 1027, column: 14, scope: !7761)
!7790 = !DILocation(line: 1027, column: 31, scope: !7761)
!7791 = !DILocation(line: 1027, column: 38, scope: !7761)
!7792 = !DILocation(line: 1027, column: 47, scope: !7761)
!7793 = !DILocation(line: 1027, column: 45, scope: !7761)
!7794 = !DILocation(line: 1027, column: 20, scope: !7761)
!7795 = !DILocation(line: 1027, column: 6, scope: !7761)
!7796 = !DILocation(line: 1029, column: 6, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 1029, column: 6)
!7798 = !DILocation(line: 1029, column: 13, scope: !7797)
!7799 = !DILocation(line: 1029, column: 19, scope: !7797)
!7800 = !DILocation(line: 1029, column: 17, scope: !7797)
!7801 = !DILocation(line: 1029, column: 26, scope: !7797)
!7802 = !DILocation(line: 1029, column: 24, scope: !7797)
!7803 = !DILocation(line: 1029, column: 6, scope: !7761)
!7804 = !DILocation(line: 1030, column: 3, scope: !7797)
!7805 = !DILocation(line: 1032, column: 27, scope: !7761)
!7806 = !DILocation(line: 1032, column: 34, scope: !7761)
!7807 = !DILocation(line: 1032, column: 40, scope: !7761)
!7808 = !DILocation(line: 1032, column: 8, scope: !7761)
!7809 = !DILocation(line: 1032, column: 6, scope: !7761)
!7810 = !DILocation(line: 1033, column: 6, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 1033, column: 6)
!7812 = !DILocation(line: 1033, column: 6, scope: !7761)
!7813 = !DILocation(line: 1034, column: 10, scope: !7811)
!7814 = !DILocation(line: 1034, column: 3, scope: !7811)
!7815 = !DILocation(line: 1036, column: 10, scope: !7761)
!7816 = !DILocation(line: 1036, column: 8, scope: !7761)
!7817 = !DILocation(line: 1037, column: 7, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 1037, column: 6)
!7819 = !DILocation(line: 1037, column: 6, scope: !7761)
!7820 = !DILocation(line: 1038, column: 3, scope: !7818)
!7821 = !DILocation(line: 1040, column: 15, scope: !7761)
!7822 = !DILocation(line: 1040, column: 2, scope: !7761)
!7823 = !DILocation(line: 1040, column: 9, scope: !7761)
!7824 = !DILocation(line: 1040, column: 13, scope: !7761)
!7825 = !DILocation(line: 1041, column: 26, scope: !7761)
!7826 = !DILocation(line: 1041, column: 33, scope: !7761)
!7827 = !DILocation(line: 1041, column: 41, scope: !7761)
!7828 = !DILocation(line: 1041, column: 39, scope: !7761)
!7829 = !DILocation(line: 1041, column: 2, scope: !7761)
!7830 = !DILocation(line: 1041, column: 9, scope: !7761)
!7831 = !DILocation(line: 1041, column: 18, scope: !7761)
!7832 = !DILocation(line: 1041, column: 24, scope: !7761)
!7833 = !DILocation(line: 1042, column: 24, scope: !7761)
!7834 = !DILocation(line: 1042, column: 31, scope: !7761)
!7835 = !DILocation(line: 1042, column: 40, scope: !7761)
!7836 = !DILocation(line: 1042, column: 48, scope: !7761)
!7837 = !DILocation(line: 1042, column: 46, scope: !7761)
!7838 = !DILocation(line: 1042, column: 53, scope: !7761)
!7839 = !DILocation(line: 1042, column: 2, scope: !7761)
!7840 = !DILocation(line: 1042, column: 9, scope: !7761)
!7841 = !DILocation(line: 1042, column: 18, scope: !7761)
!7842 = !DILocation(line: 1042, column: 22, scope: !7761)
!7843 = !DILocation(line: 1043, column: 2, scope: !7761)
!7844 = !DILocation(line: 1043, column: 9, scope: !7761)
!7845 = !DILocation(line: 1043, column: 18, scope: !7761)
!7846 = !DILocation(line: 1043, column: 24, scope: !7761)
!7847 = !DILocation(line: 1044, column: 20, scope: !7761)
!7848 = !DILocation(line: 1044, column: 2, scope: !7761)
!7849 = !DILocation(line: 1044, column: 9, scope: !7761)
!7850 = !DILocation(line: 1044, column: 18, scope: !7761)
!7851 = !DILocation(line: 1045, column: 19, scope: !7761)
!7852 = !DILocation(line: 1045, column: 2, scope: !7761)
!7853 = !DILocation(line: 1045, column: 9, scope: !7761)
!7854 = !DILocation(line: 1045, column: 17, scope: !7761)
!7855 = !DILocation(line: 1047, column: 17, scope: !7761)
!7856 = !DILocation(line: 1047, column: 24, scope: !7761)
!7857 = !DILocation(line: 1047, column: 31, scope: !7761)
!7858 = !DILocation(line: 1047, column: 38, scope: !7761)
!7859 = !DILocation(line: 1047, column: 2, scope: !7761)
!7860 = !DILocation(line: 1048, column: 2, scope: !7761)
!7861 = !DILocation(line: 1048, column: 9, scope: !7761)
!7862 = !DILocation(line: 1048, column: 20, scope: !7761)
!7863 = !DILocation(line: 1050, column: 2, scope: !7761)
!7864 = !DILocation(line: 1051, column: 1, scope: !7761)
!7865 = distinct !DISubprogram(name: "feature_size", scope: !3, file: !3, line: 913, type: !7866, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!7866 = !DISubroutineType(types: !7867)
!7867 = !{!358, !126}
!7868 = !DILocalVariable(name: "start", arg: 1, scope: !7865, file: !3, line: 913, type: !126)
!7869 = !DILocation(line: 913, column: 46, scope: !7865)
!7870 = !DILocalVariable(name: "v", scope: !7865, file: !3, line: 915, type: !364)
!7871 = !DILocation(line: 915, column: 6, scope: !7865)
!7872 = !DILocation(line: 915, column: 16, scope: !7865)
!7873 = !DILocation(line: 915, column: 22, scope: !7865)
!7874 = !DILocation(line: 915, column: 10, scope: !7865)
!7875 = !DILocalVariable(name: "ofst", scope: !7865, file: !3, line: 916, type: !358)
!7876 = !DILocation(line: 916, column: 6, scope: !7865)
!7877 = !DILocation(line: 916, column: 13, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 916, column: 13)
!7879 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 916, column: 13)
!7880 = !DILocation(line: 916, column: 13, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 916, column: 13)
!7882 = !DILocation(line: 916, column: 13, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 916, column: 13)
!7884 = !DILocation(line: 916, column: 13, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 916, column: 13)
!7886 = !DILocation(line: 916, column: 13, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 916, column: 13)
!7888 = !DILocation(line: 916, column: 13, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 916, column: 13)
!7890 = !DILocation(line: 916, column: 13, scope: !7879)
!7891 = !DILocation(line: 916, column: 13, scope: !7865)
!7892 = !DILocation(line: 918, column: 9, scope: !7865)
!7893 = !DILocation(line: 918, column: 16, scope: !7865)
!7894 = !DILocation(line: 918, column: 2, scope: !7865)
!7895 = distinct !DISubprogram(name: "feature_id", scope: !3, file: !3, line: 921, type: !7896, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{!801, !126}
!7898 = !DILocalVariable(name: "start", arg: 1, scope: !7895, file: !3, line: 921, type: !126)
!7899 = !DILocation(line: 921, column: 37, scope: !7895)
!7900 = !DILocalVariable(name: "v", scope: !7895, file: !3, line: 923, type: !364)
!7901 = !DILocation(line: 923, column: 6, scope: !7895)
!7902 = !DILocation(line: 923, column: 16, scope: !7895)
!7903 = !DILocation(line: 923, column: 22, scope: !7895)
!7904 = !DILocation(line: 923, column: 10, scope: !7895)
!7905 = !DILocalVariable(name: "id", scope: !7895, file: !3, line: 924, type: !801)
!7906 = !DILocation(line: 924, column: 6, scope: !7895)
!7907 = !DILocation(line: 924, column: 11, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 924, column: 11)
!7909 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 924, column: 11)
!7910 = !DILocation(line: 924, column: 11, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7908, file: !3, line: 924, column: 11)
!7912 = !DILocation(line: 924, column: 11, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7908, file: !3, line: 924, column: 11)
!7914 = !DILocation(line: 924, column: 11, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7908, file: !3, line: 924, column: 11)
!7916 = !DILocation(line: 924, column: 11, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7908, file: !3, line: 924, column: 11)
!7918 = !DILocation(line: 924, column: 11, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7908, file: !3, line: 924, column: 11)
!7920 = !DILocation(line: 924, column: 11, scope: !7909)
!7921 = !DILocation(line: 924, column: 11, scope: !7895)
!7922 = !DILocalVariable(name: "type", scope: !7895, file: !3, line: 925, type: !1214)
!7923 = !DILocation(line: 925, column: 5, scope: !7895)
!7924 = !DILocation(line: 925, column: 12, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 925, column: 12)
!7926 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 925, column: 12)
!7927 = !DILocation(line: 925, column: 12, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 925, column: 12)
!7929 = !DILocation(line: 925, column: 12, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 925, column: 12)
!7931 = !DILocation(line: 925, column: 12, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 925, column: 12)
!7933 = !DILocation(line: 925, column: 12, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 925, column: 12)
!7935 = !DILocation(line: 925, column: 12, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 925, column: 12)
!7937 = !DILocation(line: 925, column: 12, scope: !7926)
!7938 = !DILocation(line: 925, column: 12, scope: !7895)
!7939 = !DILocation(line: 927, column: 6, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 927, column: 6)
!7941 = !DILocation(line: 927, column: 11, scope: !7940)
!7942 = !DILocation(line: 927, column: 6, scope: !7895)
!7943 = !DILocation(line: 928, column: 3, scope: !7940)
!7944 = !DILocation(line: 929, column: 11, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 929, column: 11)
!7946 = !DILocation(line: 929, column: 16, scope: !7945)
!7947 = !DILocation(line: 929, column: 11, scope: !7940)
!7948 = !DILocation(line: 930, column: 10, scope: !7945)
!7949 = !DILocation(line: 930, column: 3, scope: !7945)
!7950 = !DILocation(line: 931, column: 11, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 931, column: 11)
!7952 = !DILocation(line: 931, column: 16, scope: !7951)
!7953 = !DILocation(line: 931, column: 11, scope: !7945)
!7954 = !DILocation(line: 932, column: 3, scope: !7951)
!7955 = !DILocalVariable(name: "__ret_warn_on", scope: !7956, file: !3, line: 934, type: !149)
!7956 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 934, column: 2)
!7957 = !DILocation(line: 934, column: 2, scope: !7956)
!7958 = !DILocation(line: 934, column: 2, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7956, file: !3, line: 934, column: 2)
!7960 = !DILocation(line: 934, column: 2, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 934, column: 2)
!7962 = !DILocation(line: 934, column: 2, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7961, file: !3, line: 934, column: 2)
!7964 = !DILocation(line: 934, column: 2, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7961, file: !3, line: 934, column: 2)
!7966 = !{i32 -2142370160, i32 -2142370131, i32 -2142370085, i32 -2142370027, i32 -2142369973, i32 -2142369919, i32 -2142369864, i32 -2142369833}
!7967 = !DILocation(line: 934, column: 2, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7961, file: !3, line: 934, column: 2)
!7969 = !{i32 -2142369433, i32 -2142369426, i32 -2142369374, i32 -2142369343, i32 -2142369313}
!7970 = !DILocation(line: 934, column: 2, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7961, file: !3, line: 934, column: 2)
!7972 = !DILocation(line: 935, column: 2, scope: !7895)
!7973 = !DILocation(line: 936, column: 1, scope: !7895)
!7974 = distinct !DISubprogram(name: "parse_feature_irqs", scope: !3, file: !3, line: 938, type: !7975, scopeLine: 941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!7975 = !DISubroutineType(types: !7976)
!7976 = !{!149, !3935, !3621, !801, !2486, !2486}
!7977 = !DILocalVariable(name: "binfo", arg: 1, scope: !7974, file: !3, line: 938, type: !3935)
!7978 = !DILocation(line: 938, column: 63, scope: !7974)
!7979 = !DILocalVariable(name: "ofst", arg: 2, scope: !7974, file: !3, line: 939, type: !3621)
!7980 = !DILocation(line: 939, column: 26, scope: !7974)
!7981 = !DILocalVariable(name: "fid", arg: 3, scope: !7974, file: !3, line: 939, type: !801)
!7982 = !DILocation(line: 939, column: 36, scope: !7974)
!7983 = !DILocalVariable(name: "irq_base", arg: 4, scope: !7974, file: !3, line: 940, type: !2486)
!7984 = !DILocation(line: 940, column: 24, scope: !7974)
!7985 = !DILocalVariable(name: "nr_irqs", arg: 5, scope: !7974, file: !3, line: 940, type: !2486)
!7986 = !DILocation(line: 940, column: 48, scope: !7974)
!7987 = !DILocalVariable(name: "base", scope: !7974, file: !3, line: 942, type: !126)
!7988 = !DILocation(line: 942, column: 16, scope: !7974)
!7989 = !DILocation(line: 942, column: 23, scope: !7974)
!7990 = !DILocation(line: 942, column: 30, scope: !7974)
!7991 = !DILocation(line: 942, column: 39, scope: !7974)
!7992 = !DILocation(line: 942, column: 37, scope: !7974)
!7993 = !DILocalVariable(name: "i", scope: !7974, file: !3, line: 943, type: !7)
!7994 = !DILocation(line: 943, column: 15, scope: !7974)
!7995 = !DILocalVariable(name: "ibase", scope: !7974, file: !3, line: 943, type: !7)
!7996 = !DILocation(line: 943, column: 18, scope: !7974)
!7997 = !DILocalVariable(name: "inr", scope: !7974, file: !3, line: 943, type: !7)
!7998 = !DILocation(line: 943, column: 25, scope: !7974)
!7999 = !DILocalVariable(name: "virq", scope: !7974, file: !3, line: 944, type: !149)
!8000 = !DILocation(line: 944, column: 6, scope: !7974)
!8001 = !DILocalVariable(name: "v", scope: !7974, file: !3, line: 945, type: !364)
!8002 = !DILocation(line: 945, column: 6, scope: !7974)
!8003 = !DILocation(line: 961, column: 10, scope: !7974)
!8004 = !DILocation(line: 961, column: 2, scope: !7974)
!8005 = !DILocation(line: 963, column: 13, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 961, column: 15)
!8007 = !DILocation(line: 963, column: 18, scope: !8006)
!8008 = !DILocation(line: 963, column: 7, scope: !8006)
!8009 = !DILocation(line: 963, column: 5, scope: !8006)
!8010 = !DILocation(line: 964, column: 11, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 964, column: 11)
!8012 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 964, column: 11)
!8013 = !DILocation(line: 964, column: 11, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 964, column: 11)
!8015 = !DILocation(line: 964, column: 11, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 964, column: 11)
!8017 = !DILocation(line: 964, column: 11, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 964, column: 11)
!8019 = !DILocation(line: 964, column: 11, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 964, column: 11)
!8021 = !DILocation(line: 964, column: 11, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 964, column: 11)
!8023 = !DILocation(line: 964, column: 11, scope: !8012)
!8024 = !DILocation(line: 964, column: 11, scope: !8006)
!8025 = !DILocation(line: 964, column: 9, scope: !8006)
!8026 = !DILocation(line: 965, column: 9, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 965, column: 9)
!8028 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 965, column: 9)
!8029 = !DILocation(line: 965, column: 9, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 965, column: 9)
!8031 = !DILocation(line: 965, column: 9, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 965, column: 9)
!8033 = !DILocation(line: 965, column: 9, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 965, column: 9)
!8035 = !DILocation(line: 965, column: 9, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 965, column: 9)
!8037 = !DILocation(line: 965, column: 9, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 965, column: 9)
!8039 = !DILocation(line: 965, column: 9, scope: !8028)
!8040 = !DILocation(line: 965, column: 9, scope: !8006)
!8041 = !DILocation(line: 965, column: 7, scope: !8006)
!8042 = !DILocation(line: 966, column: 3, scope: !8006)
!8043 = !DILocation(line: 968, column: 13, scope: !8006)
!8044 = !DILocation(line: 968, column: 18, scope: !8006)
!8045 = !DILocation(line: 968, column: 7, scope: !8006)
!8046 = !DILocation(line: 968, column: 5, scope: !8006)
!8047 = !DILocation(line: 969, column: 11, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 969, column: 11)
!8049 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 969, column: 11)
!8050 = !DILocation(line: 969, column: 11, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 969, column: 11)
!8052 = !DILocation(line: 969, column: 11, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 969, column: 11)
!8054 = !DILocation(line: 969, column: 11, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 969, column: 11)
!8056 = !DILocation(line: 969, column: 11, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 969, column: 11)
!8058 = !DILocation(line: 969, column: 11, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 969, column: 11)
!8060 = !DILocation(line: 969, column: 11, scope: !8049)
!8061 = !DILocation(line: 969, column: 11, scope: !8006)
!8062 = !DILocation(line: 969, column: 9, scope: !8006)
!8063 = !DILocation(line: 970, column: 9, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 970, column: 9)
!8065 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 970, column: 9)
!8066 = !DILocation(line: 970, column: 9, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 970, column: 9)
!8068 = !DILocation(line: 970, column: 9, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 970, column: 9)
!8070 = !DILocation(line: 970, column: 9, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 970, column: 9)
!8072 = !DILocation(line: 970, column: 9, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 970, column: 9)
!8074 = !DILocation(line: 970, column: 9, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 970, column: 9)
!8076 = !DILocation(line: 970, column: 9, scope: !8065)
!8077 = !DILocation(line: 970, column: 9, scope: !8006)
!8078 = !DILocation(line: 970, column: 7, scope: !8006)
!8079 = !DILocation(line: 971, column: 3, scope: !8006)
!8080 = !DILocation(line: 973, column: 13, scope: !8006)
!8081 = !DILocation(line: 973, column: 18, scope: !8006)
!8082 = !DILocation(line: 973, column: 7, scope: !8006)
!8083 = !DILocation(line: 973, column: 5, scope: !8006)
!8084 = !DILocation(line: 974, column: 11, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !3, line: 974, column: 11)
!8086 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 974, column: 11)
!8087 = !DILocation(line: 974, column: 11, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 974, column: 11)
!8089 = !DILocation(line: 974, column: 11, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 974, column: 11)
!8091 = !DILocation(line: 974, column: 11, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 974, column: 11)
!8093 = !DILocation(line: 974, column: 11, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 974, column: 11)
!8095 = !DILocation(line: 974, column: 11, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 974, column: 11)
!8097 = !DILocation(line: 974, column: 11, scope: !8086)
!8098 = !DILocation(line: 974, column: 11, scope: !8006)
!8099 = !DILocation(line: 974, column: 9, scope: !8006)
!8100 = !DILocation(line: 975, column: 9, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 975, column: 9)
!8102 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 975, column: 9)
!8103 = !DILocation(line: 975, column: 9, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 975, column: 9)
!8105 = !DILocation(line: 975, column: 9, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 975, column: 9)
!8107 = !DILocation(line: 975, column: 9, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 975, column: 9)
!8109 = !DILocation(line: 975, column: 9, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 975, column: 9)
!8111 = !DILocation(line: 975, column: 9, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 975, column: 9)
!8113 = !DILocation(line: 975, column: 9, scope: !8102)
!8114 = !DILocation(line: 975, column: 9, scope: !8006)
!8115 = !DILocation(line: 975, column: 7, scope: !8006)
!8116 = !DILocation(line: 976, column: 3, scope: !8006)
!8117 = !DILocation(line: 979, column: 7, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 979, column: 6)
!8119 = !DILocation(line: 979, column: 6, scope: !7974)
!8120 = !DILocation(line: 980, column: 4, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 979, column: 12)
!8122 = !DILocation(line: 980, column: 13, scope: !8121)
!8123 = !DILocation(line: 981, column: 4, scope: !8121)
!8124 = !DILocation(line: 981, column: 12, scope: !8121)
!8125 = !DILocation(line: 982, column: 3, scope: !8121)
!8126 = !DILocation(line: 988, column: 6, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 988, column: 6)
!8128 = !DILocation(line: 988, column: 14, scope: !8127)
!8129 = !DILocation(line: 988, column: 12, scope: !8127)
!8130 = !DILocation(line: 988, column: 20, scope: !8127)
!8131 = !DILocation(line: 988, column: 27, scope: !8127)
!8132 = !DILocation(line: 988, column: 18, scope: !8127)
!8133 = !DILocation(line: 988, column: 6, scope: !7974)
!8134 = !DILocation(line: 989, column: 3, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 988, column: 36)
!8136 = !DILocation(line: 991, column: 3, scope: !8135)
!8137 = !DILocation(line: 994, column: 9, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 994, column: 2)
!8139 = !DILocation(line: 994, column: 7, scope: !8138)
!8140 = !DILocation(line: 994, column: 14, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 994, column: 2)
!8142 = !DILocation(line: 994, column: 18, scope: !8141)
!8143 = !DILocation(line: 994, column: 16, scope: !8141)
!8144 = !DILocation(line: 994, column: 2, scope: !8138)
!8145 = !DILocation(line: 995, column: 10, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8141, file: !3, line: 994, column: 28)
!8147 = !DILocation(line: 995, column: 17, scope: !8146)
!8148 = !DILocation(line: 995, column: 27, scope: !8146)
!8149 = !DILocation(line: 995, column: 35, scope: !8146)
!8150 = !DILocation(line: 995, column: 33, scope: !8146)
!8151 = !DILocation(line: 995, column: 8, scope: !8146)
!8152 = !DILocation(line: 996, column: 7, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 996, column: 7)
!8154 = !DILocation(line: 996, column: 12, scope: !8153)
!8155 = !DILocation(line: 996, column: 16, scope: !8153)
!8156 = !DILocation(line: 996, column: 19, scope: !8153)
!8157 = !DILocation(line: 996, column: 24, scope: !8153)
!8158 = !DILocation(line: 996, column: 7, scope: !8146)
!8159 = !DILocation(line: 997, column: 4, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8153, file: !3, line: 996, column: 35)
!8161 = !DILocation(line: 1000, column: 4, scope: !8160)
!8162 = !DILocation(line: 1002, column: 2, scope: !8146)
!8163 = !DILocation(line: 994, column: 24, scope: !8141)
!8164 = !DILocation(line: 994, column: 2, scope: !8141)
!8165 = distinct !{!8165, !8144, !8166}
!8166 = !DILocation(line: 1002, column: 2, scope: !8138)
!8167 = !DILocation(line: 1004, column: 14, scope: !7974)
!8168 = !DILocation(line: 1004, column: 3, scope: !7974)
!8169 = !DILocation(line: 1004, column: 12, scope: !7974)
!8170 = !DILocation(line: 1005, column: 13, scope: !7974)
!8171 = !DILocation(line: 1005, column: 3, scope: !7974)
!8172 = !DILocation(line: 1005, column: 11, scope: !7974)
!8173 = !DILocation(line: 1007, column: 2, scope: !7974)
!8174 = !DILocation(line: 1008, column: 1, scope: !7974)
!8175 = distinct !DISubprogram(name: "build_info_create_dev", scope: !3, file: !3, line: 859, type: !8176, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8176 = !DISubroutineType(types: !8177)
!8177 = !{!149, !3935, !108}
!8178 = !DILocalVariable(name: "binfo", arg: 1, scope: !8175, file: !3, line: 859, type: !3935)
!8179 = !DILocation(line: 859, column: 55, scope: !8175)
!8180 = !DILocalVariable(name: "type", arg: 2, scope: !8175, file: !3, line: 860, type: !108)
!8181 = !DILocation(line: 860, column: 26, scope: !8175)
!8182 = !DILocalVariable(name: "fdev", scope: !8175, file: !3, line: 862, type: !150)
!8183 = !DILocation(line: 862, column: 26, scope: !8175)
!8184 = !DILocation(line: 864, column: 6, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 864, column: 6)
!8186 = !DILocation(line: 864, column: 11, scope: !8185)
!8187 = !DILocation(line: 864, column: 6, scope: !8175)
!8188 = !DILocation(line: 865, column: 3, scope: !8185)
!8189 = !DILocation(line: 871, column: 40, scope: !8175)
!8190 = !DILocation(line: 871, column: 31, scope: !8175)
!8191 = !DILocation(line: 871, column: 46, scope: !8175)
!8192 = !DILocation(line: 871, column: 9, scope: !8175)
!8193 = !DILocation(line: 871, column: 7, scope: !8175)
!8194 = !DILocation(line: 872, column: 7, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 872, column: 6)
!8196 = !DILocation(line: 872, column: 6, scope: !8175)
!8197 = !DILocation(line: 873, column: 3, scope: !8195)
!8198 = !DILocation(line: 875, column: 23, scope: !8175)
!8199 = !DILocation(line: 875, column: 2, scope: !8175)
!8200 = !DILocation(line: 875, column: 9, scope: !8175)
!8201 = !DILocation(line: 875, column: 21, scope: !8175)
!8202 = !DILocation(line: 876, column: 2, scope: !8175)
!8203 = !DILocation(line: 876, column: 9, scope: !8175)
!8204 = !DILocation(line: 876, column: 21, scope: !8175)
!8205 = !DILocation(line: 878, column: 18, scope: !8175)
!8206 = !DILocation(line: 878, column: 25, scope: !8175)
!8207 = !DILocation(line: 878, column: 2, scope: !8175)
!8208 = !DILocation(line: 880, column: 26, scope: !8175)
!8209 = !DILocation(line: 880, column: 33, scope: !8175)
!8210 = !DILocation(line: 880, column: 39, scope: !8175)
!8211 = !DILocation(line: 880, column: 13, scope: !8175)
!8212 = !DILocation(line: 880, column: 2, scope: !8175)
!8213 = !DILocation(line: 880, column: 8, scope: !8175)
!8214 = !DILocation(line: 880, column: 11, scope: !8175)
!8215 = !DILocation(line: 881, column: 6, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 881, column: 6)
!8217 = !DILocation(line: 881, column: 12, scope: !8216)
!8218 = !DILocation(line: 881, column: 15, scope: !8216)
!8219 = !DILocation(line: 881, column: 6, scope: !8175)
!8220 = !DILocation(line: 882, column: 10, scope: !8216)
!8221 = !DILocation(line: 882, column: 16, scope: !8216)
!8222 = !DILocation(line: 882, column: 3, scope: !8216)
!8223 = !DILocation(line: 884, column: 22, scope: !8175)
!8224 = !DILocation(line: 884, column: 29, scope: !8175)
!8225 = !DILocation(line: 884, column: 35, scope: !8175)
!8226 = !DILocation(line: 884, column: 43, scope: !8175)
!8227 = !DILocation(line: 884, column: 2, scope: !8175)
!8228 = !DILocation(line: 884, column: 8, scope: !8175)
!8229 = !DILocation(line: 884, column: 12, scope: !8175)
!8230 = !DILocation(line: 884, column: 19, scope: !8175)
!8231 = !DILocation(line: 885, column: 41, scope: !8175)
!8232 = !DILocation(line: 885, column: 32, scope: !8175)
!8233 = !DILocation(line: 885, column: 47, scope: !8175)
!8234 = !DILocation(line: 885, column: 58, scope: !8175)
!8235 = !DILocation(line: 885, column: 64, scope: !8175)
!8236 = !DILocation(line: 885, column: 19, scope: !8175)
!8237 = !DILocation(line: 885, column: 2, scope: !8175)
!8238 = !DILocation(line: 885, column: 8, scope: !8175)
!8239 = !DILocation(line: 885, column: 12, scope: !8175)
!8240 = !DILocation(line: 885, column: 17, scope: !8175)
!8241 = !DILocation(line: 887, column: 2, scope: !8175)
!8242 = !DILocation(line: 888, column: 1, scope: !8175)
!8243 = distinct !DISubprogram(name: "dfh_id_to_type", scope: !3, file: !3, line: 131, type: !8244, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8244 = !DISubroutineType(types: !8245)
!8245 = !{!108, !801}
!8246 = !DILocalVariable(name: "id", arg: 1, scope: !8243, file: !3, line: 131, type: !801)
!8247 = !DILocation(line: 131, column: 44, scope: !8243)
!8248 = !DILocalVariable(name: "i", scope: !8243, file: !3, line: 133, type: !149)
!8249 = !DILocation(line: 133, column: 6, scope: !8243)
!8250 = !DILocation(line: 135, column: 9, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 135, column: 2)
!8252 = !DILocation(line: 135, column: 7, scope: !8251)
!8253 = !DILocation(line: 135, column: 14, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8251, file: !3, line: 135, column: 2)
!8255 = !DILocation(line: 135, column: 16, scope: !8254)
!8256 = !DILocation(line: 135, column: 2, scope: !8251)
!8257 = !DILocation(line: 136, column: 16, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8254, file: !3, line: 136, column: 7)
!8259 = !DILocation(line: 136, column: 7, scope: !8258)
!8260 = !DILocation(line: 136, column: 19, scope: !8258)
!8261 = !DILocation(line: 136, column: 29, scope: !8258)
!8262 = !DILocation(line: 136, column: 26, scope: !8258)
!8263 = !DILocation(line: 136, column: 7, scope: !8254)
!8264 = !DILocation(line: 137, column: 11, scope: !8258)
!8265 = !DILocation(line: 137, column: 4, scope: !8258)
!8266 = !DILocation(line: 135, column: 41, scope: !8254)
!8267 = !DILocation(line: 135, column: 2, scope: !8254)
!8268 = distinct !{!8268, !8256, !8269}
!8269 = !DILocation(line: 137, column: 11, scope: !8251)
!8270 = !DILocation(line: 139, column: 2, scope: !8243)
!8271 = !DILocation(line: 140, column: 1, scope: !8243)
!8272 = distinct !DISubprogram(name: "dfl_id_alloc", scope: !3, file: !3, line: 100, type: !8273, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8273 = !DISubroutineType(types: !8274)
!8274 = !{!149, !108, !3184}
!8275 = !DILocalVariable(name: "type", arg: 1, scope: !8272, file: !3, line: 100, type: !108)
!8276 = !DILocation(line: 100, column: 42, scope: !8272)
!8277 = !DILocalVariable(name: "dev", arg: 2, scope: !8272, file: !3, line: 100, type: !3184)
!8278 = !DILocation(line: 100, column: 63, scope: !8272)
!8279 = !DILocalVariable(name: "id", scope: !8272, file: !3, line: 102, type: !149)
!8280 = !DILocation(line: 102, column: 6, scope: !8272)
!8281 = !DILocalVariable(name: "__ret_warn_on", scope: !8282, file: !3, line: 104, type: !149)
!8282 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 104, column: 2)
!8283 = !DILocation(line: 104, column: 2, scope: !8282)
!8284 = !DILocation(line: 104, column: 2, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 104, column: 2)
!8286 = !DILocation(line: 104, column: 2, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 104, column: 2)
!8288 = !DILocation(line: 104, column: 2, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 104, column: 2)
!8290 = !DILocation(line: 104, column: 2, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 104, column: 2)
!8292 = !{i32 -2142479803, i32 -2142479774, i32 -2142479728, i32 -2142479670, i32 -2142479616, i32 -2142479562, i32 -2142479507, i32 -2142479476}
!8293 = !DILocation(line: 104, column: 2, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 104, column: 2)
!8295 = !{i32 -2142479076, i32 -2142479069, i32 -2142479017, i32 -2142478986, i32 -2142478956}
!8296 = !DILocation(line: 104, column: 2, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 104, column: 2)
!8298 = !DILocation(line: 105, column: 2, scope: !8272)
!8299 = !DILocation(line: 106, column: 27, scope: !8272)
!8300 = !DILocation(line: 106, column: 18, scope: !8272)
!8301 = !DILocation(line: 106, column: 33, scope: !8272)
!8302 = !DILocation(line: 106, column: 37, scope: !8272)
!8303 = !DILocation(line: 106, column: 7, scope: !8272)
!8304 = !DILocation(line: 106, column: 5, scope: !8272)
!8305 = !DILocation(line: 107, column: 2, scope: !8272)
!8306 = !DILocation(line: 109, column: 9, scope: !8272)
!8307 = !DILocation(line: 109, column: 2, scope: !8272)
!8308 = distinct !DISubprogram(name: "dfl_get_devt", scope: !3, file: !3, line: 629, type: !8309, scopeLine: 630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8309 = !DISubroutineType(types: !8310)
!8310 = !{!454, !114, !149}
!8311 = !DILocalVariable(name: "type", arg: 1, scope: !8308, file: !3, line: 629, type: !114)
!8312 = !DILocation(line: 629, column: 51, scope: !8308)
!8313 = !DILocalVariable(name: "id", arg: 2, scope: !8308, file: !3, line: 629, type: !149)
!8314 = !DILocation(line: 629, column: 61, scope: !8308)
!8315 = !DILocation(line: 631, column: 6, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 631, column: 6)
!8317 = !DILocation(line: 631, column: 11, scope: !8316)
!8318 = !DILocation(line: 631, column: 6, scope: !8308)
!8319 = !DILocation(line: 632, column: 3, scope: !8316)
!8320 = !DILocation(line: 634, column: 9, scope: !8308)
!8321 = !DILocation(line: 634, column: 2, scope: !8308)
!8322 = !DILocation(line: 635, column: 1, scope: !8308)
!8323 = distinct !DISubprogram(name: "__ab_c_size", scope: !7158, file: !7158, line: 301, type: !8324, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8324 = !DISubroutineType(types: !8325)
!8325 = !{!264, !264, !264, !264}
!8326 = !DILocalVariable(name: "a", arg: 1, scope: !8323, file: !7158, line: 301, type: !264)
!8327 = !DILocation(line: 301, column: 54, scope: !8323)
!8328 = !DILocalVariable(name: "b", arg: 2, scope: !8323, file: !7158, line: 301, type: !264)
!8329 = !DILocation(line: 301, column: 64, scope: !8323)
!8330 = !DILocalVariable(name: "c", arg: 3, scope: !8323, file: !7158, line: 301, type: !264)
!8331 = !DILocation(line: 301, column: 74, scope: !8323)
!8332 = !DILocalVariable(name: "bytes", scope: !8323, file: !7158, line: 303, type: !264)
!8333 = !DILocation(line: 303, column: 9, scope: !8323)
!8334 = !DILocalVariable(name: "__a", scope: !8335, file: !7158, line: 305, type: !264)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !7158, line: 305, column: 6)
!8336 = distinct !DILexicalBlock(scope: !8323, file: !7158, line: 305, column: 6)
!8337 = !DILocation(line: 305, column: 6, scope: !8335)
!8338 = !DILocalVariable(name: "__b", scope: !8335, file: !7158, line: 305, type: !264)
!8339 = !DILocalVariable(name: "__d", scope: !8335, file: !7158, line: 305, type: !6967)
!8340 = !DILocation(line: 305, column: 6, scope: !8336)
!8341 = !DILocation(line: 305, column: 6, scope: !8323)
!8342 = !DILocation(line: 306, column: 3, scope: !8336)
!8343 = !DILocalVariable(name: "__a", scope: !8344, file: !7158, line: 307, type: !264)
!8344 = distinct !DILexicalBlock(scope: !8345, file: !7158, line: 307, column: 6)
!8345 = distinct !DILexicalBlock(scope: !8323, file: !7158, line: 307, column: 6)
!8346 = !DILocation(line: 307, column: 6, scope: !8344)
!8347 = !DILocalVariable(name: "__b", scope: !8344, file: !7158, line: 307, type: !264)
!8348 = !DILocalVariable(name: "__d", scope: !8344, file: !7158, line: 307, type: !6967)
!8349 = !DILocation(line: 307, column: 6, scope: !8345)
!8350 = !DILocation(line: 307, column: 6, scope: !8323)
!8351 = !DILocation(line: 308, column: 3, scope: !8345)
!8352 = !DILocation(line: 310, column: 9, scope: !8323)
!8353 = !DILocation(line: 310, column: 2, scope: !8323)
!8354 = !DILocation(line: 311, column: 1, scope: !8323)
!8355 = distinct !DISubprogram(name: "devm_kcalloc", scope: !60, file: !60, line: 229, type: !8356, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8356 = !DISubroutineType(types: !8357)
!8357 = !{!126, !3184, !264, !264, !685}
!8358 = !DILocalVariable(name: "dev", arg: 1, scope: !8355, file: !60, line: 229, type: !3184)
!8359 = !DILocation(line: 229, column: 49, scope: !8355)
!8360 = !DILocalVariable(name: "n", arg: 2, scope: !8355, file: !60, line: 230, type: !264)
!8361 = !DILocation(line: 230, column: 13, scope: !8355)
!8362 = !DILocalVariable(name: "size", arg: 3, scope: !8355, file: !60, line: 230, type: !264)
!8363 = !DILocation(line: 230, column: 23, scope: !8355)
!8364 = !DILocalVariable(name: "flags", arg: 4, scope: !8355, file: !60, line: 230, type: !685)
!8365 = !DILocation(line: 230, column: 35, scope: !8355)
!8366 = !DILocation(line: 232, column: 28, scope: !8355)
!8367 = !DILocation(line: 232, column: 33, scope: !8355)
!8368 = !DILocation(line: 232, column: 36, scope: !8355)
!8369 = !DILocation(line: 232, column: 42, scope: !8355)
!8370 = !DILocation(line: 232, column: 48, scope: !8355)
!8371 = !DILocation(line: 232, column: 9, scope: !8355)
!8372 = !DILocation(line: 232, column: 2, scope: !8355)
!8373 = distinct !DISubprogram(name: "dfl_fpga_cdev_add_port_dev", scope: !3, file: !3, line: 727, type: !8374, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8374 = !DISubroutineType(types: !8375)
!8375 = !{null, !3657, !150}
!8376 = !DILocalVariable(name: "cdev", arg: 1, scope: !8373, file: !3, line: 727, type: !3657)
!8377 = !DILocation(line: 727, column: 62, scope: !8373)
!8378 = !DILocalVariable(name: "port", arg: 2, scope: !8373, file: !3, line: 728, type: !150)
!8379 = !DILocation(line: 728, column: 36, scope: !8373)
!8380 = !DILocalVariable(name: "pdata", scope: !8373, file: !3, line: 730, type: !3649)
!8381 = !DILocation(line: 730, column: 36, scope: !8373)
!8382 = !DILocation(line: 730, column: 62, scope: !8373)
!8383 = !DILocation(line: 730, column: 68, scope: !8373)
!8384 = !DILocation(line: 730, column: 44, scope: !8373)
!8385 = !DILocation(line: 732, column: 14, scope: !8373)
!8386 = !DILocation(line: 732, column: 20, scope: !8373)
!8387 = !DILocation(line: 732, column: 2, scope: !8373)
!8388 = !DILocation(line: 733, column: 12, scope: !8373)
!8389 = !DILocation(line: 733, column: 19, scope: !8373)
!8390 = !DILocation(line: 733, column: 26, scope: !8373)
!8391 = !DILocation(line: 733, column: 32, scope: !8373)
!8392 = !DILocation(line: 733, column: 2, scope: !8373)
!8393 = !DILocation(line: 734, column: 14, scope: !8373)
!8394 = !DILocation(line: 734, column: 21, scope: !8373)
!8395 = !DILocation(line: 734, column: 26, scope: !8373)
!8396 = !DILocation(line: 734, column: 2, scope: !8373)
!8397 = !DILocation(line: 735, column: 16, scope: !8373)
!8398 = !DILocation(line: 735, column: 22, scope: !8373)
!8399 = !DILocation(line: 735, column: 2, scope: !8373)
!8400 = !DILocation(line: 736, column: 1, scope: !8373)
!8401 = distinct !DISubprogram(name: "devm_kmalloc_array", scope: !60, file: !60, line: 219, type: !8356, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8402 = !DILocalVariable(name: "dev", arg: 1, scope: !8401, file: !60, line: 219, type: !3184)
!8403 = !DILocation(line: 219, column: 55, scope: !8401)
!8404 = !DILocalVariable(name: "n", arg: 2, scope: !8401, file: !60, line: 220, type: !264)
!8405 = !DILocation(line: 220, column: 19, scope: !8401)
!8406 = !DILocalVariable(name: "size", arg: 3, scope: !8401, file: !60, line: 220, type: !264)
!8407 = !DILocation(line: 220, column: 29, scope: !8401)
!8408 = !DILocalVariable(name: "flags", arg: 4, scope: !8401, file: !60, line: 220, type: !685)
!8409 = !DILocation(line: 220, column: 41, scope: !8401)
!8410 = !DILocalVariable(name: "bytes", scope: !8401, file: !60, line: 222, type: !264)
!8411 = !DILocation(line: 222, column: 9, scope: !8401)
!8412 = !DILocalVariable(name: "__a", scope: !8413, file: !60, line: 224, type: !264)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !60, line: 224, column: 6)
!8414 = distinct !DILexicalBlock(scope: !8401, file: !60, line: 224, column: 6)
!8415 = !DILocation(line: 224, column: 6, scope: !8413)
!8416 = !DILocalVariable(name: "__b", scope: !8413, file: !60, line: 224, type: !264)
!8417 = !DILocalVariable(name: "__d", scope: !8413, file: !60, line: 224, type: !6967)
!8418 = !DILocation(line: 224, column: 6, scope: !8414)
!8419 = !DILocation(line: 224, column: 6, scope: !8401)
!8420 = !DILocation(line: 225, column: 3, scope: !8414)
!8421 = !DILocation(line: 227, column: 22, scope: !8401)
!8422 = !DILocation(line: 227, column: 27, scope: !8401)
!8423 = !DILocation(line: 227, column: 34, scope: !8401)
!8424 = !DILocation(line: 227, column: 9, scope: !8401)
!8425 = !DILocation(line: 227, column: 2, scope: !8401)
!8426 = !DILocation(line: 228, column: 1, scope: !8401)
!8427 = distinct !DISubprogram(name: "list_add", scope: !4014, file: !4014, line: 84, type: !4066, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8428 = !DILocalVariable(name: "new", arg: 1, scope: !8427, file: !4014, line: 84, type: !143)
!8429 = !DILocation(line: 84, column: 47, scope: !8427)
!8430 = !DILocalVariable(name: "head", arg: 2, scope: !8427, file: !4014, line: 84, type: !143)
!8431 = !DILocation(line: 84, column: 70, scope: !8427)
!8432 = !DILocation(line: 86, column: 13, scope: !8427)
!8433 = !DILocation(line: 86, column: 18, scope: !8427)
!8434 = !DILocation(line: 86, column: 24, scope: !8427)
!8435 = !DILocation(line: 86, column: 30, scope: !8427)
!8436 = !DILocation(line: 86, column: 2, scope: !8427)
!8437 = !DILocation(line: 87, column: 1, scope: !8427)
!8438 = distinct !DISubprogram(name: "remove_feature_dev", scope: !3, file: !3, line: 1360, type: !8439, scopeLine: 1361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8439 = !DISubroutineType(types: !8440)
!8440 = !{!149, !3184, !126}
!8441 = !DILocalVariable(name: "dev", arg: 1, scope: !8438, file: !3, line: 1360, type: !3184)
!8442 = !DILocation(line: 1360, column: 46, scope: !8438)
!8443 = !DILocalVariable(name: "data", arg: 2, scope: !8438, file: !3, line: 1360, type: !126)
!8444 = !DILocation(line: 1360, column: 57, scope: !8438)
!8445 = !DILocalVariable(name: "pdev", scope: !8438, file: !3, line: 1362, type: !150)
!8446 = !DILocation(line: 1362, column: 26, scope: !8438)
!8447 = !DILocalVariable(name: "__mptr", scope: !8448, file: !3, line: 1362, type: !126)
!8448 = distinct !DILexicalBlock(scope: !8438, file: !3, line: 1362, column: 33)
!8449 = !DILocation(line: 1362, column: 33, scope: !8448)
!8450 = !DILocation(line: 1362, column: 33, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 1362, column: 33)
!8452 = !DILocalVariable(name: "type", scope: !8438, file: !3, line: 1363, type: !108)
!8453 = !DILocation(line: 1363, column: 19, scope: !8438)
!8454 = !DILocation(line: 1363, column: 46, scope: !8438)
!8455 = !DILocation(line: 1363, column: 26, scope: !8438)
!8456 = !DILocalVariable(name: "id", scope: !8438, file: !3, line: 1364, type: !149)
!8457 = !DILocation(line: 1364, column: 6, scope: !8438)
!8458 = !DILocation(line: 1364, column: 11, scope: !8438)
!8459 = !DILocation(line: 1364, column: 17, scope: !8438)
!8460 = !DILocation(line: 1366, column: 29, scope: !8438)
!8461 = !DILocation(line: 1366, column: 2, scope: !8438)
!8462 = !DILocation(line: 1368, column: 14, scope: !8438)
!8463 = !DILocation(line: 1368, column: 20, scope: !8438)
!8464 = !DILocation(line: 1368, column: 2, scope: !8438)
!8465 = !DILocation(line: 1370, column: 2, scope: !8438)
!8466 = distinct !DISubprogram(name: "dfl_get_feature_ioaddr_by_id", scope: !109, file: !109, line: 383, type: !8467, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8467 = !DISubroutineType(types: !8468)
!8468 = !{!126, !3184, !801}
!8469 = !DILocalVariable(name: "dev", arg: 1, scope: !8466, file: !109, line: 383, type: !3184)
!8470 = !DILocation(line: 383, column: 59, scope: !8466)
!8471 = !DILocalVariable(name: "id", arg: 2, scope: !8466, file: !109, line: 383, type: !801)
!8472 = !DILocation(line: 383, column: 68, scope: !8466)
!8473 = !DILocalVariable(name: "feature", scope: !8466, file: !109, line: 385, type: !3780)
!8474 = !DILocation(line: 385, column: 22, scope: !8466)
!8475 = !DILocation(line: 385, column: 54, scope: !8466)
!8476 = !DILocation(line: 385, column: 59, scope: !8466)
!8477 = !DILocation(line: 385, column: 32, scope: !8466)
!8478 = !DILocation(line: 387, column: 6, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8466, file: !109, line: 387, column: 6)
!8480 = !DILocation(line: 387, column: 14, scope: !8479)
!8481 = !DILocation(line: 387, column: 17, scope: !8479)
!8482 = !DILocation(line: 387, column: 26, scope: !8479)
!8483 = !DILocation(line: 387, column: 6, scope: !8466)
!8484 = !DILocation(line: 388, column: 10, scope: !8479)
!8485 = !DILocation(line: 388, column: 19, scope: !8479)
!8486 = !DILocation(line: 388, column: 3, scope: !8479)
!8487 = !DILocalVariable(name: "__ret_warn_on", scope: !8488, file: !109, line: 390, type: !149)
!8488 = distinct !DILexicalBlock(scope: !8466, file: !109, line: 390, column: 2)
!8489 = !DILocation(line: 390, column: 2, scope: !8488)
!8490 = !DILocation(line: 390, column: 2, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8488, file: !109, line: 390, column: 2)
!8492 = !DILocation(line: 390, column: 2, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8491, file: !109, line: 390, column: 2)
!8494 = !DILocation(line: 390, column: 2, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8493, file: !109, line: 390, column: 2)
!8496 = !DILocation(line: 390, column: 2, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8493, file: !109, line: 390, column: 2)
!8498 = !{i32 -2142587420, i32 -2142587391, i32 -2142587345, i32 -2142587287, i32 -2142587233, i32 -2142587179, i32 -2142587124, i32 -2142587093}
!8499 = !DILocation(line: 390, column: 2, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8493, file: !109, line: 390, column: 2)
!8501 = !{i32 -2142586693, i32 -2142586686, i32 -2142586634, i32 -2142586603, i32 -2142586573}
!8502 = !DILocation(line: 390, column: 2, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8493, file: !109, line: 390, column: 2)
!8504 = !DILocation(line: 391, column: 2, scope: !8466)
!8505 = !DILocation(line: 392, column: 1, scope: !8466)
!8506 = distinct !DISubprogram(name: "writeq", scope: !7263, file: !7263, line: 97, type: !8507, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8507 = !DISubroutineType(types: !8508)
!8508 = !{null, !364, !8509}
!8509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7268, size: 64)
!8510 = !DILocalVariable(name: "val", arg: 1, scope: !8506, file: !7263, line: 97, type: !364)
!8511 = !DILocation(line: 97, column: 1, scope: !8506)
!8512 = !DILocalVariable(name: "addr", arg: 2, scope: !8506, file: !7263, line: 97, type: !8509)
!8513 = !{i32 -2142771221}
!8514 = distinct !DISubprogram(name: "dfl_get_feature_by_id", scope: !109, file: !109, line: 370, type: !8515, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8515 = !DISubroutineType(types: !8516)
!8516 = !{!3780, !3184, !801}
!8517 = !DILocalVariable(name: "dev", arg: 1, scope: !8514, file: !109, line: 370, type: !3184)
!8518 = !DILocation(line: 370, column: 58, scope: !8514)
!8519 = !DILocalVariable(name: "id", arg: 2, scope: !8514, file: !109, line: 370, type: !801)
!8520 = !DILocation(line: 370, column: 67, scope: !8514)
!8521 = !DILocalVariable(name: "pdata", scope: !8514, file: !109, line: 372, type: !3649)
!8522 = !DILocation(line: 372, column: 36, scope: !8514)
!8523 = !DILocation(line: 372, column: 61, scope: !8514)
!8524 = !DILocation(line: 372, column: 44, scope: !8514)
!8525 = !DILocalVariable(name: "feature", scope: !8514, file: !109, line: 373, type: !3780)
!8526 = !DILocation(line: 373, column: 22, scope: !8514)
!8527 = !DILocation(line: 375, column: 2, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8514, file: !109, line: 375, column: 2)
!8529 = !DILocation(line: 375, column: 2, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8528, file: !109, line: 375, column: 2)
!8531 = !DILocation(line: 376, column: 7, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8530, file: !109, line: 376, column: 7)
!8533 = !DILocation(line: 376, column: 16, scope: !8532)
!8534 = !DILocation(line: 376, column: 22, scope: !8532)
!8535 = !DILocation(line: 376, column: 19, scope: !8532)
!8536 = !DILocation(line: 376, column: 7, scope: !8530)
!8537 = !DILocation(line: 377, column: 11, scope: !8532)
!8538 = !DILocation(line: 377, column: 4, scope: !8532)
!8539 = distinct !{!8539, !8527, !8540}
!8540 = !DILocation(line: 377, column: 11, scope: !8528)
!8541 = !DILocation(line: 379, column: 2, scope: !8514)
!8542 = !DILocation(line: 380, column: 1, scope: !8514)
!8543 = distinct !DISubprogram(name: "request_irq", scope: !8544, file: !8544, line: 157, type: !8545, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8544 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!8545 = !DISubroutineType(types: !8546)
!8546 = !{!149, !7, !8547, !267, !131, !126}
!8547 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !8544, line: 92, baseType: !8548)
!8548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8549, size: 64)
!8549 = !DISubroutineType(types: !8550)
!8550 = !{!8551, !149, !126}
!8551 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !120, line: 17, baseType: !119)
!8552 = !DILocalVariable(name: "irq", arg: 1, scope: !8543, file: !8544, line: 157, type: !7)
!8553 = !DILocation(line: 157, column: 26, scope: !8543)
!8554 = !DILocalVariable(name: "handler", arg: 2, scope: !8543, file: !8544, line: 157, type: !8547)
!8555 = !DILocation(line: 157, column: 45, scope: !8543)
!8556 = !DILocalVariable(name: "flags", arg: 3, scope: !8543, file: !8544, line: 157, type: !267)
!8557 = !DILocation(line: 157, column: 68, scope: !8543)
!8558 = !DILocalVariable(name: "name", arg: 4, scope: !8543, file: !8544, line: 158, type: !131)
!8559 = !DILocation(line: 158, column: 18, scope: !8543)
!8560 = !DILocalVariable(name: "dev", arg: 5, scope: !8543, file: !8544, line: 158, type: !126)
!8561 = !DILocation(line: 158, column: 30, scope: !8543)
!8562 = !DILocation(line: 160, column: 30, scope: !8543)
!8563 = !DILocation(line: 160, column: 35, scope: !8543)
!8564 = !DILocation(line: 160, column: 50, scope: !8543)
!8565 = !DILocation(line: 160, column: 57, scope: !8543)
!8566 = !DILocation(line: 160, column: 63, scope: !8543)
!8567 = !DILocation(line: 160, column: 9, scope: !8543)
!8568 = !DILocation(line: 160, column: 2, scope: !8543)
!8569 = distinct !DISubprogram(name: "dfl_irq_handler", scope: !3, file: !3, line: 1719, type: !8549, scopeLine: 1720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8570 = !DILocalVariable(name: "irq", arg: 1, scope: !8569, file: !3, line: 1719, type: !149)
!8571 = !DILocation(line: 1719, column: 40, scope: !8569)
!8572 = !DILocalVariable(name: "arg", arg: 2, scope: !8569, file: !3, line: 1719, type: !126)
!8573 = !DILocation(line: 1719, column: 51, scope: !8569)
!8574 = !DILocalVariable(name: "trigger", scope: !8569, file: !3, line: 1721, type: !3766)
!8575 = !DILocation(line: 1721, column: 22, scope: !8569)
!8576 = !DILocation(line: 1721, column: 32, scope: !8569)
!8577 = !DILocation(line: 1723, column: 17, scope: !8569)
!8578 = !DILocation(line: 1723, column: 2, scope: !8569)
!8579 = !DILocation(line: 1724, column: 2, scope: !8569)
!8580 = distinct !DISubprogram(name: "copy_overflow", scope: !5818, file: !5818, line: 132, type: !8581, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8581 = !DISubroutineType(types: !8582)
!8582 = !{null, !149, !267}
!8583 = !DILocalVariable(name: "size", arg: 1, scope: !8580, file: !5818, line: 132, type: !149)
!8584 = !DILocation(line: 132, column: 38, scope: !8580)
!8585 = !DILocalVariable(name: "count", arg: 2, scope: !8580, file: !5818, line: 132, type: !267)
!8586 = !DILocation(line: 132, column: 58, scope: !8580)
!8587 = !DILocalVariable(name: "__ret_warn_on", scope: !8588, file: !5818, line: 134, type: !149)
!8588 = distinct !DILexicalBlock(scope: !8580, file: !5818, line: 134, column: 2)
!8589 = !DILocation(line: 134, column: 2, scope: !8588)
!8590 = !DILocation(line: 134, column: 2, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8588, file: !5818, line: 134, column: 2)
!8592 = !DILocation(line: 134, column: 2, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8591, file: !5818, line: 134, column: 2)
!8594 = !DILocation(line: 134, column: 2, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8593, file: !5818, line: 134, column: 2)
!8596 = !DILocation(line: 134, column: 2, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8593, file: !5818, line: 134, column: 2)
!8598 = !DILocation(line: 134, column: 2, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8597, file: !5818, line: 134, column: 2)
!8600 = !DILocation(line: 134, column: 2, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8597, file: !5818, line: 134, column: 2)
!8602 = !{i32 -2145506022, i32 -2145505993, i32 -2145505947, i32 -2145505889, i32 -2145505835, i32 -2145505781, i32 -2145505726, i32 -2145505695}
!8603 = !DILocation(line: 134, column: 2, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8597, file: !5818, line: 134, column: 2)
!8605 = !{i32 -2145505275, i32 -2145505268, i32 -2145505216, i32 -2145505185, i32 -2145505155}
!8606 = !DILocation(line: 134, column: 2, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8597, file: !5818, line: 134, column: 2)
!8608 = !DILocation(line: 134, column: 2, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8593, file: !5818, line: 134, column: 2)
!8610 = !DILocation(line: 135, column: 1, scope: !8580)
!8611 = distinct !DISubprogram(name: "check_object_size", scope: !5818, file: !5818, line: 122, type: !8612, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8612 = !DISubroutineType(types: !8613)
!8613 = !{null, !1991, !267, !157}
!8614 = !DILocalVariable(name: "ptr", arg: 1, scope: !8611, file: !5818, line: 122, type: !1991)
!8615 = !DILocation(line: 122, column: 50, scope: !8611)
!8616 = !DILocalVariable(name: "n", arg: 2, scope: !8611, file: !5818, line: 122, type: !267)
!8617 = !DILocation(line: 122, column: 69, scope: !8611)
!8618 = !DILocalVariable(name: "to_user", arg: 3, scope: !8611, file: !5818, line: 123, type: !157)
!8619 = !DILocation(line: 123, column: 15, scope: !8611)
!8620 = !DILocation(line: 124, column: 3, scope: !8611)
!8621 = distinct !DISubprogram(name: "dfl_ids_init", scope: !3, file: !3, line: 84, type: !1742, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8622 = !DILocalVariable(name: "i", scope: !8621, file: !3, line: 86, type: !149)
!8623 = !DILocation(line: 86, column: 6, scope: !8621)
!8624 = !DILocation(line: 88, column: 9, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 88, column: 2)
!8626 = !DILocation(line: 88, column: 7, scope: !8625)
!8627 = !DILocation(line: 88, column: 14, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 88, column: 2)
!8629 = !DILocation(line: 88, column: 16, scope: !8628)
!8630 = !DILocation(line: 88, column: 2, scope: !8625)
!8631 = !DILocation(line: 89, column: 22, scope: !8628)
!8632 = !DILocation(line: 89, column: 13, scope: !8628)
!8633 = !DILocation(line: 89, column: 25, scope: !8628)
!8634 = !DILocation(line: 89, column: 3, scope: !8628)
!8635 = !DILocation(line: 88, column: 41, scope: !8628)
!8636 = !DILocation(line: 88, column: 2, scope: !8628)
!8637 = distinct !{!8637, !8630, !8638}
!8638 = !DILocation(line: 89, column: 27, scope: !8625)
!8639 = !DILocation(line: 90, column: 1, scope: !8621)
!8640 = distinct !DISubprogram(name: "dfl_chardev_init", scope: !3, file: !3, line: 611, type: !6046, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8641 = !DILocalVariable(name: "i", scope: !8640, file: !3, line: 613, type: !149)
!8642 = !DILocation(line: 613, column: 6, scope: !8640)
!8643 = !DILocalVariable(name: "ret", scope: !8640, file: !3, line: 613, type: !149)
!8644 = !DILocation(line: 613, column: 9, scope: !8640)
!8645 = !DILocation(line: 615, column: 9, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 615, column: 2)
!8647 = !DILocation(line: 615, column: 7, scope: !8646)
!8648 = !DILocation(line: 615, column: 14, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8646, file: !3, line: 615, column: 2)
!8650 = !DILocation(line: 615, column: 16, scope: !8649)
!8651 = !DILocation(line: 615, column: 2, scope: !8646)
!8652 = !DILocation(line: 616, column: 42, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 615, column: 42)
!8654 = !DILocation(line: 616, column: 30, scope: !8653)
!8655 = !DILocation(line: 616, column: 45, scope: !8653)
!8656 = !DILocation(line: 617, column: 35, scope: !8653)
!8657 = !DILocation(line: 617, column: 23, scope: !8653)
!8658 = !DILocation(line: 617, column: 38, scope: !8653)
!8659 = !DILocation(line: 616, column: 9, scope: !8653)
!8660 = !DILocation(line: 616, column: 7, scope: !8653)
!8661 = !DILocation(line: 618, column: 7, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8653, file: !3, line: 618, column: 7)
!8663 = !DILocation(line: 618, column: 7, scope: !8653)
!8664 = !DILocation(line: 619, column: 4, scope: !8662)
!8665 = !DILocation(line: 620, column: 2, scope: !8653)
!8666 = !DILocation(line: 615, column: 38, scope: !8649)
!8667 = !DILocation(line: 615, column: 2, scope: !8649)
!8668 = distinct !{!8668, !8651, !8669}
!8669 = !DILocation(line: 620, column: 2, scope: !8646)
!8670 = !DILocation(line: 622, column: 2, scope: !8640)
!8671 = !DILabel(scope: !8640, name: "exit", file: !3, line: 624)
!8672 = !DILocation(line: 624, column: 1, scope: !8640)
!8673 = !DILocation(line: 625, column: 2, scope: !8640)
!8674 = !DILocation(line: 626, column: 9, scope: !8640)
!8675 = !DILocation(line: 626, column: 2, scope: !8640)
!8676 = !DILocation(line: 627, column: 1, scope: !8640)
!8677 = distinct !DISubprogram(name: "idr_init", scope: !3061, file: !3061, line: 149, type: !8678, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8678 = !DISubroutineType(types: !8679)
!8679 = !{null, !8680}
!8680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!8681 = !DILocalVariable(name: "idr", arg: 1, scope: !8677, file: !3061, line: 149, type: !8680)
!8682 = !DILocation(line: 149, column: 41, scope: !8677)
!8683 = !DILocation(line: 151, column: 16, scope: !8677)
!8684 = !DILocation(line: 151, column: 2, scope: !8677)
!8685 = !DILocation(line: 152, column: 1, scope: !8677)
!8686 = distinct !DISubprogram(name: "idr_init_base", scope: !3061, file: !3061, line: 135, type: !8687, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8687 = !DISubroutineType(types: !8688)
!8688 = !{null, !8680, !149}
!8689 = !DILocalVariable(name: "idr", arg: 1, scope: !8686, file: !3061, line: 135, type: !8680)
!8690 = !DILocation(line: 135, column: 46, scope: !8686)
!8691 = !DILocalVariable(name: "base", arg: 2, scope: !8686, file: !3061, line: 135, type: !149)
!8692 = !DILocation(line: 135, column: 55, scope: !8686)
!8693 = !DILocation(line: 137, column: 2, scope: !8686)
!8694 = !DILocation(line: 138, column: 18, scope: !8686)
!8695 = !DILocation(line: 138, column: 2, scope: !8686)
!8696 = !DILocation(line: 138, column: 7, scope: !8686)
!8697 = !DILocation(line: 138, column: 16, scope: !8686)
!8698 = !DILocation(line: 139, column: 2, scope: !8686)
!8699 = !DILocation(line: 139, column: 7, scope: !8686)
!8700 = !DILocation(line: 139, column: 16, scope: !8686)
!8701 = !DILocation(line: 140, column: 1, scope: !8686)
!8702 = distinct !DISubprogram(name: "xa_init_flags", scope: !681, file: !681, line: 374, type: !8703, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8703 = !DISubroutineType(types: !8704)
!8704 = !{null, !8705, !685}
!8705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!8706 = !DILocalVariable(name: "lock", arg: 1, scope: !8707, file: !8708, line: 327, type: !8712)
!8707 = distinct !DISubprogram(name: "spinlock_check", scope: !8708, file: !8708, line: 327, type: !8709, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !190)
!8708 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!8709 = !DISubroutineType(types: !8710)
!8710 = !{!8711, !8712}
!8711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!8712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!8713 = !DILocation(line: 327, column: 67, scope: !8707, inlinedAt: !8714)
!8714 = distinct !DILocation(line: 376, column: 2, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8702, file: !681, line: 376, column: 2)
!8716 = !DILocalVariable(name: "xa", arg: 1, scope: !8702, file: !681, line: 374, type: !8705)
!8717 = !DILocation(line: 374, column: 49, scope: !8702)
!8718 = !DILocalVariable(name: "flags", arg: 2, scope: !8702, file: !681, line: 374, type: !685)
!8719 = !DILocation(line: 374, column: 59, scope: !8702)
!8720 = !DILocation(line: 376, column: 2, scope: !8702)
!8721 = !DILocation(line: 376, column: 2, scope: !8715)
!8722 = !DILocation(line: 329, column: 10, scope: !8707, inlinedAt: !8714)
!8723 = !DILocation(line: 329, column: 16, scope: !8707, inlinedAt: !8714)
!8724 = !DILocation(line: 377, column: 17, scope: !8702)
!8725 = !DILocation(line: 377, column: 2, scope: !8702)
!8726 = !DILocation(line: 377, column: 6, scope: !8702)
!8727 = !DILocation(line: 377, column: 15, scope: !8702)
!8728 = !DILocation(line: 378, column: 2, scope: !8702)
!8729 = !DILocation(line: 378, column: 6, scope: !8702)
!8730 = !DILocation(line: 378, column: 14, scope: !8702)
!8731 = !DILocation(line: 379, column: 1, scope: !8702)
