; ModuleID = '../bcout/drivers/pci/switch/switchtec.llvm.bc'
source_filename = "drivers/pci/switch/switchtec.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_switchtec_init6:\09\09\09"
module asm ".long\09switchtec_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.attribute = type { i8*, i16 }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.module = type opaque
%struct.module_param_attrs = type opaque
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.65 }
%union.anon.65 = type { i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.66, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.pci_vpd = type opaque
%union.anon.66 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.ida = type { %struct.xarray }
%struct.kmem_cache = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.event_reg = type { i64, i32* (%struct.switchtec_dev*, i64, i32)* }
%struct.switchtec_dev = type { %struct.pci_dev*, %struct.device, %struct.cdev, i32, i32, i32, i32, [255 x i8], i8*, %struct.mrpc_regs*, %struct.sw_event_regs*, %struct.sys_info_regs*, %struct.flash_info_regs*, %struct.ntb_info_regs*, %struct.part_cfg_regs*, %struct.part_cfg_regs*, %struct.pff_csr_regs*, %struct.mutex, %struct.list_head, i32, %struct.work_struct, %struct.delayed_work, i8, %struct.wait_queue_head, %struct.atomic_t, %struct.work_struct, void (%struct.switchtec_dev*)*, [255 x i8], %struct.switchtec_ntb*, %struct.dma_mrpc_output*, i64 }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.mrpc_regs = type { [1024 x i8], [1024 x i8], i32, i32, i32, i32, i64, i32, i32 }
%struct.sw_event_regs = type { i64, i64, i64, i64, i32, [3 x i32], i32, i32, [4 x i32], i32, i32, [4 x i32], i32, i32, [4 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, i32, [4 x i32], i32, i32, [4 x i32], i32, i32, [4 x i32], i32, i32, [4 x i32], i32, i32, [4 x i32], i32, i32, [4 x i32] }
%struct.sys_info_regs = type { i32, i32, i32, %union.anon.67 }
%union.anon.67 = type { %struct.sys_info_regs_gen4 }
%struct.sys_info_regs_gen4 = type { i16, i8, i8, i16, i16, [2 x i32], i8, i8, i8, i8, [7 x i32], i32, i32, i32, i32, i16, i16, i16, i16, [43 x i32], i32, i32, [2 x i32], i16, i16, i8, [3 x i8], i32, i16, i16, [2 x i32], [6 x i8], [2 x i8], [3 x i32], [8 x i8], [24 x i8], [2 x i8], i16 }
%struct.flash_info_regs = type { %union.anon.68 }
%union.anon.68 = type { %struct.flash_info_regs_gen4 }
%struct.flash_info_regs_gen4 = type { i32, i32, %struct.active_partition_info_gen4, [3 x i32], %struct.partition_info, %struct.partition_info, %struct.partition_info, %struct.partition_info, %struct.partition_info, %struct.partition_info, %struct.partition_info, %struct.partition_info, %struct.partition_info, %struct.partition_info, %struct.partition_info, [8 x %struct.partition_info] }
%struct.active_partition_info_gen4 = type { i8, i8, i8, i8 }
%struct.partition_info = type { i32, i32 }
%struct.ntb_info_regs = type <{ i8, i8, i16, i64, i16, i16, [4 x i32], [48 x %struct.nt_partition_info] }>
%struct.nt_partition_info = type { i32, i32, i32, i32 }
%struct.part_cfg_regs = type { i32, i32, i32, i32, i32, i32, [47 x i32], [11 x i32], i16, i16, i32, [3 x i32], i32, [3 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], [153 x i32] }
%struct.pff_csr_regs = type { i16, i16, i16, i16, i32, i32, %union.anon.69, i32, i32, i32, i32, i32, i32, [48 x i32], [448 x i32], [128 x i32], i32, [127 x i32], i32, [3 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], i32, [5 x i32], [174 x i32] }
%union.anon.69 = type { [3 x i64] }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.switchtec_ntb = type opaque
%struct.dma_mrpc_output = type { i32, i32, i32, i32, [1024 x i8] }
%struct.sys_info_regs_gen3 = type <{ i32, i32, i32, i32, i32, i16, i16, [57 x i32], [8 x i8], [16 x i8], [4 x i8], [8 x i8], i16, i8 }>
%struct.switchtec_user = type { %struct.switchtec_dev*, i32, %struct.wait_queue_head, %struct.kref, %struct.list_head, i8, i32, i32, i32, i64, i64, [1024 x i8], i32 }
%struct.ntb_dbmsg_regs = type { [1024 x i32], i64, i64, i64, i64, [64 x i8], i32, i32, [4 x %struct.anon.70], [4 x %struct.anon.71], [3928 x i8], [1024 x i8], [3072 x i8], [24 x i8], [4072 x i8] }
%struct.anon.70 = type { i32, i32 }
%struct.anon.71 = type { i32, i8, i8, i8, i8 }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.switchtec_ioctl_flash_info = type { i64, i32, i32 }
%struct.switchtec_ioctl_flash_part_info = type { i32, i32, i32, i32 }
%struct.switchtec_ioctl_event_summary = type { i64, i64, i32, i32, [48 x i32], [255 x i32] }
%struct.switchtec_ioctl_event_ctl = type { i32, i32, i32, i32, i32, [5 x i32] }
%struct.switchtec_ioctl_pff_port = type { i32, i32, i32 }
%struct.flash_info_regs_gen3 = type { i32, %struct.active_partition_info_gen3, %struct.active_partition_info_gen3, %struct.active_partition_info_gen3, %struct.active_partition_info_gen3, i32, %struct.partition_info, %struct.partition_info, %struct.partition_info, %struct.partition_info, %struct.partition_info, [8 x %struct.partition_info] }
%struct.active_partition_info_gen3 = type { i32, i32, i32 }
%struct.irq_affinity = type { i32, i32, i32, [4 x i32], void (%struct.irq_affinity*, i32)*, i8* }

@__UNIQUE_ID_description235 = internal constant [69 x i8] c"switchtec.description=Microsemi Switchtec(tm) PCIe Management Driver\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_version236 = internal constant [22 x i8] c"switchtec.version=0.1\00", section ".modinfo", align 1, !dbg !4542
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0) }, align 8, !dbg !4699
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !4547
@__UNIQUE_ID_file237 = internal constant [44 x i8] c"switchtec.file=drivers/pci/switch/switchtec\00", section ".modinfo", align 1, !dbg !4592
@__UNIQUE_ID_license238 = internal constant [22 x i8] c"switchtec.license=GPL\00", section ".modinfo", align 1, !dbg !4595
@__UNIQUE_ID_author239 = internal constant [39 x i8] c"switchtec.author=Microsemi Corporation\00", section ".modinfo", align 1, !dbg !4597
@__param_str_max_devices = internal constant [22 x i8] c"switchtec.max_devices\00", align 16, !dbg !4701
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@max_devices = internal global i32 16, align 4, !dbg !4703
@__param_max_devices = internal constant %struct.kernel_param { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__param_str_max_devices, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.65 { i8* bitcast (i32* @max_devices to i8*) } }, section "__param", align 8, !dbg !4602
@__UNIQUE_ID_max_devicestype240 = internal constant [35 x i8] c"switchtec.parmtype=max_devices:int\00", section ".modinfo", align 1, !dbg !4654
@__UNIQUE_ID_max_devices241 = internal constant [68 x i8] c"switchtec.parm=max_devices:max number of switchtec device instances\00", section ".modinfo", align 1, !dbg !4659
@__param_str_use_dma_mrpc = internal constant [23 x i8] c"switchtec.use_dma_mrpc\00", align 16, !dbg !4705
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@use_dma_mrpc = internal global i8 1, align 1, !dbg !4710
@__param_use_dma_mrpc = internal constant %struct.kernel_param { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__param_str_use_dma_mrpc, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 420, i8 -1, i8 0, %union.anon.65 { i8* @use_dma_mrpc } }, section "__param", align 8, !dbg !4664
@__UNIQUE_ID_use_dma_mrpctype242 = internal constant [37 x i8] c"switchtec.parmtype=use_dma_mrpc:bool\00", section ".modinfo", align 1, !dbg !4666
@__UNIQUE_ID_use_dma_mrpc243 = internal constant [67 x i8] c"switchtec.parm=use_dma_mrpc:Enable the use of the DMA MRPC feature\00", section ".modinfo", align 1, !dbg !4671
@__param_str_nirqs = internal constant [16 x i8] c"switchtec.nirqs\00", align 16, !dbg !4712
@nirqs = internal global i32 32, align 4, !dbg !4715
@__param_nirqs = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_nirqs, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.65 { i8* bitcast (i32* @nirqs to i8*) } }, section "__param", align 8, !dbg !4676
@__UNIQUE_ID_nirqstype244 = internal constant [29 x i8] c"switchtec.parmtype=nirqs:int\00", section ".modinfo", align 1, !dbg !4678
@__UNIQUE_ID_nirqs245 = internal constant [96 x i8] c"switchtec.parm=nirqs:number of interrupts to allocate (more may be useful for NTB applications)\00", section ".modinfo", align 1, !dbg !4683
@__UNIQUE_ID___addressable_switchtec_init258 = internal global i8* bitcast (i32 ()* @switchtec_init to i8*), section ".discard.addressable", align 8, !dbg !4688
@switchtec_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([97 x %struct.pci_device_id], [97 x %struct.pci_device_id]* @switchtec_pci_tbl, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @switchtec_pci_probe, void (%struct.pci_dev*)* @switchtec_pci_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !4722
@switchtec_class = dso_local global %struct.class* null, align 8, !dbg !4697
@switchtec_devt = internal global i32 0, align 4, !dbg !4695
@switchtec_minor_ida = internal global %struct.ida { %struct.xarray { %struct.spinlock undef, i32 8388613, i8* null } }, align 8, !dbg !4794
@.str = private unnamed_addr constant [24 x i8] c"\016switchtec: unloaded.\0A\00", align 1
@__exitcall_switchtec_exit = internal global void ()* @switchtec_exit, section ".exitcall.exit", align 8, !dbg !4690
@.str.1 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"switchtec\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"0.1\00", align 1
@switchtec_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4717
@.str.4 = private unnamed_addr constant [22 x i8] c"\016switchtec: loaded.\0A\00", align 1
@switchtec_pci_tbl = internal constant [97 x %struct.pci_device_id] [%struct.pci_device_id { i32 4600, i32 34097, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34097, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34098, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34098, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34099, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34099, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34100, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34100, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34101, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34101, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34102, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34102, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34113, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34113, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34114, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34114, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34115, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34115, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34116, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34116, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34117, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34117, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34118, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34118, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34129, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34129, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34130, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34130, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34131, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34131, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34132, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34132, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34133, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34133, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34134, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34134, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34145, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34145, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34146, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34146, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34147, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34147, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34148, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34148, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34149, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34149, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34150, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34150, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34161, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34161, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34162, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34162, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34163, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34163, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34164, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34164, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34165, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34165, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34166, i32 -1, i32 -1, i32 360448, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 34166, i32 -1, i32 -1, i32 425984, i32 -1, i64 0 }, %struct.pci_device_id { i32 4600, i32 16384, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16384, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16516, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16516, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16488, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16488, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16466, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16466, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16438, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16438, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16424, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16424, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16640, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16640, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16772, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16772, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16744, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16744, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16722, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16722, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16694, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16694, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16680, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16680, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16896, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16896, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 17028, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 17028, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 17000, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 17000, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16978, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16978, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16950, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16950, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16936, i32 -1, i32 -1, i32 360448, i32 -1, i64 1 }, %struct.pci_device_id { i32 4600, i32 16936, i32 -1, i32 -1, i32 425984, i32 -1, i64 1 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !4724
@.str.5 = private unnamed_addr constant [17 x i8] c"ntb_hw_switchtec\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"failed to init isr.\0A\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"Management device registered.\0A\00", align 1
@stdev_create.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4729
@.str.8 = private unnamed_addr constant [19 x i8] c"&stdev->mrpc_mutex\00", align 1
@stdev_create.__key.9 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4734
@.str.10 = private unnamed_addr constant [17 x i8] c"&stdev->event_wq\00", align 1
@switchtec_device_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @switchtec_device_group, %struct.attribute_group* null], align 16, !dbg !4736
@.str.11 = private unnamed_addr constant [12 x i8] c"switchtec%d\00", align 1
@switchtec_fops = internal constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* null, i64 (%struct.file*, i8*, i64, i64*)* @switchtec_dev_read, i64 (%struct.file*, i8*, i64, i64*)* @switchtec_dev_write, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* @switchtec_dev_poll, i64 (%struct.file*, i32, i64)* @switchtec_dev_ioctl, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 0, i32 (%struct.inode*, %struct.file*)* @switchtec_dev_open, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* @switchtec_dev_release, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !4776
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.12 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"QUEUED\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"RUNNING\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"DONE\00", align 1
@__const.stuser_set_state.state_names = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0)], align 16
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@switchtec_device_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([11 x %struct.attribute*], [11 x %struct.attribute*]* @switchtec_device_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !4739
@switchtec_device_attrs = internal global [11 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_device_version, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_fw_version, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_vendor_id, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_product_id, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_product_revision, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_component_vendor, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_component_id, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_component_revision, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_partition, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_partition_count, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4741
@dev_attr_device_version = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @device_version_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4744
@dev_attr_fw_version = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @fw_version_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4758
@dev_attr_vendor_id = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @vendor_id_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4760
@dev_attr_product_id = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @product_id_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4762
@dev_attr_product_revision = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @product_revision_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4764
@dev_attr_component_vendor = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @component_vendor_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4766
@dev_attr_component_id = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @component_id_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4768
@dev_attr_component_revision = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @component_revision_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4770
@dev_attr_partition = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @partition_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4772
@dev_attr_partition_count = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @partition_count_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4774
@.str.17 = private unnamed_addr constant [15 x i8] c"device_version\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"%x\0A\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"fw_version\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"%08x\0A\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"vendor_id\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"product_id\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"product_revision\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"component_vendor\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"none\0A\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"component_id\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"PM%04X\0A\00", align 1
@.str.28 = private unnamed_addr constant [19 x i8] c"component_revision\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"255\0A\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"partition\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"partition_count\00", align 1
@.str.33 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.34 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@event_regs = internal constant [32 x %struct.event_reg] [%struct.event_reg { i64 48, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 72, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 96, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 120, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 144, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 168, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 192, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 216, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 240, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 264, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 288, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 312, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 336, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 292, i32* (%struct.switchtec_dev*, i64, i32)* @part_ev_reg }, %struct.event_reg { i64 316, i32* (%struct.switchtec_dev*, i64, i32)* @part_ev_reg }, %struct.event_reg { i64 340, i32* (%struct.switchtec_dev*, i64, i32)* @part_ev_reg }, %struct.event_reg { i64 364, i32* (%struct.switchtec_dev*, i64, i32)* @part_ev_reg }, %struct.event_reg { i64 3088, i32* (%struct.switchtec_dev*, i64, i32)* @pff_ev_reg }, %struct.event_reg { i64 3112, i32* (%struct.switchtec_dev*, i64, i32)* @pff_ev_reg }, %struct.event_reg { i64 3136, i32* (%struct.switchtec_dev*, i64, i32)* @pff_ev_reg }, %struct.event_reg { i64 3160, i32* (%struct.switchtec_dev*, i64, i32)* @pff_ev_reg }, %struct.event_reg { i64 3208, i32* (%struct.switchtec_dev*, i64, i32)* @pff_ev_reg }, %struct.event_reg { i64 3232, i32* (%struct.switchtec_dev*, i64, i32)* @pff_ev_reg }, %struct.event_reg { i64 3256, i32* (%struct.switchtec_dev*, i64, i32)* @pff_ev_reg }, %struct.event_reg { i64 3280, i32* (%struct.switchtec_dev*, i64, i32)* @pff_ev_reg }, %struct.event_reg { i64 3304, i32* (%struct.switchtec_dev*, i64, i32)* @pff_ev_reg }, %struct.event_reg { i64 3328, i32* (%struct.switchtec_dev*, i64, i32)* @pff_ev_reg }, %struct.event_reg { i64 3352, i32* (%struct.switchtec_dev*, i64, i32)* @pff_ev_reg }, %struct.event_reg { i64 3376, i32* (%struct.switchtec_dev*, i64, i32)* @pff_ev_reg }, %struct.event_reg { i64 360, i32* (%struct.switchtec_dev*, i64, i32)* @global_ev_reg }, %struct.event_reg { i64 388, i32* (%struct.switchtec_dev*, i64, i32)* @part_ev_reg }, %struct.event_reg { i64 3184, i32* (%struct.switchtec_dev*, i64, i32)* @pff_ev_reg }], align 16, !dbg !4778
@stuser_create.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4789
@.str.35 = private unnamed_addr constant [18 x i8] c"&stuser->cmd_comp\00", align 1
@iomem_resource = external dso_local global %struct.resource, align 8
@.str.36 = private unnamed_addr constant [15 x i8] c"unregistered.\0A\00", align 1
@llvm.used = appending global [18 x i8*] [i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__UNIQUE_ID_description235, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_version236, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_file237, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_license238, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_author239, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_max_devices to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_max_devicestype240, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__UNIQUE_ID_max_devices241, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_use_dma_mrpc to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_use_dma_mrpctype242, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__UNIQUE_ID_use_dma_mrpc243, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_nirqs to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_nirqstype244, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__UNIQUE_ID_nirqs245, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_switchtec_init258 to i8*), i8* bitcast (void ()* @switchtec_exit to i8*), i8* bitcast (void ()** @__exitcall_switchtec_exit to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @switchtec_init() #0 section ".init.text" !dbg !4719 {
entry:
  %retval = alloca i32, align 4
  %rc = alloca i32, align 4
  %tmp = alloca %struct.class*, align 8
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !4807, metadata !DIExpression()), !dbg !4808
  %0 = load i32, i32* @max_devices, align 4, !dbg !4809
  %call = call i32 @alloc_chrdev_region(i32* @switchtec_devt, i32 0, i32 %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #9, !dbg !4810
  store i32 %call, i32* %rc, align 4, !dbg !4811
  %1 = load i32, i32* %rc, align 4, !dbg !4812
  %tobool = icmp ne i32 %1, 0, !dbg !4812
  br i1 %tobool, label %if.then, label %if.end, !dbg !4814

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %rc, align 4, !dbg !4815
  store i32 %2, i32* %retval, align 4, !dbg !4816
  br label %return, !dbg !4816

if.end:                                           ; preds = %entry
  %call1 = call %struct.class* @__class_create(%struct.module* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), %struct.lock_class_key* @switchtec_init.__key) #9, !dbg !4817
  store %struct.class* %call1, %struct.class** %tmp, align 8, !dbg !4817
  %3 = load %struct.class*, %struct.class** %tmp, align 8, !dbg !4817
  store %struct.class* %3, %struct.class** @switchtec_class, align 8, !dbg !4819
  %4 = load %struct.class*, %struct.class** @switchtec_class, align 8, !dbg !4820
  %5 = bitcast %struct.class* %4 to i8*, !dbg !4820
  %call2 = call zeroext i1 @IS_ERR(i8* %5) #9, !dbg !4822
  br i1 %call2, label %if.then3, label %if.end5, !dbg !4823

if.then3:                                         ; preds = %if.end
  %6 = load %struct.class*, %struct.class** @switchtec_class, align 8, !dbg !4824
  %7 = bitcast %struct.class* %6 to i8*, !dbg !4824
  %call4 = call i64 @PTR_ERR(i8* %7) #9, !dbg !4826
  %conv = trunc i64 %call4 to i32, !dbg !4826
  store i32 %conv, i32* %rc, align 4, !dbg !4827
  br label %err_create_class, !dbg !4828

if.end5:                                          ; preds = %if.end
  %call6 = call i32 @__pci_register_driver(%struct.pci_driver* @switchtec_pci_driver, %struct.module* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #9, !dbg !4829
  store i32 %call6, i32* %rc, align 4, !dbg !4830
  %8 = load i32, i32* %rc, align 4, !dbg !4831
  %tobool7 = icmp ne i32 %8, 0, !dbg !4831
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !4833

if.then8:                                         ; preds = %if.end5
  br label %err_pci_register, !dbg !4834

if.end9:                                          ; preds = %if.end5
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !4835
  store i32 0, i32* %retval, align 4, !dbg !4836
  br label %return, !dbg !4836

err_pci_register:                                 ; preds = %if.then8
  call void @llvm.dbg.label(metadata !4837), !dbg !4838
  %9 = load %struct.class*, %struct.class** @switchtec_class, align 8, !dbg !4839
  call void @class_destroy(%struct.class* %9) #9, !dbg !4840
  br label %err_create_class, !dbg !4840

err_create_class:                                 ; preds = %err_pci_register, %if.then3
  call void @llvm.dbg.label(metadata !4841), !dbg !4842
  %10 = load i32, i32* @switchtec_devt, align 4, !dbg !4843
  %11 = load i32, i32* @max_devices, align 4, !dbg !4844
  call void @unregister_chrdev_region(i32 %10, i32 %11) #9, !dbg !4845
  %12 = load i32, i32* %rc, align 4, !dbg !4846
  store i32 %12, i32* %retval, align 4, !dbg !4847
  br label %return, !dbg !4847

return:                                           ; preds = %err_create_class, %if.end9, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !4848
  ret i32 %13, !dbg !4848
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @switchtec_exit() #0 section ".exit.text" !dbg !4849 {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @switchtec_pci_driver) #9, !dbg !4850
  %0 = load %struct.class*, %struct.class** @switchtec_class, align 8, !dbg !4851
  call void @class_destroy(%struct.class* %0) #9, !dbg !4852
  %1 = load i32, i32* @switchtec_devt, align 4, !dbg !4853
  %2 = load i32, i32* @max_devices, align 4, !dbg !4854
  call void @unregister_chrdev_region(i32 %1, i32 %2) #9, !dbg !4855
  call void @ida_destroy(%struct.ida* @switchtec_minor_ida) #9, !dbg !4856
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0)) #10, !dbg !4857
  ret void, !dbg !4858
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #1

; Function Attrs: noredzone
declare dso_local void @class_destroy(%struct.class*) #1

; Function Attrs: noredzone
declare dso_local void @unregister_chrdev_region(i32, i32) #1

; Function Attrs: noredzone
declare dso_local void @ida_destroy(%struct.ida*) #1

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noredzone
declare dso_local i32 @alloc_chrdev_region(i32*, i32, i32, i8*) #1

; Function Attrs: noredzone
declare dso_local %struct.class* @__class_create(%struct.module*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #4 !dbg !4859 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4863, metadata !DIExpression()), !dbg !4864
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !4865
  %1 = ptrtoint i8* %0 to i64, !dbg !4865
  %2 = inttoptr i64 %1 to i8*, !dbg !4865
  %3 = ptrtoint i8* %2 to i64, !dbg !4865
  %cmp = icmp uge i64 %3, -4095, !dbg !4865
  %lnot = xor i1 %cmp, true, !dbg !4865
  %lnot1 = xor i1 %lnot, true, !dbg !4865
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4865
  %conv = sext i32 %lnot.ext to i64, !dbg !4865
  %tobool = icmp ne i64 %conv, 0, !dbg !4865
  ret i1 %tobool, !dbg !4866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #4 !dbg !4867 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4870, metadata !DIExpression()), !dbg !4871
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !4872
  %1 = ptrtoint i8* %0 to i64, !dbg !4873
  ret i64 %1, !dbg !4874
}

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @switchtec_pci_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %id) #4 !dbg !4875 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %id.addr = alloca %struct.pci_device_id*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !4876, metadata !DIExpression()), !dbg !4877
  store %struct.pci_device_id* %id, %struct.pci_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %id.addr, metadata !4878, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !4880, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !4882, metadata !DIExpression()), !dbg !4883
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4884
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 11, !dbg !4886
  %1 = load i32, i32* %class, align 4, !dbg !4886
  %cmp = icmp eq i32 %1, 425984, !dbg !4887
  br i1 %cmp, label %if.then, label %if.end, !dbg !4888

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @request_module_nowait(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #9, !dbg !4889
  br label %if.end, !dbg !4889

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4890
  %call1 = call %struct.switchtec_dev* @stdev_create(%struct.pci_dev* %2) #9, !dbg !4891
  store %struct.switchtec_dev* %call1, %struct.switchtec_dev** %stdev, align 8, !dbg !4892
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4893
  %4 = bitcast %struct.switchtec_dev* %3 to i8*, !dbg !4893
  %call2 = call zeroext i1 @IS_ERR(i8* %4) #9, !dbg !4895
  br i1 %call2, label %if.then3, label %if.end5, !dbg !4896

if.then3:                                         ; preds = %if.end
  %5 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4897
  %6 = bitcast %struct.switchtec_dev* %5 to i8*, !dbg !4897
  %call4 = call i64 @PTR_ERR(i8* %6) #9, !dbg !4898
  %conv = trunc i64 %call4 to i32, !dbg !4898
  store i32 %conv, i32* %retval, align 4, !dbg !4899
  br label %return, !dbg !4899

if.end5:                                          ; preds = %if.end
  %7 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !4900
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %7, i32 0, i32 6, !dbg !4901
  %8 = load i64, i64* %driver_data, align 8, !dbg !4901
  %conv6 = trunc i64 %8 to i32, !dbg !4900
  %9 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4902
  %gen = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %9, i32 0, i32 3, !dbg !4903
  store i32 %conv6, i32* %gen, align 8, !dbg !4904
  %10 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4905
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4906
  %call7 = call i32 @switchtec_init_pci(%struct.switchtec_dev* %10, %struct.pci_dev* %11) #9, !dbg !4907
  store i32 %call7, i32* %rc, align 4, !dbg !4908
  %12 = load i32, i32* %rc, align 4, !dbg !4909
  %tobool = icmp ne i32 %12, 0, !dbg !4909
  br i1 %tobool, label %if.then8, label %if.end9, !dbg !4911

if.then8:                                         ; preds = %if.end5
  br label %err_put, !dbg !4912

if.end9:                                          ; preds = %if.end5
  %13 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4913
  %call10 = call i32 @switchtec_init_isr(%struct.switchtec_dev* %13) #9, !dbg !4914
  store i32 %call10, i32* %rc, align 4, !dbg !4915
  %14 = load i32, i32* %rc, align 4, !dbg !4916
  %tobool11 = icmp ne i32 %14, 0, !dbg !4916
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !4918

if.then12:                                        ; preds = %if.end9
  %15 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4919
  %dev = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %15, i32 0, i32 1, !dbg !4919
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !4919
  br label %err_put, !dbg !4921

if.end13:                                         ; preds = %if.end9
  %16 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4922
  %mmio_part_cfg = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %16, i32 0, i32 14, !dbg !4923
  %17 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %mmio_part_cfg, align 8, !dbg !4923
  %mrpc_comp_hdr = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %17, i32 0, i32 16, !dbg !4924
  %18 = bitcast i32* %mrpc_comp_hdr to i8*, !dbg !4925
  call void @iowrite32(i32 9, i8* %18) #9, !dbg !4926
  %19 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4927
  call void @enable_link_state_events(%struct.switchtec_dev* %19) #9, !dbg !4928
  %20 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4929
  %dma_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %20, i32 0, i32 29, !dbg !4931
  %21 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc, align 8, !dbg !4931
  %tobool14 = icmp ne %struct.dma_mrpc_output* %21, null, !dbg !4929
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !4932

if.then15:                                        ; preds = %if.end13
  %22 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4933
  call void @enable_dma_mrpc(%struct.switchtec_dev* %22) #9, !dbg !4934
  br label %if.end16, !dbg !4934

if.end16:                                         ; preds = %if.then15, %if.end13
  %23 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4935
  %cdev = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %23, i32 0, i32 2, !dbg !4936
  %24 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4937
  %dev17 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %24, i32 0, i32 1, !dbg !4938
  %call18 = call i32 @cdev_device_add(%struct.cdev* %cdev, %struct.device* %dev17) #9, !dbg !4939
  store i32 %call18, i32* %rc, align 4, !dbg !4940
  %25 = load i32, i32* %rc, align 4, !dbg !4941
  %tobool19 = icmp ne i32 %25, 0, !dbg !4941
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !4943

if.then20:                                        ; preds = %if.end16
  br label %err_devadd, !dbg !4944

if.end21:                                         ; preds = %if.end16
  %26 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4945
  %dev22 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %26, i32 0, i32 1, !dbg !4945
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev22, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !4945
  store i32 0, i32* %retval, align 4, !dbg !4946
  br label %return, !dbg !4946

err_devadd:                                       ; preds = %if.then20
  call void @llvm.dbg.label(metadata !4947), !dbg !4948
  %27 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4949
  call void @stdev_kill(%struct.switchtec_dev* %27) #9, !dbg !4950
  br label %err_put, !dbg !4950

err_put:                                          ; preds = %err_devadd, %if.then12, %if.then8
  call void @llvm.dbg.label(metadata !4951), !dbg !4952
  %28 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4953
  %dev23 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %28, i32 0, i32 1, !dbg !4953
  %devt = getelementptr inbounds %struct.device, %struct.device* %dev23, i32 0, i32 25, !dbg !4953
  %29 = load i32, i32* %devt, align 8, !dbg !4953
  %and = and i32 %29, 1048575, !dbg !4953
  call void @ida_free(%struct.ida* @switchtec_minor_ida, i32 %and) #9, !dbg !4953
  %30 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4954
  %dev24 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %30, i32 0, i32 1, !dbg !4955
  call void @put_device(%struct.device* %dev24) #9, !dbg !4956
  %31 = load i32, i32* %rc, align 4, !dbg !4957
  store i32 %31, i32* %retval, align 4, !dbg !4958
  br label %return, !dbg !4958

return:                                           ; preds = %err_put, %if.end21, %if.then3
  %32 = load i32, i32* %retval, align 4, !dbg !4959
  ret i32 %32, !dbg !4959
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @switchtec_pci_remove(%struct.pci_dev* %pdev) #4 !dbg !4960 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !4961, metadata !DIExpression()), !dbg !4962
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !4963, metadata !DIExpression()), !dbg !4964
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4965
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #9, !dbg !4966
  %1 = bitcast i8* %call to %struct.switchtec_dev*, !dbg !4966
  store %struct.switchtec_dev* %1, %struct.switchtec_dev** %stdev, align 8, !dbg !4964
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4967
  call void @pci_set_drvdata(%struct.pci_dev* %2, i8* null) #9, !dbg !4968
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4969
  %cdev = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 2, !dbg !4970
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4971
  %dev = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %4, i32 0, i32 1, !dbg !4972
  call void @cdev_device_del(%struct.cdev* %cdev, %struct.device* %dev) #9, !dbg !4973
  %5 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4974
  %dev1 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %5, i32 0, i32 1, !dbg !4974
  %devt = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 25, !dbg !4974
  %6 = load i32, i32* %devt, align 8, !dbg !4974
  %and = and i32 %6, 1048575, !dbg !4974
  call void @ida_free(%struct.ida* @switchtec_minor_ida, i32 %and) #9, !dbg !4974
  %7 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4975
  %dev2 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %7, i32 0, i32 1, !dbg !4975
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0)) #10, !dbg !4975
  %8 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4976
  call void @stdev_kill(%struct.switchtec_dev* %8) #9, !dbg !4977
  %9 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !4978
  %dev3 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %9, i32 0, i32 1, !dbg !4979
  call void @put_device(%struct.device* %dev3) #9, !dbg !4980
  ret void, !dbg !4981
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_module_nowait(i8* %name, ...) #4 !dbg !4982 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4986, metadata !DIExpression()), !dbg !4987
  ret i32 -38, !dbg !4988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.switchtec_dev* @stdev_create(%struct.pci_dev* %pdev) #4 !dbg !4731 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4989, metadata !DIExpression()), !dbg !4995
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5000, metadata !DIExpression()), !dbg !5001
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5002, metadata !DIExpression()), !dbg !5010
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5012, metadata !DIExpression()), !dbg !5013
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5014, metadata !DIExpression()), !dbg !5015
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5016, metadata !DIExpression()), !dbg !5017
  %retval = alloca %struct.switchtec_dev*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %minor = alloca i32, align 4
  %dev = alloca %struct.device*, align 8
  %cdev = alloca %struct.cdev*, align 8
  %rc = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %.compoundliteral16 = alloca %struct.atomic64_t, align 8
  %.compoundliteral30 = alloca %struct.atomic64_t, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5018, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !5020, metadata !DIExpression()), !dbg !5021
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !5022, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !5024, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.declare(metadata %struct.cdev** %cdev, metadata !5026, metadata !DIExpression()), !dbg !5027
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !5028, metadata !DIExpression()), !dbg !5029
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5030
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !5031
  %call = call i32 @dev_to_node(%struct.device* %dev1) #9, !dbg !5032
  %call2 = call i8* @kzalloc_node(i64 1672, i32 3264, i32 %call) #9, !dbg !5033
  %1 = bitcast i8* %call2 to %struct.switchtec_dev*, !dbg !5033
  store %struct.switchtec_dev* %1, %struct.switchtec_dev** %stdev, align 8, !dbg !5034
  %2 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5035
  %tobool = icmp ne %struct.switchtec_dev* %2, null, !dbg !5035
  br i1 %tobool, label %if.end, label %if.then, !dbg !5037

if.then:                                          ; preds = %entry
  %call3 = call i8* @ERR_PTR(i64 -12) #9, !dbg !5038
  %3 = bitcast i8* %call3 to %struct.switchtec_dev*, !dbg !5038
  store %struct.switchtec_dev* %3, %struct.switchtec_dev** %retval, align 8, !dbg !5039
  br label %return, !dbg !5039

if.end:                                           ; preds = %entry
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5040
  %alive = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %4, i32 0, i32 22, !dbg !5041
  store i8 1, i8* %alive, align 8, !dbg !5042
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5043
  %6 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5044
  %pdev4 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %6, i32 0, i32 0, !dbg !5045
  store %struct.pci_dev* %5, %struct.pci_dev** %pdev4, align 8, !dbg !5046
  %7 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5047
  %mrpc_queue = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %7, i32 0, i32 18, !dbg !5048
  call void @INIT_LIST_HEAD(%struct.list_head* %mrpc_queue) #9, !dbg !5049
  br label %do.body, !dbg !5050

do.body:                                          ; preds = %if.end
  %8 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5051
  %mrpc_mutex = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %8, i32 0, i32 17, !dbg !5051
  call void @__mutex_init(%struct.mutex* %mrpc_mutex, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), %struct.lock_class_key* @stdev_create.__key) #9, !dbg !5051
  br label %do.end, !dbg !5051

do.end:                                           ; preds = %do.body
  %9 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5053
  %mrpc_busy = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %9, i32 0, i32 19, !dbg !5054
  store i32 0, i32* %mrpc_busy, align 8, !dbg !5055
  br label %do.body5, !dbg !5056

do.body5:                                         ; preds = %do.end
  %10 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5057
  %mrpc_work = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %10, i32 0, i32 20, !dbg !5057
  call void @__init_work(%struct.work_struct* %mrpc_work, i32 0) #9, !dbg !5057
  %11 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5057
  %mrpc_work6 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %11, i32 0, i32 20, !dbg !5057
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %mrpc_work6, i32 0, i32 0, !dbg !5057
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !5057
  store i64 68719476704, i64* %counter, align 8, !dbg !5057
  %12 = bitcast %struct.atomic64_t* %data to i8*, !dbg !5057
  %13 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !5057
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 8, i1 false), !dbg !5057
  %14 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5057
  %mrpc_work7 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %14, i32 0, i32 20, !dbg !5057
  %entry8 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %mrpc_work7, i32 0, i32 1, !dbg !5057
  call void @INIT_LIST_HEAD(%struct.list_head* %entry8) #9, !dbg !5057
  %15 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5057
  %mrpc_work9 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %15, i32 0, i32 20, !dbg !5057
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %mrpc_work9, i32 0, i32 2, !dbg !5057
  store void (%struct.work_struct*)* @mrpc_event_work, void (%struct.work_struct*)** %func, align 8, !dbg !5057
  br label %do.end10, !dbg !5057

do.end10:                                         ; preds = %do.body5
  br label %do.body11, !dbg !5059

do.body11:                                        ; preds = %do.end10
  br label %do.body12, !dbg !5060

do.body12:                                        ; preds = %do.body11
  %16 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5062
  %mrpc_timeout = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %16, i32 0, i32 21, !dbg !5062
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %mrpc_timeout, i32 0, i32 0, !dbg !5062
  call void @__init_work(%struct.work_struct* %work, i32 0) #9, !dbg !5062
  %17 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5062
  %mrpc_timeout13 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %17, i32 0, i32 21, !dbg !5062
  %work14 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %mrpc_timeout13, i32 0, i32 0, !dbg !5062
  %data15 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work14, i32 0, i32 0, !dbg !5062
  %counter17 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral16, i32 0, i32 0, !dbg !5062
  store i64 68719476704, i64* %counter17, align 8, !dbg !5062
  %18 = bitcast %struct.atomic64_t* %data15 to i8*, !dbg !5062
  %19 = bitcast %struct.atomic64_t* %.compoundliteral16 to i8*, !dbg !5062
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 8, i1 false), !dbg !5062
  %20 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5062
  %mrpc_timeout18 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %20, i32 0, i32 21, !dbg !5062
  %work19 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %mrpc_timeout18, i32 0, i32 0, !dbg !5062
  %entry20 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work19, i32 0, i32 1, !dbg !5062
  call void @INIT_LIST_HEAD(%struct.list_head* %entry20) #9, !dbg !5062
  %21 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5062
  %mrpc_timeout21 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %21, i32 0, i32 21, !dbg !5062
  %work22 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %mrpc_timeout21, i32 0, i32 0, !dbg !5062
  %func23 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work22, i32 0, i32 2, !dbg !5062
  store void (%struct.work_struct*)* @mrpc_timeout_work, void (%struct.work_struct*)** %func23, align 8, !dbg !5062
  br label %do.end24, !dbg !5062

do.end24:                                         ; preds = %do.body12
  %22 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5060
  %mrpc_timeout25 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %22, i32 0, i32 21, !dbg !5060
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %mrpc_timeout25, i32 0, i32 1, !dbg !5060
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #9, !dbg !5060
  br label %do.end26, !dbg !5060

do.end26:                                         ; preds = %do.end24
  br label %do.body27, !dbg !5064

do.body27:                                        ; preds = %do.end26
  %23 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5065
  %link_event_work = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %23, i32 0, i32 25, !dbg !5065
  call void @__init_work(%struct.work_struct* %link_event_work, i32 0) #9, !dbg !5065
  %24 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5065
  %link_event_work28 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %24, i32 0, i32 25, !dbg !5065
  %data29 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %link_event_work28, i32 0, i32 0, !dbg !5065
  %counter31 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral30, i32 0, i32 0, !dbg !5065
  store i64 68719476704, i64* %counter31, align 8, !dbg !5065
  %25 = bitcast %struct.atomic64_t* %data29 to i8*, !dbg !5065
  %26 = bitcast %struct.atomic64_t* %.compoundliteral30 to i8*, !dbg !5065
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 8, i1 false), !dbg !5065
  %27 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5065
  %link_event_work32 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %27, i32 0, i32 25, !dbg !5065
  %entry33 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %link_event_work32, i32 0, i32 1, !dbg !5065
  call void @INIT_LIST_HEAD(%struct.list_head* %entry33) #9, !dbg !5065
  %28 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5065
  %link_event_work34 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %28, i32 0, i32 25, !dbg !5065
  %func35 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %link_event_work34, i32 0, i32 2, !dbg !5065
  store void (%struct.work_struct*)* @link_event_work, void (%struct.work_struct*)** %func35, align 8, !dbg !5065
  br label %do.end36, !dbg !5065

do.end36:                                         ; preds = %do.body27
  br label %do.body37, !dbg !5067

do.body37:                                        ; preds = %do.end36
  %29 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5068
  %event_wq = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %29, i32 0, i32 23, !dbg !5068
  call void @__init_waitqueue_head(%struct.wait_queue_head* %event_wq, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), %struct.lock_class_key* @stdev_create.__key.9) #9, !dbg !5068
  br label %do.end38, !dbg !5068

do.end38:                                         ; preds = %do.body37
  %30 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5070
  %event_cnt = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %30, i32 0, i32 24, !dbg !5071
  store %struct.atomic_t* %event_cnt, %struct.atomic_t** %v.addr.i, align 8
  store i32 0, i32* %i.addr.i, align 4
  %31 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5072
  %32 = bitcast %struct.atomic_t* %31 to i8*, !dbg !5072
  store i8* %32, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %33 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5073
  %34 = load i64, i64* %size.addr.i.i, align 8, !dbg !5074
  %conv.i.i = trunc i64 %34 to i32, !dbg !5074
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %33, i32 %conv.i.i) #11, !dbg !5075
  %35 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5076
  %36 = load i64, i64* %size.addr.i.i, align 8, !dbg !5076
  call void @kcsan_check_access(i8* %35, i64 %36, i32 5) #11, !dbg !5076
  %37 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5077
  %38 = load i32, i32* %i.addr.i, align 4, !dbg !5078
  store %struct.atomic_t* %37, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %38, i32* %i.addr.i.i, align 4
  %39 = load i32, i32* %i.addr.i.i, align 4, !dbg !5079
  %40 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5079
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %40, i32 0, i32 0, !dbg !5079
  store volatile i32 %39, i32* %counter.i.i, align 4, !dbg !5079
  %41 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5081
  %dev39 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %41, i32 0, i32 1, !dbg !5082
  store %struct.device* %dev39, %struct.device** %dev, align 8, !dbg !5083
  %42 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5084
  call void @device_initialize(%struct.device* %42) #9, !dbg !5085
  %43 = load %struct.class*, %struct.class** @switchtec_class, align 8, !dbg !5086
  %44 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5087
  %class = getelementptr inbounds %struct.device, %struct.device* %44, i32 0, i32 29, !dbg !5088
  store %struct.class* %43, %struct.class** %class, align 8, !dbg !5089
  %45 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5090
  %dev40 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %45, i32 0, i32 41, !dbg !5091
  %46 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5092
  %parent = getelementptr inbounds %struct.device, %struct.device* %46, i32 0, i32 1, !dbg !5093
  store %struct.device* %dev40, %struct.device** %parent, align 8, !dbg !5094
  %47 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5095
  %groups = getelementptr inbounds %struct.device, %struct.device* %47, i32 0, i32 30, !dbg !5096
  store %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @switchtec_device_groups, i64 0, i64 0), %struct.attribute_group*** %groups, align 8, !dbg !5097
  %48 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5098
  %release = getelementptr inbounds %struct.device, %struct.device* %48, i32 0, i32 31, !dbg !5099
  store void (%struct.device*)* @stdev_release, void (%struct.device*)** %release, align 8, !dbg !5100
  %call41 = call i32 @ida_alloc_range(%struct.ida* @switchtec_minor_ida, i32 0, i32 -1, i32 3264) #9, !dbg !5101
  store i32 %call41, i32* %minor, align 4, !dbg !5102
  %49 = load i32, i32* %minor, align 4, !dbg !5103
  %cmp = icmp slt i32 %49, 0, !dbg !5105
  br i1 %cmp, label %if.then42, label %if.end43, !dbg !5106

if.then42:                                        ; preds = %do.end38
  %50 = load i32, i32* %minor, align 4, !dbg !5107
  store i32 %50, i32* %rc, align 4, !dbg !5109
  br label %err_put, !dbg !5110

if.end43:                                         ; preds = %do.end38
  %51 = load i32, i32* @switchtec_devt, align 4, !dbg !5111
  %shr = lshr i32 %51, 20, !dbg !5111
  %shl = shl i32 %shr, 20, !dbg !5111
  %52 = load i32, i32* %minor, align 4, !dbg !5111
  %or = or i32 %shl, %52, !dbg !5111
  %53 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5112
  %devt = getelementptr inbounds %struct.device, %struct.device* %53, i32 0, i32 25, !dbg !5113
  store i32 %or, i32* %devt, align 8, !dbg !5114
  %54 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5115
  %55 = load i32, i32* %minor, align 4, !dbg !5116
  %call44 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %54, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 %55) #9, !dbg !5117
  %56 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5118
  %cdev45 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %56, i32 0, i32 2, !dbg !5119
  store %struct.cdev* %cdev45, %struct.cdev** %cdev, align 8, !dbg !5120
  %57 = load %struct.cdev*, %struct.cdev** %cdev, align 8, !dbg !5121
  call void @cdev_init(%struct.cdev* %57, %struct.file_operations* @switchtec_fops) #9, !dbg !5122
  %58 = load %struct.cdev*, %struct.cdev** %cdev, align 8, !dbg !5123
  %owner = getelementptr inbounds %struct.cdev, %struct.cdev* %58, i32 0, i32 1, !dbg !5124
  store %struct.module* null, %struct.module** %owner, align 8, !dbg !5125
  %59 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5126
  store %struct.switchtec_dev* %59, %struct.switchtec_dev** %retval, align 8, !dbg !5127
  br label %return, !dbg !5127

err_put:                                          ; preds = %if.then42
  call void @llvm.dbg.label(metadata !5128), !dbg !5129
  %60 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5130
  %dev46 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %60, i32 0, i32 1, !dbg !5131
  call void @put_device(%struct.device* %dev46) #9, !dbg !5132
  %61 = load i32, i32* %rc, align 4, !dbg !5133
  %conv = sext i32 %61 to i64, !dbg !5133
  %call47 = call i8* @ERR_PTR(i64 %conv) #9, !dbg !5134
  %62 = bitcast i8* %call47 to %struct.switchtec_dev*, !dbg !5134
  store %struct.switchtec_dev* %62, %struct.switchtec_dev** %retval, align 8, !dbg !5135
  br label %return, !dbg !5135

return:                                           ; preds = %err_put, %if.end43, %if.then
  %63 = load %struct.switchtec_dev*, %struct.switchtec_dev** %retval, align 8, !dbg !5136
  ret %struct.switchtec_dev* %63, !dbg !5136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @switchtec_init_pci(%struct.switchtec_dev* %stdev, %struct.pci_dev* %pdev) #4 !dbg !5137 {
entry:
  %retval = alloca i32, align 4
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %rc = alloca i32, align 4
  %map = alloca i8*, align 8
  %res_start = alloca i64, align 8
  %res_len = alloca i64, align 8
  %part_id = alloca i32*, align 8
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !5140, metadata !DIExpression()), !dbg !5141
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5142, metadata !DIExpression()), !dbg !5143
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !5144, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.declare(metadata i8** %map, metadata !5146, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.declare(metadata i64* %res_start, metadata !5148, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.declare(metadata i64* %res_len, metadata !5150, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.declare(metadata i32** %part_id, metadata !5152, metadata !DIExpression()), !dbg !5153
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5154
  %call = call i32 @pcim_enable_device(%struct.pci_dev* %0) #9, !dbg !5155
  store i32 %call, i32* %rc, align 4, !dbg !5156
  %1 = load i32, i32* %rc, align 4, !dbg !5157
  %tobool = icmp ne i32 %1, 0, !dbg !5157
  br i1 %tobool, label %if.then, label %if.end, !dbg !5159

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %rc, align 4, !dbg !5160
  store i32 %2, i32* %retval, align 4, !dbg !5161
  br label %return, !dbg !5161

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5162
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !5163
  %call1 = call i32 @dma_set_mask_and_coherent(%struct.device* %dev, i64 -1) #9, !dbg !5164
  store i32 %call1, i32* %rc, align 4, !dbg !5165
  %4 = load i32, i32* %rc, align 4, !dbg !5166
  %tobool2 = icmp ne i32 %4, 0, !dbg !5166
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5168

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %rc, align 4, !dbg !5169
  store i32 %5, i32* %retval, align 4, !dbg !5170
  br label %return, !dbg !5170

if.end4:                                          ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5171
  call void @pci_set_master(%struct.pci_dev* %6) #9, !dbg !5172
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5173
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 44, !dbg !5173
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !5173
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !5173
  %8 = load i64, i64* %start, align 8, !dbg !5173
  store i64 %8, i64* %res_start, align 8, !dbg !5174
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5175
  %resource5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 44, !dbg !5175
  %arrayidx6 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource5, i64 0, i64 0, !dbg !5175
  %start7 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx6, i32 0, i32 0, !dbg !5175
  %10 = load i64, i64* %start7, align 8, !dbg !5175
  %cmp = icmp eq i64 %10, 0, !dbg !5175
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !5175

land.lhs.true:                                    ; preds = %if.end4
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5175
  %resource8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 44, !dbg !5175
  %arrayidx9 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource8, i64 0, i64 0, !dbg !5175
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx9, i32 0, i32 1, !dbg !5175
  %12 = load i64, i64* %end, align 8, !dbg !5175
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5175
  %resource10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 44, !dbg !5175
  %arrayidx11 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource10, i64 0, i64 0, !dbg !5175
  %start12 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx11, i32 0, i32 0, !dbg !5175
  %14 = load i64, i64* %start12, align 8, !dbg !5175
  %cmp13 = icmp eq i64 %12, %14, !dbg !5175
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !5175

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !5175

cond.false:                                       ; preds = %land.lhs.true, %if.end4
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5175
  %resource14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 44, !dbg !5175
  %arrayidx15 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource14, i64 0, i64 0, !dbg !5175
  %end16 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx15, i32 0, i32 1, !dbg !5175
  %16 = load i64, i64* %end16, align 8, !dbg !5175
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5175
  %resource17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 44, !dbg !5175
  %arrayidx18 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource17, i64 0, i64 0, !dbg !5175
  %start19 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx18, i32 0, i32 0, !dbg !5175
  %18 = load i64, i64* %start19, align 8, !dbg !5175
  %sub = sub i64 %16, %18, !dbg !5175
  %add = add i64 %sub, 1, !dbg !5175
  br label %cond.end, !dbg !5175

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !5175
  store i64 %cond, i64* %res_len, align 8, !dbg !5176
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5177
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !5177
  %20 = load i64, i64* %res_start, align 8, !dbg !5177
  %21 = load i64, i64* %res_len, align 8, !dbg !5177
  %call21 = call %struct.resource* @__devm_request_region(%struct.device* %dev20, %struct.resource* @iomem_resource, i64 %20, i64 %21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #9, !dbg !5177
  %tobool22 = icmp ne %struct.resource* %call21, null, !dbg !5177
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !5179

if.then23:                                        ; preds = %cond.end
  store i32 -16, i32* %retval, align 4, !dbg !5180
  br label %return, !dbg !5180

if.end24:                                         ; preds = %cond.end
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5181
  %dev25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 41, !dbg !5182
  %23 = load i64, i64* %res_start, align 8, !dbg !5183
  %call26 = call i8* @devm_ioremap_wc(%struct.device* %dev25, i64 %23, i64 4096) #9, !dbg !5184
  %24 = bitcast i8* %call26 to %struct.mrpc_regs*, !dbg !5184
  %25 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5185
  %mmio_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %25, i32 0, i32 9, !dbg !5186
  store %struct.mrpc_regs* %24, %struct.mrpc_regs** %mmio_mrpc, align 8, !dbg !5187
  %26 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5188
  %mmio_mrpc27 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %26, i32 0, i32 9, !dbg !5190
  %27 = load %struct.mrpc_regs*, %struct.mrpc_regs** %mmio_mrpc27, align 8, !dbg !5190
  %tobool28 = icmp ne %struct.mrpc_regs* %27, null, !dbg !5188
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !5191

if.then29:                                        ; preds = %if.end24
  store i32 -12, i32* %retval, align 4, !dbg !5192
  br label %return, !dbg !5192

if.end30:                                         ; preds = %if.end24
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5193
  %dev31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 41, !dbg !5194
  %29 = load i64, i64* %res_start, align 8, !dbg !5195
  %add32 = add i64 %29, 4096, !dbg !5196
  %30 = load i64, i64* %res_len, align 8, !dbg !5197
  %sub33 = sub i64 %30, 4096, !dbg !5198
  %call34 = call i8* @devm_ioremap(%struct.device* %dev31, i64 %add32, i64 %sub33) #9, !dbg !5199
  store i8* %call34, i8** %map, align 8, !dbg !5200
  %31 = load i8*, i8** %map, align 8, !dbg !5201
  %tobool35 = icmp ne i8* %31, null, !dbg !5201
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !5203

if.then36:                                        ; preds = %if.end30
  store i32 -12, i32* %retval, align 4, !dbg !5204
  br label %return, !dbg !5204

if.end37:                                         ; preds = %if.end30
  %32 = load i8*, i8** %map, align 8, !dbg !5205
  %add.ptr = getelementptr i8, i8* %32, i64 -4096, !dbg !5206
  %33 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5207
  %mmio = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %33, i32 0, i32 8, !dbg !5208
  store i8* %add.ptr, i8** %mmio, align 8, !dbg !5209
  %34 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5210
  %mmio38 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %34, i32 0, i32 8, !dbg !5211
  %35 = load i8*, i8** %mmio38, align 8, !dbg !5211
  %add.ptr39 = getelementptr i8, i8* %35, i64 6144, !dbg !5212
  %36 = bitcast i8* %add.ptr39 to %struct.sw_event_regs*, !dbg !5210
  %37 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5213
  %mmio_sw_event = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %37, i32 0, i32 10, !dbg !5214
  store %struct.sw_event_regs* %36, %struct.sw_event_regs** %mmio_sw_event, align 8, !dbg !5215
  %38 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5216
  %mmio40 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %38, i32 0, i32 8, !dbg !5217
  %39 = load i8*, i8** %mmio40, align 8, !dbg !5217
  %add.ptr41 = getelementptr i8, i8* %39, i64 8192, !dbg !5218
  %40 = bitcast i8* %add.ptr41 to %struct.sys_info_regs*, !dbg !5216
  %41 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5219
  %mmio_sys_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %41, i32 0, i32 11, !dbg !5220
  store %struct.sys_info_regs* %40, %struct.sys_info_regs** %mmio_sys_info, align 8, !dbg !5221
  %42 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5222
  %mmio42 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %42, i32 0, i32 8, !dbg !5223
  %43 = load i8*, i8** %mmio42, align 8, !dbg !5223
  %add.ptr43 = getelementptr i8, i8* %43, i64 8704, !dbg !5224
  %44 = bitcast i8* %add.ptr43 to %struct.flash_info_regs*, !dbg !5222
  %45 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5225
  %mmio_flash_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %45, i32 0, i32 12, !dbg !5226
  store %struct.flash_info_regs* %44, %struct.flash_info_regs** %mmio_flash_info, align 8, !dbg !5227
  %46 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5228
  %mmio44 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %46, i32 0, i32 8, !dbg !5229
  %47 = load i8*, i8** %mmio44, align 8, !dbg !5229
  %add.ptr45 = getelementptr i8, i8* %47, i64 65536, !dbg !5230
  %48 = bitcast i8* %add.ptr45 to %struct.ntb_info_regs*, !dbg !5228
  %49 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5231
  %mmio_ntb = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %49, i32 0, i32 13, !dbg !5232
  store %struct.ntb_info_regs* %48, %struct.ntb_info_regs** %mmio_ntb, align 8, !dbg !5233
  %50 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5234
  %gen = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %50, i32 0, i32 3, !dbg !5236
  %51 = load i32, i32* %gen, align 8, !dbg !5236
  %cmp46 = icmp eq i32 %51, 0, !dbg !5237
  br i1 %cmp46, label %if.then47, label %if.else, !dbg !5238

if.then47:                                        ; preds = %if.end37
  %52 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5239
  %mmio_sys_info48 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %52, i32 0, i32 11, !dbg !5240
  %53 = load %struct.sys_info_regs*, %struct.sys_info_regs** %mmio_sys_info48, align 8, !dbg !5240
  %54 = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %53, i32 0, i32 3, !dbg !5241
  %gen3 = bitcast %union.anon.67* %54 to %struct.sys_info_regs_gen3*, !dbg !5241
  %partition_id = getelementptr inbounds %struct.sys_info_regs_gen3, %struct.sys_info_regs_gen3* %gen3, i32 0, i32 3, !dbg !5242
  store i32* %partition_id, i32** %part_id, align 8, !dbg !5243
  br label %if.end56, !dbg !5244

if.else:                                          ; preds = %if.end37
  %55 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5245
  %gen49 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %55, i32 0, i32 3, !dbg !5247
  %56 = load i32, i32* %gen49, align 8, !dbg !5247
  %cmp50 = icmp eq i32 %56, 1, !dbg !5248
  br i1 %cmp50, label %if.then51, label %if.else54, !dbg !5249

if.then51:                                        ; preds = %if.else
  %57 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5250
  %mmio_sys_info52 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %57, i32 0, i32 11, !dbg !5251
  %58 = load %struct.sys_info_regs*, %struct.sys_info_regs** %mmio_sys_info52, align 8, !dbg !5251
  %59 = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %58, i32 0, i32 3, !dbg !5252
  %gen4 = bitcast %union.anon.67* %59 to %struct.sys_info_regs_gen4*, !dbg !5252
  %partition_id53 = getelementptr inbounds %struct.sys_info_regs_gen4, %struct.sys_info_regs_gen4* %gen4, i32 0, i32 14, !dbg !5253
  store i32* %partition_id53, i32** %part_id, align 8, !dbg !5254
  br label %if.end55, !dbg !5255

if.else54:                                        ; preds = %if.else
  store i32 -524, i32* %retval, align 4, !dbg !5256
  br label %return, !dbg !5256

if.end55:                                         ; preds = %if.then51
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then47
  %60 = load i32*, i32** %part_id, align 8, !dbg !5257
  %61 = bitcast i32* %60 to i8*, !dbg !5257
  %call57 = call i32 @ioread8(i8* %61) #9, !dbg !5258
  %62 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5259
  %partition = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %62, i32 0, i32 4, !dbg !5260
  store i32 %call57, i32* %partition, align 4, !dbg !5261
  %63 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5262
  %mmio_ntb58 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %63, i32 0, i32 13, !dbg !5263
  %64 = load %struct.ntb_info_regs*, %struct.ntb_info_regs** %mmio_ntb58, align 8, !dbg !5263
  %partition_count = getelementptr inbounds %struct.ntb_info_regs, %struct.ntb_info_regs* %64, i32 0, i32 0, !dbg !5264
  %call59 = call i32 @ioread8(i8* %partition_count) #9, !dbg !5265
  %65 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5266
  %partition_count60 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %65, i32 0, i32 5, !dbg !5267
  store i32 %call59, i32* %partition_count60, align 8, !dbg !5268
  %66 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5269
  %mmio61 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %66, i32 0, i32 8, !dbg !5270
  %67 = load i8*, i8** %mmio61, align 8, !dbg !5270
  %add.ptr62 = getelementptr i8, i8* %67, i64 16384, !dbg !5271
  %68 = bitcast i8* %add.ptr62 to %struct.part_cfg_regs*, !dbg !5269
  %69 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5272
  %mmio_part_cfg_all = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %69, i32 0, i32 15, !dbg !5273
  store %struct.part_cfg_regs* %68, %struct.part_cfg_regs** %mmio_part_cfg_all, align 8, !dbg !5274
  %70 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5275
  %mmio_part_cfg_all63 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %70, i32 0, i32 15, !dbg !5276
  %71 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %mmio_part_cfg_all63, align 8, !dbg !5276
  %72 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5277
  %partition64 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %72, i32 0, i32 4, !dbg !5278
  %73 = load i32, i32* %partition64, align 4, !dbg !5278
  %idxprom = sext i32 %73 to i64, !dbg !5275
  %arrayidx65 = getelementptr %struct.part_cfg_regs, %struct.part_cfg_regs* %71, i64 %idxprom, !dbg !5275
  %74 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5279
  %mmio_part_cfg = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %74, i32 0, i32 14, !dbg !5280
  store %struct.part_cfg_regs* %arrayidx65, %struct.part_cfg_regs** %mmio_part_cfg, align 8, !dbg !5281
  %75 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5282
  %mmio66 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %75, i32 0, i32 8, !dbg !5283
  %76 = load i8*, i8** %mmio66, align 8, !dbg !5283
  %add.ptr67 = getelementptr i8, i8* %76, i64 1261568, !dbg !5284
  %77 = bitcast i8* %add.ptr67 to %struct.pff_csr_regs*, !dbg !5282
  %78 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5285
  %mmio_pff_csr = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %78, i32 0, i32 16, !dbg !5286
  store %struct.pff_csr_regs* %77, %struct.pff_csr_regs** %mmio_pff_csr, align 8, !dbg !5287
  %79 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5288
  %partition_count68 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %79, i32 0, i32 5, !dbg !5290
  %80 = load i32, i32* %partition_count68, align 8, !dbg !5290
  %cmp69 = icmp slt i32 %80, 1, !dbg !5291
  br i1 %cmp69, label %if.then70, label %if.end72, !dbg !5292

if.then70:                                        ; preds = %if.end56
  %81 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5293
  %partition_count71 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %81, i32 0, i32 5, !dbg !5294
  store i32 1, i32* %partition_count71, align 8, !dbg !5295
  br label %if.end72, !dbg !5293

if.end72:                                         ; preds = %if.then70, %if.end56
  %82 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5296
  call void @init_pff(%struct.switchtec_dev* %82) #9, !dbg !5297
  %83 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5298
  %84 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5299
  %85 = bitcast %struct.switchtec_dev* %84 to i8*, !dbg !5299
  call void @pci_set_drvdata(%struct.pci_dev* %83, i8* %85) #9, !dbg !5300
  %86 = load i8, i8* @use_dma_mrpc, align 1, !dbg !5301
  %tobool73 = trunc i8 %86 to i1, !dbg !5301
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !5303

if.then74:                                        ; preds = %if.end72
  store i32 0, i32* %retval, align 4, !dbg !5304
  br label %return, !dbg !5304

if.end75:                                         ; preds = %if.end72
  %87 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5305
  %mmio_mrpc76 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %87, i32 0, i32 9, !dbg !5307
  %88 = load %struct.mrpc_regs*, %struct.mrpc_regs** %mmio_mrpc76, align 8, !dbg !5307
  %dma_ver = getelementptr inbounds %struct.mrpc_regs, %struct.mrpc_regs* %88, i32 0, i32 8, !dbg !5308
  %89 = bitcast i32* %dma_ver to i8*, !dbg !5309
  %call77 = call i32 @ioread32(i8* %89) #9, !dbg !5310
  %cmp78 = icmp eq i32 %call77, 0, !dbg !5311
  br i1 %cmp78, label %if.then79, label %if.end80, !dbg !5312

if.then79:                                        ; preds = %if.end75
  store i32 0, i32* %retval, align 4, !dbg !5313
  br label %return, !dbg !5313

if.end80:                                         ; preds = %if.end75
  %90 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5314
  %pdev81 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %90, i32 0, i32 0, !dbg !5315
  %91 = load %struct.pci_dev*, %struct.pci_dev** %pdev81, align 8, !dbg !5315
  %dev82 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %91, i32 0, i32 41, !dbg !5316
  %92 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5317
  %dma_mrpc_dma_addr = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %92, i32 0, i32 30, !dbg !5318
  %call83 = call i8* @dma_alloc_coherent(%struct.device* %dev82, i64 1040, i64* %dma_mrpc_dma_addr, i32 3264) #9, !dbg !5319
  %93 = bitcast i8* %call83 to %struct.dma_mrpc_output*, !dbg !5319
  %94 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5320
  %dma_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %94, i32 0, i32 29, !dbg !5321
  store %struct.dma_mrpc_output* %93, %struct.dma_mrpc_output** %dma_mrpc, align 8, !dbg !5322
  %95 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5323
  %dma_mrpc84 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %95, i32 0, i32 29, !dbg !5325
  %96 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc84, align 8, !dbg !5325
  %cmp85 = icmp eq %struct.dma_mrpc_output* %96, null, !dbg !5326
  br i1 %cmp85, label %if.then86, label %if.end87, !dbg !5327

if.then86:                                        ; preds = %if.end80
  store i32 -12, i32* %retval, align 4, !dbg !5328
  br label %return, !dbg !5328

if.end87:                                         ; preds = %if.end80
  store i32 0, i32* %retval, align 4, !dbg !5329
  br label %return, !dbg !5329

return:                                           ; preds = %if.end87, %if.then86, %if.then79, %if.then74, %if.else54, %if.then36, %if.then29, %if.then23, %if.then3, %if.then
  %97 = load i32, i32* %retval, align 4, !dbg !5330
  ret i32 %97, !dbg !5330
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @switchtec_init_isr(%struct.switchtec_dev* %stdev) #4 !dbg !5331 {
entry:
  %retval = alloca i32, align 4
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %nvecs = alloca i32, align 4
  %event_irq = alloca i32, align 4
  %dma_mrpc_irq = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !5334, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.declare(metadata i32* %nvecs, metadata !5336, metadata !DIExpression()), !dbg !5337
  call void @llvm.dbg.declare(metadata i32* %event_irq, metadata !5338, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.declare(metadata i32* %dma_mrpc_irq, metadata !5340, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !5342, metadata !DIExpression()), !dbg !5343
  %0 = load i32, i32* @nirqs, align 4, !dbg !5344
  %cmp = icmp slt i32 %0, 4, !dbg !5346
  br i1 %cmp, label %if.then, label %if.end, !dbg !5347

if.then:                                          ; preds = %entry
  store i32 4, i32* @nirqs, align 4, !dbg !5348
  br label %if.end, !dbg !5349

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5350
  %pdev = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 0, !dbg !5351
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !5351
  %3 = load i32, i32* @nirqs, align 4, !dbg !5352
  %call = call i32 @pci_alloc_irq_vectors(%struct.pci_dev* %2, i32 1, i32 %3, i32 22) #9, !dbg !5353
  store i32 %call, i32* %nvecs, align 4, !dbg !5354
  %4 = load i32, i32* %nvecs, align 4, !dbg !5355
  %cmp1 = icmp slt i32 %4, 0, !dbg !5357
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5358

if.then2:                                         ; preds = %if.end
  %5 = load i32, i32* %nvecs, align 4, !dbg !5359
  store i32 %5, i32* %retval, align 4, !dbg !5360
  br label %return, !dbg !5360

if.end3:                                          ; preds = %if.end
  %6 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5361
  %mmio_part_cfg = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %6, i32 0, i32 14, !dbg !5362
  %7 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %mmio_part_cfg, align 8, !dbg !5362
  %vep_vector_number = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %7, i32 0, i32 8, !dbg !5363
  %8 = bitcast i16* %vep_vector_number to i8*, !dbg !5364
  %call4 = call i32 @ioread16(i8* %8) #9, !dbg !5365
  store i32 %call4, i32* %event_irq, align 4, !dbg !5366
  %9 = load i32, i32* %event_irq, align 4, !dbg !5367
  %cmp5 = icmp slt i32 %9, 0, !dbg !5369
  br i1 %cmp5, label %if.then7, label %lor.lhs.false, !dbg !5370

lor.lhs.false:                                    ; preds = %if.end3
  %10 = load i32, i32* %event_irq, align 4, !dbg !5371
  %11 = load i32, i32* %nvecs, align 4, !dbg !5372
  %cmp6 = icmp sge i32 %10, %11, !dbg !5373
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !5374

if.then7:                                         ; preds = %lor.lhs.false, %if.end3
  store i32 -14, i32* %retval, align 4, !dbg !5375
  br label %return, !dbg !5375

if.end8:                                          ; preds = %lor.lhs.false
  %12 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5376
  %pdev9 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %12, i32 0, i32 0, !dbg !5377
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev9, align 8, !dbg !5377
  %14 = load i32, i32* %event_irq, align 4, !dbg !5378
  %call10 = call i32 @pci_irq_vector(%struct.pci_dev* %13, i32 %14) #9, !dbg !5379
  store i32 %call10, i32* %event_irq, align 4, !dbg !5380
  %15 = load i32, i32* %event_irq, align 4, !dbg !5381
  %cmp11 = icmp slt i32 %15, 0, !dbg !5383
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !5384

if.then12:                                        ; preds = %if.end8
  %16 = load i32, i32* %event_irq, align 4, !dbg !5385
  store i32 %16, i32* %retval, align 4, !dbg !5386
  br label %return, !dbg !5386

if.end13:                                         ; preds = %if.end8
  %17 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5387
  %pdev14 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %17, i32 0, i32 0, !dbg !5388
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev14, align 8, !dbg !5388
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !5389
  %19 = load i32, i32* %event_irq, align 4, !dbg !5390
  %20 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5391
  %21 = bitcast %struct.switchtec_dev* %20 to i8*, !dbg !5391
  %call15 = call i32 @devm_request_irq(%struct.device* %dev, i32 %19, i32 (i32, i8*)* @switchtec_event_isr, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* %21) #9, !dbg !5392
  store i32 %call15, i32* %rc, align 4, !dbg !5393
  %22 = load i32, i32* %rc, align 4, !dbg !5394
  %tobool = icmp ne i32 %22, 0, !dbg !5394
  br i1 %tobool, label %if.then16, label %if.end17, !dbg !5396

if.then16:                                        ; preds = %if.end13
  %23 = load i32, i32* %rc, align 4, !dbg !5397
  store i32 %23, i32* %retval, align 4, !dbg !5398
  br label %return, !dbg !5398

if.end17:                                         ; preds = %if.end13
  %24 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5399
  %dma_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %24, i32 0, i32 29, !dbg !5401
  %25 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc, align 8, !dbg !5401
  %tobool18 = icmp ne %struct.dma_mrpc_output* %25, null, !dbg !5399
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !5402

if.then19:                                        ; preds = %if.end17
  %26 = load i32, i32* %rc, align 4, !dbg !5403
  store i32 %26, i32* %retval, align 4, !dbg !5404
  br label %return, !dbg !5404

if.end20:                                         ; preds = %if.end17
  %27 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5405
  %mmio_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %27, i32 0, i32 9, !dbg !5406
  %28 = load %struct.mrpc_regs*, %struct.mrpc_regs** %mmio_mrpc, align 8, !dbg !5406
  %dma_vector = getelementptr inbounds %struct.mrpc_regs, %struct.mrpc_regs* %28, i32 0, i32 7, !dbg !5407
  %29 = bitcast i32* %dma_vector to i8*, !dbg !5408
  %call21 = call i32 @ioread32(i8* %29) #9, !dbg !5409
  store i32 %call21, i32* %dma_mrpc_irq, align 4, !dbg !5410
  %30 = load i32, i32* %dma_mrpc_irq, align 4, !dbg !5411
  %cmp22 = icmp slt i32 %30, 0, !dbg !5413
  br i1 %cmp22, label %if.then25, label %lor.lhs.false23, !dbg !5414

lor.lhs.false23:                                  ; preds = %if.end20
  %31 = load i32, i32* %dma_mrpc_irq, align 4, !dbg !5415
  %32 = load i32, i32* %nvecs, align 4, !dbg !5416
  %cmp24 = icmp sge i32 %31, %32, !dbg !5417
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !5418

if.then25:                                        ; preds = %lor.lhs.false23, %if.end20
  store i32 -14, i32* %retval, align 4, !dbg !5419
  br label %return, !dbg !5419

if.end26:                                         ; preds = %lor.lhs.false23
  %33 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5420
  %pdev27 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %33, i32 0, i32 0, !dbg !5421
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pdev27, align 8, !dbg !5421
  %35 = load i32, i32* %dma_mrpc_irq, align 4, !dbg !5422
  %call28 = call i32 @pci_irq_vector(%struct.pci_dev* %34, i32 %35) #9, !dbg !5423
  store i32 %call28, i32* %dma_mrpc_irq, align 4, !dbg !5424
  %36 = load i32, i32* %dma_mrpc_irq, align 4, !dbg !5425
  %cmp29 = icmp slt i32 %36, 0, !dbg !5427
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !5428

if.then30:                                        ; preds = %if.end26
  %37 = load i32, i32* %dma_mrpc_irq, align 4, !dbg !5429
  store i32 %37, i32* %retval, align 4, !dbg !5430
  br label %return, !dbg !5430

if.end31:                                         ; preds = %if.end26
  %38 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5431
  %pdev32 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %38, i32 0, i32 0, !dbg !5432
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev32, align 8, !dbg !5432
  %dev33 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 41, !dbg !5433
  %40 = load i32, i32* %dma_mrpc_irq, align 4, !dbg !5434
  %41 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5435
  %42 = bitcast %struct.switchtec_dev* %41 to i8*, !dbg !5435
  %call34 = call i32 @devm_request_irq(%struct.device* %dev33, i32 %40, i32 (i32, i8*)* @switchtec_dma_mrpc_isr, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* %42) #9, !dbg !5436
  store i32 %call34, i32* %rc, align 4, !dbg !5437
  %43 = load i32, i32* %rc, align 4, !dbg !5438
  store i32 %43, i32* %retval, align 4, !dbg !5439
  br label %return, !dbg !5439

return:                                           ; preds = %if.end31, %if.then30, %if.then25, %if.then19, %if.then16, %if.then12, %if.then7, %if.then2
  %44 = load i32, i32* %retval, align 4, !dbg !5440
  ret i32 %44, !dbg !5440
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @iowrite32(i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_link_state_events(%struct.switchtec_dev* %stdev) #4 !dbg !5441 {
entry:
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %idx = alloca i32, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !5442, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5444, metadata !DIExpression()), !dbg !5445
  store i32 0, i32* %idx, align 4, !dbg !5446
  br label %for.cond, !dbg !5448

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %idx, align 4, !dbg !5449
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5451
  %pff_csr_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 6, !dbg !5452
  %2 = load i32, i32* %pff_csr_count, align 4, !dbg !5452
  %cmp = icmp slt i32 %0, %2, !dbg !5453
  br i1 %cmp, label %for.body, label %for.end, !dbg !5454

for.body:                                         ; preds = %for.cond
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5455
  %mmio_pff_csr = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 16, !dbg !5457
  %4 = load %struct.pff_csr_regs*, %struct.pff_csr_regs** %mmio_pff_csr, align 8, !dbg !5457
  %5 = load i32, i32* %idx, align 4, !dbg !5458
  %idxprom = sext i32 %5 to i64, !dbg !5455
  %arrayidx = getelementptr %struct.pff_csr_regs, %struct.pff_csr_regs* %4, i64 %idxprom, !dbg !5455
  %link_state_hdr = getelementptr inbounds %struct.pff_csr_regs, %struct.pff_csr_regs* %arrayidx, i32 0, i32 44, !dbg !5459
  %6 = bitcast i32* %link_state_hdr to i8*, !dbg !5460
  call void @iowrite32(i32 9, i8* %6) #9, !dbg !5461
  br label %for.inc, !dbg !5462

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %idx, align 4, !dbg !5463
  %inc = add i32 %7, 1, !dbg !5463
  store i32 %inc, i32* %idx, align 4, !dbg !5463
  br label %for.cond, !dbg !5464, !llvm.loop !5465

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_dma_mrpc(%struct.switchtec_dev* %stdev) #4 !dbg !5468 {
entry:
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !5469, metadata !DIExpression()), !dbg !5470
  %0 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5471
  %dma_mrpc_dma_addr = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %0, i32 0, i32 30, !dbg !5472
  %1 = load i64, i64* %dma_mrpc_dma_addr, align 8, !dbg !5472
  %2 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5473
  %mmio_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %2, i32 0, i32 9, !dbg !5474
  %3 = load %struct.mrpc_regs*, %struct.mrpc_regs** %mmio_mrpc, align 8, !dbg !5474
  %dma_addr = getelementptr inbounds %struct.mrpc_regs, %struct.mrpc_regs* %3, i32 0, i32 6, !dbg !5475
  %4 = bitcast i64* %dma_addr to i8*, !dbg !5476
  call void @writeq(i64 %1, i8* %4) #9, !dbg !5477
  %5 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5478
  call void @flush_wc_buf(%struct.switchtec_dev* %5) #9, !dbg !5479
  %6 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5480
  %mmio_mrpc1 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %6, i32 0, i32 9, !dbg !5481
  %7 = load %struct.mrpc_regs*, %struct.mrpc_regs** %mmio_mrpc1, align 8, !dbg !5481
  %dma_en = getelementptr inbounds %struct.mrpc_regs, %struct.mrpc_regs* %7, i32 0, i32 5, !dbg !5482
  %8 = bitcast i32* %dma_en to i8*, !dbg !5483
  call void @iowrite32(i32 1, i8* %8) #9, !dbg !5484
  ret void, !dbg !5485
}

; Function Attrs: noredzone
declare dso_local i32 @cdev_device_add(%struct.cdev*, %struct.device*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stdev_kill(%struct.switchtec_dev* %stdev) #4 !dbg !5486 {
entry:
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %stuser = alloca %struct.switchtec_user*, align 8
  %tmpuser = alloca %struct.switchtec_user*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchtec_user*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.switchtec_user*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.switchtec_user*, align 8
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !5487, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser, metadata !5489, metadata !DIExpression()), !dbg !5490
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %tmpuser, metadata !5491, metadata !DIExpression()), !dbg !5492
  %0 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5493
  %pdev = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %0, i32 0, i32 0, !dbg !5494
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !5494
  call void @pci_clear_master(%struct.pci_dev* %1) #9, !dbg !5495
  %2 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5496
  %mrpc_timeout = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %2, i32 0, i32 21, !dbg !5497
  %call = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %mrpc_timeout) #9, !dbg !5498
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5499
  %mrpc_mutex = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 17, !dbg !5500
  call void @mutex_lock(%struct.mutex* %mrpc_mutex) #9, !dbg !5501
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5502
  %alive = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %4, i32 0, i32 22, !dbg !5503
  store i8 0, i8* %alive, align 8, !dbg !5504
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5505, metadata !DIExpression()), !dbg !5508
  %5 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5508
  %mrpc_queue = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %5, i32 0, i32 18, !dbg !5508
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %mrpc_queue, i32 0, i32 0, !dbg !5508
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5508
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !5508
  store i8* %7, i8** %__mptr, align 8, !dbg !5508
  br label %do.body, !dbg !5508

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5509

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !5508
  %add.ptr = getelementptr i8, i8* %8, i64 -40, !dbg !5508
  %9 = bitcast i8* %add.ptr to %struct.switchtec_user*, !dbg !5508
  store %struct.switchtec_user* %9, %struct.switchtec_user** %tmp, align 8, !dbg !5509
  %10 = load %struct.switchtec_user*, %struct.switchtec_user** %tmp, align 8, !dbg !5508
  store %struct.switchtec_user* %10, %struct.switchtec_user** %stuser, align 8, !dbg !5511
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !5512, metadata !DIExpression()), !dbg !5514
  %11 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !5514
  %list = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %11, i32 0, i32 4, !dbg !5514
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !5514
  %12 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !5514
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !5514
  store i8* %13, i8** %__mptr1, align 8, !dbg !5514
  br label %do.body3, !dbg !5514

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !5515

do.end4:                                          ; preds = %do.body3
  %14 = load i8*, i8** %__mptr1, align 8, !dbg !5514
  %add.ptr6 = getelementptr i8, i8* %14, i64 -40, !dbg !5514
  %15 = bitcast i8* %add.ptr6 to %struct.switchtec_user*, !dbg !5514
  store %struct.switchtec_user* %15, %struct.switchtec_user** %tmp5, align 8, !dbg !5515
  %16 = load %struct.switchtec_user*, %struct.switchtec_user** %tmp5, align 8, !dbg !5514
  store %struct.switchtec_user* %16, %struct.switchtec_user** %tmpuser, align 8, !dbg !5511
  br label %for.cond, !dbg !5511

for.cond:                                         ; preds = %do.end14, %do.end4
  %17 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !5517
  %list7 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %17, i32 0, i32 4, !dbg !5517
  %18 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5517
  %mrpc_queue8 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %18, i32 0, i32 18, !dbg !5517
  %cmp = icmp eq %struct.list_head* %list7, %mrpc_queue8, !dbg !5517
  %lnot = xor i1 %cmp, true, !dbg !5517
  br i1 %lnot, label %for.body, label %for.end, !dbg !5511

for.body:                                         ; preds = %for.cond
  %19 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !5519
  %cmd_done = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %19, i32 0, i32 5, !dbg !5521
  store i8 1, i8* %cmd_done, align 8, !dbg !5522
  %20 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !5523
  %cmd_comp = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %20, i32 0, i32 2, !dbg !5523
  call void @__wake_up(%struct.wait_queue_head* %cmd_comp, i32 1, i32 1, i8* null) #9, !dbg !5523
  %21 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !5524
  %list9 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %21, i32 0, i32 4, !dbg !5525
  call void @list_del_init(%struct.list_head* %list9) #9, !dbg !5526
  %22 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !5527
  call void @stuser_put(%struct.switchtec_user* %22) #9, !dbg !5528
  br label %for.inc, !dbg !5529

for.inc:                                          ; preds = %for.body
  %23 = load %struct.switchtec_user*, %struct.switchtec_user** %tmpuser, align 8, !dbg !5517
  store %struct.switchtec_user* %23, %struct.switchtec_user** %stuser, align 8, !dbg !5517
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !5530, metadata !DIExpression()), !dbg !5532
  %24 = load %struct.switchtec_user*, %struct.switchtec_user** %tmpuser, align 8, !dbg !5532
  %list11 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %24, i32 0, i32 4, !dbg !5532
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %list11, i32 0, i32 0, !dbg !5532
  %25 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !5532
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !5532
  store i8* %26, i8** %__mptr10, align 8, !dbg !5532
  br label %do.body13, !dbg !5532

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !5533

do.end14:                                         ; preds = %do.body13
  %27 = load i8*, i8** %__mptr10, align 8, !dbg !5532
  %add.ptr16 = getelementptr i8, i8* %27, i64 -40, !dbg !5532
  %28 = bitcast i8* %add.ptr16 to %struct.switchtec_user*, !dbg !5532
  store %struct.switchtec_user* %28, %struct.switchtec_user** %tmp15, align 8, !dbg !5533
  %29 = load %struct.switchtec_user*, %struct.switchtec_user** %tmp15, align 8, !dbg !5532
  store %struct.switchtec_user* %29, %struct.switchtec_user** %tmpuser, align 8, !dbg !5517
  br label %for.cond, !dbg !5517, !llvm.loop !5535

for.end:                                          ; preds = %for.cond
  %30 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5537
  %mrpc_mutex17 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %30, i32 0, i32 17, !dbg !5538
  call void @mutex_unlock(%struct.mutex* %mrpc_mutex17) #9, !dbg !5539
  %31 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !5540
  %event_wq = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %31, i32 0, i32 23, !dbg !5540
  call void @__wake_up(%struct.wait_queue_head* %event_wq, i32 1, i32 1, i8* null) #9, !dbg !5540
  ret void, !dbg !5541
}

; Function Attrs: noredzone
declare dso_local void @ida_free(%struct.ida*, i32) #1

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc_node(i64 %size, i32 %flags, i32 %node) #4 !dbg !5542 {
entry:
  %size.addr.i13.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i13.i, metadata !5545, metadata !DIExpression()), !dbg !5547
  %flags.addr.i14.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i14.i, metadata !5551, metadata !DIExpression()), !dbg !5552
  %node.addr.i15.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i15.i, metadata !5553, metadata !DIExpression()), !dbg !5554
  %s.addr.i.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i.i, metadata !5555, metadata !DIExpression()), !dbg !5559
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5567, metadata !DIExpression()), !dbg !5568
  %node.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i.i.i, metadata !5569, metadata !DIExpression()), !dbg !5570
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5571, metadata !DIExpression()), !dbg !5572
  %gfpflags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %gfpflags.addr.i.i, metadata !5573, metadata !DIExpression()), !dbg !5574
  %node.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i.i, metadata !5575, metadata !DIExpression()), !dbg !5576
  %size.addr.i12.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i12.i, metadata !5577, metadata !DIExpression()), !dbg !5578
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5579, metadata !DIExpression()), !dbg !5580
  %retval.i8.i = alloca i32, align 4
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5581, metadata !DIExpression()), !dbg !5585
  %retval.i.i = alloca i32, align 4
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5587, metadata !DIExpression()), !dbg !5591
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5593, metadata !DIExpression()), !dbg !5594
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5595, metadata !DIExpression()), !dbg !5596
  %node.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr.i, metadata !5597, metadata !DIExpression()), !dbg !5598
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !5599, metadata !DIExpression()), !dbg !5600
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %node.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5601, metadata !DIExpression()), !dbg !5602
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5603, metadata !DIExpression()), !dbg !5604
  store i32 %node, i32* %node.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %node.addr, metadata !5605, metadata !DIExpression()), !dbg !5606
  %0 = load i64, i64* %size.addr, align 8, !dbg !5607
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5608
  %or = or i32 %1, 256, !dbg !5609
  %2 = load i32, i32* %node.addr, align 4, !dbg !5610
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  store i32 %2, i32* %node.addr.i, align 4
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !5611
  %4 = call i1 @llvm.is.constant.i64(i64 %3) #12, !dbg !5612
  br i1 %4, label %land.lhs.true.i, label %if.end6.i, !dbg !5613

land.lhs.true.i:                                  ; preds = %entry
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5614
  %cmp.i = icmp ule i64 %5, 8192, !dbg !5615
  br i1 %cmp.i, label %if.then.i, label %if.end6.i, !dbg !5616

if.then.i:                                        ; preds = %land.lhs.true.i
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !5617
  store i64 %6, i64* %size.addr.i.i, align 8
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5618
  %tobool.i.i = icmp ne i64 %7, 0, !dbg !5618
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5620

if.then.i.i:                                      ; preds = %if.then.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5621
  br label %kmalloc_index.exit.i, !dbg !5621

if.end.i.i:                                       ; preds = %if.then.i
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5622
  %cmp.i.i = icmp ule i64 %8, 8, !dbg !5624
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5625

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5626
  br label %kmalloc_index.exit.i, !dbg !5626

if.end2.i.i:                                      ; preds = %if.end.i.i
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !5627
  %cmp3.i.i = icmp ugt i64 %9, 64, !dbg !5629
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5630

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !5631
  %cmp4.i.i = icmp ule i64 %10, 96, !dbg !5632
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5633

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5634
  br label %kmalloc_index.exit.i, !dbg !5634

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !5635
  %cmp7.i.i = icmp ugt i64 %11, 128, !dbg !5637
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5638

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !5639
  %cmp9.i.i = icmp ule i64 %12, 192, !dbg !5640
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5641

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5642
  br label %kmalloc_index.exit.i, !dbg !5642

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %13 = load i64, i64* %size.addr.i.i, align 8, !dbg !5643
  %cmp12.i.i = icmp ule i64 %13, 8, !dbg !5645
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5646

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5647
  br label %kmalloc_index.exit.i, !dbg !5647

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %14 = load i64, i64* %size.addr.i.i, align 8, !dbg !5648
  %cmp15.i.i = icmp ule i64 %14, 16, !dbg !5650
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5651

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5652
  br label %kmalloc_index.exit.i, !dbg !5652

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !5653
  %cmp18.i.i = icmp ule i64 %15, 32, !dbg !5655
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5656

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5657
  br label %kmalloc_index.exit.i, !dbg !5657

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %16 = load i64, i64* %size.addr.i.i, align 8, !dbg !5658
  %cmp21.i.i = icmp ule i64 %16, 64, !dbg !5660
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5661

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5662
  br label %kmalloc_index.exit.i, !dbg !5662

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %17 = load i64, i64* %size.addr.i.i, align 8, !dbg !5663
  %cmp24.i.i = icmp ule i64 %17, 128, !dbg !5665
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5666

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5667
  br label %kmalloc_index.exit.i, !dbg !5667

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %18 = load i64, i64* %size.addr.i.i, align 8, !dbg !5668
  %cmp27.i.i = icmp ule i64 %18, 256, !dbg !5670
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5671

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5672
  br label %kmalloc_index.exit.i, !dbg !5672

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %19 = load i64, i64* %size.addr.i.i, align 8, !dbg !5673
  %cmp30.i.i = icmp ule i64 %19, 512, !dbg !5675
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5676

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5677
  br label %kmalloc_index.exit.i, !dbg !5677

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %20 = load i64, i64* %size.addr.i.i, align 8, !dbg !5678
  %cmp33.i.i = icmp ule i64 %20, 1024, !dbg !5680
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5681

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5682
  br label %kmalloc_index.exit.i, !dbg !5682

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !5683
  %cmp36.i.i = icmp ule i64 %21, 2048, !dbg !5685
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5686

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5687
  br label %kmalloc_index.exit.i, !dbg !5687

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !5688
  %cmp39.i.i = icmp ule i64 %22, 4096, !dbg !5690
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5691

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5692
  br label %kmalloc_index.exit.i, !dbg !5692

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %23 = load i64, i64* %size.addr.i.i, align 8, !dbg !5693
  %cmp42.i.i = icmp ule i64 %23, 8192, !dbg !5695
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5696

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5697
  br label %kmalloc_index.exit.i, !dbg !5697

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %24 = load i64, i64* %size.addr.i.i, align 8, !dbg !5698
  %cmp45.i.i = icmp ule i64 %24, 16384, !dbg !5700
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5701

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5702
  br label %kmalloc_index.exit.i, !dbg !5702

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %25 = load i64, i64* %size.addr.i.i, align 8, !dbg !5703
  %cmp48.i.i = icmp ule i64 %25, 32768, !dbg !5705
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5706

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5707
  br label %kmalloc_index.exit.i, !dbg !5707

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %26 = load i64, i64* %size.addr.i.i, align 8, !dbg !5708
  %cmp51.i.i = icmp ule i64 %26, 65536, !dbg !5710
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5711

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5712
  br label %kmalloc_index.exit.i, !dbg !5712

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %27 = load i64, i64* %size.addr.i.i, align 8, !dbg !5713
  %cmp54.i.i = icmp ule i64 %27, 131072, !dbg !5715
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5716

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5717
  br label %kmalloc_index.exit.i, !dbg !5717

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %28 = load i64, i64* %size.addr.i.i, align 8, !dbg !5718
  %cmp57.i.i = icmp ule i64 %28, 262144, !dbg !5720
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5721

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5722
  br label %kmalloc_index.exit.i, !dbg !5722

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %29 = load i64, i64* %size.addr.i.i, align 8, !dbg !5723
  %cmp60.i.i = icmp ule i64 %29, 524288, !dbg !5725
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5726

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5727
  br label %kmalloc_index.exit.i, !dbg !5727

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %30 = load i64, i64* %size.addr.i.i, align 8, !dbg !5728
  %cmp63.i.i = icmp ule i64 %30, 1048576, !dbg !5730
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5731

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5732
  br label %kmalloc_index.exit.i, !dbg !5732

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %31 = load i64, i64* %size.addr.i.i, align 8, !dbg !5733
  %cmp66.i.i = icmp ule i64 %31, 2097152, !dbg !5735
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5736

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5737
  br label %kmalloc_index.exit.i, !dbg !5737

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %32 = load i64, i64* %size.addr.i.i, align 8, !dbg !5738
  %cmp69.i.i = icmp ule i64 %32, 4194304, !dbg !5740
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5741

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5742
  br label %kmalloc_index.exit.i, !dbg !5742

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %33 = load i64, i64* %size.addr.i.i, align 8, !dbg !5743
  %cmp72.i.i = icmp ule i64 %33, 8388608, !dbg !5745
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5746

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5747
  br label %kmalloc_index.exit.i, !dbg !5747

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %34 = load i64, i64* %size.addr.i.i, align 8, !dbg !5748
  %cmp75.i.i = icmp ule i64 %34, 16777216, !dbg !5750
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5751

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5752
  br label %kmalloc_index.exit.i, !dbg !5752

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %35 = load i64, i64* %size.addr.i.i, align 8, !dbg !5753
  %cmp78.i.i = icmp ule i64 %35, 33554432, !dbg !5755
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5756

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5757
  br label %kmalloc_index.exit.i, !dbg !5757

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %36 = load i64, i64* %size.addr.i.i, align 8, !dbg !5758
  %cmp81.i.i = icmp ule i64 %36, 67108864, !dbg !5760
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5761

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5762
  br label %kmalloc_index.exit.i, !dbg !5762

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i32 382, i32 0, i64 12) #12, !dbg !5763, !srcloc !5766
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 156) #12, !dbg !5767, !srcloc !5770
  unreachable, !dbg !5771

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %37 = load i32, i32* %retval.i.i, align 4, !dbg !5772
  store i32 %37, i32* %i.i, align 4, !dbg !5600
  %38 = load i32, i32* %i.i, align 4, !dbg !5773
  %tobool.i = icmp ne i32 %38, 0, !dbg !5773
  br i1 %tobool.i, label %if.end.i, label %if.then1.i, !dbg !5775

if.then1.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5776
  br label %kmalloc_node.exit, !dbg !5776

if.end.i:                                         ; preds = %kmalloc_index.exit.i
  %39 = load i32, i32* %flags.addr.i, align 4, !dbg !5777
  store i32 %39, i32* %flags.addr.i.i, align 4
  %40 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5778
  %and.i.i = and i32 %40, 17, !dbg !5778
  %cmp.i9.i = icmp eq i32 %and.i.i, 0, !dbg !5778
  %lnot.i.i = xor i1 %cmp.i9.i, true, !dbg !5778
  %lnot.ext.i.i = zext i1 %cmp.i9.i to i32, !dbg !5778
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5778
  br i1 %cmp.i9.i, label %if.then.i10.i, label %if.end.i11.i, !dbg !5780

if.then.i10.i:                                    ; preds = %if.end.i
  store i32 0, i32* %retval.i8.i, align 4, !dbg !5781
  br label %kmalloc_type.exit.i, !dbg !5781

if.end.i11.i:                                     ; preds = %if.end.i
  %41 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5782
  %and2.i.i = and i32 %41, 1, !dbg !5783
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5782
  %42 = zext i1 %tobool3.i.i to i64, !dbg !5782
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5782
  store i32 %cond.i.i, i32* %retval.i8.i, align 4, !dbg !5784
  br label %kmalloc_type.exit.i, !dbg !5784

kmalloc_type.exit.i:                              ; preds = %if.end.i11.i, %if.then.i10.i
  %43 = load i32, i32* %retval.i8.i, align 4, !dbg !5785
  %idxprom.i = zext i32 %43 to i64, !dbg !5786
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5786
  %44 = load i32, i32* %i.i, align 4, !dbg !5787
  %idxprom3.i = zext i32 %44 to i64, !dbg !5786
  %arrayidx4.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom3.i, !dbg !5786
  %45 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx4.i, align 8, !dbg !5786
  %46 = load i32, i32* %flags.addr.i, align 4, !dbg !5788
  %47 = load i32, i32* %node.addr.i, align 4, !dbg !5789
  %48 = load i64, i64* %size.addr.i, align 8, !dbg !5790
  store %struct.kmem_cache* %45, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %46, i32* %gfpflags.addr.i.i, align 4
  store i32 %47, i32* %node.addr.i.i, align 4
  store i64 %48, i64* %size.addr.i12.i, align 8
  %49 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5791
  %50 = load i32, i32* %gfpflags.addr.i.i, align 4, !dbg !5792
  %51 = load i32, i32* %node.addr.i.i, align 4, !dbg !5793
  store %struct.kmem_cache* %49, %struct.kmem_cache** %s.addr.i.i.i, align 8
  store i32 %50, i32* %flags.addr.i.i.i, align 4
  store i32 %51, i32* %node.addr.i.i.i, align 4
  %52 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i.i, align 8, !dbg !5794
  %53 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5795
  %call.i.i.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %52, i32 %53) #11, !dbg !5796
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5796
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 7, !dbg !5796
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5796
  call void @llvm.assume(i1 %maskcond.i.i.i) #12, !dbg !5796
  store i8* %call.i.i.i, i8** %ret.i.i, align 8, !dbg !5580
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5797
  %55 = load i8*, i8** %ret.i.i, align 8, !dbg !5798
  %56 = load i64, i64* %size.addr.i12.i, align 8, !dbg !5799
  %57 = load i32, i32* %gfpflags.addr.i.i, align 4, !dbg !5800
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %54, i8* %55, i64 %56, i32 %57) #11, !dbg !5801
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5802
  %58 = load i8*, i8** %ret.i.i, align 8, !dbg !5803
  store i8* %58, i8** %retval.i, align 8, !dbg !5804
  br label %kmalloc_node.exit, !dbg !5804

if.end6.i:                                        ; preds = %land.lhs.true.i, %entry
  %59 = load i64, i64* %size.addr.i, align 8, !dbg !5805
  %60 = load i32, i32* %flags.addr.i, align 4, !dbg !5806
  %61 = load i32, i32* %node.addr.i, align 4, !dbg !5807
  store i64 %59, i64* %size.addr.i13.i, align 8
  store i32 %60, i32* %flags.addr.i14.i, align 4
  store i32 %61, i32* %node.addr.i15.i, align 4
  %62 = load i64, i64* %size.addr.i13.i, align 8, !dbg !5808
  %63 = load i32, i32* %flags.addr.i14.i, align 4, !dbg !5809
  %call.i.i = call noalias i8* @__kmalloc(i64 %62, i32 %63) #11, !dbg !5810
  %ptrint.i.i = ptrtoint i8* %call.i.i to i64, !dbg !5810
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5810
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5810
  call void @llvm.assume(i1 %maskcond.i.i) #12, !dbg !5810
  store i8* %call.i.i, i8** %retval.i, align 8, !dbg !5811
  br label %kmalloc_node.exit, !dbg !5811

kmalloc_node.exit:                                ; preds = %if.then1.i, %kmalloc_type.exit.i, %if.end6.i
  %64 = load i8*, i8** %retval.i, align 8, !dbg !5812
  ret i8* %64, !dbg !5813
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dev_to_node(%struct.device* %dev) #4 !dbg !5814 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5815, metadata !DIExpression()), !dbg !5816
  ret i32 -1, !dbg !5817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #4 !dbg !5818 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !5821, metadata !DIExpression()), !dbg !5822
  %0 = load i64, i64* %error.addr, align 8, !dbg !5823
  %1 = inttoptr i64 %0 to i8*, !dbg !5824
  ret i8* %1, !dbg !5825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #4 !dbg !5826 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !5830, metadata !DIExpression()), !dbg !5831
  br label %do.body, !dbg !5832

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5833

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !5835

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !5833

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5837
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5837
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !5837
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !5837
  br label %do.end3, !dbg !5837

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !5833

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5839
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5840
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !5841
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !5842
  ret void, !dbg !5843
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #4 !dbg !5844 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !5847, metadata !DIExpression()), !dbg !5848
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !5849, metadata !DIExpression()), !dbg !5850
  ret void, !dbg !5851
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mrpc_event_work(%struct.work_struct* %work) #4 !dbg !5852 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchtec_dev*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !5853, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !5855, metadata !DIExpression()), !dbg !5856
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5857, metadata !DIExpression()), !dbg !5859
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !5859
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !5859
  store i8* %1, i8** %__mptr, align 8, !dbg !5859
  br label %do.body, !dbg !5859

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5860

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5859
  %add.ptr = getelementptr i8, i8* %2, i64 -1200, !dbg !5859
  %3 = bitcast i8* %add.ptr to %struct.switchtec_dev*, !dbg !5859
  store %struct.switchtec_dev* %3, %struct.switchtec_dev** %tmp, align 8, !dbg !5860
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %tmp, align 8, !dbg !5859
  store %struct.switchtec_dev* %4, %struct.switchtec_dev** %stdev, align 8, !dbg !5862
  %5 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5863
  %mrpc_mutex = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %5, i32 0, i32 17, !dbg !5864
  call void @mutex_lock(%struct.mutex* %mrpc_mutex) #9, !dbg !5865
  %6 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5866
  %mrpc_timeout = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %6, i32 0, i32 21, !dbg !5867
  %call = call zeroext i1 @cancel_delayed_work(%struct.delayed_work* %mrpc_timeout) #9, !dbg !5868
  %7 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5869
  call void @mrpc_complete_cmd(%struct.switchtec_dev* %7) #9, !dbg !5870
  %8 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5871
  %mrpc_mutex1 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %8, i32 0, i32 17, !dbg !5872
  call void @mutex_unlock(%struct.mutex* %mrpc_mutex1) #9, !dbg !5873
  ret void, !dbg !5874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mrpc_timeout_work(%struct.work_struct* %work) #4 !dbg !5875 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !5876, metadata !DIExpression()), !dbg !5881
  %work.addr = alloca %struct.work_struct*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %status = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchtec_dev*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !5885, metadata !DIExpression()), !dbg !5886
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !5887, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5889, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5891, metadata !DIExpression()), !dbg !5893
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !5893
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !5893
  store i8* %1, i8** %__mptr, align 8, !dbg !5893
  br label %do.body, !dbg !5893

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5894

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5893
  %add.ptr = getelementptr i8, i8* %2, i64 -1232, !dbg !5893
  %3 = bitcast i8* %add.ptr to %struct.switchtec_dev*, !dbg !5893
  store %struct.switchtec_dev* %3, %struct.switchtec_dev** %tmp, align 8, !dbg !5894
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %tmp, align 8, !dbg !5893
  store %struct.switchtec_dev* %4, %struct.switchtec_dev** %stdev, align 8, !dbg !5896
  %5 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5897
  %mrpc_mutex = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %5, i32 0, i32 17, !dbg !5898
  call void @mutex_lock(%struct.mutex* %mrpc_mutex) #9, !dbg !5899
  %6 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5900
  %dma_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %6, i32 0, i32 29, !dbg !5902
  %7 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc, align 8, !dbg !5902
  %tobool = icmp ne %struct.dma_mrpc_output* %7, null, !dbg !5900
  br i1 %tobool, label %if.then, label %if.else, !dbg !5903

if.then:                                          ; preds = %do.end
  %8 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5904
  %dma_mrpc1 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %8, i32 0, i32 29, !dbg !5905
  %9 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc1, align 8, !dbg !5905
  %status2 = getelementptr inbounds %struct.dma_mrpc_output, %struct.dma_mrpc_output* %9, i32 0, i32 0, !dbg !5906
  %10 = load i32, i32* %status2, align 4, !dbg !5906
  store i32 %10, i32* %status, align 4, !dbg !5907
  br label %if.end, !dbg !5908

if.else:                                          ; preds = %do.end
  %11 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5909
  %mmio_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %11, i32 0, i32 9, !dbg !5910
  %12 = load %struct.mrpc_regs*, %struct.mrpc_regs** %mmio_mrpc, align 8, !dbg !5910
  %status3 = getelementptr inbounds %struct.mrpc_regs, %struct.mrpc_regs* %12, i32 0, i32 3, !dbg !5911
  %13 = bitcast i32* %status3 to i8*, !dbg !5912
  %call = call i32 @ioread32(i8* %13) #9, !dbg !5913
  store i32 %call, i32* %status, align 4, !dbg !5914
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i32, i32* %status, align 4, !dbg !5915
  %cmp = icmp eq i32 %14, 1, !dbg !5916
  br i1 %cmp, label %if.then4, label %if.end7, !dbg !5917

if.then4:                                         ; preds = %if.end
  %15 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5918
  %mrpc_timeout = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %15, i32 0, i32 21, !dbg !5919
  store i32 500, i32* %m.addr.i, align 4
  %16 = load i32, i32* %m.addr.i, align 4, !dbg !5920
  %17 = call i1 @llvm.is.constant.i32(i32 %16) #12, !dbg !5922
  br i1 %17, label %if.then.i, label %if.else.i, !dbg !5923

if.then.i:                                        ; preds = %if.then4
  %18 = load i32, i32* %m.addr.i, align 4, !dbg !5924
  %cmp.i = icmp slt i32 %18, 0, !dbg !5927
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5928

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !5929
  br label %msecs_to_jiffies.exit, !dbg !5929

if.end.i:                                         ; preds = %if.then.i
  %19 = load i32, i32* %m.addr.i, align 4, !dbg !5930
  %call.i = call i64 @_msecs_to_jiffies(i32 %19) #11, !dbg !5931
  store i64 %call.i, i64* %retval.i, align 8, !dbg !5932
  br label %msecs_to_jiffies.exit, !dbg !5932

if.else.i:                                        ; preds = %if.then4
  %20 = load i32, i32* %m.addr.i, align 4, !dbg !5933
  %call2.i = call i64 @__msecs_to_jiffies(i32 %20) #11, !dbg !5935
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !5936
  br label %msecs_to_jiffies.exit, !dbg !5936

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %21 = load i64, i64* %retval.i, align 8, !dbg !5937
  %call6 = call zeroext i1 @schedule_delayed_work(%struct.delayed_work* %mrpc_timeout, i64 %21) #9, !dbg !5938
  br label %out, !dbg !5939

if.end7:                                          ; preds = %if.end
  %22 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5940
  call void @mrpc_complete_cmd(%struct.switchtec_dev* %22) #9, !dbg !5941
  br label %out, !dbg !5941

out:                                              ; preds = %if.end7, %msecs_to_jiffies.exit
  call void @llvm.dbg.label(metadata !5942), !dbg !5943
  %23 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5944
  %mrpc_mutex8 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %23, i32 0, i32 17, !dbg !5945
  call void @mutex_unlock(%struct.mutex* %mrpc_mutex8) #9, !dbg !5946
  ret void, !dbg !5947
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #1

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @link_event_work(%struct.work_struct* %work) #4 !dbg !5948 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchtec_dev*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !5949, metadata !DIExpression()), !dbg !5950
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !5951, metadata !DIExpression()), !dbg !5952
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5953, metadata !DIExpression()), !dbg !5955
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !5955
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !5955
  store i8* %1, i8** %__mptr, align 8, !dbg !5955
  br label %do.body, !dbg !5955

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5956

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5955
  %add.ptr = getelementptr i8, i8* %2, i64 -1352, !dbg !5955
  %3 = bitcast i8* %add.ptr to %struct.switchtec_dev*, !dbg !5955
  store %struct.switchtec_dev* %3, %struct.switchtec_dev** %tmp, align 8, !dbg !5956
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %tmp, align 8, !dbg !5955
  store %struct.switchtec_dev* %4, %struct.switchtec_dev** %stdev, align 8, !dbg !5958
  %5 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5959
  %link_notifier = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %5, i32 0, i32 26, !dbg !5961
  %6 = load void (%struct.switchtec_dev*)*, void (%struct.switchtec_dev*)** %link_notifier, align 8, !dbg !5961
  %tobool = icmp ne void (%struct.switchtec_dev*)* %6, null, !dbg !5959
  br i1 %tobool, label %if.then, label %if.end, !dbg !5962

if.then:                                          ; preds = %do.end
  %7 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5963
  %link_notifier1 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %7, i32 0, i32 26, !dbg !5964
  %8 = load void (%struct.switchtec_dev*)*, void (%struct.switchtec_dev*)** %link_notifier1, align 8, !dbg !5964
  %9 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5965
  call void %8(%struct.switchtec_dev* %9) #9, !dbg !5963
  br label %if.end, !dbg !5963

if.end:                                           ; preds = %if.then, %do.end
  ret void, !dbg !5966
}

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noredzone
declare dso_local void @device_initialize(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stdev_release(%struct.device* %dev) #4 !dbg !5967 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5968, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !5970, metadata !DIExpression()), !dbg !5971
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5972
  %call = call %struct.switchtec_dev* @to_stdev(%struct.device* %0) #9, !dbg !5973
  store %struct.switchtec_dev* %call, %struct.switchtec_dev** %stdev, align 8, !dbg !5971
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5974
  %dma_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 29, !dbg !5976
  %2 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc, align 8, !dbg !5976
  %tobool = icmp ne %struct.dma_mrpc_output* %2, null, !dbg !5974
  br i1 %tobool, label %if.then, label %if.end, !dbg !5977

if.then:                                          ; preds = %entry
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5978
  %mmio_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 9, !dbg !5980
  %4 = load %struct.mrpc_regs*, %struct.mrpc_regs** %mmio_mrpc, align 8, !dbg !5980
  %dma_en = getelementptr inbounds %struct.mrpc_regs, %struct.mrpc_regs* %4, i32 0, i32 5, !dbg !5981
  %5 = bitcast i32* %dma_en to i8*, !dbg !5982
  call void @iowrite32(i32 0, i8* %5) #9, !dbg !5983
  %6 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5984
  call void @flush_wc_buf(%struct.switchtec_dev* %6) #9, !dbg !5985
  %7 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5986
  %mmio_mrpc1 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %7, i32 0, i32 9, !dbg !5987
  %8 = load %struct.mrpc_regs*, %struct.mrpc_regs** %mmio_mrpc1, align 8, !dbg !5987
  %dma_addr = getelementptr inbounds %struct.mrpc_regs, %struct.mrpc_regs* %8, i32 0, i32 6, !dbg !5988
  %9 = bitcast i64* %dma_addr to i8*, !dbg !5989
  call void @writeq(i64 0, i8* %9) #9, !dbg !5990
  %10 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5991
  %pdev = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %10, i32 0, i32 0, !dbg !5992
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !5992
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !5993
  %12 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5994
  %dma_mrpc3 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %12, i32 0, i32 29, !dbg !5995
  %13 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc3, align 8, !dbg !5995
  %14 = bitcast %struct.dma_mrpc_output* %13 to i8*, !dbg !5994
  %15 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !5996
  %dma_mrpc_dma_addr = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %15, i32 0, i32 30, !dbg !5997
  %16 = load i64, i64* %dma_mrpc_dma_addr, align 8, !dbg !5997
  call void @dma_free_coherent(%struct.device* %dev2, i64 1040, i8* %14, i64 %16) #9, !dbg !5998
  br label %if.end, !dbg !5999

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6000
  %18 = bitcast %struct.switchtec_dev* %17 to i8*, !dbg !6000
  call void @kfree(i8* %18) #9, !dbg !6001
  ret void, !dbg !6002
}

; Function Attrs: noredzone
declare dso_local i32 @ida_alloc_range(%struct.ida*, i32, i32, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local void @cdev_init(%struct.cdev*, %struct.file_operations*) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #4 !dbg !6003 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !6007, metadata !DIExpression()), !dbg !6008
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !6009, metadata !DIExpression()), !dbg !6010
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6011, metadata !DIExpression()), !dbg !6012
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6013, metadata !DIExpression()), !dbg !6014
  %0 = load i8*, i8** %object.addr, align 8, !dbg !6015
  ret i8* %0, !dbg !6016
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work(%struct.delayed_work*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mrpc_complete_cmd(%struct.switchtec_dev* %stdev) #4 !dbg !6017 {
entry:
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %stuser = alloca %struct.switchtec_user*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchtec_user*, align 8
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !6018, metadata !DIExpression()), !dbg !6019
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser, metadata !6020, metadata !DIExpression()), !dbg !6021
  %0 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6022
  %mrpc_queue = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %0, i32 0, i32 18, !dbg !6024
  %call = call i32 @list_empty(%struct.list_head* %mrpc_queue) #9, !dbg !6025
  %tobool = icmp ne i32 %call, 0, !dbg !6025
  br i1 %tobool, label %if.then, label %if.end, !dbg !6026

if.then:                                          ; preds = %entry
  br label %return, !dbg !6027

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6028, metadata !DIExpression()), !dbg !6030
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6030
  %mrpc_queue1 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 18, !dbg !6030
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %mrpc_queue1, i32 0, i32 0, !dbg !6030
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6030
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !6030
  store i8* %3, i8** %__mptr, align 8, !dbg !6030
  br label %do.body, !dbg !6030

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !6031

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !6030
  %add.ptr = getelementptr i8, i8* %4, i64 -40, !dbg !6030
  %5 = bitcast i8* %add.ptr to %struct.switchtec_user*, !dbg !6030
  store %struct.switchtec_user* %5, %struct.switchtec_user** %tmp, align 8, !dbg !6031
  %6 = load %struct.switchtec_user*, %struct.switchtec_user** %tmp, align 8, !dbg !6030
  store %struct.switchtec_user* %6, %struct.switchtec_user** %stuser, align 8, !dbg !6033
  %7 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6034
  %dma_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %7, i32 0, i32 29, !dbg !6036
  %8 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc, align 8, !dbg !6036
  %tobool2 = icmp ne %struct.dma_mrpc_output* %8, null, !dbg !6034
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !6037

if.then3:                                         ; preds = %do.end
  %9 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6038
  %dma_mrpc4 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %9, i32 0, i32 29, !dbg !6039
  %10 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc4, align 8, !dbg !6039
  %status = getelementptr inbounds %struct.dma_mrpc_output, %struct.dma_mrpc_output* %10, i32 0, i32 0, !dbg !6040
  %11 = load i32, i32* %status, align 4, !dbg !6040
  %12 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6041
  %status5 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %12, i32 0, i32 7, !dbg !6042
  store i32 %11, i32* %status5, align 8, !dbg !6043
  br label %if.end9, !dbg !6041

if.else:                                          ; preds = %do.end
  %13 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6044
  %mmio_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %13, i32 0, i32 9, !dbg !6045
  %14 = load %struct.mrpc_regs*, %struct.mrpc_regs** %mmio_mrpc, align 8, !dbg !6045
  %status6 = getelementptr inbounds %struct.mrpc_regs, %struct.mrpc_regs* %14, i32 0, i32 3, !dbg !6046
  %15 = bitcast i32* %status6 to i8*, !dbg !6047
  %call7 = call i32 @ioread32(i8* %15) #9, !dbg !6048
  %16 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6049
  %status8 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %16, i32 0, i32 7, !dbg !6050
  store i32 %call7, i32* %status8, align 8, !dbg !6051
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then3
  %17 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6052
  %status10 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %17, i32 0, i32 7, !dbg !6054
  %18 = load i32, i32* %status10, align 8, !dbg !6054
  %cmp = icmp eq i32 %18, 1, !dbg !6055
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !6056

if.then11:                                        ; preds = %if.end9
  br label %return, !dbg !6057

if.end12:                                         ; preds = %if.end9
  %19 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6058
  call void @stuser_set_state(%struct.switchtec_user* %19, i32 3) #9, !dbg !6059
  %20 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6060
  %return_code = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %20, i32 0, i32 8, !dbg !6061
  store i32 0, i32* %return_code, align 4, !dbg !6062
  %21 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6063
  %status13 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %21, i32 0, i32 7, !dbg !6065
  %22 = load i32, i32* %status13, align 8, !dbg !6065
  %cmp14 = icmp ne i32 %22, 2, !dbg !6066
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !6067

if.then15:                                        ; preds = %if.end12
  br label %out, !dbg !6068

if.end16:                                         ; preds = %if.end12
  %23 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6069
  %dma_mrpc17 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %23, i32 0, i32 29, !dbg !6071
  %24 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc17, align 8, !dbg !6071
  %tobool18 = icmp ne %struct.dma_mrpc_output* %24, null, !dbg !6069
  br i1 %tobool18, label %if.then19, label %if.else22, !dbg !6072

if.then19:                                        ; preds = %if.end16
  %25 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6073
  %dma_mrpc20 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %25, i32 0, i32 29, !dbg !6074
  %26 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc20, align 8, !dbg !6074
  %rtn_code = getelementptr inbounds %struct.dma_mrpc_output, %struct.dma_mrpc_output* %26, i32 0, i32 2, !dbg !6075
  %27 = load i32, i32* %rtn_code, align 4, !dbg !6075
  %28 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6076
  %return_code21 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %28, i32 0, i32 8, !dbg !6077
  store i32 %27, i32* %return_code21, align 4, !dbg !6078
  br label %if.end26, !dbg !6076

if.else22:                                        ; preds = %if.end16
  %29 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6079
  %mmio_mrpc23 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %29, i32 0, i32 9, !dbg !6080
  %30 = load %struct.mrpc_regs*, %struct.mrpc_regs** %mmio_mrpc23, align 8, !dbg !6080
  %ret_value = getelementptr inbounds %struct.mrpc_regs, %struct.mrpc_regs* %30, i32 0, i32 4, !dbg !6081
  %31 = bitcast i32* %ret_value to i8*, !dbg !6082
  %call24 = call i32 @ioread32(i8* %31) #9, !dbg !6083
  %32 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6084
  %return_code25 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %32, i32 0, i32 8, !dbg !6085
  store i32 %call24, i32* %return_code25, align 4, !dbg !6086
  br label %if.end26

if.end26:                                         ; preds = %if.else22, %if.then19
  %33 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6087
  %return_code27 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %33, i32 0, i32 8, !dbg !6089
  %34 = load i32, i32* %return_code27, align 4, !dbg !6089
  %cmp28 = icmp ne i32 %34, 0, !dbg !6090
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !6091

if.then29:                                        ; preds = %if.end26
  br label %out, !dbg !6092

if.end30:                                         ; preds = %if.end26
  %35 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6093
  %dma_mrpc31 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %35, i32 0, i32 29, !dbg !6095
  %36 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc31, align 8, !dbg !6095
  %tobool32 = icmp ne %struct.dma_mrpc_output* %36, null, !dbg !6093
  br i1 %tobool32, label %if.then33, label %if.else36, !dbg !6096

if.then33:                                        ; preds = %if.end30
  %37 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6097
  %data = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %37, i32 0, i32 11, !dbg !6098
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %data, i64 0, i64 0, !dbg !6099
  %38 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6100
  %dma_mrpc34 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %38, i32 0, i32 29, !dbg !6101
  %39 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc34, align 8, !dbg !6101
  %data35 = getelementptr inbounds %struct.dma_mrpc_output, %struct.dma_mrpc_output* %39, i32 0, i32 4, !dbg !6102
  %40 = bitcast [1024 x i8]* %data35 to i8*, !dbg !6099
  %41 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6103
  %read_len = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %41, i32 0, i32 10, !dbg !6104
  %42 = load i64, i64* %read_len, align 8, !dbg !6104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 4 %40, i64 %42, i1 false), !dbg !6099
  br label %if.end41, !dbg !6099

if.else36:                                        ; preds = %if.end30
  %43 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6105
  %data37 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %43, i32 0, i32 11, !dbg !6106
  %arraydecay38 = getelementptr inbounds [1024 x i8], [1024 x i8]* %data37, i64 0, i64 0, !dbg !6105
  %44 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6107
  %mmio_mrpc39 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %44, i32 0, i32 9, !dbg !6108
  %45 = load %struct.mrpc_regs*, %struct.mrpc_regs** %mmio_mrpc39, align 8, !dbg !6108
  %output_data = getelementptr inbounds %struct.mrpc_regs, %struct.mrpc_regs* %45, i32 0, i32 1, !dbg !6109
  %46 = bitcast [1024 x i8]* %output_data to i8*, !dbg !6110
  %47 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6111
  %read_len40 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %47, i32 0, i32 10, !dbg !6112
  %48 = load i64, i64* %read_len40, align 8, !dbg !6112
  call void @memcpy_fromio(i8* %arraydecay38, i8* %46, i64 %48) #9, !dbg !6113
  br label %if.end41

if.end41:                                         ; preds = %if.else36, %if.then33
  br label %out, !dbg !6095

out:                                              ; preds = %if.end41, %if.then29, %if.then15
  call void @llvm.dbg.label(metadata !6114), !dbg !6115
  %49 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6116
  %cmd_done = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %49, i32 0, i32 5, !dbg !6117
  store i8 1, i8* %cmd_done, align 8, !dbg !6118
  %50 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6119
  %cmd_comp = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %50, i32 0, i32 2, !dbg !6119
  call void @__wake_up(%struct.wait_queue_head* %cmd_comp, i32 1, i32 1, i8* null) #9, !dbg !6119
  %51 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6120
  %list = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %51, i32 0, i32 4, !dbg !6121
  call void @list_del_init(%struct.list_head* %list) #9, !dbg !6122
  %52 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6123
  call void @stuser_put(%struct.switchtec_user* %52) #9, !dbg !6124
  %53 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6125
  %mrpc_busy = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %53, i32 0, i32 19, !dbg !6126
  store i32 0, i32* %mrpc_busy, align 8, !dbg !6127
  %54 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6128
  call void @mrpc_cmd_submit(%struct.switchtec_dev* %54) #9, !dbg !6129
  br label %return, !dbg !6130

return:                                           ; preds = %out, %if.then11, %if.then
  ret void, !dbg !6130
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #4 !dbg !6131 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6136, metadata !DIExpression()), !dbg !6137
  br label %do.body, !dbg !6138

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6140

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6138
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !6138
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6138
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !6140
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !6138
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6142
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !6143
  %conv = zext i1 %cmp to i32, !dbg !6143
  ret i32 %conv, !dbg !6144
}

; Function Attrs: noredzone
declare dso_local i32 @ioread32(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stuser_set_state(%struct.switchtec_user* %stuser, i32 %state) #4 !dbg !6145 {
entry:
  %stuser.addr = alloca %struct.switchtec_user*, align 8
  %state.addr = alloca i32, align 4
  %state_names = alloca [4 x i8*], align 16
  store %struct.switchtec_user* %stuser, %struct.switchtec_user** %stuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser.addr, metadata !6148, metadata !DIExpression()), !dbg !6149
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !6150, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.declare(metadata [4 x i8*]* %state_names, metadata !6152, metadata !DIExpression()), !dbg !6155
  %0 = bitcast [4 x i8*]* %state_names to i8*, !dbg !6155
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([4 x i8*]* @__const.stuser_set_state.state_names to i8*), i64 32, i1 false), !dbg !6155
  %1 = load i32, i32* %state.addr, align 4, !dbg !6156
  %2 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser.addr, align 8, !dbg !6157
  %state1 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %2, i32 0, i32 1, !dbg !6158
  store i32 %1, i32* %state1, align 8, !dbg !6159
  ret void, !dbg !6160
}

; Function Attrs: noredzone
declare dso_local void @memcpy_fromio(i8*, i8*, i64) #1

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #4 !dbg !6161 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6162, metadata !DIExpression()), !dbg !6163
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6164
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !6165
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6166
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #9, !dbg !6167
  ret void, !dbg !6168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stuser_put(%struct.switchtec_user* %stuser) #4 !dbg !6169 {
entry:
  %stuser.addr = alloca %struct.switchtec_user*, align 8
  store %struct.switchtec_user* %stuser, %struct.switchtec_user** %stuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser.addr, metadata !6172, metadata !DIExpression()), !dbg !6173
  %0 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser.addr, align 8, !dbg !6174
  %kref = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %0, i32 0, i32 3, !dbg !6175
  %call = call i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* @stuser_free) #9, !dbg !6176
  ret void, !dbg !6177
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mrpc_cmd_submit(%struct.switchtec_dev* %stdev) #4 !dbg !6178 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !5876, metadata !DIExpression()), !dbg !6179
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %stuser = alloca %struct.switchtec_user*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchtec_user*, align 8
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !6181, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser, metadata !6183, metadata !DIExpression()), !dbg !6184
  %0 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6185
  %mrpc_busy = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %0, i32 0, i32 19, !dbg !6187
  %1 = load i32, i32* %mrpc_busy, align 8, !dbg !6187
  %tobool = icmp ne i32 %1, 0, !dbg !6185
  br i1 %tobool, label %if.then, label %if.end, !dbg !6188

if.then:                                          ; preds = %entry
  br label %return, !dbg !6189

if.end:                                           ; preds = %entry
  %2 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6190
  %mrpc_queue = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %2, i32 0, i32 18, !dbg !6192
  %call = call i32 @list_empty(%struct.list_head* %mrpc_queue) #9, !dbg !6193
  %tobool1 = icmp ne i32 %call, 0, !dbg !6193
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !6194

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !6195

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6196, metadata !DIExpression()), !dbg !6198
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6198
  %mrpc_queue4 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 18, !dbg !6198
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %mrpc_queue4, i32 0, i32 0, !dbg !6198
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6198
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !6198
  store i8* %5, i8** %__mptr, align 8, !dbg !6198
  br label %do.body, !dbg !6198

do.body:                                          ; preds = %if.end3
  br label %do.end, !dbg !6199

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !6198
  %add.ptr = getelementptr i8, i8* %6, i64 -40, !dbg !6198
  %7 = bitcast i8* %add.ptr to %struct.switchtec_user*, !dbg !6198
  store %struct.switchtec_user* %7, %struct.switchtec_user** %tmp, align 8, !dbg !6199
  %8 = load %struct.switchtec_user*, %struct.switchtec_user** %tmp, align 8, !dbg !6198
  store %struct.switchtec_user* %8, %struct.switchtec_user** %stuser, align 8, !dbg !6201
  %9 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6202
  %dma_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %9, i32 0, i32 29, !dbg !6204
  %10 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc, align 8, !dbg !6204
  %tobool5 = icmp ne %struct.dma_mrpc_output* %10, null, !dbg !6202
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !6205

if.then6:                                         ; preds = %do.end
  %11 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6206
  %dma_mrpc7 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %11, i32 0, i32 29, !dbg !6208
  %12 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc7, align 8, !dbg !6208
  %status = getelementptr inbounds %struct.dma_mrpc_output, %struct.dma_mrpc_output* %12, i32 0, i32 0, !dbg !6209
  store i32 1, i32* %status, align 4, !dbg !6210
  %13 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6211
  %dma_mrpc8 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %13, i32 0, i32 29, !dbg !6212
  %14 = load %struct.dma_mrpc_output*, %struct.dma_mrpc_output** %dma_mrpc8, align 8, !dbg !6212
  %data = getelementptr inbounds %struct.dma_mrpc_output, %struct.dma_mrpc_output* %14, i32 0, i32 4, !dbg !6213
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %data, i64 0, i64 0, !dbg !6214
  call void @llvm.memset.p0i8.i64(i8* align 4 %arraydecay, i8 -1, i64 1024, i1 false), !dbg !6214
  br label %if.end9, !dbg !6215

if.end9:                                          ; preds = %if.then6, %do.end
  %15 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6216
  call void @stuser_set_state(%struct.switchtec_user* %15, i32 2) #9, !dbg !6217
  %16 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6218
  %mrpc_busy10 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %16, i32 0, i32 19, !dbg !6219
  store i32 1, i32* %mrpc_busy10, align 8, !dbg !6220
  %17 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6221
  %mmio_mrpc = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %17, i32 0, i32 9, !dbg !6222
  %18 = load %struct.mrpc_regs*, %struct.mrpc_regs** %mmio_mrpc, align 8, !dbg !6222
  %input_data = getelementptr inbounds %struct.mrpc_regs, %struct.mrpc_regs* %18, i32 0, i32 0, !dbg !6223
  %19 = bitcast [1024 x i8]* %input_data to i8*, !dbg !6224
  %20 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6225
  %data11 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %20, i32 0, i32 11, !dbg !6226
  %arraydecay12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %data11, i64 0, i64 0, !dbg !6225
  %21 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6227
  %data_len = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %21, i32 0, i32 9, !dbg !6228
  %22 = load i64, i64* %data_len, align 8, !dbg !6228
  call void @memcpy_toio(i8* %19, i8* %arraydecay12, i64 %22) #9, !dbg !6229
  %23 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6230
  call void @flush_wc_buf(%struct.switchtec_dev* %23) #9, !dbg !6231
  %24 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6232
  %cmd = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %24, i32 0, i32 6, !dbg !6233
  %25 = load i32, i32* %cmd, align 4, !dbg !6233
  %26 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6234
  %mmio_mrpc13 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %26, i32 0, i32 9, !dbg !6235
  %27 = load %struct.mrpc_regs*, %struct.mrpc_regs** %mmio_mrpc13, align 8, !dbg !6235
  %cmd14 = getelementptr inbounds %struct.mrpc_regs, %struct.mrpc_regs* %27, i32 0, i32 2, !dbg !6236
  %28 = bitcast i32* %cmd14 to i8*, !dbg !6237
  call void @iowrite32(i32 %25, i8* %28) #9, !dbg !6238
  %29 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6239
  %mrpc_timeout = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %29, i32 0, i32 21, !dbg !6240
  store i32 500, i32* %m.addr.i, align 4
  %30 = load i32, i32* %m.addr.i, align 4, !dbg !6241
  %31 = call i1 @llvm.is.constant.i32(i32 %30) #12, !dbg !6242
  br i1 %31, label %if.then.i, label %if.else.i, !dbg !6243

if.then.i:                                        ; preds = %if.end9
  %32 = load i32, i32* %m.addr.i, align 4, !dbg !6244
  %cmp.i = icmp slt i32 %32, 0, !dbg !6245
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6246

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !6247
  br label %msecs_to_jiffies.exit, !dbg !6247

if.end.i:                                         ; preds = %if.then.i
  %33 = load i32, i32* %m.addr.i, align 4, !dbg !6248
  %call.i = call i64 @_msecs_to_jiffies(i32 %33) #11, !dbg !6249
  store i64 %call.i, i64* %retval.i, align 8, !dbg !6250
  br label %msecs_to_jiffies.exit, !dbg !6250

if.else.i:                                        ; preds = %if.end9
  %34 = load i32, i32* %m.addr.i, align 4, !dbg !6251
  %call2.i = call i64 @__msecs_to_jiffies(i32 %34) #11, !dbg !6252
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !6253
  br label %msecs_to_jiffies.exit, !dbg !6253

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %35 = load i64, i64* %retval.i, align 8, !dbg !6254
  %call16 = call zeroext i1 @schedule_delayed_work(%struct.delayed_work* %mrpc_timeout, i64 %35) #9, !dbg !6255
  br label %return, !dbg !6256

return:                                           ; preds = %msecs_to_jiffies.exit, %if.then2, %if.then
  ret void, !dbg !6256
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #4 !dbg !6257 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6258, metadata !DIExpression()), !dbg !6259
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6260
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #9, !dbg !6262
  br i1 %call, label %if.end, label %if.then, !dbg !6263

if.then:                                          ; preds = %entry
  br label %return, !dbg !6264

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6265
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6266
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !6266
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6267
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !6268
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6268
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #9, !dbg !6269
  br label %return, !dbg !6270

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6270
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #4 !dbg !6271 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6274, metadata !DIExpression()), !dbg !6275
  ret i1 true, !dbg !6276
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #4 !dbg !6277 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !6280, metadata !DIExpression()), !dbg !6281
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !6282, metadata !DIExpression()), !dbg !6283
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6284
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6285
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6286
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !6287
  br label %do.body, !dbg !6288

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !6289

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !6291

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !6289

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6293
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6293
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !6293
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !6293
  br label %do.end5, !dbg !6293

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !6289

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !6295
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* %release) #4 !dbg !6296 {
entry:
  %retval = alloca i32, align 4
  %kref.addr = alloca %struct.kref*, align 8
  %release.addr = alloca void (%struct.kref*)*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !6303, metadata !DIExpression()), !dbg !6304
  store void (%struct.kref*)* %release, void (%struct.kref*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.kref*)** %release.addr, metadata !6305, metadata !DIExpression()), !dbg !6306
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !6307
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !6309
  %call = call zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %refcount) #9, !dbg !6310
  br i1 %call, label %if.then, label %if.end, !dbg !6311

if.then:                                          ; preds = %entry
  %1 = load void (%struct.kref*)*, void (%struct.kref*)** %release.addr, align 8, !dbg !6312
  %2 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !6314
  call void %1(%struct.kref* %2) #9, !dbg !6312
  store i32 1, i32* %retval, align 4, !dbg !6315
  br label %return, !dbg !6315

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6316
  br label %return, !dbg !6316

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !6317
  ret i32 %3, !dbg !6317
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stuser_free(%struct.kref* %kref) #4 !dbg !6318 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %stuser = alloca %struct.switchtec_user*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchtec_user*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !6319, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser, metadata !6321, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6323, metadata !DIExpression()), !dbg !6325
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !6325
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !6325
  store i8* %1, i8** %__mptr, align 8, !dbg !6325
  br label %do.body, !dbg !6325

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6326

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6325
  %add.ptr = getelementptr i8, i8* %2, i64 -32, !dbg !6325
  %3 = bitcast i8* %add.ptr to %struct.switchtec_user*, !dbg !6325
  store %struct.switchtec_user* %3, %struct.switchtec_user** %tmp, align 8, !dbg !6326
  %4 = load %struct.switchtec_user*, %struct.switchtec_user** %tmp, align 8, !dbg !6325
  store %struct.switchtec_user* %4, %struct.switchtec_user** %stuser, align 8, !dbg !6328
  %5 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6329
  %stdev = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %5, i32 0, i32 0, !dbg !6330
  %6 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6330
  %dev = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %6, i32 0, i32 1, !dbg !6331
  call void @put_device(%struct.device* %dev) #9, !dbg !6332
  %7 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6333
  %8 = bitcast %struct.switchtec_user* %7 to i8*, !dbg !6333
  call void @kfree(i8* %8) #9, !dbg !6334
  ret void, !dbg !6335
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %r) #4 !dbg !6336 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !6340, metadata !DIExpression()), !dbg !6341
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !6342
  %call = call zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %0, i32* null) #9, !dbg !6343
  ret i1 %call, !dbg !6344
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %r, i32* %oldp) #4 !dbg !6345 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !6348, metadata !DIExpression()), !dbg !6349
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !6350, metadata !DIExpression()), !dbg !6351
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !6352
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !6353
  %call = call zeroext i1 @__refcount_sub_and_test(i32 1, %struct.refcount_struct* %0, i32* %1) #9, !dbg !6354
  ret i1 %call, !dbg !6355
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_sub_and_test(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #4 !dbg !6356 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !6359, metadata !DIExpression()), !dbg !6363
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6367, metadata !DIExpression()), !dbg !6368
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !6369, metadata !DIExpression()), !dbg !6371
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6372, metadata !DIExpression()), !dbg !6374
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6376, metadata !DIExpression()), !dbg !6377
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !6378, metadata !DIExpression()), !dbg !6379
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6380, metadata !DIExpression()), !dbg !6381
  %retval = alloca i1, align 1
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !6382, metadata !DIExpression()), !dbg !6383
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !6384, metadata !DIExpression()), !dbg !6385
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !6386, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.declare(metadata i32* %old, metadata !6388, metadata !DIExpression()), !dbg !6389
  %0 = load i32, i32* %i.addr, align 4, !dbg !6390
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !6391
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !6392
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6393
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !6393
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6394
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6395
  %conv.i.i = trunc i64 %5 to i32, !dbg !6395
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #11, !dbg !6396
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6397
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !6397
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #11, !dbg !6397
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !6398
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6399
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !6371
  %sub.i.i = sub i32 0, %10, !dbg !6371
  store i32 %sub.i.i, i32* %__ret.i.i, align 4, !dbg !6371
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !6371
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6371
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !6371
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #12, !dbg !6371, !srcloc !6400
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !6371
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !6371
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !6371
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !6371
  store i32 %15, i32* %old, align 4, !dbg !6389
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !6401
  %tobool = icmp ne i32* %16, null, !dbg !6401
  br i1 %tobool, label %if.then, label %if.end, !dbg !6403

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !6404
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !6405
  store i32 %17, i32* %18, align 4, !dbg !6406
  br label %if.end, !dbg !6407

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !6408
  %20 = load i32, i32* %i.addr, align 4, !dbg !6410
  %cmp = icmp eq i32 %19, %20, !dbg !6411
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !6412

if.then1:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #12, !dbg !6413, !srcloc !6415
  store i1 true, i1* %retval, align 1, !dbg !6416
  br label %return, !dbg !6416

if.end2:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !6417
  %cmp3 = icmp slt i32 %21, 0, !dbg !6417
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !6417

lor.rhs:                                          ; preds = %if.end2
  %22 = load i32, i32* %old, align 4, !dbg !6417
  %23 = load i32, i32* %i.addr, align 4, !dbg !6417
  %sub = sub i32 %22, %23, !dbg !6417
  %cmp4 = icmp slt i32 %sub, 0, !dbg !6417
  br label %lor.end, !dbg !6417

lor.end:                                          ; preds = %lor.rhs, %if.end2
  %24 = phi i1 [ true, %if.end2 ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %24, true, !dbg !6417
  %lnot5 = xor i1 %lnot, true, !dbg !6417
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6417
  %conv = sext i32 %lnot.ext to i64, !dbg !6417
  %tobool6 = icmp ne i64 %conv, 0, !dbg !6417
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !6419

if.then7:                                         ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !6420
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 3) #9, !dbg !6421
  br label %if.end8, !dbg !6421

if.end8:                                          ; preds = %if.then7, %lor.end
  store i1 false, i1* %retval, align 1, !dbg !6422
  br label %return, !dbg !6422

return:                                           ; preds = %if.end8, %if.then1
  %26 = load i1, i1* %retval, align 1, !dbg !6423
  ret i1 %26, !dbg !6423
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #4 !dbg !6424 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6428, metadata !DIExpression()), !dbg !6429
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6430, metadata !DIExpression()), !dbg !6431
  ret i1 true, !dbg !6432
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #4 !dbg !6433 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6437, metadata !DIExpression()), !dbg !6438
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6439, metadata !DIExpression()), !dbg !6440
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6441, metadata !DIExpression()), !dbg !6442
  ret void, !dbg !6443
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local void @memcpy_toio(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @flush_wc_buf(%struct.switchtec_dev* %stdev) #4 !dbg !6444 {
entry:
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %mmio_dbmsg = alloca %struct.ntb_dbmsg_regs*, align 8
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !6445, metadata !DIExpression()), !dbg !6446
  call void @llvm.dbg.declare(metadata %struct.ntb_dbmsg_regs** %mmio_dbmsg, metadata !6447, metadata !DIExpression()), !dbg !6491
  %0 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !6492
  %mmio_ntb = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %0, i32 0, i32 13, !dbg !6493
  %1 = load %struct.ntb_info_regs*, %struct.ntb_info_regs** %mmio_ntb, align 8, !dbg !6493
  %2 = bitcast %struct.ntb_info_regs* %1 to i8*, !dbg !6494
  %add.ptr = getelementptr i8, i8* %2, i64 409600, !dbg !6495
  %3 = bitcast i8* %add.ptr to %struct.ntb_dbmsg_regs*, !dbg !6494
  store %struct.ntb_dbmsg_regs* %3, %struct.ntb_dbmsg_regs** %mmio_dbmsg, align 8, !dbg !6496
  %4 = load %struct.ntb_dbmsg_regs*, %struct.ntb_dbmsg_regs** %mmio_dbmsg, align 8, !dbg !6497
  %odb = getelementptr inbounds %struct.ntb_dbmsg_regs, %struct.ntb_dbmsg_regs* %4, i32 0, i32 1, !dbg !6498
  %5 = bitcast i64* %odb to i8*, !dbg !6499
  %call = call i32 @ioread32(i8* %5) #9, !dbg !6500
  ret void, !dbg !6501
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_delayed_work(%struct.delayed_work* %dwork, i64 %delay) #4 !dbg !6502 {
entry:
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !6506, metadata !DIExpression()), !dbg !6507
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !6508, metadata !DIExpression()), !dbg !6509
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !6510
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !6511
  %2 = load i64, i64* %delay.addr, align 8, !dbg !6512
  %call = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #9, !dbg !6513
  ret i1 %call, !dbg !6514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #4 !dbg !6515 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !6518, metadata !DIExpression()), !dbg !6519
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !6520, metadata !DIExpression()), !dbg !6521
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !6522, metadata !DIExpression()), !dbg !6523
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !6524
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !6525
  %2 = load i64, i64* %delay.addr, align 8, !dbg !6526
  %call = call zeroext i1 @queue_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #9, !dbg !6527
  ret i1 %call, !dbg !6528
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #4 !dbg !6529 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !6530, metadata !DIExpression()), !dbg !6531
  %0 = load i32, i32* %m.addr, align 4, !dbg !6532
  %conv = zext i32 %0 to i64, !dbg !6532
  %add = add i64 %conv, 4, !dbg !6533
  %sub = sub i64 %add, 1, !dbg !6534
  %div = sdiv i64 %sub, 4, !dbg !6535
  ret i64 %div, !dbg !6536
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @device_version_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #4 !dbg !6537 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %ver = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6538, metadata !DIExpression()), !dbg !6539
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6540, metadata !DIExpression()), !dbg !6541
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6542, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !6544, metadata !DIExpression()), !dbg !6545
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6546
  %call = call %struct.switchtec_dev* @to_stdev(%struct.device* %0) #9, !dbg !6547
  store %struct.switchtec_dev* %call, %struct.switchtec_dev** %stdev, align 8, !dbg !6545
  call void @llvm.dbg.declare(metadata i32* %ver, metadata !6548, metadata !DIExpression()), !dbg !6549
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6550
  %mmio_sys_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 11, !dbg !6551
  %2 = load %struct.sys_info_regs*, %struct.sys_info_regs** %mmio_sys_info, align 8, !dbg !6551
  %device_version = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %2, i32 0, i32 1, !dbg !6552
  %3 = bitcast i32* %device_version to i8*, !dbg !6553
  %call1 = call i32 @ioread32(i8* %3) #9, !dbg !6554
  store i32 %call1, i32* %ver, align 4, !dbg !6555
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !6556
  %5 = load i32, i32* %ver, align 4, !dbg !6557
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i32 %5) #9, !dbg !6558
  %conv = sext i32 %call2 to i64, !dbg !6558
  ret i64 %conv, !dbg !6559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.switchtec_dev* @to_stdev(%struct.device* %dev) #4 !dbg !6560 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchtec_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6563, metadata !DIExpression()), !dbg !6564
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6565, metadata !DIExpression()), !dbg !6567
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6567
  %1 = bitcast %struct.device* %0 to i8*, !dbg !6567
  store i8* %1, i8** %__mptr, align 8, !dbg !6567
  br label %do.body, !dbg !6567

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6568

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6567
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !6567
  %3 = bitcast i8* %add.ptr to %struct.switchtec_dev*, !dbg !6567
  store %struct.switchtec_dev* %3, %struct.switchtec_dev** %tmp, align 8, !dbg !6568
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %tmp, align 8, !dbg !6567
  ret %struct.switchtec_dev* %4, !dbg !6570
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @fw_version_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #4 !dbg !6571 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %ver = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6572, metadata !DIExpression()), !dbg !6573
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6574, metadata !DIExpression()), !dbg !6575
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6576, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !6578, metadata !DIExpression()), !dbg !6579
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6580
  %call = call %struct.switchtec_dev* @to_stdev(%struct.device* %0) #9, !dbg !6581
  store %struct.switchtec_dev* %call, %struct.switchtec_dev** %stdev, align 8, !dbg !6579
  call void @llvm.dbg.declare(metadata i32* %ver, metadata !6582, metadata !DIExpression()), !dbg !6583
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6584
  %mmio_sys_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 11, !dbg !6585
  %2 = load %struct.sys_info_regs*, %struct.sys_info_regs** %mmio_sys_info, align 8, !dbg !6585
  %firmware_version = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %2, i32 0, i32 2, !dbg !6586
  %3 = bitcast i32* %firmware_version to i8*, !dbg !6587
  %call1 = call i32 @ioread32(i8* %3) #9, !dbg !6588
  store i32 %call1, i32* %ver, align 4, !dbg !6589
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !6590
  %5 = load i32, i32* %ver, align 4, !dbg !6591
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i32 %5) #9, !dbg !6592
  %conv = sext i32 %call2 to i64, !dbg !6592
  ret i64 %conv, !dbg !6593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @vendor_id_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #4 !dbg !6594 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %si = alloca %struct.sys_info_regs*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6595, metadata !DIExpression()), !dbg !6596
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6597, metadata !DIExpression()), !dbg !6596
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6598, metadata !DIExpression()), !dbg !6596
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !6599, metadata !DIExpression()), !dbg !6596
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6596
  %call = call %struct.switchtec_dev* @to_stdev(%struct.device* %0) #9, !dbg !6596
  store %struct.switchtec_dev* %call, %struct.switchtec_dev** %stdev, align 8, !dbg !6596
  call void @llvm.dbg.declare(metadata %struct.sys_info_regs** %si, metadata !6600, metadata !DIExpression()), !dbg !6596
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6596
  %mmio_sys_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 11, !dbg !6596
  %2 = load %struct.sys_info_regs*, %struct.sys_info_regs** %mmio_sys_info, align 8, !dbg !6596
  store %struct.sys_info_regs* %2, %struct.sys_info_regs** %si, align 8, !dbg !6596
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6601
  %gen = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 3, !dbg !6601
  %4 = load i32, i32* %gen, align 8, !dbg !6601
  %cmp = icmp eq i32 %4, 0, !dbg !6601
  br i1 %cmp, label %if.then, label %if.else, !dbg !6596

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !6601
  %6 = load %struct.sys_info_regs*, %struct.sys_info_regs** %si, align 8, !dbg !6601
  %7 = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %6, i32 0, i32 3, !dbg !6601
  %gen3 = bitcast %union.anon.67* %7 to %struct.sys_info_regs_gen3*, !dbg !6601
  %vendor_id = getelementptr inbounds %struct.sys_info_regs_gen3, %struct.sys_info_regs_gen3* %gen3, i32 0, i32 8, !dbg !6601
  %8 = bitcast [8 x i8]* %vendor_id to i8*, !dbg !6601
  %call1 = call i64 @io_string_show(i8* %5, i8* %8, i64 8) #9, !dbg !6601
  store i64 %call1, i64* %retval, align 8, !dbg !6601
  br label %return, !dbg !6601

if.else:                                          ; preds = %entry
  %9 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6603
  %gen2 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %9, i32 0, i32 3, !dbg !6603
  %10 = load i32, i32* %gen2, align 8, !dbg !6603
  %cmp3 = icmp eq i32 %10, 1, !dbg !6603
  br i1 %cmp3, label %if.then4, label %if.else7, !dbg !6601

if.then4:                                         ; preds = %if.else
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !6603
  %12 = load %struct.sys_info_regs*, %struct.sys_info_regs** %si, align 8, !dbg !6603
  %13 = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %12, i32 0, i32 3, !dbg !6603
  %gen4 = bitcast %union.anon.67* %13 to %struct.sys_info_regs_gen4*, !dbg !6603
  %vendor_id5 = getelementptr inbounds %struct.sys_info_regs_gen4, %struct.sys_info_regs_gen4* %gen4, i32 0, i32 34, !dbg !6603
  %14 = bitcast [8 x i8]* %vendor_id5 to i8*, !dbg !6603
  %call6 = call i64 @io_string_show(i8* %11, i8* %14, i64 8) #9, !dbg !6603
  store i64 %call6, i64* %retval, align 8, !dbg !6603
  br label %return, !dbg !6603

if.else7:                                         ; preds = %if.else
  store i64 -524, i64* %retval, align 8, !dbg !6603
  br label %return, !dbg !6603

return:                                           ; preds = %if.else7, %if.then4, %if.then
  %15 = load i64, i64* %retval, align 8, !dbg !6596
  ret i64 %15, !dbg !6596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @io_string_show(i8* %buf, i8* %attr, i64 %len) #4 !dbg !6605 {
entry:
  %buf.addr = alloca i8*, align 8
  %attr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %i = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6608, metadata !DIExpression()), !dbg !6609
  store i8* %attr, i8** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %attr.addr, metadata !6610, metadata !DIExpression()), !dbg !6611
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6612, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6614, metadata !DIExpression()), !dbg !6615
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !6616
  %1 = load i8*, i8** %attr.addr, align 8, !dbg !6617
  %2 = load i64, i64* %len.addr, align 8, !dbg !6618
  call void @memcpy_fromio(i8* %0, i8* %1, i64 %2) #9, !dbg !6619
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !6620
  %4 = load i64, i64* %len.addr, align 8, !dbg !6621
  %arrayidx = getelementptr i8, i8* %3, i64 %4, !dbg !6620
  store i8 10, i8* %arrayidx, align 1, !dbg !6622
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !6623
  %6 = load i64, i64* %len.addr, align 8, !dbg !6624
  %add = add i64 %6, 1, !dbg !6625
  %arrayidx1 = getelementptr i8, i8* %5, i64 %add, !dbg !6623
  store i8 0, i8* %arrayidx1, align 1, !dbg !6626
  %7 = load i64, i64* %len.addr, align 8, !dbg !6627
  %sub = sub i64 %7, 1, !dbg !6629
  %conv = trunc i64 %sub to i32, !dbg !6627
  store i32 %conv, i32* %i, align 4, !dbg !6630
  br label %for.cond, !dbg !6631

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !6632
  %cmp = icmp sgt i32 %8, 0, !dbg !6634
  br i1 %cmp, label %for.body, label %for.end, !dbg !6635

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !6636
  %10 = load i32, i32* %i, align 4, !dbg !6639
  %idxprom = sext i32 %10 to i64, !dbg !6636
  %arrayidx3 = getelementptr i8, i8* %9, i64 %idxprom, !dbg !6636
  %11 = load i8, i8* %arrayidx3, align 1, !dbg !6636
  %conv4 = sext i8 %11 to i32, !dbg !6636
  %cmp5 = icmp ne i32 %conv4, 32, !dbg !6640
  br i1 %cmp5, label %if.then, label %if.end, !dbg !6641

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !6642

if.end:                                           ; preds = %for.body
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !6643
  %13 = load i32, i32* %i, align 4, !dbg !6644
  %idxprom7 = sext i32 %13 to i64, !dbg !6643
  %arrayidx8 = getelementptr i8, i8* %12, i64 %idxprom7, !dbg !6643
  store i8 10, i8* %arrayidx8, align 1, !dbg !6645
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !6646
  %15 = load i32, i32* %i, align 4, !dbg !6647
  %add9 = add i32 %15, 1, !dbg !6648
  %idxprom10 = sext i32 %add9 to i64, !dbg !6646
  %arrayidx11 = getelementptr i8, i8* %14, i64 %idxprom10, !dbg !6646
  store i8 0, i8* %arrayidx11, align 1, !dbg !6649
  br label %for.inc, !dbg !6650

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !dbg !6651
  %dec = add i32 %16, -1, !dbg !6651
  store i32 %dec, i32* %i, align 4, !dbg !6651
  br label %for.cond, !dbg !6652, !llvm.loop !6653

for.end:                                          ; preds = %if.then, %for.cond
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !6655
  %call = call i64 @strlen(i8* %17) #9, !dbg !6656
  ret i64 %call, !dbg !6657
}

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @product_id_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #4 !dbg !6658 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %si = alloca %struct.sys_info_regs*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6659, metadata !DIExpression()), !dbg !6660
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6661, metadata !DIExpression()), !dbg !6660
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6662, metadata !DIExpression()), !dbg !6660
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !6663, metadata !DIExpression()), !dbg !6660
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6660
  %call = call %struct.switchtec_dev* @to_stdev(%struct.device* %0) #9, !dbg !6660
  store %struct.switchtec_dev* %call, %struct.switchtec_dev** %stdev, align 8, !dbg !6660
  call void @llvm.dbg.declare(metadata %struct.sys_info_regs** %si, metadata !6664, metadata !DIExpression()), !dbg !6660
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6660
  %mmio_sys_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 11, !dbg !6660
  %2 = load %struct.sys_info_regs*, %struct.sys_info_regs** %mmio_sys_info, align 8, !dbg !6660
  store %struct.sys_info_regs* %2, %struct.sys_info_regs** %si, align 8, !dbg !6660
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6665
  %gen = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 3, !dbg !6665
  %4 = load i32, i32* %gen, align 8, !dbg !6665
  %cmp = icmp eq i32 %4, 0, !dbg !6665
  br i1 %cmp, label %if.then, label %if.else, !dbg !6660

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !6665
  %6 = load %struct.sys_info_regs*, %struct.sys_info_regs** %si, align 8, !dbg !6665
  %7 = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %6, i32 0, i32 3, !dbg !6665
  %gen3 = bitcast %union.anon.67* %7 to %struct.sys_info_regs_gen3*, !dbg !6665
  %product_id = getelementptr inbounds %struct.sys_info_regs_gen3, %struct.sys_info_regs_gen3* %gen3, i32 0, i32 9, !dbg !6665
  %8 = bitcast [16 x i8]* %product_id to i8*, !dbg !6665
  %call1 = call i64 @io_string_show(i8* %5, i8* %8, i64 16) #9, !dbg !6665
  store i64 %call1, i64* %retval, align 8, !dbg !6665
  br label %return, !dbg !6665

if.else:                                          ; preds = %entry
  %9 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6667
  %gen2 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %9, i32 0, i32 3, !dbg !6667
  %10 = load i32, i32* %gen2, align 8, !dbg !6667
  %cmp3 = icmp eq i32 %10, 1, !dbg !6667
  br i1 %cmp3, label %if.then4, label %if.else7, !dbg !6665

if.then4:                                         ; preds = %if.else
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !6667
  %12 = load %struct.sys_info_regs*, %struct.sys_info_regs** %si, align 8, !dbg !6667
  %13 = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %12, i32 0, i32 3, !dbg !6667
  %gen4 = bitcast %union.anon.67* %13 to %struct.sys_info_regs_gen4*, !dbg !6667
  %product_id5 = getelementptr inbounds %struct.sys_info_regs_gen4, %struct.sys_info_regs_gen4* %gen4, i32 0, i32 35, !dbg !6667
  %14 = bitcast [24 x i8]* %product_id5 to i8*, !dbg !6667
  %call6 = call i64 @io_string_show(i8* %11, i8* %14, i64 24) #9, !dbg !6667
  store i64 %call6, i64* %retval, align 8, !dbg !6667
  br label %return, !dbg !6667

if.else7:                                         ; preds = %if.else
  store i64 -524, i64* %retval, align 8, !dbg !6667
  br label %return, !dbg !6667

return:                                           ; preds = %if.else7, %if.then4, %if.then
  %15 = load i64, i64* %retval, align 8, !dbg !6660
  ret i64 %15, !dbg !6660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @product_revision_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #4 !dbg !6669 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %si = alloca %struct.sys_info_regs*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6670, metadata !DIExpression()), !dbg !6671
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6672, metadata !DIExpression()), !dbg !6671
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6673, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !6674, metadata !DIExpression()), !dbg !6671
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6671
  %call = call %struct.switchtec_dev* @to_stdev(%struct.device* %0) #9, !dbg !6671
  store %struct.switchtec_dev* %call, %struct.switchtec_dev** %stdev, align 8, !dbg !6671
  call void @llvm.dbg.declare(metadata %struct.sys_info_regs** %si, metadata !6675, metadata !DIExpression()), !dbg !6671
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6671
  %mmio_sys_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 11, !dbg !6671
  %2 = load %struct.sys_info_regs*, %struct.sys_info_regs** %mmio_sys_info, align 8, !dbg !6671
  store %struct.sys_info_regs* %2, %struct.sys_info_regs** %si, align 8, !dbg !6671
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6676
  %gen = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 3, !dbg !6676
  %4 = load i32, i32* %gen, align 8, !dbg !6676
  %cmp = icmp eq i32 %4, 0, !dbg !6676
  br i1 %cmp, label %if.then, label %if.else, !dbg !6671

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !6676
  %6 = load %struct.sys_info_regs*, %struct.sys_info_regs** %si, align 8, !dbg !6676
  %7 = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %6, i32 0, i32 3, !dbg !6676
  %gen3 = bitcast %union.anon.67* %7 to %struct.sys_info_regs_gen3*, !dbg !6676
  %product_revision = getelementptr inbounds %struct.sys_info_regs_gen3, %struct.sys_info_regs_gen3* %gen3, i32 0, i32 10, !dbg !6676
  %8 = bitcast [4 x i8]* %product_revision to i8*, !dbg !6676
  %call1 = call i64 @io_string_show(i8* %5, i8* %8, i64 4) #9, !dbg !6676
  store i64 %call1, i64* %retval, align 8, !dbg !6676
  br label %return, !dbg !6676

if.else:                                          ; preds = %entry
  %9 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6678
  %gen2 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %9, i32 0, i32 3, !dbg !6678
  %10 = load i32, i32* %gen2, align 8, !dbg !6678
  %cmp3 = icmp eq i32 %10, 1, !dbg !6678
  br i1 %cmp3, label %if.then4, label %if.else7, !dbg !6676

if.then4:                                         ; preds = %if.else
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !6678
  %12 = load %struct.sys_info_regs*, %struct.sys_info_regs** %si, align 8, !dbg !6678
  %13 = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %12, i32 0, i32 3, !dbg !6678
  %gen4 = bitcast %union.anon.67* %13 to %struct.sys_info_regs_gen4*, !dbg !6678
  %product_revision5 = getelementptr inbounds %struct.sys_info_regs_gen4, %struct.sys_info_regs_gen4* %gen4, i32 0, i32 36, !dbg !6678
  %14 = bitcast [2 x i8]* %product_revision5 to i8*, !dbg !6678
  %call6 = call i64 @io_string_show(i8* %11, i8* %14, i64 2) #9, !dbg !6678
  store i64 %call6, i64* %retval, align 8, !dbg !6678
  br label %return, !dbg !6678

if.else7:                                         ; preds = %if.else
  store i64 -524, i64* %retval, align 8, !dbg !6678
  br label %return, !dbg !6678

return:                                           ; preds = %if.else7, %if.then4, %if.then
  %15 = load i64, i64* %retval, align 8, !dbg !6671
  ret i64 %15, !dbg !6671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @component_vendor_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #4 !dbg !6680 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %si = alloca %struct.sys_info_regs*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6681, metadata !DIExpression()), !dbg !6682
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6683, metadata !DIExpression()), !dbg !6684
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6685, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !6687, metadata !DIExpression()), !dbg !6688
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6689
  %call = call %struct.switchtec_dev* @to_stdev(%struct.device* %0) #9, !dbg !6690
  store %struct.switchtec_dev* %call, %struct.switchtec_dev** %stdev, align 8, !dbg !6688
  call void @llvm.dbg.declare(metadata %struct.sys_info_regs** %si, metadata !6691, metadata !DIExpression()), !dbg !6692
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6693
  %mmio_sys_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 11, !dbg !6694
  %2 = load %struct.sys_info_regs*, %struct.sys_info_regs** %mmio_sys_info, align 8, !dbg !6694
  store %struct.sys_info_regs* %2, %struct.sys_info_regs** %si, align 8, !dbg !6692
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6695
  %gen = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 3, !dbg !6697
  %4 = load i32, i32* %gen, align 8, !dbg !6697
  %cmp = icmp ne i32 %4, 0, !dbg !6698
  br i1 %cmp, label %if.then, label %if.end, !dbg !6699

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !6700
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !6701
  %conv = sext i32 %call1 to i64, !dbg !6701
  store i64 %conv, i64* %retval, align 8, !dbg !6702
  br label %return, !dbg !6702

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !6703
  %7 = load %struct.sys_info_regs*, %struct.sys_info_regs** %si, align 8, !dbg !6704
  %8 = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %7, i32 0, i32 3, !dbg !6705
  %gen3 = bitcast %union.anon.67* %8 to %struct.sys_info_regs_gen3*, !dbg !6705
  %component_vendor = getelementptr inbounds %struct.sys_info_regs_gen3, %struct.sys_info_regs_gen3* %gen3, i32 0, i32 11, !dbg !6706
  %9 = bitcast [8 x i8]* %component_vendor to i8*, !dbg !6707
  %call2 = call i64 @io_string_show(i8* %6, i8* %9, i64 8) #9, !dbg !6708
  store i64 %call2, i64* %retval, align 8, !dbg !6709
  br label %return, !dbg !6709

return:                                           ; preds = %if.end, %if.then
  %10 = load i64, i64* %retval, align 8, !dbg !6710
  ret i64 %10, !dbg !6710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @component_id_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #4 !dbg !6711 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %id = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6712, metadata !DIExpression()), !dbg !6713
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6714, metadata !DIExpression()), !dbg !6715
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6716, metadata !DIExpression()), !dbg !6717
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !6718, metadata !DIExpression()), !dbg !6719
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6720
  %call = call %struct.switchtec_dev* @to_stdev(%struct.device* %0) #9, !dbg !6721
  store %struct.switchtec_dev* %call, %struct.switchtec_dev** %stdev, align 8, !dbg !6719
  call void @llvm.dbg.declare(metadata i32* %id, metadata !6722, metadata !DIExpression()), !dbg !6723
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6724
  %mmio_sys_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 11, !dbg !6725
  %2 = load %struct.sys_info_regs*, %struct.sys_info_regs** %mmio_sys_info, align 8, !dbg !6725
  %3 = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %2, i32 0, i32 3, !dbg !6726
  %gen3 = bitcast %union.anon.67* %3 to %struct.sys_info_regs_gen3*, !dbg !6726
  %component_id = getelementptr inbounds %struct.sys_info_regs_gen3, %struct.sys_info_regs_gen3* %gen3, i32 0, i32 12, !dbg !6727
  %4 = bitcast i16* %component_id to i8*, !dbg !6728
  %call1 = call i32 @ioread16(i8* %4) #9, !dbg !6729
  store i32 %call1, i32* %id, align 4, !dbg !6723
  %5 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6730
  %gen = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %5, i32 0, i32 3, !dbg !6732
  %6 = load i32, i32* %gen, align 8, !dbg !6732
  %cmp = icmp ne i32 %6, 0, !dbg !6733
  br i1 %cmp, label %if.then, label %if.end, !dbg !6734

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !6735
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !6736
  %conv = sext i32 %call2 to i64, !dbg !6736
  store i64 %conv, i64* %retval, align 8, !dbg !6737
  br label %return, !dbg !6737

if.end:                                           ; preds = %entry
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !6738
  %9 = load i32, i32* %id, align 4, !dbg !6739
  %call3 = call i32 (i8*, i8*, ...) @sprintf(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0), i32 %9) #9, !dbg !6740
  %conv4 = sext i32 %call3 to i64, !dbg !6740
  store i64 %conv4, i64* %retval, align 8, !dbg !6741
  br label %return, !dbg !6741

return:                                           ; preds = %if.end, %if.then
  %10 = load i64, i64* %retval, align 8, !dbg !6742
  ret i64 %10, !dbg !6742
}

; Function Attrs: noredzone
declare dso_local i32 @ioread16(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @component_revision_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #4 !dbg !6743 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %rev = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6744, metadata !DIExpression()), !dbg !6745
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6746, metadata !DIExpression()), !dbg !6747
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6748, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !6750, metadata !DIExpression()), !dbg !6751
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6752
  %call = call %struct.switchtec_dev* @to_stdev(%struct.device* %0) #9, !dbg !6753
  store %struct.switchtec_dev* %call, %struct.switchtec_dev** %stdev, align 8, !dbg !6751
  call void @llvm.dbg.declare(metadata i32* %rev, metadata !6754, metadata !DIExpression()), !dbg !6755
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6756
  %mmio_sys_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 11, !dbg !6757
  %2 = load %struct.sys_info_regs*, %struct.sys_info_regs** %mmio_sys_info, align 8, !dbg !6757
  %3 = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %2, i32 0, i32 3, !dbg !6758
  %gen3 = bitcast %union.anon.67* %3 to %struct.sys_info_regs_gen3*, !dbg !6758
  %component_revision = getelementptr inbounds %struct.sys_info_regs_gen3, %struct.sys_info_regs_gen3* %gen3, i32 0, i32 13, !dbg !6759
  %call1 = call i32 @ioread8(i8* %component_revision) #9, !dbg !6760
  store i32 %call1, i32* %rev, align 4, !dbg !6755
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6761
  %gen = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %4, i32 0, i32 3, !dbg !6763
  %5 = load i32, i32* %gen, align 8, !dbg !6763
  %cmp = icmp ne i32 %5, 0, !dbg !6764
  br i1 %cmp, label %if.then, label %if.end, !dbg !6765

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !6766
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i64 0, i64 0)) #9, !dbg !6767
  %conv = sext i32 %call2 to i64, !dbg !6767
  store i64 %conv, i64* %retval, align 8, !dbg !6768
  br label %return, !dbg !6768

if.end:                                           ; preds = %entry
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !6769
  %8 = load i32, i32* %rev, align 4, !dbg !6770
  %call3 = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i32 %8) #9, !dbg !6771
  %conv4 = sext i32 %call3 to i64, !dbg !6771
  store i64 %conv4, i64* %retval, align 8, !dbg !6772
  br label %return, !dbg !6772

return:                                           ; preds = %if.end, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !6773
  ret i64 %9, !dbg !6773
}

; Function Attrs: noredzone
declare dso_local i32 @ioread8(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @partition_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #4 !dbg !6774 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6775, metadata !DIExpression()), !dbg !6776
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6777, metadata !DIExpression()), !dbg !6778
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6779, metadata !DIExpression()), !dbg !6780
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !6781, metadata !DIExpression()), !dbg !6782
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6783
  %call = call %struct.switchtec_dev* @to_stdev(%struct.device* %0) #9, !dbg !6784
  store %struct.switchtec_dev* %call, %struct.switchtec_dev** %stdev, align 8, !dbg !6782
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !6785
  %2 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6786
  %partition = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %2, i32 0, i32 4, !dbg !6787
  %3 = load i32, i32* %partition, align 4, !dbg !6787
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i32 %3) #9, !dbg !6788
  %conv = sext i32 %call1 to i64, !dbg !6788
  ret i64 %conv, !dbg !6789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @partition_count_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #4 !dbg !6790 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6791, metadata !DIExpression()), !dbg !6792
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6793, metadata !DIExpression()), !dbg !6794
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6795, metadata !DIExpression()), !dbg !6796
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !6797, metadata !DIExpression()), !dbg !6798
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6799
  %call = call %struct.switchtec_dev* @to_stdev(%struct.device* %0) #9, !dbg !6800
  store %struct.switchtec_dev* %call, %struct.switchtec_dev** %stdev, align 8, !dbg !6798
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !6801
  %2 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6802
  %partition_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %2, i32 0, i32 5, !dbg !6803
  %3 = load i32, i32* %partition_count, align 8, !dbg !6803
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i32 %3) #9, !dbg !6804
  %conv = sext i32 %call1 to i64, !dbg !6804
  ret i64 %conv, !dbg !6805
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeq(i64 %val, i8* %addr) #4 !dbg !6806 {
entry:
  %val.addr = alloca i64, align 8
  %addr.addr = alloca i8*, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !6811, metadata !DIExpression()), !dbg !6812
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6813, metadata !DIExpression()), !dbg !6812
  %0 = load i64, i64* %val.addr, align 8, !dbg !6812
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !6812
  %2 = bitcast i8* %1 to i64*, !dbg !6812
  call void asm sideeffect "movq $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64 %0, i64* %2) #12, !dbg !6812, !srcloc !6814
  ret void, !dbg !6812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #4 !dbg !6815 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6819, metadata !DIExpression()), !dbg !6820
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6821, metadata !DIExpression()), !dbg !6822
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !6823, metadata !DIExpression()), !dbg !6824
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !6825, metadata !DIExpression()), !dbg !6826
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6827
  %1 = load i64, i64* %size.addr, align 8, !dbg !6828
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !6829
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !6830
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #9, !dbg !6831
  ret void, !dbg !6832
}

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @switchtec_dev_read(%struct.file* %filp, i8* %data, i64 %size, i64* %off) #4 !dbg !6833 {
entry:
  %retval.i.i72 = alloca i1, align 1
  %addr.addr.i.i73 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i73, metadata !6834, metadata !DIExpression()), !dbg !6839
  %bytes.addr.i.i74 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i74, metadata !6847, metadata !DIExpression()), !dbg !6848
  %is_source.addr.i.i75 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i75, metadata !6849, metadata !DIExpression()), !dbg !6850
  %sz.i.i76 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i76, metadata !6851, metadata !DIExpression()), !dbg !6852
  %__ret_warn_on.i.i77 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i77, metadata !6853, metadata !DIExpression()), !dbg !6856
  %tmp.i.i78 = alloca i64, align 8
  %to.addr.i79 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i79, metadata !6857, metadata !DIExpression()), !dbg !6858
  %from.addr.i80 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i80, metadata !6859, metadata !DIExpression()), !dbg !6860
  %n.addr.i81 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i81, metadata !6861, metadata !DIExpression()), !dbg !6862
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6834, metadata !DIExpression()), !dbg !6863
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6847, metadata !DIExpression()), !dbg !6866
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6849, metadata !DIExpression()), !dbg !6867
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6851, metadata !DIExpression()), !dbg !6868
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6853, metadata !DIExpression()), !dbg !6869
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6857, metadata !DIExpression()), !dbg !6870
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6859, metadata !DIExpression()), !dbg !6871
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6861, metadata !DIExpression()), !dbg !6872
  %retval = alloca i64, align 8
  %filp.addr = alloca %struct.file*, align 8
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %off.addr = alloca i64*, align 8
  %stuser = alloca %struct.switchtec_user*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %rc = alloca i32, align 4
  %__ret = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret20 = alloca i64, align 8
  %__int = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp32 = alloca i32, align 4
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !6873, metadata !DIExpression()), !dbg !6874
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6875, metadata !DIExpression()), !dbg !6876
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6877, metadata !DIExpression()), !dbg !6878
  store i64* %off, i64** %off.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %off.addr, metadata !6879, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser, metadata !6881, metadata !DIExpression()), !dbg !6882
  %0 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !6883
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !6884
  %1 = load i8*, i8** %private_data, align 8, !dbg !6884
  %2 = bitcast i8* %1 to %struct.switchtec_user*, !dbg !6883
  store %struct.switchtec_user* %2, %struct.switchtec_user** %stuser, align 8, !dbg !6882
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !6885, metadata !DIExpression()), !dbg !6886
  %3 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6887
  %stdev1 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %3, i32 0, i32 0, !dbg !6888
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev1, align 8, !dbg !6888
  store %struct.switchtec_dev* %4, %struct.switchtec_dev** %stdev, align 8, !dbg !6886
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6889, metadata !DIExpression()), !dbg !6890
  %5 = load i64, i64* %size.addr, align 8, !dbg !6891
  %cmp = icmp ult i64 %5, 4, !dbg !6893
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6894

lor.lhs.false:                                    ; preds = %entry
  %6 = load i64, i64* %size.addr, align 8, !dbg !6895
  %cmp2 = icmp ugt i64 %6, 1028, !dbg !6896
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6897

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 -22, i64* %retval, align 8, !dbg !6898
  br label %return, !dbg !6898

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6899
  %call = call i32 @lock_mutex_and_test_alive(%struct.switchtec_dev* %7) #9, !dbg !6900
  store i32 %call, i32* %rc, align 4, !dbg !6901
  %8 = load i32, i32* %rc, align 4, !dbg !6902
  %tobool = icmp ne i32 %8, 0, !dbg !6902
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !6904

if.then3:                                         ; preds = %if.end
  %9 = load i32, i32* %rc, align 4, !dbg !6905
  %conv = sext i32 %9 to i64, !dbg !6905
  store i64 %conv, i64* %retval, align 8, !dbg !6906
  br label %return, !dbg !6906

if.end4:                                          ; preds = %if.end
  %10 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6907
  %state = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %10, i32 0, i32 1, !dbg !6909
  %11 = load i32, i32* %state, align 8, !dbg !6909
  %cmp5 = icmp eq i32 %11, 0, !dbg !6910
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !6911

if.then7:                                         ; preds = %if.end4
  %12 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6912
  %mrpc_mutex = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %12, i32 0, i32 17, !dbg !6914
  call void @mutex_unlock(%struct.mutex* %mrpc_mutex) #9, !dbg !6915
  store i64 -52, i64* %retval, align 8, !dbg !6916
  br label %return, !dbg !6916

if.end8:                                          ; preds = %if.end4
  %13 = load i64, i64* %size.addr, align 8, !dbg !6917
  %sub = sub i64 %13, 4, !dbg !6918
  %14 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6919
  %read_len = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %14, i32 0, i32 10, !dbg !6920
  store i64 %sub, i64* %read_len, align 8, !dbg !6921
  %15 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6922
  %mrpc_mutex9 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %15, i32 0, i32 17, !dbg !6923
  call void @mutex_unlock(%struct.mutex* %mrpc_mutex9) #9, !dbg !6924
  %16 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !6925
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %16, i32 0, i32 7, !dbg !6927
  %17 = load i32, i32* %f_flags, align 8, !dbg !6927
  %and = and i32 %17, 2048, !dbg !6928
  %tobool10 = icmp ne i32 %and, 0, !dbg !6928
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !6929

if.then11:                                        ; preds = %if.end8
  %18 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6930
  %cmd_done = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %18, i32 0, i32 5, !dbg !6933
  %19 = load i8, i8* %cmd_done, align 8, !dbg !6933
  %tobool12 = trunc i8 %19 to i1, !dbg !6933
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !6934

if.then13:                                        ; preds = %if.then11
  store i64 -11, i64* %retval, align 8, !dbg !6935
  br label %return, !dbg !6935

if.end14:                                         ; preds = %if.then11
  br label %if.end38, !dbg !6936

if.else:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !6937, metadata !DIExpression()), !dbg !6940
  store i32 0, i32* %__ret, align 4, !dbg !6940
  br label %do.body, !dbg !6940

do.body:                                          ; preds = %if.else
  br label %do.body15, !dbg !6941

do.body15:                                        ; preds = %do.body
  br label %do.end, !dbg !6943

do.end:                                           ; preds = %do.body15
  br label %do.end16, !dbg !6941

do.end16:                                         ; preds = %do.end
  %20 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6945
  %cmd_done17 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %20, i32 0, i32 5, !dbg !6945
  %21 = load i8, i8* %cmd_done17, align 8, !dbg !6945
  %tobool18 = trunc i8 %21 to i1, !dbg !6945
  br i1 %tobool18, label %if.end31, label %if.then19, !dbg !6940

if.then19:                                        ; preds = %do.end16
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !6947, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.declare(metadata i64* %__ret20, metadata !6961, metadata !DIExpression()), !dbg !6960
  store i64 0, i64* %__ret20, align 8, !dbg !6960
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #9, !dbg !6960
  br label %for.cond, !dbg !6960

for.cond:                                         ; preds = %if.end28, %if.then19
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !6962, metadata !DIExpression()), !dbg !6966
  %22 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6966
  %cmd_comp = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %22, i32 0, i32 2, !dbg !6966
  %call21 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %cmd_comp, %struct.wait_queue_entry* %__wq_entry, i32 1) #9, !dbg !6966
  store i64 %call21, i64* %__int, align 8, !dbg !6966
  %23 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6967
  %cmd_done22 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %23, i32 0, i32 5, !dbg !6967
  %24 = load i8, i8* %cmd_done22, align 8, !dbg !6967
  %tobool23 = trunc i8 %24 to i1, !dbg !6967
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6966

if.then24:                                        ; preds = %for.cond
  br label %for.end, !dbg !6967

if.end25:                                         ; preds = %for.cond
  %25 = load i64, i64* %__int, align 8, !dbg !6969
  %tobool26 = icmp ne i64 %25, 0, !dbg !6969
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !6966

if.then27:                                        ; preds = %if.end25
  %26 = load i64, i64* %__int, align 8, !dbg !6971
  store i64 %26, i64* %__ret20, align 8, !dbg !6971
  br label %__out, !dbg !6971

if.end28:                                         ; preds = %if.end25
  call void @schedule() #9, !dbg !6966
  br label %for.cond, !dbg !6973, !llvm.loop !6974

for.end:                                          ; preds = %if.then24
  %27 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6960
  %cmd_comp29 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %27, i32 0, i32 2, !dbg !6960
  call void @finish_wait(%struct.wait_queue_head* %cmd_comp29, %struct.wait_queue_entry* %__wq_entry) #9, !dbg !6960
  br label %__out, !dbg !6960

__out:                                            ; preds = %for.end, %if.then27
  call void @llvm.dbg.label(metadata !6976), !dbg !6960
  %28 = load i64, i64* %__ret20, align 8, !dbg !6960
  store i64 %28, i64* %tmp, align 8, !dbg !6960
  %29 = load i64, i64* %tmp, align 8, !dbg !6960
  %conv30 = trunc i64 %29 to i32, !dbg !6945
  store i32 %conv30, i32* %__ret, align 4, !dbg !6945
  br label %if.end31, !dbg !6945

if.end31:                                         ; preds = %__out, %do.end16
  %30 = load i32, i32* %__ret, align 4, !dbg !6940
  store i32 %30, i32* %tmp32, align 4, !dbg !6945
  %31 = load i32, i32* %tmp32, align 4, !dbg !6940
  store i32 %31, i32* %rc, align 4, !dbg !6977
  %32 = load i32, i32* %rc, align 4, !dbg !6978
  %cmp33 = icmp slt i32 %32, 0, !dbg !6980
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !6981

if.then35:                                        ; preds = %if.end31
  %33 = load i32, i32* %rc, align 4, !dbg !6982
  %conv36 = sext i32 %33 to i64, !dbg !6982
  store i64 %conv36, i64* %retval, align 8, !dbg !6983
  br label %return, !dbg !6983

if.end37:                                         ; preds = %if.end31
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end14
  %34 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6984
  %call39 = call i32 @lock_mutex_and_test_alive(%struct.switchtec_dev* %34) #9, !dbg !6985
  store i32 %call39, i32* %rc, align 4, !dbg !6986
  %35 = load i32, i32* %rc, align 4, !dbg !6987
  %tobool40 = icmp ne i32 %35, 0, !dbg !6987
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !6989

if.then41:                                        ; preds = %if.end38
  %36 = load i32, i32* %rc, align 4, !dbg !6990
  %conv42 = sext i32 %36 to i64, !dbg !6990
  store i64 %conv42, i64* %retval, align 8, !dbg !6991
  br label %return, !dbg !6991

if.end43:                                         ; preds = %if.end38
  %37 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !6992
  %state44 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %37, i32 0, i32 1, !dbg !6994
  %38 = load i32, i32* %state44, align 8, !dbg !6994
  %cmp45 = icmp ne i32 %38, 3, !dbg !6995
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !6996

if.then47:                                        ; preds = %if.end43
  %39 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !6997
  %mrpc_mutex48 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %39, i32 0, i32 17, !dbg !6999
  call void @mutex_unlock(%struct.mutex* %mrpc_mutex48) #9, !dbg !7000
  store i64 -52, i64* %retval, align 8, !dbg !7001
  br label %return, !dbg !7001

if.end49:                                         ; preds = %if.end43
  %40 = load i8*, i8** %data.addr, align 8, !dbg !7002
  %41 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7003
  %return_code = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %41, i32 0, i32 8, !dbg !7004
  %42 = bitcast i32* %return_code to i8*, !dbg !7005
  store i8* %40, i8** %to.addr.i, align 8
  store i8* %42, i8** %from.addr.i, align 8
  store i64 4, i64* %n.addr.i, align 8
  %43 = load i8*, i8** %from.addr.i, align 8, !dbg !7006
  %44 = load i64, i64* %n.addr.i, align 8, !dbg !7006
  store i8* %43, i8** %addr.addr.i.i, align 8
  store i64 %44, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !6868
  %45 = load i32, i32* %sz.i.i, align 4, !dbg !7007
  %cmp.i.i = icmp sge i32 %45, 0, !dbg !7007
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7007

land.rhs.i.i:                                     ; preds = %if.end49
  %46 = load i32, i32* %sz.i.i, align 4, !dbg !7007
  %conv.i.i = sext i32 %46 to i64, !dbg !7007
  %47 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7007
  %cmp1.i.i = icmp ult i64 %conv.i.i, %47, !dbg !7007
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end49
  %48 = phi i1 [ false, %if.end49 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7009
  %lnot.i.i = xor i1 %48, true, !dbg !7007
  %lnot.ext.i.i = zext i1 %48 to i32, !dbg !7007
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7007
  br i1 %48, label %if.then.i.i, label %if.end10.i.i, !dbg !7010

if.then.i.i:                                      ; preds = %land.end.i.i
  %49 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7011
  %50 = call i1 @llvm.is.constant.i64(i64 %49) #12, !dbg !7014
  br i1 %50, label %if.else.i.i, label %if.then5.i.i, !dbg !7015

if.then5.i.i:                                     ; preds = %if.then.i.i
  %51 = load i32, i32* %sz.i.i, align 4, !dbg !7016
  %52 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7017
  call void @copy_overflow(i32 %51, i64 %52) #11, !dbg !7018
  br label %if.end9.i.i, !dbg !7018

if.else.i.i:                                      ; preds = %if.then.i.i
  %53 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7019
  %tobool6.i.i = trunc i8 %53 to i1, !dbg !7019
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7021

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !7022
  br label %if.end.i.i, !dbg !7022

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !7023
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7024
  br label %check_copy_size.exit.i, !dbg !7024

if.end10.i.i:                                     ; preds = %land.end.i.i
  %54 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6869
  %cmp11.i.i = icmp ugt i64 %54, 2147483647, !dbg !6869
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !6869
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !6869
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !6869
  %55 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7025
  %tobool17.i.i = icmp ne i32 %55, 0, !dbg !7025
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7025
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7025
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7025
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !6869

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !7027, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !7031, !srcloc !7033
  br label %if.end31.i.i, !dbg !7034

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %56 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6869
  %tobool32.i.i = icmp ne i32 %56, 0, !dbg !6869
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !6869
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !6869
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !6869
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7025
  %57 = load i64, i64* %tmp.i.i, align 8, !dbg !6869
  %tobool38.i.i = icmp ne i64 %57, 0, !dbg !7035
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7036

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7037
  br label %check_copy_size.exit.i, !dbg !7037

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %58 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7038
  %59 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7039
  %60 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7040
  %tobool41.i.i = trunc i8 %60 to i1, !dbg !7040
  call void @check_object_size(i8* %58, i64 %59, i1 zeroext %tobool41.i.i) #11, !dbg !7041
  store i1 true, i1* %retval.i.i, align 1, !dbg !7042
  br label %check_copy_size.exit.i, !dbg !7042

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %61 = load i1, i1* %retval.i.i, align 1, !dbg !7043
  %lnot.i = xor i1 %61, true, !dbg !7006
  %lnot.ext.i = zext i1 %61 to i32, !dbg !7006
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7006
  br i1 %61, label %if.then.i, label %copy_to_user.exit, !dbg !7044

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %62 = load i8*, i8** %to.addr.i, align 8, !dbg !7045
  %63 = load i8*, i8** %from.addr.i, align 8, !dbg !7046
  %64 = load i64, i64* %n.addr.i, align 8, !dbg !7047
  %call2.i = call i64 @_copy_to_user(i8* %62, i8* %63, i64 %64) #11, !dbg !7048
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7049
  br label %copy_to_user.exit, !dbg !7050

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %65 = load i64, i64* %n.addr.i, align 8, !dbg !7051
  %conv51 = trunc i64 %65 to i32, !dbg !7052
  store i32 %conv51, i32* %rc, align 4, !dbg !7053
  %66 = load i32, i32* %rc, align 4, !dbg !7054
  %tobool52 = icmp ne i32 %66, 0, !dbg !7054
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !7056

if.then53:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %rc, align 4, !dbg !7057
  br label %out, !dbg !7059

if.end54:                                         ; preds = %copy_to_user.exit
  %67 = load i8*, i8** %data.addr, align 8, !dbg !7060
  %add.ptr = getelementptr i8, i8* %67, i64 4, !dbg !7060
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !7060
  %68 = load i8*, i8** %data.addr, align 8, !dbg !7061
  %69 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7062
  %data55 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %69, i32 0, i32 11, !dbg !7063
  %70 = bitcast [1024 x i8]* %data55 to i8*, !dbg !7064
  %71 = load i64, i64* %size.addr, align 8, !dbg !7065
  %sub56 = sub i64 %71, 4, !dbg !7066
  store i8* %68, i8** %to.addr.i79, align 8
  store i8* %70, i8** %from.addr.i80, align 8
  store i64 %sub56, i64* %n.addr.i81, align 8
  %72 = load i8*, i8** %from.addr.i80, align 8, !dbg !7067
  %73 = load i64, i64* %n.addr.i81, align 8, !dbg !7067
  store i8* %72, i8** %addr.addr.i.i73, align 8
  store i64 %73, i64* %bytes.addr.i.i74, align 8
  store i8 1, i8* %is_source.addr.i.i75, align 1
  store i32 -1, i32* %sz.i.i76, align 4, !dbg !6852
  %74 = load i32, i32* %sz.i.i76, align 4, !dbg !7068
  %cmp.i.i82 = icmp sge i32 %74, 0, !dbg !7068
  br i1 %cmp.i.i82, label %land.rhs.i.i85, label %land.end.i.i89, !dbg !7068

land.rhs.i.i85:                                   ; preds = %if.end54
  %75 = load i32, i32* %sz.i.i76, align 4, !dbg !7068
  %conv.i.i83 = sext i32 %75 to i64, !dbg !7068
  %76 = load i64, i64* %bytes.addr.i.i74, align 8, !dbg !7068
  %cmp1.i.i84 = icmp ult i64 %conv.i.i83, %76, !dbg !7068
  br label %land.end.i.i89

land.end.i.i89:                                   ; preds = %land.rhs.i.i85, %if.end54
  %77 = phi i1 [ false, %if.end54 ], [ %cmp1.i.i84, %land.rhs.i.i85 ], !dbg !7069
  %lnot.i.i86 = xor i1 %77, true, !dbg !7068
  %lnot.ext.i.i87 = zext i1 %77 to i32, !dbg !7068
  %conv4.i.i88 = sext i32 %lnot.ext.i.i87 to i64, !dbg !7068
  br i1 %77, label %if.then.i.i90, label %if.end10.i.i105, !dbg !7070

if.then.i.i90:                                    ; preds = %land.end.i.i89
  %78 = load i64, i64* %bytes.addr.i.i74, align 8, !dbg !7071
  %79 = call i1 @llvm.is.constant.i64(i64 %78) #12, !dbg !7072
  br i1 %79, label %if.else.i.i93, label %if.then5.i.i91, !dbg !7073

if.then5.i.i91:                                   ; preds = %if.then.i.i90
  %80 = load i32, i32* %sz.i.i76, align 4, !dbg !7074
  %81 = load i64, i64* %bytes.addr.i.i74, align 8, !dbg !7075
  call void @copy_overflow(i32 %80, i64 %81) #11, !dbg !7076
  br label %if.end9.i.i97, !dbg !7076

if.else.i.i93:                                    ; preds = %if.then.i.i90
  %82 = load i8, i8* %is_source.addr.i.i75, align 1, !dbg !7077
  %tobool6.i.i92 = trunc i8 %82 to i1, !dbg !7077
  br i1 %tobool6.i.i92, label %if.then7.i.i94, label %if.else8.i.i95, !dbg !7078

if.then7.i.i94:                                   ; preds = %if.else.i.i93
  call void @__bad_copy_from() #11, !dbg !7079
  br label %if.end.i.i96, !dbg !7079

if.else8.i.i95:                                   ; preds = %if.else.i.i93
  call void @__bad_copy_to() #11, !dbg !7080
  br label %if.end.i.i96

if.end.i.i96:                                     ; preds = %if.else8.i.i95, %if.then7.i.i94
  br label %if.end9.i.i97

if.end9.i.i97:                                    ; preds = %if.end.i.i96, %if.then5.i.i91
  store i1 false, i1* %retval.i.i72, align 1, !dbg !7081
  br label %check_copy_size.exit.i119, !dbg !7081

if.end10.i.i105:                                  ; preds = %land.end.i.i89
  %83 = load i64, i64* %bytes.addr.i.i74, align 8, !dbg !6856
  %cmp11.i.i98 = icmp ugt i64 %83, 2147483647, !dbg !6856
  %lnot13.i.i99 = xor i1 %cmp11.i.i98, true, !dbg !6856
  %lnot.ext16.i.i100 = zext i1 %cmp11.i.i98 to i32, !dbg !6856
  store i32 %lnot.ext16.i.i100, i32* %__ret_warn_on.i.i77, align 4, !dbg !6856
  %84 = load i32, i32* %__ret_warn_on.i.i77, align 4, !dbg !7082
  %tobool17.i.i101 = icmp ne i32 %84, 0, !dbg !7082
  %lnot18.i.i102 = xor i1 %tobool17.i.i101, true, !dbg !7082
  %lnot.ext21.i.i103 = zext i1 %tobool17.i.i101 to i32, !dbg !7082
  %conv22.i.i104 = sext i32 %lnot.ext21.i.i103 to i64, !dbg !7082
  br i1 %tobool17.i.i101, label %if.then24.i.i106, label %if.end31.i.i112, !dbg !6856

if.then24.i.i106:                                 ; preds = %if.end10.i.i105
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !7083, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !7084, !srcloc !7033
  br label %if.end31.i.i112, !dbg !7085

if.end31.i.i112:                                  ; preds = %if.then24.i.i106, %if.end10.i.i105
  %85 = load i32, i32* %__ret_warn_on.i.i77, align 4, !dbg !6856
  %tobool32.i.i107 = icmp ne i32 %85, 0, !dbg !6856
  %lnot33.i.i108 = xor i1 %tobool32.i.i107, true, !dbg !6856
  %lnot.ext36.i.i109 = zext i1 %tobool32.i.i107 to i32, !dbg !6856
  %conv37.i.i110 = sext i32 %lnot.ext36.i.i109 to i64, !dbg !6856
  store i64 %conv37.i.i110, i64* %tmp.i.i78, align 8, !dbg !7082
  %86 = load i64, i64* %tmp.i.i78, align 8, !dbg !6856
  %tobool38.i.i111 = icmp ne i64 %86, 0, !dbg !7086
  br i1 %tobool38.i.i111, label %if.then39.i.i113, label %if.end40.i.i115, !dbg !7087

if.then39.i.i113:                                 ; preds = %if.end31.i.i112
  store i1 false, i1* %retval.i.i72, align 1, !dbg !7088
  br label %check_copy_size.exit.i119, !dbg !7088

if.end40.i.i115:                                  ; preds = %if.end31.i.i112
  %87 = load i8*, i8** %addr.addr.i.i73, align 8, !dbg !7089
  %88 = load i64, i64* %bytes.addr.i.i74, align 8, !dbg !7090
  %89 = load i8, i8* %is_source.addr.i.i75, align 1, !dbg !7091
  %tobool41.i.i114 = trunc i8 %89 to i1, !dbg !7091
  call void @check_object_size(i8* %87, i64 %88, i1 zeroext %tobool41.i.i114) #11, !dbg !7092
  store i1 true, i1* %retval.i.i72, align 1, !dbg !7093
  br label %check_copy_size.exit.i119, !dbg !7093

check_copy_size.exit.i119:                        ; preds = %if.end40.i.i115, %if.then39.i.i113, %if.end9.i.i97
  %90 = load i1, i1* %retval.i.i72, align 1, !dbg !7094
  %lnot.i116 = xor i1 %90, true, !dbg !7067
  %lnot.ext.i117 = zext i1 %90 to i32, !dbg !7067
  %conv.i118 = sext i32 %lnot.ext.i117 to i64, !dbg !7067
  br i1 %90, label %if.then.i121, label %copy_to_user.exit122, !dbg !7095

if.then.i121:                                     ; preds = %check_copy_size.exit.i119
  %91 = load i8*, i8** %to.addr.i79, align 8, !dbg !7096
  %92 = load i8*, i8** %from.addr.i80, align 8, !dbg !7097
  %93 = load i64, i64* %n.addr.i81, align 8, !dbg !7098
  %call2.i120 = call i64 @_copy_to_user(i8* %91, i8* %92, i64 %93) #11, !dbg !7099
  store i64 %call2.i120, i64* %n.addr.i81, align 8, !dbg !7100
  br label %copy_to_user.exit122, !dbg !7101

copy_to_user.exit122:                             ; preds = %check_copy_size.exit.i119, %if.then.i121
  %94 = load i64, i64* %n.addr.i81, align 8, !dbg !7102
  %conv58 = trunc i64 %94 to i32, !dbg !7103
  store i32 %conv58, i32* %rc, align 4, !dbg !7104
  %95 = load i32, i32* %rc, align 4, !dbg !7105
  %tobool59 = icmp ne i32 %95, 0, !dbg !7105
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !7107

if.then60:                                        ; preds = %copy_to_user.exit122
  store i32 -14, i32* %rc, align 4, !dbg !7108
  br label %out, !dbg !7110

if.end61:                                         ; preds = %copy_to_user.exit122
  %96 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7111
  call void @stuser_set_state(%struct.switchtec_user* %96, i32 0) #9, !dbg !7112
  br label %out, !dbg !7112

out:                                              ; preds = %if.end61, %if.then60, %if.then53
  call void @llvm.dbg.label(metadata !7113), !dbg !7114
  %97 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7115
  %mrpc_mutex62 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %97, i32 0, i32 17, !dbg !7116
  call void @mutex_unlock(%struct.mutex* %mrpc_mutex62) #9, !dbg !7117
  %98 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7118
  %status = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %98, i32 0, i32 7, !dbg !7120
  %99 = load i32, i32* %status, align 8, !dbg !7120
  %cmp63 = icmp eq i32 %99, 2, !dbg !7121
  br i1 %cmp63, label %if.then65, label %if.else66, !dbg !7122

if.then65:                                        ; preds = %out
  %100 = load i64, i64* %size.addr, align 8, !dbg !7123
  store i64 %100, i64* %retval, align 8, !dbg !7124
  br label %return, !dbg !7124

if.else66:                                        ; preds = %out
  %101 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7125
  %status67 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %101, i32 0, i32 7, !dbg !7127
  %102 = load i32, i32* %status67, align 8, !dbg !7127
  %cmp68 = icmp eq i32 %102, 256, !dbg !7128
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !7129

if.then70:                                        ; preds = %if.else66
  store i64 -6, i64* %retval, align 8, !dbg !7130
  br label %return, !dbg !7130

if.else71:                                        ; preds = %if.else66
  store i64 -74, i64* %retval, align 8, !dbg !7131
  br label %return, !dbg !7131

return:                                           ; preds = %if.else71, %if.then70, %if.then65, %if.then47, %if.then41, %if.then35, %if.then13, %if.then7, %if.then3, %if.then
  %103 = load i64, i64* %retval, align 8, !dbg !7132
  ret i64 %103, !dbg !7132
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @switchtec_dev_write(%struct.file* %filp, i8* %data, i64 %size, i64* %off) #4 !dbg !7133 {
entry:
  %retval.i.i37 = alloca i1, align 1
  %addr.addr.i.i38 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i38, metadata !6834, metadata !DIExpression()), !dbg !7134
  %bytes.addr.i.i39 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i39, metadata !6847, metadata !DIExpression()), !dbg !7139
  %is_source.addr.i.i40 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i40, metadata !6849, metadata !DIExpression()), !dbg !7140
  %sz.i.i41 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i41, metadata !6851, metadata !DIExpression()), !dbg !7141
  %__ret_warn_on.i.i42 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i42, metadata !6853, metadata !DIExpression()), !dbg !7142
  %tmp.i.i43 = alloca i64, align 8
  %to.addr.i44 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i44, metadata !7143, metadata !DIExpression()), !dbg !7144
  %from.addr.i45 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i45, metadata !7145, metadata !DIExpression()), !dbg !7146
  %n.addr.i46 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i46, metadata !7147, metadata !DIExpression()), !dbg !7148
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6834, metadata !DIExpression()), !dbg !7149
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6847, metadata !DIExpression()), !dbg !7152
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6849, metadata !DIExpression()), !dbg !7153
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6851, metadata !DIExpression()), !dbg !7154
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6853, metadata !DIExpression()), !dbg !7155
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !7143, metadata !DIExpression()), !dbg !7156
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !7145, metadata !DIExpression()), !dbg !7157
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !7147, metadata !DIExpression()), !dbg !7158
  %retval = alloca i64, align 8
  %filp.addr = alloca %struct.file*, align 8
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %off.addr = alloca i64*, align 8
  %stuser = alloca %struct.switchtec_user*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %rc = alloca i32, align 4
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !7159, metadata !DIExpression()), !dbg !7160
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7161, metadata !DIExpression()), !dbg !7162
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7163, metadata !DIExpression()), !dbg !7164
  store i64* %off, i64** %off.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %off.addr, metadata !7165, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser, metadata !7167, metadata !DIExpression()), !dbg !7168
  %0 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !7169
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !7170
  %1 = load i8*, i8** %private_data, align 8, !dbg !7170
  %2 = bitcast i8* %1 to %struct.switchtec_user*, !dbg !7169
  store %struct.switchtec_user* %2, %struct.switchtec_user** %stuser, align 8, !dbg !7168
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !7171, metadata !DIExpression()), !dbg !7172
  %3 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7173
  %stdev1 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %3, i32 0, i32 0, !dbg !7174
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev1, align 8, !dbg !7174
  store %struct.switchtec_dev* %4, %struct.switchtec_dev** %stdev, align 8, !dbg !7172
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7175, metadata !DIExpression()), !dbg !7176
  %5 = load i64, i64* %size.addr, align 8, !dbg !7177
  %cmp = icmp ult i64 %5, 4, !dbg !7179
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7180

lor.lhs.false:                                    ; preds = %entry
  %6 = load i64, i64* %size.addr, align 8, !dbg !7181
  %cmp2 = icmp ugt i64 %6, 1028, !dbg !7182
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7183

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 -22, i64* %retval, align 8, !dbg !7184
  br label %return, !dbg !7184

if.end:                                           ; preds = %lor.lhs.false
  %7 = load i64, i64* %size.addr, align 8, !dbg !7185
  %sub = sub i64 %7, 4, !dbg !7186
  %8 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7187
  %data_len = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %8, i32 0, i32 9, !dbg !7188
  store i64 %sub, i64* %data_len, align 8, !dbg !7189
  %9 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7190
  %call = call i32 @lock_mutex_and_test_alive(%struct.switchtec_dev* %9) #9, !dbg !7191
  store i32 %call, i32* %rc, align 4, !dbg !7192
  %10 = load i32, i32* %rc, align 4, !dbg !7193
  %tobool = icmp ne i32 %10, 0, !dbg !7193
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !7195

if.then3:                                         ; preds = %if.end
  %11 = load i32, i32* %rc, align 4, !dbg !7196
  %conv = sext i32 %11 to i64, !dbg !7196
  store i64 %conv, i64* %retval, align 8, !dbg !7197
  br label %return, !dbg !7197

if.end4:                                          ; preds = %if.end
  %12 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7198
  %state = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %12, i32 0, i32 1, !dbg !7200
  %13 = load i32, i32* %state, align 8, !dbg !7200
  %cmp5 = icmp ne i32 %13, 0, !dbg !7201
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !7202

if.then7:                                         ; preds = %if.end4
  store i32 -52, i32* %rc, align 4, !dbg !7203
  br label %out, !dbg !7205

if.end8:                                          ; preds = %if.end4
  %14 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7206
  %cmd = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %14, i32 0, i32 6, !dbg !7207
  %15 = bitcast i32* %cmd to i8*, !dbg !7208
  %16 = load i8*, i8** %data.addr, align 8, !dbg !7209
  store i8* %15, i8** %to.addr.i, align 8
  store i8* %16, i8** %from.addr.i, align 8
  store i64 4, i64* %n.addr.i, align 8
  %17 = load i8*, i8** %to.addr.i, align 8, !dbg !7210
  %18 = load i64, i64* %n.addr.i, align 8, !dbg !7210
  store i8* %17, i8** %addr.addr.i.i, align 8
  store i64 %18, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7154
  %19 = load i32, i32* %sz.i.i, align 4, !dbg !7211
  %cmp.i.i = icmp sge i32 %19, 0, !dbg !7211
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7211

land.rhs.i.i:                                     ; preds = %if.end8
  %20 = load i32, i32* %sz.i.i, align 4, !dbg !7211
  %conv.i.i = sext i32 %20 to i64, !dbg !7211
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7211
  %cmp1.i.i = icmp ult i64 %conv.i.i, %21, !dbg !7211
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end8
  %22 = phi i1 [ false, %if.end8 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7212
  %lnot.i.i = xor i1 %22, true, !dbg !7211
  %lnot.ext.i.i = zext i1 %22 to i32, !dbg !7211
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7211
  br i1 %22, label %if.then.i.i, label %if.end10.i.i, !dbg !7213

if.then.i.i:                                      ; preds = %land.end.i.i
  %23 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7214
  %24 = call i1 @llvm.is.constant.i64(i64 %23) #12, !dbg !7215
  br i1 %24, label %if.else.i.i, label %if.then5.i.i, !dbg !7216

if.then5.i.i:                                     ; preds = %if.then.i.i
  %25 = load i32, i32* %sz.i.i, align 4, !dbg !7217
  %26 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7218
  call void @copy_overflow(i32 %25, i64 %26) #11, !dbg !7219
  br label %if.end9.i.i, !dbg !7219

if.else.i.i:                                      ; preds = %if.then.i.i
  %27 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7220
  %tobool6.i.i = trunc i8 %27 to i1, !dbg !7220
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7221

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !7222
  br label %if.end.i.i, !dbg !7222

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !7223
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7224
  br label %check_copy_size.exit.i, !dbg !7224

if.end10.i.i:                                     ; preds = %land.end.i.i
  %28 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7155
  %cmp11.i.i = icmp ugt i64 %28, 2147483647, !dbg !7155
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7155
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7155
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7155
  %29 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7225
  %tobool17.i.i = icmp ne i32 %29, 0, !dbg !7225
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7225
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7225
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7225
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7155

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !7226, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !7227, !srcloc !7033
  br label %if.end31.i.i, !dbg !7228

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %30 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7155
  %tobool32.i.i = icmp ne i32 %30, 0, !dbg !7155
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7155
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7155
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7155
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7225
  %31 = load i64, i64* %tmp.i.i, align 8, !dbg !7155
  %tobool38.i.i = icmp ne i64 %31, 0, !dbg !7229
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7230

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7231
  br label %check_copy_size.exit.i, !dbg !7231

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %32 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7232
  %33 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7233
  %34 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7234
  %tobool41.i.i = trunc i8 %34 to i1, !dbg !7234
  call void @check_object_size(i8* %32, i64 %33, i1 zeroext %tobool41.i.i) #11, !dbg !7235
  store i1 true, i1* %retval.i.i, align 1, !dbg !7236
  br label %check_copy_size.exit.i, !dbg !7236

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %35 = load i1, i1* %retval.i.i, align 1, !dbg !7237
  %lnot.i = xor i1 %35, true, !dbg !7210
  %lnot.ext.i = zext i1 %35 to i32, !dbg !7210
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7210
  br i1 %35, label %if.then.i, label %copy_from_user.exit, !dbg !7238

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %36 = load i8*, i8** %to.addr.i, align 8, !dbg !7239
  %37 = load i8*, i8** %from.addr.i, align 8, !dbg !7240
  %38 = load i64, i64* %n.addr.i, align 8, !dbg !7241
  %call2.i = call i64 @_copy_from_user(i8* %36, i8* %37, i64 %38) #11, !dbg !7242
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7243
  br label %copy_from_user.exit, !dbg !7244

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %39 = load i64, i64* %n.addr.i, align 8, !dbg !7245
  %conv10 = trunc i64 %39 to i32, !dbg !7246
  store i32 %conv10, i32* %rc, align 4, !dbg !7247
  %40 = load i32, i32* %rc, align 4, !dbg !7248
  %tobool11 = icmp ne i32 %40, 0, !dbg !7248
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !7250

if.then12:                                        ; preds = %copy_from_user.exit
  store i32 -14, i32* %rc, align 4, !dbg !7251
  br label %out, !dbg !7253

if.end13:                                         ; preds = %copy_from_user.exit
  %41 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7254
  %cmd14 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %41, i32 0, i32 6, !dbg !7254
  %42 = load i32, i32* %cmd14, align 4, !dbg !7254
  %and = and i32 %42, 65535, !dbg !7254
  %cmp15 = icmp eq i32 %and, 135, !dbg !7256
  br i1 %cmp15, label %land.lhs.true, label %lor.lhs.false17, !dbg !7257

lor.lhs.false17:                                  ; preds = %if.end13
  %43 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7258
  %cmd18 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %43, i32 0, i32 6, !dbg !7258
  %44 = load i32, i32* %cmd18, align 4, !dbg !7258
  %and19 = and i32 %44, 65535, !dbg !7258
  %cmp20 = icmp eq i32 %and19, 41, !dbg !7259
  br i1 %cmp20, label %land.lhs.true, label %if.end24, !dbg !7260

land.lhs.true:                                    ; preds = %lor.lhs.false17, %if.end13
  %call22 = call zeroext i1 @capable(i32 21) #9, !dbg !7261
  br i1 %call22, label %if.end24, label %if.then23, !dbg !7262

if.then23:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %rc, align 4, !dbg !7263
  br label %out, !dbg !7265

if.end24:                                         ; preds = %land.lhs.true, %lor.lhs.false17
  %45 = load i8*, i8** %data.addr, align 8, !dbg !7266
  %add.ptr = getelementptr i8, i8* %45, i64 4, !dbg !7266
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !7266
  %46 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7267
  %data25 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %46, i32 0, i32 11, !dbg !7268
  %47 = bitcast [1024 x i8]* %data25 to i8*, !dbg !7269
  %48 = load i8*, i8** %data.addr, align 8, !dbg !7270
  %49 = load i64, i64* %size.addr, align 8, !dbg !7271
  %sub26 = sub i64 %49, 4, !dbg !7272
  store i8* %47, i8** %to.addr.i44, align 8
  store i8* %48, i8** %from.addr.i45, align 8
  store i64 %sub26, i64* %n.addr.i46, align 8
  %50 = load i8*, i8** %to.addr.i44, align 8, !dbg !7273
  %51 = load i64, i64* %n.addr.i46, align 8, !dbg !7273
  store i8* %50, i8** %addr.addr.i.i38, align 8
  store i64 %51, i64* %bytes.addr.i.i39, align 8
  store i8 0, i8* %is_source.addr.i.i40, align 1
  store i32 -1, i32* %sz.i.i41, align 4, !dbg !7141
  %52 = load i32, i32* %sz.i.i41, align 4, !dbg !7274
  %cmp.i.i47 = icmp sge i32 %52, 0, !dbg !7274
  br i1 %cmp.i.i47, label %land.rhs.i.i50, label %land.end.i.i54, !dbg !7274

land.rhs.i.i50:                                   ; preds = %if.end24
  %53 = load i32, i32* %sz.i.i41, align 4, !dbg !7274
  %conv.i.i48 = sext i32 %53 to i64, !dbg !7274
  %54 = load i64, i64* %bytes.addr.i.i39, align 8, !dbg !7274
  %cmp1.i.i49 = icmp ult i64 %conv.i.i48, %54, !dbg !7274
  br label %land.end.i.i54

land.end.i.i54:                                   ; preds = %land.rhs.i.i50, %if.end24
  %55 = phi i1 [ false, %if.end24 ], [ %cmp1.i.i49, %land.rhs.i.i50 ], !dbg !7275
  %lnot.i.i51 = xor i1 %55, true, !dbg !7274
  %lnot.ext.i.i52 = zext i1 %55 to i32, !dbg !7274
  %conv4.i.i53 = sext i32 %lnot.ext.i.i52 to i64, !dbg !7274
  br i1 %55, label %if.then.i.i55, label %if.end10.i.i70, !dbg !7276

if.then.i.i55:                                    ; preds = %land.end.i.i54
  %56 = load i64, i64* %bytes.addr.i.i39, align 8, !dbg !7277
  %57 = call i1 @llvm.is.constant.i64(i64 %56) #12, !dbg !7278
  br i1 %57, label %if.else.i.i58, label %if.then5.i.i56, !dbg !7279

if.then5.i.i56:                                   ; preds = %if.then.i.i55
  %58 = load i32, i32* %sz.i.i41, align 4, !dbg !7280
  %59 = load i64, i64* %bytes.addr.i.i39, align 8, !dbg !7281
  call void @copy_overflow(i32 %58, i64 %59) #11, !dbg !7282
  br label %if.end9.i.i62, !dbg !7282

if.else.i.i58:                                    ; preds = %if.then.i.i55
  %60 = load i8, i8* %is_source.addr.i.i40, align 1, !dbg !7283
  %tobool6.i.i57 = trunc i8 %60 to i1, !dbg !7283
  br i1 %tobool6.i.i57, label %if.then7.i.i59, label %if.else8.i.i60, !dbg !7284

if.then7.i.i59:                                   ; preds = %if.else.i.i58
  call void @__bad_copy_from() #11, !dbg !7285
  br label %if.end.i.i61, !dbg !7285

if.else8.i.i60:                                   ; preds = %if.else.i.i58
  call void @__bad_copy_to() #11, !dbg !7286
  br label %if.end.i.i61

if.end.i.i61:                                     ; preds = %if.else8.i.i60, %if.then7.i.i59
  br label %if.end9.i.i62

if.end9.i.i62:                                    ; preds = %if.end.i.i61, %if.then5.i.i56
  store i1 false, i1* %retval.i.i37, align 1, !dbg !7287
  br label %check_copy_size.exit.i84, !dbg !7287

if.end10.i.i70:                                   ; preds = %land.end.i.i54
  %61 = load i64, i64* %bytes.addr.i.i39, align 8, !dbg !7142
  %cmp11.i.i63 = icmp ugt i64 %61, 2147483647, !dbg !7142
  %lnot13.i.i64 = xor i1 %cmp11.i.i63, true, !dbg !7142
  %lnot.ext16.i.i65 = zext i1 %cmp11.i.i63 to i32, !dbg !7142
  store i32 %lnot.ext16.i.i65, i32* %__ret_warn_on.i.i42, align 4, !dbg !7142
  %62 = load i32, i32* %__ret_warn_on.i.i42, align 4, !dbg !7288
  %tobool17.i.i66 = icmp ne i32 %62, 0, !dbg !7288
  %lnot18.i.i67 = xor i1 %tobool17.i.i66, true, !dbg !7288
  %lnot.ext21.i.i68 = zext i1 %tobool17.i.i66 to i32, !dbg !7288
  %conv22.i.i69 = sext i32 %lnot.ext21.i.i68 to i64, !dbg !7288
  br i1 %tobool17.i.i66, label %if.then24.i.i71, label %if.end31.i.i77, !dbg !7142

if.then24.i.i71:                                  ; preds = %if.end10.i.i70
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !7289, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !7290, !srcloc !7033
  br label %if.end31.i.i77, !dbg !7291

if.end31.i.i77:                                   ; preds = %if.then24.i.i71, %if.end10.i.i70
  %63 = load i32, i32* %__ret_warn_on.i.i42, align 4, !dbg !7142
  %tobool32.i.i72 = icmp ne i32 %63, 0, !dbg !7142
  %lnot33.i.i73 = xor i1 %tobool32.i.i72, true, !dbg !7142
  %lnot.ext36.i.i74 = zext i1 %tobool32.i.i72 to i32, !dbg !7142
  %conv37.i.i75 = sext i32 %lnot.ext36.i.i74 to i64, !dbg !7142
  store i64 %conv37.i.i75, i64* %tmp.i.i43, align 8, !dbg !7288
  %64 = load i64, i64* %tmp.i.i43, align 8, !dbg !7142
  %tobool38.i.i76 = icmp ne i64 %64, 0, !dbg !7292
  br i1 %tobool38.i.i76, label %if.then39.i.i78, label %if.end40.i.i80, !dbg !7293

if.then39.i.i78:                                  ; preds = %if.end31.i.i77
  store i1 false, i1* %retval.i.i37, align 1, !dbg !7294
  br label %check_copy_size.exit.i84, !dbg !7294

if.end40.i.i80:                                   ; preds = %if.end31.i.i77
  %65 = load i8*, i8** %addr.addr.i.i38, align 8, !dbg !7295
  %66 = load i64, i64* %bytes.addr.i.i39, align 8, !dbg !7296
  %67 = load i8, i8* %is_source.addr.i.i40, align 1, !dbg !7297
  %tobool41.i.i79 = trunc i8 %67 to i1, !dbg !7297
  call void @check_object_size(i8* %65, i64 %66, i1 zeroext %tobool41.i.i79) #11, !dbg !7298
  store i1 true, i1* %retval.i.i37, align 1, !dbg !7299
  br label %check_copy_size.exit.i84, !dbg !7299

check_copy_size.exit.i84:                         ; preds = %if.end40.i.i80, %if.then39.i.i78, %if.end9.i.i62
  %68 = load i1, i1* %retval.i.i37, align 1, !dbg !7300
  %lnot.i81 = xor i1 %68, true, !dbg !7273
  %lnot.ext.i82 = zext i1 %68 to i32, !dbg !7273
  %conv.i83 = sext i32 %lnot.ext.i82 to i64, !dbg !7273
  br i1 %68, label %if.then.i86, label %copy_from_user.exit87, !dbg !7301

if.then.i86:                                      ; preds = %check_copy_size.exit.i84
  %69 = load i8*, i8** %to.addr.i44, align 8, !dbg !7302
  %70 = load i8*, i8** %from.addr.i45, align 8, !dbg !7303
  %71 = load i64, i64* %n.addr.i46, align 8, !dbg !7304
  %call2.i85 = call i64 @_copy_from_user(i8* %69, i8* %70, i64 %71) #11, !dbg !7305
  store i64 %call2.i85, i64* %n.addr.i46, align 8, !dbg !7306
  br label %copy_from_user.exit87, !dbg !7307

copy_from_user.exit87:                            ; preds = %check_copy_size.exit.i84, %if.then.i86
  %72 = load i64, i64* %n.addr.i46, align 8, !dbg !7308
  %conv28 = trunc i64 %72 to i32, !dbg !7309
  store i32 %conv28, i32* %rc, align 4, !dbg !7310
  %73 = load i32, i32* %rc, align 4, !dbg !7311
  %tobool29 = icmp ne i32 %73, 0, !dbg !7311
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !7313

if.then30:                                        ; preds = %copy_from_user.exit87
  store i32 -14, i32* %rc, align 4, !dbg !7314
  br label %out, !dbg !7316

if.end31:                                         ; preds = %copy_from_user.exit87
  %74 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7317
  %call32 = call i32 @mrpc_queue_cmd(%struct.switchtec_user* %74) #9, !dbg !7318
  store i32 %call32, i32* %rc, align 4, !dbg !7319
  br label %out, !dbg !7320

out:                                              ; preds = %if.end31, %if.then30, %if.then23, %if.then12, %if.then7
  call void @llvm.dbg.label(metadata !7321), !dbg !7322
  %75 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7323
  %mrpc_mutex = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %75, i32 0, i32 17, !dbg !7324
  call void @mutex_unlock(%struct.mutex* %mrpc_mutex) #9, !dbg !7325
  %76 = load i32, i32* %rc, align 4, !dbg !7326
  %tobool33 = icmp ne i32 %76, 0, !dbg !7326
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !7328

if.then34:                                        ; preds = %out
  %77 = load i32, i32* %rc, align 4, !dbg !7329
  %conv35 = sext i32 %77 to i64, !dbg !7329
  store i64 %conv35, i64* %retval, align 8, !dbg !7330
  br label %return, !dbg !7330

if.end36:                                         ; preds = %out
  %78 = load i64, i64* %size.addr, align 8, !dbg !7331
  store i64 %78, i64* %retval, align 8, !dbg !7332
  br label %return, !dbg !7332

return:                                           ; preds = %if.end36, %if.then34, %if.then3, %if.then
  %79 = load i64, i64* %retval, align 8, !dbg !7333
  ret i64 %79, !dbg !7333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @switchtec_dev_poll(%struct.file* %filp, %struct.poll_table_struct* %wait) #4 !dbg !7334 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7339, metadata !DIExpression()), !dbg !7345
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7350, metadata !DIExpression()), !dbg !7352
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7354, metadata !DIExpression()), !dbg !7355
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7356, metadata !DIExpression()), !dbg !7357
  %retval = alloca i32, align 4
  %filp.addr = alloca %struct.file*, align 8
  %wait.addr = alloca %struct.poll_table_struct*, align 8
  %stuser = alloca %struct.switchtec_user*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %ret = alloca i32, align 4
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !7358, metadata !DIExpression()), !dbg !7359
  store %struct.poll_table_struct* %wait, %struct.poll_table_struct** %wait.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %wait.addr, metadata !7360, metadata !DIExpression()), !dbg !7361
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser, metadata !7362, metadata !DIExpression()), !dbg !7363
  %0 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !7364
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !7365
  %1 = load i8*, i8** %private_data, align 8, !dbg !7365
  %2 = bitcast i8* %1 to %struct.switchtec_user*, !dbg !7364
  store %struct.switchtec_user* %2, %struct.switchtec_user** %stuser, align 8, !dbg !7363
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !7366, metadata !DIExpression()), !dbg !7367
  %3 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7368
  %stdev1 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %3, i32 0, i32 0, !dbg !7369
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev1, align 8, !dbg !7369
  store %struct.switchtec_dev* %4, %struct.switchtec_dev** %stdev, align 8, !dbg !7367
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7370, metadata !DIExpression()), !dbg !7371
  store i32 0, i32* %ret, align 4, !dbg !7371
  %5 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !7372
  %6 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7373
  %cmd_comp = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %6, i32 0, i32 2, !dbg !7374
  %7 = load %struct.poll_table_struct*, %struct.poll_table_struct** %wait.addr, align 8, !dbg !7375
  call void @poll_wait(%struct.file* %5, %struct.wait_queue_head* %cmd_comp, %struct.poll_table_struct* %7) #9, !dbg !7376
  %8 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !7377
  %9 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7378
  %event_wq = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %9, i32 0, i32 23, !dbg !7379
  %10 = load %struct.poll_table_struct*, %struct.poll_table_struct** %wait.addr, align 8, !dbg !7380
  call void @poll_wait(%struct.file* %8, %struct.wait_queue_head* %event_wq, %struct.poll_table_struct* %10) #9, !dbg !7381
  %11 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7382
  %call = call i32 @lock_mutex_and_test_alive(%struct.switchtec_dev* %11) #9, !dbg !7384
  %tobool = icmp ne i32 %call, 0, !dbg !7384
  br i1 %tobool, label %if.then, label %if.end, !dbg !7385

if.then:                                          ; preds = %entry
  store i32 8221, i32* %retval, align 4, !dbg !7386
  br label %return, !dbg !7386

if.end:                                           ; preds = %entry
  %12 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7387
  %mrpc_mutex = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %12, i32 0, i32 17, !dbg !7388
  call void @mutex_unlock(%struct.mutex* %mrpc_mutex) #9, !dbg !7389
  %13 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7390
  %cmd_done = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %13, i32 0, i32 5, !dbg !7392
  %14 = load i8, i8* %cmd_done, align 8, !dbg !7392
  %tobool2 = trunc i8 %14 to i1, !dbg !7392
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7393

if.then3:                                         ; preds = %if.end
  %15 = load i32, i32* %ret, align 4, !dbg !7394
  %or = or i32 %15, 65, !dbg !7394
  store i32 %or, i32* %ret, align 4, !dbg !7394
  br label %if.end4, !dbg !7395

if.end4:                                          ; preds = %if.then3, %if.end
  %16 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7396
  %event_cnt = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %16, i32 0, i32 12, !dbg !7397
  %17 = load i32, i32* %event_cnt, align 8, !dbg !7397
  %18 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7398
  %event_cnt5 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %18, i32 0, i32 24, !dbg !7399
  store %struct.atomic_t* %event_cnt5, %struct.atomic_t** %v.addr.i, align 8
  %19 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7400
  %20 = bitcast %struct.atomic_t* %19 to i8*, !dbg !7400
  store i8* %20, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %21 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7401
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !7402
  %conv.i.i = trunc i64 %22 to i32, !dbg !7402
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %21, i32 %conv.i.i) #11, !dbg !7403
  %23 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7404
  %24 = load i64, i64* %size.addr.i.i, align 8, !dbg !7404
  call void @kcsan_check_access(i8* %23, i64 %24, i32 4) #11, !dbg !7404
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7405
  store %struct.atomic_t* %25, %struct.atomic_t** %v.addr.i1.i, align 8
  %26 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7406
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %26, i32 0, i32 0, !dbg !7406
  %27 = load volatile i32, i32* %counter.i.i, align 4, !dbg !7406
  %cmp = icmp ne i32 %17, %27, !dbg !7407
  br i1 %cmp, label %if.then7, label %if.end9, !dbg !7408

if.then7:                                         ; preds = %if.end4
  %28 = load i32, i32* %ret, align 4, !dbg !7409
  %or8 = or i32 %28, 130, !dbg !7409
  store i32 %or8, i32* %ret, align 4, !dbg !7409
  br label %if.end9, !dbg !7410

if.end9:                                          ; preds = %if.then7, %if.end4
  %29 = load i32, i32* %ret, align 4, !dbg !7411
  store i32 %29, i32* %retval, align 4, !dbg !7412
  br label %return, !dbg !7412

return:                                           ; preds = %if.end9, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !7413
  ret i32 %30, !dbg !7413
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @switchtec_dev_ioctl(%struct.file* %filp, i32 %cmd, i64 %arg) #4 !dbg !7414 {
entry:
  %retval = alloca i64, align 8
  %filp.addr = alloca %struct.file*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %stuser = alloca %struct.switchtec_user*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %rc = alloca i32, align 4
  %argp = alloca i8*, align 8
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !7415, metadata !DIExpression()), !dbg !7416
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !7417, metadata !DIExpression()), !dbg !7418
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !7419, metadata !DIExpression()), !dbg !7420
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser, metadata !7421, metadata !DIExpression()), !dbg !7422
  %0 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !7423
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !7424
  %1 = load i8*, i8** %private_data, align 8, !dbg !7424
  %2 = bitcast i8* %1 to %struct.switchtec_user*, !dbg !7423
  store %struct.switchtec_user* %2, %struct.switchtec_user** %stuser, align 8, !dbg !7422
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !7425, metadata !DIExpression()), !dbg !7426
  %3 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7427
  %stdev1 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %3, i32 0, i32 0, !dbg !7428
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev1, align 8, !dbg !7428
  store %struct.switchtec_dev* %4, %struct.switchtec_dev** %stdev, align 8, !dbg !7426
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7429, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.declare(metadata i8** %argp, metadata !7431, metadata !DIExpression()), !dbg !7432
  %5 = load i64, i64* %arg.addr, align 8, !dbg !7433
  %6 = inttoptr i64 %5 to i8*, !dbg !7434
  store i8* %6, i8** %argp, align 8, !dbg !7432
  %7 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7435
  %call = call i32 @lock_mutex_and_test_alive(%struct.switchtec_dev* %7) #9, !dbg !7436
  store i32 %call, i32* %rc, align 4, !dbg !7437
  %8 = load i32, i32* %rc, align 4, !dbg !7438
  %tobool = icmp ne i32 %8, 0, !dbg !7438
  br i1 %tobool, label %if.then, label %if.end, !dbg !7440

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %rc, align 4, !dbg !7441
  %conv = sext i32 %9 to i64, !dbg !7441
  store i64 %conv, i64* %retval, align 8, !dbg !7442
  br label %return, !dbg !7442

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %cmd.addr, align 4, !dbg !7443
  switch i32 %10, label %sw.default [
    i32 -2146412736, label %sw.bb
    i32 -1072670911, label %sw.bb3
    i32 -2120722622, label %sw.bb5
    i32 -1071098045, label %sw.bb7
    i32 -1072933052, label %sw.bb9
    i32 -1072933051, label %sw.bb11
    i32 -2066196670, label %sw.bb13
  ], !dbg !7444

sw.bb:                                            ; preds = %if.end
  %11 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7445
  %12 = load i8*, i8** %argp, align 8, !dbg !7447
  %13 = bitcast i8* %12 to %struct.switchtec_ioctl_flash_info*, !dbg !7447
  %call2 = call i32 @ioctl_flash_info(%struct.switchtec_dev* %11, %struct.switchtec_ioctl_flash_info* %13) #9, !dbg !7448
  store i32 %call2, i32* %rc, align 4, !dbg !7449
  br label %sw.epilog, !dbg !7450

sw.bb3:                                           ; preds = %if.end
  %14 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7451
  %15 = load i8*, i8** %argp, align 8, !dbg !7452
  %16 = bitcast i8* %15 to %struct.switchtec_ioctl_flash_part_info*, !dbg !7452
  %call4 = call i32 @ioctl_flash_part_info(%struct.switchtec_dev* %14, %struct.switchtec_ioctl_flash_part_info* %16) #9, !dbg !7453
  store i32 %call4, i32* %rc, align 4, !dbg !7454
  br label %sw.epilog, !dbg !7455

sw.bb5:                                           ; preds = %if.end
  %17 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7456
  %18 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7457
  %19 = load i8*, i8** %argp, align 8, !dbg !7458
  %20 = bitcast i8* %19 to %struct.switchtec_ioctl_event_summary*, !dbg !7458
  %call6 = call i32 @ioctl_event_summary(%struct.switchtec_dev* %17, %struct.switchtec_user* %18, %struct.switchtec_ioctl_event_summary* %20, i64 408) #9, !dbg !7459
  store i32 %call6, i32* %rc, align 4, !dbg !7460
  br label %sw.epilog, !dbg !7461

sw.bb7:                                           ; preds = %if.end
  %21 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7462
  %22 = load i8*, i8** %argp, align 8, !dbg !7463
  %23 = bitcast i8* %22 to %struct.switchtec_ioctl_event_ctl*, !dbg !7463
  %call8 = call i32 @ioctl_event_ctl(%struct.switchtec_dev* %21, %struct.switchtec_ioctl_event_ctl* %23) #9, !dbg !7464
  store i32 %call8, i32* %rc, align 4, !dbg !7465
  br label %sw.epilog, !dbg !7466

sw.bb9:                                           ; preds = %if.end
  %24 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7467
  %25 = load i8*, i8** %argp, align 8, !dbg !7468
  %26 = bitcast i8* %25 to %struct.switchtec_ioctl_pff_port*, !dbg !7468
  %call10 = call i32 @ioctl_pff_to_port(%struct.switchtec_dev* %24, %struct.switchtec_ioctl_pff_port* %26) #9, !dbg !7469
  store i32 %call10, i32* %rc, align 4, !dbg !7470
  br label %sw.epilog, !dbg !7471

sw.bb11:                                          ; preds = %if.end
  %27 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7472
  %28 = load i8*, i8** %argp, align 8, !dbg !7473
  %29 = bitcast i8* %28 to %struct.switchtec_ioctl_pff_port*, !dbg !7473
  %call12 = call i32 @ioctl_port_to_pff(%struct.switchtec_dev* %27, %struct.switchtec_ioctl_pff_port* %29) #9, !dbg !7474
  store i32 %call12, i32* %rc, align 4, !dbg !7475
  br label %sw.epilog, !dbg !7476

sw.bb13:                                          ; preds = %if.end
  %30 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7477
  %31 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7478
  %32 = load i8*, i8** %argp, align 8, !dbg !7479
  %33 = bitcast i8* %32 to %struct.switchtec_ioctl_event_summary*, !dbg !7479
  %call14 = call i32 @ioctl_event_summary(%struct.switchtec_dev* %30, %struct.switchtec_user* %31, %struct.switchtec_ioctl_event_summary* %33, i64 1240) #9, !dbg !7480
  store i32 %call14, i32* %rc, align 4, !dbg !7481
  br label %sw.epilog, !dbg !7482

sw.default:                                       ; preds = %if.end
  store i32 -25, i32* %rc, align 4, !dbg !7483
  br label %sw.epilog, !dbg !7484

sw.epilog:                                        ; preds = %sw.default, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb
  %34 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7485
  %mrpc_mutex = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %34, i32 0, i32 17, !dbg !7486
  call void @mutex_unlock(%struct.mutex* %mrpc_mutex) #9, !dbg !7487
  %35 = load i32, i32* %rc, align 4, !dbg !7488
  %conv15 = sext i32 %35 to i64, !dbg !7488
  store i64 %conv15, i64* %retval, align 8, !dbg !7489
  br label %return, !dbg !7489

return:                                           ; preds = %sw.epilog, %if.then
  %36 = load i64, i64* %retval, align 8, !dbg !7490
  ret i64 %36, !dbg !7490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @switchtec_dev_open(%struct.inode* %inode, %struct.file* %filp) #4 !dbg !7491 {
entry:
  %retval = alloca i32, align 4
  %inode.addr = alloca %struct.inode*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %stuser = alloca %struct.switchtec_user*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.switchtec_dev*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !7492, metadata !DIExpression()), !dbg !7493
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !7494, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !7496, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser, metadata !7498, metadata !DIExpression()), !dbg !7499
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7500, metadata !DIExpression()), !dbg !7502
  %0 = load %struct.inode*, %struct.inode** %inode.addr, align 8, !dbg !7502
  %1 = getelementptr inbounds %struct.inode, %struct.inode* %0, i32 0, i32 40, !dbg !7502
  %i_cdev = bitcast %union.anon.59* %1 to %struct.cdev**, !dbg !7502
  %2 = load %struct.cdev*, %struct.cdev** %i_cdev, align 8, !dbg !7502
  %3 = bitcast %struct.cdev* %2 to i8*, !dbg !7502
  store i8* %3, i8** %__mptr, align 8, !dbg !7502
  br label %do.body, !dbg !7502

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7503

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !7502
  %add.ptr = getelementptr i8, i8* %4, i64 -704, !dbg !7502
  %5 = bitcast i8* %add.ptr to %struct.switchtec_dev*, !dbg !7502
  store %struct.switchtec_dev* %5, %struct.switchtec_dev** %tmp, align 8, !dbg !7503
  %6 = load %struct.switchtec_dev*, %struct.switchtec_dev** %tmp, align 8, !dbg !7502
  store %struct.switchtec_dev* %6, %struct.switchtec_dev** %stdev, align 8, !dbg !7505
  %7 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7506
  %call = call %struct.switchtec_user* @stuser_create(%struct.switchtec_dev* %7) #9, !dbg !7507
  store %struct.switchtec_user* %call, %struct.switchtec_user** %stuser, align 8, !dbg !7508
  %8 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7509
  %9 = bitcast %struct.switchtec_user* %8 to i8*, !dbg !7509
  %call1 = call zeroext i1 @IS_ERR(i8* %9) #9, !dbg !7511
  br i1 %call1, label %if.then, label %if.end, !dbg !7512

if.then:                                          ; preds = %do.end
  %10 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7513
  %11 = bitcast %struct.switchtec_user* %10 to i8*, !dbg !7513
  %call2 = call i64 @PTR_ERR(i8* %11) #9, !dbg !7514
  %conv = trunc i64 %call2 to i32, !dbg !7514
  store i32 %conv, i32* %retval, align 4, !dbg !7515
  br label %return, !dbg !7515

if.end:                                           ; preds = %do.end
  %12 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7516
  %13 = bitcast %struct.switchtec_user* %12 to i8*, !dbg !7516
  %14 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !7517
  %private_data = getelementptr inbounds %struct.file, %struct.file* %14, i32 0, i32 15, !dbg !7518
  store i8* %13, i8** %private_data, align 8, !dbg !7519
  %15 = load %struct.inode*, %struct.inode** %inode.addr, align 8, !dbg !7520
  %16 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !7521
  %call3 = call i32 @stream_open(%struct.inode* %15, %struct.file* %16) #9, !dbg !7522
  store i32 0, i32* %retval, align 4, !dbg !7523
  br label %return, !dbg !7523

return:                                           ; preds = %if.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !7524
  ret i32 %17, !dbg !7524
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @switchtec_dev_release(%struct.inode* %inode, %struct.file* %filp) #4 !dbg !7525 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %stuser = alloca %struct.switchtec_user*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !7526, metadata !DIExpression()), !dbg !7527
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !7528, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser, metadata !7530, metadata !DIExpression()), !dbg !7531
  %0 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !7532
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !7533
  %1 = load i8*, i8** %private_data, align 8, !dbg !7533
  %2 = bitcast i8* %1 to %struct.switchtec_user*, !dbg !7532
  store %struct.switchtec_user* %2, %struct.switchtec_user** %stuser, align 8, !dbg !7531
  %3 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !7534
  call void @stuser_put(%struct.switchtec_user* %3) #9, !dbg !7535
  ret i32 0, !dbg !7536
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @lock_mutex_and_test_alive(%struct.switchtec_dev* %stdev) #4 !dbg !7537 {
entry:
  %retval = alloca i32, align 4
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !7538, metadata !DIExpression()), !dbg !7539
  %0 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !7540
  %mrpc_mutex = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %0, i32 0, i32 17, !dbg !7542
  %call = call i32 @mutex_lock_interruptible(%struct.mutex* %mrpc_mutex) #9, !dbg !7543
  %tobool = icmp ne i32 %call, 0, !dbg !7543
  br i1 %tobool, label %if.then, label %if.end, !dbg !7544

if.then:                                          ; preds = %entry
  store i32 -4, i32* %retval, align 4, !dbg !7545
  br label %return, !dbg !7545

if.end:                                           ; preds = %entry
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !7546
  %alive = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 22, !dbg !7548
  %2 = load i8, i8* %alive, align 8, !dbg !7548
  %tobool1 = trunc i8 %2 to i1, !dbg !7548
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !7549

if.then2:                                         ; preds = %if.end
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !7550
  %mrpc_mutex3 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 17, !dbg !7552
  call void @mutex_unlock(%struct.mutex* %mrpc_mutex3) #9, !dbg !7553
  store i32 -19, i32* %retval, align 4, !dbg !7554
  br label %return, !dbg !7554

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7555
  br label %return, !dbg !7555

return:                                           ; preds = %if.end4, %if.then2, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !7556
  ret i32 %4, !dbg !7556
}

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #1

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #1

; Function Attrs: noredzone
declare dso_local void @schedule() #1

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #1

; Function Attrs: noredzone
declare dso_local i32 @mutex_lock_interruptible(%struct.mutex*) #1

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #4 !dbg !7557 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7560, metadata !DIExpression()), !dbg !7561
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7562, metadata !DIExpression()), !dbg !7563
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7564, metadata !DIExpression()), !dbg !7566
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !7566
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !7567
  %tobool = icmp ne i32 %0, 0, !dbg !7567
  %lnot = xor i1 %tobool, true, !dbg !7567
  %lnot1 = xor i1 %lnot, true, !dbg !7567
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7567
  %conv = sext i32 %lnot.ext to i64, !dbg !7567
  %tobool2 = icmp ne i64 %conv, 0, !dbg !7567
  br i1 %tobool2, label %if.then, label %if.end, !dbg !7566

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7567

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !7569

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !7571

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !7569
  %2 = load i64, i64* %count.addr, align 8, !dbg !7569
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.34, i64 0, i64 0), i32 %1, i64 %2) #9, !dbg !7569
  br label %do.body4, !dbg !7569

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !7573

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !7575

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !7573

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 134, i32 2313, i64 12) #12, !dbg !7577, !srcloc !7579
  br label %do.end8, !dbg !7577

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #12, !dbg !7580, !srcloc !7582
  br label %do.body9, !dbg !7573

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !7583

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !7573

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !7569

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !7585

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !7569

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !7569

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !7566
  %tobool15 = icmp ne i32 %3, 0, !dbg !7566
  %lnot16 = xor i1 %tobool15, true, !dbg !7566
  %lnot18 = xor i1 %lnot16, true, !dbg !7566
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !7566
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !7566
  store i64 %conv20, i64* %tmp, align 8, !dbg !7567
  %4 = load i64, i64* %tmp, align 8, !dbg !7566
  ret void, !dbg !7587
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #1

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #4 !dbg !7588 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7591, metadata !DIExpression()), !dbg !7592
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7593, metadata !DIExpression()), !dbg !7594
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !7595, metadata !DIExpression()), !dbg !7596
  ret void, !dbg !7597
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mrpc_queue_cmd(%struct.switchtec_user* %stuser) #4 !dbg !7598 {
entry:
  %stuser.addr = alloca %struct.switchtec_user*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  store %struct.switchtec_user* %stuser, %struct.switchtec_user** %stuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser.addr, metadata !7601, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !7603, metadata !DIExpression()), !dbg !7604
  %0 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser.addr, align 8, !dbg !7605
  %stdev1 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %0, i32 0, i32 0, !dbg !7606
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev1, align 8, !dbg !7606
  store %struct.switchtec_dev* %1, %struct.switchtec_dev** %stdev, align 8, !dbg !7604
  %2 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser.addr, align 8, !dbg !7607
  %kref = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %2, i32 0, i32 3, !dbg !7608
  call void @kref_get(%struct.kref* %kref) #9, !dbg !7609
  %3 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser.addr, align 8, !dbg !7610
  %read_len = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %3, i32 0, i32 10, !dbg !7611
  store i64 1024, i64* %read_len, align 8, !dbg !7612
  %4 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser.addr, align 8, !dbg !7613
  call void @stuser_set_state(%struct.switchtec_user* %4, i32 1) #9, !dbg !7614
  %5 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser.addr, align 8, !dbg !7615
  %cmd_done = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %5, i32 0, i32 5, !dbg !7616
  store i8 0, i8* %cmd_done, align 8, !dbg !7617
  %6 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser.addr, align 8, !dbg !7618
  %list = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %6, i32 0, i32 4, !dbg !7619
  %7 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7620
  %mrpc_queue = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %7, i32 0, i32 18, !dbg !7621
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %mrpc_queue) #9, !dbg !7622
  %8 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !7623
  call void @mrpc_cmd_submit(%struct.switchtec_dev* %8) #9, !dbg !7624
  ret i32 0, !dbg !7625
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_get(%struct.kref* %kref) #4 !dbg !7626 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7627, metadata !DIExpression()), !dbg !7628
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7629
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !7630
  call void @refcount_inc(%struct.refcount_struct* %refcount) #9, !dbg !7631
  ret void, !dbg !7632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #4 !dbg !7633 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7634, metadata !DIExpression()), !dbg !7635
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7636, metadata !DIExpression()), !dbg !7637
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7638
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7639
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7640
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7640
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7641
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #9, !dbg !7642
  ret void, !dbg !7643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #4 !dbg !7644 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7647, metadata !DIExpression()), !dbg !7648
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7649
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #9, !dbg !7650
  ret void, !dbg !7651
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #4 !dbg !7652 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7655, metadata !DIExpression()), !dbg !7656
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !7657, metadata !DIExpression()), !dbg !7658
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7659
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !7660
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #9, !dbg !7661
  ret void, !dbg !7662
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #4 !dbg !7663 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !7666, metadata !DIExpression()), !dbg !7668
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7672, metadata !DIExpression()), !dbg !7673
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !7674, metadata !DIExpression()), !dbg !7676
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6372, metadata !DIExpression()), !dbg !7677
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6376, metadata !DIExpression()), !dbg !7679
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !7680, metadata !DIExpression()), !dbg !7681
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7682, metadata !DIExpression()), !dbg !7683
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7684, metadata !DIExpression()), !dbg !7685
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7686, metadata !DIExpression()), !dbg !7687
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !7688, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.declare(metadata i32* %old, metadata !7690, metadata !DIExpression()), !dbg !7691
  %0 = load i32, i32* %i.addr, align 4, !dbg !7692
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7693
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !7694
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7695
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !7695
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7696
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !7697
  %conv.i.i = trunc i64 %5 to i32, !dbg !7697
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #11, !dbg !7698
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7699
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7699
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #11, !dbg !7699
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !7700
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7701
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !7676
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !7676
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !7676
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7676
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !7676
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #12, !dbg !7676, !srcloc !7702
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !7676
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !7676
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !7676
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !7676
  store i32 %15, i32* %old, align 4, !dbg !7691
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !7703
  %tobool = icmp ne i32* %16, null, !dbg !7703
  br i1 %tobool, label %if.then, label %if.end, !dbg !7705

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !7706
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !7707
  store i32 %17, i32* %18, align 4, !dbg !7708
  br label %if.end, !dbg !7709

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !7710
  %tobool1 = icmp ne i32 %19, 0, !dbg !7710
  %lnot = xor i1 %tobool1, true, !dbg !7710
  %lnot2 = xor i1 %lnot, true, !dbg !7710
  %lnot3 = xor i1 %lnot2, true, !dbg !7710
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7710
  %conv = sext i32 %lnot.ext to i64, !dbg !7710
  %tobool4 = icmp ne i64 %conv, 0, !dbg !7710
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !7712

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7713
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #9, !dbg !7714
  br label %if.end17, !dbg !7714

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !7715
  %cmp = icmp slt i32 %21, 0, !dbg !7715
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7715

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !7715
  %23 = load i32, i32* %i.addr, align 4, !dbg !7715
  %add = add i32 %22, %23, !dbg !7715
  %cmp7 = icmp slt i32 %add, 0, !dbg !7715
  br label %lor.end, !dbg !7715

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !7715
  %lnot11 = xor i1 %lnot9, true, !dbg !7715
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !7715
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !7715
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !7715
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !7717

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7718
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #9, !dbg !7719
  br label %if.end16, !dbg !7719

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !7720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #4 !dbg !7721 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7724, metadata !DIExpression()), !dbg !7725
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7726, metadata !DIExpression()), !dbg !7727
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7728, metadata !DIExpression()), !dbg !7729
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7730
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7732
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7733
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #9, !dbg !7734
  br i1 %call, label %if.end, label %if.then, !dbg !7735

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !7736

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7737
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7738
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !7739
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !7740
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7741
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7742
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !7743
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !7744
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7745
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7746
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !7747
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !7748
  br label %do.body, !dbg !7749

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !7750

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !7752

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !7750

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7754
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7754
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !7754
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !7754
  br label %do.end7, !dbg !7754

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !7750

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !7756
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #4 !dbg !7757 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7760, metadata !DIExpression()), !dbg !7761
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7762, metadata !DIExpression()), !dbg !7763
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7764, metadata !DIExpression()), !dbg !7765
  ret i1 true, !dbg !7766
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @poll_wait(%struct.file* %filp, %struct.wait_queue_head* %wait_address, %struct.poll_table_struct* %p) #4 !dbg !7767 {
entry:
  %filp.addr = alloca %struct.file*, align 8
  %wait_address.addr = alloca %struct.wait_queue_head*, align 8
  %p.addr = alloca %struct.poll_table_struct*, align 8
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !7770, metadata !DIExpression()), !dbg !7771
  store %struct.wait_queue_head* %wait_address, %struct.wait_queue_head** %wait_address.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wait_queue_head** %wait_address.addr, metadata !7772, metadata !DIExpression()), !dbg !7773
  store %struct.poll_table_struct* %p, %struct.poll_table_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %p.addr, metadata !7774, metadata !DIExpression()), !dbg !7775
  %0 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !7776
  %tobool = icmp ne %struct.poll_table_struct* %0, null, !dbg !7776
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7778

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !7779
  %_qproc = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %1, i32 0, i32 0, !dbg !7780
  %2 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc, align 8, !dbg !7780
  %tobool1 = icmp ne void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)* %2, null, !dbg !7779
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !7781

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !7782
  %tobool3 = icmp ne %struct.wait_queue_head* %3, null, !dbg !7782
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7783

if.then:                                          ; preds = %land.lhs.true2
  %4 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !7784
  %_qproc4 = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %4, i32 0, i32 0, !dbg !7785
  %5 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc4, align 8, !dbg !7785
  %6 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !7786
  %7 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !7787
  %8 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !7788
  call void %5(%struct.file* %6, %struct.wait_queue_head* %7, %struct.poll_table_struct* %8) #9, !dbg !7784
  br label %if.end, !dbg !7784

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !7789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #4 !dbg !7790 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7791, metadata !DIExpression()), !dbg !7792
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7793, metadata !DIExpression()), !dbg !7794
  ret i1 true, !dbg !7795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ioctl_flash_info(%struct.switchtec_dev* %stdev, %struct.switchtec_ioctl_flash_info* %uinfo) #4 !dbg !7796 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6834, metadata !DIExpression()), !dbg !7806
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6847, metadata !DIExpression()), !dbg !7810
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6849, metadata !DIExpression()), !dbg !7811
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6851, metadata !DIExpression()), !dbg !7812
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6853, metadata !DIExpression()), !dbg !7813
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6857, metadata !DIExpression()), !dbg !7814
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6859, metadata !DIExpression()), !dbg !7815
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6861, metadata !DIExpression()), !dbg !7816
  %retval = alloca i32, align 4
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %uinfo.addr = alloca %struct.switchtec_ioctl_flash_info*, align 8
  %info = alloca %struct.switchtec_ioctl_flash_info, align 8
  %fi = alloca %struct.flash_info_regs*, align 8
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !7817, metadata !DIExpression()), !dbg !7818
  store %struct.switchtec_ioctl_flash_info* %uinfo, %struct.switchtec_ioctl_flash_info** %uinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_flash_info** %uinfo.addr, metadata !7819, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_flash_info* %info, metadata !7821, metadata !DIExpression()), !dbg !7822
  %0 = bitcast %struct.switchtec_ioctl_flash_info* %info to i8*, !dbg !7822
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !7822
  call void @llvm.dbg.declare(metadata %struct.flash_info_regs** %fi, metadata !7823, metadata !DIExpression()), !dbg !7824
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !7825
  %mmio_flash_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 12, !dbg !7826
  %2 = load %struct.flash_info_regs*, %struct.flash_info_regs** %mmio_flash_info, align 8, !dbg !7826
  store %struct.flash_info_regs* %2, %struct.flash_info_regs** %fi, align 8, !dbg !7824
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !7827
  %gen = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 3, !dbg !7829
  %4 = load i32, i32* %gen, align 8, !dbg !7829
  %cmp = icmp eq i32 %4, 0, !dbg !7830
  br i1 %cmp, label %if.then, label %if.else, !dbg !7831

if.then:                                          ; preds = %entry
  %5 = load %struct.flash_info_regs*, %struct.flash_info_regs** %fi, align 8, !dbg !7832
  %6 = getelementptr inbounds %struct.flash_info_regs, %struct.flash_info_regs* %5, i32 0, i32 0, !dbg !7834
  %gen3 = bitcast %union.anon.68* %6 to %struct.flash_info_regs_gen3*, !dbg !7834
  %flash_length = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %gen3, i32 0, i32 5, !dbg !7835
  %7 = bitcast i32* %flash_length to i8*, !dbg !7836
  %call = call i32 @ioread32(i8* %7) #9, !dbg !7837
  %conv = zext i32 %call to i64, !dbg !7837
  %flash_length1 = getelementptr inbounds %struct.switchtec_ioctl_flash_info, %struct.switchtec_ioctl_flash_info* %info, i32 0, i32 0, !dbg !7838
  store i64 %conv, i64* %flash_length1, align 8, !dbg !7839
  %num_partitions = getelementptr inbounds %struct.switchtec_ioctl_flash_info, %struct.switchtec_ioctl_flash_info* %info, i32 0, i32 1, !dbg !7840
  store i32 13, i32* %num_partitions, align 8, !dbg !7841
  br label %if.end12, !dbg !7842

if.else:                                          ; preds = %entry
  %8 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !7843
  %gen2 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %8, i32 0, i32 3, !dbg !7845
  %9 = load i32, i32* %gen2, align 8, !dbg !7845
  %cmp3 = icmp eq i32 %9, 1, !dbg !7846
  br i1 %cmp3, label %if.then5, label %if.else11, !dbg !7847

if.then5:                                         ; preds = %if.else
  %10 = load %struct.flash_info_regs*, %struct.flash_info_regs** %fi, align 8, !dbg !7848
  %11 = getelementptr inbounds %struct.flash_info_regs, %struct.flash_info_regs* %10, i32 0, i32 0, !dbg !7850
  %gen4 = bitcast %union.anon.68* %11 to %struct.flash_info_regs_gen4*, !dbg !7850
  %flash_length6 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %gen4, i32 0, i32 1, !dbg !7851
  %12 = bitcast i32* %flash_length6 to i8*, !dbg !7852
  %call7 = call i32 @ioread32(i8* %12) #9, !dbg !7853
  %conv8 = zext i32 %call7 to i64, !dbg !7853
  %flash_length9 = getelementptr inbounds %struct.switchtec_ioctl_flash_info, %struct.switchtec_ioctl_flash_info* %info, i32 0, i32 0, !dbg !7854
  store i64 %conv8, i64* %flash_length9, align 8, !dbg !7855
  %num_partitions10 = getelementptr inbounds %struct.switchtec_ioctl_flash_info, %struct.switchtec_ioctl_flash_info* %info, i32 0, i32 1, !dbg !7856
  store i32 19, i32* %num_partitions10, align 8, !dbg !7857
  br label %if.end, !dbg !7858

if.else11:                                        ; preds = %if.else
  store i32 -524, i32* %retval, align 4, !dbg !7859
  br label %return, !dbg !7859

if.end:                                           ; preds = %if.then5
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %13 = load %struct.switchtec_ioctl_flash_info*, %struct.switchtec_ioctl_flash_info** %uinfo.addr, align 8, !dbg !7861
  %14 = bitcast %struct.switchtec_ioctl_flash_info* %13 to i8*, !dbg !7861
  %15 = bitcast %struct.switchtec_ioctl_flash_info* %info to i8*, !dbg !7862
  store i8* %14, i8** %to.addr.i, align 8
  store i8* %15, i8** %from.addr.i, align 8
  store i64 16, i64* %n.addr.i, align 8
  %16 = load i8*, i8** %from.addr.i, align 8, !dbg !7863
  %17 = load i64, i64* %n.addr.i, align 8, !dbg !7863
  store i8* %16, i8** %addr.addr.i.i, align 8
  store i64 %17, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7812
  %18 = load i32, i32* %sz.i.i, align 4, !dbg !7864
  %cmp.i.i = icmp sge i32 %18, 0, !dbg !7864
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7864

land.rhs.i.i:                                     ; preds = %if.end12
  %19 = load i32, i32* %sz.i.i, align 4, !dbg !7864
  %conv.i.i = sext i32 %19 to i64, !dbg !7864
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7864
  %cmp1.i.i = icmp ult i64 %conv.i.i, %20, !dbg !7864
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end12
  %21 = phi i1 [ false, %if.end12 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7865
  %lnot.i.i = xor i1 %21, true, !dbg !7864
  %lnot.ext.i.i = zext i1 %21 to i32, !dbg !7864
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7864
  br i1 %21, label %if.then.i.i, label %if.end10.i.i, !dbg !7866

if.then.i.i:                                      ; preds = %land.end.i.i
  %22 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7867
  %23 = call i1 @llvm.is.constant.i64(i64 %22) #12, !dbg !7868
  br i1 %23, label %if.else.i.i, label %if.then5.i.i, !dbg !7869

if.then5.i.i:                                     ; preds = %if.then.i.i
  %24 = load i32, i32* %sz.i.i, align 4, !dbg !7870
  %25 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7871
  call void @copy_overflow(i32 %24, i64 %25) #11, !dbg !7872
  br label %if.end9.i.i, !dbg !7872

if.else.i.i:                                      ; preds = %if.then.i.i
  %26 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7873
  %tobool6.i.i = trunc i8 %26 to i1, !dbg !7873
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7874

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !7875
  br label %if.end.i.i, !dbg !7875

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !7876
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7877
  br label %check_copy_size.exit.i, !dbg !7877

if.end10.i.i:                                     ; preds = %land.end.i.i
  %27 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7813
  %cmp11.i.i = icmp ugt i64 %27, 2147483647, !dbg !7813
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7813
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7813
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7813
  %28 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7878
  %tobool17.i.i = icmp ne i32 %28, 0, !dbg !7878
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7878
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7878
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7878
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7813

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !7879, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !7880, !srcloc !7033
  br label %if.end31.i.i, !dbg !7881

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %29 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7813
  %tobool32.i.i = icmp ne i32 %29, 0, !dbg !7813
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7813
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7813
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7813
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7878
  %30 = load i64, i64* %tmp.i.i, align 8, !dbg !7813
  %tobool38.i.i = icmp ne i64 %30, 0, !dbg !7882
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7883

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7884
  br label %check_copy_size.exit.i, !dbg !7884

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %31 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7885
  %32 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7886
  %33 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7887
  %tobool41.i.i = trunc i8 %33 to i1, !dbg !7887
  call void @check_object_size(i8* %31, i64 %32, i1 zeroext %tobool41.i.i) #11, !dbg !7888
  store i1 true, i1* %retval.i.i, align 1, !dbg !7889
  br label %check_copy_size.exit.i, !dbg !7889

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %34 = load i1, i1* %retval.i.i, align 1, !dbg !7890
  %lnot.i = xor i1 %34, true, !dbg !7863
  %lnot.ext.i = zext i1 %34 to i32, !dbg !7863
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7863
  br i1 %34, label %if.then.i, label %copy_to_user.exit, !dbg !7891

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %35 = load i8*, i8** %to.addr.i, align 8, !dbg !7892
  %36 = load i8*, i8** %from.addr.i, align 8, !dbg !7893
  %37 = load i64, i64* %n.addr.i, align 8, !dbg !7894
  %call2.i = call i64 @_copy_to_user(i8* %35, i8* %36, i64 %37) #11, !dbg !7895
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7896
  br label %copy_to_user.exit, !dbg !7897

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %38 = load i64, i64* %n.addr.i, align 8, !dbg !7898
  %tobool = icmp ne i64 %38, 0, !dbg !7899
  br i1 %tobool, label %if.then14, label %if.end15, !dbg !7900

if.then14:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7901
  br label %return, !dbg !7901

if.end15:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !7902
  br label %return, !dbg !7902

return:                                           ; preds = %if.end15, %if.then14, %if.else11
  %39 = load i32, i32* %retval, align 4, !dbg !7903
  ret i32 %39, !dbg !7903
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ioctl_flash_part_info(%struct.switchtec_dev* %stdev, %struct.switchtec_ioctl_flash_part_info* %uinfo) #4 !dbg !7904 {
entry:
  %retval.i.i20 = alloca i1, align 1
  %addr.addr.i.i21 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i21, metadata !6834, metadata !DIExpression()), !dbg !7914
  %bytes.addr.i.i22 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i22, metadata !6847, metadata !DIExpression()), !dbg !7918
  %is_source.addr.i.i23 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i23, metadata !6849, metadata !DIExpression()), !dbg !7919
  %sz.i.i24 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i24, metadata !6851, metadata !DIExpression()), !dbg !7920
  %__ret_warn_on.i.i25 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i25, metadata !6853, metadata !DIExpression()), !dbg !7921
  %tmp.i.i26 = alloca i64, align 8
  %to.addr.i27 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i27, metadata !6857, metadata !DIExpression()), !dbg !7922
  %from.addr.i28 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i28, metadata !6859, metadata !DIExpression()), !dbg !7923
  %n.addr.i29 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i29, metadata !6861, metadata !DIExpression()), !dbg !7924
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6834, metadata !DIExpression()), !dbg !7925
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6847, metadata !DIExpression()), !dbg !7929
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6849, metadata !DIExpression()), !dbg !7930
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6851, metadata !DIExpression()), !dbg !7931
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6853, metadata !DIExpression()), !dbg !7932
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !7143, metadata !DIExpression()), !dbg !7933
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !7145, metadata !DIExpression()), !dbg !7934
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !7147, metadata !DIExpression()), !dbg !7935
  %retval = alloca i32, align 4
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %uinfo.addr = alloca %struct.switchtec_ioctl_flash_part_info*, align 8
  %ret = alloca i32, align 4
  %info = alloca %struct.switchtec_ioctl_flash_part_info, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !7936, metadata !DIExpression()), !dbg !7937
  store %struct.switchtec_ioctl_flash_part_info* %uinfo, %struct.switchtec_ioctl_flash_part_info** %uinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_flash_part_info** %uinfo.addr, metadata !7938, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7940, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_flash_part_info* %info, metadata !7942, metadata !DIExpression()), !dbg !7943
  %0 = bitcast %struct.switchtec_ioctl_flash_part_info* %info to i8*, !dbg !7943
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 16, i1 false), !dbg !7943
  %1 = bitcast %struct.switchtec_ioctl_flash_part_info* %info to i8*, !dbg !7944
  %2 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %uinfo.addr, align 8, !dbg !7945
  %3 = bitcast %struct.switchtec_ioctl_flash_part_info* %2 to i8*, !dbg !7945
  store i8* %1, i8** %to.addr.i, align 8
  store i8* %3, i8** %from.addr.i, align 8
  store i64 16, i64* %n.addr.i, align 8
  %4 = load i8*, i8** %to.addr.i, align 8, !dbg !7946
  %5 = load i64, i64* %n.addr.i, align 8, !dbg !7946
  store i8* %4, i8** %addr.addr.i.i, align 8
  store i64 %5, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7931
  %6 = load i32, i32* %sz.i.i, align 4, !dbg !7947
  %cmp.i.i = icmp sge i32 %6, 0, !dbg !7947
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7947

land.rhs.i.i:                                     ; preds = %entry
  %7 = load i32, i32* %sz.i.i, align 4, !dbg !7947
  %conv.i.i = sext i32 %7 to i64, !dbg !7947
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7947
  %cmp1.i.i = icmp ult i64 %conv.i.i, %8, !dbg !7947
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7948
  %lnot.i.i = xor i1 %9, true, !dbg !7947
  %lnot.ext.i.i = zext i1 %9 to i32, !dbg !7947
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7947
  br i1 %9, label %if.then.i.i, label %if.end10.i.i, !dbg !7949

if.then.i.i:                                      ; preds = %land.end.i.i
  %10 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7950
  %11 = call i1 @llvm.is.constant.i64(i64 %10) #12, !dbg !7951
  br i1 %11, label %if.else.i.i, label %if.then5.i.i, !dbg !7952

if.then5.i.i:                                     ; preds = %if.then.i.i
  %12 = load i32, i32* %sz.i.i, align 4, !dbg !7953
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7954
  call void @copy_overflow(i32 %12, i64 %13) #11, !dbg !7955
  br label %if.end9.i.i, !dbg !7955

if.else.i.i:                                      ; preds = %if.then.i.i
  %14 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7956
  %tobool6.i.i = trunc i8 %14 to i1, !dbg !7956
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7957

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !7958
  br label %if.end.i.i, !dbg !7958

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !7959
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7960
  br label %check_copy_size.exit.i, !dbg !7960

if.end10.i.i:                                     ; preds = %land.end.i.i
  %15 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7932
  %cmp11.i.i = icmp ugt i64 %15, 2147483647, !dbg !7932
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7932
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7932
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7932
  %16 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7961
  %tobool17.i.i = icmp ne i32 %16, 0, !dbg !7961
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7961
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7961
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7961
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7932

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !7962, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !7963, !srcloc !7033
  br label %if.end31.i.i, !dbg !7964

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %17 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7932
  %tobool32.i.i = icmp ne i32 %17, 0, !dbg !7932
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7932
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7932
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7932
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7961
  %18 = load i64, i64* %tmp.i.i, align 8, !dbg !7932
  %tobool38.i.i = icmp ne i64 %18, 0, !dbg !7965
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7966

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7967
  br label %check_copy_size.exit.i, !dbg !7967

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %19 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7968
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7969
  %21 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7970
  %tobool41.i.i = trunc i8 %21 to i1, !dbg !7970
  call void @check_object_size(i8* %19, i64 %20, i1 zeroext %tobool41.i.i) #11, !dbg !7971
  store i1 true, i1* %retval.i.i, align 1, !dbg !7972
  br label %check_copy_size.exit.i, !dbg !7972

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %22 = load i1, i1* %retval.i.i, align 1, !dbg !7973
  %lnot.i = xor i1 %22, true, !dbg !7946
  %lnot.ext.i = zext i1 %22 to i32, !dbg !7946
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7946
  br i1 %22, label %if.then.i, label %copy_from_user.exit, !dbg !7974

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %23 = load i8*, i8** %to.addr.i, align 8, !dbg !7975
  %24 = load i8*, i8** %from.addr.i, align 8, !dbg !7976
  %25 = load i64, i64* %n.addr.i, align 8, !dbg !7977
  %call2.i = call i64 @_copy_from_user(i8* %23, i8* %24, i64 %25) #11, !dbg !7978
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7979
  br label %copy_from_user.exit, !dbg !7980

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %26 = load i64, i64* %n.addr.i, align 8, !dbg !7981
  %tobool = icmp ne i64 %26, 0, !dbg !7982
  br i1 %tobool, label %if.then, label %if.end, !dbg !7983

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7984
  br label %return, !dbg !7984

if.end:                                           ; preds = %copy_from_user.exit
  %27 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !7985
  %gen = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %27, i32 0, i32 3, !dbg !7987
  %28 = load i32, i32* %gen, align 8, !dbg !7987
  %cmp = icmp eq i32 %28, 0, !dbg !7988
  br i1 %cmp, label %if.then1, label %if.else, !dbg !7989

if.then1:                                         ; preds = %if.end
  %29 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !7990
  %call2 = call i32 @flash_part_info_gen3(%struct.switchtec_dev* %29, %struct.switchtec_ioctl_flash_part_info* %info) #9, !dbg !7992
  store i32 %call2, i32* %ret, align 4, !dbg !7993
  %30 = load i32, i32* %ret, align 4, !dbg !7994
  %tobool3 = icmp ne i32 %30, 0, !dbg !7994
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7996

if.then4:                                         ; preds = %if.then1
  %31 = load i32, i32* %ret, align 4, !dbg !7997
  store i32 %31, i32* %retval, align 4, !dbg !7998
  br label %return, !dbg !7998

if.end5:                                          ; preds = %if.then1
  br label %if.end15, !dbg !7999

if.else:                                          ; preds = %if.end
  %32 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8000
  %gen6 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %32, i32 0, i32 3, !dbg !8002
  %33 = load i32, i32* %gen6, align 8, !dbg !8002
  %cmp7 = icmp eq i32 %33, 1, !dbg !8003
  br i1 %cmp7, label %if.then8, label %if.else13, !dbg !8004

if.then8:                                         ; preds = %if.else
  %34 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8005
  %call9 = call i32 @flash_part_info_gen4(%struct.switchtec_dev* %34, %struct.switchtec_ioctl_flash_part_info* %info) #9, !dbg !8007
  store i32 %call9, i32* %ret, align 4, !dbg !8008
  %35 = load i32, i32* %ret, align 4, !dbg !8009
  %tobool10 = icmp ne i32 %35, 0, !dbg !8009
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !8011

if.then11:                                        ; preds = %if.then8
  %36 = load i32, i32* %ret, align 4, !dbg !8012
  store i32 %36, i32* %retval, align 4, !dbg !8013
  br label %return, !dbg !8013

if.end12:                                         ; preds = %if.then8
  br label %if.end14, !dbg !8014

if.else13:                                        ; preds = %if.else
  store i32 -524, i32* %retval, align 4, !dbg !8015
  br label %return, !dbg !8015

if.end14:                                         ; preds = %if.end12
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end5
  %37 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %uinfo.addr, align 8, !dbg !8017
  %38 = bitcast %struct.switchtec_ioctl_flash_part_info* %37 to i8*, !dbg !8017
  %39 = bitcast %struct.switchtec_ioctl_flash_part_info* %info to i8*, !dbg !8018
  store i8* %38, i8** %to.addr.i27, align 8
  store i8* %39, i8** %from.addr.i28, align 8
  store i64 16, i64* %n.addr.i29, align 8
  %40 = load i8*, i8** %from.addr.i28, align 8, !dbg !8019
  %41 = load i64, i64* %n.addr.i29, align 8, !dbg !8019
  store i8* %40, i8** %addr.addr.i.i21, align 8
  store i64 %41, i64* %bytes.addr.i.i22, align 8
  store i8 1, i8* %is_source.addr.i.i23, align 1
  store i32 -1, i32* %sz.i.i24, align 4, !dbg !7920
  %42 = load i32, i32* %sz.i.i24, align 4, !dbg !8020
  %cmp.i.i30 = icmp sge i32 %42, 0, !dbg !8020
  br i1 %cmp.i.i30, label %land.rhs.i.i33, label %land.end.i.i37, !dbg !8020

land.rhs.i.i33:                                   ; preds = %if.end15
  %43 = load i32, i32* %sz.i.i24, align 4, !dbg !8020
  %conv.i.i31 = sext i32 %43 to i64, !dbg !8020
  %44 = load i64, i64* %bytes.addr.i.i22, align 8, !dbg !8020
  %cmp1.i.i32 = icmp ult i64 %conv.i.i31, %44, !dbg !8020
  br label %land.end.i.i37

land.end.i.i37:                                   ; preds = %land.rhs.i.i33, %if.end15
  %45 = phi i1 [ false, %if.end15 ], [ %cmp1.i.i32, %land.rhs.i.i33 ], !dbg !8021
  %lnot.i.i34 = xor i1 %45, true, !dbg !8020
  %lnot.ext.i.i35 = zext i1 %45 to i32, !dbg !8020
  %conv4.i.i36 = sext i32 %lnot.ext.i.i35 to i64, !dbg !8020
  br i1 %45, label %if.then.i.i38, label %if.end10.i.i53, !dbg !8022

if.then.i.i38:                                    ; preds = %land.end.i.i37
  %46 = load i64, i64* %bytes.addr.i.i22, align 8, !dbg !8023
  %47 = call i1 @llvm.is.constant.i64(i64 %46) #12, !dbg !8024
  br i1 %47, label %if.else.i.i41, label %if.then5.i.i39, !dbg !8025

if.then5.i.i39:                                   ; preds = %if.then.i.i38
  %48 = load i32, i32* %sz.i.i24, align 4, !dbg !8026
  %49 = load i64, i64* %bytes.addr.i.i22, align 8, !dbg !8027
  call void @copy_overflow(i32 %48, i64 %49) #11, !dbg !8028
  br label %if.end9.i.i45, !dbg !8028

if.else.i.i41:                                    ; preds = %if.then.i.i38
  %50 = load i8, i8* %is_source.addr.i.i23, align 1, !dbg !8029
  %tobool6.i.i40 = trunc i8 %50 to i1, !dbg !8029
  br i1 %tobool6.i.i40, label %if.then7.i.i42, label %if.else8.i.i43, !dbg !8030

if.then7.i.i42:                                   ; preds = %if.else.i.i41
  call void @__bad_copy_from() #11, !dbg !8031
  br label %if.end.i.i44, !dbg !8031

if.else8.i.i43:                                   ; preds = %if.else.i.i41
  call void @__bad_copy_to() #11, !dbg !8032
  br label %if.end.i.i44

if.end.i.i44:                                     ; preds = %if.else8.i.i43, %if.then7.i.i42
  br label %if.end9.i.i45

if.end9.i.i45:                                    ; preds = %if.end.i.i44, %if.then5.i.i39
  store i1 false, i1* %retval.i.i20, align 1, !dbg !8033
  br label %check_copy_size.exit.i67, !dbg !8033

if.end10.i.i53:                                   ; preds = %land.end.i.i37
  %51 = load i64, i64* %bytes.addr.i.i22, align 8, !dbg !7921
  %cmp11.i.i46 = icmp ugt i64 %51, 2147483647, !dbg !7921
  %lnot13.i.i47 = xor i1 %cmp11.i.i46, true, !dbg !7921
  %lnot.ext16.i.i48 = zext i1 %cmp11.i.i46 to i32, !dbg !7921
  store i32 %lnot.ext16.i.i48, i32* %__ret_warn_on.i.i25, align 4, !dbg !7921
  %52 = load i32, i32* %__ret_warn_on.i.i25, align 4, !dbg !8034
  %tobool17.i.i49 = icmp ne i32 %52, 0, !dbg !8034
  %lnot18.i.i50 = xor i1 %tobool17.i.i49, true, !dbg !8034
  %lnot.ext21.i.i51 = zext i1 %tobool17.i.i49 to i32, !dbg !8034
  %conv22.i.i52 = sext i32 %lnot.ext21.i.i51 to i64, !dbg !8034
  br i1 %tobool17.i.i49, label %if.then24.i.i54, label %if.end31.i.i60, !dbg !7921

if.then24.i.i54:                                  ; preds = %if.end10.i.i53
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !8035, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !8036, !srcloc !7033
  br label %if.end31.i.i60, !dbg !8037

if.end31.i.i60:                                   ; preds = %if.then24.i.i54, %if.end10.i.i53
  %53 = load i32, i32* %__ret_warn_on.i.i25, align 4, !dbg !7921
  %tobool32.i.i55 = icmp ne i32 %53, 0, !dbg !7921
  %lnot33.i.i56 = xor i1 %tobool32.i.i55, true, !dbg !7921
  %lnot.ext36.i.i57 = zext i1 %tobool32.i.i55 to i32, !dbg !7921
  %conv37.i.i58 = sext i32 %lnot.ext36.i.i57 to i64, !dbg !7921
  store i64 %conv37.i.i58, i64* %tmp.i.i26, align 8, !dbg !8034
  %54 = load i64, i64* %tmp.i.i26, align 8, !dbg !7921
  %tobool38.i.i59 = icmp ne i64 %54, 0, !dbg !8038
  br i1 %tobool38.i.i59, label %if.then39.i.i61, label %if.end40.i.i63, !dbg !8039

if.then39.i.i61:                                  ; preds = %if.end31.i.i60
  store i1 false, i1* %retval.i.i20, align 1, !dbg !8040
  br label %check_copy_size.exit.i67, !dbg !8040

if.end40.i.i63:                                   ; preds = %if.end31.i.i60
  %55 = load i8*, i8** %addr.addr.i.i21, align 8, !dbg !8041
  %56 = load i64, i64* %bytes.addr.i.i22, align 8, !dbg !8042
  %57 = load i8, i8* %is_source.addr.i.i23, align 1, !dbg !8043
  %tobool41.i.i62 = trunc i8 %57 to i1, !dbg !8043
  call void @check_object_size(i8* %55, i64 %56, i1 zeroext %tobool41.i.i62) #11, !dbg !8044
  store i1 true, i1* %retval.i.i20, align 1, !dbg !8045
  br label %check_copy_size.exit.i67, !dbg !8045

check_copy_size.exit.i67:                         ; preds = %if.end40.i.i63, %if.then39.i.i61, %if.end9.i.i45
  %58 = load i1, i1* %retval.i.i20, align 1, !dbg !8046
  %lnot.i64 = xor i1 %58, true, !dbg !8019
  %lnot.ext.i65 = zext i1 %58 to i32, !dbg !8019
  %conv.i66 = sext i32 %lnot.ext.i65 to i64, !dbg !8019
  br i1 %58, label %if.then.i69, label %copy_to_user.exit, !dbg !8047

if.then.i69:                                      ; preds = %check_copy_size.exit.i67
  %59 = load i8*, i8** %to.addr.i27, align 8, !dbg !8048
  %60 = load i8*, i8** %from.addr.i28, align 8, !dbg !8049
  %61 = load i64, i64* %n.addr.i29, align 8, !dbg !8050
  %call2.i68 = call i64 @_copy_to_user(i8* %59, i8* %60, i64 %61) #11, !dbg !8051
  store i64 %call2.i68, i64* %n.addr.i29, align 8, !dbg !8052
  br label %copy_to_user.exit, !dbg !8053

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i67, %if.then.i69
  %62 = load i64, i64* %n.addr.i29, align 8, !dbg !8054
  %tobool17 = icmp ne i64 %62, 0, !dbg !8055
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !8056

if.then18:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8057
  br label %return, !dbg !8057

if.end19:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !8058
  br label %return, !dbg !8058

return:                                           ; preds = %if.end19, %if.then18, %if.else13, %if.then11, %if.then4, %if.then
  %63 = load i32, i32* %retval, align 4, !dbg !8059
  ret i32 %63, !dbg !8059
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ioctl_event_summary(%struct.switchtec_dev* %stdev, %struct.switchtec_user* %stuser, %struct.switchtec_ioctl_event_summary* %usum, i64 %size) #4 !dbg !8060 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7339, metadata !DIExpression()), !dbg !8074
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7350, metadata !DIExpression()), !dbg !8077
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7354, metadata !DIExpression()), !dbg !8079
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7356, metadata !DIExpression()), !dbg !8080
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6834, metadata !DIExpression()), !dbg !8081
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6847, metadata !DIExpression()), !dbg !8085
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6849, metadata !DIExpression()), !dbg !8086
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6851, metadata !DIExpression()), !dbg !8087
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6853, metadata !DIExpression()), !dbg !8088
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6857, metadata !DIExpression()), !dbg !8089
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6859, metadata !DIExpression()), !dbg !8090
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6861, metadata !DIExpression()), !dbg !8091
  %retval = alloca i32, align 4
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %stuser.addr = alloca %struct.switchtec_user*, align 8
  %usum.addr = alloca %struct.switchtec_ioctl_event_summary*, align 8
  %size.addr = alloca i64, align 8
  %s = alloca %struct.switchtec_ioctl_event_summary*, align 8
  %i = alloca i32, align 4
  %reg = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  store %struct.switchtec_user* %stuser, %struct.switchtec_user** %stuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser.addr, metadata !8094, metadata !DIExpression()), !dbg !8095
  store %struct.switchtec_ioctl_event_summary* %usum, %struct.switchtec_ioctl_event_summary** %usum.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_event_summary** %usum.addr, metadata !8096, metadata !DIExpression()), !dbg !8097
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8098, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_event_summary** %s, metadata !8100, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !8104, metadata !DIExpression()), !dbg !8105
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8106, metadata !DIExpression()), !dbg !8107
  store i32 0, i32* %ret, align 4, !dbg !8107
  %call = call i8* @kzalloc(i64 1240, i32 3264) #9, !dbg !8108
  %0 = bitcast i8* %call to %struct.switchtec_ioctl_event_summary*, !dbg !8108
  store %struct.switchtec_ioctl_event_summary* %0, %struct.switchtec_ioctl_event_summary** %s, align 8, !dbg !8109
  %1 = load %struct.switchtec_ioctl_event_summary*, %struct.switchtec_ioctl_event_summary** %s, align 8, !dbg !8110
  %tobool = icmp ne %struct.switchtec_ioctl_event_summary* %1, null, !dbg !8110
  br i1 %tobool, label %if.end, label %if.then, !dbg !8112

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8113
  br label %return, !dbg !8113

if.end:                                           ; preds = %entry
  %2 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8114
  %mmio_sw_event = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %2, i32 0, i32 10, !dbg !8115
  %3 = load %struct.sw_event_regs*, %struct.sw_event_regs** %mmio_sw_event, align 8, !dbg !8115
  %global_summary = getelementptr inbounds %struct.sw_event_regs, %struct.sw_event_regs* %3, i32 0, i32 4, !dbg !8116
  %4 = bitcast i32* %global_summary to i8*, !dbg !8117
  %call1 = call i32 @ioread32(i8* %4) #9, !dbg !8118
  %conv = zext i32 %call1 to i64, !dbg !8118
  %5 = load %struct.switchtec_ioctl_event_summary*, %struct.switchtec_ioctl_event_summary** %s, align 8, !dbg !8119
  %global = getelementptr inbounds %struct.switchtec_ioctl_event_summary, %struct.switchtec_ioctl_event_summary* %5, i32 0, i32 0, !dbg !8120
  store i64 %conv, i64* %global, align 8, !dbg !8121
  %6 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8122
  %mmio_sw_event2 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %6, i32 0, i32 10, !dbg !8123
  %7 = load %struct.sw_event_regs*, %struct.sw_event_regs** %mmio_sw_event2, align 8, !dbg !8123
  %part_event_bitmap = getelementptr inbounds %struct.sw_event_regs, %struct.sw_event_regs* %7, i32 0, i32 2, !dbg !8124
  %8 = bitcast i64* %part_event_bitmap to i8*, !dbg !8125
  %call3 = call i64 @ioread64_lo_hi(i8* %8) #9, !dbg !8126
  %9 = load %struct.switchtec_ioctl_event_summary*, %struct.switchtec_ioctl_event_summary** %s, align 8, !dbg !8127
  %part_bitmap = getelementptr inbounds %struct.switchtec_ioctl_event_summary, %struct.switchtec_ioctl_event_summary* %9, i32 0, i32 1, !dbg !8128
  store i64 %call3, i64* %part_bitmap, align 8, !dbg !8129
  %10 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8130
  %mmio_part_cfg = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %10, i32 0, i32 14, !dbg !8131
  %11 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %mmio_part_cfg, align 8, !dbg !8131
  %part_event_summary = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %11, i32 0, i32 12, !dbg !8132
  %12 = bitcast i32* %part_event_summary to i8*, !dbg !8133
  %call4 = call i32 @ioread32(i8* %12) #9, !dbg !8134
  %13 = load %struct.switchtec_ioctl_event_summary*, %struct.switchtec_ioctl_event_summary** %s, align 8, !dbg !8135
  %local_part = getelementptr inbounds %struct.switchtec_ioctl_event_summary, %struct.switchtec_ioctl_event_summary* %13, i32 0, i32 2, !dbg !8136
  store i32 %call4, i32* %local_part, align 8, !dbg !8137
  store i32 0, i32* %i, align 4, !dbg !8138
  br label %for.cond, !dbg !8140

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !8141
  %15 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8143
  %partition_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %15, i32 0, i32 5, !dbg !8144
  %16 = load i32, i32* %partition_count, align 8, !dbg !8144
  %cmp = icmp slt i32 %14, %16, !dbg !8145
  br i1 %cmp, label %for.body, label %for.end, !dbg !8146

for.body:                                         ; preds = %for.cond
  %17 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8147
  %mmio_part_cfg_all = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %17, i32 0, i32 15, !dbg !8149
  %18 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %mmio_part_cfg_all, align 8, !dbg !8149
  %19 = load i32, i32* %i, align 4, !dbg !8150
  %idxprom = sext i32 %19 to i64, !dbg !8147
  %arrayidx = getelementptr %struct.part_cfg_regs, %struct.part_cfg_regs* %18, i64 %idxprom, !dbg !8147
  %part_event_summary6 = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %arrayidx, i32 0, i32 12, !dbg !8151
  %20 = bitcast i32* %part_event_summary6 to i8*, !dbg !8152
  %call7 = call i32 @ioread32(i8* %20) #9, !dbg !8153
  store i32 %call7, i32* %reg, align 4, !dbg !8154
  %21 = load i32, i32* %reg, align 4, !dbg !8155
  %22 = load %struct.switchtec_ioctl_event_summary*, %struct.switchtec_ioctl_event_summary** %s, align 8, !dbg !8156
  %part = getelementptr inbounds %struct.switchtec_ioctl_event_summary, %struct.switchtec_ioctl_event_summary* %22, i32 0, i32 4, !dbg !8157
  %23 = load i32, i32* %i, align 4, !dbg !8158
  %idxprom8 = sext i32 %23 to i64, !dbg !8156
  %arrayidx9 = getelementptr [48 x i32], [48 x i32]* %part, i64 0, i64 %idxprom8, !dbg !8156
  store i32 %21, i32* %arrayidx9, align 4, !dbg !8159
  br label %for.inc, !dbg !8160

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !8161
  %inc = add i32 %24, 1, !dbg !8161
  store i32 %inc, i32* %i, align 4, !dbg !8161
  br label %for.cond, !dbg !8162, !llvm.loop !8163

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8165
  br label %for.cond10, !dbg !8167

for.cond10:                                       ; preds = %for.inc19, %for.end
  %25 = load i32, i32* %i, align 4, !dbg !8168
  %26 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8170
  %pff_csr_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %26, i32 0, i32 6, !dbg !8171
  %27 = load i32, i32* %pff_csr_count, align 4, !dbg !8171
  %cmp11 = icmp slt i32 %25, %27, !dbg !8172
  br i1 %cmp11, label %for.body13, label %for.end21, !dbg !8173

for.body13:                                       ; preds = %for.cond10
  %28 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8174
  %mmio_pff_csr = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %28, i32 0, i32 16, !dbg !8176
  %29 = load %struct.pff_csr_regs*, %struct.pff_csr_regs** %mmio_pff_csr, align 8, !dbg !8176
  %30 = load i32, i32* %i, align 4, !dbg !8177
  %idxprom14 = sext i32 %30 to i64, !dbg !8174
  %arrayidx15 = getelementptr %struct.pff_csr_regs, %struct.pff_csr_regs* %29, i64 %idxprom14, !dbg !8174
  %pff_event_summary = getelementptr inbounds %struct.pff_csr_regs, %struct.pff_csr_regs* %arrayidx15, i32 0, i32 18, !dbg !8178
  %31 = bitcast i32* %pff_event_summary to i8*, !dbg !8179
  %call16 = call i32 @ioread32(i8* %31) #9, !dbg !8180
  store i32 %call16, i32* %reg, align 4, !dbg !8181
  %32 = load i32, i32* %reg, align 4, !dbg !8182
  %33 = load %struct.switchtec_ioctl_event_summary*, %struct.switchtec_ioctl_event_summary** %s, align 8, !dbg !8183
  %pff = getelementptr inbounds %struct.switchtec_ioctl_event_summary, %struct.switchtec_ioctl_event_summary* %33, i32 0, i32 5, !dbg !8184
  %34 = load i32, i32* %i, align 4, !dbg !8185
  %idxprom17 = sext i32 %34 to i64, !dbg !8183
  %arrayidx18 = getelementptr [255 x i32], [255 x i32]* %pff, i64 0, i64 %idxprom17, !dbg !8183
  store i32 %32, i32* %arrayidx18, align 4, !dbg !8186
  br label %for.inc19, !dbg !8187

for.inc19:                                        ; preds = %for.body13
  %35 = load i32, i32* %i, align 4, !dbg !8188
  %inc20 = add i32 %35, 1, !dbg !8188
  store i32 %inc20, i32* %i, align 4, !dbg !8188
  br label %for.cond10, !dbg !8189, !llvm.loop !8190

for.end21:                                        ; preds = %for.cond10
  %36 = load %struct.switchtec_ioctl_event_summary*, %struct.switchtec_ioctl_event_summary** %usum.addr, align 8, !dbg !8192
  %37 = bitcast %struct.switchtec_ioctl_event_summary* %36 to i8*, !dbg !8192
  %38 = load %struct.switchtec_ioctl_event_summary*, %struct.switchtec_ioctl_event_summary** %s, align 8, !dbg !8193
  %39 = bitcast %struct.switchtec_ioctl_event_summary* %38 to i8*, !dbg !8193
  %40 = load i64, i64* %size.addr, align 8, !dbg !8194
  store i8* %37, i8** %to.addr.i, align 8
  store i8* %39, i8** %from.addr.i, align 8
  store i64 %40, i64* %n.addr.i, align 8
  %41 = load i8*, i8** %from.addr.i, align 8, !dbg !8195
  %42 = load i64, i64* %n.addr.i, align 8, !dbg !8195
  store i8* %41, i8** %addr.addr.i.i, align 8
  store i64 %42, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8087
  %43 = load i32, i32* %sz.i.i, align 4, !dbg !8196
  %cmp.i.i = icmp sge i32 %43, 0, !dbg !8196
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8196

land.rhs.i.i:                                     ; preds = %for.end21
  %44 = load i32, i32* %sz.i.i, align 4, !dbg !8196
  %conv.i.i = sext i32 %44 to i64, !dbg !8196
  %45 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8196
  %cmp1.i.i = icmp ult i64 %conv.i.i, %45, !dbg !8196
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %for.end21
  %46 = phi i1 [ false, %for.end21 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8197
  %lnot.i.i = xor i1 %46, true, !dbg !8196
  %lnot.ext.i.i = zext i1 %46 to i32, !dbg !8196
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8196
  br i1 %46, label %if.then.i.i, label %if.end10.i.i, !dbg !8198

if.then.i.i:                                      ; preds = %land.end.i.i
  %47 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8199
  %48 = call i1 @llvm.is.constant.i64(i64 %47) #12, !dbg !8200
  br i1 %48, label %if.else.i.i, label %if.then5.i.i, !dbg !8201

if.then5.i.i:                                     ; preds = %if.then.i.i
  %49 = load i32, i32* %sz.i.i, align 4, !dbg !8202
  %50 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8203
  call void @copy_overflow(i32 %49, i64 %50) #11, !dbg !8204
  br label %if.end9.i.i, !dbg !8204

if.else.i.i:                                      ; preds = %if.then.i.i
  %51 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8205
  %tobool6.i.i = trunc i8 %51 to i1, !dbg !8205
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8206

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !8207
  br label %if.end.i.i, !dbg !8207

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !8208
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8209
  br label %check_copy_size.exit.i, !dbg !8209

if.end10.i.i:                                     ; preds = %land.end.i.i
  %52 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8088
  %cmp11.i.i = icmp ugt i64 %52, 2147483647, !dbg !8088
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8088
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8088
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8088
  %53 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8210
  %tobool17.i.i = icmp ne i32 %53, 0, !dbg !8210
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8210
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8210
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8210
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8088

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !8211, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !8212, !srcloc !7033
  br label %if.end31.i.i, !dbg !8213

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %54 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8088
  %tobool32.i.i = icmp ne i32 %54, 0, !dbg !8088
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8088
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8088
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8088
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8210
  %55 = load i64, i64* %tmp.i.i, align 8, !dbg !8088
  %tobool38.i.i = icmp ne i64 %55, 0, !dbg !8214
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8215

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8216
  br label %check_copy_size.exit.i, !dbg !8216

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %56 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8217
  %57 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8218
  %58 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8219
  %tobool41.i.i = trunc i8 %58 to i1, !dbg !8219
  call void @check_object_size(i8* %56, i64 %57, i1 zeroext %tobool41.i.i) #11, !dbg !8220
  store i1 true, i1* %retval.i.i, align 1, !dbg !8221
  br label %check_copy_size.exit.i, !dbg !8221

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %59 = load i1, i1* %retval.i.i, align 1, !dbg !8222
  %lnot.i = xor i1 %59, true, !dbg !8195
  %lnot.ext.i = zext i1 %59 to i32, !dbg !8195
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8195
  br i1 %59, label %if.then.i, label %copy_to_user.exit, !dbg !8223

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %60 = load i8*, i8** %to.addr.i, align 8, !dbg !8224
  %61 = load i8*, i8** %from.addr.i, align 8, !dbg !8225
  %62 = load i64, i64* %n.addr.i, align 8, !dbg !8226
  %call2.i = call i64 @_copy_to_user(i8* %60, i8* %61, i64 %62) #11, !dbg !8227
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8228
  br label %copy_to_user.exit, !dbg !8229

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %63 = load i64, i64* %n.addr.i, align 8, !dbg !8230
  %tobool23 = icmp ne i64 %63, 0, !dbg !8231
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !8232

if.then24:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !8233
  br label %error_case, !dbg !8235

if.end25:                                         ; preds = %copy_to_user.exit
  %64 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8236
  %event_cnt = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %64, i32 0, i32 24, !dbg !8237
  store %struct.atomic_t* %event_cnt, %struct.atomic_t** %v.addr.i, align 8
  %65 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8238
  %66 = bitcast %struct.atomic_t* %65 to i8*, !dbg !8238
  store i8* %66, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %67 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8239
  %68 = load i64, i64* %size.addr.i.i, align 8, !dbg !8240
  %conv.i.i28 = trunc i64 %68 to i32, !dbg !8240
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %67, i32 %conv.i.i28) #11, !dbg !8241
  %69 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8242
  %70 = load i64, i64* %size.addr.i.i, align 8, !dbg !8242
  call void @kcsan_check_access(i8* %69, i64 %70, i32 4) #11, !dbg !8242
  %71 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8243
  store %struct.atomic_t* %71, %struct.atomic_t** %v.addr.i1.i, align 8
  %72 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8244
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %72, i32 0, i32 0, !dbg !8244
  %73 = load volatile i32, i32* %counter.i.i, align 4, !dbg !8244
  %74 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser.addr, align 8, !dbg !8245
  %event_cnt27 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %74, i32 0, i32 12, !dbg !8246
  store i32 %73, i32* %event_cnt27, align 8, !dbg !8247
  br label %error_case, !dbg !8245

error_case:                                       ; preds = %if.end25, %if.then24
  call void @llvm.dbg.label(metadata !8248), !dbg !8249
  %75 = load %struct.switchtec_ioctl_event_summary*, %struct.switchtec_ioctl_event_summary** %s, align 8, !dbg !8250
  %76 = bitcast %struct.switchtec_ioctl_event_summary* %75 to i8*, !dbg !8250
  call void @kfree(i8* %76) #9, !dbg !8251
  %77 = load i32, i32* %ret, align 4, !dbg !8252
  store i32 %77, i32* %retval, align 4, !dbg !8253
  br label %return, !dbg !8253

return:                                           ; preds = %error_case, %if.then
  %78 = load i32, i32* %retval, align 4, !dbg !8254
  ret i32 %78, !dbg !8254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ioctl_event_ctl(%struct.switchtec_dev* %stdev, %struct.switchtec_ioctl_event_ctl* %uctl) #4 !dbg !8255 {
entry:
  %retval.i.i48 = alloca i1, align 1
  %addr.addr.i.i49 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i49, metadata !6834, metadata !DIExpression()), !dbg !8268
  %bytes.addr.i.i50 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i50, metadata !6847, metadata !DIExpression()), !dbg !8272
  %is_source.addr.i.i51 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i51, metadata !6849, metadata !DIExpression()), !dbg !8273
  %sz.i.i52 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i52, metadata !6851, metadata !DIExpression()), !dbg !8274
  %__ret_warn_on.i.i53 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i53, metadata !6853, metadata !DIExpression()), !dbg !8275
  %tmp.i.i54 = alloca i64, align 8
  %to.addr.i55 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i55, metadata !6857, metadata !DIExpression()), !dbg !8276
  %from.addr.i56 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i56, metadata !6859, metadata !DIExpression()), !dbg !8277
  %n.addr.i57 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i57, metadata !6861, metadata !DIExpression()), !dbg !8278
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6834, metadata !DIExpression()), !dbg !8279
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6847, metadata !DIExpression()), !dbg !8283
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6849, metadata !DIExpression()), !dbg !8284
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6851, metadata !DIExpression()), !dbg !8285
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6853, metadata !DIExpression()), !dbg !8286
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !7143, metadata !DIExpression()), !dbg !8287
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !7145, metadata !DIExpression()), !dbg !8288
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !7147, metadata !DIExpression()), !dbg !8289
  %retval = alloca i32, align 4
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %uctl.addr = alloca %struct.switchtec_ioctl_event_ctl*, align 8
  %ret = alloca i32, align 4
  %nr_idxs = alloca i32, align 4
  %event_flags = alloca i32, align 4
  %ctl = alloca %struct.switchtec_ioctl_event_ctl, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !8290, metadata !DIExpression()), !dbg !8291
  store %struct.switchtec_ioctl_event_ctl* %uctl, %struct.switchtec_ioctl_event_ctl** %uctl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_event_ctl** %uctl.addr, metadata !8292, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8294, metadata !DIExpression()), !dbg !8295
  call void @llvm.dbg.declare(metadata i32* %nr_idxs, metadata !8296, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.declare(metadata i32* %event_flags, metadata !8298, metadata !DIExpression()), !dbg !8299
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_event_ctl* %ctl, metadata !8300, metadata !DIExpression()), !dbg !8301
  %0 = bitcast %struct.switchtec_ioctl_event_ctl* %ctl to i8*, !dbg !8302
  %1 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %uctl.addr, align 8, !dbg !8303
  %2 = bitcast %struct.switchtec_ioctl_event_ctl* %1 to i8*, !dbg !8303
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %2, i8** %from.addr.i, align 8
  store i64 40, i64* %n.addr.i, align 8
  %3 = load i8*, i8** %to.addr.i, align 8, !dbg !8304
  %4 = load i64, i64* %n.addr.i, align 8, !dbg !8304
  store i8* %3, i8** %addr.addr.i.i, align 8
  store i64 %4, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8285
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !8305
  %cmp.i.i = icmp sge i32 %5, 0, !dbg !8305
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8305

land.rhs.i.i:                                     ; preds = %entry
  %6 = load i32, i32* %sz.i.i, align 4, !dbg !8305
  %conv.i.i = sext i32 %6 to i64, !dbg !8305
  %7 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8305
  %cmp1.i.i = icmp ult i64 %conv.i.i, %7, !dbg !8305
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8306
  %lnot.i.i = xor i1 %8, true, !dbg !8305
  %lnot.ext.i.i = zext i1 %8 to i32, !dbg !8305
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8305
  br i1 %8, label %if.then.i.i, label %if.end10.i.i, !dbg !8307

if.then.i.i:                                      ; preds = %land.end.i.i
  %9 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8308
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #12, !dbg !8309
  br i1 %10, label %if.else.i.i, label %if.then5.i.i, !dbg !8310

if.then5.i.i:                                     ; preds = %if.then.i.i
  %11 = load i32, i32* %sz.i.i, align 4, !dbg !8311
  %12 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8312
  call void @copy_overflow(i32 %11, i64 %12) #11, !dbg !8313
  br label %if.end9.i.i, !dbg !8313

if.else.i.i:                                      ; preds = %if.then.i.i
  %13 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8314
  %tobool6.i.i = trunc i8 %13 to i1, !dbg !8314
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8315

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !8316
  br label %if.end.i.i, !dbg !8316

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !8317
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8318
  br label %check_copy_size.exit.i, !dbg !8318

if.end10.i.i:                                     ; preds = %land.end.i.i
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8286
  %cmp11.i.i = icmp ugt i64 %14, 2147483647, !dbg !8286
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8286
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8286
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8286
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8319
  %tobool17.i.i = icmp ne i32 %15, 0, !dbg !8319
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8319
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8319
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8319
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8286

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !8320, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !8321, !srcloc !7033
  br label %if.end31.i.i, !dbg !8322

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %16 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8286
  %tobool32.i.i = icmp ne i32 %16, 0, !dbg !8286
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8286
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8286
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8286
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8319
  %17 = load i64, i64* %tmp.i.i, align 8, !dbg !8286
  %tobool38.i.i = icmp ne i64 %17, 0, !dbg !8323
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8324

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8325
  br label %check_copy_size.exit.i, !dbg !8325

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %18 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8326
  %19 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8327
  %20 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8328
  %tobool41.i.i = trunc i8 %20 to i1, !dbg !8328
  call void @check_object_size(i8* %18, i64 %19, i1 zeroext %tobool41.i.i) #11, !dbg !8329
  store i1 true, i1* %retval.i.i, align 1, !dbg !8330
  br label %check_copy_size.exit.i, !dbg !8330

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %21 = load i1, i1* %retval.i.i, align 1, !dbg !8331
  %lnot.i = xor i1 %21, true, !dbg !8304
  %lnot.ext.i = zext i1 %21 to i32, !dbg !8304
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8304
  br i1 %21, label %if.then.i, label %copy_from_user.exit, !dbg !8332

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %22 = load i8*, i8** %to.addr.i, align 8, !dbg !8333
  %23 = load i8*, i8** %from.addr.i, align 8, !dbg !8334
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !8335
  %call2.i = call i64 @_copy_from_user(i8* %22, i8* %23, i64 %24) #11, !dbg !8336
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8337
  br label %copy_from_user.exit, !dbg !8338

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %25 = load i64, i64* %n.addr.i, align 8, !dbg !8339
  %tobool = icmp ne i64 %25, 0, !dbg !8340
  br i1 %tobool, label %if.then, label %if.end, !dbg !8341

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8342
  br label %return, !dbg !8342

if.end:                                           ; preds = %copy_from_user.exit
  %event_id = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %ctl, i32 0, i32 0, !dbg !8343
  %26 = load i32, i32* %event_id, align 4, !dbg !8343
  %cmp = icmp uge i32 %26, 32, !dbg !8345
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !8346

if.then1:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8347
  br label %return, !dbg !8347

if.end2:                                          ; preds = %if.end
  %flags = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %ctl, i32 0, i32 2, !dbg !8348
  %27 = load i32, i32* %flags, align 4, !dbg !8348
  %and = and i32 %27, -512, !dbg !8350
  %tobool3 = icmp ne i32 %and, 0, !dbg !8350
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8351

if.then4:                                         ; preds = %if.end2
  store i32 -22, i32* %retval, align 4, !dbg !8352
  br label %return, !dbg !8352

if.end5:                                          ; preds = %if.end2
  %index = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %ctl, i32 0, i32 1, !dbg !8353
  %28 = load i32, i32* %index, align 4, !dbg !8353
  %cmp6 = icmp eq i32 %28, -2, !dbg !8355
  br i1 %cmp6, label %if.then7, label %if.else38, !dbg !8356

if.then7:                                         ; preds = %if.end5
  %event_id8 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %ctl, i32 0, i32 0, !dbg !8357
  %29 = load i32, i32* %event_id8, align 4, !dbg !8357
  %idxprom = zext i32 %29 to i64, !dbg !8360
  %arrayidx = getelementptr [32 x %struct.event_reg], [32 x %struct.event_reg]* @event_regs, i64 0, i64 %idxprom, !dbg !8360
  %map_reg = getelementptr inbounds %struct.event_reg, %struct.event_reg* %arrayidx, i32 0, i32 1, !dbg !8361
  %30 = load i32* (%struct.switchtec_dev*, i64, i32)*, i32* (%struct.switchtec_dev*, i64, i32)** %map_reg, align 8, !dbg !8361
  %cmp9 = icmp eq i32* (%struct.switchtec_dev*, i64, i32)* %30, @global_ev_reg, !dbg !8362
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !8363

if.then10:                                        ; preds = %if.then7
  store i32 1, i32* %nr_idxs, align 4, !dbg !8364
  br label %if.end27, !dbg !8365

if.else:                                          ; preds = %if.then7
  %event_id11 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %ctl, i32 0, i32 0, !dbg !8366
  %31 = load i32, i32* %event_id11, align 4, !dbg !8366
  %idxprom12 = zext i32 %31 to i64, !dbg !8368
  %arrayidx13 = getelementptr [32 x %struct.event_reg], [32 x %struct.event_reg]* @event_regs, i64 0, i64 %idxprom12, !dbg !8368
  %map_reg14 = getelementptr inbounds %struct.event_reg, %struct.event_reg* %arrayidx13, i32 0, i32 1, !dbg !8369
  %32 = load i32* (%struct.switchtec_dev*, i64, i32)*, i32* (%struct.switchtec_dev*, i64, i32)** %map_reg14, align 8, !dbg !8369
  %cmp15 = icmp eq i32* (%struct.switchtec_dev*, i64, i32)* %32, @part_ev_reg, !dbg !8370
  br i1 %cmp15, label %if.then16, label %if.else17, !dbg !8371

if.then16:                                        ; preds = %if.else
  %33 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8372
  %partition_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %33, i32 0, i32 5, !dbg !8373
  %34 = load i32, i32* %partition_count, align 8, !dbg !8373
  store i32 %34, i32* %nr_idxs, align 4, !dbg !8374
  br label %if.end26, !dbg !8375

if.else17:                                        ; preds = %if.else
  %event_id18 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %ctl, i32 0, i32 0, !dbg !8376
  %35 = load i32, i32* %event_id18, align 4, !dbg !8376
  %idxprom19 = zext i32 %35 to i64, !dbg !8378
  %arrayidx20 = getelementptr [32 x %struct.event_reg], [32 x %struct.event_reg]* @event_regs, i64 0, i64 %idxprom19, !dbg !8378
  %map_reg21 = getelementptr inbounds %struct.event_reg, %struct.event_reg* %arrayidx20, i32 0, i32 1, !dbg !8379
  %36 = load i32* (%struct.switchtec_dev*, i64, i32)*, i32* (%struct.switchtec_dev*, i64, i32)** %map_reg21, align 8, !dbg !8379
  %cmp22 = icmp eq i32* (%struct.switchtec_dev*, i64, i32)* %36, @pff_ev_reg, !dbg !8380
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !8381

if.then23:                                        ; preds = %if.else17
  %37 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8382
  %pff_csr_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %37, i32 0, i32 6, !dbg !8383
  %38 = load i32, i32* %pff_csr_count, align 4, !dbg !8383
  store i32 %38, i32* %nr_idxs, align 4, !dbg !8384
  br label %if.end25, !dbg !8385

if.else24:                                        ; preds = %if.else17
  store i32 -22, i32* %retval, align 4, !dbg !8386
  br label %return, !dbg !8386

if.end25:                                         ; preds = %if.then23
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then16
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then10
  %flags28 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %ctl, i32 0, i32 2, !dbg !8387
  %39 = load i32, i32* %flags28, align 4, !dbg !8387
  store i32 %39, i32* %event_flags, align 4, !dbg !8388
  %index29 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %ctl, i32 0, i32 1, !dbg !8389
  store i32 0, i32* %index29, align 4, !dbg !8391
  br label %for.cond, !dbg !8392

for.cond:                                         ; preds = %for.inc, %if.end27
  %index30 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %ctl, i32 0, i32 1, !dbg !8393
  %40 = load i32, i32* %index30, align 4, !dbg !8393
  %41 = load i32, i32* %nr_idxs, align 4, !dbg !8395
  %cmp31 = icmp slt i32 %40, %41, !dbg !8396
  br i1 %cmp31, label %for.body, label %for.end, !dbg !8397

for.body:                                         ; preds = %for.cond
  %42 = load i32, i32* %event_flags, align 4, !dbg !8398
  %flags32 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %ctl, i32 0, i32 2, !dbg !8400
  store i32 %42, i32* %flags32, align 4, !dbg !8401
  %43 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8402
  %call33 = call i32 @event_ctl(%struct.switchtec_dev* %43, %struct.switchtec_ioctl_event_ctl* %ctl) #9, !dbg !8403
  store i32 %call33, i32* %ret, align 4, !dbg !8404
  %44 = load i32, i32* %ret, align 4, !dbg !8405
  %cmp34 = icmp slt i32 %44, 0, !dbg !8407
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !8408

if.then35:                                        ; preds = %for.body
  %45 = load i32, i32* %ret, align 4, !dbg !8409
  store i32 %45, i32* %retval, align 4, !dbg !8410
  br label %return, !dbg !8410

if.end36:                                         ; preds = %for.body
  br label %for.inc, !dbg !8411

for.inc:                                          ; preds = %if.end36
  %index37 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %ctl, i32 0, i32 1, !dbg !8412
  %46 = load i32, i32* %index37, align 4, !dbg !8413
  %inc = add i32 %46, 1, !dbg !8413
  store i32 %inc, i32* %index37, align 4, !dbg !8413
  br label %for.cond, !dbg !8414, !llvm.loop !8415

for.end:                                          ; preds = %for.cond
  br label %if.end43, !dbg !8417

if.else38:                                        ; preds = %if.end5
  %47 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8418
  %call39 = call i32 @event_ctl(%struct.switchtec_dev* %47, %struct.switchtec_ioctl_event_ctl* %ctl) #9, !dbg !8420
  store i32 %call39, i32* %ret, align 4, !dbg !8421
  %48 = load i32, i32* %ret, align 4, !dbg !8422
  %cmp40 = icmp slt i32 %48, 0, !dbg !8424
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !8425

if.then41:                                        ; preds = %if.else38
  %49 = load i32, i32* %ret, align 4, !dbg !8426
  store i32 %49, i32* %retval, align 4, !dbg !8427
  br label %return, !dbg !8427

if.end42:                                         ; preds = %if.else38
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %for.end
  %50 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %uctl.addr, align 8, !dbg !8428
  %51 = bitcast %struct.switchtec_ioctl_event_ctl* %50 to i8*, !dbg !8428
  %52 = bitcast %struct.switchtec_ioctl_event_ctl* %ctl to i8*, !dbg !8429
  store i8* %51, i8** %to.addr.i55, align 8
  store i8* %52, i8** %from.addr.i56, align 8
  store i64 40, i64* %n.addr.i57, align 8
  %53 = load i8*, i8** %from.addr.i56, align 8, !dbg !8430
  %54 = load i64, i64* %n.addr.i57, align 8, !dbg !8430
  store i8* %53, i8** %addr.addr.i.i49, align 8
  store i64 %54, i64* %bytes.addr.i.i50, align 8
  store i8 1, i8* %is_source.addr.i.i51, align 1
  store i32 -1, i32* %sz.i.i52, align 4, !dbg !8274
  %55 = load i32, i32* %sz.i.i52, align 4, !dbg !8431
  %cmp.i.i58 = icmp sge i32 %55, 0, !dbg !8431
  br i1 %cmp.i.i58, label %land.rhs.i.i61, label %land.end.i.i65, !dbg !8431

land.rhs.i.i61:                                   ; preds = %if.end43
  %56 = load i32, i32* %sz.i.i52, align 4, !dbg !8431
  %conv.i.i59 = sext i32 %56 to i64, !dbg !8431
  %57 = load i64, i64* %bytes.addr.i.i50, align 8, !dbg !8431
  %cmp1.i.i60 = icmp ult i64 %conv.i.i59, %57, !dbg !8431
  br label %land.end.i.i65

land.end.i.i65:                                   ; preds = %land.rhs.i.i61, %if.end43
  %58 = phi i1 [ false, %if.end43 ], [ %cmp1.i.i60, %land.rhs.i.i61 ], !dbg !8432
  %lnot.i.i62 = xor i1 %58, true, !dbg !8431
  %lnot.ext.i.i63 = zext i1 %58 to i32, !dbg !8431
  %conv4.i.i64 = sext i32 %lnot.ext.i.i63 to i64, !dbg !8431
  br i1 %58, label %if.then.i.i66, label %if.end10.i.i81, !dbg !8433

if.then.i.i66:                                    ; preds = %land.end.i.i65
  %59 = load i64, i64* %bytes.addr.i.i50, align 8, !dbg !8434
  %60 = call i1 @llvm.is.constant.i64(i64 %59) #12, !dbg !8435
  br i1 %60, label %if.else.i.i69, label %if.then5.i.i67, !dbg !8436

if.then5.i.i67:                                   ; preds = %if.then.i.i66
  %61 = load i32, i32* %sz.i.i52, align 4, !dbg !8437
  %62 = load i64, i64* %bytes.addr.i.i50, align 8, !dbg !8438
  call void @copy_overflow(i32 %61, i64 %62) #11, !dbg !8439
  br label %if.end9.i.i73, !dbg !8439

if.else.i.i69:                                    ; preds = %if.then.i.i66
  %63 = load i8, i8* %is_source.addr.i.i51, align 1, !dbg !8440
  %tobool6.i.i68 = trunc i8 %63 to i1, !dbg !8440
  br i1 %tobool6.i.i68, label %if.then7.i.i70, label %if.else8.i.i71, !dbg !8441

if.then7.i.i70:                                   ; preds = %if.else.i.i69
  call void @__bad_copy_from() #11, !dbg !8442
  br label %if.end.i.i72, !dbg !8442

if.else8.i.i71:                                   ; preds = %if.else.i.i69
  call void @__bad_copy_to() #11, !dbg !8443
  br label %if.end.i.i72

if.end.i.i72:                                     ; preds = %if.else8.i.i71, %if.then7.i.i70
  br label %if.end9.i.i73

if.end9.i.i73:                                    ; preds = %if.end.i.i72, %if.then5.i.i67
  store i1 false, i1* %retval.i.i48, align 1, !dbg !8444
  br label %check_copy_size.exit.i95, !dbg !8444

if.end10.i.i81:                                   ; preds = %land.end.i.i65
  %64 = load i64, i64* %bytes.addr.i.i50, align 8, !dbg !8275
  %cmp11.i.i74 = icmp ugt i64 %64, 2147483647, !dbg !8275
  %lnot13.i.i75 = xor i1 %cmp11.i.i74, true, !dbg !8275
  %lnot.ext16.i.i76 = zext i1 %cmp11.i.i74 to i32, !dbg !8275
  store i32 %lnot.ext16.i.i76, i32* %__ret_warn_on.i.i53, align 4, !dbg !8275
  %65 = load i32, i32* %__ret_warn_on.i.i53, align 4, !dbg !8445
  %tobool17.i.i77 = icmp ne i32 %65, 0, !dbg !8445
  %lnot18.i.i78 = xor i1 %tobool17.i.i77, true, !dbg !8445
  %lnot.ext21.i.i79 = zext i1 %tobool17.i.i77 to i32, !dbg !8445
  %conv22.i.i80 = sext i32 %lnot.ext21.i.i79 to i64, !dbg !8445
  br i1 %tobool17.i.i77, label %if.then24.i.i82, label %if.end31.i.i88, !dbg !8275

if.then24.i.i82:                                  ; preds = %if.end10.i.i81
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !8446, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !8447, !srcloc !7033
  br label %if.end31.i.i88, !dbg !8448

if.end31.i.i88:                                   ; preds = %if.then24.i.i82, %if.end10.i.i81
  %66 = load i32, i32* %__ret_warn_on.i.i53, align 4, !dbg !8275
  %tobool32.i.i83 = icmp ne i32 %66, 0, !dbg !8275
  %lnot33.i.i84 = xor i1 %tobool32.i.i83, true, !dbg !8275
  %lnot.ext36.i.i85 = zext i1 %tobool32.i.i83 to i32, !dbg !8275
  %conv37.i.i86 = sext i32 %lnot.ext36.i.i85 to i64, !dbg !8275
  store i64 %conv37.i.i86, i64* %tmp.i.i54, align 8, !dbg !8445
  %67 = load i64, i64* %tmp.i.i54, align 8, !dbg !8275
  %tobool38.i.i87 = icmp ne i64 %67, 0, !dbg !8449
  br i1 %tobool38.i.i87, label %if.then39.i.i89, label %if.end40.i.i91, !dbg !8450

if.then39.i.i89:                                  ; preds = %if.end31.i.i88
  store i1 false, i1* %retval.i.i48, align 1, !dbg !8451
  br label %check_copy_size.exit.i95, !dbg !8451

if.end40.i.i91:                                   ; preds = %if.end31.i.i88
  %68 = load i8*, i8** %addr.addr.i.i49, align 8, !dbg !8452
  %69 = load i64, i64* %bytes.addr.i.i50, align 8, !dbg !8453
  %70 = load i8, i8* %is_source.addr.i.i51, align 1, !dbg !8454
  %tobool41.i.i90 = trunc i8 %70 to i1, !dbg !8454
  call void @check_object_size(i8* %68, i64 %69, i1 zeroext %tobool41.i.i90) #11, !dbg !8455
  store i1 true, i1* %retval.i.i48, align 1, !dbg !8456
  br label %check_copy_size.exit.i95, !dbg !8456

check_copy_size.exit.i95:                         ; preds = %if.end40.i.i91, %if.then39.i.i89, %if.end9.i.i73
  %71 = load i1, i1* %retval.i.i48, align 1, !dbg !8457
  %lnot.i92 = xor i1 %71, true, !dbg !8430
  %lnot.ext.i93 = zext i1 %71 to i32, !dbg !8430
  %conv.i94 = sext i32 %lnot.ext.i93 to i64, !dbg !8430
  br i1 %71, label %if.then.i97, label %copy_to_user.exit, !dbg !8458

if.then.i97:                                      ; preds = %check_copy_size.exit.i95
  %72 = load i8*, i8** %to.addr.i55, align 8, !dbg !8459
  %73 = load i8*, i8** %from.addr.i56, align 8, !dbg !8460
  %74 = load i64, i64* %n.addr.i57, align 8, !dbg !8461
  %call2.i96 = call i64 @_copy_to_user(i8* %72, i8* %73, i64 %74) #11, !dbg !8462
  store i64 %call2.i96, i64* %n.addr.i57, align 8, !dbg !8463
  br label %copy_to_user.exit, !dbg !8464

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i95, %if.then.i97
  %75 = load i64, i64* %n.addr.i57, align 8, !dbg !8465
  %tobool45 = icmp ne i64 %75, 0, !dbg !8466
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !8467

if.then46:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8468
  br label %return, !dbg !8468

if.end47:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !8469
  br label %return, !dbg !8469

return:                                           ; preds = %if.end47, %if.then46, %if.then41, %if.then35, %if.else24, %if.then4, %if.then1, %if.then
  %76 = load i32, i32* %retval, align 4, !dbg !8470
  ret i32 %76, !dbg !8470
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ioctl_pff_to_port(%struct.switchtec_dev* %stdev, %struct.switchtec_ioctl_pff_port* %up) #4 !dbg !8471 {
entry:
  %retval.i.i37 = alloca i1, align 1
  %addr.addr.i.i38 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i38, metadata !6834, metadata !DIExpression()), !dbg !8480
  %bytes.addr.i.i39 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i39, metadata !6847, metadata !DIExpression()), !dbg !8484
  %is_source.addr.i.i40 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i40, metadata !6849, metadata !DIExpression()), !dbg !8485
  %sz.i.i41 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i41, metadata !6851, metadata !DIExpression()), !dbg !8486
  %__ret_warn_on.i.i42 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i42, metadata !6853, metadata !DIExpression()), !dbg !8487
  %tmp.i.i43 = alloca i64, align 8
  %to.addr.i44 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i44, metadata !6857, metadata !DIExpression()), !dbg !8488
  %from.addr.i45 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i45, metadata !6859, metadata !DIExpression()), !dbg !8489
  %n.addr.i46 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i46, metadata !6861, metadata !DIExpression()), !dbg !8490
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6834, metadata !DIExpression()), !dbg !8491
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6847, metadata !DIExpression()), !dbg !8495
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6849, metadata !DIExpression()), !dbg !8496
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6851, metadata !DIExpression()), !dbg !8497
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6853, metadata !DIExpression()), !dbg !8498
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !7143, metadata !DIExpression()), !dbg !8499
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !7145, metadata !DIExpression()), !dbg !8500
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !7147, metadata !DIExpression()), !dbg !8501
  %retval = alloca i32, align 4
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %up.addr = alloca %struct.switchtec_ioctl_pff_port*, align 8
  %i = alloca i32, align 4
  %part = alloca i32, align 4
  %reg = alloca i32, align 4
  %pcfg = alloca %struct.part_cfg_regs*, align 8
  %p = alloca %struct.switchtec_ioctl_pff_port, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !8502, metadata !DIExpression()), !dbg !8503
  store %struct.switchtec_ioctl_pff_port* %up, %struct.switchtec_ioctl_pff_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_pff_port** %up.addr, metadata !8504, metadata !DIExpression()), !dbg !8505
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8506, metadata !DIExpression()), !dbg !8507
  call void @llvm.dbg.declare(metadata i32* %part, metadata !8508, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !8510, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.declare(metadata %struct.part_cfg_regs** %pcfg, metadata !8512, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_pff_port* %p, metadata !8514, metadata !DIExpression()), !dbg !8515
  %0 = bitcast %struct.switchtec_ioctl_pff_port* %p to i8*, !dbg !8516
  %1 = load %struct.switchtec_ioctl_pff_port*, %struct.switchtec_ioctl_pff_port** %up.addr, align 8, !dbg !8517
  %2 = bitcast %struct.switchtec_ioctl_pff_port* %1 to i8*, !dbg !8517
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %2, i8** %from.addr.i, align 8
  store i64 12, i64* %n.addr.i, align 8
  %3 = load i8*, i8** %to.addr.i, align 8, !dbg !8518
  %4 = load i64, i64* %n.addr.i, align 8, !dbg !8518
  store i8* %3, i8** %addr.addr.i.i, align 8
  store i64 %4, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8497
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !8519
  %cmp.i.i = icmp sge i32 %5, 0, !dbg !8519
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8519

land.rhs.i.i:                                     ; preds = %entry
  %6 = load i32, i32* %sz.i.i, align 4, !dbg !8519
  %conv.i.i = sext i32 %6 to i64, !dbg !8519
  %7 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8519
  %cmp1.i.i = icmp ult i64 %conv.i.i, %7, !dbg !8519
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8520
  %lnot.i.i = xor i1 %8, true, !dbg !8519
  %lnot.ext.i.i = zext i1 %8 to i32, !dbg !8519
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8519
  br i1 %8, label %if.then.i.i, label %if.end10.i.i, !dbg !8521

if.then.i.i:                                      ; preds = %land.end.i.i
  %9 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8522
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #12, !dbg !8523
  br i1 %10, label %if.else.i.i, label %if.then5.i.i, !dbg !8524

if.then5.i.i:                                     ; preds = %if.then.i.i
  %11 = load i32, i32* %sz.i.i, align 4, !dbg !8525
  %12 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8526
  call void @copy_overflow(i32 %11, i64 %12) #11, !dbg !8527
  br label %if.end9.i.i, !dbg !8527

if.else.i.i:                                      ; preds = %if.then.i.i
  %13 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8528
  %tobool6.i.i = trunc i8 %13 to i1, !dbg !8528
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8529

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !8530
  br label %if.end.i.i, !dbg !8530

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !8531
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8532
  br label %check_copy_size.exit.i, !dbg !8532

if.end10.i.i:                                     ; preds = %land.end.i.i
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8498
  %cmp11.i.i = icmp ugt i64 %14, 2147483647, !dbg !8498
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8498
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8498
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8498
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8533
  %tobool17.i.i = icmp ne i32 %15, 0, !dbg !8533
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8533
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8533
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8533
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8498

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !8534, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !8535, !srcloc !7033
  br label %if.end31.i.i, !dbg !8536

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %16 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8498
  %tobool32.i.i = icmp ne i32 %16, 0, !dbg !8498
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8498
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8498
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8498
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8533
  %17 = load i64, i64* %tmp.i.i, align 8, !dbg !8498
  %tobool38.i.i = icmp ne i64 %17, 0, !dbg !8537
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8538

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8539
  br label %check_copy_size.exit.i, !dbg !8539

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %18 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8540
  %19 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8541
  %20 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8542
  %tobool41.i.i = trunc i8 %20 to i1, !dbg !8542
  call void @check_object_size(i8* %18, i64 %19, i1 zeroext %tobool41.i.i) #11, !dbg !8543
  store i1 true, i1* %retval.i.i, align 1, !dbg !8544
  br label %check_copy_size.exit.i, !dbg !8544

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %21 = load i1, i1* %retval.i.i, align 1, !dbg !8545
  %lnot.i = xor i1 %21, true, !dbg !8518
  %lnot.ext.i = zext i1 %21 to i32, !dbg !8518
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8518
  br i1 %21, label %if.then.i, label %copy_from_user.exit, !dbg !8546

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %22 = load i8*, i8** %to.addr.i, align 8, !dbg !8547
  %23 = load i8*, i8** %from.addr.i, align 8, !dbg !8548
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !8549
  %call2.i = call i64 @_copy_from_user(i8* %22, i8* %23, i64 %24) #11, !dbg !8550
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8551
  br label %copy_from_user.exit, !dbg !8552

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %25 = load i64, i64* %n.addr.i, align 8, !dbg !8553
  %tobool = icmp ne i64 %25, 0, !dbg !8554
  br i1 %tobool, label %if.then, label %if.end, !dbg !8555

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8556
  br label %return, !dbg !8556

if.end:                                           ; preds = %copy_from_user.exit
  %port = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 2, !dbg !8557
  store i32 -1, i32* %port, align 4, !dbg !8558
  store i32 0, i32* %part, align 4, !dbg !8559
  br label %for.cond, !dbg !8561

for.cond:                                         ; preds = %for.inc30, %if.end
  %26 = load i32, i32* %part, align 4, !dbg !8562
  %27 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8564
  %partition_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %27, i32 0, i32 5, !dbg !8565
  %28 = load i32, i32* %partition_count, align 8, !dbg !8565
  %cmp = icmp slt i32 %26, %28, !dbg !8566
  br i1 %cmp, label %for.body, label %for.end32, !dbg !8567

for.body:                                         ; preds = %for.cond
  %29 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8568
  %mmio_part_cfg_all = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %29, i32 0, i32 15, !dbg !8570
  %30 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %mmio_part_cfg_all, align 8, !dbg !8570
  %31 = load i32, i32* %part, align 4, !dbg !8571
  %idxprom = sext i32 %31 to i64, !dbg !8568
  %arrayidx = getelementptr %struct.part_cfg_regs, %struct.part_cfg_regs* %30, i64 %idxprom, !dbg !8568
  store %struct.part_cfg_regs* %arrayidx, %struct.part_cfg_regs** %pcfg, align 8, !dbg !8572
  %32 = load i32, i32* %part, align 4, !dbg !8573
  %partition = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 1, !dbg !8574
  store i32 %32, i32* %partition, align 4, !dbg !8575
  %33 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %pcfg, align 8, !dbg !8576
  %usp_pff_inst_id = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %33, i32 0, i32 4, !dbg !8577
  %34 = bitcast i32* %usp_pff_inst_id to i8*, !dbg !8578
  %call1 = call i32 @ioread32(i8* %34) #9, !dbg !8579
  store i32 %call1, i32* %reg, align 4, !dbg !8580
  %35 = load i32, i32* %reg, align 4, !dbg !8581
  %pff = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 0, !dbg !8583
  %36 = load i32, i32* %pff, align 4, !dbg !8583
  %cmp2 = icmp eq i32 %35, %36, !dbg !8584
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !8585

if.then3:                                         ; preds = %for.body
  %port4 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 2, !dbg !8586
  store i32 0, i32* %port4, align 4, !dbg !8588
  br label %for.end32, !dbg !8589

if.end5:                                          ; preds = %for.body
  %37 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %pcfg, align 8, !dbg !8590
  %vep_pff_inst_id = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %37, i32 0, i32 5, !dbg !8591
  %38 = bitcast i32* %vep_pff_inst_id to i8*, !dbg !8592
  %call6 = call i32 @ioread32(i8* %38) #9, !dbg !8593
  store i32 %call6, i32* %reg, align 4, !dbg !8594
  %39 = load i32, i32* %reg, align 4, !dbg !8595
  %pff7 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 0, !dbg !8597
  %40 = load i32, i32* %pff7, align 4, !dbg !8597
  %cmp8 = icmp eq i32 %39, %40, !dbg !8598
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !8599

if.then9:                                         ; preds = %if.end5
  %port10 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 2, !dbg !8600
  store i32 100, i32* %port10, align 4, !dbg !8602
  br label %for.end32, !dbg !8603

if.end11:                                         ; preds = %if.end5
  store i32 0, i32* %i, align 4, !dbg !8604
  br label %for.cond12, !dbg !8606

for.cond12:                                       ; preds = %for.inc, %if.end11
  %41 = load i32, i32* %i, align 4, !dbg !8607
  %conv = sext i32 %41 to i64, !dbg !8607
  %cmp13 = icmp ult i64 %conv, 47, !dbg !8609
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !8610

for.body15:                                       ; preds = %for.cond12
  %42 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %pcfg, align 8, !dbg !8611
  %dsp_pff_inst_id = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %42, i32 0, i32 6, !dbg !8613
  %43 = load i32, i32* %i, align 4, !dbg !8614
  %idxprom16 = sext i32 %43 to i64, !dbg !8611
  %arrayidx17 = getelementptr [47 x i32], [47 x i32]* %dsp_pff_inst_id, i64 0, i64 %idxprom16, !dbg !8611
  %44 = bitcast i32* %arrayidx17 to i8*, !dbg !8615
  %call18 = call i32 @ioread32(i8* %44) #9, !dbg !8616
  store i32 %call18, i32* %reg, align 4, !dbg !8617
  %45 = load i32, i32* %reg, align 4, !dbg !8618
  %pff19 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 0, !dbg !8620
  %46 = load i32, i32* %pff19, align 4, !dbg !8620
  %cmp20 = icmp ne i32 %45, %46, !dbg !8621
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !8622

if.then22:                                        ; preds = %for.body15
  br label %for.inc, !dbg !8623

if.end23:                                         ; preds = %for.body15
  %47 = load i32, i32* %i, align 4, !dbg !8624
  %add = add i32 %47, 1, !dbg !8625
  %port24 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 2, !dbg !8626
  store i32 %add, i32* %port24, align 4, !dbg !8627
  br label %for.end, !dbg !8628

for.inc:                                          ; preds = %if.then22
  %48 = load i32, i32* %i, align 4, !dbg !8629
  %inc = add i32 %48, 1, !dbg !8629
  store i32 %inc, i32* %i, align 4, !dbg !8629
  br label %for.cond12, !dbg !8630, !llvm.loop !8631

for.end:                                          ; preds = %if.end23, %for.cond12
  %port25 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 2, !dbg !8633
  %49 = load i32, i32* %port25, align 4, !dbg !8633
  %cmp26 = icmp ne i32 %49, -1, !dbg !8635
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !8636

if.then28:                                        ; preds = %for.end
  br label %for.end32, !dbg !8637

if.end29:                                         ; preds = %for.end
  br label %for.inc30, !dbg !8638

for.inc30:                                        ; preds = %if.end29
  %50 = load i32, i32* %part, align 4, !dbg !8639
  %inc31 = add i32 %50, 1, !dbg !8639
  store i32 %inc31, i32* %part, align 4, !dbg !8639
  br label %for.cond, !dbg !8640, !llvm.loop !8641

for.end32:                                        ; preds = %if.then28, %if.then9, %if.then3, %for.cond
  %51 = load %struct.switchtec_ioctl_pff_port*, %struct.switchtec_ioctl_pff_port** %up.addr, align 8, !dbg !8643
  %52 = bitcast %struct.switchtec_ioctl_pff_port* %51 to i8*, !dbg !8643
  %53 = bitcast %struct.switchtec_ioctl_pff_port* %p to i8*, !dbg !8644
  store i8* %52, i8** %to.addr.i44, align 8
  store i8* %53, i8** %from.addr.i45, align 8
  store i64 12, i64* %n.addr.i46, align 8
  %54 = load i8*, i8** %from.addr.i45, align 8, !dbg !8645
  %55 = load i64, i64* %n.addr.i46, align 8, !dbg !8645
  store i8* %54, i8** %addr.addr.i.i38, align 8
  store i64 %55, i64* %bytes.addr.i.i39, align 8
  store i8 1, i8* %is_source.addr.i.i40, align 1
  store i32 -1, i32* %sz.i.i41, align 4, !dbg !8486
  %56 = load i32, i32* %sz.i.i41, align 4, !dbg !8646
  %cmp.i.i47 = icmp sge i32 %56, 0, !dbg !8646
  br i1 %cmp.i.i47, label %land.rhs.i.i50, label %land.end.i.i54, !dbg !8646

land.rhs.i.i50:                                   ; preds = %for.end32
  %57 = load i32, i32* %sz.i.i41, align 4, !dbg !8646
  %conv.i.i48 = sext i32 %57 to i64, !dbg !8646
  %58 = load i64, i64* %bytes.addr.i.i39, align 8, !dbg !8646
  %cmp1.i.i49 = icmp ult i64 %conv.i.i48, %58, !dbg !8646
  br label %land.end.i.i54

land.end.i.i54:                                   ; preds = %land.rhs.i.i50, %for.end32
  %59 = phi i1 [ false, %for.end32 ], [ %cmp1.i.i49, %land.rhs.i.i50 ], !dbg !8647
  %lnot.i.i51 = xor i1 %59, true, !dbg !8646
  %lnot.ext.i.i52 = zext i1 %59 to i32, !dbg !8646
  %conv4.i.i53 = sext i32 %lnot.ext.i.i52 to i64, !dbg !8646
  br i1 %59, label %if.then.i.i55, label %if.end10.i.i70, !dbg !8648

if.then.i.i55:                                    ; preds = %land.end.i.i54
  %60 = load i64, i64* %bytes.addr.i.i39, align 8, !dbg !8649
  %61 = call i1 @llvm.is.constant.i64(i64 %60) #12, !dbg !8650
  br i1 %61, label %if.else.i.i58, label %if.then5.i.i56, !dbg !8651

if.then5.i.i56:                                   ; preds = %if.then.i.i55
  %62 = load i32, i32* %sz.i.i41, align 4, !dbg !8652
  %63 = load i64, i64* %bytes.addr.i.i39, align 8, !dbg !8653
  call void @copy_overflow(i32 %62, i64 %63) #11, !dbg !8654
  br label %if.end9.i.i62, !dbg !8654

if.else.i.i58:                                    ; preds = %if.then.i.i55
  %64 = load i8, i8* %is_source.addr.i.i40, align 1, !dbg !8655
  %tobool6.i.i57 = trunc i8 %64 to i1, !dbg !8655
  br i1 %tobool6.i.i57, label %if.then7.i.i59, label %if.else8.i.i60, !dbg !8656

if.then7.i.i59:                                   ; preds = %if.else.i.i58
  call void @__bad_copy_from() #11, !dbg !8657
  br label %if.end.i.i61, !dbg !8657

if.else8.i.i60:                                   ; preds = %if.else.i.i58
  call void @__bad_copy_to() #11, !dbg !8658
  br label %if.end.i.i61

if.end.i.i61:                                     ; preds = %if.else8.i.i60, %if.then7.i.i59
  br label %if.end9.i.i62

if.end9.i.i62:                                    ; preds = %if.end.i.i61, %if.then5.i.i56
  store i1 false, i1* %retval.i.i37, align 1, !dbg !8659
  br label %check_copy_size.exit.i84, !dbg !8659

if.end10.i.i70:                                   ; preds = %land.end.i.i54
  %65 = load i64, i64* %bytes.addr.i.i39, align 8, !dbg !8487
  %cmp11.i.i63 = icmp ugt i64 %65, 2147483647, !dbg !8487
  %lnot13.i.i64 = xor i1 %cmp11.i.i63, true, !dbg !8487
  %lnot.ext16.i.i65 = zext i1 %cmp11.i.i63 to i32, !dbg !8487
  store i32 %lnot.ext16.i.i65, i32* %__ret_warn_on.i.i42, align 4, !dbg !8487
  %66 = load i32, i32* %__ret_warn_on.i.i42, align 4, !dbg !8660
  %tobool17.i.i66 = icmp ne i32 %66, 0, !dbg !8660
  %lnot18.i.i67 = xor i1 %tobool17.i.i66, true, !dbg !8660
  %lnot.ext21.i.i68 = zext i1 %tobool17.i.i66 to i32, !dbg !8660
  %conv22.i.i69 = sext i32 %lnot.ext21.i.i68 to i64, !dbg !8660
  br i1 %tobool17.i.i66, label %if.then24.i.i71, label %if.end31.i.i77, !dbg !8487

if.then24.i.i71:                                  ; preds = %if.end10.i.i70
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !8661, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !8662, !srcloc !7033
  br label %if.end31.i.i77, !dbg !8663

if.end31.i.i77:                                   ; preds = %if.then24.i.i71, %if.end10.i.i70
  %67 = load i32, i32* %__ret_warn_on.i.i42, align 4, !dbg !8487
  %tobool32.i.i72 = icmp ne i32 %67, 0, !dbg !8487
  %lnot33.i.i73 = xor i1 %tobool32.i.i72, true, !dbg !8487
  %lnot.ext36.i.i74 = zext i1 %tobool32.i.i72 to i32, !dbg !8487
  %conv37.i.i75 = sext i32 %lnot.ext36.i.i74 to i64, !dbg !8487
  store i64 %conv37.i.i75, i64* %tmp.i.i43, align 8, !dbg !8660
  %68 = load i64, i64* %tmp.i.i43, align 8, !dbg !8487
  %tobool38.i.i76 = icmp ne i64 %68, 0, !dbg !8664
  br i1 %tobool38.i.i76, label %if.then39.i.i78, label %if.end40.i.i80, !dbg !8665

if.then39.i.i78:                                  ; preds = %if.end31.i.i77
  store i1 false, i1* %retval.i.i37, align 1, !dbg !8666
  br label %check_copy_size.exit.i84, !dbg !8666

if.end40.i.i80:                                   ; preds = %if.end31.i.i77
  %69 = load i8*, i8** %addr.addr.i.i38, align 8, !dbg !8667
  %70 = load i64, i64* %bytes.addr.i.i39, align 8, !dbg !8668
  %71 = load i8, i8* %is_source.addr.i.i40, align 1, !dbg !8669
  %tobool41.i.i79 = trunc i8 %71 to i1, !dbg !8669
  call void @check_object_size(i8* %69, i64 %70, i1 zeroext %tobool41.i.i79) #11, !dbg !8670
  store i1 true, i1* %retval.i.i37, align 1, !dbg !8671
  br label %check_copy_size.exit.i84, !dbg !8671

check_copy_size.exit.i84:                         ; preds = %if.end40.i.i80, %if.then39.i.i78, %if.end9.i.i62
  %72 = load i1, i1* %retval.i.i37, align 1, !dbg !8672
  %lnot.i81 = xor i1 %72, true, !dbg !8645
  %lnot.ext.i82 = zext i1 %72 to i32, !dbg !8645
  %conv.i83 = sext i32 %lnot.ext.i82 to i64, !dbg !8645
  br i1 %72, label %if.then.i86, label %copy_to_user.exit, !dbg !8673

if.then.i86:                                      ; preds = %check_copy_size.exit.i84
  %73 = load i8*, i8** %to.addr.i44, align 8, !dbg !8674
  %74 = load i8*, i8** %from.addr.i45, align 8, !dbg !8675
  %75 = load i64, i64* %n.addr.i46, align 8, !dbg !8676
  %call2.i85 = call i64 @_copy_to_user(i8* %73, i8* %74, i64 %75) #11, !dbg !8677
  store i64 %call2.i85, i64* %n.addr.i46, align 8, !dbg !8678
  br label %copy_to_user.exit, !dbg !8679

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i84, %if.then.i86
  %76 = load i64, i64* %n.addr.i46, align 8, !dbg !8680
  %tobool34 = icmp ne i64 %76, 0, !dbg !8681
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !8682

if.then35:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8683
  br label %return, !dbg !8683

if.end36:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !8684
  br label %return, !dbg !8684

return:                                           ; preds = %if.end36, %if.then35, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !8685
  ret i32 %77, !dbg !8685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ioctl_port_to_pff(%struct.switchtec_dev* %stdev, %struct.switchtec_ioctl_pff_port* %up) #4 !dbg !8686 {
entry:
  %retval.i.i35 = alloca i1, align 1
  %addr.addr.i.i36 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i36, metadata !6834, metadata !DIExpression()), !dbg !8687
  %bytes.addr.i.i37 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i37, metadata !6847, metadata !DIExpression()), !dbg !8691
  %is_source.addr.i.i38 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i38, metadata !6849, metadata !DIExpression()), !dbg !8692
  %sz.i.i39 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i39, metadata !6851, metadata !DIExpression()), !dbg !8693
  %__ret_warn_on.i.i40 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i40, metadata !6853, metadata !DIExpression()), !dbg !8694
  %tmp.i.i41 = alloca i64, align 8
  %to.addr.i42 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i42, metadata !6857, metadata !DIExpression()), !dbg !8695
  %from.addr.i43 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i43, metadata !6859, metadata !DIExpression()), !dbg !8696
  %n.addr.i44 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i44, metadata !6861, metadata !DIExpression()), !dbg !8697
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6834, metadata !DIExpression()), !dbg !8698
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6847, metadata !DIExpression()), !dbg !8702
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6849, metadata !DIExpression()), !dbg !8703
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6851, metadata !DIExpression()), !dbg !8704
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6853, metadata !DIExpression()), !dbg !8705
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !7143, metadata !DIExpression()), !dbg !8706
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !7145, metadata !DIExpression()), !dbg !8707
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !7147, metadata !DIExpression()), !dbg !8708
  %retval = alloca i32, align 4
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %up.addr = alloca %struct.switchtec_ioctl_pff_port*, align 8
  %p = alloca %struct.switchtec_ioctl_pff_port, align 4
  %pcfg = alloca %struct.part_cfg_regs*, align 8
  %_i = alloca i32, align 4
  %_s = alloca i64, align 8
  %_mask = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !8709, metadata !DIExpression()), !dbg !8710
  store %struct.switchtec_ioctl_pff_port* %up, %struct.switchtec_ioctl_pff_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_pff_port** %up.addr, metadata !8711, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_pff_port* %p, metadata !8713, metadata !DIExpression()), !dbg !8714
  call void @llvm.dbg.declare(metadata %struct.part_cfg_regs** %pcfg, metadata !8715, metadata !DIExpression()), !dbg !8716
  %0 = bitcast %struct.switchtec_ioctl_pff_port* %p to i8*, !dbg !8717
  %1 = load %struct.switchtec_ioctl_pff_port*, %struct.switchtec_ioctl_pff_port** %up.addr, align 8, !dbg !8718
  %2 = bitcast %struct.switchtec_ioctl_pff_port* %1 to i8*, !dbg !8718
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %2, i8** %from.addr.i, align 8
  store i64 12, i64* %n.addr.i, align 8
  %3 = load i8*, i8** %to.addr.i, align 8, !dbg !8719
  %4 = load i64, i64* %n.addr.i, align 8, !dbg !8719
  store i8* %3, i8** %addr.addr.i.i, align 8
  store i64 %4, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8704
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !8720
  %cmp.i.i = icmp sge i32 %5, 0, !dbg !8720
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8720

land.rhs.i.i:                                     ; preds = %entry
  %6 = load i32, i32* %sz.i.i, align 4, !dbg !8720
  %conv.i.i = sext i32 %6 to i64, !dbg !8720
  %7 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8720
  %cmp1.i.i = icmp ult i64 %conv.i.i, %7, !dbg !8720
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8721
  %lnot.i.i = xor i1 %8, true, !dbg !8720
  %lnot.ext.i.i = zext i1 %8 to i32, !dbg !8720
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8720
  br i1 %8, label %if.then.i.i, label %if.end10.i.i, !dbg !8722

if.then.i.i:                                      ; preds = %land.end.i.i
  %9 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8723
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #12, !dbg !8724
  br i1 %10, label %if.else.i.i, label %if.then5.i.i, !dbg !8725

if.then5.i.i:                                     ; preds = %if.then.i.i
  %11 = load i32, i32* %sz.i.i, align 4, !dbg !8726
  %12 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8727
  call void @copy_overflow(i32 %11, i64 %12) #11, !dbg !8728
  br label %if.end9.i.i, !dbg !8728

if.else.i.i:                                      ; preds = %if.then.i.i
  %13 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8729
  %tobool6.i.i = trunc i8 %13 to i1, !dbg !8729
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8730

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !8731
  br label %if.end.i.i, !dbg !8731

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !8732
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8733
  br label %check_copy_size.exit.i, !dbg !8733

if.end10.i.i:                                     ; preds = %land.end.i.i
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8705
  %cmp11.i.i = icmp ugt i64 %14, 2147483647, !dbg !8705
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8705
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8705
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8705
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8734
  %tobool17.i.i = icmp ne i32 %15, 0, !dbg !8734
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8734
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8734
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8734
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8705

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !8735, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !8736, !srcloc !7033
  br label %if.end31.i.i, !dbg !8737

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %16 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8705
  %tobool32.i.i = icmp ne i32 %16, 0, !dbg !8705
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8705
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8705
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8705
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8734
  %17 = load i64, i64* %tmp.i.i, align 8, !dbg !8705
  %tobool38.i.i = icmp ne i64 %17, 0, !dbg !8738
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8739

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8740
  br label %check_copy_size.exit.i, !dbg !8740

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %18 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8741
  %19 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8742
  %20 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8743
  %tobool41.i.i = trunc i8 %20 to i1, !dbg !8743
  call void @check_object_size(i8* %18, i64 %19, i1 zeroext %tobool41.i.i) #11, !dbg !8744
  store i1 true, i1* %retval.i.i, align 1, !dbg !8745
  br label %check_copy_size.exit.i, !dbg !8745

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %21 = load i1, i1* %retval.i.i, align 1, !dbg !8746
  %lnot.i = xor i1 %21, true, !dbg !8719
  %lnot.ext.i = zext i1 %21 to i32, !dbg !8719
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8719
  br i1 %21, label %if.then.i, label %copy_from_user.exit, !dbg !8747

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %22 = load i8*, i8** %to.addr.i, align 8, !dbg !8748
  %23 = load i8*, i8** %from.addr.i, align 8, !dbg !8749
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !8750
  %call2.i = call i64 @_copy_from_user(i8* %22, i8* %23, i64 %24) #11, !dbg !8751
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8752
  br label %copy_from_user.exit, !dbg !8753

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %25 = load i64, i64* %n.addr.i, align 8, !dbg !8754
  %tobool = icmp ne i64 %25, 0, !dbg !8755
  br i1 %tobool, label %if.then, label %if.end, !dbg !8756

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8757
  br label %return, !dbg !8757

if.end:                                           ; preds = %copy_from_user.exit
  %partition = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 1, !dbg !8758
  %26 = load i32, i32* %partition, align 4, !dbg !8758
  %cmp = icmp eq i32 %26, -1, !dbg !8760
  br i1 %cmp, label %if.then1, label %if.else, !dbg !8761

if.then1:                                         ; preds = %if.end
  %27 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8762
  %mmio_part_cfg = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %27, i32 0, i32 14, !dbg !8763
  %28 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %mmio_part_cfg, align 8, !dbg !8763
  store %struct.part_cfg_regs* %28, %struct.part_cfg_regs** %pcfg, align 8, !dbg !8764
  br label %if.end8, !dbg !8765

if.else:                                          ; preds = %if.end
  %partition2 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 1, !dbg !8766
  %29 = load i32, i32* %partition2, align 4, !dbg !8766
  %30 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8768
  %partition_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %30, i32 0, i32 5, !dbg !8769
  %31 = load i32, i32* %partition_count, align 8, !dbg !8769
  %cmp3 = icmp ult i32 %29, %31, !dbg !8770
  br i1 %cmp3, label %if.then4, label %if.else6, !dbg !8771

if.then4:                                         ; preds = %if.else
  %32 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8772
  %mmio_part_cfg_all = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %32, i32 0, i32 15, !dbg !8773
  %33 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %mmio_part_cfg_all, align 8, !dbg !8773
  %partition5 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 1, !dbg !8774
  %34 = load i32, i32* %partition5, align 4, !dbg !8774
  %idxprom = zext i32 %34 to i64, !dbg !8772
  %arrayidx = getelementptr %struct.part_cfg_regs, %struct.part_cfg_regs* %33, i64 %idxprom, !dbg !8772
  store %struct.part_cfg_regs* %arrayidx, %struct.part_cfg_regs** %pcfg, align 8, !dbg !8775
  br label %if.end7, !dbg !8776

if.else6:                                         ; preds = %if.else
  store i32 -22, i32* %retval, align 4, !dbg !8777
  br label %return, !dbg !8777

if.end7:                                          ; preds = %if.then4
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then1
  %port = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 2, !dbg !8778
  %35 = load i32, i32* %port, align 4, !dbg !8778
  switch i32 %35, label %sw.default [
    i32 0, label %sw.bb
    i32 100, label %sw.bb10
  ], !dbg !8779

sw.bb:                                            ; preds = %if.end8
  %36 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %pcfg, align 8, !dbg !8780
  %usp_pff_inst_id = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %36, i32 0, i32 4, !dbg !8782
  %37 = bitcast i32* %usp_pff_inst_id to i8*, !dbg !8783
  %call9 = call i32 @ioread32(i8* %37) #9, !dbg !8784
  %pff = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 0, !dbg !8785
  store i32 %call9, i32* %pff, align 4, !dbg !8786
  br label %sw.epilog, !dbg !8787

sw.bb10:                                          ; preds = %if.end8
  %38 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %pcfg, align 8, !dbg !8788
  %vep_pff_inst_id = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %38, i32 0, i32 5, !dbg !8789
  %39 = bitcast i32* %vep_pff_inst_id to i8*, !dbg !8790
  %call11 = call i32 @ioread32(i8* %39) #9, !dbg !8791
  %pff12 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 0, !dbg !8792
  store i32 %call11, i32* %pff12, align 4, !dbg !8793
  br label %sw.epilog, !dbg !8794

sw.default:                                       ; preds = %if.end8
  %port13 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 2, !dbg !8795
  %40 = load i32, i32* %port13, align 4, !dbg !8795
  %conv = zext i32 %40 to i64, !dbg !8797
  %cmp14 = icmp ugt i64 %conv, 47, !dbg !8798
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !8799

if.then16:                                        ; preds = %sw.default
  store i32 -22, i32* %retval, align 4, !dbg !8800
  br label %return, !dbg !8800

if.end17:                                         ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i32* %_i, metadata !8801, metadata !DIExpression()), !dbg !8803
  %port18 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 2, !dbg !8803
  %41 = load i32, i32* %port18, align 4, !dbg !8803
  store i32 %41, i32* %_i, align 4, !dbg !8803
  call void @llvm.dbg.declare(metadata i64* %_s, metadata !8804, metadata !DIExpression()), !dbg !8803
  store i64 48, i64* %_s, align 8, !dbg !8803
  call void @llvm.dbg.declare(metadata i64* %_mask, metadata !8805, metadata !DIExpression()), !dbg !8803
  %42 = load i32, i32* %_i, align 4, !dbg !8803
  %conv19 = zext i32 %42 to i64, !dbg !8803
  %43 = load i64, i64* %_s, align 8, !dbg !8803
  %call20 = call i64 @array_index_mask_nospec(i64 %conv19, i64 %43) #9, !dbg !8803
  store i64 %call20, i64* %_mask, align 8, !dbg !8803
  br label %do.body, !dbg !8803

do.body:                                          ; preds = %if.end17
  br label %do.end, !dbg !8806

do.end:                                           ; preds = %do.body
  br label %do.body21, !dbg !8803

do.body21:                                        ; preds = %do.end
  br label %do.end22, !dbg !8808

do.end22:                                         ; preds = %do.body21
  %44 = load i32, i32* %_i, align 4, !dbg !8803
  %conv23 = zext i32 %44 to i64, !dbg !8803
  %45 = load i64, i64* %_mask, align 8, !dbg !8803
  %and = and i64 %conv23, %45, !dbg !8803
  %conv24 = trunc i64 %and to i32, !dbg !8803
  store i32 %conv24, i32* %tmp, align 4, !dbg !8808
  %46 = load i32, i32* %tmp, align 4, !dbg !8803
  %port25 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 2, !dbg !8810
  store i32 %46, i32* %port25, align 4, !dbg !8811
  %47 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %pcfg, align 8, !dbg !8812
  %dsp_pff_inst_id = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %47, i32 0, i32 6, !dbg !8813
  %port26 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 2, !dbg !8814
  %48 = load i32, i32* %port26, align 4, !dbg !8814
  %sub = sub i32 %48, 1, !dbg !8815
  %idxprom27 = zext i32 %sub to i64, !dbg !8812
  %arrayidx28 = getelementptr [47 x i32], [47 x i32]* %dsp_pff_inst_id, i64 0, i64 %idxprom27, !dbg !8812
  %49 = bitcast i32* %arrayidx28 to i8*, !dbg !8816
  %call29 = call i32 @ioread32(i8* %49) #9, !dbg !8817
  %pff30 = getelementptr inbounds %struct.switchtec_ioctl_pff_port, %struct.switchtec_ioctl_pff_port* %p, i32 0, i32 0, !dbg !8818
  store i32 %call29, i32* %pff30, align 4, !dbg !8819
  br label %sw.epilog, !dbg !8820

sw.epilog:                                        ; preds = %do.end22, %sw.bb10, %sw.bb
  %50 = load %struct.switchtec_ioctl_pff_port*, %struct.switchtec_ioctl_pff_port** %up.addr, align 8, !dbg !8821
  %51 = bitcast %struct.switchtec_ioctl_pff_port* %50 to i8*, !dbg !8821
  %52 = bitcast %struct.switchtec_ioctl_pff_port* %p to i8*, !dbg !8822
  store i8* %51, i8** %to.addr.i42, align 8
  store i8* %52, i8** %from.addr.i43, align 8
  store i64 12, i64* %n.addr.i44, align 8
  %53 = load i8*, i8** %from.addr.i43, align 8, !dbg !8823
  %54 = load i64, i64* %n.addr.i44, align 8, !dbg !8823
  store i8* %53, i8** %addr.addr.i.i36, align 8
  store i64 %54, i64* %bytes.addr.i.i37, align 8
  store i8 1, i8* %is_source.addr.i.i38, align 1
  store i32 -1, i32* %sz.i.i39, align 4, !dbg !8693
  %55 = load i32, i32* %sz.i.i39, align 4, !dbg !8824
  %cmp.i.i45 = icmp sge i32 %55, 0, !dbg !8824
  br i1 %cmp.i.i45, label %land.rhs.i.i48, label %land.end.i.i52, !dbg !8824

land.rhs.i.i48:                                   ; preds = %sw.epilog
  %56 = load i32, i32* %sz.i.i39, align 4, !dbg !8824
  %conv.i.i46 = sext i32 %56 to i64, !dbg !8824
  %57 = load i64, i64* %bytes.addr.i.i37, align 8, !dbg !8824
  %cmp1.i.i47 = icmp ult i64 %conv.i.i46, %57, !dbg !8824
  br label %land.end.i.i52

land.end.i.i52:                                   ; preds = %land.rhs.i.i48, %sw.epilog
  %58 = phi i1 [ false, %sw.epilog ], [ %cmp1.i.i47, %land.rhs.i.i48 ], !dbg !8825
  %lnot.i.i49 = xor i1 %58, true, !dbg !8824
  %lnot.ext.i.i50 = zext i1 %58 to i32, !dbg !8824
  %conv4.i.i51 = sext i32 %lnot.ext.i.i50 to i64, !dbg !8824
  br i1 %58, label %if.then.i.i53, label %if.end10.i.i68, !dbg !8826

if.then.i.i53:                                    ; preds = %land.end.i.i52
  %59 = load i64, i64* %bytes.addr.i.i37, align 8, !dbg !8827
  %60 = call i1 @llvm.is.constant.i64(i64 %59) #12, !dbg !8828
  br i1 %60, label %if.else.i.i56, label %if.then5.i.i54, !dbg !8829

if.then5.i.i54:                                   ; preds = %if.then.i.i53
  %61 = load i32, i32* %sz.i.i39, align 4, !dbg !8830
  %62 = load i64, i64* %bytes.addr.i.i37, align 8, !dbg !8831
  call void @copy_overflow(i32 %61, i64 %62) #11, !dbg !8832
  br label %if.end9.i.i60, !dbg !8832

if.else.i.i56:                                    ; preds = %if.then.i.i53
  %63 = load i8, i8* %is_source.addr.i.i38, align 1, !dbg !8833
  %tobool6.i.i55 = trunc i8 %63 to i1, !dbg !8833
  br i1 %tobool6.i.i55, label %if.then7.i.i57, label %if.else8.i.i58, !dbg !8834

if.then7.i.i57:                                   ; preds = %if.else.i.i56
  call void @__bad_copy_from() #11, !dbg !8835
  br label %if.end.i.i59, !dbg !8835

if.else8.i.i58:                                   ; preds = %if.else.i.i56
  call void @__bad_copy_to() #11, !dbg !8836
  br label %if.end.i.i59

if.end.i.i59:                                     ; preds = %if.else8.i.i58, %if.then7.i.i57
  br label %if.end9.i.i60

if.end9.i.i60:                                    ; preds = %if.end.i.i59, %if.then5.i.i54
  store i1 false, i1* %retval.i.i35, align 1, !dbg !8837
  br label %check_copy_size.exit.i82, !dbg !8837

if.end10.i.i68:                                   ; preds = %land.end.i.i52
  %64 = load i64, i64* %bytes.addr.i.i37, align 8, !dbg !8694
  %cmp11.i.i61 = icmp ugt i64 %64, 2147483647, !dbg !8694
  %lnot13.i.i62 = xor i1 %cmp11.i.i61, true, !dbg !8694
  %lnot.ext16.i.i63 = zext i1 %cmp11.i.i61 to i32, !dbg !8694
  store i32 %lnot.ext16.i.i63, i32* %__ret_warn_on.i.i40, align 4, !dbg !8694
  %65 = load i32, i32* %__ret_warn_on.i.i40, align 4, !dbg !8838
  %tobool17.i.i64 = icmp ne i32 %65, 0, !dbg !8838
  %lnot18.i.i65 = xor i1 %tobool17.i.i64, true, !dbg !8838
  %lnot.ext21.i.i66 = zext i1 %tobool17.i.i64 to i32, !dbg !8838
  %conv22.i.i67 = sext i32 %lnot.ext21.i.i66 to i64, !dbg !8838
  br i1 %tobool17.i.i64, label %if.then24.i.i69, label %if.end31.i.i75, !dbg !8694

if.then24.i.i69:                                  ; preds = %if.end10.i.i68
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !8839, !srcloc !7030
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 40) #12, !dbg !8840, !srcloc !7033
  br label %if.end31.i.i75, !dbg !8841

if.end31.i.i75:                                   ; preds = %if.then24.i.i69, %if.end10.i.i68
  %66 = load i32, i32* %__ret_warn_on.i.i40, align 4, !dbg !8694
  %tobool32.i.i70 = icmp ne i32 %66, 0, !dbg !8694
  %lnot33.i.i71 = xor i1 %tobool32.i.i70, true, !dbg !8694
  %lnot.ext36.i.i72 = zext i1 %tobool32.i.i70 to i32, !dbg !8694
  %conv37.i.i73 = sext i32 %lnot.ext36.i.i72 to i64, !dbg !8694
  store i64 %conv37.i.i73, i64* %tmp.i.i41, align 8, !dbg !8838
  %67 = load i64, i64* %tmp.i.i41, align 8, !dbg !8694
  %tobool38.i.i74 = icmp ne i64 %67, 0, !dbg !8842
  br i1 %tobool38.i.i74, label %if.then39.i.i76, label %if.end40.i.i78, !dbg !8843

if.then39.i.i76:                                  ; preds = %if.end31.i.i75
  store i1 false, i1* %retval.i.i35, align 1, !dbg !8844
  br label %check_copy_size.exit.i82, !dbg !8844

if.end40.i.i78:                                   ; preds = %if.end31.i.i75
  %68 = load i8*, i8** %addr.addr.i.i36, align 8, !dbg !8845
  %69 = load i64, i64* %bytes.addr.i.i37, align 8, !dbg !8846
  %70 = load i8, i8* %is_source.addr.i.i38, align 1, !dbg !8847
  %tobool41.i.i77 = trunc i8 %70 to i1, !dbg !8847
  call void @check_object_size(i8* %68, i64 %69, i1 zeroext %tobool41.i.i77) #11, !dbg !8848
  store i1 true, i1* %retval.i.i35, align 1, !dbg !8849
  br label %check_copy_size.exit.i82, !dbg !8849

check_copy_size.exit.i82:                         ; preds = %if.end40.i.i78, %if.then39.i.i76, %if.end9.i.i60
  %71 = load i1, i1* %retval.i.i35, align 1, !dbg !8850
  %lnot.i79 = xor i1 %71, true, !dbg !8823
  %lnot.ext.i80 = zext i1 %71 to i32, !dbg !8823
  %conv.i81 = sext i32 %lnot.ext.i80 to i64, !dbg !8823
  br i1 %71, label %if.then.i84, label %copy_to_user.exit, !dbg !8851

if.then.i84:                                      ; preds = %check_copy_size.exit.i82
  %72 = load i8*, i8** %to.addr.i42, align 8, !dbg !8852
  %73 = load i8*, i8** %from.addr.i43, align 8, !dbg !8853
  %74 = load i64, i64* %n.addr.i44, align 8, !dbg !8854
  %call2.i83 = call i64 @_copy_to_user(i8* %72, i8* %73, i64 %74) #11, !dbg !8855
  store i64 %call2.i83, i64* %n.addr.i44, align 8, !dbg !8856
  br label %copy_to_user.exit, !dbg !8857

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i82, %if.then.i84
  %75 = load i64, i64* %n.addr.i44, align 8, !dbg !8858
  %tobool32 = icmp ne i64 %75, 0, !dbg !8859
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !8860

if.then33:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8861
  br label %return, !dbg !8861

if.end34:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !8862
  br label %return, !dbg !8862

return:                                           ; preds = %if.end34, %if.then33, %if.then16, %if.else6, %if.then
  %76 = load i32, i32* %retval, align 4, !dbg !8863
  ret i32 %76, !dbg !8863
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @flash_part_info_gen3(%struct.switchtec_dev* %stdev, %struct.switchtec_ioctl_flash_part_info* %info) #4 !dbg !8864 {
entry:
  %retval = alloca i32, align 4
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %info.addr = alloca %struct.switchtec_ioctl_flash_part_info*, align 8
  %fi = alloca %struct.flash_info_regs_gen3*, align 8
  %si = alloca %struct.sys_info_regs_gen3*, align 8
  %active_addr = alloca i32, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !8865, metadata !DIExpression()), !dbg !8866
  store %struct.switchtec_ioctl_flash_part_info* %info, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_flash_part_info** %info.addr, metadata !8867, metadata !DIExpression()), !dbg !8868
  call void @llvm.dbg.declare(metadata %struct.flash_info_regs_gen3** %fi, metadata !8869, metadata !DIExpression()), !dbg !8871
  %0 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8872
  %mmio_flash_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %0, i32 0, i32 12, !dbg !8873
  %1 = load %struct.flash_info_regs*, %struct.flash_info_regs** %mmio_flash_info, align 8, !dbg !8873
  %2 = getelementptr inbounds %struct.flash_info_regs, %struct.flash_info_regs* %1, i32 0, i32 0, !dbg !8874
  %gen3 = bitcast %union.anon.68* %2 to %struct.flash_info_regs_gen3*, !dbg !8874
  store %struct.flash_info_regs_gen3* %gen3, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8871
  call void @llvm.dbg.declare(metadata %struct.sys_info_regs_gen3** %si, metadata !8875, metadata !DIExpression()), !dbg !8877
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !8878
  %mmio_sys_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 11, !dbg !8879
  %4 = load %struct.sys_info_regs*, %struct.sys_info_regs** %mmio_sys_info, align 8, !dbg !8879
  %5 = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %4, i32 0, i32 3, !dbg !8880
  %gen31 = bitcast %union.anon.67* %5 to %struct.sys_info_regs_gen3*, !dbg !8880
  store %struct.sys_info_regs_gen3* %gen31, %struct.sys_info_regs_gen3** %si, align 8, !dbg !8877
  call void @llvm.dbg.declare(metadata i32* %active_addr, metadata !8881, metadata !DIExpression()), !dbg !8882
  store i32 -1, i32* %active_addr, align 4, !dbg !8882
  %6 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8883
  %flash_partition = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %6, i32 0, i32 0, !dbg !8884
  %7 = load i32, i32* %flash_partition, align 4, !dbg !8884
  switch i32 %7, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 2, label %sw.bb13
    i32 3, label %sw.bb21
    i32 4, label %sw.bb31
    i32 5, label %sw.bb32
    i32 6, label %sw.bb33
    i32 7, label %sw.bb36
    i32 8, label %sw.bb39
    i32 9, label %sw.bb42
    i32 10, label %sw.bb45
    i32 11, label %sw.bb48
    i32 12, label %sw.bb51
  ], !dbg !8885

sw.bb:                                            ; preds = %entry
  %8 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8886
  %active_cfg = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %8, i32 0, i32 2, !dbg !8888
  %9 = bitcast %struct.active_partition_info_gen3* %active_cfg to i8*, !dbg !8889
  %call = call i32 @ioread32(i8* %9) #9, !dbg !8890
  store i32 %call, i32* %active_addr, align 4, !dbg !8891
  %10 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8892
  %11 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8893
  %cfg0 = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %11, i32 0, i32 6, !dbg !8894
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %10, %struct.partition_info* %cfg0) #9, !dbg !8895
  %12 = load %struct.sys_info_regs_gen3*, %struct.sys_info_regs_gen3** %si, align 8, !dbg !8896
  %cfg_running = getelementptr inbounds %struct.sys_info_regs_gen3, %struct.sys_info_regs_gen3* %12, i32 0, i32 5, !dbg !8898
  %13 = bitcast i16* %cfg_running to i8*, !dbg !8899
  %call2 = call i32 @ioread16(i8* %13) #9, !dbg !8900
  %cmp = icmp eq i32 %call2, 4, !dbg !8901
  br i1 %cmp, label %if.then, label %if.end, !dbg !8902

if.then:                                          ; preds = %sw.bb
  %14 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8903
  %active = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %14, i32 0, i32 3, !dbg !8904
  %15 = load i32, i32* %active, align 4, !dbg !8905
  %or = or i32 %15, 2, !dbg !8905
  store i32 %or, i32* %active, align 4, !dbg !8905
  br label %if.end, !dbg !8903

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !8906

sw.bb3:                                           ; preds = %entry
  %16 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8907
  %active_cfg4 = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %16, i32 0, i32 2, !dbg !8908
  %17 = bitcast %struct.active_partition_info_gen3* %active_cfg4 to i8*, !dbg !8909
  %call5 = call i32 @ioread32(i8* %17) #9, !dbg !8910
  store i32 %call5, i32* %active_addr, align 4, !dbg !8911
  %18 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8912
  %19 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8913
  %cfg1 = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %19, i32 0, i32 7, !dbg !8914
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %18, %struct.partition_info* %cfg1) #9, !dbg !8915
  %20 = load %struct.sys_info_regs_gen3*, %struct.sys_info_regs_gen3** %si, align 8, !dbg !8916
  %cfg_running6 = getelementptr inbounds %struct.sys_info_regs_gen3, %struct.sys_info_regs_gen3* %20, i32 0, i32 5, !dbg !8918
  %21 = bitcast i16* %cfg_running6 to i8*, !dbg !8919
  %call7 = call i32 @ioread16(i8* %21) #9, !dbg !8920
  %cmp8 = icmp eq i32 %call7, 5, !dbg !8921
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !8922

if.then9:                                         ; preds = %sw.bb3
  %22 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8923
  %active10 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %22, i32 0, i32 3, !dbg !8924
  %23 = load i32, i32* %active10, align 4, !dbg !8925
  %or11 = or i32 %23, 2, !dbg !8925
  store i32 %or11, i32* %active10, align 4, !dbg !8925
  br label %if.end12, !dbg !8923

if.end12:                                         ; preds = %if.then9, %sw.bb3
  br label %sw.epilog, !dbg !8926

sw.bb13:                                          ; preds = %entry
  %24 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8927
  %active_img = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %24, i32 0, i32 1, !dbg !8928
  %25 = bitcast %struct.active_partition_info_gen3* %active_img to i8*, !dbg !8929
  %call14 = call i32 @ioread32(i8* %25) #9, !dbg !8930
  store i32 %call14, i32* %active_addr, align 4, !dbg !8931
  %26 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8932
  %27 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8933
  %img0 = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %27, i32 0, i32 8, !dbg !8934
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %26, %struct.partition_info* %img0) #9, !dbg !8935
  %28 = load %struct.sys_info_regs_gen3*, %struct.sys_info_regs_gen3** %si, align 8, !dbg !8936
  %img_running = getelementptr inbounds %struct.sys_info_regs_gen3, %struct.sys_info_regs_gen3* %28, i32 0, i32 6, !dbg !8938
  %29 = bitcast i16* %img_running to i8*, !dbg !8939
  %call15 = call i32 @ioread16(i8* %29) #9, !dbg !8940
  %cmp16 = icmp eq i32 %call15, 3, !dbg !8941
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !8942

if.then17:                                        ; preds = %sw.bb13
  %30 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8943
  %active18 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %30, i32 0, i32 3, !dbg !8944
  %31 = load i32, i32* %active18, align 4, !dbg !8945
  %or19 = or i32 %31, 2, !dbg !8945
  store i32 %or19, i32* %active18, align 4, !dbg !8945
  br label %if.end20, !dbg !8943

if.end20:                                         ; preds = %if.then17, %sw.bb13
  br label %sw.epilog, !dbg !8946

sw.bb21:                                          ; preds = %entry
  %32 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8947
  %active_img22 = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %32, i32 0, i32 1, !dbg !8948
  %33 = bitcast %struct.active_partition_info_gen3* %active_img22 to i8*, !dbg !8949
  %call23 = call i32 @ioread32(i8* %33) #9, !dbg !8950
  store i32 %call23, i32* %active_addr, align 4, !dbg !8951
  %34 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8952
  %35 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8953
  %img1 = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %35, i32 0, i32 9, !dbg !8954
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %34, %struct.partition_info* %img1) #9, !dbg !8955
  %36 = load %struct.sys_info_regs_gen3*, %struct.sys_info_regs_gen3** %si, align 8, !dbg !8956
  %img_running24 = getelementptr inbounds %struct.sys_info_regs_gen3, %struct.sys_info_regs_gen3* %36, i32 0, i32 6, !dbg !8958
  %37 = bitcast i16* %img_running24 to i8*, !dbg !8959
  %call25 = call i32 @ioread16(i8* %37) #9, !dbg !8960
  %cmp26 = icmp eq i32 %call25, 7, !dbg !8961
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !8962

if.then27:                                        ; preds = %sw.bb21
  %38 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8963
  %active28 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %38, i32 0, i32 3, !dbg !8964
  %39 = load i32, i32* %active28, align 4, !dbg !8965
  %or29 = or i32 %39, 2, !dbg !8965
  store i32 %or29, i32* %active28, align 4, !dbg !8965
  br label %if.end30, !dbg !8963

if.end30:                                         ; preds = %if.then27, %sw.bb21
  br label %sw.epilog, !dbg !8966

sw.bb31:                                          ; preds = %entry
  %40 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8967
  %41 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8968
  %nvlog = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %41, i32 0, i32 10, !dbg !8969
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %40, %struct.partition_info* %nvlog) #9, !dbg !8970
  br label %sw.epilog, !dbg !8971

sw.bb32:                                          ; preds = %entry
  %42 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8972
  %43 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8973
  %vendor = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %43, i32 0, i32 11, !dbg !8974
  %arrayidx = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor, i64 0, i64 0, !dbg !8973
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %42, %struct.partition_info* %arrayidx) #9, !dbg !8975
  br label %sw.epilog, !dbg !8976

sw.bb33:                                          ; preds = %entry
  %44 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8977
  %45 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8978
  %vendor34 = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %45, i32 0, i32 11, !dbg !8979
  %arrayidx35 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor34, i64 0, i64 1, !dbg !8978
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %44, %struct.partition_info* %arrayidx35) #9, !dbg !8980
  br label %sw.epilog, !dbg !8981

sw.bb36:                                          ; preds = %entry
  %46 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8982
  %47 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8983
  %vendor37 = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %47, i32 0, i32 11, !dbg !8984
  %arrayidx38 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor37, i64 0, i64 2, !dbg !8983
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %46, %struct.partition_info* %arrayidx38) #9, !dbg !8985
  br label %sw.epilog, !dbg !8986

sw.bb39:                                          ; preds = %entry
  %48 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8987
  %49 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8988
  %vendor40 = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %49, i32 0, i32 11, !dbg !8989
  %arrayidx41 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor40, i64 0, i64 3, !dbg !8988
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %48, %struct.partition_info* %arrayidx41) #9, !dbg !8990
  br label %sw.epilog, !dbg !8991

sw.bb42:                                          ; preds = %entry
  %50 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8992
  %51 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8993
  %vendor43 = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %51, i32 0, i32 11, !dbg !8994
  %arrayidx44 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor43, i64 0, i64 4, !dbg !8993
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %50, %struct.partition_info* %arrayidx44) #9, !dbg !8995
  br label %sw.epilog, !dbg !8996

sw.bb45:                                          ; preds = %entry
  %52 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !8997
  %53 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !8998
  %vendor46 = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %53, i32 0, i32 11, !dbg !8999
  %arrayidx47 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor46, i64 0, i64 5, !dbg !8998
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %52, %struct.partition_info* %arrayidx47) #9, !dbg !9000
  br label %sw.epilog, !dbg !9001

sw.bb48:                                          ; preds = %entry
  %54 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9002
  %55 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !9003
  %vendor49 = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %55, i32 0, i32 11, !dbg !9004
  %arrayidx50 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor49, i64 0, i64 6, !dbg !9003
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %54, %struct.partition_info* %arrayidx50) #9, !dbg !9005
  br label %sw.epilog, !dbg !9006

sw.bb51:                                          ; preds = %entry
  %56 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9007
  %57 = load %struct.flash_info_regs_gen3*, %struct.flash_info_regs_gen3** %fi, align 8, !dbg !9008
  %vendor52 = getelementptr inbounds %struct.flash_info_regs_gen3, %struct.flash_info_regs_gen3* %57, i32 0, i32 11, !dbg !9009
  %arrayidx53 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor52, i64 0, i64 7, !dbg !9008
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %56, %struct.partition_info* %arrayidx53) #9, !dbg !9010
  br label %sw.epilog, !dbg !9011

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9012
  br label %return, !dbg !9012

sw.epilog:                                        ; preds = %sw.bb51, %sw.bb48, %sw.bb45, %sw.bb42, %sw.bb39, %sw.bb36, %sw.bb33, %sw.bb32, %sw.bb31, %if.end30, %if.end20, %if.end12, %if.end
  %58 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9013
  %address = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %58, i32 0, i32 1, !dbg !9015
  %59 = load i32, i32* %address, align 4, !dbg !9015
  %60 = load i32, i32* %active_addr, align 4, !dbg !9016
  %cmp54 = icmp eq i32 %59, %60, !dbg !9017
  br i1 %cmp54, label %if.then55, label %if.end58, !dbg !9018

if.then55:                                        ; preds = %sw.epilog
  %61 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9019
  %active56 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %61, i32 0, i32 3, !dbg !9020
  %62 = load i32, i32* %active56, align 4, !dbg !9021
  %or57 = or i32 %62, 1, !dbg !9021
  store i32 %or57, i32* %active56, align 4, !dbg !9021
  br label %if.end58, !dbg !9019

if.end58:                                         ; preds = %if.then55, %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !9022
  br label %return, !dbg !9022

return:                                           ; preds = %if.end58, %sw.default
  %63 = load i32, i32* %retval, align 4, !dbg !9023
  ret i32 %63, !dbg !9023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @flash_part_info_gen4(%struct.switchtec_dev* %stdev, %struct.switchtec_ioctl_flash_part_info* %info) #4 !dbg !9024 {
entry:
  %retval = alloca i32, align 4
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %info.addr = alloca %struct.switchtec_ioctl_flash_part_info*, align 8
  %fi = alloca %struct.flash_info_regs_gen4*, align 8
  %si = alloca %struct.sys_info_regs_gen4*, align 8
  %af = alloca %struct.active_partition_info_gen4*, align 8
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !9025, metadata !DIExpression()), !dbg !9026
  store %struct.switchtec_ioctl_flash_part_info* %info, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_flash_part_info** %info.addr, metadata !9027, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.declare(metadata %struct.flash_info_regs_gen4** %fi, metadata !9029, metadata !DIExpression()), !dbg !9031
  %0 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !9032
  %mmio_flash_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %0, i32 0, i32 12, !dbg !9033
  %1 = load %struct.flash_info_regs*, %struct.flash_info_regs** %mmio_flash_info, align 8, !dbg !9033
  %2 = getelementptr inbounds %struct.flash_info_regs, %struct.flash_info_regs* %1, i32 0, i32 0, !dbg !9034
  %gen4 = bitcast %union.anon.68* %2 to %struct.flash_info_regs_gen4*, !dbg !9034
  store %struct.flash_info_regs_gen4* %gen4, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9031
  call void @llvm.dbg.declare(metadata %struct.sys_info_regs_gen4** %si, metadata !9035, metadata !DIExpression()), !dbg !9037
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !9038
  %mmio_sys_info = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 11, !dbg !9039
  %4 = load %struct.sys_info_regs*, %struct.sys_info_regs** %mmio_sys_info, align 8, !dbg !9039
  %5 = getelementptr inbounds %struct.sys_info_regs, %struct.sys_info_regs* %4, i32 0, i32 3, !dbg !9040
  %gen41 = bitcast %union.anon.67* %5 to %struct.sys_info_regs_gen4*, !dbg !9040
  store %struct.sys_info_regs_gen4* %gen41, %struct.sys_info_regs_gen4** %si, align 8, !dbg !9037
  call void @llvm.dbg.declare(metadata %struct.active_partition_info_gen4** %af, metadata !9041, metadata !DIExpression()), !dbg !9043
  %6 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9044
  %active_flag = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %6, i32 0, i32 2, !dbg !9045
  store %struct.active_partition_info_gen4* %active_flag, %struct.active_partition_info_gen4** %af, align 8, !dbg !9043
  %7 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9046
  %flash_partition = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %7, i32 0, i32 0, !dbg !9047
  %8 = load i32, i32* %flash_partition, align 4, !dbg !9047
  switch i32 %8, label %sw.default [
    i32 15, label %sw.bb
    i32 16, label %sw.bb2
    i32 17, label %sw.bb3
    i32 18, label %sw.bb10
    i32 13, label %sw.bb25
    i32 14, label %sw.bb38
    i32 0, label %sw.bb53
    i32 1, label %sw.bb66
    i32 2, label %sw.bb81
    i32 3, label %sw.bb94
    i32 4, label %sw.bb109
    i32 5, label %sw.bb110
    i32 6, label %sw.bb111
    i32 7, label %sw.bb114
    i32 8, label %sw.bb117
    i32 9, label %sw.bb120
    i32 10, label %sw.bb123
    i32 11, label %sw.bb126
    i32 12, label %sw.bb129
  ], !dbg !9048

sw.bb:                                            ; preds = %entry
  %9 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9049
  %10 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9051
  %map0 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %10, i32 0, i32 4, !dbg !9052
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %9, %struct.partition_info* %map0) #9, !dbg !9053
  br label %sw.epilog, !dbg !9054

sw.bb2:                                           ; preds = %entry
  %11 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9055
  %12 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9056
  %map1 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %12, i32 0, i32 5, !dbg !9057
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %11, %struct.partition_info* %map1) #9, !dbg !9058
  br label %sw.epilog, !dbg !9059

sw.bb3:                                           ; preds = %entry
  %13 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9060
  %14 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9061
  %key0 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %14, i32 0, i32 6, !dbg !9062
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %13, %struct.partition_info* %key0) #9, !dbg !9063
  %15 = load %struct.active_partition_info_gen4*, %struct.active_partition_info_gen4** %af, align 8, !dbg !9064
  %key = getelementptr inbounds %struct.active_partition_info_gen4, %struct.active_partition_info_gen4* %15, i32 0, i32 3, !dbg !9066
  %call = call i32 @ioread8(i8* %key) #9, !dbg !9067
  %cmp = icmp eq i32 %call, 0, !dbg !9068
  br i1 %cmp, label %if.then, label %if.end, !dbg !9069

if.then:                                          ; preds = %sw.bb3
  %16 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9070
  %active = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %16, i32 0, i32 3, !dbg !9071
  %17 = load i32, i32* %active, align 4, !dbg !9072
  %or = or i32 %17, 1, !dbg !9072
  store i32 %or, i32* %active, align 4, !dbg !9072
  br label %if.end, !dbg !9070

if.end:                                           ; preds = %if.then, %sw.bb3
  %18 = load %struct.sys_info_regs_gen4*, %struct.sys_info_regs_gen4** %si, align 8, !dbg !9073
  %key_running = getelementptr inbounds %struct.sys_info_regs_gen4, %struct.sys_info_regs_gen4* %18, i32 0, i32 18, !dbg !9075
  %19 = bitcast i16* %key_running to i8*, !dbg !9076
  %call4 = call i32 @ioread16(i8* %19) #9, !dbg !9077
  %cmp5 = icmp eq i32 %call4, 2, !dbg !9078
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !9079

if.then6:                                         ; preds = %if.end
  %20 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9080
  %active7 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %20, i32 0, i32 3, !dbg !9081
  %21 = load i32, i32* %active7, align 4, !dbg !9082
  %or8 = or i32 %21, 2, !dbg !9082
  store i32 %or8, i32* %active7, align 4, !dbg !9082
  br label %if.end9, !dbg !9080

if.end9:                                          ; preds = %if.then6, %if.end
  br label %sw.epilog, !dbg !9083

sw.bb10:                                          ; preds = %entry
  %22 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9084
  %23 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9085
  %key1 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %23, i32 0, i32 7, !dbg !9086
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %22, %struct.partition_info* %key1) #9, !dbg !9087
  %24 = load %struct.active_partition_info_gen4*, %struct.active_partition_info_gen4** %af, align 8, !dbg !9088
  %key11 = getelementptr inbounds %struct.active_partition_info_gen4, %struct.active_partition_info_gen4* %24, i32 0, i32 3, !dbg !9090
  %call12 = call i32 @ioread8(i8* %key11) #9, !dbg !9091
  %cmp13 = icmp eq i32 %call12, 1, !dbg !9092
  br i1 %cmp13, label %if.then14, label %if.end17, !dbg !9093

if.then14:                                        ; preds = %sw.bb10
  %25 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9094
  %active15 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %25, i32 0, i32 3, !dbg !9095
  %26 = load i32, i32* %active15, align 4, !dbg !9096
  %or16 = or i32 %26, 1, !dbg !9096
  store i32 %or16, i32* %active15, align 4, !dbg !9096
  br label %if.end17, !dbg !9094

if.end17:                                         ; preds = %if.then14, %sw.bb10
  %27 = load %struct.sys_info_regs_gen4*, %struct.sys_info_regs_gen4** %si, align 8, !dbg !9097
  %key_running18 = getelementptr inbounds %struct.sys_info_regs_gen4, %struct.sys_info_regs_gen4* %27, i32 0, i32 18, !dbg !9099
  %28 = bitcast i16* %key_running18 to i8*, !dbg !9100
  %call19 = call i32 @ioread16(i8* %28) #9, !dbg !9101
  %cmp20 = icmp eq i32 %call19, 3, !dbg !9102
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !9103

if.then21:                                        ; preds = %if.end17
  %29 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9104
  %active22 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %29, i32 0, i32 3, !dbg !9105
  %30 = load i32, i32* %active22, align 4, !dbg !9106
  %or23 = or i32 %30, 2, !dbg !9106
  store i32 %or23, i32* %active22, align 4, !dbg !9106
  br label %if.end24, !dbg !9104

if.end24:                                         ; preds = %if.then21, %if.end17
  br label %sw.epilog, !dbg !9107

sw.bb25:                                          ; preds = %entry
  %31 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9108
  %32 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9109
  %bl2_0 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %32, i32 0, i32 8, !dbg !9110
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %31, %struct.partition_info* %bl2_0) #9, !dbg !9111
  %33 = load %struct.active_partition_info_gen4*, %struct.active_partition_info_gen4** %af, align 8, !dbg !9112
  %bl2 = getelementptr inbounds %struct.active_partition_info_gen4, %struct.active_partition_info_gen4* %33, i32 0, i32 0, !dbg !9114
  %call26 = call i32 @ioread8(i8* %bl2) #9, !dbg !9115
  %cmp27 = icmp eq i32 %call26, 0, !dbg !9116
  br i1 %cmp27, label %if.then28, label %if.end31, !dbg !9117

if.then28:                                        ; preds = %sw.bb25
  %34 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9118
  %active29 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %34, i32 0, i32 3, !dbg !9119
  %35 = load i32, i32* %active29, align 4, !dbg !9120
  %or30 = or i32 %35, 1, !dbg !9120
  store i32 %or30, i32* %active29, align 4, !dbg !9120
  br label %if.end31, !dbg !9118

if.end31:                                         ; preds = %if.then28, %sw.bb25
  %36 = load %struct.sys_info_regs_gen4*, %struct.sys_info_regs_gen4** %si, align 8, !dbg !9121
  %bl2_running = getelementptr inbounds %struct.sys_info_regs_gen4, %struct.sys_info_regs_gen4* %36, i32 0, i32 15, !dbg !9123
  %37 = bitcast i16* %bl2_running to i8*, !dbg !9124
  %call32 = call i32 @ioread16(i8* %37) #9, !dbg !9125
  %cmp33 = icmp eq i32 %call32, 4, !dbg !9126
  br i1 %cmp33, label %if.then34, label %if.end37, !dbg !9127

if.then34:                                        ; preds = %if.end31
  %38 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9128
  %active35 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %38, i32 0, i32 3, !dbg !9129
  %39 = load i32, i32* %active35, align 4, !dbg !9130
  %or36 = or i32 %39, 2, !dbg !9130
  store i32 %or36, i32* %active35, align 4, !dbg !9130
  br label %if.end37, !dbg !9128

if.end37:                                         ; preds = %if.then34, %if.end31
  br label %sw.epilog, !dbg !9131

sw.bb38:                                          ; preds = %entry
  %40 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9132
  %41 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9133
  %bl2_1 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %41, i32 0, i32 9, !dbg !9134
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %40, %struct.partition_info* %bl2_1) #9, !dbg !9135
  %42 = load %struct.active_partition_info_gen4*, %struct.active_partition_info_gen4** %af, align 8, !dbg !9136
  %bl239 = getelementptr inbounds %struct.active_partition_info_gen4, %struct.active_partition_info_gen4* %42, i32 0, i32 0, !dbg !9138
  %call40 = call i32 @ioread8(i8* %bl239) #9, !dbg !9139
  %cmp41 = icmp eq i32 %call40, 1, !dbg !9140
  br i1 %cmp41, label %if.then42, label %if.end45, !dbg !9141

if.then42:                                        ; preds = %sw.bb38
  %43 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9142
  %active43 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %43, i32 0, i32 3, !dbg !9143
  %44 = load i32, i32* %active43, align 4, !dbg !9144
  %or44 = or i32 %44, 1, !dbg !9144
  store i32 %or44, i32* %active43, align 4, !dbg !9144
  br label %if.end45, !dbg !9142

if.end45:                                         ; preds = %if.then42, %sw.bb38
  %45 = load %struct.sys_info_regs_gen4*, %struct.sys_info_regs_gen4** %si, align 8, !dbg !9145
  %bl2_running46 = getelementptr inbounds %struct.sys_info_regs_gen4, %struct.sys_info_regs_gen4* %45, i32 0, i32 15, !dbg !9147
  %46 = bitcast i16* %bl2_running46 to i8*, !dbg !9148
  %call47 = call i32 @ioread16(i8* %46) #9, !dbg !9149
  %cmp48 = icmp eq i32 %call47, 5, !dbg !9150
  br i1 %cmp48, label %if.then49, label %if.end52, !dbg !9151

if.then49:                                        ; preds = %if.end45
  %47 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9152
  %active50 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %47, i32 0, i32 3, !dbg !9153
  %48 = load i32, i32* %active50, align 4, !dbg !9154
  %or51 = or i32 %48, 2, !dbg !9154
  store i32 %or51, i32* %active50, align 4, !dbg !9154
  br label %if.end52, !dbg !9152

if.end52:                                         ; preds = %if.then49, %if.end45
  br label %sw.epilog, !dbg !9155

sw.bb53:                                          ; preds = %entry
  %49 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9156
  %50 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9157
  %cfg0 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %50, i32 0, i32 10, !dbg !9158
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %49, %struct.partition_info* %cfg0) #9, !dbg !9159
  %51 = load %struct.active_partition_info_gen4*, %struct.active_partition_info_gen4** %af, align 8, !dbg !9160
  %cfg = getelementptr inbounds %struct.active_partition_info_gen4, %struct.active_partition_info_gen4* %51, i32 0, i32 1, !dbg !9162
  %call54 = call i32 @ioread8(i8* %cfg) #9, !dbg !9163
  %cmp55 = icmp eq i32 %call54, 0, !dbg !9164
  br i1 %cmp55, label %if.then56, label %if.end59, !dbg !9165

if.then56:                                        ; preds = %sw.bb53
  %52 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9166
  %active57 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %52, i32 0, i32 3, !dbg !9167
  %53 = load i32, i32* %active57, align 4, !dbg !9168
  %or58 = or i32 %53, 1, !dbg !9168
  store i32 %or58, i32* %active57, align 4, !dbg !9168
  br label %if.end59, !dbg !9166

if.end59:                                         ; preds = %if.then56, %sw.bb53
  %54 = load %struct.sys_info_regs_gen4*, %struct.sys_info_regs_gen4** %si, align 8, !dbg !9169
  %cfg_running = getelementptr inbounds %struct.sys_info_regs_gen4, %struct.sys_info_regs_gen4* %54, i32 0, i32 16, !dbg !9171
  %55 = bitcast i16* %cfg_running to i8*, !dbg !9172
  %call60 = call i32 @ioread16(i8* %55) #9, !dbg !9173
  %cmp61 = icmp eq i32 %call60, 6, !dbg !9174
  br i1 %cmp61, label %if.then62, label %if.end65, !dbg !9175

if.then62:                                        ; preds = %if.end59
  %56 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9176
  %active63 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %56, i32 0, i32 3, !dbg !9177
  %57 = load i32, i32* %active63, align 4, !dbg !9178
  %or64 = or i32 %57, 2, !dbg !9178
  store i32 %or64, i32* %active63, align 4, !dbg !9178
  br label %if.end65, !dbg !9176

if.end65:                                         ; preds = %if.then62, %if.end59
  br label %sw.epilog, !dbg !9179

sw.bb66:                                          ; preds = %entry
  %58 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9180
  %59 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9181
  %cfg1 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %59, i32 0, i32 11, !dbg !9182
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %58, %struct.partition_info* %cfg1) #9, !dbg !9183
  %60 = load %struct.active_partition_info_gen4*, %struct.active_partition_info_gen4** %af, align 8, !dbg !9184
  %cfg67 = getelementptr inbounds %struct.active_partition_info_gen4, %struct.active_partition_info_gen4* %60, i32 0, i32 1, !dbg !9186
  %call68 = call i32 @ioread8(i8* %cfg67) #9, !dbg !9187
  %cmp69 = icmp eq i32 %call68, 1, !dbg !9188
  br i1 %cmp69, label %if.then70, label %if.end73, !dbg !9189

if.then70:                                        ; preds = %sw.bb66
  %61 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9190
  %active71 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %61, i32 0, i32 3, !dbg !9191
  %62 = load i32, i32* %active71, align 4, !dbg !9192
  %or72 = or i32 %62, 1, !dbg !9192
  store i32 %or72, i32* %active71, align 4, !dbg !9192
  br label %if.end73, !dbg !9190

if.end73:                                         ; preds = %if.then70, %sw.bb66
  %63 = load %struct.sys_info_regs_gen4*, %struct.sys_info_regs_gen4** %si, align 8, !dbg !9193
  %cfg_running74 = getelementptr inbounds %struct.sys_info_regs_gen4, %struct.sys_info_regs_gen4* %63, i32 0, i32 16, !dbg !9195
  %64 = bitcast i16* %cfg_running74 to i8*, !dbg !9196
  %call75 = call i32 @ioread16(i8* %64) #9, !dbg !9197
  %cmp76 = icmp eq i32 %call75, 7, !dbg !9198
  br i1 %cmp76, label %if.then77, label %if.end80, !dbg !9199

if.then77:                                        ; preds = %if.end73
  %65 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9200
  %active78 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %65, i32 0, i32 3, !dbg !9201
  %66 = load i32, i32* %active78, align 4, !dbg !9202
  %or79 = or i32 %66, 2, !dbg !9202
  store i32 %or79, i32* %active78, align 4, !dbg !9202
  br label %if.end80, !dbg !9200

if.end80:                                         ; preds = %if.then77, %if.end73
  br label %sw.epilog, !dbg !9203

sw.bb81:                                          ; preds = %entry
  %67 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9204
  %68 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9205
  %img0 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %68, i32 0, i32 12, !dbg !9206
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %67, %struct.partition_info* %img0) #9, !dbg !9207
  %69 = load %struct.active_partition_info_gen4*, %struct.active_partition_info_gen4** %af, align 8, !dbg !9208
  %img = getelementptr inbounds %struct.active_partition_info_gen4, %struct.active_partition_info_gen4* %69, i32 0, i32 2, !dbg !9210
  %call82 = call i32 @ioread8(i8* %img) #9, !dbg !9211
  %cmp83 = icmp eq i32 %call82, 0, !dbg !9212
  br i1 %cmp83, label %if.then84, label %if.end87, !dbg !9213

if.then84:                                        ; preds = %sw.bb81
  %70 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9214
  %active85 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %70, i32 0, i32 3, !dbg !9215
  %71 = load i32, i32* %active85, align 4, !dbg !9216
  %or86 = or i32 %71, 1, !dbg !9216
  store i32 %or86, i32* %active85, align 4, !dbg !9216
  br label %if.end87, !dbg !9214

if.end87:                                         ; preds = %if.then84, %sw.bb81
  %72 = load %struct.sys_info_regs_gen4*, %struct.sys_info_regs_gen4** %si, align 8, !dbg !9217
  %img_running = getelementptr inbounds %struct.sys_info_regs_gen4, %struct.sys_info_regs_gen4* %72, i32 0, i32 17, !dbg !9219
  %73 = bitcast i16* %img_running to i8*, !dbg !9220
  %call88 = call i32 @ioread16(i8* %73) #9, !dbg !9221
  %cmp89 = icmp eq i32 %call88, 8, !dbg !9222
  br i1 %cmp89, label %if.then90, label %if.end93, !dbg !9223

if.then90:                                        ; preds = %if.end87
  %74 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9224
  %active91 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %74, i32 0, i32 3, !dbg !9225
  %75 = load i32, i32* %active91, align 4, !dbg !9226
  %or92 = or i32 %75, 2, !dbg !9226
  store i32 %or92, i32* %active91, align 4, !dbg !9226
  br label %if.end93, !dbg !9224

if.end93:                                         ; preds = %if.then90, %if.end87
  br label %sw.epilog, !dbg !9227

sw.bb94:                                          ; preds = %entry
  %76 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9228
  %77 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9229
  %img1 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %77, i32 0, i32 13, !dbg !9230
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %76, %struct.partition_info* %img1) #9, !dbg !9231
  %78 = load %struct.active_partition_info_gen4*, %struct.active_partition_info_gen4** %af, align 8, !dbg !9232
  %img95 = getelementptr inbounds %struct.active_partition_info_gen4, %struct.active_partition_info_gen4* %78, i32 0, i32 2, !dbg !9234
  %call96 = call i32 @ioread8(i8* %img95) #9, !dbg !9235
  %cmp97 = icmp eq i32 %call96, 1, !dbg !9236
  br i1 %cmp97, label %if.then98, label %if.end101, !dbg !9237

if.then98:                                        ; preds = %sw.bb94
  %79 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9238
  %active99 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %79, i32 0, i32 3, !dbg !9239
  %80 = load i32, i32* %active99, align 4, !dbg !9240
  %or100 = or i32 %80, 1, !dbg !9240
  store i32 %or100, i32* %active99, align 4, !dbg !9240
  br label %if.end101, !dbg !9238

if.end101:                                        ; preds = %if.then98, %sw.bb94
  %81 = load %struct.sys_info_regs_gen4*, %struct.sys_info_regs_gen4** %si, align 8, !dbg !9241
  %img_running102 = getelementptr inbounds %struct.sys_info_regs_gen4, %struct.sys_info_regs_gen4* %81, i32 0, i32 17, !dbg !9243
  %82 = bitcast i16* %img_running102 to i8*, !dbg !9244
  %call103 = call i32 @ioread16(i8* %82) #9, !dbg !9245
  %cmp104 = icmp eq i32 %call103, 9, !dbg !9246
  br i1 %cmp104, label %if.then105, label %if.end108, !dbg !9247

if.then105:                                       ; preds = %if.end101
  %83 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9248
  %active106 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %83, i32 0, i32 3, !dbg !9249
  %84 = load i32, i32* %active106, align 4, !dbg !9250
  %or107 = or i32 %84, 2, !dbg !9250
  store i32 %or107, i32* %active106, align 4, !dbg !9250
  br label %if.end108, !dbg !9248

if.end108:                                        ; preds = %if.then105, %if.end101
  br label %sw.epilog, !dbg !9251

sw.bb109:                                         ; preds = %entry
  %85 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9252
  %86 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9253
  %nvlog = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %86, i32 0, i32 14, !dbg !9254
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %85, %struct.partition_info* %nvlog) #9, !dbg !9255
  br label %sw.epilog, !dbg !9256

sw.bb110:                                         ; preds = %entry
  %87 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9257
  %88 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9258
  %vendor = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %88, i32 0, i32 15, !dbg !9259
  %arrayidx = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor, i64 0, i64 0, !dbg !9258
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %87, %struct.partition_info* %arrayidx) #9, !dbg !9260
  br label %sw.epilog, !dbg !9261

sw.bb111:                                         ; preds = %entry
  %89 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9262
  %90 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9263
  %vendor112 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %90, i32 0, i32 15, !dbg !9264
  %arrayidx113 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor112, i64 0, i64 1, !dbg !9263
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %89, %struct.partition_info* %arrayidx113) #9, !dbg !9265
  br label %sw.epilog, !dbg !9266

sw.bb114:                                         ; preds = %entry
  %91 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9267
  %92 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9268
  %vendor115 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %92, i32 0, i32 15, !dbg !9269
  %arrayidx116 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor115, i64 0, i64 2, !dbg !9268
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %91, %struct.partition_info* %arrayidx116) #9, !dbg !9270
  br label %sw.epilog, !dbg !9271

sw.bb117:                                         ; preds = %entry
  %93 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9272
  %94 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9273
  %vendor118 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %94, i32 0, i32 15, !dbg !9274
  %arrayidx119 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor118, i64 0, i64 3, !dbg !9273
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %93, %struct.partition_info* %arrayidx119) #9, !dbg !9275
  br label %sw.epilog, !dbg !9276

sw.bb120:                                         ; preds = %entry
  %95 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9277
  %96 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9278
  %vendor121 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %96, i32 0, i32 15, !dbg !9279
  %arrayidx122 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor121, i64 0, i64 4, !dbg !9278
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %95, %struct.partition_info* %arrayidx122) #9, !dbg !9280
  br label %sw.epilog, !dbg !9281

sw.bb123:                                         ; preds = %entry
  %97 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9282
  %98 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9283
  %vendor124 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %98, i32 0, i32 15, !dbg !9284
  %arrayidx125 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor124, i64 0, i64 5, !dbg !9283
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %97, %struct.partition_info* %arrayidx125) #9, !dbg !9285
  br label %sw.epilog, !dbg !9286

sw.bb126:                                         ; preds = %entry
  %99 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9287
  %100 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9288
  %vendor127 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %100, i32 0, i32 15, !dbg !9289
  %arrayidx128 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor127, i64 0, i64 6, !dbg !9288
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %99, %struct.partition_info* %arrayidx128) #9, !dbg !9290
  br label %sw.epilog, !dbg !9291

sw.bb129:                                         ; preds = %entry
  %101 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9292
  %102 = load %struct.flash_info_regs_gen4*, %struct.flash_info_regs_gen4** %fi, align 8, !dbg !9293
  %vendor130 = getelementptr inbounds %struct.flash_info_regs_gen4, %struct.flash_info_regs_gen4* %102, i32 0, i32 15, !dbg !9294
  %arrayidx131 = getelementptr [8 x %struct.partition_info], [8 x %struct.partition_info]* %vendor130, i64 0, i64 7, !dbg !9293
  call void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %101, %struct.partition_info* %arrayidx131) #9, !dbg !9295
  br label %sw.epilog, !dbg !9296

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9297
  br label %return, !dbg !9297

sw.epilog:                                        ; preds = %sw.bb129, %sw.bb126, %sw.bb123, %sw.bb120, %sw.bb117, %sw.bb114, %sw.bb111, %sw.bb110, %sw.bb109, %if.end108, %if.end93, %if.end80, %if.end65, %if.end52, %if.end37, %if.end24, %if.end9, %sw.bb2, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !9298
  br label %return, !dbg !9298

return:                                           ; preds = %sw.epilog, %sw.default
  %103 = load i32, i32* %retval, align 4, !dbg !9299
  ret i32 %103, !dbg !9299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_fw_info_part(%struct.switchtec_ioctl_flash_part_info* %info, %struct.partition_info* %pi) #4 !dbg !9300 {
entry:
  %info.addr = alloca %struct.switchtec_ioctl_flash_part_info*, align 8
  %pi.addr = alloca %struct.partition_info*, align 8
  store %struct.switchtec_ioctl_flash_part_info* %info, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_flash_part_info** %info.addr, metadata !9304, metadata !DIExpression()), !dbg !9305
  store %struct.partition_info* %pi, %struct.partition_info** %pi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.partition_info** %pi.addr, metadata !9306, metadata !DIExpression()), !dbg !9307
  %0 = load %struct.partition_info*, %struct.partition_info** %pi.addr, align 8, !dbg !9308
  %address = getelementptr inbounds %struct.partition_info, %struct.partition_info* %0, i32 0, i32 0, !dbg !9309
  %1 = bitcast i32* %address to i8*, !dbg !9310
  %call = call i32 @ioread32(i8* %1) #9, !dbg !9311
  %2 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9312
  %address1 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %2, i32 0, i32 1, !dbg !9313
  store i32 %call, i32* %address1, align 4, !dbg !9314
  %3 = load %struct.partition_info*, %struct.partition_info** %pi.addr, align 8, !dbg !9315
  %length = getelementptr inbounds %struct.partition_info, %struct.partition_info* %3, i32 0, i32 1, !dbg !9316
  %4 = bitcast i32* %length to i8*, !dbg !9317
  %call2 = call i32 @ioread32(i8* %4) #9, !dbg !9318
  %5 = load %struct.switchtec_ioctl_flash_part_info*, %struct.switchtec_ioctl_flash_part_info** %info.addr, align 8, !dbg !9319
  %length3 = getelementptr inbounds %struct.switchtec_ioctl_flash_part_info, %struct.switchtec_ioctl_flash_part_info* %5, i32 0, i32 2, !dbg !9320
  store i32 %call2, i32* %length3, align 4, !dbg !9321
  ret void, !dbg !9322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #4 !dbg !9323 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !9326, metadata !DIExpression()), !dbg !9330
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !9336, metadata !DIExpression()), !dbg !9337
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !9338, metadata !DIExpression()), !dbg !9339
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !9340, metadata !DIExpression()), !dbg !9341
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5581, metadata !DIExpression()), !dbg !9342
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5587, metadata !DIExpression()), !dbg !9344
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !9346, metadata !DIExpression()), !dbg !9350
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9355, metadata !DIExpression()), !dbg !9356
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9357, metadata !DIExpression()), !dbg !9358
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9359, metadata !DIExpression()), !dbg !9360
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9361, metadata !DIExpression()), !dbg !9362
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9363, metadata !DIExpression()), !dbg !9364
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9365, metadata !DIExpression()), !dbg !9366
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9367, metadata !DIExpression()), !dbg !9368
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9369, metadata !DIExpression()), !dbg !9370
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9371, metadata !DIExpression()), !dbg !9372
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9373, metadata !DIExpression()), !dbg !9374
  %0 = load i64, i64* %size.addr, align 8, !dbg !9375
  %1 = load i32, i32* %flags.addr, align 4, !dbg !9376
  %or = or i32 %1, 256, !dbg !9377
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !9378
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #12, !dbg !9379
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !9380

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9381
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !9382
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9383

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !9384
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !9385
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9386
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !9387
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9364
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !9388
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9389
  %10 = load i32, i32* %order.i.i, align 4, !dbg !9390
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9391
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9392
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9393
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #11, !dbg !9394
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9394
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9394
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9394
  call void @llvm.assume(i1 %maskcond.i.i.i) #12, !dbg !9394
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9395
  br label %kmalloc.exit, !dbg !9395

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !9396
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9397
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !9397
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9398

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9399
  br label %kmalloc_index.exit.i, !dbg !9399

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9400
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !9401
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9402

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9403
  br label %kmalloc_index.exit.i, !dbg !9403

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9404
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !9405
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9406

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9407
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !9408
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9409

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9410
  br label %kmalloc_index.exit.i, !dbg !9410

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9411
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !9412
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9413

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9414
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !9415
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9416

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9417
  br label %kmalloc_index.exit.i, !dbg !9417

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9418
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !9419
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9420

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9421
  br label %kmalloc_index.exit.i, !dbg !9421

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9422
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !9423
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9424

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9425
  br label %kmalloc_index.exit.i, !dbg !9425

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9426
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !9427
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9428

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9429
  br label %kmalloc_index.exit.i, !dbg !9429

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9430
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !9431
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9432

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9433
  br label %kmalloc_index.exit.i, !dbg !9433

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9434
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !9435
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9436

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9437
  br label %kmalloc_index.exit.i, !dbg !9437

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9438
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !9439
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9440

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9441
  br label %kmalloc_index.exit.i, !dbg !9441

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9442
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !9443
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9444

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9445
  br label %kmalloc_index.exit.i, !dbg !9445

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9446
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !9447
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9448

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9449
  br label %kmalloc_index.exit.i, !dbg !9449

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9450
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !9451
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9452

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9453
  br label %kmalloc_index.exit.i, !dbg !9453

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9454
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !9455
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9456

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9457
  br label %kmalloc_index.exit.i, !dbg !9457

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9458
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !9459
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9460

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9461
  br label %kmalloc_index.exit.i, !dbg !9461

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9462
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !9463
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9464

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9465
  br label %kmalloc_index.exit.i, !dbg !9465

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9466
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !9467
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9468

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9469
  br label %kmalloc_index.exit.i, !dbg !9469

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9470
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !9471
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9472

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9473
  br label %kmalloc_index.exit.i, !dbg !9473

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9474
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !9475
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9476

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9477
  br label %kmalloc_index.exit.i, !dbg !9477

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9478
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !9479
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9480

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9481
  br label %kmalloc_index.exit.i, !dbg !9481

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9482
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !9483
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9484

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9485
  br label %kmalloc_index.exit.i, !dbg !9485

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9486
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !9487
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9488

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9489
  br label %kmalloc_index.exit.i, !dbg !9489

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9490
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !9491
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9492

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9493
  br label %kmalloc_index.exit.i, !dbg !9493

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9494
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !9495
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9496

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9497
  br label %kmalloc_index.exit.i, !dbg !9497

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9498
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !9499
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9500

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9501
  br label %kmalloc_index.exit.i, !dbg !9501

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9502
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !9503
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9504

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9505
  br label %kmalloc_index.exit.i, !dbg !9505

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9506
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !9507
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9508

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9509
  br label %kmalloc_index.exit.i, !dbg !9509

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9510
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !9511
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9512

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9513
  br label %kmalloc_index.exit.i, !dbg !9513

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i32 382, i32 0, i64 12) #12, !dbg !9514, !srcloc !5766
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 156) #12, !dbg !9515, !srcloc !5770
  unreachable, !dbg !9516

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !9517
  store i32 %45, i32* %index.i, align 4, !dbg !9518
  %46 = load i32, i32* %index.i, align 4, !dbg !9519
  %tobool.i = icmp ne i32 %46, 0, !dbg !9519
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9521

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9522
  br label %kmalloc.exit, !dbg !9522

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !9523
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9524
  %and.i.i = and i32 %48, 17, !dbg !9524
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9524
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9524
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9524
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9524
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9525

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9526
  br label %kmalloc_type.exit.i, !dbg !9526

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9527
  %and2.i.i = and i32 %49, 1, !dbg !9528
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9527
  %50 = zext i1 %tobool3.i.i to i64, !dbg !9527
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9527
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9529
  br label %kmalloc_type.exit.i, !dbg !9529

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !9530
  %idxprom.i = zext i32 %51 to i64, !dbg !9531
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9531
  %52 = load i32, i32* %index.i, align 4, !dbg !9532
  %idxprom6.i = zext i32 %52 to i64, !dbg !9531
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9531
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9531
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !9533
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !9534
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9535
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9536
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #11, !dbg !9537
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9537
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9537
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9537
  call void @llvm.assume(i1 %maskcond.i.i) #12, !dbg !9537
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9341
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9538
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !9539
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9540
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9541
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #11, !dbg !9542
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9543
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !9544
  store i8* %62, i8** %retval.i, align 8, !dbg !9545
  br label %kmalloc.exit, !dbg !9545

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !9546
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !9547
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #11, !dbg !9548
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9548
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9548
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9548
  call void @llvm.assume(i1 %maskcond.i) #12, !dbg !9548
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9549
  br label %kmalloc.exit, !dbg !9549

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !9550
  ret i8* %65, !dbg !9551
}

; Function Attrs: noredzone
declare dso_local i64 @ioread64_lo_hi(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !9552 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9556, metadata !DIExpression()), !dbg !9561
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9563, metadata !DIExpression()), !dbg !9564
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9565, metadata !DIExpression()), !dbg !9566
  %0 = load i64, i64* %size.addr, align 8, !dbg !9567
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !9569
  br i1 %1, label %if.then, label %if.end447, !dbg !9570

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !9571
  %tobool = icmp ne i64 %2, 0, !dbg !9571
  br i1 %tobool, label %if.end, label %if.then1, !dbg !9574

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !9575
  br label %return, !dbg !9575

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !9576
  %cmp = icmp ult i64 %3, 4096, !dbg !9578
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9579

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9580
  br label %return, !dbg !9580

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub = sub i64 %4, 1, !dbg !9581
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !9581
  br i1 %5, label %cond.true, label %cond.false442, !dbg !9581

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub4 = sub i64 %6, 1, !dbg !9581
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !9581
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !9581

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub6 = sub i64 %8, 1, !dbg !9581
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !9581
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !9581

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !9581

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub9 = sub i64 %9, 1, !dbg !9581
  %and = and i64 %sub9, -9223372036854775808, !dbg !9581
  %tobool10 = icmp ne i64 %and, 0, !dbg !9581
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !9581

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !9581

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub13 = sub i64 %10, 1, !dbg !9581
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !9581
  %tobool15 = icmp ne i64 %and14, 0, !dbg !9581
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !9581

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !9581

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub18 = sub i64 %11, 1, !dbg !9581
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !9581
  %tobool20 = icmp ne i64 %and19, 0, !dbg !9581
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !9581

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !9581

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub23 = sub i64 %12, 1, !dbg !9581
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !9581
  %tobool25 = icmp ne i64 %and24, 0, !dbg !9581
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !9581

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !9581

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub28 = sub i64 %13, 1, !dbg !9581
  %and29 = and i64 %sub28, 576460752303423488, !dbg !9581
  %tobool30 = icmp ne i64 %and29, 0, !dbg !9581
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !9581

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !9581

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub33 = sub i64 %14, 1, !dbg !9581
  %and34 = and i64 %sub33, 288230376151711744, !dbg !9581
  %tobool35 = icmp ne i64 %and34, 0, !dbg !9581
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !9581

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !9581

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub38 = sub i64 %15, 1, !dbg !9581
  %and39 = and i64 %sub38, 144115188075855872, !dbg !9581
  %tobool40 = icmp ne i64 %and39, 0, !dbg !9581
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !9581

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !9581

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub43 = sub i64 %16, 1, !dbg !9581
  %and44 = and i64 %sub43, 72057594037927936, !dbg !9581
  %tobool45 = icmp ne i64 %and44, 0, !dbg !9581
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !9581

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !9581

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub48 = sub i64 %17, 1, !dbg !9581
  %and49 = and i64 %sub48, 36028797018963968, !dbg !9581
  %tobool50 = icmp ne i64 %and49, 0, !dbg !9581
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !9581

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !9581

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub53 = sub i64 %18, 1, !dbg !9581
  %and54 = and i64 %sub53, 18014398509481984, !dbg !9581
  %tobool55 = icmp ne i64 %and54, 0, !dbg !9581
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !9581

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !9581

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub58 = sub i64 %19, 1, !dbg !9581
  %and59 = and i64 %sub58, 9007199254740992, !dbg !9581
  %tobool60 = icmp ne i64 %and59, 0, !dbg !9581
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !9581

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !9581

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub63 = sub i64 %20, 1, !dbg !9581
  %and64 = and i64 %sub63, 4503599627370496, !dbg !9581
  %tobool65 = icmp ne i64 %and64, 0, !dbg !9581
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !9581

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !9581

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub68 = sub i64 %21, 1, !dbg !9581
  %and69 = and i64 %sub68, 2251799813685248, !dbg !9581
  %tobool70 = icmp ne i64 %and69, 0, !dbg !9581
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !9581

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !9581

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub73 = sub i64 %22, 1, !dbg !9581
  %and74 = and i64 %sub73, 1125899906842624, !dbg !9581
  %tobool75 = icmp ne i64 %and74, 0, !dbg !9581
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !9581

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !9581

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub78 = sub i64 %23, 1, !dbg !9581
  %and79 = and i64 %sub78, 562949953421312, !dbg !9581
  %tobool80 = icmp ne i64 %and79, 0, !dbg !9581
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !9581

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !9581

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub83 = sub i64 %24, 1, !dbg !9581
  %and84 = and i64 %sub83, 281474976710656, !dbg !9581
  %tobool85 = icmp ne i64 %and84, 0, !dbg !9581
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !9581

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !9581

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub88 = sub i64 %25, 1, !dbg !9581
  %and89 = and i64 %sub88, 140737488355328, !dbg !9581
  %tobool90 = icmp ne i64 %and89, 0, !dbg !9581
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !9581

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !9581

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub93 = sub i64 %26, 1, !dbg !9581
  %and94 = and i64 %sub93, 70368744177664, !dbg !9581
  %tobool95 = icmp ne i64 %and94, 0, !dbg !9581
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !9581

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !9581

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub98 = sub i64 %27, 1, !dbg !9581
  %and99 = and i64 %sub98, 35184372088832, !dbg !9581
  %tobool100 = icmp ne i64 %and99, 0, !dbg !9581
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !9581

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !9581

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub103 = sub i64 %28, 1, !dbg !9581
  %and104 = and i64 %sub103, 17592186044416, !dbg !9581
  %tobool105 = icmp ne i64 %and104, 0, !dbg !9581
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !9581

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !9581

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub108 = sub i64 %29, 1, !dbg !9581
  %and109 = and i64 %sub108, 8796093022208, !dbg !9581
  %tobool110 = icmp ne i64 %and109, 0, !dbg !9581
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !9581

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !9581

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub113 = sub i64 %30, 1, !dbg !9581
  %and114 = and i64 %sub113, 4398046511104, !dbg !9581
  %tobool115 = icmp ne i64 %and114, 0, !dbg !9581
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !9581

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !9581

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub118 = sub i64 %31, 1, !dbg !9581
  %and119 = and i64 %sub118, 2199023255552, !dbg !9581
  %tobool120 = icmp ne i64 %and119, 0, !dbg !9581
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !9581

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !9581

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub123 = sub i64 %32, 1, !dbg !9581
  %and124 = and i64 %sub123, 1099511627776, !dbg !9581
  %tobool125 = icmp ne i64 %and124, 0, !dbg !9581
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !9581

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !9581

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub128 = sub i64 %33, 1, !dbg !9581
  %and129 = and i64 %sub128, 549755813888, !dbg !9581
  %tobool130 = icmp ne i64 %and129, 0, !dbg !9581
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !9581

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !9581

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub133 = sub i64 %34, 1, !dbg !9581
  %and134 = and i64 %sub133, 274877906944, !dbg !9581
  %tobool135 = icmp ne i64 %and134, 0, !dbg !9581
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !9581

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !9581

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub138 = sub i64 %35, 1, !dbg !9581
  %and139 = and i64 %sub138, 137438953472, !dbg !9581
  %tobool140 = icmp ne i64 %and139, 0, !dbg !9581
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !9581

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !9581

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub143 = sub i64 %36, 1, !dbg !9581
  %and144 = and i64 %sub143, 68719476736, !dbg !9581
  %tobool145 = icmp ne i64 %and144, 0, !dbg !9581
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !9581

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !9581

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub148 = sub i64 %37, 1, !dbg !9581
  %and149 = and i64 %sub148, 34359738368, !dbg !9581
  %tobool150 = icmp ne i64 %and149, 0, !dbg !9581
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !9581

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !9581

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub153 = sub i64 %38, 1, !dbg !9581
  %and154 = and i64 %sub153, 17179869184, !dbg !9581
  %tobool155 = icmp ne i64 %and154, 0, !dbg !9581
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !9581

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !9581

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub158 = sub i64 %39, 1, !dbg !9581
  %and159 = and i64 %sub158, 8589934592, !dbg !9581
  %tobool160 = icmp ne i64 %and159, 0, !dbg !9581
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !9581

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !9581

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub163 = sub i64 %40, 1, !dbg !9581
  %and164 = and i64 %sub163, 4294967296, !dbg !9581
  %tobool165 = icmp ne i64 %and164, 0, !dbg !9581
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !9581

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !9581

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub168 = sub i64 %41, 1, !dbg !9581
  %and169 = and i64 %sub168, 2147483648, !dbg !9581
  %tobool170 = icmp ne i64 %and169, 0, !dbg !9581
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !9581

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !9581

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub173 = sub i64 %42, 1, !dbg !9581
  %and174 = and i64 %sub173, 1073741824, !dbg !9581
  %tobool175 = icmp ne i64 %and174, 0, !dbg !9581
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !9581

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !9581

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub178 = sub i64 %43, 1, !dbg !9581
  %and179 = and i64 %sub178, 536870912, !dbg !9581
  %tobool180 = icmp ne i64 %and179, 0, !dbg !9581
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !9581

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !9581

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub183 = sub i64 %44, 1, !dbg !9581
  %and184 = and i64 %sub183, 268435456, !dbg !9581
  %tobool185 = icmp ne i64 %and184, 0, !dbg !9581
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !9581

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !9581

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub188 = sub i64 %45, 1, !dbg !9581
  %and189 = and i64 %sub188, 134217728, !dbg !9581
  %tobool190 = icmp ne i64 %and189, 0, !dbg !9581
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !9581

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !9581

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub193 = sub i64 %46, 1, !dbg !9581
  %and194 = and i64 %sub193, 67108864, !dbg !9581
  %tobool195 = icmp ne i64 %and194, 0, !dbg !9581
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !9581

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !9581

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub198 = sub i64 %47, 1, !dbg !9581
  %and199 = and i64 %sub198, 33554432, !dbg !9581
  %tobool200 = icmp ne i64 %and199, 0, !dbg !9581
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !9581

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !9581

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub203 = sub i64 %48, 1, !dbg !9581
  %and204 = and i64 %sub203, 16777216, !dbg !9581
  %tobool205 = icmp ne i64 %and204, 0, !dbg !9581
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !9581

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !9581

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub208 = sub i64 %49, 1, !dbg !9581
  %and209 = and i64 %sub208, 8388608, !dbg !9581
  %tobool210 = icmp ne i64 %and209, 0, !dbg !9581
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !9581

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !9581

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub213 = sub i64 %50, 1, !dbg !9581
  %and214 = and i64 %sub213, 4194304, !dbg !9581
  %tobool215 = icmp ne i64 %and214, 0, !dbg !9581
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !9581

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !9581

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub218 = sub i64 %51, 1, !dbg !9581
  %and219 = and i64 %sub218, 2097152, !dbg !9581
  %tobool220 = icmp ne i64 %and219, 0, !dbg !9581
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !9581

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !9581

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub223 = sub i64 %52, 1, !dbg !9581
  %and224 = and i64 %sub223, 1048576, !dbg !9581
  %tobool225 = icmp ne i64 %and224, 0, !dbg !9581
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !9581

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !9581

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub228 = sub i64 %53, 1, !dbg !9581
  %and229 = and i64 %sub228, 524288, !dbg !9581
  %tobool230 = icmp ne i64 %and229, 0, !dbg !9581
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !9581

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !9581

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub233 = sub i64 %54, 1, !dbg !9581
  %and234 = and i64 %sub233, 262144, !dbg !9581
  %tobool235 = icmp ne i64 %and234, 0, !dbg !9581
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !9581

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !9581

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub238 = sub i64 %55, 1, !dbg !9581
  %and239 = and i64 %sub238, 131072, !dbg !9581
  %tobool240 = icmp ne i64 %and239, 0, !dbg !9581
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !9581

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !9581

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub243 = sub i64 %56, 1, !dbg !9581
  %and244 = and i64 %sub243, 65536, !dbg !9581
  %tobool245 = icmp ne i64 %and244, 0, !dbg !9581
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !9581

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !9581

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub248 = sub i64 %57, 1, !dbg !9581
  %and249 = and i64 %sub248, 32768, !dbg !9581
  %tobool250 = icmp ne i64 %and249, 0, !dbg !9581
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !9581

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !9581

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub253 = sub i64 %58, 1, !dbg !9581
  %and254 = and i64 %sub253, 16384, !dbg !9581
  %tobool255 = icmp ne i64 %and254, 0, !dbg !9581
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !9581

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !9581

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub258 = sub i64 %59, 1, !dbg !9581
  %and259 = and i64 %sub258, 8192, !dbg !9581
  %tobool260 = icmp ne i64 %and259, 0, !dbg !9581
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !9581

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !9581

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub263 = sub i64 %60, 1, !dbg !9581
  %and264 = and i64 %sub263, 4096, !dbg !9581
  %tobool265 = icmp ne i64 %and264, 0, !dbg !9581
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !9581

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !9581

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub268 = sub i64 %61, 1, !dbg !9581
  %and269 = and i64 %sub268, 2048, !dbg !9581
  %tobool270 = icmp ne i64 %and269, 0, !dbg !9581
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !9581

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !9581

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub273 = sub i64 %62, 1, !dbg !9581
  %and274 = and i64 %sub273, 1024, !dbg !9581
  %tobool275 = icmp ne i64 %and274, 0, !dbg !9581
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !9581

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !9581

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub278 = sub i64 %63, 1, !dbg !9581
  %and279 = and i64 %sub278, 512, !dbg !9581
  %tobool280 = icmp ne i64 %and279, 0, !dbg !9581
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !9581

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !9581

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub283 = sub i64 %64, 1, !dbg !9581
  %and284 = and i64 %sub283, 256, !dbg !9581
  %tobool285 = icmp ne i64 %and284, 0, !dbg !9581
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !9581

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !9581

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub288 = sub i64 %65, 1, !dbg !9581
  %and289 = and i64 %sub288, 128, !dbg !9581
  %tobool290 = icmp ne i64 %and289, 0, !dbg !9581
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !9581

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !9581

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub293 = sub i64 %66, 1, !dbg !9581
  %and294 = and i64 %sub293, 64, !dbg !9581
  %tobool295 = icmp ne i64 %and294, 0, !dbg !9581
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !9581

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !9581

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub298 = sub i64 %67, 1, !dbg !9581
  %and299 = and i64 %sub298, 32, !dbg !9581
  %tobool300 = icmp ne i64 %and299, 0, !dbg !9581
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !9581

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !9581

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub303 = sub i64 %68, 1, !dbg !9581
  %and304 = and i64 %sub303, 16, !dbg !9581
  %tobool305 = icmp ne i64 %and304, 0, !dbg !9581
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !9581

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !9581

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub308 = sub i64 %69, 1, !dbg !9581
  %and309 = and i64 %sub308, 8, !dbg !9581
  %tobool310 = icmp ne i64 %and309, 0, !dbg !9581
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !9581

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !9581

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub313 = sub i64 %70, 1, !dbg !9581
  %and314 = and i64 %sub313, 4, !dbg !9581
  %tobool315 = icmp ne i64 %and314, 0, !dbg !9581
  %71 = zext i1 %tobool315 to i64, !dbg !9581
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !9581
  br label %cond.end, !dbg !9581

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !9581
  br label %cond.end317, !dbg !9581

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !9581
  br label %cond.end319, !dbg !9581

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !9581
  br label %cond.end321, !dbg !9581

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !9581
  br label %cond.end323, !dbg !9581

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !9581
  br label %cond.end325, !dbg !9581

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !9581
  br label %cond.end327, !dbg !9581

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !9581
  br label %cond.end329, !dbg !9581

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !9581
  br label %cond.end331, !dbg !9581

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !9581
  br label %cond.end333, !dbg !9581

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !9581
  br label %cond.end335, !dbg !9581

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !9581
  br label %cond.end337, !dbg !9581

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !9581
  br label %cond.end339, !dbg !9581

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !9581
  br label %cond.end341, !dbg !9581

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !9581
  br label %cond.end343, !dbg !9581

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !9581
  br label %cond.end345, !dbg !9581

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !9581
  br label %cond.end347, !dbg !9581

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !9581
  br label %cond.end349, !dbg !9581

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !9581
  br label %cond.end351, !dbg !9581

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !9581
  br label %cond.end353, !dbg !9581

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !9581
  br label %cond.end355, !dbg !9581

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !9581
  br label %cond.end357, !dbg !9581

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !9581
  br label %cond.end359, !dbg !9581

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !9581
  br label %cond.end361, !dbg !9581

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !9581
  br label %cond.end363, !dbg !9581

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !9581
  br label %cond.end365, !dbg !9581

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !9581
  br label %cond.end367, !dbg !9581

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !9581
  br label %cond.end369, !dbg !9581

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !9581
  br label %cond.end371, !dbg !9581

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !9581
  br label %cond.end373, !dbg !9581

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !9581
  br label %cond.end375, !dbg !9581

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !9581
  br label %cond.end377, !dbg !9581

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !9581
  br label %cond.end379, !dbg !9581

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !9581
  br label %cond.end381, !dbg !9581

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !9581
  br label %cond.end383, !dbg !9581

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !9581
  br label %cond.end385, !dbg !9581

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !9581
  br label %cond.end387, !dbg !9581

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !9581
  br label %cond.end389, !dbg !9581

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !9581
  br label %cond.end391, !dbg !9581

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !9581
  br label %cond.end393, !dbg !9581

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !9581
  br label %cond.end395, !dbg !9581

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !9581
  br label %cond.end397, !dbg !9581

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !9581
  br label %cond.end399, !dbg !9581

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !9581
  br label %cond.end401, !dbg !9581

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !9581
  br label %cond.end403, !dbg !9581

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !9581
  br label %cond.end405, !dbg !9581

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !9581
  br label %cond.end407, !dbg !9581

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !9581
  br label %cond.end409, !dbg !9581

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !9581
  br label %cond.end411, !dbg !9581

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !9581
  br label %cond.end413, !dbg !9581

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !9581
  br label %cond.end415, !dbg !9581

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !9581
  br label %cond.end417, !dbg !9581

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !9581
  br label %cond.end419, !dbg !9581

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !9581
  br label %cond.end421, !dbg !9581

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !9581
  br label %cond.end423, !dbg !9581

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !9581
  br label %cond.end425, !dbg !9581

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !9581
  br label %cond.end427, !dbg !9581

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !9581
  br label %cond.end429, !dbg !9581

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !9581
  br label %cond.end431, !dbg !9581

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !9581
  br label %cond.end433, !dbg !9581

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !9581
  br label %cond.end435, !dbg !9581

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !9581
  br label %cond.end437, !dbg !9581

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !9581
  br label %cond.end440, !dbg !9581

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !9581

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !9581
  br label %cond.end444, !dbg !9581

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !9581
  %sub443 = sub i64 %72, 1, !dbg !9581
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !9581
  br label %cond.end444, !dbg !9581

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !9581
  %sub446 = sub i32 %cond445, 12, !dbg !9582
  %add = add i32 %sub446, 1, !dbg !9583
  store i32 %add, i32* %retval, align 4, !dbg !9584
  br label %return, !dbg !9584

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !9585
  %dec = add i64 %73, -1, !dbg !9585
  store i64 %dec, i64* %size.addr, align 8, !dbg !9585
  %74 = load i64, i64* %size.addr, align 8, !dbg !9586
  %shr = lshr i64 %74, 12, !dbg !9586
  store i64 %shr, i64* %size.addr, align 8, !dbg !9586
  %75 = load i64, i64* %size.addr, align 8, !dbg !9587
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9564
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !9588
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !9589
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #14, !dbg !9588, !srcloc !9590
  store i32 %78, i32* %bitpos.i, align 4, !dbg !9588
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !9591
  %add.i = add i32 %79, 1, !dbg !9592
  store i32 %add.i, i32* %retval, align 4, !dbg !9593
  br label %return, !dbg !9593

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !9594
  ret i32 %80, !dbg !9594
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !9595 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9556, metadata !DIExpression()), !dbg !9599
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9563, metadata !DIExpression()), !dbg !9601
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9602, metadata !DIExpression()), !dbg !9603
  %0 = load i64, i64* %n.addr, align 8, !dbg !9604
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9601
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !9605
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !9606
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #14, !dbg !9605, !srcloc !9590
  store i32 %3, i32* %bitpos.i, align 4, !dbg !9605
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !9607
  %add.i = add i32 %4, 1, !dbg !9608
  %sub = sub i32 %add.i, 1, !dbg !9609
  ret i32 %sub, !dbg !9610
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32* @global_ev_reg(%struct.switchtec_dev* %stdev, i64 %offset, i32 %index) #4 !dbg !9611 {
entry:
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %offset.addr = alloca i64, align 8
  %index.addr = alloca i32, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !9612, metadata !DIExpression()), !dbg !9613
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !9614, metadata !DIExpression()), !dbg !9615
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9616, metadata !DIExpression()), !dbg !9617
  %0 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !9618
  %mmio_sw_event = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %0, i32 0, i32 10, !dbg !9619
  %1 = load %struct.sw_event_regs*, %struct.sw_event_regs** %mmio_sw_event, align 8, !dbg !9619
  %2 = bitcast %struct.sw_event_regs* %1 to i8*, !dbg !9620
  %3 = load i64, i64* %offset.addr, align 8, !dbg !9621
  %add.ptr = getelementptr i8, i8* %2, i64 %3, !dbg !9622
  %4 = bitcast i8* %add.ptr to i32*, !dbg !9620
  ret i32* %4, !dbg !9623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32* @part_ev_reg(%struct.switchtec_dev* %stdev, i64 %offset, i32 %index) #4 !dbg !9624 {
entry:
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %offset.addr = alloca i64, align 8
  %index.addr = alloca i32, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !9625, metadata !DIExpression()), !dbg !9626
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !9627, metadata !DIExpression()), !dbg !9628
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9629, metadata !DIExpression()), !dbg !9630
  %0 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !9631
  %mmio_part_cfg_all = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %0, i32 0, i32 15, !dbg !9632
  %1 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %mmio_part_cfg_all, align 8, !dbg !9632
  %2 = load i32, i32* %index.addr, align 4, !dbg !9633
  %idxprom = sext i32 %2 to i64, !dbg !9631
  %arrayidx = getelementptr %struct.part_cfg_regs, %struct.part_cfg_regs* %1, i64 %idxprom, !dbg !9631
  %3 = bitcast %struct.part_cfg_regs* %arrayidx to i8*, !dbg !9634
  %4 = load i64, i64* %offset.addr, align 8, !dbg !9635
  %add.ptr = getelementptr i8, i8* %3, i64 %4, !dbg !9636
  %5 = bitcast i8* %add.ptr to i32*, !dbg !9634
  ret i32* %5, !dbg !9637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32* @pff_ev_reg(%struct.switchtec_dev* %stdev, i64 %offset, i32 %index) #4 !dbg !9638 {
entry:
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %offset.addr = alloca i64, align 8
  %index.addr = alloca i32, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !9639, metadata !DIExpression()), !dbg !9640
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !9641, metadata !DIExpression()), !dbg !9642
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9643, metadata !DIExpression()), !dbg !9644
  %0 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !9645
  %mmio_pff_csr = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %0, i32 0, i32 16, !dbg !9646
  %1 = load %struct.pff_csr_regs*, %struct.pff_csr_regs** %mmio_pff_csr, align 8, !dbg !9646
  %2 = load i32, i32* %index.addr, align 4, !dbg !9647
  %idxprom = sext i32 %2 to i64, !dbg !9645
  %arrayidx = getelementptr %struct.pff_csr_regs, %struct.pff_csr_regs* %1, i64 %idxprom, !dbg !9645
  %3 = bitcast %struct.pff_csr_regs* %arrayidx to i8*, !dbg !9648
  %4 = load i64, i64* %offset.addr, align 8, !dbg !9649
  %add.ptr = getelementptr i8, i8* %3, i64 %4, !dbg !9650
  %5 = bitcast i8* %add.ptr to i32*, !dbg !9648
  ret i32* %5, !dbg !9651
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @event_ctl(%struct.switchtec_dev* %stdev, %struct.switchtec_ioctl_event_ctl* %ctl) #4 !dbg !9652 {
entry:
  %retval = alloca i32, align 4
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %ctl.addr = alloca %struct.switchtec_ioctl_event_ctl*, align 8
  %i = alloca i32, align 4
  %reg = alloca i32*, align 8
  %hdr = alloca i32, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !9653, metadata !DIExpression()), !dbg !9654
  store %struct.switchtec_ioctl_event_ctl* %ctl, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_ioctl_event_ctl** %ctl.addr, metadata !9655, metadata !DIExpression()), !dbg !9656
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9657, metadata !DIExpression()), !dbg !9658
  call void @llvm.dbg.declare(metadata i32** %reg, metadata !9659, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.declare(metadata i32* %hdr, metadata !9661, metadata !DIExpression()), !dbg !9662
  %0 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !9663
  %1 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9664
  %event_id = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %1, i32 0, i32 0, !dbg !9665
  %2 = load i32, i32* %event_id, align 4, !dbg !9665
  %3 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9666
  %index = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %3, i32 0, i32 1, !dbg !9667
  %4 = load i32, i32* %index, align 4, !dbg !9667
  %call = call i32* @event_hdr_addr(%struct.switchtec_dev* %0, i32 %2, i32 %4) #9, !dbg !9668
  store i32* %call, i32** %reg, align 8, !dbg !9669
  %5 = load i32*, i32** %reg, align 8, !dbg !9670
  %6 = bitcast i32* %5 to i8*, !dbg !9670
  %call1 = call zeroext i1 @IS_ERR(i8* %6) #9, !dbg !9672
  br i1 %call1, label %if.then, label %if.end, !dbg !9673

if.then:                                          ; preds = %entry
  %7 = load i32*, i32** %reg, align 8, !dbg !9674
  %8 = bitcast i32* %7 to i8*, !dbg !9674
  %call2 = call i64 @PTR_ERR(i8* %8) #9, !dbg !9675
  %conv = trunc i64 %call2 to i32, !dbg !9675
  store i32 %conv, i32* %retval, align 4, !dbg !9676
  br label %return, !dbg !9676

if.end:                                           ; preds = %entry
  %9 = load i32*, i32** %reg, align 8, !dbg !9677
  %10 = bitcast i32* %9 to i8*, !dbg !9677
  %call3 = call i32 @ioread32(i8* %10) #9, !dbg !9678
  store i32 %call3, i32* %hdr, align 4, !dbg !9679
  store i32 0, i32* %i, align 4, !dbg !9680
  br label %for.cond, !dbg !9682

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !9683
  %conv4 = sext i32 %11 to i64, !dbg !9683
  %cmp = icmp ult i64 %conv4, 5, !dbg !9685
  br i1 %cmp, label %for.body, label %for.end, !dbg !9686

for.body:                                         ; preds = %for.cond
  %12 = load i32*, i32** %reg, align 8, !dbg !9687
  %13 = load i32, i32* %i, align 4, !dbg !9688
  %add = add i32 %13, 1, !dbg !9689
  %idxprom = sext i32 %add to i64, !dbg !9687
  %arrayidx = getelementptr i32, i32* %12, i64 %idxprom, !dbg !9687
  %14 = bitcast i32* %arrayidx to i8*, !dbg !9690
  %call6 = call i32 @ioread32(i8* %14) #9, !dbg !9691
  %15 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9692
  %data = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %15, i32 0, i32 5, !dbg !9693
  %16 = load i32, i32* %i, align 4, !dbg !9694
  %idxprom7 = sext i32 %16 to i64, !dbg !9692
  %arrayidx8 = getelementptr [5 x i32], [5 x i32]* %data, i64 0, i64 %idxprom7, !dbg !9692
  store i32 %call6, i32* %arrayidx8, align 4, !dbg !9695
  br label %for.inc, !dbg !9692

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !9696
  %inc = add i32 %17, 1, !dbg !9696
  store i32 %inc, i32* %i, align 4, !dbg !9696
  br label %for.cond, !dbg !9697, !llvm.loop !9698

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %hdr, align 4, !dbg !9700
  %conv9 = zext i32 %18 to i64, !dbg !9700
  %and = and i64 %conv9, 1, !dbg !9701
  %conv10 = trunc i64 %and to i32, !dbg !9700
  %19 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9702
  %occurred = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %19, i32 0, i32 3, !dbg !9703
  store i32 %conv10, i32* %occurred, align 4, !dbg !9704
  %20 = load i32, i32* %hdr, align 4, !dbg !9705
  %shr = lshr i32 %20, 5, !dbg !9706
  %and11 = and i32 %shr, 255, !dbg !9707
  %21 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9708
  %count = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %21, i32 0, i32 4, !dbg !9709
  store i32 %and11, i32* %count, align 4, !dbg !9710
  %22 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9711
  %flags = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %22, i32 0, i32 2, !dbg !9713
  %23 = load i32, i32* %flags, align 4, !dbg !9713
  %and12 = and i32 %23, 1, !dbg !9714
  %tobool = icmp ne i32 %and12, 0, !dbg !9714
  br i1 %tobool, label %if.end17, label %if.then13, !dbg !9715

if.then13:                                        ; preds = %for.end
  %24 = load i32, i32* %hdr, align 4, !dbg !9716
  %conv14 = zext i32 %24 to i64, !dbg !9716
  %and15 = and i64 %conv14, -2, !dbg !9716
  %conv16 = trunc i64 %and15 to i32, !dbg !9716
  store i32 %conv16, i32* %hdr, align 4, !dbg !9716
  br label %if.end17, !dbg !9717

if.end17:                                         ; preds = %if.then13, %for.end
  %25 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9718
  %flags18 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %25, i32 0, i32 2, !dbg !9720
  %26 = load i32, i32* %flags18, align 4, !dbg !9720
  %and19 = and i32 %26, 2, !dbg !9721
  %tobool20 = icmp ne i32 %and19, 0, !dbg !9721
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !9722

if.then21:                                        ; preds = %if.end17
  %27 = load i32, i32* %hdr, align 4, !dbg !9723
  %conv22 = zext i32 %27 to i64, !dbg !9723
  %or = or i64 %conv22, 8, !dbg !9723
  %conv23 = trunc i64 %or to i32, !dbg !9723
  store i32 %conv23, i32* %hdr, align 4, !dbg !9723
  br label %if.end24, !dbg !9724

if.end24:                                         ; preds = %if.then21, %if.end17
  %28 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9725
  %flags25 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %28, i32 0, i32 2, !dbg !9727
  %29 = load i32, i32* %flags25, align 4, !dbg !9727
  %and26 = and i32 %29, 32, !dbg !9728
  %tobool27 = icmp ne i32 %and26, 0, !dbg !9728
  br i1 %tobool27, label %if.then28, label %if.end32, !dbg !9729

if.then28:                                        ; preds = %if.end24
  %30 = load i32, i32* %hdr, align 4, !dbg !9730
  %conv29 = zext i32 %30 to i64, !dbg !9730
  %and30 = and i64 %conv29, -9, !dbg !9730
  %conv31 = trunc i64 %and30 to i32, !dbg !9730
  store i32 %conv31, i32* %hdr, align 4, !dbg !9730
  br label %if.end32, !dbg !9731

if.end32:                                         ; preds = %if.then28, %if.end24
  %31 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9732
  %flags33 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %31, i32 0, i32 2, !dbg !9734
  %32 = load i32, i32* %flags33, align 4, !dbg !9734
  %and34 = and i32 %32, 4, !dbg !9735
  %tobool35 = icmp ne i32 %and34, 0, !dbg !9735
  br i1 %tobool35, label %if.then36, label %if.end40, !dbg !9736

if.then36:                                        ; preds = %if.end32
  %33 = load i32, i32* %hdr, align 4, !dbg !9737
  %conv37 = zext i32 %33 to i64, !dbg !9737
  %or38 = or i64 %conv37, 2, !dbg !9737
  %conv39 = trunc i64 %or38 to i32, !dbg !9737
  store i32 %conv39, i32* %hdr, align 4, !dbg !9737
  br label %if.end40, !dbg !9738

if.end40:                                         ; preds = %if.then36, %if.end32
  %34 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9739
  %flags41 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %34, i32 0, i32 2, !dbg !9741
  %35 = load i32, i32* %flags41, align 4, !dbg !9741
  %and42 = and i32 %35, 64, !dbg !9742
  %tobool43 = icmp ne i32 %and42, 0, !dbg !9742
  br i1 %tobool43, label %if.then44, label %if.end48, !dbg !9743

if.then44:                                        ; preds = %if.end40
  %36 = load i32, i32* %hdr, align 4, !dbg !9744
  %conv45 = zext i32 %36 to i64, !dbg !9744
  %and46 = and i64 %conv45, -3, !dbg !9744
  %conv47 = trunc i64 %and46 to i32, !dbg !9744
  store i32 %conv47, i32* %hdr, align 4, !dbg !9744
  br label %if.end48, !dbg !9745

if.end48:                                         ; preds = %if.then44, %if.end40
  %37 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9746
  %flags49 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %37, i32 0, i32 2, !dbg !9748
  %38 = load i32, i32* %flags49, align 4, !dbg !9748
  %and50 = and i32 %38, 8, !dbg !9749
  %tobool51 = icmp ne i32 %and50, 0, !dbg !9749
  br i1 %tobool51, label %if.then52, label %if.end56, !dbg !9750

if.then52:                                        ; preds = %if.end48
  %39 = load i32, i32* %hdr, align 4, !dbg !9751
  %conv53 = zext i32 %39 to i64, !dbg !9751
  %or54 = or i64 %conv53, 4, !dbg !9751
  %conv55 = trunc i64 %or54 to i32, !dbg !9751
  store i32 %conv55, i32* %hdr, align 4, !dbg !9751
  br label %if.end56, !dbg !9752

if.end56:                                         ; preds = %if.then52, %if.end48
  %40 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9753
  %flags57 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %40, i32 0, i32 2, !dbg !9755
  %41 = load i32, i32* %flags57, align 4, !dbg !9755
  %and58 = and i32 %41, 128, !dbg !9756
  %tobool59 = icmp ne i32 %and58, 0, !dbg !9756
  br i1 %tobool59, label %if.then60, label %if.end64, !dbg !9757

if.then60:                                        ; preds = %if.end56
  %42 = load i32, i32* %hdr, align 4, !dbg !9758
  %conv61 = zext i32 %42 to i64, !dbg !9758
  %and62 = and i64 %conv61, -5, !dbg !9758
  %conv63 = trunc i64 %and62 to i32, !dbg !9758
  store i32 %conv63, i32* %hdr, align 4, !dbg !9758
  br label %if.end64, !dbg !9759

if.end64:                                         ; preds = %if.then60, %if.end56
  %43 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9760
  %flags65 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %43, i32 0, i32 2, !dbg !9762
  %44 = load i32, i32* %flags65, align 4, !dbg !9762
  %and66 = and i32 %44, 16, !dbg !9763
  %tobool67 = icmp ne i32 %and66, 0, !dbg !9763
  br i1 %tobool67, label %if.then68, label %if.end72, !dbg !9764

if.then68:                                        ; preds = %if.end64
  %45 = load i32, i32* %hdr, align 4, !dbg !9765
  %conv69 = zext i32 %45 to i64, !dbg !9765
  %or70 = or i64 %conv69, 16, !dbg !9765
  %conv71 = trunc i64 %or70 to i32, !dbg !9765
  store i32 %conv71, i32* %hdr, align 4, !dbg !9765
  br label %if.end72, !dbg !9766

if.end72:                                         ; preds = %if.then68, %if.end64
  %46 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9767
  %flags73 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %46, i32 0, i32 2, !dbg !9769
  %47 = load i32, i32* %flags73, align 4, !dbg !9769
  %and74 = and i32 %47, 256, !dbg !9770
  %tobool75 = icmp ne i32 %and74, 0, !dbg !9770
  br i1 %tobool75, label %if.then76, label %if.end80, !dbg !9771

if.then76:                                        ; preds = %if.end72
  %48 = load i32, i32* %hdr, align 4, !dbg !9772
  %conv77 = zext i32 %48 to i64, !dbg !9772
  %and78 = and i64 %conv77, -17, !dbg !9772
  %conv79 = trunc i64 %and78 to i32, !dbg !9772
  store i32 %conv79, i32* %hdr, align 4, !dbg !9772
  br label %if.end80, !dbg !9773

if.end80:                                         ; preds = %if.then76, %if.end72
  %49 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9774
  %flags81 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %49, i32 0, i32 2, !dbg !9776
  %50 = load i32, i32* %flags81, align 4, !dbg !9776
  %tobool82 = icmp ne i32 %50, 0, !dbg !9774
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !9777

if.then83:                                        ; preds = %if.end80
  %51 = load i32, i32* %hdr, align 4, !dbg !9778
  %52 = load i32*, i32** %reg, align 8, !dbg !9779
  %53 = bitcast i32* %52 to i8*, !dbg !9779
  call void @iowrite32(i32 %51, i8* %53) #9, !dbg !9780
  br label %if.end84, !dbg !9780

if.end84:                                         ; preds = %if.then83, %if.end80
  %54 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9781
  %flags85 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %54, i32 0, i32 2, !dbg !9782
  store i32 0, i32* %flags85, align 4, !dbg !9783
  %55 = load i32, i32* %hdr, align 4, !dbg !9784
  %conv86 = zext i32 %55 to i64, !dbg !9784
  %and87 = and i64 %conv86, 8, !dbg !9786
  %tobool88 = icmp ne i64 %and87, 0, !dbg !9786
  br i1 %tobool88, label %if.then89, label %if.end92, !dbg !9787

if.then89:                                        ; preds = %if.end84
  %56 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9788
  %flags90 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %56, i32 0, i32 2, !dbg !9789
  %57 = load i32, i32* %flags90, align 4, !dbg !9790
  %or91 = or i32 %57, 2, !dbg !9790
  store i32 %or91, i32* %flags90, align 4, !dbg !9790
  br label %if.end92, !dbg !9788

if.end92:                                         ; preds = %if.then89, %if.end84
  %58 = load i32, i32* %hdr, align 4, !dbg !9791
  %conv93 = zext i32 %58 to i64, !dbg !9791
  %and94 = and i64 %conv93, 2, !dbg !9793
  %tobool95 = icmp ne i64 %and94, 0, !dbg !9793
  br i1 %tobool95, label %if.then96, label %if.end99, !dbg !9794

if.then96:                                        ; preds = %if.end92
  %59 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9795
  %flags97 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %59, i32 0, i32 2, !dbg !9796
  %60 = load i32, i32* %flags97, align 4, !dbg !9797
  %or98 = or i32 %60, 4, !dbg !9797
  store i32 %or98, i32* %flags97, align 4, !dbg !9797
  br label %if.end99, !dbg !9795

if.end99:                                         ; preds = %if.then96, %if.end92
  %61 = load i32, i32* %hdr, align 4, !dbg !9798
  %conv100 = zext i32 %61 to i64, !dbg !9798
  %and101 = and i64 %conv100, 4, !dbg !9800
  %tobool102 = icmp ne i64 %and101, 0, !dbg !9800
  br i1 %tobool102, label %if.then103, label %if.end106, !dbg !9801

if.then103:                                       ; preds = %if.end99
  %62 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9802
  %flags104 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %62, i32 0, i32 2, !dbg !9803
  %63 = load i32, i32* %flags104, align 4, !dbg !9804
  %or105 = or i32 %63, 8, !dbg !9804
  store i32 %or105, i32* %flags104, align 4, !dbg !9804
  br label %if.end106, !dbg !9802

if.end106:                                        ; preds = %if.then103, %if.end99
  %64 = load i32, i32* %hdr, align 4, !dbg !9805
  %conv107 = zext i32 %64 to i64, !dbg !9805
  %and108 = and i64 %conv107, 16, !dbg !9807
  %tobool109 = icmp ne i64 %and108, 0, !dbg !9807
  br i1 %tobool109, label %if.then110, label %if.end113, !dbg !9808

if.then110:                                       ; preds = %if.end106
  %65 = load %struct.switchtec_ioctl_event_ctl*, %struct.switchtec_ioctl_event_ctl** %ctl.addr, align 8, !dbg !9809
  %flags111 = getelementptr inbounds %struct.switchtec_ioctl_event_ctl, %struct.switchtec_ioctl_event_ctl* %65, i32 0, i32 2, !dbg !9810
  %66 = load i32, i32* %flags111, align 4, !dbg !9811
  %or112 = or i32 %66, 16, !dbg !9811
  store i32 %or112, i32* %flags111, align 4, !dbg !9811
  br label %if.end113, !dbg !9809

if.end113:                                        ; preds = %if.then110, %if.end106
  store i32 0, i32* %retval, align 4, !dbg !9812
  br label %return, !dbg !9812

return:                                           ; preds = %if.end113, %if.then
  %67 = load i32, i32* %retval, align 4, !dbg !9813
  ret i32 %67, !dbg !9813
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32* @event_hdr_addr(%struct.switchtec_dev* %stdev, i32 %event_id, i32 %index) #4 !dbg !9814 {
entry:
  %retval = alloca i32*, align 8
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %event_id.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %off = alloca i64, align 8
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !9817, metadata !DIExpression()), !dbg !9818
  store i32 %event_id, i32* %event_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event_id.addr, metadata !9819, metadata !DIExpression()), !dbg !9820
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9821, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.declare(metadata i64* %off, metadata !9823, metadata !DIExpression()), !dbg !9824
  %0 = load i32, i32* %event_id.addr, align 4, !dbg !9825
  %cmp = icmp slt i32 %0, 0, !dbg !9827
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9828

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %event_id.addr, align 4, !dbg !9829
  %cmp1 = icmp sge i32 %1, 32, !dbg !9830
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9831

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = call i8* @ERR_PTR(i64 -22) #9, !dbg !9832
  %2 = bitcast i8* %call to i32*, !dbg !9833
  store i32* %2, i32** %retval, align 8, !dbg !9834
  br label %return, !dbg !9834

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %event_id.addr, align 4, !dbg !9835
  %idxprom = sext i32 %3 to i64, !dbg !9836
  %arrayidx = getelementptr [32 x %struct.event_reg], [32 x %struct.event_reg]* @event_regs, i64 0, i64 %idxprom, !dbg !9836
  %offset = getelementptr inbounds %struct.event_reg, %struct.event_reg* %arrayidx, i32 0, i32 0, !dbg !9837
  %4 = load i64, i64* %offset, align 16, !dbg !9837
  store i64 %4, i64* %off, align 8, !dbg !9838
  %5 = load i32, i32* %event_id.addr, align 4, !dbg !9839
  %idxprom2 = sext i32 %5 to i64, !dbg !9841
  %arrayidx3 = getelementptr [32 x %struct.event_reg], [32 x %struct.event_reg]* @event_regs, i64 0, i64 %idxprom2, !dbg !9841
  %map_reg = getelementptr inbounds %struct.event_reg, %struct.event_reg* %arrayidx3, i32 0, i32 1, !dbg !9842
  %6 = load i32* (%struct.switchtec_dev*, i64, i32)*, i32* (%struct.switchtec_dev*, i64, i32)** %map_reg, align 8, !dbg !9842
  %cmp4 = icmp eq i32* (%struct.switchtec_dev*, i64, i32)* %6, @part_ev_reg, !dbg !9843
  br i1 %cmp4, label %if.then5, label %if.else15, !dbg !9844

if.then5:                                         ; preds = %if.end
  %7 = load i32, i32* %index.addr, align 4, !dbg !9845
  %cmp6 = icmp eq i32 %7, -1, !dbg !9848
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !9849

if.then7:                                         ; preds = %if.then5
  %8 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !9850
  %partition = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %8, i32 0, i32 4, !dbg !9851
  %9 = load i32, i32* %partition, align 4, !dbg !9851
  store i32 %9, i32* %index.addr, align 4, !dbg !9852
  br label %if.end14, !dbg !9853

if.else:                                          ; preds = %if.then5
  %10 = load i32, i32* %index.addr, align 4, !dbg !9854
  %cmp8 = icmp slt i32 %10, 0, !dbg !9856
  br i1 %cmp8, label %if.then11, label %lor.lhs.false9, !dbg !9857

lor.lhs.false9:                                   ; preds = %if.else
  %11 = load i32, i32* %index.addr, align 4, !dbg !9858
  %12 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !9859
  %partition_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %12, i32 0, i32 5, !dbg !9860
  %13 = load i32, i32* %partition_count, align 8, !dbg !9860
  %cmp10 = icmp sge i32 %11, %13, !dbg !9861
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !9862

if.then11:                                        ; preds = %lor.lhs.false9, %if.else
  %call12 = call i8* @ERR_PTR(i64 -22) #9, !dbg !9863
  %14 = bitcast i8* %call12 to i32*, !dbg !9864
  store i32* %14, i32** %retval, align 8, !dbg !9865
  br label %return, !dbg !9865

if.end13:                                         ; preds = %lor.lhs.false9
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then7
  br label %if.end28, !dbg !9866

if.else15:                                        ; preds = %if.end
  %15 = load i32, i32* %event_id.addr, align 4, !dbg !9867
  %idxprom16 = sext i32 %15 to i64, !dbg !9869
  %arrayidx17 = getelementptr [32 x %struct.event_reg], [32 x %struct.event_reg]* @event_regs, i64 0, i64 %idxprom16, !dbg !9869
  %map_reg18 = getelementptr inbounds %struct.event_reg, %struct.event_reg* %arrayidx17, i32 0, i32 1, !dbg !9870
  %16 = load i32* (%struct.switchtec_dev*, i64, i32)*, i32* (%struct.switchtec_dev*, i64, i32)** %map_reg18, align 8, !dbg !9870
  %cmp19 = icmp eq i32* (%struct.switchtec_dev*, i64, i32)* %16, @pff_ev_reg, !dbg !9871
  br i1 %cmp19, label %if.then20, label %if.end27, !dbg !9872

if.then20:                                        ; preds = %if.else15
  %17 = load i32, i32* %index.addr, align 4, !dbg !9873
  %cmp21 = icmp slt i32 %17, 0, !dbg !9876
  br i1 %cmp21, label %if.then24, label %lor.lhs.false22, !dbg !9877

lor.lhs.false22:                                  ; preds = %if.then20
  %18 = load i32, i32* %index.addr, align 4, !dbg !9878
  %19 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !9879
  %pff_csr_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %19, i32 0, i32 6, !dbg !9880
  %20 = load i32, i32* %pff_csr_count, align 4, !dbg !9880
  %cmp23 = icmp sge i32 %18, %20, !dbg !9881
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !9882

if.then24:                                        ; preds = %lor.lhs.false22, %if.then20
  %call25 = call i8* @ERR_PTR(i64 -22) #9, !dbg !9883
  %21 = bitcast i8* %call25 to i32*, !dbg !9884
  store i32* %21, i32** %retval, align 8, !dbg !9885
  br label %return, !dbg !9885

if.end26:                                         ; preds = %lor.lhs.false22
  br label %if.end27, !dbg !9886

if.end27:                                         ; preds = %if.end26, %if.else15
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.end14
  %22 = load i32, i32* %event_id.addr, align 4, !dbg !9887
  %idxprom29 = sext i32 %22 to i64, !dbg !9888
  %arrayidx30 = getelementptr [32 x %struct.event_reg], [32 x %struct.event_reg]* @event_regs, i64 0, i64 %idxprom29, !dbg !9888
  %map_reg31 = getelementptr inbounds %struct.event_reg, %struct.event_reg* %arrayidx30, i32 0, i32 1, !dbg !9889
  %23 = load i32* (%struct.switchtec_dev*, i64, i32)*, i32* (%struct.switchtec_dev*, i64, i32)** %map_reg31, align 8, !dbg !9889
  %24 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !9890
  %25 = load i64, i64* %off, align 8, !dbg !9891
  %26 = load i32, i32* %index.addr, align 4, !dbg !9892
  %call32 = call i32* %23(%struct.switchtec_dev* %24, i64 %25, i32 %26) #9, !dbg !9888
  store i32* %call32, i32** %retval, align 8, !dbg !9893
  br label %return, !dbg !9893

return:                                           ; preds = %if.end28, %if.then24, %if.then11, %if.then
  %27 = load i32*, i32** %retval, align 8, !dbg !9894
  ret i32* %27, !dbg !9894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @array_index_mask_nospec(i64 %index, i64 %size) #4 !dbg !9895 {
entry:
  %index.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %mask = alloca i64, align 8
  store i64 %index, i64* %index.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !9899, metadata !DIExpression()), !dbg !9900
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9901, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !9903, metadata !DIExpression()), !dbg !9904
  %0 = load i64, i64* %size.addr, align 8, !dbg !9905
  %1 = load i64, i64* %index.addr, align 8, !dbg !9906
  %2 = call i64 asm sideeffect "cmp $1,$2; sbb $0,$0;", "=r,imr,r,~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %0, i64 %1) #12, !dbg !9907, !srcloc !9908
  store i64 %2, i64* %mask, align 8, !dbg !9907
  %3 = load i64, i64* %mask, align 8, !dbg !9909
  ret i64 %3, !dbg !9910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.switchtec_user* @stuser_create(%struct.switchtec_dev* %stdev) #4 !dbg !4791 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7339, metadata !DIExpression()), !dbg !9911
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7350, metadata !DIExpression()), !dbg !9914
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7354, metadata !DIExpression()), !dbg !9916
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7356, metadata !DIExpression()), !dbg !9917
  %retval = alloca %struct.switchtec_user*, align 8
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %stuser = alloca %struct.switchtec_user*, align 8
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !9918, metadata !DIExpression()), !dbg !9919
  call void @llvm.dbg.declare(metadata %struct.switchtec_user** %stuser, metadata !9920, metadata !DIExpression()), !dbg !9921
  %call = call i8* @kzalloc(i64 1120, i32 3264) #9, !dbg !9922
  %0 = bitcast i8* %call to %struct.switchtec_user*, !dbg !9922
  store %struct.switchtec_user* %0, %struct.switchtec_user** %stuser, align 8, !dbg !9923
  %1 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !9924
  %tobool = icmp ne %struct.switchtec_user* %1, null, !dbg !9924
  br i1 %tobool, label %if.end, label %if.then, !dbg !9926

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #9, !dbg !9927
  %2 = bitcast i8* %call1 to %struct.switchtec_user*, !dbg !9927
  store %struct.switchtec_user* %2, %struct.switchtec_user** %retval, align 8, !dbg !9928
  br label %return, !dbg !9928

if.end:                                           ; preds = %entry
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !9929
  %dev = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 1, !dbg !9930
  %call2 = call %struct.device* @get_device(%struct.device* %dev) #9, !dbg !9931
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !9932
  %5 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !9933
  %stdev3 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %5, i32 0, i32 0, !dbg !9934
  store %struct.switchtec_dev* %4, %struct.switchtec_dev** %stdev3, align 8, !dbg !9935
  %6 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !9936
  %kref = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %6, i32 0, i32 3, !dbg !9937
  call void @kref_init(%struct.kref* %kref) #9, !dbg !9938
  %7 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !9939
  %list = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %7, i32 0, i32 4, !dbg !9940
  call void @INIT_LIST_HEAD(%struct.list_head* %list) #9, !dbg !9941
  br label %do.body, !dbg !9942

do.body:                                          ; preds = %if.end
  %8 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !9943
  %cmd_comp = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %8, i32 0, i32 2, !dbg !9943
  call void @__init_waitqueue_head(%struct.wait_queue_head* %cmd_comp, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i64 0, i64 0), %struct.lock_class_key* @stuser_create.__key) #9, !dbg !9943
  br label %do.end, !dbg !9943

do.end:                                           ; preds = %do.body
  %9 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !9945
  %event_cnt = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %9, i32 0, i32 24, !dbg !9946
  store %struct.atomic_t* %event_cnt, %struct.atomic_t** %v.addr.i, align 8
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9947
  %11 = bitcast %struct.atomic_t* %10 to i8*, !dbg !9947
  store i8* %11, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %12 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9948
  %13 = load i64, i64* %size.addr.i.i, align 8, !dbg !9949
  %conv.i.i = trunc i64 %13 to i32, !dbg !9949
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %12, i32 %conv.i.i) #11, !dbg !9950
  %14 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9951
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !9951
  call void @kcsan_check_access(i8* %14, i64 %15, i32 4) #11, !dbg !9951
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9952
  store %struct.atomic_t* %16, %struct.atomic_t** %v.addr.i1.i, align 8
  %17 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9953
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %17, i32 0, i32 0, !dbg !9953
  %18 = load volatile i32, i32* %counter.i.i, align 4, !dbg !9953
  %19 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !9954
  %event_cnt5 = getelementptr inbounds %struct.switchtec_user, %struct.switchtec_user* %19, i32 0, i32 12, !dbg !9955
  store i32 %18, i32* %event_cnt5, align 8, !dbg !9956
  %20 = load %struct.switchtec_user*, %struct.switchtec_user** %stuser, align 8, !dbg !9957
  store %struct.switchtec_user* %20, %struct.switchtec_user** %retval, align 8, !dbg !9958
  br label %return, !dbg !9958

return:                                           ; preds = %do.end, %if.then
  %21 = load %struct.switchtec_user*, %struct.switchtec_user** %retval, align 8, !dbg !9959
  ret %struct.switchtec_user* %21, !dbg !9959
}

; Function Attrs: noredzone
declare dso_local i32 @stream_open(%struct.inode*, %struct.file*) #1

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_init(%struct.kref* %kref) #4 !dbg !9960 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !9961, metadata !DIExpression()), !dbg !9962
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !9963
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !9964
  call void @refcount_set(%struct.refcount_struct* %refcount, i32 1) #9, !dbg !9965
  ret void, !dbg !9966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_set(%struct.refcount_struct* %r, i32 %n) #4 !dbg !9967 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4989, metadata !DIExpression()), !dbg !9970
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5000, metadata !DIExpression()), !dbg !9973
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5002, metadata !DIExpression()), !dbg !9974
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5012, metadata !DIExpression()), !dbg !9976
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5014, metadata !DIExpression()), !dbg !9977
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5016, metadata !DIExpression()), !dbg !9978
  %r.addr = alloca %struct.refcount_struct*, align 8
  %n.addr = alloca i32, align 4
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !9979, metadata !DIExpression()), !dbg !9980
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !9981, metadata !DIExpression()), !dbg !9982
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !9983
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !9984
  %1 = load i32, i32* %n.addr, align 4, !dbg !9985
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32 %1, i32* %i.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9986
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !9986
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9987
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !9988
  %conv.i.i = trunc i64 %5 to i32, !dbg !9988
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #11, !dbg !9989
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9990
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9990
  call void @kcsan_check_access(i8* %6, i64 %7, i32 5) #11, !dbg !9990
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9991
  %9 = load i32, i32* %i.addr.i, align 4, !dbg !9992
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %i.addr.i.i, align 4
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !9993
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9993
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !9993
  store volatile i32 %10, i32* %counter.i.i, align 4, !dbg !9993
  ret void, !dbg !9994
}

; Function Attrs: noredzone
declare dso_local i32 @pcim_enable_device(%struct.pci_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_set_mask_and_coherent(%struct.device* %dev, i64 %mask) #4 !dbg !9995 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %mask.addr = alloca i64, align 8
  %rc = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9998, metadata !DIExpression()), !dbg !9999
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !10000, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10002, metadata !DIExpression()), !dbg !10003
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10004
  %1 = load i64, i64* %mask.addr, align 8, !dbg !10005
  %call = call i32 @dma_set_mask(%struct.device* %0, i64 %1) #9, !dbg !10006
  store i32 %call, i32* %rc, align 4, !dbg !10003
  %2 = load i32, i32* %rc, align 4, !dbg !10007
  %cmp = icmp eq i32 %2, 0, !dbg !10009
  br i1 %cmp, label %if.then, label %if.end, !dbg !10010

if.then:                                          ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10011
  %4 = load i64, i64* %mask.addr, align 8, !dbg !10012
  %call1 = call i32 @dma_set_coherent_mask(%struct.device* %3, i64 %4) #9, !dbg !10013
  br label %if.end, !dbg !10013

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %rc, align 4, !dbg !10014
  ret i32 %5, !dbg !10015
}

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local %struct.resource* @__devm_request_region(%struct.device*, %struct.resource*, i64, i64, i8*) #1

; Function Attrs: noredzone
declare dso_local i8* @devm_ioremap_wc(%struct.device*, i64, i64) #1

; Function Attrs: noredzone
declare dso_local i8* @devm_ioremap(%struct.device*, i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_pff(%struct.switchtec_dev* %stdev) #4 !dbg !10016 {
entry:
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %i = alloca i32, align 4
  %reg = alloca i32, align 4
  %pcfg = alloca %struct.part_cfg_regs*, align 8
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !10017, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10019, metadata !DIExpression()), !dbg !10020
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !10021, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.declare(metadata %struct.part_cfg_regs** %pcfg, metadata !10023, metadata !DIExpression()), !dbg !10024
  %0 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10025
  %mmio_part_cfg = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %0, i32 0, i32 14, !dbg !10026
  %1 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %mmio_part_cfg, align 8, !dbg !10026
  store %struct.part_cfg_regs* %1, %struct.part_cfg_regs** %pcfg, align 8, !dbg !10024
  store i32 0, i32* %i, align 4, !dbg !10027
  br label %for.cond, !dbg !10029

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10030
  %cmp = icmp slt i32 %2, 255, !dbg !10032
  br i1 %cmp, label %for.body, label %for.end, !dbg !10033

for.body:                                         ; preds = %for.cond
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10034
  %mmio_pff_csr = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 16, !dbg !10036
  %4 = load %struct.pff_csr_regs*, %struct.pff_csr_regs** %mmio_pff_csr, align 8, !dbg !10036
  %5 = load i32, i32* %i, align 4, !dbg !10037
  %idxprom = sext i32 %5 to i64, !dbg !10034
  %arrayidx = getelementptr %struct.pff_csr_regs, %struct.pff_csr_regs* %4, i64 %idxprom, !dbg !10034
  %vendor_id = getelementptr inbounds %struct.pff_csr_regs, %struct.pff_csr_regs* %arrayidx, i32 0, i32 0, !dbg !10038
  %6 = bitcast i16* %vendor_id to i8*, !dbg !10039
  %call = call i32 @ioread16(i8* %6) #9, !dbg !10040
  store i32 %call, i32* %reg, align 4, !dbg !10041
  %7 = load i32, i32* %reg, align 4, !dbg !10042
  %cmp1 = icmp ne i32 %7, 4600, !dbg !10044
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10045

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10046

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10047

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !10048
  %inc = add i32 %8, 1, !dbg !10048
  store i32 %inc, i32* %i, align 4, !dbg !10048
  br label %for.cond, !dbg !10049, !llvm.loop !10050

for.end:                                          ; preds = %if.then, %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !10052
  %10 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10053
  %pff_csr_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %10, i32 0, i32 6, !dbg !10054
  store i32 %9, i32* %pff_csr_count, align 4, !dbg !10055
  %11 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %pcfg, align 8, !dbg !10056
  %usp_pff_inst_id = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %11, i32 0, i32 4, !dbg !10057
  %12 = bitcast i32* %usp_pff_inst_id to i8*, !dbg !10058
  %call2 = call i32 @ioread32(i8* %12) #9, !dbg !10059
  store i32 %call2, i32* %reg, align 4, !dbg !10060
  %13 = load i32, i32* %reg, align 4, !dbg !10061
  %14 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10063
  %pff_csr_count3 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %14, i32 0, i32 6, !dbg !10064
  %15 = load i32, i32* %pff_csr_count3, align 4, !dbg !10064
  %cmp4 = icmp ult i32 %13, %15, !dbg !10065
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !10066

if.then5:                                         ; preds = %for.end
  %16 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10067
  %pff_local = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %16, i32 0, i32 7, !dbg !10068
  %17 = load i32, i32* %reg, align 4, !dbg !10069
  %idxprom6 = zext i32 %17 to i64, !dbg !10067
  %arrayidx7 = getelementptr [255 x i8], [255 x i8]* %pff_local, i64 0, i64 %idxprom6, !dbg !10067
  store i8 1, i8* %arrayidx7, align 1, !dbg !10070
  br label %if.end8, !dbg !10067

if.end8:                                          ; preds = %if.then5, %for.end
  %18 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %pcfg, align 8, !dbg !10071
  %vep_pff_inst_id = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %18, i32 0, i32 5, !dbg !10072
  %19 = bitcast i32* %vep_pff_inst_id to i8*, !dbg !10073
  %call9 = call i32 @ioread32(i8* %19) #9, !dbg !10074
  store i32 %call9, i32* %reg, align 4, !dbg !10075
  %20 = load i32, i32* %reg, align 4, !dbg !10076
  %21 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10078
  %pff_csr_count10 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %21, i32 0, i32 6, !dbg !10079
  %22 = load i32, i32* %pff_csr_count10, align 4, !dbg !10079
  %cmp11 = icmp ult i32 %20, %22, !dbg !10080
  br i1 %cmp11, label %if.then12, label %if.end16, !dbg !10081

if.then12:                                        ; preds = %if.end8
  %23 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10082
  %pff_local13 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %23, i32 0, i32 7, !dbg !10083
  %24 = load i32, i32* %reg, align 4, !dbg !10084
  %idxprom14 = zext i32 %24 to i64, !dbg !10082
  %arrayidx15 = getelementptr [255 x i8], [255 x i8]* %pff_local13, i64 0, i64 %idxprom14, !dbg !10082
  store i8 1, i8* %arrayidx15, align 1, !dbg !10085
  br label %if.end16, !dbg !10082

if.end16:                                         ; preds = %if.then12, %if.end8
  store i32 0, i32* %i, align 4, !dbg !10086
  br label %for.cond17, !dbg !10088

for.cond17:                                       ; preds = %for.inc32, %if.end16
  %25 = load i32, i32* %i, align 4, !dbg !10089
  %conv = sext i32 %25 to i64, !dbg !10089
  %cmp18 = icmp ult i64 %conv, 47, !dbg !10091
  br i1 %cmp18, label %for.body20, label %for.end34, !dbg !10092

for.body20:                                       ; preds = %for.cond17
  %26 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %pcfg, align 8, !dbg !10093
  %dsp_pff_inst_id = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %26, i32 0, i32 6, !dbg !10095
  %27 = load i32, i32* %i, align 4, !dbg !10096
  %idxprom21 = sext i32 %27 to i64, !dbg !10093
  %arrayidx22 = getelementptr [47 x i32], [47 x i32]* %dsp_pff_inst_id, i64 0, i64 %idxprom21, !dbg !10093
  %28 = bitcast i32* %arrayidx22 to i8*, !dbg !10097
  %call23 = call i32 @ioread32(i8* %28) #9, !dbg !10098
  store i32 %call23, i32* %reg, align 4, !dbg !10099
  %29 = load i32, i32* %reg, align 4, !dbg !10100
  %30 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10102
  %pff_csr_count24 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %30, i32 0, i32 6, !dbg !10103
  %31 = load i32, i32* %pff_csr_count24, align 4, !dbg !10103
  %cmp25 = icmp ult i32 %29, %31, !dbg !10104
  br i1 %cmp25, label %if.then27, label %if.end31, !dbg !10105

if.then27:                                        ; preds = %for.body20
  %32 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10106
  %pff_local28 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %32, i32 0, i32 7, !dbg !10107
  %33 = load i32, i32* %reg, align 4, !dbg !10108
  %idxprom29 = zext i32 %33 to i64, !dbg !10106
  %arrayidx30 = getelementptr [255 x i8], [255 x i8]* %pff_local28, i64 0, i64 %idxprom29, !dbg !10106
  store i8 1, i8* %arrayidx30, align 1, !dbg !10109
  br label %if.end31, !dbg !10106

if.end31:                                         ; preds = %if.then27, %for.body20
  br label %for.inc32, !dbg !10110

for.inc32:                                        ; preds = %if.end31
  %34 = load i32, i32* %i, align 4, !dbg !10111
  %inc33 = add i32 %34, 1, !dbg !10111
  store i32 %inc33, i32* %i, align 4, !dbg !10111
  br label %for.cond17, !dbg !10112, !llvm.loop !10113

for.end34:                                        ; preds = %for.cond17
  ret void, !dbg !10115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #4 !dbg !10116 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10119, metadata !DIExpression()), !dbg !10120
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10121, metadata !DIExpression()), !dbg !10122
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10123
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !10124
  %1 = load i8*, i8** %data.addr, align 8, !dbg !10125
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #9, !dbg !10126
  ret void, !dbg !10127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #4 !dbg !10128 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10132, metadata !DIExpression()), !dbg !10133
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10134, metadata !DIExpression()), !dbg !10135
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !10136, metadata !DIExpression()), !dbg !10137
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !10138, metadata !DIExpression()), !dbg !10139
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10140
  %1 = load i64, i64* %size.addr, align 8, !dbg !10141
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !10142
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !10143
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !10144
  %and = and i32 %4, 8192, !dbg !10145
  %tobool = icmp ne i32 %and, 0, !dbg !10146
  %5 = zext i1 %tobool to i64, !dbg !10146
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !10146
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #9, !dbg !10147
  ret i8* %call, !dbg !10148
}

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @dma_set_coherent_mask(%struct.device*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #4 !dbg !10149 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10152, metadata !DIExpression()), !dbg !10153
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10154, metadata !DIExpression()), !dbg !10155
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10156
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10157
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !10158
  store i8* %0, i8** %driver_data, align 8, !dbg !10159
  ret void, !dbg !10160
}

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_alloc_irq_vectors(%struct.pci_dev* %dev, i32 %min_vecs, i32 %max_vecs, i32 %flags) #4 !dbg !10161 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %min_vecs.addr = alloca i32, align 4
  %max_vecs.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10164, metadata !DIExpression()), !dbg !10165
  store i32 %min_vecs, i32* %min_vecs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_vecs.addr, metadata !10166, metadata !DIExpression()), !dbg !10167
  store i32 %max_vecs, i32* %max_vecs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_vecs.addr, metadata !10168, metadata !DIExpression()), !dbg !10169
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10170, metadata !DIExpression()), !dbg !10171
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10172
  %1 = load i32, i32* %min_vecs.addr, align 4, !dbg !10173
  %2 = load i32, i32* %max_vecs.addr, align 4, !dbg !10174
  %3 = load i32, i32* %flags.addr, align 4, !dbg !10175
  %call = call i32 @pci_alloc_irq_vectors_affinity(%struct.pci_dev* %0, i32 %1, i32 %2, i32 %3, %struct.irq_affinity* null) #9, !dbg !10176
  ret i32 %call, !dbg !10177
}

; Function Attrs: noredzone
declare dso_local i32 @pci_irq_vector(%struct.pci_dev*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_request_irq(%struct.device* %dev, i32 %irq, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id) #4 !dbg !10178 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10186, metadata !DIExpression()), !dbg !10187
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10188, metadata !DIExpression()), !dbg !10189
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !10190, metadata !DIExpression()), !dbg !10191
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !10192, metadata !DIExpression()), !dbg !10193
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !10194, metadata !DIExpression()), !dbg !10195
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !10196, metadata !DIExpression()), !dbg !10197
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10198
  %1 = load i32, i32* %irq.addr, align 4, !dbg !10199
  %2 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !10200
  %3 = load i64, i64* %irqflags.addr, align 8, !dbg !10201
  %4 = load i8*, i8** %devname.addr, align 8, !dbg !10202
  %5 = load i8*, i8** %dev_id.addr, align 8, !dbg !10203
  %call = call i32 @devm_request_threaded_irq(%struct.device* %0, i32 %1, i32 (i32, i8*)* %2, i32 (i32, i8*)* null, i64 %3, i8* %4, i8* %5) #9, !dbg !10204
  ret i32 %call, !dbg !10205
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @switchtec_event_isr(i32 %irq, i8* %dev) #4 !dbg !10206 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !10207, metadata !DIExpression()), !dbg !10211
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6372, metadata !DIExpression()), !dbg !10217
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6376, metadata !DIExpression()), !dbg !10219
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10220, metadata !DIExpression()), !dbg !10221
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %dev.addr = alloca i8*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %reg = alloca i32, align 4
  %ret = alloca i32, align 4
  %eid = alloca i32, align 4
  %event_count = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10222, metadata !DIExpression()), !dbg !10223
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !10224, metadata !DIExpression()), !dbg !10225
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !10226, metadata !DIExpression()), !dbg !10227
  %0 = load i8*, i8** %dev.addr, align 8, !dbg !10228
  %1 = bitcast i8* %0 to %struct.switchtec_dev*, !dbg !10228
  store %struct.switchtec_dev* %1, %struct.switchtec_dev** %stdev, align 8, !dbg !10227
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !10229, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10231, metadata !DIExpression()), !dbg !10232
  store i32 0, i32* %ret, align 4, !dbg !10232
  call void @llvm.dbg.declare(metadata i32* %eid, metadata !10233, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.declare(metadata i32* %event_count, metadata !10235, metadata !DIExpression()), !dbg !10236
  store i32 0, i32* %event_count, align 4, !dbg !10236
  %2 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !10237
  %mmio_part_cfg = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %2, i32 0, i32 14, !dbg !10238
  %3 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %mmio_part_cfg, align 8, !dbg !10238
  %mrpc_comp_hdr = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %3, i32 0, i32 16, !dbg !10239
  %4 = bitcast i32* %mrpc_comp_hdr to i8*, !dbg !10240
  %call = call i32 @ioread32(i8* %4) #9, !dbg !10241
  store i32 %call, i32* %reg, align 4, !dbg !10242
  %5 = load i32, i32* %reg, align 4, !dbg !10243
  %conv = zext i32 %5 to i64, !dbg !10243
  %and = and i64 %conv, 1, !dbg !10245
  %tobool = icmp ne i64 %and, 0, !dbg !10245
  br i1 %tobool, label %if.then, label %if.end, !dbg !10246

if.then:                                          ; preds = %entry
  store i32 1, i32* %ret, align 4, !dbg !10247
  %6 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !10249
  %mrpc_work = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %6, i32 0, i32 20, !dbg !10250
  %call1 = call zeroext i1 @schedule_work(%struct.work_struct* %mrpc_work) #9, !dbg !10251
  %7 = load i32, i32* %reg, align 4, !dbg !10252
  %8 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !10253
  %mmio_part_cfg2 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %8, i32 0, i32 14, !dbg !10254
  %9 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %mmio_part_cfg2, align 8, !dbg !10254
  %mrpc_comp_hdr3 = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %9, i32 0, i32 16, !dbg !10255
  %10 = bitcast i32* %mrpc_comp_hdr3 to i8*, !dbg !10256
  call void @iowrite32(i32 %7, i8* %10) #9, !dbg !10257
  br label %if.end, !dbg !10258

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !10259
  call void @check_link_state_events(%struct.switchtec_dev* %11) #9, !dbg !10260
  store i32 0, i32* %eid, align 4, !dbg !10261
  br label %for.cond, !dbg !10263

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %eid, align 4, !dbg !10264
  %cmp = icmp slt i32 %12, 32, !dbg !10266
  br i1 %cmp, label %for.body, label %for.end, !dbg !10267

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %eid, align 4, !dbg !10268
  %cmp5 = icmp eq i32 %13, 28, !dbg !10271
  br i1 %cmp5, label %if.then9, label %lor.lhs.false, !dbg !10272

lor.lhs.false:                                    ; preds = %for.body
  %14 = load i32, i32* %eid, align 4, !dbg !10273
  %cmp7 = icmp eq i32 %14, 14, !dbg !10274
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !10275

if.then9:                                         ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !10276

if.end10:                                         ; preds = %lor.lhs.false
  %15 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !10277
  %16 = load i32, i32* %eid, align 4, !dbg !10278
  %call11 = call i32 @mask_all_events(%struct.switchtec_dev* %15, i32 %16) #9, !dbg !10279
  %17 = load i32, i32* %event_count, align 4, !dbg !10280
  %add = add i32 %17, %call11, !dbg !10280
  store i32 %add, i32* %event_count, align 4, !dbg !10280
  br label %for.inc, !dbg !10281

for.inc:                                          ; preds = %if.end10, %if.then9
  %18 = load i32, i32* %eid, align 4, !dbg !10282
  %inc = add i32 %18, 1, !dbg !10282
  store i32 %inc, i32* %eid, align 4, !dbg !10282
  br label %for.cond, !dbg !10283, !llvm.loop !10284

for.end:                                          ; preds = %for.cond
  %19 = load i32, i32* %event_count, align 4, !dbg !10286
  %tobool12 = icmp ne i32 %19, 0, !dbg !10286
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !10287

if.then13:                                        ; preds = %for.end
  %20 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !10288
  %event_cnt = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %20, i32 0, i32 24, !dbg !10289
  store %struct.atomic_t* %event_cnt, %struct.atomic_t** %v.addr.i, align 8
  %21 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10290
  %22 = bitcast %struct.atomic_t* %21 to i8*, !dbg !10290
  store i8* %22, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %23 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10291
  %24 = load i64, i64* %size.addr.i.i, align 8, !dbg !10292
  %conv.i.i = trunc i64 %24 to i32, !dbg !10292
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %23, i32 %conv.i.i) #11, !dbg !10293
  %25 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10294
  %26 = load i64, i64* %size.addr.i.i, align 8, !dbg !10294
  call void @kcsan_check_access(i8* %25, i64 %26, i32 7) #11, !dbg !10294
  %27 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10295
  store %struct.atomic_t* %27, %struct.atomic_t** %v.addr.i1.i, align 8
  %28 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10296
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %28, i32 0, i32 0, !dbg !10297
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #12, !dbg !10298, !srcloc !10299
  %29 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !10300
  %event_wq = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %29, i32 0, i32 23, !dbg !10300
  call void @__wake_up(%struct.wait_queue_head* %event_wq, i32 1, i32 1, i8* null) #9, !dbg !10300
  store i32 1, i32* %retval, align 4, !dbg !10301
  br label %return, !dbg !10301

if.end14:                                         ; preds = %for.end
  %30 = load i32, i32* %ret, align 4, !dbg !10302
  store i32 %30, i32* %retval, align 4, !dbg !10303
  br label %return, !dbg !10303

return:                                           ; preds = %if.end14, %if.then13
  %31 = load i32, i32* %retval, align 4, !dbg !10304
  ret i32 %31, !dbg !10304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @switchtec_dma_mrpc_isr(i32 %irq, i8* %dev) #4 !dbg !10305 {
entry:
  %irq.addr = alloca i32, align 4
  %dev.addr = alloca i8*, align 8
  %stdev = alloca %struct.switchtec_dev*, align 8
  %ret = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10306, metadata !DIExpression()), !dbg !10307
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !10308, metadata !DIExpression()), !dbg !10309
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev, metadata !10310, metadata !DIExpression()), !dbg !10311
  %0 = load i8*, i8** %dev.addr, align 8, !dbg !10312
  %1 = bitcast i8* %0 to %struct.switchtec_dev*, !dbg !10312
  store %struct.switchtec_dev* %1, %struct.switchtec_dev** %stdev, align 8, !dbg !10311
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10313, metadata !DIExpression()), !dbg !10314
  store i32 0, i32* %ret, align 4, !dbg !10314
  %2 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !10315
  %mmio_part_cfg = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %2, i32 0, i32 14, !dbg !10316
  %3 = load %struct.part_cfg_regs*, %struct.part_cfg_regs** %mmio_part_cfg, align 8, !dbg !10316
  %mrpc_comp_hdr = getelementptr inbounds %struct.part_cfg_regs, %struct.part_cfg_regs* %3, i32 0, i32 16, !dbg !10317
  %4 = bitcast i32* %mrpc_comp_hdr to i8*, !dbg !10318
  call void @iowrite32(i32 9, i8* %4) #9, !dbg !10319
  %5 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev, align 8, !dbg !10320
  %mrpc_work = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %5, i32 0, i32 20, !dbg !10321
  %call = call zeroext i1 @schedule_work(%struct.work_struct* %mrpc_work) #9, !dbg !10322
  store i32 1, i32* %ret, align 4, !dbg !10323
  %6 = load i32, i32* %ret, align 4, !dbg !10324
  ret i32 %6, !dbg !10325
}

; Function Attrs: noredzone
declare dso_local i32 @pci_alloc_irq_vectors_affinity(%struct.pci_dev*, i32, i32, i32, %struct.irq_affinity*) #1

; Function Attrs: noredzone
declare dso_local i32 @devm_request_threaded_irq(%struct.device*, i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #4 !dbg !10326 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !10329, metadata !DIExpression()), !dbg !10330
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !10331
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !10332
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #9, !dbg !10333
  ret i1 %call, !dbg !10334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_link_state_events(%struct.switchtec_dev* %stdev) #4 !dbg !10335 {
entry:
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %idx = alloca i32, align 4
  %reg = alloca i32, align 4
  %count = alloca i32, align 4
  %occurred = alloca i32, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !10336, metadata !DIExpression()), !dbg !10337
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !10338, metadata !DIExpression()), !dbg !10339
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !10340, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.declare(metadata i32* %count, metadata !10342, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.declare(metadata i32* %occurred, metadata !10344, metadata !DIExpression()), !dbg !10345
  store i32 0, i32* %occurred, align 4, !dbg !10345
  store i32 0, i32* %idx, align 4, !dbg !10346
  br label %for.cond, !dbg !10348

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %idx, align 4, !dbg !10349
  %1 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10351
  %pff_csr_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %1, i32 0, i32 6, !dbg !10352
  %2 = load i32, i32* %pff_csr_count, align 4, !dbg !10352
  %cmp = icmp slt i32 %0, %2, !dbg !10353
  br i1 %cmp, label %for.body, label %for.end, !dbg !10354

for.body:                                         ; preds = %for.cond
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10355
  %mmio_pff_csr = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 16, !dbg !10357
  %4 = load %struct.pff_csr_regs*, %struct.pff_csr_regs** %mmio_pff_csr, align 8, !dbg !10357
  %5 = load i32, i32* %idx, align 4, !dbg !10358
  %idxprom = sext i32 %5 to i64, !dbg !10355
  %arrayidx = getelementptr %struct.pff_csr_regs, %struct.pff_csr_regs* %4, i64 %idxprom, !dbg !10355
  %link_state_hdr = getelementptr inbounds %struct.pff_csr_regs, %struct.pff_csr_regs* %arrayidx, i32 0, i32 44, !dbg !10359
  %6 = bitcast i32* %link_state_hdr to i8*, !dbg !10360
  %call = call i32 @ioread32(i8* %6) #9, !dbg !10361
  store i32 %call, i32* %reg, align 4, !dbg !10362
  %7 = load i32, i32* %reg, align 4, !dbg !10363
  %shr = lshr i32 %7, 5, !dbg !10364
  %and = and i32 %shr, 255, !dbg !10365
  store i32 %and, i32* %count, align 4, !dbg !10366
  %8 = load i32, i32* %count, align 4, !dbg !10367
  %9 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10369
  %link_event_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %9, i32 0, i32 27, !dbg !10370
  %10 = load i32, i32* %idx, align 4, !dbg !10371
  %idxprom1 = sext i32 %10 to i64, !dbg !10369
  %arrayidx2 = getelementptr [255 x i8], [255 x i8]* %link_event_count, i64 0, i64 %idxprom1, !dbg !10369
  %11 = load i8, i8* %arrayidx2, align 1, !dbg !10369
  %conv = zext i8 %11 to i32, !dbg !10369
  %cmp3 = icmp ne i32 %8, %conv, !dbg !10372
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10373

if.then:                                          ; preds = %for.body
  store i32 1, i32* %occurred, align 4, !dbg !10374
  %12 = load i32, i32* %count, align 4, !dbg !10376
  %conv5 = trunc i32 %12 to i8, !dbg !10376
  %13 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10377
  %link_event_count6 = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %13, i32 0, i32 27, !dbg !10378
  %14 = load i32, i32* %idx, align 4, !dbg !10379
  %idxprom7 = sext i32 %14 to i64, !dbg !10377
  %arrayidx8 = getelementptr [255 x i8], [255 x i8]* %link_event_count6, i64 0, i64 %idxprom7, !dbg !10377
  store i8 %conv5, i8* %arrayidx8, align 1, !dbg !10380
  br label %if.end, !dbg !10381

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !10382

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %idx, align 4, !dbg !10383
  %inc = add i32 %15, 1, !dbg !10383
  store i32 %inc, i32* %idx, align 4, !dbg !10383
  br label %for.cond, !dbg !10384, !llvm.loop !10385

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %occurred, align 4, !dbg !10387
  %tobool = icmp ne i32 %16, 0, !dbg !10387
  br i1 %tobool, label %if.then9, label %if.end11, !dbg !10389

if.then9:                                         ; preds = %for.end
  %17 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10390
  %link_event_work = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %17, i32 0, i32 25, !dbg !10391
  %call10 = call zeroext i1 @schedule_work(%struct.work_struct* %link_event_work) #9, !dbg !10392
  br label %if.end11, !dbg !10392

if.end11:                                         ; preds = %if.then9, %for.end
  ret void, !dbg !10393
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mask_all_events(%struct.switchtec_dev* %stdev, i32 %eid) #4 !dbg !10394 {
entry:
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %eid.addr = alloca i32, align 4
  %idx = alloca i32, align 4
  %count = alloca i32, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !10397, metadata !DIExpression()), !dbg !10398
  store i32 %eid, i32* %eid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eid.addr, metadata !10399, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !10401, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.declare(metadata i32* %count, metadata !10403, metadata !DIExpression()), !dbg !10404
  store i32 0, i32* %count, align 4, !dbg !10404
  %0 = load i32, i32* %eid.addr, align 4, !dbg !10405
  %idxprom = sext i32 %0 to i64, !dbg !10407
  %arrayidx = getelementptr [32 x %struct.event_reg], [32 x %struct.event_reg]* @event_regs, i64 0, i64 %idxprom, !dbg !10407
  %map_reg = getelementptr inbounds %struct.event_reg, %struct.event_reg* %arrayidx, i32 0, i32 1, !dbg !10408
  %1 = load i32* (%struct.switchtec_dev*, i64, i32)*, i32* (%struct.switchtec_dev*, i64, i32)** %map_reg, align 8, !dbg !10408
  %cmp = icmp eq i32* (%struct.switchtec_dev*, i64, i32)* %1, @part_ev_reg, !dbg !10409
  br i1 %cmp, label %if.then, label %if.else, !dbg !10410

if.then:                                          ; preds = %entry
  store i32 0, i32* %idx, align 4, !dbg !10411
  br label %for.cond, !dbg !10414

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %idx, align 4, !dbg !10415
  %3 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10417
  %partition_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %3, i32 0, i32 5, !dbg !10418
  %4 = load i32, i32* %partition_count, align 8, !dbg !10418
  %cmp1 = icmp slt i32 %2, %4, !dbg !10419
  br i1 %cmp1, label %for.body, label %for.end, !dbg !10420

for.body:                                         ; preds = %for.cond
  %5 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10421
  %6 = load i32, i32* %eid.addr, align 4, !dbg !10422
  %7 = load i32, i32* %idx, align 4, !dbg !10423
  %call = call i32 @mask_event(%struct.switchtec_dev* %5, i32 %6, i32 %7) #9, !dbg !10424
  %8 = load i32, i32* %count, align 4, !dbg !10425
  %add = add i32 %8, %call, !dbg !10425
  store i32 %add, i32* %count, align 4, !dbg !10425
  br label %for.inc, !dbg !10426

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %idx, align 4, !dbg !10427
  %inc = add i32 %9, 1, !dbg !10427
  store i32 %inc, i32* %idx, align 4, !dbg !10427
  br label %for.cond, !dbg !10428, !llvm.loop !10429

for.end:                                          ; preds = %for.cond
  br label %if.end22, !dbg !10431

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %eid.addr, align 4, !dbg !10432
  %idxprom2 = sext i32 %10 to i64, !dbg !10434
  %arrayidx3 = getelementptr [32 x %struct.event_reg], [32 x %struct.event_reg]* @event_regs, i64 0, i64 %idxprom2, !dbg !10434
  %map_reg4 = getelementptr inbounds %struct.event_reg, %struct.event_reg* %arrayidx3, i32 0, i32 1, !dbg !10435
  %11 = load i32* (%struct.switchtec_dev*, i64, i32)*, i32* (%struct.switchtec_dev*, i64, i32)** %map_reg4, align 8, !dbg !10435
  %cmp5 = icmp eq i32* (%struct.switchtec_dev*, i64, i32)* %11, @pff_ev_reg, !dbg !10436
  br i1 %cmp5, label %if.then6, label %if.else18, !dbg !10437

if.then6:                                         ; preds = %if.else
  store i32 0, i32* %idx, align 4, !dbg !10438
  br label %for.cond7, !dbg !10441

for.cond7:                                        ; preds = %for.inc15, %if.then6
  %12 = load i32, i32* %idx, align 4, !dbg !10442
  %13 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10444
  %pff_csr_count = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %13, i32 0, i32 6, !dbg !10445
  %14 = load i32, i32* %pff_csr_count, align 4, !dbg !10445
  %cmp8 = icmp slt i32 %12, %14, !dbg !10446
  br i1 %cmp8, label %for.body9, label %for.end17, !dbg !10447

for.body9:                                        ; preds = %for.cond7
  %15 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10448
  %pff_local = getelementptr inbounds %struct.switchtec_dev, %struct.switchtec_dev* %15, i32 0, i32 7, !dbg !10451
  %16 = load i32, i32* %idx, align 4, !dbg !10452
  %idxprom10 = sext i32 %16 to i64, !dbg !10448
  %arrayidx11 = getelementptr [255 x i8], [255 x i8]* %pff_local, i64 0, i64 %idxprom10, !dbg !10448
  %17 = load i8, i8* %arrayidx11, align 1, !dbg !10448
  %tobool = icmp ne i8 %17, 0, !dbg !10448
  br i1 %tobool, label %if.end, label %if.then12, !dbg !10453

if.then12:                                        ; preds = %for.body9
  br label %for.inc15, !dbg !10454

if.end:                                           ; preds = %for.body9
  %18 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10455
  %19 = load i32, i32* %eid.addr, align 4, !dbg !10456
  %20 = load i32, i32* %idx, align 4, !dbg !10457
  %call13 = call i32 @mask_event(%struct.switchtec_dev* %18, i32 %19, i32 %20) #9, !dbg !10458
  %21 = load i32, i32* %count, align 4, !dbg !10459
  %add14 = add i32 %21, %call13, !dbg !10459
  store i32 %add14, i32* %count, align 4, !dbg !10459
  br label %for.inc15, !dbg !10460

for.inc15:                                        ; preds = %if.end, %if.then12
  %22 = load i32, i32* %idx, align 4, !dbg !10461
  %inc16 = add i32 %22, 1, !dbg !10461
  store i32 %inc16, i32* %idx, align 4, !dbg !10461
  br label %for.cond7, !dbg !10462, !llvm.loop !10463

for.end17:                                        ; preds = %for.cond7
  br label %if.end21, !dbg !10465

if.else18:                                        ; preds = %if.else
  %23 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10466
  %24 = load i32, i32* %eid.addr, align 4, !dbg !10468
  %call19 = call i32 @mask_event(%struct.switchtec_dev* %23, i32 %24, i32 0) #9, !dbg !10469
  %25 = load i32, i32* %count, align 4, !dbg !10470
  %add20 = add i32 %25, %call19, !dbg !10470
  store i32 %add20, i32* %count, align 4, !dbg !10470
  br label %if.end21

if.end21:                                         ; preds = %if.else18, %for.end17
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %for.end
  %26 = load i32, i32* %count, align 4, !dbg !10471
  ret i32 %26, !dbg !10472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #4 !dbg !10473 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !10476, metadata !DIExpression()), !dbg !10477
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !10478, metadata !DIExpression()), !dbg !10479
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !10480
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !10481
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #9, !dbg !10482
  ret i1 %call, !dbg !10483
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mask_event(%struct.switchtec_dev* %stdev, i32 %eid, i32 %idx) #4 !dbg !10484 {
entry:
  %retval = alloca i32, align 4
  %stdev.addr = alloca %struct.switchtec_dev*, align 8
  %eid.addr = alloca i32, align 4
  %idx.addr = alloca i32, align 4
  %off = alloca i64, align 8
  %hdr_reg = alloca i32*, align 8
  %hdr = alloca i32, align 4
  store %struct.switchtec_dev* %stdev, %struct.switchtec_dev** %stdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.switchtec_dev** %stdev.addr, metadata !10487, metadata !DIExpression()), !dbg !10488
  store i32 %eid, i32* %eid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eid.addr, metadata !10489, metadata !DIExpression()), !dbg !10490
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !10491, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.declare(metadata i64* %off, metadata !10493, metadata !DIExpression()), !dbg !10494
  %0 = load i32, i32* %eid.addr, align 4, !dbg !10495
  %idxprom = sext i32 %0 to i64, !dbg !10496
  %arrayidx = getelementptr [32 x %struct.event_reg], [32 x %struct.event_reg]* @event_regs, i64 0, i64 %idxprom, !dbg !10496
  %offset = getelementptr inbounds %struct.event_reg, %struct.event_reg* %arrayidx, i32 0, i32 0, !dbg !10497
  %1 = load i64, i64* %offset, align 16, !dbg !10497
  store i64 %1, i64* %off, align 8, !dbg !10494
  call void @llvm.dbg.declare(metadata i32** %hdr_reg, metadata !10498, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.declare(metadata i32* %hdr, metadata !10500, metadata !DIExpression()), !dbg !10501
  %2 = load i32, i32* %eid.addr, align 4, !dbg !10502
  %idxprom1 = sext i32 %2 to i64, !dbg !10503
  %arrayidx2 = getelementptr [32 x %struct.event_reg], [32 x %struct.event_reg]* @event_regs, i64 0, i64 %idxprom1, !dbg !10503
  %map_reg = getelementptr inbounds %struct.event_reg, %struct.event_reg* %arrayidx2, i32 0, i32 1, !dbg !10504
  %3 = load i32* (%struct.switchtec_dev*, i64, i32)*, i32* (%struct.switchtec_dev*, i64, i32)** %map_reg, align 8, !dbg !10504
  %4 = load %struct.switchtec_dev*, %struct.switchtec_dev** %stdev.addr, align 8, !dbg !10505
  %5 = load i64, i64* %off, align 8, !dbg !10506
  %6 = load i32, i32* %idx.addr, align 4, !dbg !10507
  %call = call i32* %3(%struct.switchtec_dev* %4, i64 %5, i32 %6) #9, !dbg !10503
  store i32* %call, i32** %hdr_reg, align 8, !dbg !10508
  %7 = load i32*, i32** %hdr_reg, align 8, !dbg !10509
  %8 = bitcast i32* %7 to i8*, !dbg !10509
  %call3 = call i32 @ioread32(i8* %8) #9, !dbg !10510
  store i32 %call3, i32* %hdr, align 4, !dbg !10511
  %9 = load i32, i32* %hdr, align 4, !dbg !10512
  %conv = zext i32 %9 to i64, !dbg !10512
  %and = and i64 %conv, 1, !dbg !10514
  %tobool = icmp ne i64 %and, 0, !dbg !10514
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !10515

land.lhs.true:                                    ; preds = %entry
  %10 = load i32, i32* %hdr, align 4, !dbg !10516
  %conv4 = zext i32 %10 to i64, !dbg !10516
  %and5 = and i64 %conv4, 8, !dbg !10517
  %tobool6 = icmp ne i64 %and5, 0, !dbg !10517
  br i1 %tobool6, label %if.end, label %if.then, !dbg !10518

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !10519
  br label %return, !dbg !10519

if.end:                                           ; preds = %land.lhs.true
  %11 = load i32, i32* %hdr, align 4, !dbg !10520
  %conv7 = zext i32 %11 to i64, !dbg !10520
  %and8 = and i64 %conv7, -10, !dbg !10520
  %conv9 = trunc i64 %and8 to i32, !dbg !10520
  store i32 %conv9, i32* %hdr, align 4, !dbg !10520
  %12 = load i32, i32* %hdr, align 4, !dbg !10521
  %13 = load i32*, i32** %hdr_reg, align 8, !dbg !10522
  %14 = bitcast i32* %13 to i8*, !dbg !10522
  call void @iowrite32(i32 %12, i8* %14) #9, !dbg !10523
  store i32 1, i32* %retval, align 4, !dbg !10524
  br label %return, !dbg !10524

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !10525
  ret i32 %15, !dbg !10525
}

; Function Attrs: noredzone
declare dso_local void @pci_clear_master(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #4 !dbg !10526 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10529, metadata !DIExpression()), !dbg !10530
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10531
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !10532
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #9, !dbg !10533
  ret i8* %call, !dbg !10534
}

; Function Attrs: noredzone
declare dso_local void @cdev_device_del(%struct.cdev*, %struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #4 !dbg !10535 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10538, metadata !DIExpression()), !dbg !10539
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10540
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !10541
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10541
  ret i8* %1, !dbg !10542
}

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noredzone }
attributes #10 = { cold noredzone }
attributes #11 = { noredzone nounwind }
attributes #12 = { nounwind }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4802, !4803, !4804, !4805}
!llvm.ident = !{!4806}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description235", scope: !2, file: !3, line: 19, type: !4799, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !212, globals: !4541, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/pci/switch/switchtec.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !98, !103, !136, !143, !149, !155, !163, !168, !174, !184, !196, !206}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "switchtec_gen", file: !94, line: 40, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/switchtec.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97}
!96 = !DIEnumerator(name: "SWITCHTEC_GEN3", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "SWITCHTEC_GEN4", value: 1, isUnsigned: true)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !99, line: 10, baseType: !7, size: 32, elements: !100)
!99 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!100 = !{!101, !102}
!101 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !104, line: 30, baseType: !105, size: 64, elements: !106)
!104 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!105 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!106 = !{!107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!107 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!108 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!109 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!110 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!111 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!112 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!113 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!114 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!115 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!116 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!117 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!118 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!119 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!120 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!121 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!122 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!123 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!124 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!125 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!126 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!127 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!128 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!129 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!130 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!131 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!132 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!133 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!134 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!135 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !137, line: 305, baseType: !7, size: 32, elements: !138)
!137 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!138 = !{!139, !140, !141, !142}
!139 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!140 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!141 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!142 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mrpc_state", file: !3, line: 43, baseType: !7, size: 32, elements: !144)
!144 = !{!145, !146, !147, !148}
!145 = !DIEnumerator(name: "MRPC_IDLE", value: 0, isUnsigned: true)
!146 = !DIEnumerator(name: "MRPC_QUEUED", value: 1, isUnsigned: true)
!147 = !DIEnumerator(name: "MRPC_RUNNING", value: 2, isUnsigned: true)
!148 = !DIEnumerator(name: "MRPC_DONE", value: 3, isUnsigned: true)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mrpc_status", file: !94, line: 57, baseType: !7, size: 32, elements: !150)
!150 = !{!151, !152, !153, !154}
!151 = !DIEnumerator(name: "SWITCHTEC_MRPC_STATUS_INPROGRESS", value: 1, isUnsigned: true)
!152 = !DIEnumerator(name: "SWITCHTEC_MRPC_STATUS_DONE", value: 2, isUnsigned: true)
!153 = !DIEnumerator(name: "SWITCHTEC_MRPC_STATUS_ERROR", value: 255, isUnsigned: true)
!154 = !DIEnumerator(name: "SWITCHTEC_MRPC_STATUS_INTERRUPTED", value: 256, isUnsigned: true)
!155 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !156, line: 119, baseType: !7, size: 32, elements: !157)
!156 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!157 = !{!158, !159, !160, !161, !162}
!158 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!159 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!160 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!161 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!162 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !94, line: 271, baseType: !7, size: 32, elements: !164)
!164 = !{!165, !166, !167}
!165 = !DIEnumerator(name: "SWITCHTEC_NTB_REG_INFO_OFFSET", value: 0, isUnsigned: true)
!166 = !DIEnumerator(name: "SWITCHTEC_NTB_REG_CTRL_OFFSET", value: 16384, isUnsigned: true)
!167 = !DIEnumerator(name: "SWITCHTEC_NTB_REG_DBMSG_OFFSET", value: 409600, isUnsigned: true)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !94, line: 110, baseType: !7, size: 32, elements: !169)
!169 = !{!170, !171, !172, !173}
!170 = !DIEnumerator(name: "SWITCHTEC_GEN3_CFG0_RUNNING", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "SWITCHTEC_GEN3_CFG1_RUNNING", value: 5, isUnsigned: true)
!172 = !DIEnumerator(name: "SWITCHTEC_GEN3_IMG0_RUNNING", value: 3, isUnsigned: true)
!173 = !DIEnumerator(name: "SWITCHTEC_GEN3_IMG1_RUNNING", value: 7, isUnsigned: true)
!174 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !94, line: 130, baseType: !7, size: 32, elements: !175)
!175 = !{!176, !177, !178, !179, !180, !181, !182, !183}
!176 = !DIEnumerator(name: "SWITCHTEC_GEN4_KEY0_ACTIVE", value: 0, isUnsigned: true)
!177 = !DIEnumerator(name: "SWITCHTEC_GEN4_KEY1_ACTIVE", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "SWITCHTEC_GEN4_BL2_0_ACTIVE", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "SWITCHTEC_GEN4_BL2_1_ACTIVE", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "SWITCHTEC_GEN4_CFG0_ACTIVE", value: 0, isUnsigned: true)
!181 = !DIEnumerator(name: "SWITCHTEC_GEN4_CFG1_ACTIVE", value: 1, isUnsigned: true)
!182 = !DIEnumerator(name: "SWITCHTEC_GEN4_IMG0_ACTIVE", value: 0, isUnsigned: true)
!183 = !DIEnumerator(name: "SWITCHTEC_GEN4_IMG1_ACTIVE", value: 1, isUnsigned: true)
!184 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !94, line: 117, baseType: !7, size: 32, elements: !185)
!185 = !{!186, !187, !188, !189, !190, !191, !192, !193, !194, !195}
!186 = !DIEnumerator(name: "SWITCHTEC_GEN4_MAP0_RUNNING", value: 0, isUnsigned: true)
!187 = !DIEnumerator(name: "SWITCHTEC_GEN4_MAP1_RUNNING", value: 1, isUnsigned: true)
!188 = !DIEnumerator(name: "SWITCHTEC_GEN4_KEY0_RUNNING", value: 2, isUnsigned: true)
!189 = !DIEnumerator(name: "SWITCHTEC_GEN4_KEY1_RUNNING", value: 3, isUnsigned: true)
!190 = !DIEnumerator(name: "SWITCHTEC_GEN4_BL2_0_RUNNING", value: 4, isUnsigned: true)
!191 = !DIEnumerator(name: "SWITCHTEC_GEN4_BL2_1_RUNNING", value: 5, isUnsigned: true)
!192 = !DIEnumerator(name: "SWITCHTEC_GEN4_CFG0_RUNNING", value: 6, isUnsigned: true)
!193 = !DIEnumerator(name: "SWITCHTEC_GEN4_CFG1_RUNNING", value: 7, isUnsigned: true)
!194 = !DIEnumerator(name: "SWITCHTEC_GEN4_IMG0_RUNNING", value: 8, isUnsigned: true)
!195 = !DIEnumerator(name: "SWITCHTEC_GEN4_IMG1_RUNNING", value: 9, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !94, line: 29, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202, !203, !204, !205}
!198 = !DIEnumerator(name: "SWITCHTEC_GAS_MRPC_OFFSET", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "SWITCHTEC_GAS_TOP_CFG_OFFSET", value: 4096, isUnsigned: true)
!200 = !DIEnumerator(name: "SWITCHTEC_GAS_SW_EVENT_OFFSET", value: 6144, isUnsigned: true)
!201 = !DIEnumerator(name: "SWITCHTEC_GAS_SYS_INFO_OFFSET", value: 8192, isUnsigned: true)
!202 = !DIEnumerator(name: "SWITCHTEC_GAS_FLASH_INFO_OFFSET", value: 8704, isUnsigned: true)
!203 = !DIEnumerator(name: "SWITCHTEC_GAS_PART_CFG_OFFSET", value: 16384, isUnsigned: true)
!204 = !DIEnumerator(name: "SWITCHTEC_GAS_NTB_OFFSET", value: 65536, isUnsigned: true)
!205 = !DIEnumerator(name: "SWITCHTEC_GAS_PFF_CSR_OFFSET", value: 1261568, isUnsigned: true)
!206 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !207, line: 11, baseType: !7, size: 32, elements: !208)
!207 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!208 = !{!209, !210, !211}
!209 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!210 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!211 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!212 = !{!213, !216, !217, !105, !7, !218, !220, !227, !4516, !4533, !282, !4535, !4537, !3002, !4539, !295, !297}
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !215, line: 189, flags: DIFlagFwdDecl)
!215 = !DIFile(filename: "./include/linux/jump_label.h", directory: "/home/lizy2001/genbc/linux")
!216 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !219, line: 148, baseType: !7)
!219 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!221 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !222)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !219, line: 178, size: 128, elements: !224)
!224 = !{!225, !226}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !223, file: !219, line: 179, baseType: !222, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !223, file: !219, line: 179, baseType: !222, size: 64, offset: 64)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchtec_dev", file: !94, line: 473, size: 13376, elements: !229)
!229 = !{!230, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4144, !4145, !4161, !4213, !4299, !4356, !4375, !4413, !4414, !4482, !4483, !4484, !4485, !4486, !4493, !4494, !4495, !4496, !4497, !4501, !4503, !4506, !4515}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !228, file: !94, line: 474, baseType: !231, size: 64)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !233, line: 309, size: 19264, elements: !234)
!233 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!234 = !{!235, !236, !3935, !3936, !3937, !3938, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3966, !4031, !4032, !4033, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4107, !4108, !4110, !4111, !4112, !4113, !4115, !4116, !4117, !4120, !4127, !4128, !4129, !4130, !4131, !4132, !4133}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !232, file: !233, line: 310, baseType: !223, size: 128)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !232, file: !233, line: 311, baseType: !237, size: 64, offset: 128)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !233, line: 605, size: 8064, elements: !239)
!239 = !{!240, !241, !242, !243, !244, !245, !246, !272, !273, !274, !302, !305, !306, !310, !312, !313, !314, !315, !319, !321, !323, !3931, !3932, !3933, !3934}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !238, file: !233, line: 606, baseType: !223, size: 128)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !238, file: !233, line: 607, baseType: !237, size: 64, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !238, file: !233, line: 608, baseType: !223, size: 128, offset: 192)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !238, file: !233, line: 609, baseType: !223, size: 128, offset: 320)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !238, file: !233, line: 610, baseType: !231, size: 64, offset: 448)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !238, file: !233, line: 611, baseType: !223, size: 128, offset: 512)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !238, file: !233, line: 613, baseType: !247, size: 256, offset: 640)
!247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 256, elements: !270)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !250, line: 20, size: 512, elements: !251)
!250 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!251 = !{!252, !260, !261, !265, !266, !267, !268, !269}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !249, file: !250, line: 21, baseType: !253, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !219, line: 158, baseType: !254)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !219, line: 153, baseType: !255)
!255 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !256, line: 23, baseType: !257)
!256 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !258, line: 31, baseType: !259)
!258 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!259 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !249, file: !250, line: 22, baseType: !253, size: 64, offset: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !249, file: !250, line: 23, baseType: !262, size: 64, offset: 128)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!264 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !249, file: !250, line: 24, baseType: !216, size: 64, offset: 192)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !249, file: !250, line: 25, baseType: !216, size: 64, offset: 256)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !249, file: !250, line: 26, baseType: !248, size: 64, offset: 320)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !249, file: !250, line: 26, baseType: !248, size: 64, offset: 384)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !249, file: !250, line: 26, baseType: !248, size: 64, offset: 448)
!270 = !{!271}
!271 = !DISubrange(count: 4)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !238, file: !233, line: 614, baseType: !223, size: 128, offset: 896)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !238, file: !233, line: 615, baseType: !249, size: 512, offset: 1024)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !238, file: !233, line: 617, baseType: !275, size: 64, offset: 1536)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !233, line: 731, size: 320, elements: !277)
!277 = !{!278, !283, !287, !291, !298}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !276, file: !233, line: 732, baseType: !279, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!280 = !DISubroutineType(types: !281)
!281 = !{!282, !237}
!282 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !276, file: !233, line: 733, baseType: !284, size: 64, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DISubroutineType(types: !286)
!286 = !{null, !237}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !276, file: !233, line: 734, baseType: !288, size: 64, offset: 128)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!289 = !DISubroutineType(types: !290)
!290 = !{!217, !237, !7, !282}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !276, file: !233, line: 735, baseType: !292, size: 64, offset: 192)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DISubroutineType(types: !294)
!294 = !{!282, !237, !7, !282, !282, !295}
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !256, line: 21, baseType: !297)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !258, line: 27, baseType: !7)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !276, file: !233, line: 736, baseType: !299, size: 64, offset: 256)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = !DISubroutineType(types: !301)
!301 = !{!282, !237, !7, !282, !282, !296}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !238, file: !233, line: 618, baseType: !303, size: 64, offset: 1600)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !233, line: 537, flags: DIFlagFwdDecl)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !238, file: !233, line: 619, baseType: !217, size: 64, offset: 1664)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !238, file: !233, line: 620, baseType: !307, size: 64, offset: 1728)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !309, line: 123, flags: DIFlagFwdDecl)
!309 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!310 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !238, file: !233, line: 622, baseType: !311, size: 8, offset: 1792)
!311 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !238, file: !233, line: 623, baseType: !311, size: 8, offset: 1800)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !238, file: !233, line: 624, baseType: !311, size: 8, offset: 1808)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !238, file: !233, line: 625, baseType: !311, size: 8, offset: 1816)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !238, file: !233, line: 630, baseType: !316, size: 384, offset: 1824)
!316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 384, elements: !317)
!317 = !{!318}
!318 = !DISubrange(count: 48)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !238, file: !233, line: 632, baseType: !320, size: 16, offset: 2208)
!320 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !238, file: !233, line: 633, baseType: !322, size: 16, offset: 2224)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !233, line: 237, baseType: !320)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !238, file: !233, line: 634, baseType: !324, size: 64, offset: 2240)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !326)
!326 = !{!327, !3485, !3486, !3489, !3490, !3541, !3632, !3633, !3634, !3635, !3636, !3645, !3750, !3763, !3766, !3767, !3771, !3773, !3774, !3775, !3779, !3785, !3786, !3789, !3793, !3883, !3884, !3885, !3886, !3887, !3919, !3920, !3921, !3924, !3927, !3928, !3929, !3930}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !325, file: !73, line: 462, baseType: !328, size: 512)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !329, line: 64, size: 512, elements: !330)
!329 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!330 = !{!331, !332, !333, !335, !395, !3336, !3475, !3480, !3481, !3482, !3483, !3484}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !328, file: !329, line: 65, baseType: !262, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !328, file: !329, line: 66, baseType: !223, size: 128, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !328, file: !329, line: 67, baseType: !334, size: 64, offset: 192)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !328, file: !329, line: 68, baseType: !336, size: 64, offset: 256)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !329, line: 192, size: 704, elements: !338)
!338 = !{!339, !340, !356, !357}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !337, file: !329, line: 193, baseType: !223, size: 128)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !337, file: !329, line: 194, baseType: !341, offset: 128)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !342, line: 83, baseType: !343)
!342 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !342, line: 71, elements: !344)
!344 = !{!345}
!345 = !DIDerivedType(tag: DW_TAG_member, scope: !343, file: !342, line: 72, baseType: !346)
!346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !343, file: !342, line: 72, elements: !347)
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !346, file: !342, line: 73, baseType: !349)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !342, line: 20, elements: !350)
!350 = !{!351}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !349, file: !342, line: 21, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !353, line: 25, baseType: !354)
!353 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !353, line: 25, elements: !355)
!355 = !{}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !337, file: !329, line: 195, baseType: !328, size: 512, offset: 128)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !337, file: !329, line: 196, baseType: !358, size: 64, offset: 640)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !360)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !329, line: 156, size: 192, elements: !361)
!361 = !{!362, !367, !372}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !360, file: !329, line: 157, baseType: !363, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !364)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!365 = !DISubroutineType(types: !366)
!366 = !{!282, !336, !334}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !360, file: !329, line: 158, baseType: !368, size: 64, offset: 64)
!368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!370 = !DISubroutineType(types: !371)
!371 = !{!262, !336, !334}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !360, file: !329, line: 159, baseType: !373, size: 64, offset: 128)
!373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !374)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = !DISubroutineType(types: !376)
!376 = !{!282, !336, !334, !377}
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !329, line: 148, size: 20736, elements: !379)
!379 = !{!380, !385, !389, !390, !394}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !378, file: !329, line: 149, baseType: !381, size: 192)
!381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !382, size: 192, elements: !383)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!383 = !{!384}
!384 = !DISubrange(count: 3)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !378, file: !329, line: 150, baseType: !386, size: 4096, offset: 192)
!386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !382, size: 4096, elements: !387)
!387 = !{!388}
!388 = !DISubrange(count: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !378, file: !329, line: 151, baseType: !282, size: 32, offset: 4288)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !378, file: !329, line: 152, baseType: !391, size: 16384, offset: 4320)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 16384, elements: !392)
!392 = !{!393}
!393 = !DISubrange(count: 2048)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !378, file: !329, line: 153, baseType: !282, size: 32, offset: 20704)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !328, file: !329, line: 69, baseType: !396, size: 64, offset: 320)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !329, line: 138, size: 448, elements: !398)
!398 = !{!399, !403, !430, !432, !3298, !3326, !3330}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !397, file: !329, line: 139, baseType: !400, size: 64)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = !DISubroutineType(types: !402)
!402 = !{null, !334}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !397, file: !329, line: 140, baseType: !404, size: 64, offset: 64)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !406)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !407, line: 230, size: 128, elements: !408)
!407 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!408 = !{!409, !423}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !406, file: !407, line: 231, baseType: !410, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!411 = !DISubroutineType(types: !412)
!412 = !{!413, !334, !417, !382}
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !219, line: 60, baseType: !414)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !415, line: 73, baseType: !416)
!415 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !415, line: 15, baseType: !105)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !407, line: 30, size: 128, elements: !419)
!419 = !{!420, !421}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !418, file: !407, line: 31, baseType: !262, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !418, file: !407, line: 32, baseType: !422, size: 16, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !219, line: 19, baseType: !320)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !406, file: !407, line: 232, baseType: !424, size: 64, offset: 64)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = !DISubroutineType(types: !426)
!426 = !{!413, !334, !417, !262, !427}
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !219, line: 55, baseType: !428)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !415, line: 72, baseType: !429)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !415, line: 16, baseType: !216)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !397, file: !329, line: 141, baseType: !431, size: 64, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !397, file: !329, line: 142, baseType: !433, size: 64, offset: 192)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !407, line: 84, size: 320, elements: !437)
!437 = !{!438, !439, !443, !3295, !3296}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !436, file: !407, line: 85, baseType: !262, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !436, file: !407, line: 86, baseType: !440, size: 64, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = !DISubroutineType(types: !442)
!442 = !{!422, !334, !417, !282}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !436, file: !407, line: 88, baseType: !444, size: 64, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DISubroutineType(types: !446)
!446 = !{!422, !334, !447, !282}
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !407, line: 168, size: 448, elements: !449)
!449 = !{!450, !451, !452, !453, !3290, !3291}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !448, file: !407, line: 169, baseType: !418, size: 128)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !448, file: !407, line: 170, baseType: !427, size: 64, offset: 128)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !448, file: !407, line: 171, baseType: !217, size: 64, offset: 192)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !448, file: !407, line: 172, baseType: !454, size: 64, offset: 256)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DISubroutineType(types: !456)
!456 = !{!413, !457, !334, !447, !382, !628, !427}
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !459)
!459 = !{!460, !478, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3273, !3274, !3283, !3284, !3285, !3286, !3287, !3288, !3289}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !458, file: !44, line: 920, baseType: !461, size: 128)
!461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !458, file: !44, line: 917, size: 128, elements: !462)
!462 = !{!463, !469}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !461, file: !44, line: 918, baseType: !464, size: 64)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !465, line: 58, size: 64, elements: !466)
!465 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!466 = !{!467}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !464, file: !465, line: 59, baseType: !468, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !461, file: !44, line: 919, baseType: !470, size: 128, align: 64)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !219, line: 216, size: 128, align: 64, elements: !471)
!471 = !{!472, !474}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !470, file: !219, line: 217, baseType: !473, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !470, file: !219, line: 218, baseType: !475, size: 64, offset: 64)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DISubroutineType(types: !477)
!477 = !{null, !473}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !458, file: !44, line: 921, baseType: !479, size: 128, offset: 128)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !480, line: 8, size: 128, elements: !481)
!480 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!481 = !{!482, !486}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !479, file: !480, line: 9, baseType: !483, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !485, line: 18, flags: DIFlagFwdDecl)
!485 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!486 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !479, file: !480, line: 10, baseType: !487, size: 64, offset: 64)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !485, line: 89, size: 1536, elements: !489)
!489 = !{!490, !491, !501, !509, !510, !525, !3224, !3226, !3238, !3239, !3240, !3241, !3242, !3247, !3248, !3249}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !488, file: !485, line: 91, baseType: !7, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !488, file: !485, line: 92, baseType: !492, size: 32, offset: 32)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !493, line: 277, baseType: !494)
!493 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !493, line: 277, size: 32, elements: !495)
!495 = !{!496}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !494, file: !493, line: 277, baseType: !497, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !493, line: 70, baseType: !498)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !493, line: 65, size: 32, elements: !499)
!499 = !{!500}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !498, file: !493, line: 66, baseType: !7, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !488, file: !485, line: 93, baseType: !502, size: 128, offset: 64)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !503, line: 38, size: 128, elements: !504)
!503 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!504 = !{!505, !507}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !502, file: !503, line: 39, baseType: !506, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !502, file: !503, line: 39, baseType: !508, size: 64, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !488, file: !485, line: 94, baseType: !487, size: 64, offset: 192)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !488, file: !485, line: 95, baseType: !511, size: 128, offset: 256)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !485, line: 47, size: 128, elements: !512)
!512 = !{!513, !522}
!513 = !DIDerivedType(tag: DW_TAG_member, scope: !511, file: !485, line: 48, baseType: !514, size: 64)
!514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !511, file: !485, line: 48, size: 64, elements: !515)
!515 = !{!516, !521}
!516 = !DIDerivedType(tag: DW_TAG_member, scope: !514, file: !485, line: 49, baseType: !517, size: 64)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !514, file: !485, line: 49, size: 64, elements: !518)
!518 = !{!519, !520}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !517, file: !485, line: 50, baseType: !296, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !517, file: !485, line: 50, baseType: !296, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !514, file: !485, line: 52, baseType: !255, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !511, file: !485, line: 54, baseType: !523, size: 64, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !311)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !488, file: !485, line: 96, baseType: !526, size: 64, offset: 384)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !528)
!528 = !{!529, !530, !531, !539, !546, !547, !695, !2918, !2919, !2920, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !3192, !3200, !3201, !3202, !3220, !3221, !3222, !3223}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !527, file: !44, line: 611, baseType: !422, size: 16)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !527, file: !44, line: 612, baseType: !320, size: 16, offset: 16)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !527, file: !44, line: 613, baseType: !532, size: 32, offset: 32)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !533, line: 23, baseType: !534)
!533 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 21, size: 32, elements: !535)
!535 = !{!536}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !534, file: !533, line: 22, baseType: !537, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !219, line: 32, baseType: !538)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !415, line: 49, baseType: !7)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !527, file: !44, line: 614, baseType: !540, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !533, line: 28, baseType: !541)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 26, size: 32, elements: !542)
!542 = !{!543}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !541, file: !533, line: 27, baseType: !544, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !219, line: 33, baseType: !545)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !415, line: 50, baseType: !7)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !527, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !527, file: !44, line: 622, baseType: !548, size: 64, offset: 128)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !550)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !551)
!551 = !{!552, !556, !569, !573, !579, !583, !589, !593, !597, !601, !605, !606, !612, !616, !642, !671, !675, !681, !686, !690, !691}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !550, file: !44, line: 1865, baseType: !553, size: 64)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DISubroutineType(types: !555)
!555 = !{!487, !526, !487, !7}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !550, file: !44, line: 1866, baseType: !557, size: 64, offset: 64)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DISubroutineType(types: !559)
!559 = !{!262, !487, !526, !560}
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !562, line: 10, size: 128, elements: !563)
!562 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!563 = !{!564, !568}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !561, file: !562, line: 11, baseType: !565, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DISubroutineType(types: !567)
!567 = !{null, !217}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !561, file: !562, line: 12, baseType: !217, size: 64, offset: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !550, file: !44, line: 1867, baseType: !570, size: 64, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DISubroutineType(types: !572)
!572 = !{!282, !526, !282}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !550, file: !44, line: 1868, baseType: !574, size: 64, offset: 192)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!577, !526, !282}
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !550, file: !44, line: 1870, baseType: !580, size: 64, offset: 256)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!282, !487, !382, !282}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !550, file: !44, line: 1872, baseType: !584, size: 64, offset: 320)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DISubroutineType(types: !586)
!586 = !{!282, !526, !487, !422, !587}
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !219, line: 30, baseType: !588)
!588 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !550, file: !44, line: 1873, baseType: !590, size: 64, offset: 384)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DISubroutineType(types: !592)
!592 = !{!282, !487, !526, !487}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !550, file: !44, line: 1874, baseType: !594, size: 64, offset: 448)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!282, !526, !487}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !550, file: !44, line: 1875, baseType: !598, size: 64, offset: 512)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DISubroutineType(types: !600)
!600 = !{!282, !526, !487, !262}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !550, file: !44, line: 1876, baseType: !602, size: 64, offset: 576)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DISubroutineType(types: !604)
!604 = !{!282, !526, !487, !422}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !550, file: !44, line: 1877, baseType: !594, size: 64, offset: 640)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !550, file: !44, line: 1878, baseType: !607, size: 64, offset: 704)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DISubroutineType(types: !609)
!609 = !{!282, !526, !487, !422, !610}
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !219, line: 16, baseType: !611)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !219, line: 13, baseType: !296)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !550, file: !44, line: 1879, baseType: !613, size: 64, offset: 768)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DISubroutineType(types: !615)
!615 = !{!282, !526, !487, !526, !487, !7}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !550, file: !44, line: 1881, baseType: !617, size: 64, offset: 832)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DISubroutineType(types: !619)
!619 = !{!282, !487, !620}
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !622)
!622 = !{!623, !624, !625, !626, !627, !631, !639, !640, !641}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !621, file: !44, line: 220, baseType: !7, size: 32)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !621, file: !44, line: 221, baseType: !422, size: 16, offset: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !621, file: !44, line: 222, baseType: !532, size: 32, offset: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !621, file: !44, line: 223, baseType: !540, size: 32, offset: 96)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !621, file: !44, line: 224, baseType: !628, size: 64, offset: 128)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !219, line: 46, baseType: !629)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !415, line: 88, baseType: !630)
!630 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !621, file: !44, line: 225, baseType: !632, size: 128, offset: 192)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !633, line: 13, size: 128, elements: !634)
!633 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!634 = !{!635, !638}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !632, file: !633, line: 14, baseType: !636, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !633, line: 8, baseType: !637)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !258, line: 30, baseType: !630)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !632, file: !633, line: 15, baseType: !105, size: 64, offset: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !621, file: !44, line: 226, baseType: !632, size: 128, offset: 320)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !621, file: !44, line: 227, baseType: !632, size: 128, offset: 448)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !621, file: !44, line: 234, baseType: !457, size: 64, offset: 576)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !550, file: !44, line: 1882, baseType: !643, size: 64, offset: 896)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DISubroutineType(types: !645)
!645 = !{!282, !646, !648, !296, !7}
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !479)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !650, line: 22, size: 1152, elements: !651)
!650 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!651 = !{!652, !653, !654, !655, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !649, file: !650, line: 23, baseType: !296, size: 32)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !649, file: !650, line: 24, baseType: !422, size: 16, offset: 32)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !649, file: !650, line: 25, baseType: !7, size: 32, offset: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !649, file: !650, line: 26, baseType: !656, size: 32, offset: 96)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !219, line: 104, baseType: !296)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !649, file: !650, line: 27, baseType: !255, size: 64, offset: 128)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !649, file: !650, line: 28, baseType: !255, size: 64, offset: 192)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !649, file: !650, line: 37, baseType: !255, size: 64, offset: 256)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !649, file: !650, line: 38, baseType: !610, size: 32, offset: 320)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !649, file: !650, line: 39, baseType: !610, size: 32, offset: 352)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !649, file: !650, line: 40, baseType: !532, size: 32, offset: 384)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !649, file: !650, line: 41, baseType: !540, size: 32, offset: 416)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !649, file: !650, line: 42, baseType: !628, size: 64, offset: 448)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !649, file: !650, line: 43, baseType: !632, size: 128, offset: 512)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !649, file: !650, line: 44, baseType: !632, size: 128, offset: 640)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !649, file: !650, line: 45, baseType: !632, size: 128, offset: 768)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !649, file: !650, line: 46, baseType: !632, size: 128, offset: 896)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !649, file: !650, line: 47, baseType: !255, size: 64, offset: 1024)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !649, file: !650, line: 48, baseType: !255, size: 64, offset: 1088)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !550, file: !44, line: 1883, baseType: !672, size: 64, offset: 960)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DISubroutineType(types: !674)
!674 = !{!413, !487, !382, !427}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !550, file: !44, line: 1884, baseType: !676, size: 64, offset: 1024)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DISubroutineType(types: !678)
!678 = !{!282, !526, !679, !255, !255}
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !550, file: !44, line: 1886, baseType: !682, size: 64, offset: 1088)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DISubroutineType(types: !684)
!684 = !{!282, !526, !685, !282}
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !550, file: !44, line: 1887, baseType: !687, size: 64, offset: 1152)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DISubroutineType(types: !689)
!689 = !{!282, !526, !487, !457, !7, !422}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !550, file: !44, line: 1890, baseType: !602, size: 64, offset: 1216)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !550, file: !44, line: 1891, baseType: !692, size: 64, offset: 1280)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DISubroutineType(types: !694)
!694 = !{!282, !526, !577, !282}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !527, file: !44, line: 623, baseType: !696, size: 64, offset: 192)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !698)
!698 = !{!699, !700, !701, !702, !703, !704, !751, !2525, !2607, !2690, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2706, !2710, !2711, !2714, !2715, !2718, !2719, !2720, !2761, !2788, !2789, !2790, !2791, !2792, !2793, !2796, !2798, !2805, !2806, !2808, !2809, !2810, !2869, !2870, !2885, !2886, !2887, !2888, !2889, !2892, !2893, !2894, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !697, file: !44, line: 1417, baseType: !223, size: 128)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !697, file: !44, line: 1418, baseType: !610, size: 32, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !697, file: !44, line: 1419, baseType: !311, size: 8, offset: 160)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !697, file: !44, line: 1420, baseType: !216, size: 64, offset: 192)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !697, file: !44, line: 1421, baseType: !628, size: 64, offset: 256)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !697, file: !44, line: 1422, baseType: !705, size: 64, offset: 320)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !707)
!707 = !{!708, !709, !710, !717, !721, !725, !729, !730, !731, !741, !744, !745, !746, !748, !749, !750}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !706, file: !44, line: 2229, baseType: !262, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !706, file: !44, line: 2230, baseType: !282, size: 32, offset: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !706, file: !44, line: 2238, baseType: !711, size: 64, offset: 128)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DISubroutineType(types: !713)
!713 = !{!282, !714}
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !716, line: 28, flags: DIFlagFwdDecl)
!716 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!717 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !706, file: !44, line: 2239, baseType: !718, size: 64, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !720)
!720 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !706, file: !44, line: 2240, baseType: !722, size: 64, offset: 256)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!487, !705, !282, !262, !217}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !706, file: !44, line: 2242, baseType: !726, size: 64, offset: 320)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{null, !696}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !706, file: !44, line: 2243, baseType: !213, size: 64, offset: 384)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !706, file: !44, line: 2244, baseType: !705, size: 64, offset: 448)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !706, file: !44, line: 2245, baseType: !732, size: 64, offset: 512)
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !219, line: 182, size: 64, elements: !733)
!733 = !{!734}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !732, file: !219, line: 183, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !219, line: 186, size: 128, elements: !737)
!737 = !{!738, !739}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !736, file: !219, line: 187, baseType: !735, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !736, file: !219, line: 187, baseType: !740, size: 64, offset: 64)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !706, file: !44, line: 2247, baseType: !742, offset: 576)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !743, line: 187, elements: !355)
!743 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!744 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !706, file: !44, line: 2248, baseType: !742, offset: 576)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !706, file: !44, line: 2249, baseType: !742, offset: 576)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !706, file: !44, line: 2250, baseType: !747, offset: 576)
!747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !742, elements: !383)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !706, file: !44, line: 2252, baseType: !742, offset: 576)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !706, file: !44, line: 2253, baseType: !742, offset: 576)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !706, file: !44, line: 2254, baseType: !742, offset: 576)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !697, file: !44, line: 1423, baseType: !752, size: 64, offset: 384)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !755)
!755 = !{!756, !760, !764, !765, !769, !775, !779, !780, !781, !785, !789, !790, !791, !792, !798, !803, !804, !811, !812, !813, !814, !2509, !2524}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !754, file: !44, line: 1936, baseType: !757, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DISubroutineType(types: !759)
!759 = !{!526, !696}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !754, file: !44, line: 1937, baseType: !761, size: 64, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DISubroutineType(types: !763)
!763 = !{null, !526}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !754, file: !44, line: 1938, baseType: !761, size: 64, offset: 128)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !754, file: !44, line: 1940, baseType: !766, size: 64, offset: 192)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DISubroutineType(types: !768)
!768 = !{null, !526, !282}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !754, file: !44, line: 1941, baseType: !770, size: 64, offset: 256)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DISubroutineType(types: !772)
!772 = !{!282, !526, !773}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !754, file: !44, line: 1942, baseType: !776, size: 64, offset: 320)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!282, !526}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !754, file: !44, line: 1943, baseType: !761, size: 64, offset: 384)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !754, file: !44, line: 1944, baseType: !726, size: 64, offset: 448)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !754, file: !44, line: 1945, baseType: !782, size: 64, offset: 512)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{!282, !696, !282}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !754, file: !44, line: 1946, baseType: !786, size: 64, offset: 576)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DISubroutineType(types: !788)
!788 = !{!282, !696}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !754, file: !44, line: 1947, baseType: !786, size: 64, offset: 640)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !754, file: !44, line: 1948, baseType: !786, size: 64, offset: 704)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !754, file: !44, line: 1949, baseType: !786, size: 64, offset: 768)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !754, file: !44, line: 1950, baseType: !793, size: 64, offset: 832)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DISubroutineType(types: !795)
!795 = !{!282, !487, !796}
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !754, file: !44, line: 1951, baseType: !799, size: 64, offset: 896)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DISubroutineType(types: !801)
!801 = !{!282, !696, !802, !382}
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !754, file: !44, line: 1952, baseType: !726, size: 64, offset: 960)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !754, file: !44, line: 1954, baseType: !805, size: 64, offset: 1024)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DISubroutineType(types: !807)
!807 = !{!282, !808, !487}
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !810, line: 539, flags: DIFlagFwdDecl)
!810 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!811 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !754, file: !44, line: 1955, baseType: !805, size: 64, offset: 1088)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !754, file: !44, line: 1956, baseType: !805, size: 64, offset: 1152)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !754, file: !44, line: 1957, baseType: !805, size: 64, offset: 1216)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !754, file: !44, line: 1963, baseType: !815, size: 64, offset: 1280)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{!282, !696, !818, !218}
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !820, line: 68, size: 512, align: 128, elements: !821)
!820 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!821 = !{!822, !823, !2501, !2508}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !819, file: !820, line: 69, baseType: !216, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, scope: !819, file: !820, line: 77, baseType: !824, size: 320, offset: 64)
!824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !819, file: !820, line: 77, size: 320, elements: !825)
!825 = !{!826, !1013, !1018, !1046, !1054, !1060, !2432, !2500}
!826 = !DIDerivedType(tag: DW_TAG_member, scope: !824, file: !820, line: 78, baseType: !827, size: 320)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !824, file: !820, line: 78, size: 320, elements: !828)
!828 = !{!829, !830, !1011, !1012}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !827, file: !820, line: 84, baseType: !223, size: 128)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !827, file: !820, line: 86, baseType: !831, size: 64, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !833)
!833 = !{!834, !835, !842, !843, !848, !863, !879, !880, !881, !882, !1004, !1005, !1008, !1009, !1010}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !832, file: !44, line: 452, baseType: !526, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !832, file: !44, line: 453, baseType: !836, size: 128, offset: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !837, line: 292, size: 128, elements: !838)
!837 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!838 = !{!839, !840, !841}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !836, file: !837, line: 293, baseType: !341)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !836, file: !837, line: 295, baseType: !218, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !836, file: !837, line: 296, baseType: !217, size: 64, offset: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !832, file: !44, line: 454, baseType: !218, size: 32, offset: 192)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !832, file: !44, line: 455, baseType: !844, size: 32, offset: 224)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !219, line: 168, baseType: !845)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !219, line: 166, size: 32, elements: !846)
!846 = !{!847}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !845, file: !219, line: 167, baseType: !282, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !832, file: !44, line: 460, baseType: !849, size: 128, offset: 256)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !850, line: 125, size: 128, elements: !851)
!850 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!851 = !{!852, !862}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !849, file: !850, line: 126, baseType: !853, size: 64)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !850, line: 31, size: 64, elements: !854)
!854 = !{!855}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !853, file: !850, line: 32, baseType: !856, size: 64)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !850, line: 24, size: 192, align: 64, elements: !858)
!858 = !{!859, !860, !861}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !857, file: !850, line: 25, baseType: !216, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !857, file: !850, line: 26, baseType: !856, size: 64, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !857, file: !850, line: 27, baseType: !856, size: 64, offset: 128)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !849, file: !850, line: 127, baseType: !856, size: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !832, file: !44, line: 461, baseType: !864, size: 256, offset: 384)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !865, line: 35, size: 256, elements: !866)
!865 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!866 = !{!867, !875, !876, !878}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !864, file: !865, line: 36, baseType: !868, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !869, line: 13, baseType: !870)
!869 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !219, line: 175, baseType: !871)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !219, line: 173, size: 64, elements: !872)
!872 = !{!873}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !871, file: !219, line: 174, baseType: !874, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !256, line: 22, baseType: !637)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !864, file: !865, line: 42, baseType: !868, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !864, file: !865, line: 46, baseType: !877, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !342, line: 29, baseType: !349)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !864, file: !865, line: 47, baseType: !223, size: 128, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !832, file: !44, line: 462, baseType: !216, size: 64, offset: 640)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !832, file: !44, line: 463, baseType: !216, size: 64, offset: 704)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !832, file: !44, line: 464, baseType: !216, size: 64, offset: 768)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !832, file: !44, line: 465, baseType: !883, size: 64, offset: 832)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !885)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !886)
!886 = !{!887, !891, !895, !899, !903, !907, !913, !919, !923, !928, !932, !936, !940, !968, !972, !978, !979, !980, !984, !989, !993, !1000}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !885, file: !44, line: 368, baseType: !888, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DISubroutineType(types: !890)
!890 = !{!282, !818, !773}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !885, file: !44, line: 369, baseType: !892, size: 64, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{!282, !457, !818}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !885, file: !44, line: 372, baseType: !896, size: 64, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{!282, !831, !773}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !885, file: !44, line: 375, baseType: !900, size: 64, offset: 192)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DISubroutineType(types: !902)
!902 = !{!282, !818}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !885, file: !44, line: 381, baseType: !904, size: 64, offset: 256)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!282, !457, !831, !222, !7}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !885, file: !44, line: 383, baseType: !908, size: 64, offset: 320)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{null, !911}
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !885, file: !44, line: 385, baseType: !914, size: 64, offset: 384)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DISubroutineType(types: !916)
!916 = !{!282, !457, !831, !628, !7, !7, !917, !918}
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !885, file: !44, line: 388, baseType: !920, size: 64, offset: 448)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!282, !457, !831, !628, !7, !7, !818, !217}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !885, file: !44, line: 393, baseType: !924, size: 64, offset: 512)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DISubroutineType(types: !926)
!926 = !{!927, !831, !927}
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !219, line: 125, baseType: !255)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !885, file: !44, line: 394, baseType: !929, size: 64, offset: 576)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{null, !818, !7, !7}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !885, file: !44, line: 395, baseType: !933, size: 64, offset: 640)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = !DISubroutineType(types: !935)
!935 = !{!282, !818, !218}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !885, file: !44, line: 396, baseType: !937, size: 64, offset: 704)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DISubroutineType(types: !939)
!939 = !{null, !818}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !885, file: !44, line: 397, baseType: !941, size: 64, offset: 768)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DISubroutineType(types: !943)
!943 = !{!413, !944, !966}
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !946)
!946 = !{!947, !948, !949, !953, !954, !955, !958, !959}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !945, file: !44, line: 321, baseType: !457, size: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !945, file: !44, line: 326, baseType: !628, size: 64, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !945, file: !44, line: 327, baseType: !950, size: 64, offset: 128)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DISubroutineType(types: !952)
!952 = !{null, !944, !105, !105}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !945, file: !44, line: 328, baseType: !217, size: 64, offset: 192)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !945, file: !44, line: 329, baseType: !282, size: 32, offset: 256)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !945, file: !44, line: 330, baseType: !956, size: 16, offset: 288)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !256, line: 19, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !258, line: 24, baseType: !320)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !945, file: !44, line: 331, baseType: !956, size: 16, offset: 304)
!959 = !DIDerivedType(tag: DW_TAG_member, scope: !945, file: !44, line: 332, baseType: !960, size: 64, offset: 320)
!960 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !945, file: !44, line: 332, size: 64, elements: !961)
!961 = !{!962, !963}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !960, file: !44, line: 333, baseType: !7, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !960, file: !44, line: 334, baseType: !964, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !885, file: !44, line: 402, baseType: !969, size: 64, offset: 832)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{!282, !831, !818, !818, !5}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !885, file: !44, line: 404, baseType: !973, size: 64, offset: 896)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DISubroutineType(types: !975)
!975 = !{!587, !818, !976}
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !977, line: 305, baseType: !7)
!977 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!978 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !885, file: !44, line: 405, baseType: !937, size: 64, offset: 960)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !885, file: !44, line: 406, baseType: !900, size: 64, offset: 1024)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !885, file: !44, line: 407, baseType: !981, size: 64, offset: 1088)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = !DISubroutineType(types: !983)
!983 = !{!282, !818, !216, !216}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !885, file: !44, line: 409, baseType: !985, size: 64, offset: 1152)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{null, !818, !988, !988}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !885, file: !44, line: 410, baseType: !990, size: 64, offset: 1216)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DISubroutineType(types: !992)
!992 = !{!282, !831, !818}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !885, file: !44, line: 413, baseType: !994, size: 64, offset: 1280)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = !DISubroutineType(types: !996)
!996 = !{!282, !997, !457, !999}
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !885, file: !44, line: 415, baseType: !1001, size: 64, offset: 1344)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{null, !457}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !832, file: !44, line: 466, baseType: !216, size: 64, offset: 896)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !832, file: !44, line: 467, baseType: !1006, size: 32, offset: 960)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1007, line: 8, baseType: !296)
!1007 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !832, file: !44, line: 468, baseType: !341, offset: 992)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !832, file: !44, line: 469, baseType: !223, size: 128, offset: 1024)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !832, file: !44, line: 470, baseType: !217, size: 64, offset: 1152)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !827, file: !820, line: 87, baseType: !216, size: 64, offset: 192)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !827, file: !820, line: 94, baseType: !216, size: 64, offset: 256)
!1013 = !DIDerivedType(tag: DW_TAG_member, scope: !824, file: !820, line: 96, baseType: !1014, size: 64)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !824, file: !820, line: 96, size: 64, elements: !1015)
!1015 = !{!1016}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1014, file: !820, line: 101, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !219, line: 143, baseType: !255)
!1018 = !DIDerivedType(tag: DW_TAG_member, scope: !824, file: !820, line: 103, baseType: !1019, size: 320)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !824, file: !820, line: 103, size: 320, elements: !1020)
!1020 = !{!1021, !1031, !1034, !1035}
!1021 = !DIDerivedType(tag: DW_TAG_member, scope: !1019, file: !820, line: 104, baseType: !1022, size: 128)
!1022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1019, file: !820, line: 104, size: 128, elements: !1023)
!1023 = !{!1024, !1025}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1022, file: !820, line: 105, baseType: !223, size: 128)
!1025 = !DIDerivedType(tag: DW_TAG_member, scope: !1022, file: !820, line: 106, baseType: !1026, size: 128)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1022, file: !820, line: 106, size: 128, elements: !1027)
!1027 = !{!1028, !1029, !1030}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1026, file: !820, line: 107, baseType: !818, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1026, file: !820, line: 109, baseType: !282, size: 32, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1026, file: !820, line: 110, baseType: !282, size: 32, offset: 96)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1019, file: !820, line: 117, baseType: !1032, size: 64, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !820, line: 117, flags: DIFlagFwdDecl)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1019, file: !820, line: 119, baseType: !217, size: 64, offset: 192)
!1035 = !DIDerivedType(tag: DW_TAG_member, scope: !1019, file: !820, line: 120, baseType: !1036, size: 64, offset: 256)
!1036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1019, file: !820, line: 120, size: 64, elements: !1037)
!1037 = !{!1038, !1039, !1040}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1036, file: !820, line: 121, baseType: !217, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1036, file: !820, line: 122, baseType: !216, size: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, scope: !1036, file: !820, line: 123, baseType: !1041, size: 32)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1036, file: !820, line: 123, size: 32, elements: !1042)
!1042 = !{!1043, !1044, !1045}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1041, file: !820, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1041, file: !820, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1041, file: !820, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1046 = !DIDerivedType(tag: DW_TAG_member, scope: !824, file: !820, line: 130, baseType: !1047, size: 192)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !824, file: !820, line: 130, size: 192, elements: !1048)
!1048 = !{!1049, !1050, !1051, !1052, !1053}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1047, file: !820, line: 131, baseType: !216, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1047, file: !820, line: 134, baseType: !311, size: 8, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1047, file: !820, line: 135, baseType: !311, size: 8, offset: 72)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1047, file: !820, line: 136, baseType: !844, size: 32, offset: 96)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1047, file: !820, line: 137, baseType: !7, size: 32, offset: 128)
!1054 = !DIDerivedType(tag: DW_TAG_member, scope: !824, file: !820, line: 139, baseType: !1055, size: 256)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !824, file: !820, line: 139, size: 256, elements: !1056)
!1056 = !{!1057, !1058, !1059}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1055, file: !820, line: 140, baseType: !216, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1055, file: !820, line: 141, baseType: !844, size: 32, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1055, file: !820, line: 143, baseType: !223, size: 128, offset: 128)
!1060 = !DIDerivedType(tag: DW_TAG_member, scope: !824, file: !820, line: 145, baseType: !1061, size: 256)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !824, file: !820, line: 145, size: 256, elements: !1062)
!1062 = !{!1063, !1064, !1066, !1067, !2431}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1061, file: !820, line: 146, baseType: !216, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1061, file: !820, line: 147, baseType: !1065, size: 64, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !810, line: 509, baseType: !818)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1061, file: !820, line: 148, baseType: !216, size: 64, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_member, scope: !1061, file: !820, line: 149, baseType: !1068, size: 64, offset: 192)
!1068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1061, file: !820, line: 149, size: 64, elements: !1069)
!1069 = !{!1070, !2430}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1068, file: !820, line: 150, baseType: !1071, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !820, line: 388, size: 7296, elements: !1073)
!1073 = !{!1074, !2426}
!1074 = !DIDerivedType(tag: DW_TAG_member, scope: !1072, file: !820, line: 389, baseType: !1075, size: 7296)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1072, file: !820, line: 389, size: 7296, elements: !1076)
!1076 = !{!1077, !1195, !1196, !1197, !1201, !1202, !1203, !1204, !1205, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1246, !1252, !1255, !1301, !1302, !2410, !2411, !2414, !2415, !2416, !2419, !2420, !2421, !2424, !2425}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1075, file: !820, line: 390, baseType: !1078, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !820, line: 305, size: 1472, elements: !1080)
!1080 = !{!1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1095, !1096, !1101, !1102, !1105, !1189, !1190, !1191, !1192, !1193}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1079, file: !820, line: 308, baseType: !216, size: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1079, file: !820, line: 309, baseType: !216, size: 64, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1079, file: !820, line: 313, baseType: !1078, size: 64, offset: 128)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1079, file: !820, line: 313, baseType: !1078, size: 64, offset: 192)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1079, file: !820, line: 315, baseType: !857, size: 192, align: 64, offset: 256)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1079, file: !820, line: 323, baseType: !216, size: 64, offset: 448)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1079, file: !820, line: 327, baseType: !1071, size: 64, offset: 512)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1079, file: !820, line: 333, baseType: !1089, size: 64, offset: 576)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !810, line: 284, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !810, line: 284, size: 64, elements: !1091)
!1091 = !{!1092}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1090, file: !810, line: 284, baseType: !1093, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1094, line: 19, baseType: !216)
!1094 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1079, file: !820, line: 334, baseType: !216, size: 64, offset: 640)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1079, file: !820, line: 343, baseType: !1097, size: 256, offset: 704)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1079, file: !820, line: 340, size: 256, elements: !1098)
!1098 = !{!1099, !1100}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1097, file: !820, line: 341, baseType: !857, size: 192, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1097, file: !820, line: 342, baseType: !216, size: 64, offset: 192)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1079, file: !820, line: 351, baseType: !223, size: 128, offset: 960)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1079, file: !820, line: 353, baseType: !1103, size: 64, offset: 1088)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !820, line: 353, flags: DIFlagFwdDecl)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1079, file: !820, line: 356, baseType: !1106, size: 64, offset: 1152)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1109)
!1109 = !{!1110, !1114, !1115, !1119, !1123, !1163, !1167, !1171, !1175, !1176, !1177, !1181, !1185}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1108, file: !14, line: 558, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !1078}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1108, file: !14, line: 559, baseType: !1111, size: 64, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1108, file: !14, line: 560, baseType: !1116, size: 64, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!282, !1078, !216}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1108, file: !14, line: 561, baseType: !1120, size: 64, offset: 192)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!282, !1078}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1108, file: !14, line: 562, baseType: !1124, size: 64, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!1127, !1128}
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !820, line: 682, baseType: !7)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1130)
!1130 = !{!1131, !1132, !1133, !1134, !1135, !1136, !1143, !1150, !1156, !1157, !1158, !1160, !1162}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1129, file: !14, line: 509, baseType: !1078, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1129, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1129, file: !14, line: 511, baseType: !218, size: 32, offset: 96)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1129, file: !14, line: 512, baseType: !216, size: 64, offset: 128)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1129, file: !14, line: 513, baseType: !216, size: 64, offset: 192)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1129, file: !14, line: 514, baseType: !1137, size: 64, offset: 256)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !810, line: 385, baseType: !1139)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !810, line: 385, size: 64, elements: !1140)
!1140 = !{!1141}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1139, file: !810, line: 385, baseType: !1142, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1094, line: 15, baseType: !216)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1129, file: !14, line: 516, baseType: !1144, size: 64, offset: 320)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !810, line: 359, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !810, line: 359, size: 64, elements: !1147)
!1147 = !{!1148}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1146, file: !810, line: 359, baseType: !1149, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1094, line: 16, baseType: !216)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1129, file: !14, line: 519, baseType: !1151, size: 64, offset: 384)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1094, line: 21, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1094, line: 21, size: 64, elements: !1153)
!1153 = !{!1154}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1152, file: !1094, line: 21, baseType: !1155, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1094, line: 14, baseType: !216)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1129, file: !14, line: 521, baseType: !818, size: 64, offset: 448)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1129, file: !14, line: 522, baseType: !818, size: 64, offset: 512)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1129, file: !14, line: 528, baseType: !1159, size: 64, offset: 576)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1129, file: !14, line: 532, baseType: !1161, size: 64, offset: 640)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1129, file: !14, line: 536, baseType: !1065, size: 64, offset: 704)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1108, file: !14, line: 563, baseType: !1164, size: 64, offset: 320)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!1127, !1128, !13}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1108, file: !14, line: 565, baseType: !1168, size: 64, offset: 384)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{null, !1128, !216, !216}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1108, file: !14, line: 567, baseType: !1172, size: 64, offset: 448)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!216, !1078}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1108, file: !14, line: 571, baseType: !1124, size: 64, offset: 512)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1108, file: !14, line: 574, baseType: !1124, size: 64, offset: 576)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1108, file: !14, line: 579, baseType: !1178, size: 64, offset: 640)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!282, !1078, !216, !217, !282, !282}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1108, file: !14, line: 585, baseType: !1182, size: 64, offset: 704)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1183 = !DISubroutineType(types: !1184)
!1184 = !{!262, !1078}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1108, file: !14, line: 615, baseType: !1186, size: 64, offset: 768)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!818, !1078, !216}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1079, file: !820, line: 359, baseType: !216, size: 64, offset: 1216)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1079, file: !820, line: 361, baseType: !457, size: 64, offset: 1280)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1079, file: !820, line: 362, baseType: !217, size: 64, offset: 1344)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1079, file: !820, line: 365, baseType: !868, size: 64, offset: 1408)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1079, file: !820, line: 373, baseType: !1194, offset: 1472)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !820, line: 296, elements: !355)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1075, file: !820, line: 391, baseType: !853, size: 64, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1075, file: !820, line: 392, baseType: !255, size: 64, offset: 128)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1075, file: !820, line: 394, baseType: !1198, size: 64, offset: 192)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!216, !457, !216, !216, !216, !216}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1075, file: !820, line: 398, baseType: !216, size: 64, offset: 256)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1075, file: !820, line: 399, baseType: !216, size: 64, offset: 320)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1075, file: !820, line: 405, baseType: !216, size: 64, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1075, file: !820, line: 406, baseType: !216, size: 64, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1075, file: !820, line: 407, baseType: !1206, size: 64, offset: 512)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !810, line: 286, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !810, line: 286, size: 64, elements: !1209)
!1209 = !{!1210}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1208, file: !810, line: 286, baseType: !1211, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1094, line: 18, baseType: !216)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1075, file: !820, line: 416, baseType: !844, size: 32, offset: 576)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1075, file: !820, line: 428, baseType: !844, size: 32, offset: 608)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1075, file: !820, line: 437, baseType: !844, size: 32, offset: 640)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1075, file: !820, line: 447, baseType: !844, size: 32, offset: 672)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1075, file: !820, line: 450, baseType: !868, size: 64, offset: 704)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1075, file: !820, line: 452, baseType: !282, size: 32, offset: 768)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1075, file: !820, line: 454, baseType: !341, offset: 800)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1075, file: !820, line: 457, baseType: !864, size: 256, offset: 832)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1075, file: !820, line: 459, baseType: !223, size: 128, offset: 1088)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1075, file: !820, line: 466, baseType: !216, size: 64, offset: 1216)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1075, file: !820, line: 467, baseType: !216, size: 64, offset: 1280)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1075, file: !820, line: 469, baseType: !216, size: 64, offset: 1344)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1075, file: !820, line: 470, baseType: !216, size: 64, offset: 1408)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1075, file: !820, line: 471, baseType: !870, size: 64, offset: 1472)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1075, file: !820, line: 472, baseType: !216, size: 64, offset: 1536)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1075, file: !820, line: 473, baseType: !216, size: 64, offset: 1600)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1075, file: !820, line: 474, baseType: !216, size: 64, offset: 1664)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1075, file: !820, line: 475, baseType: !216, size: 64, offset: 1728)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1075, file: !820, line: 477, baseType: !341, offset: 1792)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1075, file: !820, line: 478, baseType: !216, size: 64, offset: 1792)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1075, file: !820, line: 478, baseType: !216, size: 64, offset: 1856)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1075, file: !820, line: 478, baseType: !216, size: 64, offset: 1920)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1075, file: !820, line: 478, baseType: !216, size: 64, offset: 1984)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1075, file: !820, line: 479, baseType: !216, size: 64, offset: 2048)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1075, file: !820, line: 479, baseType: !216, size: 64, offset: 2112)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1075, file: !820, line: 479, baseType: !216, size: 64, offset: 2176)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1075, file: !820, line: 480, baseType: !216, size: 64, offset: 2240)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1075, file: !820, line: 480, baseType: !216, size: 64, offset: 2304)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1075, file: !820, line: 480, baseType: !216, size: 64, offset: 2368)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1075, file: !820, line: 480, baseType: !216, size: 64, offset: 2432)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1075, file: !820, line: 482, baseType: !1243, size: 2816, offset: 2496)
!1243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 2816, elements: !1244)
!1244 = !{!1245}
!1245 = !DISubrange(count: 44)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1075, file: !820, line: 488, baseType: !1247, size: 256, offset: 5312)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1248, line: 60, size: 256, elements: !1249)
!1248 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1249 = !{!1250}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1247, file: !1248, line: 61, baseType: !1251, size: 256)
!1251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !868, size: 256, elements: !270)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1075, file: !820, line: 490, baseType: !1253, size: 64, offset: 5568)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !820, line: 490, flags: DIFlagFwdDecl)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1075, file: !820, line: 493, baseType: !1256, size: 896, offset: 5632)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1257, line: 53, baseType: !1258)
!1257 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1257, line: 13, size: 896, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1263, !1266, !1267, !1274, !1275, !1295, !1296, !1297}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1258, file: !1257, line: 18, baseType: !255, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1258, file: !1257, line: 28, baseType: !870, size: 64, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1258, file: !1257, line: 31, baseType: !864, size: 256, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1258, file: !1257, line: 32, baseType: !1264, size: 64, offset: 384)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1257, line: 32, flags: DIFlagFwdDecl)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1258, file: !1257, line: 37, baseType: !320, size: 16, offset: 448)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1258, file: !1257, line: 40, baseType: !1268, size: 192, offset: 512)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1269, line: 53, size: 192, elements: !1270)
!1269 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1270 = !{!1271, !1272, !1273}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1268, file: !1269, line: 54, baseType: !868, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1268, file: !1269, line: 55, baseType: !341, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1268, file: !1269, line: 59, baseType: !223, size: 128, offset: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1258, file: !1257, line: 41, baseType: !217, size: 64, offset: 704)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1258, file: !1257, line: 42, baseType: !1276, size: 64, offset: 768)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1279, line: 13, size: 896, elements: !1280)
!1279 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1280 = !{!1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1278, file: !1279, line: 14, baseType: !217, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1278, file: !1279, line: 15, baseType: !216, size: 64, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1278, file: !1279, line: 17, baseType: !216, size: 64, offset: 128)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1278, file: !1279, line: 17, baseType: !216, size: 64, offset: 192)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1278, file: !1279, line: 19, baseType: !105, size: 64, offset: 256)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1278, file: !1279, line: 21, baseType: !105, size: 64, offset: 320)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1278, file: !1279, line: 22, baseType: !105, size: 64, offset: 384)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1278, file: !1279, line: 23, baseType: !105, size: 64, offset: 448)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1278, file: !1279, line: 24, baseType: !105, size: 64, offset: 512)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1278, file: !1279, line: 25, baseType: !105, size: 64, offset: 576)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1278, file: !1279, line: 26, baseType: !105, size: 64, offset: 640)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1278, file: !1279, line: 27, baseType: !105, size: 64, offset: 704)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1278, file: !1279, line: 28, baseType: !105, size: 64, offset: 768)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1278, file: !1279, line: 29, baseType: !105, size: 64, offset: 832)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1258, file: !1257, line: 44, baseType: !844, size: 32, offset: 832)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1258, file: !1257, line: 50, baseType: !956, size: 16, offset: 864)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1258, file: !1257, line: 51, baseType: !1298, size: 16, offset: 880)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !256, line: 18, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !258, line: 23, baseType: !1300)
!1300 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1075, file: !820, line: 495, baseType: !216, size: 64, offset: 6528)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1075, file: !820, line: 497, baseType: !1303, size: 64, offset: 6592)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !820, line: 381, size: 384, elements: !1305)
!1305 = !{!1306, !1307, !2409}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1304, file: !820, line: 382, baseType: !844, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1304, file: !820, line: 383, baseType: !1308, size: 128, offset: 64)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !820, line: 376, size: 128, elements: !1309)
!1309 = !{!1310, !2407}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1308, file: !820, line: 377, baseType: !1311, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1313, line: 640, size: 48640, elements: !1314)
!1313 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1314 = !{!1315, !1321, !1323, !1324, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1340, !1358, !1369, !1454, !1455, !1456, !1467, !1468, !1470, !1471, !1472, !1473, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1556, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1594, !1596, !1597, !1598, !1610, !1611, !1612, !1613, !1614, !1615, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1639, !1644, !1828, !1829, !1830, !1831, !1835, !1838, !1841, !1844, !1847, !1850, !1951, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1997, !1998, !1999, !2000, !2001, !2006, !2007, !2008, !2011, !2012, !2015, !2018, !2021, !2024, !2066, !2069, !2070, !2149, !2150, !2153, !2154, !2157, !2158, !2159, !2163, !2164, !2165, !2178, !2179, !2180, !2190, !2195, !2198, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1312, file: !1313, line: 646, baseType: !1316, size: 128)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1317, line: 56, size: 128, elements: !1318)
!1317 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1318 = !{!1319, !1320}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1316, file: !1317, line: 57, baseType: !216, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1316, file: !1317, line: 58, baseType: !296, size: 32, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1312, file: !1313, line: 649, baseType: !1322, size: 64, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !105)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1312, file: !1313, line: 657, baseType: !217, size: 64, offset: 192)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1312, file: !1313, line: 658, baseType: !1325, size: 32, offset: 256)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !156, line: 113, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !156, line: 111, size: 32, elements: !1327)
!1327 = !{!1328}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1326, file: !156, line: 112, baseType: !844, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1312, file: !1313, line: 660, baseType: !7, size: 32, offset: 288)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1312, file: !1313, line: 661, baseType: !7, size: 32, offset: 320)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1312, file: !1313, line: 684, baseType: !282, size: 32, offset: 352)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1312, file: !1313, line: 686, baseType: !282, size: 32, offset: 384)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1312, file: !1313, line: 687, baseType: !282, size: 32, offset: 416)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1312, file: !1313, line: 688, baseType: !282, size: 32, offset: 448)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1312, file: !1313, line: 689, baseType: !7, size: 32, offset: 480)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1312, file: !1313, line: 691, baseType: !1337, size: 64, offset: 512)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1339)
!1339 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1313, line: 691, flags: DIFlagFwdDecl)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1312, file: !1313, line: 692, baseType: !1341, size: 832, offset: 576)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1313, line: 451, size: 832, elements: !1342)
!1342 = !{!1343, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1341, file: !1313, line: 453, baseType: !1344, size: 128)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1313, line: 325, size: 128, elements: !1345)
!1345 = !{!1346, !1347}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1344, file: !1313, line: 326, baseType: !216, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1344, file: !1313, line: 327, baseType: !296, size: 32, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1341, file: !1313, line: 454, baseType: !857, size: 192, align: 64, offset: 128)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1341, file: !1313, line: 455, baseType: !223, size: 128, offset: 320)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1341, file: !1313, line: 456, baseType: !7, size: 32, offset: 448)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1341, file: !1313, line: 458, baseType: !255, size: 64, offset: 512)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1341, file: !1313, line: 459, baseType: !255, size: 64, offset: 576)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1341, file: !1313, line: 460, baseType: !255, size: 64, offset: 640)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1341, file: !1313, line: 461, baseType: !255, size: 64, offset: 704)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1341, file: !1313, line: 463, baseType: !255, size: 64, offset: 768)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1341, file: !1313, line: 465, baseType: !1357, offset: 832)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1313, line: 415, elements: !355)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1312, file: !1313, line: 693, baseType: !1359, size: 384, offset: 1408)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1313, line: 489, size: 384, elements: !1360)
!1360 = !{!1361, !1362, !1363, !1364, !1365, !1366, !1367}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1359, file: !1313, line: 490, baseType: !223, size: 128)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1359, file: !1313, line: 491, baseType: !216, size: 64, offset: 128)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1359, file: !1313, line: 492, baseType: !216, size: 64, offset: 192)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1359, file: !1313, line: 493, baseType: !7, size: 32, offset: 256)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1359, file: !1313, line: 494, baseType: !320, size: 16, offset: 288)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1359, file: !1313, line: 495, baseType: !320, size: 16, offset: 304)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1359, file: !1313, line: 497, baseType: !1368, size: 64, offset: 320)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1312, file: !1313, line: 697, baseType: !1370, size: 1792, offset: 1792)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1313, line: 507, size: 1792, elements: !1371)
!1371 = !{!1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1451, !1452}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1370, file: !1313, line: 508, baseType: !857, size: 192, align: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1370, file: !1313, line: 515, baseType: !255, size: 64, offset: 192)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1370, file: !1313, line: 516, baseType: !255, size: 64, offset: 256)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1370, file: !1313, line: 517, baseType: !255, size: 64, offset: 320)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1370, file: !1313, line: 518, baseType: !255, size: 64, offset: 384)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1370, file: !1313, line: 519, baseType: !255, size: 64, offset: 448)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1370, file: !1313, line: 526, baseType: !874, size: 64, offset: 512)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1370, file: !1313, line: 527, baseType: !255, size: 64, offset: 576)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1370, file: !1313, line: 528, baseType: !7, size: 32, offset: 640)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1370, file: !1313, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1370, file: !1313, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1370, file: !1313, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1370, file: !1313, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1370, file: !1313, line: 563, baseType: !1386, size: 512, offset: 704)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1387)
!1387 = !{!1388, !1396, !1397, !1402, !1445, !1448, !1449, !1450}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1386, file: !20, line: 119, baseType: !1389, size: 256)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1390, line: 9, size: 256, elements: !1391)
!1390 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1391 = !{!1392, !1393}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1389, file: !1390, line: 10, baseType: !857, size: 192, align: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1389, file: !1390, line: 11, baseType: !1394, size: 64, offset: 192)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1395, line: 29, baseType: !874)
!1395 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1386, file: !20, line: 120, baseType: !1394, size: 64, offset: 256)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1386, file: !20, line: 121, baseType: !1398, size: 64, offset: 320)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!19, !1401}
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1386, file: !20, line: 122, baseType: !1403, size: 64, offset: 384)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1405)
!1405 = !{!1406, !1426, !1427, !1430, !1435, !1436, !1440, !1444}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1404, file: !20, line: 160, baseType: !1407, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1409)
!1409 = !{!1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1408, file: !20, line: 215, baseType: !877)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1408, file: !20, line: 216, baseType: !7, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1408, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1408, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1408, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1408, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1408, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1408, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1408, file: !20, line: 233, baseType: !1394, size: 64, offset: 128)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1408, file: !20, line: 234, baseType: !1401, size: 64, offset: 192)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1408, file: !20, line: 235, baseType: !1394, size: 64, offset: 256)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1408, file: !20, line: 236, baseType: !1401, size: 64, offset: 320)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1408, file: !20, line: 237, baseType: !1423, size: 4096, offset: 512)
!1423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 4096, elements: !1424)
!1424 = !{!1425}
!1425 = !DISubrange(count: 8)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1404, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1404, file: !20, line: 162, baseType: !1428, size: 32, offset: 96)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !219, line: 27, baseType: !1429)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !415, line: 96, baseType: !282)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1404, file: !20, line: 163, baseType: !1431, size: 32, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !493, line: 276, baseType: !1432)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !493, line: 276, size: 32, elements: !1433)
!1433 = !{!1434}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1432, file: !493, line: 276, baseType: !497, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1404, file: !20, line: 164, baseType: !1401, size: 64, offset: 192)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1404, file: !20, line: 165, baseType: !1437, size: 128, offset: 256)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1390, line: 14, size: 128, elements: !1438)
!1438 = !{!1439}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1437, file: !1390, line: 15, baseType: !849, size: 128)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1404, file: !20, line: 166, baseType: !1441, size: 64, offset: 384)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!1394}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1404, file: !20, line: 167, baseType: !1394, size: 64, offset: 448)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1386, file: !20, line: 123, baseType: !1446, size: 8, offset: 448)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !256, line: 17, baseType: !1447)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !258, line: 21, baseType: !311)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1386, file: !20, line: 124, baseType: !1446, size: 8, offset: 456)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1386, file: !20, line: 125, baseType: !1446, size: 8, offset: 464)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1386, file: !20, line: 126, baseType: !1446, size: 8, offset: 472)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1370, file: !1313, line: 572, baseType: !1386, size: 512, offset: 1216)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1370, file: !1313, line: 580, baseType: !1453, size: 64, offset: 1728)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1312, file: !1313, line: 721, baseType: !7, size: 32, offset: 3584)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1312, file: !1313, line: 722, baseType: !282, size: 32, offset: 3616)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1312, file: !1313, line: 723, baseType: !1457, size: 64, offset: 3648)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1460, line: 17, baseType: !1461)
!1460 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1460, line: 17, size: 64, elements: !1462)
!1462 = !{!1463}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1461, file: !1460, line: 17, baseType: !1464, size: 64)
!1464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 64, elements: !1465)
!1465 = !{!1466}
!1466 = !DISubrange(count: 1)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1312, file: !1313, line: 724, baseType: !1459, size: 64, offset: 3712)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1312, file: !1313, line: 749, baseType: !1469, offset: 3776)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1313, line: 290, elements: !355)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1312, file: !1313, line: 751, baseType: !223, size: 128, offset: 3776)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1312, file: !1313, line: 757, baseType: !1071, size: 64, offset: 3904)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1312, file: !1313, line: 758, baseType: !1071, size: 64, offset: 3968)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1312, file: !1313, line: 761, baseType: !1474, size: 320, offset: 4032)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1248, line: 34, size: 320, elements: !1475)
!1475 = !{!1476, !1477}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1474, file: !1248, line: 35, baseType: !255, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1474, file: !1248, line: 36, baseType: !1478, size: 256, offset: 64)
!1478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1078, size: 256, elements: !270)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1312, file: !1313, line: 766, baseType: !282, size: 32, offset: 4352)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1312, file: !1313, line: 767, baseType: !282, size: 32, offset: 4384)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1312, file: !1313, line: 768, baseType: !282, size: 32, offset: 4416)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1312, file: !1313, line: 770, baseType: !282, size: 32, offset: 4448)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1312, file: !1313, line: 772, baseType: !216, size: 64, offset: 4480)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1312, file: !1313, line: 775, baseType: !7, size: 32, offset: 4544)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1312, file: !1313, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1312, file: !1313, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1312, file: !1313, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1312, file: !1313, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1312, file: !1313, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1312, file: !1313, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1312, file: !1313, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1312, file: !1313, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1312, file: !1313, line: 831, baseType: !216, size: 64, offset: 4672)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1312, file: !1313, line: 833, baseType: !1495, size: 384, offset: 4736)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1496)
!1496 = !{!1497, !1502}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1495, file: !25, line: 26, baseType: !1498, size: 64)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!105, !1501}
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, scope: !1495, file: !25, line: 27, baseType: !1503, size: 320, offset: 64)
!1503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1495, file: !25, line: 27, size: 320, elements: !1504)
!1504 = !{!1505, !1514, !1541}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1503, file: !25, line: 36, baseType: !1506, size: 320)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1503, file: !25, line: 29, size: 320, elements: !1507)
!1507 = !{!1508, !1509, !1510, !1511, !1512, !1513}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1506, file: !25, line: 30, baseType: !295, size: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1506, file: !25, line: 31, baseType: !296, size: 32, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1506, file: !25, line: 32, baseType: !296, size: 32, offset: 96)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1506, file: !25, line: 33, baseType: !296, size: 32, offset: 128)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1506, file: !25, line: 34, baseType: !255, size: 64, offset: 192)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1506, file: !25, line: 35, baseType: !295, size: 64, offset: 256)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1503, file: !25, line: 46, baseType: !1515, size: 192)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1503, file: !25, line: 38, size: 192, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1540}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1515, file: !25, line: 39, baseType: !1428, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1515, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, scope: !1515, file: !25, line: 41, baseType: !1520, size: 64, offset: 64)
!1520 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1515, file: !25, line: 41, size: 64, elements: !1521)
!1521 = !{!1522, !1530}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1520, file: !25, line: 42, baseType: !1523, size: 64)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1525, line: 7, size: 128, elements: !1526)
!1525 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1526 = !{!1527, !1529}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1524, file: !1525, line: 8, baseType: !1528, size: 64)
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !415, line: 93, baseType: !630)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1524, file: !1525, line: 9, baseType: !630, size: 64, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1520, file: !25, line: 43, baseType: !1531, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1533, line: 7, size: 64, elements: !1534)
!1533 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1534 = !{!1535, !1539}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1532, file: !1533, line: 8, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1533, line: 5, baseType: !1537)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !256, line: 20, baseType: !1538)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !258, line: 26, baseType: !282)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1532, file: !1533, line: 9, baseType: !1537, size: 32, offset: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1515, file: !25, line: 45, baseType: !255, size: 64, offset: 128)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1503, file: !25, line: 54, baseType: !1542, size: 256)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1503, file: !25, line: 48, size: 256, elements: !1543)
!1543 = !{!1544, !1552, !1553, !1554, !1555}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1542, file: !25, line: 49, baseType: !1545, size: 64)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1547, line: 36, size: 64, elements: !1548)
!1547 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1548 = !{!1549, !1550, !1551}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1546, file: !1547, line: 37, baseType: !282, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1546, file: !1547, line: 38, baseType: !1300, size: 16, offset: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1546, file: !1547, line: 39, baseType: !1300, size: 16, offset: 48)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1542, file: !25, line: 50, baseType: !282, size: 32, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1542, file: !25, line: 51, baseType: !282, size: 32, offset: 96)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1542, file: !25, line: 52, baseType: !216, size: 64, offset: 128)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1542, file: !25, line: 53, baseType: !216, size: 64, offset: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1312, file: !1313, line: 835, baseType: !1557, size: 32, offset: 5120)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !219, line: 22, baseType: !1558)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !415, line: 28, baseType: !282)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1312, file: !1313, line: 836, baseType: !1557, size: 32, offset: 5152)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1312, file: !1313, line: 840, baseType: !216, size: 64, offset: 5184)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1312, file: !1313, line: 849, baseType: !1311, size: 64, offset: 5248)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1312, file: !1313, line: 852, baseType: !1311, size: 64, offset: 5312)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1312, file: !1313, line: 857, baseType: !223, size: 128, offset: 5376)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1312, file: !1313, line: 858, baseType: !223, size: 128, offset: 5504)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1312, file: !1313, line: 859, baseType: !1311, size: 64, offset: 5632)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1312, file: !1313, line: 867, baseType: !223, size: 128, offset: 5696)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1312, file: !1313, line: 868, baseType: !223, size: 128, offset: 5824)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1312, file: !1313, line: 871, baseType: !1569, size: 64, offset: 5952)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1571)
!1571 = !{!1572, !1573, !1574, !1575, !1577, !1578, !1585, !1586}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1570, file: !53, line: 61, baseType: !1325, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1570, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1570, file: !53, line: 63, baseType: !341, offset: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1570, file: !53, line: 65, baseType: !1576, size: 256, offset: 64)
!1576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !732, size: 256, elements: !270)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1570, file: !53, line: 66, baseType: !732, size: 64, offset: 320)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1570, file: !53, line: 68, baseType: !1579, size: 128, offset: 384)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1580, line: 40, baseType: !1581)
!1580 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1580, line: 36, size: 128, elements: !1582)
!1582 = !{!1583, !1584}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1581, file: !1580, line: 37, baseType: !341)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1581, file: !1580, line: 38, baseType: !223, size: 128)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1570, file: !53, line: 69, baseType: !470, size: 128, align: 64, offset: 512)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1570, file: !53, line: 70, baseType: !1587, size: 128, offset: 640)
!1587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1588, size: 128, elements: !1465)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1589)
!1589 = !{!1590, !1591}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1588, file: !53, line: 55, baseType: !282, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1588, file: !53, line: 56, baseType: !1592, size: 64, offset: 64)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1312, file: !1313, line: 872, baseType: !1595, size: 512, offset: 6016)
!1595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !736, size: 512, elements: !270)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1312, file: !1313, line: 873, baseType: !223, size: 128, offset: 6528)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1312, file: !1313, line: 874, baseType: !223, size: 128, offset: 6656)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1312, file: !1313, line: 876, baseType: !1599, size: 64, offset: 6784)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1601, line: 26, size: 192, elements: !1602)
!1601 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1602 = !{!1603, !1604}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1600, file: !1601, line: 27, baseType: !7, size: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1600, file: !1601, line: 28, baseType: !1605, size: 128, offset: 64)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1606, line: 43, size: 128, elements: !1607)
!1606 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1607 = !{!1608, !1609}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1605, file: !1606, line: 44, baseType: !877)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1605, file: !1606, line: 45, baseType: !223, size: 128)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1312, file: !1313, line: 879, baseType: !802, size: 64, offset: 6848)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1312, file: !1313, line: 882, baseType: !802, size: 64, offset: 6912)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1312, file: !1313, line: 884, baseType: !255, size: 64, offset: 6976)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1312, file: !1313, line: 885, baseType: !255, size: 64, offset: 7040)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1312, file: !1313, line: 890, baseType: !255, size: 64, offset: 7104)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1312, file: !1313, line: 891, baseType: !1616, size: 128, offset: 7168)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1313, line: 242, size: 128, elements: !1617)
!1617 = !{!1618, !1619, !1620}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1616, file: !1313, line: 244, baseType: !255, size: 64)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1616, file: !1313, line: 245, baseType: !255, size: 64, offset: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1616, file: !1313, line: 246, baseType: !877, offset: 128)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1312, file: !1313, line: 900, baseType: !216, size: 64, offset: 7296)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1312, file: !1313, line: 901, baseType: !216, size: 64, offset: 7360)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1312, file: !1313, line: 904, baseType: !255, size: 64, offset: 7424)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1312, file: !1313, line: 907, baseType: !255, size: 64, offset: 7488)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1312, file: !1313, line: 910, baseType: !216, size: 64, offset: 7552)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1312, file: !1313, line: 911, baseType: !216, size: 64, offset: 7616)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1312, file: !1313, line: 914, baseType: !1628, size: 640, offset: 7680)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1629, line: 123, size: 640, elements: !1630)
!1629 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1630 = !{!1631, !1637, !1638}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1628, file: !1629, line: 124, baseType: !1632, size: 576)
!1632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1633, size: 576, elements: !383)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1629, line: 108, size: 192, elements: !1634)
!1634 = !{!1635, !1636}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1633, file: !1629, line: 109, baseType: !255, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1633, file: !1629, line: 110, baseType: !1437, size: 128, offset: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1628, file: !1629, line: 125, baseType: !7, size: 32, offset: 576)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1628, file: !1629, line: 126, baseType: !7, size: 32, offset: 608)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1312, file: !1313, line: 917, baseType: !1640, size: 192, offset: 8320)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1629, line: 134, size: 192, elements: !1641)
!1641 = !{!1642, !1643}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1640, file: !1629, line: 135, baseType: !470, size: 128, align: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1640, file: !1629, line: 136, baseType: !7, size: 32, offset: 128)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1312, file: !1313, line: 923, baseType: !1645, size: 64, offset: 8512)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1648, line: 111, size: 1280, elements: !1649)
!1648 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1649 = !{!1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1669, !1670, !1671, !1672, !1673, !1674, !1781, !1782, !1783, !1784, !1810, !1813, !1823}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1647, file: !1648, line: 112, baseType: !844, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1647, file: !1648, line: 120, baseType: !532, size: 32, offset: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1647, file: !1648, line: 121, baseType: !540, size: 32, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1647, file: !1648, line: 122, baseType: !532, size: 32, offset: 96)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1647, file: !1648, line: 123, baseType: !540, size: 32, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1647, file: !1648, line: 124, baseType: !532, size: 32, offset: 160)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1647, file: !1648, line: 125, baseType: !540, size: 32, offset: 192)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1647, file: !1648, line: 126, baseType: !532, size: 32, offset: 224)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1647, file: !1648, line: 127, baseType: !540, size: 32, offset: 256)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1647, file: !1648, line: 128, baseType: !7, size: 32, offset: 288)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1647, file: !1648, line: 129, baseType: !1661, size: 64, offset: 320)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1662, line: 26, baseType: !1663)
!1662 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1662, line: 24, size: 64, elements: !1664)
!1664 = !{!1665}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1663, file: !1662, line: 25, baseType: !1666, size: 64)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 64, elements: !1667)
!1667 = !{!1668}
!1668 = !DISubrange(count: 2)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1647, file: !1648, line: 130, baseType: !1661, size: 64, offset: 384)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1647, file: !1648, line: 131, baseType: !1661, size: 64, offset: 448)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1647, file: !1648, line: 132, baseType: !1661, size: 64, offset: 512)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1647, file: !1648, line: 133, baseType: !1661, size: 64, offset: 576)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1647, file: !1648, line: 135, baseType: !311, size: 8, offset: 640)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1647, file: !1648, line: 137, baseType: !1675, size: 64, offset: 704)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1677, line: 189, size: 1664, elements: !1678)
!1677 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1678 = !{!1679, !1680, !1683, !1688, !1689, !1692, !1693, !1698, !1699, !1700, !1701, !1703, !1704, !1705, !1706, !1707, !1745, !1766}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1676, file: !1677, line: 190, baseType: !1325, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1676, file: !1677, line: 191, baseType: !1681, size: 32, offset: 32)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1677, line: 28, baseType: !1682)
!1682 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !219, line: 98, baseType: !1537)
!1683 = !DIDerivedType(tag: DW_TAG_member, scope: !1676, file: !1677, line: 192, baseType: !1684, size: 192, offset: 64)
!1684 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1676, file: !1677, line: 192, size: 192, elements: !1685)
!1685 = !{!1686, !1687}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1684, file: !1677, line: 193, baseType: !223, size: 128)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1684, file: !1677, line: 194, baseType: !857, size: 192, align: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1676, file: !1677, line: 199, baseType: !864, size: 256, offset: 256)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1676, file: !1677, line: 200, baseType: !1690, size: 64, offset: 512)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1677, line: 200, flags: DIFlagFwdDecl)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1676, file: !1677, line: 201, baseType: !217, size: 64, offset: 576)
!1693 = !DIDerivedType(tag: DW_TAG_member, scope: !1676, file: !1677, line: 202, baseType: !1694, size: 64, offset: 640)
!1694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1676, file: !1677, line: 202, size: 64, elements: !1695)
!1695 = !{!1696, !1697}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1694, file: !1677, line: 203, baseType: !636, size: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1694, file: !1677, line: 204, baseType: !636, size: 64)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1676, file: !1677, line: 206, baseType: !636, size: 64, offset: 704)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1676, file: !1677, line: 207, baseType: !532, size: 32, offset: 768)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1676, file: !1677, line: 208, baseType: !540, size: 32, offset: 800)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1676, file: !1677, line: 209, baseType: !1702, size: 32, offset: 832)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1677, line: 31, baseType: !656)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1676, file: !1677, line: 210, baseType: !320, size: 16, offset: 864)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1676, file: !1677, line: 211, baseType: !320, size: 16, offset: 880)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1676, file: !1677, line: 215, baseType: !1300, size: 16, offset: 896)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1676, file: !1677, line: 222, baseType: !216, size: 64, offset: 960)
!1707 = !DIDerivedType(tag: DW_TAG_member, scope: !1676, file: !1677, line: 239, baseType: !1708, size: 320, offset: 1024)
!1708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1676, file: !1677, line: 239, size: 320, elements: !1709)
!1709 = !{!1710, !1737}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1708, file: !1677, line: 240, baseType: !1711, size: 320)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1677, line: 108, size: 320, elements: !1712)
!1712 = !{!1713, !1714, !1726, !1729, !1736}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1711, file: !1677, line: 110, baseType: !216, size: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, scope: !1711, file: !1677, line: 111, baseType: !1715, size: 64, offset: 64)
!1715 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1711, file: !1677, line: 111, size: 64, elements: !1716)
!1716 = !{!1717, !1725}
!1717 = !DIDerivedType(tag: DW_TAG_member, scope: !1715, file: !1677, line: 112, baseType: !1718, size: 64)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1715, file: !1677, line: 112, size: 64, elements: !1719)
!1719 = !{!1720, !1721}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1718, file: !1677, line: 114, baseType: !956, size: 16)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1718, file: !1677, line: 115, baseType: !1722, size: 48, offset: 16)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 48, elements: !1723)
!1723 = !{!1724}
!1724 = !DISubrange(count: 6)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1715, file: !1677, line: 121, baseType: !216, size: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1711, file: !1677, line: 123, baseType: !1727, size: 64, offset: 128)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1677, line: 96, flags: DIFlagFwdDecl)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1711, file: !1677, line: 124, baseType: !1730, size: 64, offset: 192)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1677, line: 102, size: 192, elements: !1732)
!1732 = !{!1733, !1734, !1735}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1731, file: !1677, line: 103, baseType: !470, size: 128, align: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1731, file: !1677, line: 104, baseType: !1325, size: 32, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1731, file: !1677, line: 105, baseType: !587, size: 8, offset: 160)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1711, file: !1677, line: 125, baseType: !262, size: 64, offset: 256)
!1737 = !DIDerivedType(tag: DW_TAG_member, scope: !1708, file: !1677, line: 241, baseType: !1738, size: 320)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1708, file: !1677, line: 241, size: 320, elements: !1739)
!1739 = !{!1740, !1741, !1742, !1743, !1744}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1738, file: !1677, line: 242, baseType: !216, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1738, file: !1677, line: 243, baseType: !216, size: 64, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1738, file: !1677, line: 244, baseType: !1727, size: 64, offset: 128)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1738, file: !1677, line: 245, baseType: !1730, size: 64, offset: 192)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1738, file: !1677, line: 246, baseType: !382, size: 64, offset: 256)
!1745 = !DIDerivedType(tag: DW_TAG_member, scope: !1676, file: !1677, line: 254, baseType: !1746, size: 256, offset: 1344)
!1746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1676, file: !1677, line: 254, size: 256, elements: !1747)
!1747 = !{!1748, !1754}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1746, file: !1677, line: 255, baseType: !1749, size: 256)
!1749 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1677, line: 128, size: 256, elements: !1750)
!1750 = !{!1751, !1752}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1749, file: !1677, line: 129, baseType: !217, size: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1749, file: !1677, line: 130, baseType: !1753, size: 256)
!1753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 256, elements: !270)
!1754 = !DIDerivedType(tag: DW_TAG_member, scope: !1746, file: !1677, line: 256, baseType: !1755, size: 256)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1746, file: !1677, line: 256, size: 256, elements: !1756)
!1756 = !{!1757, !1758}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1755, file: !1677, line: 258, baseType: !223, size: 128)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1755, file: !1677, line: 259, baseType: !1759, size: 128, offset: 128)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1760, line: 22, size: 128, elements: !1761)
!1760 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1761 = !{!1762, !1765}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1759, file: !1760, line: 23, baseType: !1763, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64)
!1764 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1760, line: 23, flags: DIFlagFwdDecl)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1759, file: !1760, line: 24, baseType: !216, size: 64, offset: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1676, file: !1677, line: 274, baseType: !1767, size: 64, offset: 1600)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1677, line: 170, size: 192, elements: !1769)
!1769 = !{!1770, !1779, !1780}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1768, file: !1677, line: 171, baseType: !1771, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1677, line: 165, baseType: !1772)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!282, !1675, !1775, !1777, !1675}
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1728)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1749)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1768, file: !1677, line: 172, baseType: !1675, size: 64, offset: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1768, file: !1677, line: 173, baseType: !1727, size: 64, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1647, file: !1648, line: 138, baseType: !1675, size: 64, offset: 768)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1647, file: !1648, line: 139, baseType: !1675, size: 64, offset: 832)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1647, file: !1648, line: 140, baseType: !1675, size: 64, offset: 896)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1647, file: !1648, line: 145, baseType: !1785, size: 64, offset: 960)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 64)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1787, line: 13, size: 896, elements: !1788)
!1787 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1788 = !{!1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1786, file: !1787, line: 14, baseType: !1325, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1786, file: !1787, line: 15, baseType: !844, size: 32, offset: 32)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1786, file: !1787, line: 16, baseType: !844, size: 32, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1786, file: !1787, line: 21, baseType: !868, size: 64, offset: 128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1786, file: !1787, line: 27, baseType: !216, size: 64, offset: 192)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1786, file: !1787, line: 28, baseType: !216, size: 64, offset: 256)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1786, file: !1787, line: 29, baseType: !868, size: 64, offset: 320)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1786, file: !1787, line: 32, baseType: !736, size: 128, offset: 384)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1786, file: !1787, line: 33, baseType: !532, size: 32, offset: 512)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1786, file: !1787, line: 37, baseType: !868, size: 64, offset: 576)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1786, file: !1787, line: 44, baseType: !1800, size: 256, offset: 640)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1801, line: 15, size: 256, elements: !1802)
!1801 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1802 = !{!1803, !1804, !1805, !1806, !1807, !1808, !1809}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1800, file: !1801, line: 16, baseType: !877)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1800, file: !1801, line: 18, baseType: !282, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1800, file: !1801, line: 19, baseType: !282, size: 32, offset: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1800, file: !1801, line: 20, baseType: !282, size: 32, offset: 64)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1800, file: !1801, line: 21, baseType: !282, size: 32, offset: 96)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1800, file: !1801, line: 22, baseType: !216, size: 64, offset: 128)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1800, file: !1801, line: 23, baseType: !216, size: 64, offset: 192)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1647, file: !1648, line: 146, baseType: !1811, size: 64, offset: 1024)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !820, line: 516, flags: DIFlagFwdDecl)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1647, file: !1648, line: 147, baseType: !1814, size: 64, offset: 1088)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1648, line: 25, size: 64, elements: !1816)
!1816 = !{!1817, !1818, !1819}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1815, file: !1648, line: 26, baseType: !844, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1815, file: !1648, line: 27, baseType: !282, size: 32, offset: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1815, file: !1648, line: 28, baseType: !1820, offset: 64)
!1820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, elements: !1821)
!1821 = !{!1822}
!1822 = !DISubrange(count: 0)
!1823 = !DIDerivedType(tag: DW_TAG_member, scope: !1647, file: !1648, line: 149, baseType: !1824, size: 128, offset: 1152)
!1824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1647, file: !1648, line: 149, size: 128, elements: !1825)
!1825 = !{!1826, !1827}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1824, file: !1648, line: 150, baseType: !282, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1824, file: !1648, line: 151, baseType: !470, size: 128, align: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1312, file: !1313, line: 926, baseType: !1645, size: 64, offset: 8576)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1312, file: !1313, line: 929, baseType: !1645, size: 64, offset: 8640)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1312, file: !1313, line: 933, baseType: !1675, size: 64, offset: 8704)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1312, file: !1313, line: 943, baseType: !1832, size: 128, offset: 8768)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 128, elements: !1833)
!1833 = !{!1834}
!1834 = !DISubrange(count: 16)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1312, file: !1313, line: 945, baseType: !1836, size: 64, offset: 8896)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1313, line: 49, flags: DIFlagFwdDecl)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1312, file: !1313, line: 956, baseType: !1839, size: 64, offset: 8960)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1313, line: 45, flags: DIFlagFwdDecl)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1312, file: !1313, line: 959, baseType: !1842, size: 64, offset: 9024)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1313, line: 959, flags: DIFlagFwdDecl)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1312, file: !1313, line: 962, baseType: !1845, size: 64, offset: 9088)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1313, line: 66, flags: DIFlagFwdDecl)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1312, file: !1313, line: 966, baseType: !1848, size: 64, offset: 9152)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1313, line: 50, flags: DIFlagFwdDecl)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1312, file: !1313, line: 969, baseType: !1851, size: 64, offset: 9216)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1853, line: 82, size: 7296, elements: !1854)
!1853 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1854 = !{!1855, !1856, !1857, !1858, !1859, !1860, !1861, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1890, !1899, !1900, !1902, !1903, !1904, !1907, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1937, !1938, !1945, !1946, !1947, !1948, !1949, !1950}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1852, file: !1853, line: 83, baseType: !1325, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1852, file: !1853, line: 84, baseType: !844, size: 32, offset: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1852, file: !1853, line: 85, baseType: !282, size: 32, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1852, file: !1853, line: 86, baseType: !223, size: 128, offset: 128)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1852, file: !1853, line: 88, baseType: !1579, size: 128, offset: 256)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1852, file: !1853, line: 91, baseType: !1311, size: 64, offset: 384)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1852, file: !1853, line: 94, baseType: !1862, size: 192, offset: 448)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1863, line: 30, size: 192, elements: !1864)
!1863 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1864 = !{!1865, !1866}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1862, file: !1863, line: 31, baseType: !223, size: 128)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1862, file: !1863, line: 32, baseType: !1867, size: 64, offset: 128)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1868, line: 25, baseType: !1869)
!1868 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1868, line: 23, size: 64, elements: !1870)
!1870 = !{!1871}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1869, file: !1868, line: 24, baseType: !1464, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1852, file: !1853, line: 97, baseType: !732, size: 64, offset: 640)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1852, file: !1853, line: 100, baseType: !282, size: 32, offset: 704)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1852, file: !1853, line: 106, baseType: !282, size: 32, offset: 736)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1852, file: !1853, line: 107, baseType: !1311, size: 64, offset: 768)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1852, file: !1853, line: 110, baseType: !282, size: 32, offset: 832)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1852, file: !1853, line: 111, baseType: !7, size: 32, offset: 864)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1852, file: !1853, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1852, file: !1853, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1852, file: !1853, line: 128, baseType: !282, size: 32, offset: 928)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1852, file: !1853, line: 129, baseType: !223, size: 128, offset: 960)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1852, file: !1853, line: 132, baseType: !1386, size: 512, offset: 1088)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1852, file: !1853, line: 133, baseType: !1394, size: 64, offset: 1600)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1852, file: !1853, line: 140, baseType: !1885, size: 256, offset: 1664)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 256, elements: !1667)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1853, line: 38, size: 128, elements: !1887)
!1887 = !{!1888, !1889}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1886, file: !1853, line: 39, baseType: !255, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1886, file: !1853, line: 40, baseType: !255, size: 64, offset: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1852, file: !1853, line: 146, baseType: !1891, size: 192, offset: 1920)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1853, line: 66, size: 192, elements: !1892)
!1892 = !{!1893}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1891, file: !1853, line: 67, baseType: !1894, size: 192)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1853, line: 47, size: 192, elements: !1895)
!1895 = !{!1896, !1897, !1898}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1894, file: !1853, line: 48, baseType: !870, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1894, file: !1853, line: 49, baseType: !870, size: 64, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1894, file: !1853, line: 50, baseType: !870, size: 64, offset: 128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1852, file: !1853, line: 150, baseType: !1628, size: 640, offset: 2112)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1852, file: !1853, line: 153, baseType: !1901, size: 256, offset: 2752)
!1901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1569, size: 256, elements: !270)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1852, file: !1853, line: 159, baseType: !1569, size: 64, offset: 3008)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1852, file: !1853, line: 162, baseType: !282, size: 32, offset: 3072)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1852, file: !1853, line: 164, baseType: !1905, size: 64, offset: 3136)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1853, line: 164, flags: DIFlagFwdDecl)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1852, file: !1853, line: 175, baseType: !1908, size: 32, offset: 3200)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !493, line: 805, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !493, line: 798, size: 32, elements: !1910)
!1910 = !{!1911, !1912}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1909, file: !493, line: 803, baseType: !492, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1909, file: !493, line: 804, baseType: !341, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1852, file: !1853, line: 176, baseType: !255, size: 64, offset: 3264)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1852, file: !1853, line: 176, baseType: !255, size: 64, offset: 3328)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1852, file: !1853, line: 176, baseType: !255, size: 64, offset: 3392)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1852, file: !1853, line: 176, baseType: !255, size: 64, offset: 3456)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1852, file: !1853, line: 177, baseType: !255, size: 64, offset: 3520)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1852, file: !1853, line: 178, baseType: !255, size: 64, offset: 3584)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1852, file: !1853, line: 179, baseType: !1616, size: 128, offset: 3648)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1852, file: !1853, line: 180, baseType: !216, size: 64, offset: 3776)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1852, file: !1853, line: 180, baseType: !216, size: 64, offset: 3840)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1852, file: !1853, line: 180, baseType: !216, size: 64, offset: 3904)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1852, file: !1853, line: 180, baseType: !216, size: 64, offset: 3968)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1852, file: !1853, line: 181, baseType: !216, size: 64, offset: 4032)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1852, file: !1853, line: 181, baseType: !216, size: 64, offset: 4096)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1852, file: !1853, line: 181, baseType: !216, size: 64, offset: 4160)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1852, file: !1853, line: 181, baseType: !216, size: 64, offset: 4224)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1852, file: !1853, line: 182, baseType: !216, size: 64, offset: 4288)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1852, file: !1853, line: 182, baseType: !216, size: 64, offset: 4352)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1852, file: !1853, line: 182, baseType: !216, size: 64, offset: 4416)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1852, file: !1853, line: 182, baseType: !216, size: 64, offset: 4480)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1852, file: !1853, line: 183, baseType: !216, size: 64, offset: 4544)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1852, file: !1853, line: 183, baseType: !216, size: 64, offset: 4608)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1852, file: !1853, line: 184, baseType: !1935, offset: 4672)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1936, line: 12, elements: !355)
!1936 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1852, file: !1853, line: 192, baseType: !259, size: 64, offset: 4672)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1852, file: !1853, line: 203, baseType: !1939, size: 2048, offset: 4736)
!1939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1940, size: 2048, elements: !1833)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1941, line: 43, size: 128, elements: !1942)
!1941 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1942 = !{!1943, !1944}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1940, file: !1941, line: 44, baseType: !429, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1940, file: !1941, line: 45, baseType: !429, size: 64, offset: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1852, file: !1853, line: 220, baseType: !587, size: 8, offset: 6784)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1852, file: !1853, line: 221, baseType: !1300, size: 16, offset: 6800)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1852, file: !1853, line: 222, baseType: !1300, size: 16, offset: 6816)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1852, file: !1853, line: 224, baseType: !1071, size: 64, offset: 6848)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1852, file: !1853, line: 227, baseType: !1268, size: 192, offset: 6912)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1852, file: !1853, line: 233, baseType: !1268, size: 192, offset: 7104)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1312, file: !1313, line: 970, baseType: !1952, size: 64, offset: 9280)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1853, line: 20, size: 16576, elements: !1954)
!1954 = !{!1955, !1956, !1957, !1958}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1953, file: !1853, line: 21, baseType: !341)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1953, file: !1853, line: 22, baseType: !1325, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1953, file: !1853, line: 23, baseType: !1579, size: 128, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1953, file: !1853, line: 24, baseType: !1959, size: 16384, offset: 192)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1960, size: 16384, elements: !387)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1863, line: 49, size: 256, elements: !1961)
!1961 = !{!1962}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1960, file: !1863, line: 50, baseType: !1963, size: 256)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1863, line: 35, size: 256, elements: !1964)
!1964 = !{!1965, !1972, !1973, !1979}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1963, file: !1863, line: 37, baseType: !1966, size: 64)
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1967, line: 19, baseType: !1968)
!1967 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1967, line: 18, baseType: !1970)
!1970 = !DISubroutineType(types: !1971)
!1971 = !{null, !282}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1963, file: !1863, line: 38, baseType: !216, size: 64, offset: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1963, file: !1863, line: 44, baseType: !1974, size: 64, offset: 128)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1967, line: 22, baseType: !1975)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1967, line: 21, baseType: !1977)
!1977 = !DISubroutineType(types: !1978)
!1978 = !{null}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1963, file: !1863, line: 46, baseType: !1867, size: 64, offset: 192)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1312, file: !1313, line: 971, baseType: !1867, size: 64, offset: 9344)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1312, file: !1313, line: 972, baseType: !1867, size: 64, offset: 9408)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1312, file: !1313, line: 974, baseType: !1867, size: 64, offset: 9472)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1312, file: !1313, line: 975, baseType: !1862, size: 192, offset: 9536)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1312, file: !1313, line: 976, baseType: !216, size: 64, offset: 9728)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1312, file: !1313, line: 977, baseType: !427, size: 64, offset: 9792)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1312, file: !1313, line: 978, baseType: !7, size: 32, offset: 9856)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1312, file: !1313, line: 980, baseType: !473, size: 64, offset: 9920)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1312, file: !1313, line: 989, baseType: !1989, size: 128, offset: 9984)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1990, line: 35, size: 128, elements: !1991)
!1990 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1991 = !{!1992, !1993, !1994}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1989, file: !1990, line: 36, baseType: !282, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1989, file: !1990, line: 37, baseType: !844, size: 32, offset: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1989, file: !1990, line: 38, baseType: !1995, size: 64, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1990, line: 23, flags: DIFlagFwdDecl)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1312, file: !1313, line: 992, baseType: !255, size: 64, offset: 10112)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1312, file: !1313, line: 993, baseType: !255, size: 64, offset: 10176)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1312, file: !1313, line: 996, baseType: !341, offset: 10240)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1312, file: !1313, line: 999, baseType: !877, offset: 10240)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1312, file: !1313, line: 1001, baseType: !2002, size: 64, offset: 10240)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1313, line: 636, size: 64, elements: !2003)
!2003 = !{!2004}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2002, file: !1313, line: 637, baseType: !2005, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1312, file: !1313, line: 1005, baseType: !849, size: 128, offset: 10304)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1312, file: !1313, line: 1007, baseType: !1311, size: 64, offset: 10432)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1312, file: !1313, line: 1009, baseType: !2009, size: 64, offset: 10496)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1313, line: 1009, flags: DIFlagFwdDecl)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1312, file: !1313, line: 1043, baseType: !217, size: 64, offset: 10560)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1312, file: !1313, line: 1046, baseType: !2013, size: 64, offset: 10624)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1313, line: 41, flags: DIFlagFwdDecl)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1312, file: !1313, line: 1050, baseType: !2016, size: 64, offset: 10688)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1313, line: 42, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1312, file: !1313, line: 1054, baseType: !2019, size: 64, offset: 10752)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1313, line: 55, flags: DIFlagFwdDecl)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1312, file: !1313, line: 1056, baseType: !2022, size: 64, offset: 10816)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1313, line: 40, flags: DIFlagFwdDecl)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1312, file: !1313, line: 1058, baseType: !2025, size: 64, offset: 10880)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2027, line: 99, size: 704, elements: !2028)
!2027 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2028 = !{!2029, !2030, !2031, !2032, !2033, !2034, !2035, !2054, !2055}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2026, file: !2027, line: 100, baseType: !868, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2026, file: !2027, line: 101, baseType: !844, size: 32, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2026, file: !2027, line: 102, baseType: !844, size: 32, offset: 96)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2026, file: !2027, line: 105, baseType: !341, offset: 128)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2026, file: !2027, line: 107, baseType: !320, size: 16, offset: 128)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2026, file: !2027, line: 109, baseType: !836, size: 128, offset: 192)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2026, file: !2027, line: 110, baseType: !2036, size: 64, offset: 320)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2027, line: 73, size: 448, elements: !2038)
!2038 = !{!2039, !2042, !2043, !2048, !2053}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2037, file: !2027, line: 74, baseType: !2040, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2027, line: 74, flags: DIFlagFwdDecl)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2037, file: !2027, line: 75, baseType: !2025, size: 64, offset: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, scope: !2037, file: !2027, line: 83, baseType: !2044, size: 128, offset: 128)
!2044 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2037, file: !2027, line: 83, size: 128, elements: !2045)
!2045 = !{!2046, !2047}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2044, file: !2027, line: 84, baseType: !223, size: 128)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2044, file: !2027, line: 85, baseType: !1032, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, scope: !2037, file: !2027, line: 87, baseType: !2049, size: 128, offset: 256)
!2049 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2037, file: !2027, line: 87, size: 128, elements: !2050)
!2050 = !{!2051, !2052}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2049, file: !2027, line: 88, baseType: !736, size: 128)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2049, file: !2027, line: 89, baseType: !470, size: 128, align: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2037, file: !2027, line: 92, baseType: !7, size: 32, offset: 384)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2026, file: !2027, line: 111, baseType: !732, size: 64, offset: 384)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2026, file: !2027, line: 113, baseType: !2056, size: 256, offset: 448)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !104, line: 102, size: 256, elements: !2057)
!2057 = !{!2058, !2059, !2060}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2056, file: !104, line: 103, baseType: !868, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2056, file: !104, line: 104, baseType: !223, size: 128, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2056, file: !104, line: 105, baseType: !2061, size: 64, offset: 192)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !104, line: 21, baseType: !2062)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!2063 = !DISubroutineType(types: !2064)
!2064 = !{null, !2065}
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1312, file: !1313, line: 1061, baseType: !2067, size: 64, offset: 10944)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1313, line: 43, flags: DIFlagFwdDecl)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1312, file: !1313, line: 1064, baseType: !216, size: 64, offset: 11008)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1312, file: !1313, line: 1065, baseType: !2071, size: 64, offset: 11072)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1863, line: 14, baseType: !2073)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1863, line: 12, size: 384, elements: !2074)
!2074 = !{!2075}
!2075 = !DIDerivedType(tag: DW_TAG_member, scope: !2073, file: !1863, line: 13, baseType: !2076, size: 384)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2073, file: !1863, line: 13, size: 384, elements: !2077)
!2077 = !{!2078, !2079, !2080, !2081}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2076, file: !1863, line: 13, baseType: !282, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2076, file: !1863, line: 13, baseType: !282, size: 32, offset: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2076, file: !1863, line: 13, baseType: !282, size: 32, offset: 64)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2076, file: !1863, line: 13, baseType: !2082, size: 256, offset: 128)
!2082 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2083, line: 32, size: 256, elements: !2084)
!2083 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2084 = !{!2085, !2090, !2103, !2109, !2118, !2138, !2143}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2082, file: !2083, line: 37, baseType: !2086, size: 64)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2082, file: !2083, line: 34, size: 64, elements: !2087)
!2087 = !{!2088, !2089}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2086, file: !2083, line: 35, baseType: !1558, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2086, file: !2083, line: 36, baseType: !538, size: 32, offset: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2082, file: !2083, line: 45, baseType: !2091, size: 192)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2082, file: !2083, line: 40, size: 192, elements: !2092)
!2092 = !{!2093, !2095, !2096, !2102}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2091, file: !2083, line: 41, baseType: !2094, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !415, line: 95, baseType: !282)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2091, file: !2083, line: 42, baseType: !282, size: 32, offset: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2091, file: !2083, line: 43, baseType: !2097, size: 64, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2083, line: 11, baseType: !2098)
!2098 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2083, line: 8, size: 64, elements: !2099)
!2099 = !{!2100, !2101}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2098, file: !2083, line: 9, baseType: !282, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2098, file: !2083, line: 10, baseType: !217, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2091, file: !2083, line: 44, baseType: !282, size: 32, offset: 128)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2082, file: !2083, line: 52, baseType: !2104, size: 128)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2082, file: !2083, line: 48, size: 128, elements: !2105)
!2105 = !{!2106, !2107, !2108}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2104, file: !2083, line: 49, baseType: !1558, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2104, file: !2083, line: 50, baseType: !538, size: 32, offset: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2104, file: !2083, line: 51, baseType: !2097, size: 64, offset: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2082, file: !2083, line: 61, baseType: !2110, size: 256)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2082, file: !2083, line: 55, size: 256, elements: !2111)
!2111 = !{!2112, !2113, !2114, !2115, !2117}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2110, file: !2083, line: 56, baseType: !1558, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2110, file: !2083, line: 57, baseType: !538, size: 32, offset: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2110, file: !2083, line: 58, baseType: !282, size: 32, offset: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2110, file: !2083, line: 59, baseType: !2116, size: 64, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !415, line: 94, baseType: !416)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2110, file: !2083, line: 60, baseType: !2116, size: 64, offset: 192)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2082, file: !2083, line: 95, baseType: !2119, size: 256)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2082, file: !2083, line: 64, size: 256, elements: !2120)
!2120 = !{!2121, !2122}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2119, file: !2083, line: 65, baseType: !217, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, scope: !2119, file: !2083, line: 77, baseType: !2123, size: 192, offset: 64)
!2123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2119, file: !2083, line: 77, size: 192, elements: !2124)
!2124 = !{!2125, !2126, !2133}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2123, file: !2083, line: 82, baseType: !1300, size: 16)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2123, file: !2083, line: 88, baseType: !2127, size: 192)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2123, file: !2083, line: 84, size: 192, elements: !2128)
!2128 = !{!2129, !2131, !2132}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2127, file: !2083, line: 85, baseType: !2130, size: 64)
!2130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 64, elements: !1424)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2127, file: !2083, line: 86, baseType: !217, size: 64, offset: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2127, file: !2083, line: 87, baseType: !217, size: 64, offset: 128)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2123, file: !2083, line: 93, baseType: !2134, size: 96)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2123, file: !2083, line: 90, size: 96, elements: !2135)
!2135 = !{!2136, !2137}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2134, file: !2083, line: 91, baseType: !2130, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2134, file: !2083, line: 92, baseType: !297, size: 32, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2082, file: !2083, line: 101, baseType: !2139, size: 128)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2082, file: !2083, line: 98, size: 128, elements: !2140)
!2140 = !{!2141, !2142}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2139, file: !2083, line: 99, baseType: !105, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2139, file: !2083, line: 100, baseType: !282, size: 32, offset: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2082, file: !2083, line: 108, baseType: !2144, size: 128)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2082, file: !2083, line: 104, size: 128, elements: !2145)
!2145 = !{!2146, !2147, !2148}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2144, file: !2083, line: 105, baseType: !217, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2144, file: !2083, line: 106, baseType: !282, size: 32, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2144, file: !2083, line: 107, baseType: !7, size: 32, offset: 96)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1312, file: !1313, line: 1067, baseType: !1935, offset: 11136)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1312, file: !1313, line: 1099, baseType: !2151, size: 64, offset: 11136)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1313, line: 56, flags: DIFlagFwdDecl)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1312, file: !1313, line: 1103, baseType: !223, size: 128, offset: 11200)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1312, file: !1313, line: 1104, baseType: !2155, size: 64, offset: 11328)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1313, line: 46, flags: DIFlagFwdDecl)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1312, file: !1313, line: 1105, baseType: !1268, size: 192, offset: 11392)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1312, file: !1313, line: 1106, baseType: !7, size: 32, offset: 11584)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1312, file: !1313, line: 1109, baseType: !2160, size: 128, offset: 11648)
!2160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2161, size: 128, elements: !1667)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1313, line: 51, flags: DIFlagFwdDecl)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1312, file: !1313, line: 1110, baseType: !1268, size: 192, offset: 11776)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1312, file: !1313, line: 1111, baseType: !223, size: 128, offset: 11968)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1312, file: !1313, line: 1173, baseType: !2166, size: 64, offset: 12096)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2168, line: 62, size: 256, align: 256, elements: !2169)
!2168 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2169 = !{!2170, !2171, !2172, !2177}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2167, file: !2168, line: 75, baseType: !297, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2167, file: !2168, line: 90, baseType: !297, size: 32, offset: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2167, file: !2168, line: 124, baseType: !2173, size: 64, offset: 64)
!2173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2167, file: !2168, line: 109, size: 64, elements: !2174)
!2174 = !{!2175, !2176}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2173, file: !2168, line: 110, baseType: !257, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2173, file: !2168, line: 112, baseType: !257, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2167, file: !2168, line: 144, baseType: !297, size: 32, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1312, file: !1313, line: 1174, baseType: !296, size: 32, offset: 12160)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1312, file: !1313, line: 1179, baseType: !216, size: 64, offset: 12224)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1312, file: !1313, line: 1182, baseType: !2181, size: 128, offset: 12288)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1248, line: 76, size: 128, elements: !2182)
!2182 = !{!2183, !2188, !2189}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2181, file: !1248, line: 85, baseType: !2184, size: 64)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2185, line: 7, size: 64, elements: !2186)
!2185 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2186 = !{!2187}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2184, file: !2185, line: 12, baseType: !1461, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2181, file: !1248, line: 88, baseType: !587, size: 8, offset: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2181, file: !1248, line: 95, baseType: !587, size: 8, offset: 72)
!2190 = !DIDerivedType(tag: DW_TAG_member, scope: !1312, file: !1313, line: 1184, baseType: !2191, size: 128, offset: 12416)
!2191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1312, file: !1313, line: 1184, size: 128, elements: !2192)
!2192 = !{!2193, !2194}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2191, file: !1313, line: 1185, baseType: !1325, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2191, file: !1313, line: 1186, baseType: !470, size: 128, align: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1312, file: !1313, line: 1190, baseType: !2196, size: 64, offset: 12544)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1313, line: 53, flags: DIFlagFwdDecl)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1312, file: !1313, line: 1192, baseType: !2199, size: 128, offset: 12608)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1248, line: 64, size: 128, elements: !2200)
!2200 = !{!2201, !2202, !2203}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2199, file: !1248, line: 65, baseType: !818, size: 64)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2199, file: !1248, line: 67, baseType: !297, size: 32, offset: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2199, file: !1248, line: 68, baseType: !297, size: 32, offset: 96)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1312, file: !1313, line: 1206, baseType: !282, size: 32, offset: 12736)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1312, file: !1313, line: 1207, baseType: !282, size: 32, offset: 12768)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1312, file: !1313, line: 1209, baseType: !216, size: 64, offset: 12800)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1312, file: !1313, line: 1219, baseType: !255, size: 64, offset: 12864)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1312, file: !1313, line: 1220, baseType: !255, size: 64, offset: 12928)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1312, file: !1313, line: 1317, baseType: !282, size: 32, offset: 12992)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1312, file: !1313, line: 1319, baseType: !1311, size: 64, offset: 13056)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1312, file: !1313, line: 1322, baseType: !2212, size: 64, offset: 13120)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2214, line: 56, size: 512, elements: !2215)
!2214 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2215 = !{!2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2213, file: !2214, line: 57, baseType: !2212, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2213, file: !2214, line: 58, baseType: !217, size: 64, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2213, file: !2214, line: 59, baseType: !216, size: 64, offset: 128)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2213, file: !2214, line: 60, baseType: !216, size: 64, offset: 192)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2213, file: !2214, line: 61, baseType: !917, size: 64, offset: 256)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2213, file: !2214, line: 62, baseType: !7, size: 32, offset: 320)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2213, file: !2214, line: 63, baseType: !254, size: 64, offset: 384)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2213, file: !2214, line: 64, baseType: !2224, size: 64, offset: 448)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1312, file: !1313, line: 1326, baseType: !1325, size: 32, offset: 13184)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1312, file: !1313, line: 1342, baseType: !217, size: 64, offset: 13248)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1312, file: !1313, line: 1343, baseType: !257, size: 64, offset: 13312)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1312, file: !1313, line: 1344, baseType: !255, size: 64, offset: 13376)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1312, file: !1313, line: 1345, baseType: !257, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1312, file: !1313, line: 1346, baseType: !257, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1312, file: !1313, line: 1347, baseType: !257, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1312, file: !1313, line: 1348, baseType: !470, size: 128, align: 64, offset: 13504)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1312, file: !1313, line: 1358, baseType: !2235, size: 34816, offset: 13824)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2236, line: 485, size: 34816, elements: !2237)
!2236 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2237 = !{!2238, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2267, !2268, !2269, !2270, !2271, !2272, !2275, !2276, !2277}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2235, file: !2236, line: 487, baseType: !2239, size: 192)
!2239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2240, size: 192, elements: !383)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2241, line: 16, size: 64, elements: !2242)
!2241 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2242 = !{!2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2240, file: !2241, line: 17, baseType: !956, size: 16)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2240, file: !2241, line: 18, baseType: !956, size: 16, offset: 16)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2240, file: !2241, line: 19, baseType: !956, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2240, file: !2241, line: 19, baseType: !956, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2240, file: !2241, line: 19, baseType: !956, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2240, file: !2241, line: 19, baseType: !956, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2240, file: !2241, line: 19, baseType: !956, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2240, file: !2241, line: 20, baseType: !956, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2240, file: !2241, line: 20, baseType: !956, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2240, file: !2241, line: 20, baseType: !956, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2240, file: !2241, line: 20, baseType: !956, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2240, file: !2241, line: 20, baseType: !956, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2240, file: !2241, line: 20, baseType: !956, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2235, file: !2236, line: 491, baseType: !216, size: 64, offset: 192)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2235, file: !2236, line: 495, baseType: !320, size: 16, offset: 256)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2235, file: !2236, line: 496, baseType: !320, size: 16, offset: 272)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2235, file: !2236, line: 497, baseType: !320, size: 16, offset: 288)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2235, file: !2236, line: 498, baseType: !320, size: 16, offset: 304)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2235, file: !2236, line: 502, baseType: !216, size: 64, offset: 320)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2235, file: !2236, line: 503, baseType: !216, size: 64, offset: 384)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2235, file: !2236, line: 514, baseType: !2264, size: 256, offset: 448)
!2264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2265, size: 256, elements: !270)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2236, line: 483, flags: DIFlagFwdDecl)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2235, file: !2236, line: 516, baseType: !216, size: 64, offset: 704)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2235, file: !2236, line: 518, baseType: !216, size: 64, offset: 768)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2235, file: !2236, line: 520, baseType: !216, size: 64, offset: 832)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2235, file: !2236, line: 521, baseType: !216, size: 64, offset: 896)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2235, file: !2236, line: 522, baseType: !216, size: 64, offset: 960)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2235, file: !2236, line: 528, baseType: !2273, size: 64, offset: 1024)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2236, line: 10, flags: DIFlagFwdDecl)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2235, file: !2236, line: 535, baseType: !216, size: 64, offset: 1088)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2235, file: !2236, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2235, file: !2236, line: 540, baseType: !2278, size: 33280, offset: 1536)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2279, line: 317, size: 33280, elements: !2280)
!2279 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2280 = !{!2281, !2282, !2283}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2278, file: !2279, line: 330, baseType: !7, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2278, file: !2279, line: 337, baseType: !216, size: 64, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2278, file: !2279, line: 348, baseType: !2284, size: 32768, offset: 512)
!2284 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2279, line: 304, size: 32768, elements: !2285)
!2285 = !{!2286, !2301, !2340, !2390, !2403}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2284, file: !2279, line: 305, baseType: !2287, size: 896)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2279, line: 12, size: 896, elements: !2288)
!2288 = !{!2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2300}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2287, file: !2279, line: 13, baseType: !296, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2287, file: !2279, line: 14, baseType: !296, size: 32, offset: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2287, file: !2279, line: 15, baseType: !296, size: 32, offset: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2287, file: !2279, line: 16, baseType: !296, size: 32, offset: 96)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2287, file: !2279, line: 17, baseType: !296, size: 32, offset: 128)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2287, file: !2279, line: 18, baseType: !296, size: 32, offset: 160)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2287, file: !2279, line: 19, baseType: !296, size: 32, offset: 192)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2287, file: !2279, line: 22, baseType: !2297, size: 640, offset: 224)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 640, elements: !2298)
!2298 = !{!2299}
!2299 = !DISubrange(count: 20)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2287, file: !2279, line: 25, baseType: !296, size: 32, offset: 864)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2284, file: !2279, line: 306, baseType: !2302, size: 4096, align: 128)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2279, line: 34, size: 4096, align: 128, elements: !2303)
!2303 = !{!2304, !2305, !2306, !2307, !2308, !2323, !2324, !2325, !2329, !2331, !2335}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2302, file: !2279, line: 35, baseType: !956, size: 16)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2302, file: !2279, line: 36, baseType: !956, size: 16, offset: 16)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2302, file: !2279, line: 37, baseType: !956, size: 16, offset: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2302, file: !2279, line: 38, baseType: !956, size: 16, offset: 48)
!2308 = !DIDerivedType(tag: DW_TAG_member, scope: !2302, file: !2279, line: 39, baseType: !2309, size: 128, offset: 64)
!2309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2302, file: !2279, line: 39, size: 128, elements: !2310)
!2310 = !{!2311, !2316}
!2311 = !DIDerivedType(tag: DW_TAG_member, scope: !2309, file: !2279, line: 40, baseType: !2312, size: 128)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2309, file: !2279, line: 40, size: 128, elements: !2313)
!2313 = !{!2314, !2315}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2312, file: !2279, line: 41, baseType: !255, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2312, file: !2279, line: 42, baseType: !255, size: 64, offset: 64)
!2316 = !DIDerivedType(tag: DW_TAG_member, scope: !2309, file: !2279, line: 44, baseType: !2317, size: 128)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2309, file: !2279, line: 44, size: 128, elements: !2318)
!2318 = !{!2319, !2320, !2321, !2322}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2317, file: !2279, line: 45, baseType: !296, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2317, file: !2279, line: 46, baseType: !296, size: 32, offset: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2317, file: !2279, line: 47, baseType: !296, size: 32, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2317, file: !2279, line: 48, baseType: !296, size: 32, offset: 96)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2302, file: !2279, line: 51, baseType: !296, size: 32, offset: 192)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2302, file: !2279, line: 52, baseType: !296, size: 32, offset: 224)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2302, file: !2279, line: 55, baseType: !2326, size: 1024, offset: 256)
!2326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 1024, elements: !2327)
!2327 = !{!2328}
!2328 = !DISubrange(count: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2302, file: !2279, line: 58, baseType: !2330, size: 2048, offset: 1280)
!2330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 2048, elements: !387)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2302, file: !2279, line: 60, baseType: !2332, size: 384, offset: 3328)
!2332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 384, elements: !2333)
!2333 = !{!2334}
!2334 = !DISubrange(count: 12)
!2335 = !DIDerivedType(tag: DW_TAG_member, scope: !2302, file: !2279, line: 62, baseType: !2336, size: 384, offset: 3712)
!2336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2302, file: !2279, line: 62, size: 384, elements: !2337)
!2337 = !{!2338, !2339}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2336, file: !2279, line: 63, baseType: !2332, size: 384)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2336, file: !2279, line: 64, baseType: !2332, size: 384)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2284, file: !2279, line: 307, baseType: !2341, size: 1088)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2279, line: 79, size: 1088, elements: !2342)
!2342 = !{!2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2389}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2341, file: !2279, line: 80, baseType: !296, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2341, file: !2279, line: 81, baseType: !296, size: 32, offset: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2341, file: !2279, line: 82, baseType: !296, size: 32, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2341, file: !2279, line: 83, baseType: !296, size: 32, offset: 96)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2341, file: !2279, line: 84, baseType: !296, size: 32, offset: 128)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2341, file: !2279, line: 85, baseType: !296, size: 32, offset: 160)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2341, file: !2279, line: 86, baseType: !296, size: 32, offset: 192)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2341, file: !2279, line: 88, baseType: !2297, size: 640, offset: 224)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2341, file: !2279, line: 89, baseType: !1446, size: 8, offset: 864)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2341, file: !2279, line: 90, baseType: !1446, size: 8, offset: 872)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2341, file: !2279, line: 91, baseType: !1446, size: 8, offset: 880)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2341, file: !2279, line: 92, baseType: !1446, size: 8, offset: 888)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2341, file: !2279, line: 93, baseType: !1446, size: 8, offset: 896)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2341, file: !2279, line: 94, baseType: !1446, size: 8, offset: 904)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2341, file: !2279, line: 95, baseType: !2358, size: 64, offset: 960)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 64)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2360, line: 11, size: 128, elements: !2361)
!2360 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2361 = !{!2362, !2363}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2359, file: !2360, line: 12, baseType: !105, size: 64)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2359, file: !2360, line: 13, baseType: !2364, size: 64, offset: 64)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2366, line: 56, size: 1344, elements: !2367)
!2366 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2367 = !{!2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2365, file: !2366, line: 61, baseType: !216, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2365, file: !2366, line: 62, baseType: !216, size: 64, offset: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2365, file: !2366, line: 63, baseType: !216, size: 64, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2365, file: !2366, line: 64, baseType: !216, size: 64, offset: 192)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2365, file: !2366, line: 65, baseType: !216, size: 64, offset: 256)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2365, file: !2366, line: 66, baseType: !216, size: 64, offset: 320)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2365, file: !2366, line: 68, baseType: !216, size: 64, offset: 384)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2365, file: !2366, line: 69, baseType: !216, size: 64, offset: 448)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2365, file: !2366, line: 70, baseType: !216, size: 64, offset: 512)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2365, file: !2366, line: 71, baseType: !216, size: 64, offset: 576)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2365, file: !2366, line: 72, baseType: !216, size: 64, offset: 640)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2365, file: !2366, line: 73, baseType: !216, size: 64, offset: 704)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2365, file: !2366, line: 74, baseType: !216, size: 64, offset: 768)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2365, file: !2366, line: 75, baseType: !216, size: 64, offset: 832)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2365, file: !2366, line: 76, baseType: !216, size: 64, offset: 896)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2365, file: !2366, line: 81, baseType: !216, size: 64, offset: 960)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2365, file: !2366, line: 83, baseType: !216, size: 64, offset: 1024)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2365, file: !2366, line: 84, baseType: !216, size: 64, offset: 1088)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2365, file: !2366, line: 85, baseType: !216, size: 64, offset: 1152)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2365, file: !2366, line: 86, baseType: !216, size: 64, offset: 1216)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2365, file: !2366, line: 87, baseType: !216, size: 64, offset: 1280)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2341, file: !2279, line: 96, baseType: !296, size: 32, offset: 1024)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2284, file: !2279, line: 308, baseType: !2391, size: 4608, align: 512)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2279, line: 289, size: 4608, align: 512, elements: !2392)
!2392 = !{!2393, !2394, !2401}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2391, file: !2279, line: 290, baseType: !2302, size: 4096, align: 128)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2391, file: !2279, line: 291, baseType: !2395, size: 512, offset: 4096)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2279, line: 268, size: 512, elements: !2396)
!2396 = !{!2397, !2398, !2399}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2395, file: !2279, line: 269, baseType: !255, size: 64)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2395, file: !2279, line: 270, baseType: !255, size: 64, offset: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2395, file: !2279, line: 271, baseType: !2400, size: 384, offset: 128)
!2400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 384, elements: !1723)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2391, file: !2279, line: 292, baseType: !2402, offset: 4608)
!2402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, elements: !1821)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2284, file: !2279, line: 309, baseType: !2404, size: 32768)
!2404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, size: 32768, elements: !2405)
!2405 = !{!2406}
!2406 = !DISubrange(count: 4096)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1308, file: !820, line: 378, baseType: !2408, size: 64, offset: 64)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1304, file: !820, line: 384, baseType: !1600, size: 192, offset: 192)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1075, file: !820, line: 500, baseType: !341, offset: 6656)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1075, file: !820, line: 501, baseType: !2412, size: 64, offset: 6656)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !820, line: 387, flags: DIFlagFwdDecl)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1075, file: !820, line: 516, baseType: !1811, size: 64, offset: 6720)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1075, file: !820, line: 519, baseType: !457, size: 64, offset: 6784)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1075, file: !820, line: 521, baseType: !2417, size: 64, offset: 6848)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2418 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !820, line: 521, flags: DIFlagFwdDecl)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1075, file: !820, line: 545, baseType: !844, size: 32, offset: 6912)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1075, file: !820, line: 548, baseType: !587, size: 8, offset: 6944)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1075, file: !820, line: 550, baseType: !2422, offset: 6952)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2423, line: 142, elements: !355)
!2423 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1075, file: !820, line: 554, baseType: !2056, size: 256, offset: 6976)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1075, file: !820, line: 557, baseType: !296, size: 32, offset: 7232)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1072, file: !820, line: 565, baseType: !2427, offset: 7296)
!2427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, elements: !2428)
!2428 = !{!2429}
!2429 = !DISubrange(count: -1)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1068, file: !820, line: 151, baseType: !844, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1061, file: !820, line: 156, baseType: !341, offset: 256)
!2432 = !DIDerivedType(tag: DW_TAG_member, scope: !824, file: !820, line: 159, baseType: !2433, size: 128)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !824, file: !820, line: 159, size: 128, elements: !2434)
!2434 = !{!2435, !2499}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2433, file: !820, line: 161, baseType: !2436, size: 64)
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 64)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2438)
!2438 = !{!2439, !2449, !2470, !2471, !2472, !2473, !2474, !2486, !2487, !2488}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2437, file: !31, line: 111, baseType: !2440, size: 384)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2441)
!2441 = !{!2442, !2444, !2445, !2446, !2447, !2448}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2440, file: !31, line: 20, baseType: !2443, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !216)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2440, file: !31, line: 21, baseType: !2443, size: 64, offset: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2440, file: !31, line: 22, baseType: !2443, size: 64, offset: 128)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2440, file: !31, line: 23, baseType: !216, size: 64, offset: 192)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2440, file: !31, line: 24, baseType: !216, size: 64, offset: 256)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2440, file: !31, line: 25, baseType: !216, size: 64, offset: 320)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2437, file: !31, line: 112, baseType: !2450, size: 64, offset: 384)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2452, line: 105, size: 128, elements: !2453)
!2452 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2453 = !{!2454, !2455}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2451, file: !2452, line: 110, baseType: !216, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2451, file: !2452, line: 118, baseType: !2456, size: 64, offset: 64)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2452, line: 95, size: 448, elements: !2458)
!2458 = !{!2459, !2460, !2465, !2466, !2467, !2468, !2469}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2457, file: !2452, line: 96, baseType: !868, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2457, file: !2452, line: 97, baseType: !2461, size: 64, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2452, line: 60, baseType: !2463)
!2463 = !DISubroutineType(types: !2464)
!2464 = !{null, !2450}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2457, file: !2452, line: 98, baseType: !2461, size: 64, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2457, file: !2452, line: 99, baseType: !587, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2457, file: !2452, line: 100, baseType: !587, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2457, file: !2452, line: 101, baseType: !470, size: 128, align: 64, offset: 256)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2457, file: !2452, line: 102, baseType: !2450, size: 64, offset: 384)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2437, file: !31, line: 113, baseType: !2451, size: 128, offset: 448)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2437, file: !31, line: 114, baseType: !1600, size: 192, offset: 576)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2437, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2437, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2437, file: !31, line: 117, baseType: !2475, size: 64, offset: 832)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2477)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2478)
!2478 = !{!2479, !2480, !2484, !2485}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2477, file: !31, line: 73, baseType: !937, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2477, file: !31, line: 78, baseType: !2481, size: 64, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{null, !2436}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2477, file: !31, line: 83, baseType: !2481, size: 64, offset: 128)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2477, file: !31, line: 89, baseType: !1124, size: 64, offset: 192)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2437, file: !31, line: 118, baseType: !217, size: 64, offset: 896)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2437, file: !31, line: 119, baseType: !282, size: 32, offset: 960)
!2488 = !DIDerivedType(tag: DW_TAG_member, scope: !2437, file: !31, line: 120, baseType: !2489, size: 128, offset: 1024)
!2489 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2437, file: !31, line: 120, size: 128, elements: !2490)
!2490 = !{!2491, !2497}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2489, file: !31, line: 121, baseType: !2492, size: 128)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2493, line: 6, size: 128, elements: !2494)
!2493 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2494 = !{!2495, !2496}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2492, file: !2493, line: 7, baseType: !255, size: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2492, file: !2493, line: 8, baseType: !255, size: 64, offset: 64)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2489, file: !31, line: 122, baseType: !2498)
!2498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2492, elements: !1821)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2433, file: !820, line: 162, baseType: !217, size: 64, offset: 64)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !824, file: !820, line: 176, baseType: !470, size: 128, align: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, scope: !819, file: !820, line: 179, baseType: !2502, size: 32, offset: 384)
!2502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !819, file: !820, line: 179, size: 32, elements: !2503)
!2503 = !{!2504, !2505, !2506, !2507}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2502, file: !820, line: 184, baseType: !844, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2502, file: !820, line: 192, baseType: !7, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2502, file: !820, line: 194, baseType: !7, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2502, file: !820, line: 195, baseType: !282, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !819, file: !820, line: 199, baseType: !844, size: 32, offset: 416)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !754, file: !44, line: 1964, baseType: !2510, size: 64, offset: 1344)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{!105, !696, !2513}
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2515, line: 12, size: 256, elements: !2516)
!2515 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2516 = !{!2517, !2518, !2519, !2520, !2521}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2514, file: !2515, line: 13, baseType: !218, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2514, file: !2515, line: 16, baseType: !282, size: 32, offset: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2514, file: !2515, line: 23, baseType: !216, size: 64, offset: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2514, file: !2515, line: 30, baseType: !216, size: 64, offset: 128)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2514, file: !2515, line: 33, baseType: !2522, size: 64, offset: 192)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !820, line: 27, flags: DIFlagFwdDecl)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !754, file: !44, line: 1966, baseType: !2510, size: 64, offset: 1408)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !697, file: !44, line: 1424, baseType: !2526, size: 64, offset: 448)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 64)
!2527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2528)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2529)
!2529 = !{!2530, !2576, !2580, !2584, !2585, !2586, !2587, !2588, !2593, !2598, !2602}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2528, file: !38, line: 323, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{!282, !2534}
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2536)
!2536 = !{!2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2561, !2562, !2563}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2535, file: !38, line: 295, baseType: !736, size: 128)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2535, file: !38, line: 296, baseType: !223, size: 128, offset: 128)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2535, file: !38, line: 297, baseType: !223, size: 128, offset: 256)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2535, file: !38, line: 298, baseType: !223, size: 128, offset: 384)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2535, file: !38, line: 299, baseType: !1268, size: 192, offset: 512)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2535, file: !38, line: 300, baseType: !341, offset: 704)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2535, file: !38, line: 301, baseType: !844, size: 32, offset: 704)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2535, file: !38, line: 302, baseType: !696, size: 64, offset: 768)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2535, file: !38, line: 303, baseType: !2546, size: 64, offset: 832)
!2546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2547)
!2547 = !{!2548, !2560}
!2548 = !DIDerivedType(tag: DW_TAG_member, scope: !2546, file: !38, line: 69, baseType: !2549, size: 32)
!2549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2546, file: !38, line: 69, size: 32, elements: !2550)
!2550 = !{!2551, !2552, !2553}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2549, file: !38, line: 70, baseType: !532, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2549, file: !38, line: 71, baseType: !540, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2549, file: !38, line: 72, baseType: !2554, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2555, line: 24, baseType: !2556)
!2555 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2555, line: 22, size: 32, elements: !2557)
!2557 = !{!2558}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2556, file: !2555, line: 23, baseType: !2559, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2555, line: 20, baseType: !538)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2546, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2535, file: !38, line: 304, baseType: !628, size: 64, offset: 896)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2535, file: !38, line: 305, baseType: !216, size: 64, offset: 960)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2535, file: !38, line: 306, baseType: !2564, size: 576, offset: 1024)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2565)
!2565 = !{!2566, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2564, file: !38, line: 206, baseType: !2567, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !630)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2564, file: !38, line: 207, baseType: !2567, size: 64, offset: 64)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2564, file: !38, line: 208, baseType: !2567, size: 64, offset: 128)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2564, file: !38, line: 209, baseType: !2567, size: 64, offset: 192)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2564, file: !38, line: 210, baseType: !2567, size: 64, offset: 256)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2564, file: !38, line: 211, baseType: !2567, size: 64, offset: 320)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2564, file: !38, line: 212, baseType: !2567, size: 64, offset: 384)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2564, file: !38, line: 213, baseType: !636, size: 64, offset: 448)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2564, file: !38, line: 214, baseType: !636, size: 64, offset: 512)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2528, file: !38, line: 324, baseType: !2577, size: 64, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!2534, !696, !282}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2528, file: !38, line: 325, baseType: !2581, size: 64, offset: 128)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2582 = !DISubroutineType(types: !2583)
!2583 = !{null, !2534}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2528, file: !38, line: 326, baseType: !2531, size: 64, offset: 192)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2528, file: !38, line: 327, baseType: !2531, size: 64, offset: 256)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2528, file: !38, line: 328, baseType: !2531, size: 64, offset: 320)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2528, file: !38, line: 329, baseType: !782, size: 64, offset: 384)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2528, file: !38, line: 332, baseType: !2589, size: 64, offset: 448)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!2592, !526}
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2528, file: !38, line: 333, baseType: !2594, size: 64, offset: 512)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{!282, !526, !2597}
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2528, file: !38, line: 335, baseType: !2599, size: 64, offset: 576)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 64)
!2600 = !DISubroutineType(types: !2601)
!2601 = !{!282, !526, !2592}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2528, file: !38, line: 337, baseType: !2603, size: 64, offset: 640)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{!282, !696, !2606}
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 64)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !697, file: !44, line: 1425, baseType: !2608, size: 64, offset: 512)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2610)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2611)
!2611 = !{!2612, !2616, !2617, !2621, !2622, !2623, !2638, !2661, !2665, !2666, !2689}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2610, file: !38, line: 429, baseType: !2613, size: 64)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{!282, !696, !282, !282, !646}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2610, file: !38, line: 430, baseType: !782, size: 64, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2610, file: !38, line: 431, baseType: !2618, size: 64, offset: 128)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{!282, !696, !7}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2610, file: !38, line: 432, baseType: !2618, size: 64, offset: 192)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2610, file: !38, line: 433, baseType: !782, size: 64, offset: 256)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2610, file: !38, line: 434, baseType: !2624, size: 64, offset: 320)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 64)
!2625 = !DISubroutineType(types: !2626)
!2626 = !{!282, !696, !282, !2627}
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2629)
!2629 = !{!2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2628, file: !38, line: 416, baseType: !282, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2628, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2628, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2628, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2628, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2628, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2628, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2628, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2610, file: !38, line: 435, baseType: !2639, size: 64, offset: 384)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = !DISubroutineType(types: !2641)
!2641 = !{!282, !696, !2546, !2642}
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2644)
!2644 = !{!2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2643, file: !38, line: 344, baseType: !282, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2643, file: !38, line: 345, baseType: !255, size: 64, offset: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2643, file: !38, line: 346, baseType: !255, size: 64, offset: 128)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2643, file: !38, line: 347, baseType: !255, size: 64, offset: 192)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2643, file: !38, line: 348, baseType: !255, size: 64, offset: 256)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2643, file: !38, line: 349, baseType: !255, size: 64, offset: 320)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2643, file: !38, line: 350, baseType: !255, size: 64, offset: 384)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2643, file: !38, line: 351, baseType: !874, size: 64, offset: 448)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2643, file: !38, line: 353, baseType: !874, size: 64, offset: 512)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2643, file: !38, line: 354, baseType: !282, size: 32, offset: 576)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2643, file: !38, line: 355, baseType: !282, size: 32, offset: 608)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2643, file: !38, line: 356, baseType: !255, size: 64, offset: 640)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2643, file: !38, line: 357, baseType: !255, size: 64, offset: 704)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2643, file: !38, line: 358, baseType: !255, size: 64, offset: 768)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2643, file: !38, line: 359, baseType: !874, size: 64, offset: 832)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2643, file: !38, line: 360, baseType: !282, size: 32, offset: 896)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2610, file: !38, line: 436, baseType: !2662, size: 64, offset: 448)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!282, !696, !2606, !2642}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2610, file: !38, line: 438, baseType: !2639, size: 64, offset: 512)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2610, file: !38, line: 439, baseType: !2667, size: 64, offset: 576)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64)
!2668 = !DISubroutineType(types: !2669)
!2669 = !{!282, !696, !2670}
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2672)
!2672 = !{!2673, !2674}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2671, file: !38, line: 410, baseType: !7, size: 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2671, file: !38, line: 411, baseType: !2675, size: 1344, offset: 64)
!2675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2676, size: 1344, elements: !383)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2677)
!2677 = !{!2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2688}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2676, file: !38, line: 396, baseType: !7, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2676, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2676, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2676, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2676, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2676, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2676, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2676, file: !38, line: 404, baseType: !259, size: 64, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2676, file: !38, line: 405, baseType: !2687, size: 64, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !219, line: 126, baseType: !255)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2676, file: !38, line: 406, baseType: !2687, size: 64, offset: 384)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2610, file: !38, line: 440, baseType: !2618, size: 64, offset: 640)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !697, file: !44, line: 1426, baseType: !2691, size: 64, offset: 576)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2693)
!2693 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !697, file: !44, line: 1427, baseType: !216, size: 64, offset: 640)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !697, file: !44, line: 1428, baseType: !216, size: 64, offset: 704)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !697, file: !44, line: 1429, baseType: !216, size: 64, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !697, file: !44, line: 1430, baseType: !487, size: 64, offset: 832)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !697, file: !44, line: 1431, baseType: !864, size: 256, offset: 896)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !697, file: !44, line: 1432, baseType: !282, size: 32, offset: 1152)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !697, file: !44, line: 1433, baseType: !844, size: 32, offset: 1184)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !697, file: !44, line: 1437, baseType: !2702, size: 64, offset: 1216)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2705)
!2705 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !697, file: !44, line: 1449, baseType: !2707, size: 64, offset: 1280)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !503, line: 34, size: 64, elements: !2708)
!2708 = !{!2709}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2707, file: !503, line: 35, baseType: !506, size: 64)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !697, file: !44, line: 1450, baseType: !223, size: 128, offset: 1344)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !697, file: !44, line: 1451, baseType: !2712, size: 64, offset: 1472)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !697, file: !44, line: 1452, baseType: !2022, size: 64, offset: 1536)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !697, file: !44, line: 1453, baseType: !2716, size: 64, offset: 1600)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 64)
!2717 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !697, file: !44, line: 1454, baseType: !736, size: 128, offset: 1664)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !697, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !697, file: !44, line: 1456, baseType: !2721, size: 2432, offset: 1856)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2722)
!2722 = !{!2723, !2724, !2725, !2727, !2759}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2721, file: !38, line: 519, baseType: !7, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2721, file: !38, line: 520, baseType: !864, size: 256, offset: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2721, file: !38, line: 521, baseType: !2726, size: 192, offset: 320)
!2726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !526, size: 192, elements: !383)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2721, file: !38, line: 522, baseType: !2728, size: 1728, offset: 512)
!2728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2729, size: 1728, elements: !383)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2730)
!2730 = !{!2731, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2729, file: !38, line: 223, baseType: !2732, size: 64)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 64)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2734)
!2734 = !{!2735, !2736, !2749, !2750}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2733, file: !38, line: 444, baseType: !282, size: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2733, file: !38, line: 445, baseType: !2737, size: 64, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2739)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2740)
!2740 = !{!2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2739, file: !38, line: 311, baseType: !782, size: 64)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2739, file: !38, line: 312, baseType: !782, size: 64, offset: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2739, file: !38, line: 313, baseType: !782, size: 64, offset: 128)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2739, file: !38, line: 314, baseType: !782, size: 64, offset: 192)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2739, file: !38, line: 315, baseType: !2531, size: 64, offset: 256)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2739, file: !38, line: 316, baseType: !2531, size: 64, offset: 320)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2739, file: !38, line: 317, baseType: !2531, size: 64, offset: 384)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2739, file: !38, line: 318, baseType: !2603, size: 64, offset: 448)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2733, file: !38, line: 446, baseType: !213, size: 64, offset: 128)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2733, file: !38, line: 447, baseType: !2732, size: 64, offset: 192)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2729, file: !38, line: 224, baseType: !282, size: 32, offset: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2729, file: !38, line: 226, baseType: !223, size: 128, offset: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2729, file: !38, line: 227, baseType: !216, size: 64, offset: 256)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2729, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2729, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2729, file: !38, line: 230, baseType: !2567, size: 64, offset: 384)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2729, file: !38, line: 231, baseType: !2567, size: 64, offset: 448)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2729, file: !38, line: 232, baseType: !217, size: 64, offset: 512)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2721, file: !38, line: 523, baseType: !2760, size: 192, offset: 2240)
!2760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2737, size: 192, elements: !383)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !697, file: !44, line: 1458, baseType: !2762, size: 2112, offset: 4288)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2763)
!2763 = !{!2764, !2765, !2766}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2762, file: !44, line: 1411, baseType: !282, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2762, file: !44, line: 1412, baseType: !1579, size: 128, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2762, file: !44, line: 1413, baseType: !2767, size: 1920, offset: 192)
!2767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2768, size: 1920, elements: !383)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2769, line: 12, size: 640, elements: !2770)
!2769 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2770 = !{!2771, !2779, !2781, !2786, !2787}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2768, file: !2769, line: 13, baseType: !2772, size: 320)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2773, line: 17, size: 320, elements: !2774)
!2773 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2774 = !{!2775, !2776, !2777, !2778}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2772, file: !2773, line: 18, baseType: !282, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2772, file: !2773, line: 19, baseType: !282, size: 32, offset: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2772, file: !2773, line: 20, baseType: !1579, size: 128, offset: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2772, file: !2773, line: 22, baseType: !470, size: 128, align: 64, offset: 192)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2768, file: !2769, line: 14, baseType: !2780, size: 64, offset: 320)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2768, file: !2769, line: 15, baseType: !2782, size: 64, offset: 384)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2783, line: 16, size: 64, elements: !2784)
!2783 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2784 = !{!2785}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2782, file: !2783, line: 17, baseType: !1311, size: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2768, file: !2769, line: 16, baseType: !1579, size: 128, offset: 448)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2768, file: !2769, line: 17, baseType: !844, size: 32, offset: 576)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !697, file: !44, line: 1465, baseType: !217, size: 64, offset: 6400)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !697, file: !44, line: 1468, baseType: !296, size: 32, offset: 6464)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !697, file: !44, line: 1470, baseType: !636, size: 64, offset: 6528)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !697, file: !44, line: 1471, baseType: !636, size: 64, offset: 6592)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !697, file: !44, line: 1473, baseType: !297, size: 32, offset: 6656)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !697, file: !44, line: 1474, baseType: !2794, size: 64, offset: 6720)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 64)
!2795 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !697, file: !44, line: 1477, baseType: !2797, size: 256, offset: 6784)
!2797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 256, elements: !2327)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !697, file: !44, line: 1478, baseType: !2799, size: 128, offset: 7040)
!2799 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2800, line: 18, baseType: !2801)
!2800 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2800, line: 16, size: 128, elements: !2802)
!2802 = !{!2803}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2801, file: !2800, line: 17, baseType: !2804, size: 128)
!2804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 128, elements: !1833)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !697, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !697, file: !44, line: 1481, baseType: !2807, size: 32, offset: 7200)
!2807 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !219, line: 150, baseType: !7)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !697, file: !44, line: 1487, baseType: !1268, size: 192, offset: 7232)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !697, file: !44, line: 1493, baseType: !262, size: 64, offset: 7424)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !697, file: !44, line: 1495, baseType: !2811, size: 64, offset: 7488)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2813)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !485, line: 135, size: 1024, align: 512, elements: !2814)
!2814 = !{!2815, !2819, !2820, !2827, !2833, !2837, !2841, !2845, !2846, !2850, !2854, !2859, !2863}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2813, file: !485, line: 136, baseType: !2816, size: 64)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!282, !487, !7}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2813, file: !485, line: 137, baseType: !2816, size: 64, offset: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2813, file: !485, line: 138, baseType: !2821, size: 64, offset: 128)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 64)
!2822 = !DISubroutineType(types: !2823)
!2823 = !{!282, !2824, !2826}
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !488)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2813, file: !485, line: 139, baseType: !2828, size: 64, offset: 192)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = !DISubroutineType(types: !2830)
!2830 = !{!282, !2824, !7, !262, !2831}
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2813, file: !485, line: 141, baseType: !2834, size: 64, offset: 256)
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2835, size: 64)
!2835 = !DISubroutineType(types: !2836)
!2836 = !{!282, !2824}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2813, file: !485, line: 142, baseType: !2838, size: 64, offset: 320)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 64)
!2839 = !DISubroutineType(types: !2840)
!2840 = !{!282, !487}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2813, file: !485, line: 143, baseType: !2842, size: 64, offset: 384)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{null, !487}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2813, file: !485, line: 144, baseType: !2842, size: 64, offset: 448)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2813, file: !485, line: 145, baseType: !2847, size: 64, offset: 512)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{null, !487, !526}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2813, file: !485, line: 146, baseType: !2851, size: 64, offset: 576)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2852 = !DISubroutineType(types: !2853)
!2853 = !{!382, !487, !382, !282}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2813, file: !485, line: 147, baseType: !2855, size: 64, offset: 640)
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = !DISubroutineType(types: !2857)
!2857 = !{!483, !2858}
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2813, file: !485, line: 148, baseType: !2860, size: 64, offset: 704)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!282, !646, !587}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2813, file: !485, line: 149, baseType: !2864, size: 64, offset: 768)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!487, !487, !2867}
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !527)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !697, file: !44, line: 1500, baseType: !282, size: 32, offset: 7552)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !697, file: !44, line: 1502, baseType: !2871, size: 448, offset: 7616)
!2871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2515, line: 60, size: 448, elements: !2872)
!2872 = !{!2873, !2878, !2879, !2880, !2881, !2882, !2883}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2871, file: !2515, line: 61, baseType: !2874, size: 64)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 64)
!2875 = !DISubroutineType(types: !2876)
!2876 = !{!216, !2877, !2513}
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2871, file: !2515, line: 63, baseType: !2874, size: 64, offset: 64)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2871, file: !2515, line: 66, baseType: !105, size: 64, offset: 128)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2871, file: !2515, line: 67, baseType: !282, size: 32, offset: 192)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2871, file: !2515, line: 68, baseType: !7, size: 32, offset: 224)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2871, file: !2515, line: 71, baseType: !223, size: 128, offset: 256)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2871, file: !2515, line: 77, baseType: !2884, size: 64, offset: 384)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !697, file: !44, line: 1505, baseType: !868, size: 64, offset: 8064)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !697, file: !44, line: 1508, baseType: !868, size: 64, offset: 8128)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !697, file: !44, line: 1511, baseType: !282, size: 32, offset: 8192)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !697, file: !44, line: 1514, baseType: !1006, size: 32, offset: 8224)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !697, file: !44, line: 1517, baseType: !2890, size: 64, offset: 8256)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !104, line: 18, flags: DIFlagFwdDecl)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !697, file: !44, line: 1518, baseType: !732, size: 64, offset: 8320)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !697, file: !44, line: 1525, baseType: !1811, size: 64, offset: 8384)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !697, file: !44, line: 1532, baseType: !2895, size: 64, offset: 8448)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2896, line: 52, size: 64, elements: !2897)
!2896 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2897 = !{!2898}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2895, file: !2896, line: 53, baseType: !2899, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!2900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2896, line: 40, size: 256, elements: !2901)
!2901 = !{!2902, !2903, !2908}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2900, file: !2896, line: 42, baseType: !341)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2900, file: !2896, line: 44, baseType: !2904, size: 192)
!2904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2896, line: 28, size: 192, elements: !2905)
!2905 = !{!2906, !2907}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2904, file: !2896, line: 29, baseType: !223, size: 128)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2904, file: !2896, line: 31, baseType: !105, size: 64, offset: 128)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2900, file: !2896, line: 49, baseType: !105, size: 64, offset: 192)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !697, file: !44, line: 1533, baseType: !2895, size: 64, offset: 8512)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !697, file: !44, line: 1534, baseType: !470, size: 128, align: 64, offset: 8576)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !697, file: !44, line: 1535, baseType: !2056, size: 256, offset: 8704)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !697, file: !44, line: 1537, baseType: !1268, size: 192, offset: 8960)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !697, file: !44, line: 1542, baseType: !282, size: 32, offset: 9152)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !697, file: !44, line: 1545, baseType: !341, offset: 9184)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !697, file: !44, line: 1546, baseType: !223, size: 128, offset: 9216)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !697, file: !44, line: 1548, baseType: !341, offset: 9344)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !697, file: !44, line: 1549, baseType: !223, size: 128, offset: 9344)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !527, file: !44, line: 624, baseType: !831, size: 64, offset: 256)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !527, file: !44, line: 631, baseType: !216, size: 64, offset: 320)
!2920 = !DIDerivedType(tag: DW_TAG_member, scope: !527, file: !44, line: 639, baseType: !2921, size: 32, offset: 384)
!2921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !527, file: !44, line: 639, size: 32, elements: !2922)
!2922 = !{!2923, !2925}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2921, file: !44, line: 640, baseType: !2924, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2921, file: !44, line: 641, baseType: !7, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !527, file: !44, line: 643, baseType: !610, size: 32, offset: 416)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !527, file: !44, line: 644, baseType: !628, size: 64, offset: 448)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !527, file: !44, line: 645, baseType: !632, size: 128, offset: 512)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !527, file: !44, line: 646, baseType: !632, size: 128, offset: 640)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !527, file: !44, line: 647, baseType: !632, size: 128, offset: 768)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !527, file: !44, line: 648, baseType: !341, offset: 896)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !527, file: !44, line: 649, baseType: !320, size: 16, offset: 896)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !527, file: !44, line: 650, baseType: !1446, size: 8, offset: 912)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !527, file: !44, line: 651, baseType: !1446, size: 8, offset: 920)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !527, file: !44, line: 652, baseType: !2687, size: 64, offset: 960)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !527, file: !44, line: 659, baseType: !216, size: 64, offset: 1024)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !527, file: !44, line: 660, baseType: !864, size: 256, offset: 1088)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !527, file: !44, line: 662, baseType: !216, size: 64, offset: 1344)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !527, file: !44, line: 663, baseType: !216, size: 64, offset: 1408)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !527, file: !44, line: 665, baseType: !736, size: 128, offset: 1472)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !527, file: !44, line: 666, baseType: !223, size: 128, offset: 1600)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !527, file: !44, line: 675, baseType: !223, size: 128, offset: 1728)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !527, file: !44, line: 676, baseType: !223, size: 128, offset: 1856)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !527, file: !44, line: 677, baseType: !223, size: 128, offset: 1984)
!2945 = !DIDerivedType(tag: DW_TAG_member, scope: !527, file: !44, line: 678, baseType: !2946, size: 128, offset: 2112)
!2946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !527, file: !44, line: 678, size: 128, elements: !2947)
!2947 = !{!2948, !2949}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2946, file: !44, line: 679, baseType: !732, size: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2946, file: !44, line: 680, baseType: !470, size: 128, align: 64)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !527, file: !44, line: 682, baseType: !870, size: 64, offset: 2240)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !527, file: !44, line: 683, baseType: !870, size: 64, offset: 2304)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !527, file: !44, line: 684, baseType: !844, size: 32, offset: 2368)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !527, file: !44, line: 685, baseType: !844, size: 32, offset: 2400)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !527, file: !44, line: 686, baseType: !844, size: 32, offset: 2432)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !527, file: !44, line: 688, baseType: !844, size: 32, offset: 2464)
!2956 = !DIDerivedType(tag: DW_TAG_member, scope: !527, file: !44, line: 690, baseType: !2957, size: 64, offset: 2496)
!2957 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !527, file: !44, line: 690, size: 64, elements: !2958)
!2958 = !{!2959, !3191}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2957, file: !44, line: 691, baseType: !2960, size: 64)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2962)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !2963)
!2963 = !{!2964, !2965, !2969, !2974, !2978, !2979, !2980, !2984, !2997, !2998, !3015, !3019, !3020, !3024, !3025, !3029, !3034, !3035, !3039, !3043, !3151, !3155, !3156, !3160, !3161, !3165, !3169, !3174, !3178, !3182, !3186, !3190}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2962, file: !44, line: 1823, baseType: !213, size: 64)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2962, file: !44, line: 1824, baseType: !2966, size: 64, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = !DISubroutineType(types: !2968)
!2968 = !{!628, !457, !628, !282}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2962, file: !44, line: 1825, baseType: !2970, size: 64, offset: 128)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!2971 = !DISubroutineType(types: !2972)
!2972 = !{!413, !457, !382, !427, !2973}
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2962, file: !44, line: 1826, baseType: !2975, size: 64, offset: 192)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DISubroutineType(types: !2977)
!2977 = !{!413, !457, !262, !427, !2973}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2962, file: !44, line: 1827, baseType: !941, size: 64, offset: 256)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2962, file: !44, line: 1828, baseType: !941, size: 64, offset: 320)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2962, file: !44, line: 1829, baseType: !2981, size: 64, offset: 384)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = !DISubroutineType(types: !2983)
!2983 = !{!282, !944, !587}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2962, file: !44, line: 1830, baseType: !2985, size: 64, offset: 448)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = !DISubroutineType(types: !2987)
!2987 = !{!282, !457, !2988}
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !2990)
!2990 = !{!2991, !2996}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2989, file: !44, line: 1777, baseType: !2992, size: 64)
!2992 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !2993)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!282, !2988, !262, !282, !628, !255, !7}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2989, file: !44, line: 1778, baseType: !628, size: 64, offset: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2962, file: !44, line: 1831, baseType: !2985, size: 64, offset: 512)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2962, file: !44, line: 1832, baseType: !2999, size: 64, offset: 576)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = !DISubroutineType(types: !3001)
!3001 = !{!3002, !457, !3004}
!3002 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3003, line: 52, baseType: !7)
!3003 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !3006, line: 43, size: 128, elements: !3007)
!3006 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!3007 = !{!3008, !3014}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !3005, file: !3006, line: 44, baseType: !3009, size: 64)
!3009 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !3006, line: 37, baseType: !3010)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DISubroutineType(types: !3012)
!3012 = !{null, !457, !3013, !3004}
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !3005, file: !3006, line: 45, baseType: !3002, size: 32, offset: 64)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2962, file: !44, line: 1833, baseType: !3016, size: 64, offset: 640)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = !DISubroutineType(types: !3018)
!3018 = !{!105, !457, !7, !216}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2962, file: !44, line: 1834, baseType: !3016, size: 64, offset: 704)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2962, file: !44, line: 1835, baseType: !3021, size: 64, offset: 768)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{!282, !457, !1078}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2962, file: !44, line: 1836, baseType: !216, size: 64, offset: 832)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2962, file: !44, line: 1837, baseType: !3026, size: 64, offset: 896)
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3027 = !DISubroutineType(types: !3028)
!3028 = !{!282, !526, !457}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2962, file: !44, line: 1838, baseType: !3030, size: 64, offset: 960)
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64)
!3031 = !DISubroutineType(types: !3032)
!3032 = !{!282, !457, !3033}
!3033 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !217)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2962, file: !44, line: 1839, baseType: !3026, size: 64, offset: 1024)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2962, file: !44, line: 1840, baseType: !3036, size: 64, offset: 1088)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{!282, !457, !628, !628, !282}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2962, file: !44, line: 1841, baseType: !3040, size: 64, offset: 1152)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 64)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{!282, !282, !457, !282}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2962, file: !44, line: 1842, baseType: !3044, size: 64, offset: 1216)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DISubroutineType(types: !3046)
!3046 = !{!282, !457, !282, !3047}
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !3049)
!3049 = !{!3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3081, !3082, !3083, !3096, !3127}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3048, file: !44, line: 1063, baseType: !3047, size: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3048, file: !44, line: 1064, baseType: !223, size: 128, offset: 64)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3048, file: !44, line: 1065, baseType: !736, size: 128, offset: 192)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3048, file: !44, line: 1066, baseType: !223, size: 128, offset: 320)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3048, file: !44, line: 1069, baseType: !223, size: 128, offset: 448)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3048, file: !44, line: 1072, baseType: !3033, size: 64, offset: 576)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3048, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3048, file: !44, line: 1074, baseType: !311, size: 8, offset: 672)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3048, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3048, file: !44, line: 1076, baseType: !282, size: 32, offset: 736)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3048, file: !44, line: 1077, baseType: !1579, size: 128, offset: 768)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3048, file: !44, line: 1078, baseType: !457, size: 64, offset: 896)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3048, file: !44, line: 1079, baseType: !628, size: 64, offset: 960)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3048, file: !44, line: 1080, baseType: !628, size: 64, offset: 1024)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3048, file: !44, line: 1082, baseType: !3065, size: 64, offset: 1088)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 64)
!3066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3067)
!3067 = !{!3068, !3076, !3077, !3078, !3079, !3080}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3066, file: !44, line: 1315, baseType: !3069)
!3069 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3070, line: 20, baseType: !3071)
!3070 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3070, line: 11, elements: !3072)
!3072 = !{!3073}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3071, file: !3070, line: 12, baseType: !3074)
!3074 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !353, line: 33, baseType: !3075)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !353, line: 31, elements: !355)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3066, file: !44, line: 1316, baseType: !282, size: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3066, file: !44, line: 1317, baseType: !282, size: 32, offset: 32)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3066, file: !44, line: 1318, baseType: !3065, size: 64, offset: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3066, file: !44, line: 1319, baseType: !457, size: 64, offset: 128)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3066, file: !44, line: 1320, baseType: !470, size: 128, align: 64, offset: 192)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3048, file: !44, line: 1084, baseType: !216, size: 64, offset: 1152)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3048, file: !44, line: 1085, baseType: !216, size: 64, offset: 1216)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3048, file: !44, line: 1087, baseType: !3084, size: 64, offset: 1280)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3086)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3087)
!3087 = !{!3088, !3092}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3086, file: !44, line: 1012, baseType: !3089, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{null, !3047, !3047}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3086, file: !44, line: 1013, baseType: !3093, size: 64, offset: 64)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = !DISubroutineType(types: !3095)
!3095 = !{null, !3047}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3048, file: !44, line: 1088, baseType: !3097, size: 64, offset: 1344)
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3099)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3100)
!3100 = !{!3101, !3105, !3109, !3110, !3114, !3118, !3122, !3126}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3099, file: !44, line: 1017, baseType: !3102, size: 64)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!3033, !3033}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3099, file: !44, line: 1018, baseType: !3106, size: 64, offset: 64)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 64)
!3107 = !DISubroutineType(types: !3108)
!3108 = !{null, !3033}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3099, file: !44, line: 1019, baseType: !3093, size: 64, offset: 128)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3099, file: !44, line: 1020, baseType: !3111, size: 64, offset: 192)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{!282, !3047, !282}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3099, file: !44, line: 1021, baseType: !3115, size: 64, offset: 256)
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 64)
!3116 = !DISubroutineType(types: !3117)
!3117 = !{!587, !3047}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3099, file: !44, line: 1022, baseType: !3119, size: 64, offset: 320)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{!282, !3047, !282, !222}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3099, file: !44, line: 1023, baseType: !3123, size: 64, offset: 384)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 64)
!3124 = !DISubroutineType(types: !3125)
!3125 = !{null, !3047, !918}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3099, file: !44, line: 1024, baseType: !3115, size: 64, offset: 448)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3048, file: !44, line: 1097, baseType: !3128, size: 256, offset: 1408)
!3128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3048, file: !44, line: 1089, size: 256, elements: !3129)
!3129 = !{!3130, !3139, !3145}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3128, file: !44, line: 1090, baseType: !3131, size: 256)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3132, line: 10, size: 256, elements: !3133)
!3132 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3133 = !{!3134, !3135, !3138}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3131, file: !3132, line: 11, baseType: !296, size: 32)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3131, file: !3132, line: 12, baseType: !3136, size: 64, offset: 64)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3132, line: 5, flags: DIFlagFwdDecl)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3131, file: !3132, line: 13, baseType: !223, size: 128, offset: 128)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3128, file: !44, line: 1091, baseType: !3140, size: 64)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3132, line: 17, size: 64, elements: !3141)
!3141 = !{!3142}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3140, file: !3132, line: 18, baseType: !3143, size: 64)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3132, line: 16, flags: DIFlagFwdDecl)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3128, file: !44, line: 1096, baseType: !3146, size: 192)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3128, file: !44, line: 1092, size: 192, elements: !3147)
!3147 = !{!3148, !3149, !3150}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3146, file: !44, line: 1093, baseType: !223, size: 128)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3146, file: !44, line: 1094, baseType: !282, size: 32, offset: 128)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3146, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2962, file: !44, line: 1843, baseType: !3152, size: 64, offset: 1280)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{!413, !457, !818, !282, !427, !2973, !282}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2962, file: !44, line: 1844, baseType: !1198, size: 64, offset: 1344)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2962, file: !44, line: 1845, baseType: !3157, size: 64, offset: 1408)
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 64)
!3158 = !DISubroutineType(types: !3159)
!3159 = !{!282, !282}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2962, file: !44, line: 1846, baseType: !3044, size: 64, offset: 1472)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2962, file: !44, line: 1847, baseType: !3162, size: 64, offset: 1536)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DISubroutineType(types: !3164)
!3164 = !{!413, !2196, !457, !2973, !427, !7}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2962, file: !44, line: 1848, baseType: !3166, size: 64, offset: 1600)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{!413, !457, !2973, !2196, !427, !7}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2962, file: !44, line: 1849, baseType: !3170, size: 64, offset: 1664)
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!3171 = !DISubroutineType(types: !3172)
!3172 = !{!282, !457, !105, !3173, !918}
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2962, file: !44, line: 1850, baseType: !3175, size: 64, offset: 1728)
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 64)
!3176 = !DISubroutineType(types: !3177)
!3177 = !{!105, !457, !282, !628, !628}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2962, file: !44, line: 1852, baseType: !3179, size: 64, offset: 1792)
!3179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3180, size: 64)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{null, !808, !457}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2962, file: !44, line: 1856, baseType: !3183, size: 64, offset: 1856)
!3183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3184, size: 64)
!3184 = !DISubroutineType(types: !3185)
!3185 = !{!413, !457, !628, !457, !628, !427, !7}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2962, file: !44, line: 1858, baseType: !3187, size: 64, offset: 1920)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = !DISubroutineType(types: !3189)
!3189 = !{!628, !457, !628, !457, !628, !628, !7}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2962, file: !44, line: 1861, baseType: !3036, size: 64, offset: 1984)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2957, file: !44, line: 692, baseType: !761, size: 64)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !527, file: !44, line: 694, baseType: !3193, size: 64, offset: 2560)
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3195)
!3195 = !{!3196, !3197, !3198, !3199}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3194, file: !44, line: 1101, baseType: !341)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3194, file: !44, line: 1102, baseType: !223, size: 128)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3194, file: !44, line: 1103, baseType: !223, size: 128, offset: 128)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3194, file: !44, line: 1104, baseType: !223, size: 128, offset: 256)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !527, file: !44, line: 695, baseType: !832, size: 1216, align: 64, offset: 2624)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !527, file: !44, line: 696, baseType: !223, size: 128, offset: 3840)
!3202 = !DIDerivedType(tag: DW_TAG_member, scope: !527, file: !44, line: 697, baseType: !3203, size: 64, offset: 3968)
!3203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !527, file: !44, line: 697, size: 64, elements: !3204)
!3204 = !{!3205, !3206, !3207, !3218, !3219}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3203, file: !44, line: 698, baseType: !2196, size: 64)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3203, file: !44, line: 699, baseType: !2712, size: 64)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3203, file: !44, line: 700, baseType: !3208, size: 64)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 64)
!3209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3210, line: 14, size: 832, elements: !3211)
!3210 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3211 = !{!3212, !3213, !3214, !3215, !3216, !3217}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3209, file: !3210, line: 15, baseType: !328, size: 512)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3209, file: !3210, line: 16, baseType: !213, size: 64, offset: 512)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3209, file: !3210, line: 17, baseType: !2960, size: 64, offset: 576)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3209, file: !3210, line: 18, baseType: !223, size: 128, offset: 640)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3209, file: !3210, line: 19, baseType: !610, size: 32, offset: 768)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3209, file: !3210, line: 20, baseType: !7, size: 32, offset: 800)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3203, file: !44, line: 701, baseType: !382, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3203, file: !44, line: 702, baseType: !7, size: 32)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !527, file: !44, line: 705, baseType: !297, size: 32, offset: 4032)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !527, file: !44, line: 708, baseType: !297, size: 32, offset: 4064)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !527, file: !44, line: 709, baseType: !2794, size: 64, offset: 4096)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !527, file: !44, line: 720, baseType: !217, size: 64, offset: 4160)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !488, file: !485, line: 98, baseType: !3225, size: 256, offset: 448)
!3225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 256, elements: !2327)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !488, file: !485, line: 101, baseType: !3227, size: 32, offset: 704)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3228, line: 25, size: 32, elements: !3229)
!3228 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3229 = !{!3230}
!3230 = !DIDerivedType(tag: DW_TAG_member, scope: !3227, file: !3228, line: 26, baseType: !3231, size: 32)
!3231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3227, file: !3228, line: 26, size: 32, elements: !3232)
!3232 = !{!3233}
!3233 = !DIDerivedType(tag: DW_TAG_member, scope: !3231, file: !3228, line: 30, baseType: !3234, size: 32)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3231, file: !3228, line: 30, size: 32, elements: !3235)
!3235 = !{!3236, !3237}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3234, file: !3228, line: 31, baseType: !341)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3234, file: !3228, line: 32, baseType: !282, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !488, file: !485, line: 102, baseType: !2811, size: 64, offset: 768)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !488, file: !485, line: 103, baseType: !696, size: 64, offset: 832)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !488, file: !485, line: 104, baseType: !216, size: 64, offset: 896)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !488, file: !485, line: 105, baseType: !217, size: 64, offset: 960)
!3242 = !DIDerivedType(tag: DW_TAG_member, scope: !488, file: !485, line: 107, baseType: !3243, size: 128, offset: 1024)
!3243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !488, file: !485, line: 107, size: 128, elements: !3244)
!3244 = !{!3245, !3246}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3243, file: !485, line: 108, baseType: !223, size: 128)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3243, file: !485, line: 109, baseType: !3013, size: 64)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !488, file: !485, line: 111, baseType: !223, size: 128, offset: 1152)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !488, file: !485, line: 112, baseType: !223, size: 128, offset: 1280)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !488, file: !485, line: 120, baseType: !3250, size: 128, offset: 1408)
!3250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !488, file: !485, line: 116, size: 128, elements: !3251)
!3251 = !{!3252, !3253, !3254}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3250, file: !485, line: 117, baseType: !736, size: 128)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3250, file: !485, line: 118, baseType: !502, size: 128)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3250, file: !485, line: 119, baseType: !470, size: 128, align: 64)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !458, file: !44, line: 922, baseType: !526, size: 64, offset: 256)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !458, file: !44, line: 923, baseType: !2960, size: 64, offset: 320)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !458, file: !44, line: 929, baseType: !341, offset: 384)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !458, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !458, file: !44, line: 931, baseType: !868, size: 64, offset: 448)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !458, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !458, file: !44, line: 933, baseType: !2807, size: 32, offset: 544)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !458, file: !44, line: 934, baseType: !1268, size: 192, offset: 576)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !458, file: !44, line: 935, baseType: !628, size: 64, offset: 768)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !458, file: !44, line: 936, baseType: !3265, size: 192, offset: 832)
!3265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3266)
!3266 = !{!3267, !3268, !3269, !3270, !3271, !3272}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3265, file: !44, line: 886, baseType: !3069)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3265, file: !44, line: 887, baseType: !1569, size: 64)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3265, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3265, file: !44, line: 889, baseType: !532, size: 32, offset: 96)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3265, file: !44, line: 889, baseType: !532, size: 32, offset: 128)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3265, file: !44, line: 890, baseType: !282, size: 32, offset: 160)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !458, file: !44, line: 937, baseType: !1645, size: 64, offset: 1024)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !458, file: !44, line: 938, baseType: !3275, size: 256, offset: 1088)
!3275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3276)
!3276 = !{!3277, !3278, !3279, !3280, !3281, !3282}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3275, file: !44, line: 897, baseType: !216, size: 64)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3275, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3275, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3275, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3275, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3275, file: !44, line: 904, baseType: !628, size: 64, offset: 192)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !458, file: !44, line: 940, baseType: !255, size: 64, offset: 1344)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !458, file: !44, line: 945, baseType: !217, size: 64, offset: 1408)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !458, file: !44, line: 949, baseType: !223, size: 128, offset: 1472)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !458, file: !44, line: 950, baseType: !223, size: 128, offset: 1600)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !458, file: !44, line: 952, baseType: !831, size: 64, offset: 1728)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !458, file: !44, line: 953, baseType: !1006, size: 32, offset: 1792)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !458, file: !44, line: 954, baseType: !1006, size: 32, offset: 1824)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !448, file: !407, line: 174, baseType: !454, size: 64, offset: 320)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !448, file: !407, line: 176, baseType: !3292, size: 64, offset: 384)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{!282, !457, !334, !447, !1078}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !436, file: !407, line: 90, baseType: !431, size: 64, offset: 192)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !436, file: !407, line: 91, baseType: !3297, size: 64, offset: 256)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !397, file: !329, line: 143, baseType: !3299, size: 64, offset: 256)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{!3302, !334}
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3304)
!3304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3305)
!3305 = !{!3306, !3307, !3311, !3315, !3321, !3325}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3304, file: !61, line: 40, baseType: !60, size: 32)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3304, file: !61, line: 41, baseType: !3308, size: 64, offset: 64)
!3308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3309, size: 64)
!3309 = !DISubroutineType(types: !3310)
!3310 = !{!587}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3304, file: !61, line: 42, baseType: !3312, size: 64, offset: 128)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!217}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3304, file: !61, line: 43, baseType: !3316, size: 64, offset: 192)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{!2224, !3319}
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3304, file: !61, line: 44, baseType: !3322, size: 64, offset: 256)
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 64)
!3323 = !DISubroutineType(types: !3324)
!3324 = !{!2224}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3304, file: !61, line: 45, baseType: !565, size: 64, offset: 320)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !397, file: !329, line: 144, baseType: !3327, size: 64, offset: 320)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!2224, !334}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !397, file: !329, line: 145, baseType: !3331, size: 64, offset: 384)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{null, !334, !3334, !3335}
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !328, file: !329, line: 70, baseType: !3337, size: 64, offset: 384)
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 64)
!3338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !716, line: 123, size: 1024, elements: !3339)
!3339 = !{!3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3468, !3469, !3470, !3471, !3472}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3338, file: !716, line: 124, baseType: !844, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3338, file: !716, line: 125, baseType: !844, size: 32, offset: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3338, file: !716, line: 135, baseType: !3337, size: 64, offset: 64)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3338, file: !716, line: 136, baseType: !262, size: 64, offset: 128)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3338, file: !716, line: 138, baseType: !857, size: 192, align: 64, offset: 192)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3338, file: !716, line: 140, baseType: !2224, size: 64, offset: 384)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3338, file: !716, line: 141, baseType: !7, size: 32, offset: 448)
!3347 = !DIDerivedType(tag: DW_TAG_member, scope: !3338, file: !716, line: 142, baseType: !3348, size: 256, offset: 512)
!3348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3338, file: !716, line: 142, size: 256, elements: !3349)
!3349 = !{!3350, !3396, !3400}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3348, file: !716, line: 143, baseType: !3351, size: 192)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !716, line: 91, size: 192, elements: !3352)
!3352 = !{!3353, !3354, !3355}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3351, file: !716, line: 92, baseType: !216, size: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3351, file: !716, line: 94, baseType: !853, size: 64, offset: 64)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3351, file: !716, line: 100, baseType: !3356, size: 64, offset: 128)
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !716, line: 180, size: 704, elements: !3358)
!3358 = !{!3359, !3360, !3361, !3368, !3369, !3370, !3394, !3395}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3357, file: !716, line: 182, baseType: !3337, size: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3357, file: !716, line: 183, baseType: !7, size: 32, offset: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3357, file: !716, line: 186, baseType: !3362, size: 192, offset: 128)
!3362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3363, line: 19, size: 192, elements: !3364)
!3363 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3364 = !{!3365, !3366, !3367}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3362, file: !3363, line: 20, baseType: !836, size: 128)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3362, file: !3363, line: 21, baseType: !7, size: 32, offset: 128)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3362, file: !3363, line: 22, baseType: !7, size: 32, offset: 160)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3357, file: !716, line: 187, baseType: !296, size: 32, offset: 320)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3357, file: !716, line: 188, baseType: !296, size: 32, offset: 352)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3357, file: !716, line: 189, baseType: !3371, size: 64, offset: 384)
!3371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !716, line: 168, size: 320, elements: !3373)
!3373 = !{!3374, !3378, !3382, !3386, !3390}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3372, file: !716, line: 169, baseType: !3375, size: 64)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 64)
!3376 = !DISubroutineType(types: !3377)
!3377 = !{!282, !808, !3356}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3372, file: !716, line: 171, baseType: !3379, size: 64, offset: 64)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DISubroutineType(types: !3381)
!3381 = !{!282, !3337, !262, !422}
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3372, file: !716, line: 173, baseType: !3383, size: 64, offset: 128)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = !DISubroutineType(types: !3385)
!3385 = !{!282, !3337}
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3372, file: !716, line: 174, baseType: !3387, size: 64, offset: 192)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{!282, !3337, !3337, !262}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3372, file: !716, line: 176, baseType: !3391, size: 64, offset: 256)
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3392, size: 64)
!3392 = !DISubroutineType(types: !3393)
!3393 = !{!282, !808, !3337, !3356}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3357, file: !716, line: 192, baseType: !223, size: 128, offset: 448)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3357, file: !716, line: 194, baseType: !1579, size: 128, offset: 576)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3348, file: !716, line: 144, baseType: !3397, size: 64)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !716, line: 103, size: 64, elements: !3398)
!3398 = !{!3399}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3397, file: !716, line: 104, baseType: !3337, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3348, file: !716, line: 145, baseType: !3401, size: 256)
!3401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !716, line: 107, size: 256, elements: !3402)
!3402 = !{!3403, !3463, !3466, !3467}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3401, file: !716, line: 108, baseType: !3404, size: 64)
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3405, size: 64)
!3405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3406)
!3406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !716, line: 217, size: 768, elements: !3407)
!3407 = !{!3408, !3428, !3432, !3436, !3440, !3444, !3448, !3452, !3453, !3454, !3455, !3459}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3406, file: !716, line: 222, baseType: !3409, size: 64)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{!282, !3412}
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !716, line: 197, size: 1088, elements: !3414)
!3414 = !{!3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3413, file: !716, line: 199, baseType: !3337, size: 64)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3413, file: !716, line: 200, baseType: !457, size: 64, offset: 64)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3413, file: !716, line: 201, baseType: !808, size: 64, offset: 128)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3413, file: !716, line: 202, baseType: !217, size: 64, offset: 192)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3413, file: !716, line: 205, baseType: !1268, size: 192, offset: 256)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3413, file: !716, line: 206, baseType: !1268, size: 192, offset: 448)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3413, file: !716, line: 207, baseType: !282, size: 32, offset: 640)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3413, file: !716, line: 208, baseType: !223, size: 128, offset: 704)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3413, file: !716, line: 209, baseType: !382, size: 64, offset: 832)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3413, file: !716, line: 211, baseType: !427, size: 64, offset: 896)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3413, file: !716, line: 212, baseType: !587, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3413, file: !716, line: 213, baseType: !587, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3413, file: !716, line: 214, baseType: !1106, size: 64, offset: 1024)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3406, file: !716, line: 223, baseType: !3429, size: 64, offset: 64)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = !DISubroutineType(types: !3431)
!3431 = !{null, !3412}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3406, file: !716, line: 236, baseType: !3433, size: 64, offset: 128)
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 64)
!3434 = !DISubroutineType(types: !3435)
!3435 = !{!282, !808, !217}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3406, file: !716, line: 238, baseType: !3437, size: 64, offset: 192)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DISubroutineType(types: !3439)
!3439 = !{!217, !808, !2973}
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3406, file: !716, line: 239, baseType: !3441, size: 64, offset: 256)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DISubroutineType(types: !3443)
!3443 = !{!217, !808, !217, !2973}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3406, file: !716, line: 240, baseType: !3445, size: 64, offset: 320)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{null, !808, !217}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3406, file: !716, line: 242, baseType: !3449, size: 64, offset: 384)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DISubroutineType(types: !3451)
!3451 = !{!413, !3412, !382, !427, !628}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3406, file: !716, line: 252, baseType: !427, size: 64, offset: 448)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3406, file: !716, line: 259, baseType: !587, size: 8, offset: 512)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3406, file: !716, line: 260, baseType: !3449, size: 64, offset: 576)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3406, file: !716, line: 263, baseType: !3456, size: 64, offset: 640)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{!3002, !3412, !3004}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3406, file: !716, line: 266, baseType: !3460, size: 64, offset: 704)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{!282, !3412, !1078}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3401, file: !716, line: 109, baseType: !3464, size: 64, offset: 64)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 64)
!3465 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !716, line: 31, flags: DIFlagFwdDecl)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3401, file: !716, line: 110, baseType: !628, size: 64, offset: 128)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3401, file: !716, line: 111, baseType: !3337, size: 64, offset: 192)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3338, file: !716, line: 148, baseType: !217, size: 64, offset: 768)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3338, file: !716, line: 154, baseType: !255, size: 64, offset: 832)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3338, file: !716, line: 156, baseType: !320, size: 16, offset: 896)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3338, file: !716, line: 157, baseType: !422, size: 16, offset: 912)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3338, file: !716, line: 158, baseType: !3473, size: 64, offset: 960)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3474 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !716, line: 32, flags: DIFlagFwdDecl)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !328, file: !329, line: 71, baseType: !3476, size: 32, offset: 448)
!3476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3477, line: 19, size: 32, elements: !3478)
!3477 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3478 = !{!3479}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3476, file: !3477, line: 20, baseType: !1325, size: 32)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !328, file: !329, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !328, file: !329, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !328, file: !329, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !328, file: !329, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !328, file: !329, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !325, file: !73, line: 463, baseType: !324, size: 64, offset: 512)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !325, file: !73, line: 465, baseType: !3487, size: 64, offset: 576)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !325, file: !73, line: 467, baseType: !262, size: 64, offset: 640)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !325, file: !73, line: 468, baseType: !3491, size: 64, offset: 704)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3493)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3494)
!3494 = !{!3495, !3496, !3497, !3501, !3506, !3510}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3493, file: !73, line: 88, baseType: !262, size: 64)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3493, file: !73, line: 89, baseType: !433, size: 64, offset: 64)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3493, file: !73, line: 90, baseType: !3498, size: 64, offset: 128)
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3499, size: 64)
!3499 = !DISubroutineType(types: !3500)
!3500 = !{!282, !324, !377}
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3493, file: !73, line: 91, baseType: !3502, size: 64, offset: 192)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!382, !324, !3505, !3334, !3335}
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3493, file: !73, line: 93, baseType: !3507, size: 64, offset: 256)
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3508, size: 64)
!3508 = !DISubroutineType(types: !3509)
!3509 = !{null, !324}
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3493, file: !73, line: 95, baseType: !3511, size: 64, offset: 320)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3513)
!3513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3514)
!3514 = !{!3515, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3513, file: !80, line: 279, baseType: !3516, size: 64)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = !DISubroutineType(types: !3518)
!3518 = !{!282, !324}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3513, file: !80, line: 280, baseType: !3507, size: 64, offset: 64)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3513, file: !80, line: 281, baseType: !3516, size: 64, offset: 128)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3513, file: !80, line: 282, baseType: !3516, size: 64, offset: 192)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3513, file: !80, line: 283, baseType: !3516, size: 64, offset: 256)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3513, file: !80, line: 284, baseType: !3516, size: 64, offset: 320)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3513, file: !80, line: 285, baseType: !3516, size: 64, offset: 384)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3513, file: !80, line: 286, baseType: !3516, size: 64, offset: 448)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3513, file: !80, line: 287, baseType: !3516, size: 64, offset: 512)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3513, file: !80, line: 288, baseType: !3516, size: 64, offset: 576)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3513, file: !80, line: 289, baseType: !3516, size: 64, offset: 640)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3513, file: !80, line: 290, baseType: !3516, size: 64, offset: 704)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3513, file: !80, line: 291, baseType: !3516, size: 64, offset: 768)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3513, file: !80, line: 292, baseType: !3516, size: 64, offset: 832)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3513, file: !80, line: 293, baseType: !3516, size: 64, offset: 896)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3513, file: !80, line: 294, baseType: !3516, size: 64, offset: 960)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3513, file: !80, line: 295, baseType: !3516, size: 64, offset: 1024)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3513, file: !80, line: 296, baseType: !3516, size: 64, offset: 1088)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3513, file: !80, line: 297, baseType: !3516, size: 64, offset: 1152)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3513, file: !80, line: 298, baseType: !3516, size: 64, offset: 1216)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3513, file: !80, line: 299, baseType: !3516, size: 64, offset: 1280)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3513, file: !80, line: 300, baseType: !3516, size: 64, offset: 1344)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3513, file: !80, line: 301, baseType: !3516, size: 64, offset: 1408)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !325, file: !73, line: 470, baseType: !3542, size: 64, offset: 768)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3544, line: 82, size: 1408, elements: !3545)
!3544 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3545 = !{!3546, !3547, !3548, !3549, !3550, !3551, !3552, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3627, !3630, !3631}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3543, file: !3544, line: 83, baseType: !262, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3543, file: !3544, line: 84, baseType: !262, size: 64, offset: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3543, file: !3544, line: 85, baseType: !324, size: 64, offset: 128)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3543, file: !3544, line: 86, baseType: !433, size: 64, offset: 192)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3543, file: !3544, line: 87, baseType: !433, size: 64, offset: 256)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3543, file: !3544, line: 88, baseType: !433, size: 64, offset: 320)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3543, file: !3544, line: 90, baseType: !3553, size: 64, offset: 384)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = !DISubroutineType(types: !3555)
!3555 = !{!282, !324, !3556}
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3558)
!3558 = !{!3559, !3560, !3561, !3562, !3563, !3564, !3565, !3578, !3591, !3592, !3593, !3594, !3595, !3603, !3604, !3605, !3606, !3607, !3608}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3557, file: !67, line: 96, baseType: !262, size: 64)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3557, file: !67, line: 97, baseType: !3542, size: 64, offset: 64)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3557, file: !67, line: 99, baseType: !213, size: 64, offset: 128)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3557, file: !67, line: 100, baseType: !262, size: 64, offset: 192)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3557, file: !67, line: 102, baseType: !587, size: 8, offset: 256)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3557, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3557, file: !67, line: 105, baseType: !3566, size: 64, offset: 320)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3568)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3569, line: 262, size: 1600, elements: !3570)
!3569 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3570 = !{!3571, !3572, !3573, !3577}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3568, file: !3569, line: 263, baseType: !2797, size: 256)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3568, file: !3569, line: 264, baseType: !2797, size: 256, offset: 256)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3568, file: !3569, line: 265, baseType: !3574, size: 1024, offset: 512)
!3574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 1024, elements: !3575)
!3575 = !{!3576}
!3576 = !DISubrange(count: 128)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3568, file: !3569, line: 266, baseType: !2224, size: 64, offset: 1536)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3557, file: !67, line: 106, baseType: !3579, size: 64, offset: 384)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3581)
!3581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3569, line: 210, size: 256, elements: !3582)
!3582 = !{!3583, !3587, !3589, !3590}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3581, file: !3569, line: 211, baseType: !3584, size: 72)
!3584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 72, elements: !3585)
!3585 = !{!3586}
!3586 = !DISubrange(count: 9)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3581, file: !3569, line: 212, baseType: !3588, size: 64, offset: 128)
!3588 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3569, line: 14, baseType: !216)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3581, file: !3569, line: 213, baseType: !297, size: 32, offset: 192)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3581, file: !3569, line: 214, baseType: !297, size: 32, offset: 224)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3557, file: !67, line: 108, baseType: !3516, size: 64, offset: 448)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3557, file: !67, line: 109, baseType: !3507, size: 64, offset: 512)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3557, file: !67, line: 110, baseType: !3516, size: 64, offset: 576)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3557, file: !67, line: 111, baseType: !3507, size: 64, offset: 640)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3557, file: !67, line: 112, baseType: !3596, size: 64, offset: 704)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 64)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{!282, !324, !3599}
!3599 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3600)
!3600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3601)
!3601 = !{!3602}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3600, file: !80, line: 51, baseType: !282, size: 32)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3557, file: !67, line: 113, baseType: !3516, size: 64, offset: 768)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3557, file: !67, line: 114, baseType: !433, size: 64, offset: 832)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3557, file: !67, line: 115, baseType: !433, size: 64, offset: 896)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3557, file: !67, line: 117, baseType: !3511, size: 64, offset: 960)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3557, file: !67, line: 118, baseType: !3507, size: 64, offset: 1024)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3557, file: !67, line: 120, baseType: !3609, size: 64, offset: 1088)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3610 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3543, file: !3544, line: 91, baseType: !3498, size: 64, offset: 448)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3543, file: !3544, line: 92, baseType: !3516, size: 64, offset: 512)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3543, file: !3544, line: 93, baseType: !3507, size: 64, offset: 576)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3543, file: !3544, line: 94, baseType: !3516, size: 64, offset: 640)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3543, file: !3544, line: 95, baseType: !3507, size: 64, offset: 704)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3543, file: !3544, line: 97, baseType: !3516, size: 64, offset: 768)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3543, file: !3544, line: 98, baseType: !3516, size: 64, offset: 832)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3543, file: !3544, line: 100, baseType: !3596, size: 64, offset: 896)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3543, file: !3544, line: 101, baseType: !3516, size: 64, offset: 960)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3543, file: !3544, line: 103, baseType: !3516, size: 64, offset: 1024)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3543, file: !3544, line: 105, baseType: !3516, size: 64, offset: 1088)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3543, file: !3544, line: 107, baseType: !3511, size: 64, offset: 1152)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3543, file: !3544, line: 109, baseType: !3624, size: 64, offset: 1216)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3626)
!3626 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3544, line: 109, flags: DIFlagFwdDecl)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3543, file: !3544, line: 111, baseType: !3628, size: 64, offset: 1280)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3544, line: 111, flags: DIFlagFwdDecl)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3543, file: !3544, line: 112, baseType: !742, offset: 1344)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3543, file: !3544, line: 114, baseType: !587, size: 8, offset: 1344)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !325, file: !73, line: 471, baseType: !3556, size: 64, offset: 832)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !325, file: !73, line: 473, baseType: !217, size: 64, offset: 896)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !325, file: !73, line: 475, baseType: !217, size: 64, offset: 960)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !325, file: !73, line: 480, baseType: !1268, size: 192, offset: 1024)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !325, file: !73, line: 484, baseType: !3637, size: 576, offset: 1216)
!3637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3638)
!3638 = !{!3639, !3640, !3641, !3642, !3643, !3644}
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3637, file: !73, line: 362, baseType: !223, size: 128)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3637, file: !73, line: 363, baseType: !223, size: 128, offset: 128)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3637, file: !73, line: 364, baseType: !223, size: 128, offset: 256)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3637, file: !73, line: 365, baseType: !223, size: 128, offset: 384)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3637, file: !73, line: 366, baseType: !587, size: 8, offset: 512)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3637, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !325, file: !73, line: 485, baseType: !3646, size: 2304, offset: 1792)
!3646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3647)
!3647 = !{!3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3743, !3747}
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3646, file: !80, line: 566, baseType: !3599, size: 32)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3646, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3646, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3646, file: !80, line: 569, baseType: !587, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3646, file: !80, line: 570, baseType: !587, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3646, file: !80, line: 571, baseType: !587, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3646, file: !80, line: 572, baseType: !587, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3646, file: !80, line: 573, baseType: !587, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3646, file: !80, line: 574, baseType: !587, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3646, file: !80, line: 575, baseType: !587, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3646, file: !80, line: 576, baseType: !587, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3646, file: !80, line: 577, baseType: !296, size: 32, offset: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3646, file: !80, line: 578, baseType: !341, offset: 96)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3646, file: !80, line: 580, baseType: !223, size: 128, offset: 128)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3646, file: !80, line: 581, baseType: !1600, size: 192, offset: 256)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3646, file: !80, line: 582, baseType: !3664, size: 64, offset: 448)
!3664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3665, size: 64)
!3665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3666, line: 43, size: 1472, elements: !3667)
!3666 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3667 = !{!3668, !3669, !3670, !3671, !3672, !3675, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700}
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3665, file: !3666, line: 44, baseType: !262, size: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3665, file: !3666, line: 45, baseType: !282, size: 32, offset: 64)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3665, file: !3666, line: 46, baseType: !223, size: 128, offset: 128)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3665, file: !3666, line: 47, baseType: !341, offset: 256)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3665, file: !3666, line: 48, baseType: !3673, size: 64, offset: 256)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3674, size: 64)
!3674 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3665, file: !3666, line: 49, baseType: !3676, size: 320, offset: 320)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3677, line: 11, size: 320, elements: !3678)
!3677 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3678 = !{!3679, !3680, !3681, !3686}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3676, file: !3677, line: 16, baseType: !736, size: 128)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3676, file: !3677, line: 17, baseType: !216, size: 64, offset: 128)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3676, file: !3677, line: 18, baseType: !3682, size: 64, offset: 192)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = !DISubroutineType(types: !3684)
!3684 = !{null, !3685}
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3676, file: !3677, line: 19, baseType: !296, size: 32, offset: 256)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3665, file: !3666, line: 50, baseType: !216, size: 64, offset: 640)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3665, file: !3666, line: 51, baseType: !1394, size: 64, offset: 704)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3665, file: !3666, line: 52, baseType: !1394, size: 64, offset: 768)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3665, file: !3666, line: 53, baseType: !1394, size: 64, offset: 832)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3665, file: !3666, line: 54, baseType: !1394, size: 64, offset: 896)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3665, file: !3666, line: 55, baseType: !1394, size: 64, offset: 960)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3665, file: !3666, line: 56, baseType: !216, size: 64, offset: 1024)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3665, file: !3666, line: 57, baseType: !216, size: 64, offset: 1088)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3665, file: !3666, line: 58, baseType: !216, size: 64, offset: 1152)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3665, file: !3666, line: 59, baseType: !216, size: 64, offset: 1216)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3665, file: !3666, line: 60, baseType: !216, size: 64, offset: 1280)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3665, file: !3666, line: 61, baseType: !324, size: 64, offset: 1344)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3665, file: !3666, line: 62, baseType: !587, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3665, file: !3666, line: 63, baseType: !587, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3646, file: !80, line: 583, baseType: !587, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3646, file: !80, line: 584, baseType: !587, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3646, file: !80, line: 585, baseType: !587, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3646, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3646, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3646, file: !80, line: 592, baseType: !1386, size: 512, offset: 576)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3646, file: !80, line: 593, baseType: !255, size: 64, offset: 1088)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3646, file: !80, line: 594, baseType: !2056, size: 256, offset: 1152)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3646, file: !80, line: 595, baseType: !1579, size: 128, offset: 1408)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3646, file: !80, line: 596, baseType: !3673, size: 64, offset: 1536)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3646, file: !80, line: 597, baseType: !844, size: 32, offset: 1600)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3646, file: !80, line: 598, baseType: !844, size: 32, offset: 1632)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3646, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3646, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3646, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3646, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3646, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3646, file: !80, line: 604, baseType: !587, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3646, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3646, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3646, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3646, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3646, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3646, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3646, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3646, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3646, file: !80, line: 613, baseType: !282, size: 32, offset: 1792)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3646, file: !80, line: 614, baseType: !282, size: 32, offset: 1824)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3646, file: !80, line: 615, baseType: !255, size: 64, offset: 1856)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3646, file: !80, line: 616, baseType: !255, size: 64, offset: 1920)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3646, file: !80, line: 617, baseType: !255, size: 64, offset: 1984)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3646, file: !80, line: 618, baseType: !255, size: 64, offset: 2048)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3646, file: !80, line: 620, baseType: !3734, size: 64, offset: 2112)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3736)
!3736 = !{!3737, !3738, !3739, !3740}
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3735, file: !80, line: 537, baseType: !341)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3735, file: !80, line: 538, baseType: !7, size: 32)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3735, file: !80, line: 540, baseType: !223, size: 128, offset: 64)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3735, file: !80, line: 543, baseType: !3741, size: 64, offset: 192)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3742, size: 64)
!3742 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3646, file: !80, line: 621, baseType: !3744, size: 64, offset: 2176)
!3744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3745, size: 64)
!3745 = !DISubroutineType(types: !3746)
!3746 = !{null, !324, !1537}
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3646, file: !80, line: 622, baseType: !3748, size: 64, offset: 2240)
!3748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3749, size: 64)
!3749 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !325, file: !73, line: 486, baseType: !3751, size: 64, offset: 4096)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3753)
!3753 = !{!3754, !3755, !3756, !3760, !3761, !3762}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3752, file: !80, line: 643, baseType: !3513, size: 1472)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3752, file: !80, line: 644, baseType: !3516, size: 64, offset: 1472)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3752, file: !80, line: 645, baseType: !3757, size: 64, offset: 1536)
!3757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3758, size: 64)
!3758 = !DISubroutineType(types: !3759)
!3759 = !{null, !324, !587}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3752, file: !80, line: 646, baseType: !3516, size: 64, offset: 1600)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3752, file: !80, line: 647, baseType: !3507, size: 64, offset: 1664)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3752, file: !80, line: 648, baseType: !3507, size: 64, offset: 1728)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !325, file: !73, line: 493, baseType: !3764, size: 64, offset: 4160)
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3765, size: 64)
!3765 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !73, line: 493, flags: DIFlagFwdDecl)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !325, file: !73, line: 499, baseType: !223, size: 128, offset: 4224)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !325, file: !73, line: 502, baseType: !3768, size: 64, offset: 4352)
!3768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3769, size: 64)
!3769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3770)
!3770 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !325, file: !73, line: 504, baseType: !3772, size: 64, offset: 4416)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !325, file: !73, line: 505, baseType: !255, size: 64, offset: 4480)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !325, file: !73, line: 510, baseType: !255, size: 64, offset: 4544)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !325, file: !73, line: 511, baseType: !3776, size: 64, offset: 4608)
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 64)
!3777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3778)
!3778 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !325, file: !73, line: 513, baseType: !3780, size: 64, offset: 4672)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3782)
!3782 = !{!3783, !3784}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3781, file: !73, line: 293, baseType: !7, size: 32)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3781, file: !73, line: 294, baseType: !216, size: 64, offset: 64)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !325, file: !73, line: 515, baseType: !223, size: 128, offset: 4736)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !325, file: !73, line: 526, baseType: !3787, offset: 4864)
!3787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3788, line: 5, elements: !355)
!3788 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !325, file: !73, line: 528, baseType: !3790, size: 64, offset: 4864)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3792, line: 14, flags: DIFlagFwdDecl)
!3792 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !325, file: !73, line: 529, baseType: !3794, size: 64, offset: 4928)
!3794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 64)
!3795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3796, line: 17, size: 192, elements: !3797)
!3796 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3797 = !{!3798, !3799, !3882}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3795, file: !3796, line: 18, baseType: !3794, size: 64)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3795, file: !3796, line: 19, baseType: !3800, size: 64, offset: 64)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3802)
!3802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3796, line: 110, size: 1152, elements: !3803)
!3803 = !{!3804, !3808, !3812, !3818, !3824, !3828, !3832, !3837, !3841, !3842, !3846, !3850, !3854, !3865, !3866, !3867, !3868, !3878}
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3802, file: !3796, line: 111, baseType: !3805, size: 64)
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3806, size: 64)
!3806 = !DISubroutineType(types: !3807)
!3807 = !{!3794, !3794}
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3802, file: !3796, line: 112, baseType: !3809, size: 64, offset: 64)
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3810 = !DISubroutineType(types: !3811)
!3811 = !{null, !3794}
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3802, file: !3796, line: 113, baseType: !3813, size: 64, offset: 128)
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3814, size: 64)
!3814 = !DISubroutineType(types: !3815)
!3815 = !{!587, !3816}
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3817, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3795)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3802, file: !3796, line: 114, baseType: !3819, size: 64, offset: 192)
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{!2224, !3816, !3822}
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !325)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3802, file: !3796, line: 116, baseType: !3825, size: 64, offset: 256)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 64)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{!587, !3816, !262}
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3802, file: !3796, line: 118, baseType: !3829, size: 64, offset: 320)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{!282, !3816, !262, !7, !217, !427}
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3802, file: !3796, line: 123, baseType: !3833, size: 64, offset: 384)
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{!282, !3816, !262, !3836, !427}
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3802, file: !3796, line: 126, baseType: !3838, size: 64, offset: 448)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!262, !3816}
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3802, file: !3796, line: 127, baseType: !3838, size: 64, offset: 512)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3802, file: !3796, line: 128, baseType: !3843, size: 64, offset: 576)
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = !DISubroutineType(types: !3845)
!3845 = !{!3794, !3816}
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3802, file: !3796, line: 130, baseType: !3847, size: 64, offset: 640)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DISubroutineType(types: !3849)
!3849 = !{!3794, !3816, !3794}
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3802, file: !3796, line: 133, baseType: !3851, size: 64, offset: 704)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DISubroutineType(types: !3853)
!3853 = !{!3794, !3816, !262}
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3802, file: !3796, line: 135, baseType: !3855, size: 64, offset: 768)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!3856 = !DISubroutineType(types: !3857)
!3857 = !{!282, !3816, !262, !262, !7, !7, !3858}
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3796, line: 43, size: 640, elements: !3860)
!3860 = !{!3861, !3862, !3863}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3859, file: !3796, line: 44, baseType: !3794, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3859, file: !3796, line: 45, baseType: !7, size: 32, offset: 64)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3859, file: !3796, line: 46, baseType: !3864, size: 512, offset: 128)
!3864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 512, elements: !1424)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3802, file: !3796, line: 140, baseType: !3847, size: 64, offset: 832)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3802, file: !3796, line: 143, baseType: !3843, size: 64, offset: 896)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3802, file: !3796, line: 145, baseType: !3805, size: 64, offset: 960)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3802, file: !3796, line: 146, baseType: !3869, size: 64, offset: 1024)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{!282, !3816, !3872}
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3796, line: 29, size: 128, elements: !3874)
!3874 = !{!3875, !3876, !3877}
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3873, file: !3796, line: 30, baseType: !7, size: 32)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3873, file: !3796, line: 31, baseType: !7, size: 32, offset: 32)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3873, file: !3796, line: 32, baseType: !3816, size: 64, offset: 64)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3802, file: !3796, line: 148, baseType: !3879, size: 64, offset: 1088)
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3880, size: 64)
!3880 = !DISubroutineType(types: !3881)
!3881 = !{!282, !3816, !324}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3795, file: !3796, line: 20, baseType: !324, size: 64, offset: 128)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !325, file: !73, line: 534, baseType: !610, size: 32, offset: 4992)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !325, file: !73, line: 535, baseType: !296, size: 32, offset: 5024)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !325, file: !73, line: 537, baseType: !341, offset: 5056)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !325, file: !73, line: 538, baseType: !223, size: 128, offset: 5056)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !325, file: !73, line: 540, baseType: !3888, size: 64, offset: 5184)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3890, line: 54, size: 960, elements: !3891)
!3890 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3891 = !{!3892, !3893, !3894, !3895, !3896, !3897, !3898, !3902, !3906, !3907, !3908, !3909, !3913, !3917, !3918}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3889, file: !3890, line: 55, baseType: !262, size: 64)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3889, file: !3890, line: 56, baseType: !213, size: 64, offset: 64)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3889, file: !3890, line: 58, baseType: !433, size: 64, offset: 128)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3889, file: !3890, line: 59, baseType: !433, size: 64, offset: 192)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3889, file: !3890, line: 60, baseType: !334, size: 64, offset: 256)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3889, file: !3890, line: 62, baseType: !3498, size: 64, offset: 320)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3889, file: !3890, line: 63, baseType: !3899, size: 64, offset: 384)
!3899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3900, size: 64)
!3900 = !DISubroutineType(types: !3901)
!3901 = !{!382, !324, !3505}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3889, file: !3890, line: 65, baseType: !3903, size: 64, offset: 448)
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 64)
!3904 = !DISubroutineType(types: !3905)
!3905 = !{null, !3888}
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3889, file: !3890, line: 66, baseType: !3507, size: 64, offset: 512)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3889, file: !3890, line: 68, baseType: !3516, size: 64, offset: 576)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3889, file: !3890, line: 70, baseType: !3302, size: 64, offset: 640)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3889, file: !3890, line: 71, baseType: !3910, size: 64, offset: 704)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!2224, !324}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3889, file: !3890, line: 73, baseType: !3914, size: 64, offset: 768)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = !DISubroutineType(types: !3916)
!3916 = !{null, !324, !3334, !3335}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3889, file: !3890, line: 75, baseType: !3511, size: 64, offset: 832)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3889, file: !3890, line: 77, baseType: !3628, size: 64, offset: 896)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !325, file: !73, line: 541, baseType: !433, size: 64, offset: 5248)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !325, file: !73, line: 543, baseType: !3507, size: 64, offset: 5312)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !325, file: !73, line: 544, baseType: !3922, size: 64, offset: 5376)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3923 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !325, file: !73, line: 545, baseType: !3925, size: 64, offset: 5440)
!3925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3926, size: 64)
!3926 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !325, file: !73, line: 547, baseType: !587, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !325, file: !73, line: 548, baseType: !587, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !325, file: !73, line: 549, baseType: !587, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !325, file: !73, line: 550, baseType: !587, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !238, file: !233, line: 635, baseType: !325, size: 5568, offset: 2304)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !238, file: !233, line: 636, baseType: !447, size: 64, offset: 7872)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !238, file: !233, line: 637, baseType: !447, size: 64, offset: 7936)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !238, file: !233, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !232, file: !233, line: 312, baseType: !237, size: 64, offset: 192)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !232, file: !233, line: 314, baseType: !217, size: 64, offset: 256)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !232, file: !233, line: 315, baseType: !307, size: 64, offset: 320)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !232, file: !233, line: 316, baseType: !3939, size: 64, offset: 384)
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !233, line: 69, size: 832, elements: !3941)
!3941 = !{!3942, !3943, !3944, !3947, !3948}
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3940, file: !233, line: 70, baseType: !237, size: 64)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3940, file: !233, line: 71, baseType: !223, size: 128, offset: 64)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !3940, file: !233, line: 72, baseType: !3945, size: 64, offset: 192)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !233, line: 72, flags: DIFlagFwdDecl)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !3940, file: !233, line: 73, baseType: !311, size: 8, offset: 256)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3940, file: !233, line: 74, baseType: !328, size: 512, offset: 320)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !232, file: !233, line: 318, baseType: !7, size: 32, offset: 448)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !232, file: !233, line: 319, baseType: !320, size: 16, offset: 480)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !232, file: !233, line: 320, baseType: !320, size: 16, offset: 496)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !232, file: !233, line: 321, baseType: !320, size: 16, offset: 512)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !232, file: !233, line: 322, baseType: !320, size: 16, offset: 528)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !232, file: !233, line: 323, baseType: !7, size: 32, offset: 544)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !232, file: !233, line: 324, baseType: !1446, size: 8, offset: 576)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !232, file: !233, line: 325, baseType: !1446, size: 8, offset: 584)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !232, file: !233, line: 330, baseType: !1446, size: 8, offset: 592)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !232, file: !233, line: 331, baseType: !1446, size: 8, offset: 600)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !232, file: !233, line: 332, baseType: !1446, size: 8, offset: 608)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !232, file: !233, line: 333, baseType: !1446, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !232, file: !233, line: 334, baseType: !1446, size: 8, offset: 624)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !232, file: !233, line: 335, baseType: !1446, size: 8, offset: 632)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !232, file: !233, line: 336, baseType: !956, size: 16, offset: 640)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !232, file: !233, line: 337, baseType: !3965, size: 64, offset: 704)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !232, file: !233, line: 339, baseType: !3967, size: 64, offset: 768)
!3967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 64)
!3968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !233, line: 858, size: 2048, elements: !3969)
!3969 = !{!3970, !3971, !3972, !3984, !3988, !3992, !3996, !4000, !4001, !4005, !4024, !4025, !4026}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3968, file: !233, line: 859, baseType: !223, size: 128)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3968, file: !233, line: 860, baseType: !262, size: 64, offset: 128)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !3968, file: !233, line: 861, baseType: !3973, size: 64, offset: 192)
!3973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3974, size: 64)
!3974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3975)
!3975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3569, line: 38, size: 256, elements: !3976)
!3976 = !{!3977, !3978, !3979, !3980, !3981, !3982, !3983}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3975, file: !3569, line: 39, baseType: !297, size: 32)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !3975, file: !3569, line: 39, baseType: !297, size: 32, offset: 32)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !3975, file: !3569, line: 40, baseType: !297, size: 32, offset: 64)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !3975, file: !3569, line: 40, baseType: !297, size: 32, offset: 96)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3975, file: !3569, line: 41, baseType: !297, size: 32, offset: 128)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !3975, file: !3569, line: 41, baseType: !297, size: 32, offset: 160)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3975, file: !3569, line: 42, baseType: !3588, size: 64, offset: 192)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3968, file: !233, line: 862, baseType: !3985, size: 64, offset: 256)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = !DISubroutineType(types: !3987)
!3987 = !{!282, !231, !3973}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3968, file: !233, line: 863, baseType: !3989, size: 64, offset: 320)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{null, !231}
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3968, file: !233, line: 864, baseType: !3993, size: 64, offset: 384)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!3994 = !DISubroutineType(types: !3995)
!3995 = !{!282, !231, !3599}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3968, file: !233, line: 865, baseType: !3997, size: 64, offset: 448)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!282, !231}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3968, file: !233, line: 866, baseType: !3989, size: 64, offset: 512)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !3968, file: !233, line: 867, baseType: !4002, size: 64, offset: 576)
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!282, !231, !282}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !3968, file: !233, line: 868, baseType: !4006, size: 64, offset: 640)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 64)
!4007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4008)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !233, line: 795, size: 384, elements: !4009)
!4009 = !{!4010, !4016, !4020, !4021, !4022, !4023}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4008, file: !233, line: 797, baseType: !4011, size: 64)
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4012 = !DISubroutineType(types: !4013)
!4013 = !{!4014, !231, !4015}
!4014 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !233, line: 772, baseType: !7)
!4015 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !233, line: 180, baseType: !7)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4008, file: !233, line: 801, baseType: !4017, size: 64, offset: 64)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!4014, !231}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4008, file: !233, line: 804, baseType: !4017, size: 64, offset: 128)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4008, file: !233, line: 807, baseType: !3989, size: 64, offset: 192)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4008, file: !233, line: 808, baseType: !3989, size: 64, offset: 256)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4008, file: !233, line: 811, baseType: !3989, size: 64, offset: 320)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3968, file: !233, line: 869, baseType: !433, size: 64, offset: 704)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3968, file: !233, line: 870, baseType: !3557, size: 1152, offset: 768)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !3968, file: !233, line: 871, baseType: !4027, size: 128, offset: 1920)
!4027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !233, line: 759, size: 128, elements: !4028)
!4028 = !{!4029, !4030}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4027, file: !233, line: 760, baseType: !341)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4027, file: !233, line: 761, baseType: !223, size: 128)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !232, file: !233, line: 340, baseType: !255, size: 64, offset: 832)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !232, file: !233, line: 346, baseType: !3781, size: 128, offset: 896)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !232, file: !233, line: 348, baseType: !4034, size: 32, offset: 1024)
!4034 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !233, line: 155, baseType: !282)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !232, file: !233, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !232, file: !233, line: 352, baseType: !1446, size: 8, offset: 1064)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !232, file: !233, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !232, file: !233, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !232, file: !233, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !232, file: !233, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !232, file: !233, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !232, file: !233, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !232, file: !233, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !232, file: !233, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !232, file: !233, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !232, file: !233, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !232, file: !233, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !232, file: !233, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !232, file: !233, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !232, file: !233, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !232, file: !233, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !232, file: !233, line: 376, baseType: !7, size: 32, offset: 1120)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !232, file: !233, line: 377, baseType: !7, size: 32, offset: 1152)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !232, file: !233, line: 380, baseType: !4055, size: 64, offset: 1216)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !233, line: 303, flags: DIFlagFwdDecl)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !232, file: !233, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !232, file: !233, line: 383, baseType: !282, size: 32, offset: 1312)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !232, file: !233, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !232, file: !233, line: 387, baseType: !4015, size: 32, offset: 1376)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !232, file: !233, line: 388, baseType: !325, size: 5568, offset: 1408)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !232, file: !233, line: 390, baseType: !282, size: 32, offset: 6976)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !232, file: !233, line: 396, baseType: !7, size: 32, offset: 7008)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !232, file: !233, line: 397, baseType: !4065, size: 8704, offset: 7040)
!4065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !249, size: 8704, elements: !4066)
!4066 = !{!4067}
!4067 = !DISubrange(count: 17)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !232, file: !233, line: 399, baseType: !587, size: 8, offset: 15744)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !232, file: !233, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !232, file: !233, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !232, file: !233, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !232, file: !233, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !232, file: !233, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !232, file: !233, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !232, file: !233, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !232, file: !233, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !232, file: !233, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !232, file: !233, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !232, file: !233, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !232, file: !233, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !232, file: !233, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !232, file: !233, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !232, file: !233, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !232, file: !233, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !232, file: !233, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !232, file: !233, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !232, file: !233, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !232, file: !233, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !232, file: !233, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !232, file: !233, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !232, file: !233, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !232, file: !233, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !232, file: !233, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !232, file: !233, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !232, file: !233, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !232, file: !233, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !232, file: !233, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !232, file: !233, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !232, file: !233, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !232, file: !233, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !232, file: !233, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !232, file: !233, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !232, file: !233, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !232, file: !233, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !232, file: !233, line: 450, baseType: !4106, size: 16, offset: 15792)
!4106 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !233, line: 206, baseType: !320)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !232, file: !233, line: 451, baseType: !844, size: 32, offset: 15808)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !232, file: !233, line: 453, baseType: !4109, size: 512, offset: 15840)
!4109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 512, elements: !1833)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !232, file: !233, line: 454, baseType: !732, size: 64, offset: 16384)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !232, file: !233, line: 455, baseType: !447, size: 64, offset: 16448)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !232, file: !233, line: 456, baseType: !282, size: 32, offset: 16512)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !232, file: !233, line: 457, baseType: !4114, size: 1088, offset: 16576)
!4114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !447, size: 1088, elements: !4066)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !232, file: !233, line: 458, baseType: !4114, size: 1088, offset: 17664)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !232, file: !233, line: 469, baseType: !433, size: 64, offset: 18752)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !232, file: !233, line: 471, baseType: !4118, size: 64, offset: 18816)
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !233, line: 304, flags: DIFlagFwdDecl)
!4120 = !DIDerivedType(tag: DW_TAG_member, scope: !232, file: !233, line: 478, baseType: !4121, size: 64, offset: 18880)
!4121 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !232, file: !233, line: 478, size: 64, elements: !4122)
!4122 = !{!4123, !4126}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4121, file: !233, line: 479, baseType: !4124, size: 64)
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !233, line: 305, flags: DIFlagFwdDecl)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4121, file: !233, line: 480, baseType: !231, size: 64)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !232, file: !233, line: 482, baseType: !956, size: 16, offset: 18944)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !232, file: !233, line: 483, baseType: !1446, size: 8, offset: 18960)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !232, file: !233, line: 497, baseType: !956, size: 16, offset: 18976)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !232, file: !233, line: 498, baseType: !254, size: 64, offset: 19008)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !232, file: !233, line: 499, baseType: !427, size: 64, offset: 19072)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !232, file: !233, line: 500, baseType: !382, size: 64, offset: 19136)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !232, file: !233, line: 502, baseType: !216, size: 64, offset: 19200)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !228, file: !94, line: 475, baseType: !325, size: 5568, offset: 64)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "cdev", scope: !228, file: !94, line: 476, baseType: !3209, size: 832, offset: 5632)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !228, file: !94, line: 478, baseType: !93, size: 32, offset: 6464)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "partition", scope: !228, file: !94, line: 480, baseType: !282, size: 32, offset: 6496)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "partition_count", scope: !228, file: !94, line: 481, baseType: !282, size: 32, offset: 6528)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "pff_csr_count", scope: !228, file: !94, line: 482, baseType: !282, size: 32, offset: 6560)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "pff_local", scope: !228, file: !94, line: 483, baseType: !4141, size: 2040, offset: 6592)
!4141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 2040, elements: !4142)
!4142 = !{!4143}
!4143 = !DISubrange(count: 255)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "mmio", scope: !228, file: !94, line: 485, baseType: !217, size: 64, offset: 8640)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_mrpc", scope: !228, file: !94, line: 486, baseType: !4146, size: 64, offset: 8704)
!4146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4147, size: 64)
!4147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mrpc_regs", file: !94, line: 45, size: 16640, elements: !4148)
!4148 = !{!4149, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160}
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "input_data", scope: !4147, file: !94, line: 46, baseType: !4150, size: 8192)
!4150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, size: 8192, elements: !4151)
!4151 = !{!4152}
!4152 = !DISubrange(count: 1024)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "output_data", scope: !4147, file: !94, line: 47, baseType: !4150, size: 8192, offset: 8192)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4147, file: !94, line: 48, baseType: !296, size: 32, offset: 16384)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4147, file: !94, line: 49, baseType: !296, size: 32, offset: 16416)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "ret_value", scope: !4147, file: !94, line: 50, baseType: !296, size: 32, offset: 16448)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "dma_en", scope: !4147, file: !94, line: 51, baseType: !296, size: 32, offset: 16480)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !4147, file: !94, line: 52, baseType: !255, size: 64, offset: 16512)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "dma_vector", scope: !4147, file: !94, line: 53, baseType: !296, size: 32, offset: 16576)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ver", scope: !4147, file: !94, line: 54, baseType: !296, size: 32, offset: 16608)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_sw_event", scope: !228, file: !94, line: 487, baseType: !4162, size: 64, offset: 8768)
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4163, size: 64)
!4163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sw_event_regs", file: !94, line: 64, size: 3072, elements: !4164)
!4164 = !{!4165, !4166, !4167, !4168, !4169, !4170, !4172, !4173, !4174, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "event_report_ctrl", scope: !4163, file: !94, line: 65, baseType: !255, size: 64)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !4163, file: !94, line: 66, baseType: !255, size: 64, offset: 64)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "part_event_bitmap", scope: !4163, file: !94, line: 67, baseType: !255, size: 64, offset: 128)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4163, file: !94, line: 68, baseType: !255, size: 64, offset: 192)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "global_summary", scope: !4163, file: !94, line: 69, baseType: !296, size: 32, offset: 256)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !4163, file: !94, line: 70, baseType: !4171, size: 96, offset: 288)
!4171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 96, elements: !383)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "stack_error_event_hdr", scope: !4163, file: !94, line: 71, baseType: !296, size: 32, offset: 384)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "stack_error_event_data", scope: !4163, file: !94, line: 72, baseType: !296, size: 32, offset: 416)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !4163, file: !94, line: 73, baseType: !4175, size: 128, offset: 448)
!4175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 128, elements: !270)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "ppu_error_event_hdr", scope: !4163, file: !94, line: 74, baseType: !296, size: 32, offset: 576)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "ppu_error_event_data", scope: !4163, file: !94, line: 75, baseType: !296, size: 32, offset: 608)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "reserved5", scope: !4163, file: !94, line: 76, baseType: !4175, size: 128, offset: 640)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "isp_error_event_hdr", scope: !4163, file: !94, line: 77, baseType: !296, size: 32, offset: 768)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "isp_error_event_data", scope: !4163, file: !94, line: 78, baseType: !296, size: 32, offset: 800)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "reserved6", scope: !4163, file: !94, line: 79, baseType: !4175, size: 128, offset: 832)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "sys_reset_event_hdr", scope: !4163, file: !94, line: 80, baseType: !296, size: 32, offset: 960)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "reserved7", scope: !4163, file: !94, line: 81, baseType: !4184, size: 160, offset: 992)
!4184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 160, elements: !4185)
!4185 = !{!4186}
!4186 = !DISubrange(count: 5)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "fw_exception_hdr", scope: !4163, file: !94, line: 82, baseType: !296, size: 32, offset: 1152)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "reserved8", scope: !4163, file: !94, line: 83, baseType: !4184, size: 160, offset: 1184)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "fw_nmi_hdr", scope: !4163, file: !94, line: 84, baseType: !296, size: 32, offset: 1344)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "reserved9", scope: !4163, file: !94, line: 85, baseType: !4184, size: 160, offset: 1376)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "fw_non_fatal_hdr", scope: !4163, file: !94, line: 86, baseType: !296, size: 32, offset: 1536)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "reserved10", scope: !4163, file: !94, line: 87, baseType: !4184, size: 160, offset: 1568)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "fw_fatal_hdr", scope: !4163, file: !94, line: 88, baseType: !296, size: 32, offset: 1728)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "reserved11", scope: !4163, file: !94, line: 89, baseType: !4184, size: 160, offset: 1760)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "twi_mrpc_comp_hdr", scope: !4163, file: !94, line: 90, baseType: !296, size: 32, offset: 1920)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "twi_mrpc_comp_data", scope: !4163, file: !94, line: 91, baseType: !296, size: 32, offset: 1952)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "reserved12", scope: !4163, file: !94, line: 92, baseType: !4175, size: 128, offset: 1984)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "twi_mrpc_comp_async_hdr", scope: !4163, file: !94, line: 93, baseType: !296, size: 32, offset: 2112)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "twi_mrpc_comp_async_data", scope: !4163, file: !94, line: 94, baseType: !296, size: 32, offset: 2144)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "reserved13", scope: !4163, file: !94, line: 95, baseType: !4175, size: 128, offset: 2176)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "cli_mrpc_comp_hdr", scope: !4163, file: !94, line: 96, baseType: !296, size: 32, offset: 2304)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "cli_mrpc_comp_data", scope: !4163, file: !94, line: 97, baseType: !296, size: 32, offset: 2336)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "reserved14", scope: !4163, file: !94, line: 98, baseType: !4175, size: 128, offset: 2368)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "cli_mrpc_comp_async_hdr", scope: !4163, file: !94, line: 99, baseType: !296, size: 32, offset: 2496)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "cli_mrpc_comp_async_data", scope: !4163, file: !94, line: 100, baseType: !296, size: 32, offset: 2528)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "reserved15", scope: !4163, file: !94, line: 101, baseType: !4175, size: 128, offset: 2560)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "gpio_interrupt_hdr", scope: !4163, file: !94, line: 102, baseType: !296, size: 32, offset: 2688)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "gpio_interrupt_data", scope: !4163, file: !94, line: 103, baseType: !296, size: 32, offset: 2720)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "reserved16", scope: !4163, file: !94, line: 104, baseType: !4175, size: 128, offset: 2752)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "gfms_event_hdr", scope: !4163, file: !94, line: 105, baseType: !296, size: 32, offset: 2880)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "gfms_event_data", scope: !4163, file: !94, line: 106, baseType: !296, size: 32, offset: 2912)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "reserved17", scope: !4163, file: !94, line: 107, baseType: !4175, size: 128, offset: 2944)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_sys_info", scope: !228, file: !94, line: 488, baseType: !4214, size: 64, offset: 8832)
!4214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4215, size: 64)
!4215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_info_regs", file: !94, line: 199, size: 2816, elements: !4216)
!4216 = !{!4217, !4218, !4219, !4220}
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "device_id", scope: !4215, file: !94, line: 200, baseType: !296, size: 32)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "device_version", scope: !4215, file: !94, line: 201, baseType: !296, size: 32, offset: 32)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "firmware_version", scope: !4215, file: !94, line: 202, baseType: !296, size: 32, offset: 64)
!4220 = !DIDerivedType(tag: DW_TAG_member, scope: !4215, file: !94, line: 203, baseType: !4221, size: 2720, offset: 96)
!4221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4215, file: !94, line: 203, size: 2720, elements: !4222)
!4222 = !{!4223, !4244}
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "gen3", scope: !4221, file: !94, line: 204, baseType: !4224, size: 2328)
!4224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_info_regs_gen3", file: !94, line: 141, size: 2328, elements: !4225)
!4225 = !{!4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4237, !4238, !4239, !4241, !4242, !4243}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !4224, file: !94, line: 142, baseType: !296, size: 32)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_table_revision", scope: !4224, file: !94, line: 143, baseType: !296, size: 32, offset: 32)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "table_format_version", scope: !4224, file: !94, line: 144, baseType: !296, size: 32, offset: 64)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "partition_id", scope: !4224, file: !94, line: 145, baseType: !296, size: 32, offset: 96)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_file_fmt_version", scope: !4224, file: !94, line: 146, baseType: !296, size: 32, offset: 128)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_running", scope: !4224, file: !94, line: 147, baseType: !956, size: 16, offset: 160)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "img_running", scope: !4224, file: !94, line: 148, baseType: !956, size: 16, offset: 176)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4224, file: !94, line: 149, baseType: !4234, size: 1824, offset: 192)
!4234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 1824, elements: !4235)
!4235 = !{!4236}
!4236 = !DISubrange(count: 57)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !4224, file: !94, line: 150, baseType: !2130, size: 64, offset: 2016)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "product_id", scope: !4224, file: !94, line: 151, baseType: !1832, size: 128, offset: 2080)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "product_revision", scope: !4224, file: !94, line: 152, baseType: !4240, size: 32, offset: 2208)
!4240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 32, elements: !270)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "component_vendor", scope: !4224, file: !94, line: 153, baseType: !2130, size: 64, offset: 2240)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "component_id", scope: !4224, file: !94, line: 154, baseType: !956, size: 16, offset: 2304)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "component_revision", scope: !4224, file: !94, line: 155, baseType: !1446, size: 8, offset: 2320)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "gen4", scope: !4221, file: !94, line: 205, baseType: !4245, size: 2720)
!4245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_info_regs_gen4", file: !94, line: 158, size: 2720, elements: !4246)
!4246 = !{!4247, !4248, !4249, !4250, !4251, !4252, !4254, !4255, !4256, !4257, !4258, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4282, !4283, !4284, !4285, !4286, !4288, !4290, !4291, !4292, !4296, !4298}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "gas_layout_ver", scope: !4245, file: !94, line: 159, baseType: !956, size: 16)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "evlist_ver", scope: !4245, file: !94, line: 160, baseType: !1446, size: 8, offset: 16)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !4245, file: !94, line: 161, baseType: !1446, size: 8, offset: 24)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "mgmt_cmd_set_ver", scope: !4245, file: !94, line: 162, baseType: !956, size: 16, offset: 32)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "fabric_cmd_set_ver", scope: !4245, file: !94, line: 163, baseType: !956, size: 16, offset: 48)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4245, file: !94, line: 164, baseType: !4253, size: 64, offset: 64)
!4253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 64, elements: !1667)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "mrpc_uart_ver", scope: !4245, file: !94, line: 165, baseType: !1446, size: 8, offset: 128)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "mrpc_twi_ver", scope: !4245, file: !94, line: 166, baseType: !1446, size: 8, offset: 136)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "mrpc_eth_ver", scope: !4245, file: !94, line: 167, baseType: !1446, size: 8, offset: 144)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "mrpc_inband_ver", scope: !4245, file: !94, line: 168, baseType: !1446, size: 8, offset: 152)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !4245, file: !94, line: 169, baseType: !4259, size: 224, offset: 160)
!4259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 224, elements: !4260)
!4260 = !{!4261}
!4261 = !DISubrange(count: 7)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "fw_update_tmo", scope: !4245, file: !94, line: 170, baseType: !296, size: 32, offset: 384)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "xml_version_cfg", scope: !4245, file: !94, line: 171, baseType: !296, size: 32, offset: 416)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "xml_version_img", scope: !4245, file: !94, line: 172, baseType: !296, size: 32, offset: 448)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "partition_id", scope: !4245, file: !94, line: 173, baseType: !296, size: 32, offset: 480)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "bl2_running", scope: !4245, file: !94, line: 174, baseType: !956, size: 16, offset: 512)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_running", scope: !4245, file: !94, line: 175, baseType: !956, size: 16, offset: 528)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "img_running", scope: !4245, file: !94, line: 176, baseType: !956, size: 16, offset: 544)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "key_running", scope: !4245, file: !94, line: 177, baseType: !956, size: 16, offset: 560)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !4245, file: !94, line: 178, baseType: !4271, size: 1376, offset: 576)
!4271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 1376, elements: !4272)
!4272 = !{!4273}
!4273 = !DISubrange(count: 43)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_seeprom_twi", scope: !4245, file: !94, line: 179, baseType: !296, size: 32, offset: 1952)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_table_revision", scope: !4245, file: !94, line: 180, baseType: !296, size: 32, offset: 1984)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_specific_info", scope: !4245, file: !94, line: 181, baseType: !4253, size: 64, offset: 2016)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "p2p_vendor_id", scope: !4245, file: !94, line: 182, baseType: !956, size: 16, offset: 2080)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "p2p_device_id", scope: !4245, file: !94, line: 183, baseType: !956, size: 16, offset: 2096)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "p2p_revision_id", scope: !4245, file: !94, line: 184, baseType: !1446, size: 8, offset: 2112)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "reserved5", scope: !4245, file: !94, line: 185, baseType: !4281, size: 24, offset: 2120)
!4281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, size: 24, elements: !383)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "p2p_class_id", scope: !4245, file: !94, line: 186, baseType: !296, size: 32, offset: 2144)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor_id", scope: !4245, file: !94, line: 187, baseType: !956, size: 16, offset: 2176)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_id", scope: !4245, file: !94, line: 188, baseType: !956, size: 16, offset: 2192)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "p2p_serial_number", scope: !4245, file: !94, line: 189, baseType: !4253, size: 64, offset: 2208)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "mac_addr", scope: !4245, file: !94, line: 190, baseType: !4287, size: 48, offset: 2272)
!4287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, size: 48, elements: !1723)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "reserved6", scope: !4245, file: !94, line: 191, baseType: !4289, size: 16, offset: 2320)
!4289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, size: 16, elements: !1667)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "reserved7", scope: !4245, file: !94, line: 192, baseType: !4171, size: 96, offset: 2336)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !4245, file: !94, line: 193, baseType: !2130, size: 64, offset: 2432)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "product_id", scope: !4245, file: !94, line: 194, baseType: !4293, size: 192, offset: 2496)
!4293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 192, elements: !4294)
!4294 = !{!4295}
!4295 = !DISubrange(count: 24)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "product_revision", scope: !4245, file: !94, line: 195, baseType: !4297, size: 16, offset: 2688)
!4297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 16, elements: !1667)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "reserved8", scope: !4245, file: !94, line: 196, baseType: !956, size: 16, offset: 2704)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_flash_info", scope: !228, file: !94, line: 489, baseType: !4300, size: 64, offset: 8896)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flash_info_regs", file: !94, line: 264, size: 1408, elements: !4302)
!4302 = !{!4303}
!4303 = !DIDerivedType(tag: DW_TAG_member, scope: !4301, file: !94, line: 265, baseType: !4304, size: 1408)
!4304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4301, file: !94, line: 265, size: 1408, elements: !4305)
!4305 = !{!4306, !4331}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "gen3", scope: !4304, file: !94, line: 266, baseType: !4307, size: 1280)
!4307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flash_info_regs_gen3", file: !94, line: 214, size: 1280, elements: !4308)
!4308 = !{!4309, !4310, !4316, !4317, !4318, !4319, !4320, !4325, !4326, !4327, !4328, !4329}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "flash_part_map_upd_idx", scope: !4307, file: !94, line: 215, baseType: !296, size: 32)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "active_img", scope: !4307, file: !94, line: 221, baseType: !4311, size: 96, offset: 32)
!4311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "active_partition_info_gen3", file: !94, line: 217, size: 96, elements: !4312)
!4312 = !{!4313, !4314, !4315}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4311, file: !94, line: 218, baseType: !296, size: 32)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "build_version", scope: !4311, file: !94, line: 219, baseType: !296, size: 32, offset: 32)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "build_string", scope: !4311, file: !94, line: 220, baseType: !296, size: 32, offset: 64)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "active_cfg", scope: !4307, file: !94, line: 223, baseType: !4311, size: 96, offset: 128)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_img", scope: !4307, file: !94, line: 224, baseType: !4311, size: 96, offset: 224)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_cfg", scope: !4307, file: !94, line: 225, baseType: !4311, size: 96, offset: 320)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "flash_length", scope: !4307, file: !94, line: 227, baseType: !296, size: 32, offset: 416)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "cfg0", scope: !4307, file: !94, line: 229, baseType: !4321, size: 64, offset: 448)
!4321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_info", file: !94, line: 209, size: 64, elements: !4322)
!4322 = !{!4323, !4324}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4321, file: !94, line: 210, baseType: !296, size: 32)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4321, file: !94, line: 211, baseType: !296, size: 32, offset: 32)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "cfg1", scope: !4307, file: !94, line: 230, baseType: !4321, size: 64, offset: 512)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "img0", scope: !4307, file: !94, line: 231, baseType: !4321, size: 64, offset: 576)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "img1", scope: !4307, file: !94, line: 232, baseType: !4321, size: 64, offset: 640)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "nvlog", scope: !4307, file: !94, line: 233, baseType: !4321, size: 64, offset: 704)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4307, file: !94, line: 234, baseType: !4330, size: 512, offset: 768)
!4330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4321, size: 512, elements: !1424)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "gen4", scope: !4304, file: !94, line: 267, baseType: !4332, size: 1408)
!4332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flash_info_regs_gen4", file: !94, line: 237, size: 1408, elements: !4333)
!4333 = !{!4334, !4335, !4336, !4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355}
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "flash_address", scope: !4332, file: !94, line: 238, baseType: !296, size: 32)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "flash_length", scope: !4332, file: !94, line: 239, baseType: !296, size: 32, offset: 32)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "active_flag", scope: !4332, file: !94, line: 246, baseType: !4337, size: 32, offset: 64)
!4337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "active_partition_info_gen4", file: !94, line: 241, size: 32, elements: !4338)
!4338 = !{!4339, !4340, !4341, !4342}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "bl2", scope: !4337, file: !94, line: 242, baseType: !311, size: 8)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !4337, file: !94, line: 243, baseType: !311, size: 8, offset: 8)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "img", scope: !4337, file: !94, line: 244, baseType: !311, size: 8, offset: 16)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !4337, file: !94, line: 245, baseType: !311, size: 8, offset: 24)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4332, file: !94, line: 248, baseType: !4171, size: 96, offset: 96)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "map0", scope: !4332, file: !94, line: 250, baseType: !4321, size: 64, offset: 192)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "map1", scope: !4332, file: !94, line: 251, baseType: !4321, size: 64, offset: 256)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "key0", scope: !4332, file: !94, line: 252, baseType: !4321, size: 64, offset: 320)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "key1", scope: !4332, file: !94, line: 253, baseType: !4321, size: 64, offset: 384)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "bl2_0", scope: !4332, file: !94, line: 254, baseType: !4321, size: 64, offset: 448)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "bl2_1", scope: !4332, file: !94, line: 255, baseType: !4321, size: 64, offset: 512)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "cfg0", scope: !4332, file: !94, line: 256, baseType: !4321, size: 64, offset: 576)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "cfg1", scope: !4332, file: !94, line: 257, baseType: !4321, size: 64, offset: 640)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "img0", scope: !4332, file: !94, line: 258, baseType: !4321, size: 64, offset: 704)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "img1", scope: !4332, file: !94, line: 259, baseType: !4321, size: 64, offset: 768)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "nvlog", scope: !4332, file: !94, line: 260, baseType: !4321, size: 64, offset: 832)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4332, file: !94, line: 261, baseType: !4330, size: 512, offset: 896)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_ntb", scope: !228, file: !94, line: 490, baseType: !4357, size: 64, offset: 8960)
!4357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 64)
!4358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ntb_info_regs", file: !94, line: 277, size: 6400, elements: !4359)
!4359 = !{!4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "partition_count", scope: !4358, file: !94, line: 278, baseType: !1446, size: 8)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "partition_id", scope: !4358, file: !94, line: 279, baseType: !1446, size: 8, offset: 8)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !4358, file: !94, line: 280, baseType: !956, size: 16, offset: 16)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "ep_map", scope: !4358, file: !94, line: 281, baseType: !255, size: 64, offset: 32)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "requester_id", scope: !4358, file: !94, line: 282, baseType: !956, size: 16, offset: 96)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4358, file: !94, line: 283, baseType: !956, size: 16, offset: 112)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !4358, file: !94, line: 284, baseType: !4175, size: 128, offset: 128)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "ntp_info", scope: !4358, file: !94, line: 290, baseType: !4368, size: 6144, offset: 256)
!4368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4369, size: 6144, elements: !317)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nt_partition_info", file: !94, line: 285, size: 128, elements: !4370)
!4370 = !{!4371, !4372, !4373, !4374}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "xlink_enabled", scope: !4369, file: !94, line: 286, baseType: !296, size: 32)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "target_part_low", scope: !4369, file: !94, line: 287, baseType: !296, size: 32, offset: 32)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "target_part_high", scope: !4369, file: !94, line: 288, baseType: !296, size: 32, offset: 64)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4369, file: !94, line: 289, baseType: !296, size: 32, offset: 96)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_part_cfg", scope: !228, file: !94, line: 491, baseType: !4376, size: 64, offset: 9024)
!4376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "part_cfg_regs", file: !94, line: 293, size: 8192, elements: !4378)
!4378 = !{!4379, !4380, !4381, !4382, !4383, !4384, !4385, !4389, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409}
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4377, file: !94, line: 294, baseType: !296, size: 32)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4377, file: !94, line: 295, baseType: !296, size: 32, offset: 32)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "port_cnt", scope: !4377, file: !94, line: 296, baseType: !296, size: 32, offset: 64)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "usp_port_mode", scope: !4377, file: !94, line: 297, baseType: !296, size: 32, offset: 96)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "usp_pff_inst_id", scope: !4377, file: !94, line: 298, baseType: !296, size: 32, offset: 128)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "vep_pff_inst_id", scope: !4377, file: !94, line: 299, baseType: !296, size: 32, offset: 160)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "dsp_pff_inst_id", scope: !4377, file: !94, line: 300, baseType: !4386, size: 1504, offset: 192)
!4386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 1504, elements: !4387)
!4387 = !{!4388}
!4388 = !DISubrange(count: 47)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !4377, file: !94, line: 301, baseType: !4390, size: 352, offset: 1696)
!4390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 352, elements: !4391)
!4391 = !{!4392}
!4392 = !DISubrange(count: 11)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "vep_vector_number", scope: !4377, file: !94, line: 302, baseType: !956, size: 16, offset: 2048)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "usp_vector_number", scope: !4377, file: !94, line: 303, baseType: !956, size: 16, offset: 2064)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "port_event_bitmap", scope: !4377, file: !94, line: 304, baseType: !296, size: 32, offset: 2080)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4377, file: !94, line: 305, baseType: !4171, size: 96, offset: 2112)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "part_event_summary", scope: !4377, file: !94, line: 306, baseType: !296, size: 32, offset: 2208)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !4377, file: !94, line: 307, baseType: !4171, size: 96, offset: 2240)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "part_reset_hdr", scope: !4377, file: !94, line: 308, baseType: !296, size: 32, offset: 2336)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "part_reset_data", scope: !4377, file: !94, line: 309, baseType: !4184, size: 160, offset: 2368)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "mrpc_comp_hdr", scope: !4377, file: !94, line: 310, baseType: !296, size: 32, offset: 2528)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "mrpc_comp_data", scope: !4377, file: !94, line: 311, baseType: !4184, size: 160, offset: 2560)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "mrpc_comp_async_hdr", scope: !4377, file: !94, line: 312, baseType: !296, size: 32, offset: 2720)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "mrpc_comp_async_data", scope: !4377, file: !94, line: 313, baseType: !4184, size: 160, offset: 2752)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_binding_hdr", scope: !4377, file: !94, line: 314, baseType: !296, size: 32, offset: 2912)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_binding_data", scope: !4377, file: !94, line: 315, baseType: !4184, size: 160, offset: 2944)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "intercomm_notify_hdr", scope: !4377, file: !94, line: 316, baseType: !296, size: 32, offset: 3104)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "intercomm_notify_data", scope: !4377, file: !94, line: 317, baseType: !4184, size: 160, offset: 3136)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !4377, file: !94, line: 318, baseType: !4410, size: 4896, offset: 3296)
!4410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 4896, elements: !4411)
!4411 = !{!4412}
!4412 = !DISubrange(count: 153)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_part_cfg_all", scope: !228, file: !94, line: 492, baseType: !4376, size: 64, offset: 9088)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_pff_csr", scope: !228, file: !94, line: 493, baseType: !4415, size: 64, offset: 9152)
!4415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4416, size: 64)
!4416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pff_csr_regs", file: !94, line: 410, size: 32768, elements: !4417)
!4417 = !{!4418, !4419, !4420, !4421, !4422, !4423, !4424, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4439, !4443, !4445, !4446, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476, !4477, !4478}
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !4416, file: !94, line: 411, baseType: !956, size: 16)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "device_id", scope: !4416, file: !94, line: 412, baseType: !956, size: 16, offset: 16)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "pcicmd", scope: !4416, file: !94, line: 413, baseType: !956, size: 16, offset: 32)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "pcists", scope: !4416, file: !94, line: 414, baseType: !956, size: 16, offset: 48)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "pci_class", scope: !4416, file: !94, line: 415, baseType: !296, size: 32, offset: 64)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "pci_opts", scope: !4416, file: !94, line: 416, baseType: !296, size: 32, offset: 96)
!4424 = !DIDerivedType(tag: DW_TAG_member, scope: !4416, file: !94, line: 417, baseType: !4425, size: 192, offset: 128)
!4425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4416, file: !94, line: 417, size: 192, elements: !4426)
!4426 = !{!4427, !4429}
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "pci_bar", scope: !4425, file: !94, line: 418, baseType: !4428, size: 192)
!4428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 192, elements: !1723)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "pci_bar64", scope: !4425, file: !94, line: 419, baseType: !4430, size: 192)
!4430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 192, elements: !383)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "pci_cardbus", scope: !4416, file: !94, line: 421, baseType: !296, size: 32, offset: 320)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "pci_subsystem_id", scope: !4416, file: !94, line: 422, baseType: !296, size: 32, offset: 352)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "pci_expansion_rom", scope: !4416, file: !94, line: 423, baseType: !296, size: 32, offset: 384)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "pci_cap_ptr", scope: !4416, file: !94, line: 424, baseType: !296, size: 32, offset: 416)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !4416, file: !94, line: 425, baseType: !296, size: 32, offset: 448)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "pci_irq", scope: !4416, file: !94, line: 426, baseType: !296, size: 32, offset: 480)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "pci_cap_region", scope: !4416, file: !94, line: 427, baseType: !4438, size: 1536, offset: 512)
!4438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 1536, elements: !317)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap_region", scope: !4416, file: !94, line: 428, baseType: !4440, size: 14336, offset: 2048)
!4440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 14336, elements: !4441)
!4441 = !{!4442}
!4442 = !DISubrange(count: 448)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_gas_window", scope: !4416, file: !94, line: 429, baseType: !4444, size: 4096, offset: 16384)
!4444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 4096, elements: !3575)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_gas_window_off", scope: !4416, file: !94, line: 430, baseType: !296, size: 32, offset: 20480)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4416, file: !94, line: 431, baseType: !4447, size: 4064, offset: 20512)
!4447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 4064, elements: !4448)
!4448 = !{!4449}
!4449 = !DISubrange(count: 127)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "pff_event_summary", scope: !4416, file: !94, line: 432, baseType: !296, size: 32, offset: 24576)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4416, file: !94, line: 433, baseType: !4171, size: 96, offset: 24608)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "aer_in_p2p_hdr", scope: !4416, file: !94, line: 434, baseType: !296, size: 32, offset: 24704)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "aer_in_p2p_data", scope: !4416, file: !94, line: 435, baseType: !4184, size: 160, offset: 24736)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "aer_in_vep_hdr", scope: !4416, file: !94, line: 436, baseType: !296, size: 32, offset: 24896)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "aer_in_vep_data", scope: !4416, file: !94, line: 437, baseType: !4184, size: 160, offset: 24928)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "dpc_hdr", scope: !4416, file: !94, line: 438, baseType: !296, size: 32, offset: 25088)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "dpc_data", scope: !4416, file: !94, line: 439, baseType: !4184, size: 160, offset: 25120)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "cts_hdr", scope: !4416, file: !94, line: 440, baseType: !296, size: 32, offset: 25280)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "cts_data", scope: !4416, file: !94, line: 441, baseType: !4184, size: 160, offset: 25312)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "uec_hdr", scope: !4416, file: !94, line: 442, baseType: !296, size: 32, offset: 25472)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "uec_data", scope: !4416, file: !94, line: 443, baseType: !4184, size: 160, offset: 25504)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_hdr", scope: !4416, file: !94, line: 444, baseType: !296, size: 32, offset: 25664)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_data", scope: !4416, file: !94, line: 445, baseType: !4184, size: 160, offset: 25696)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "ier_hdr", scope: !4416, file: !94, line: 446, baseType: !296, size: 32, offset: 25856)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "ier_data", scope: !4416, file: !94, line: 447, baseType: !4184, size: 160, offset: 25888)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "threshold_hdr", scope: !4416, file: !94, line: 448, baseType: !296, size: 32, offset: 26048)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "threshold_data", scope: !4416, file: !94, line: 449, baseType: !4184, size: 160, offset: 26080)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "power_mgmt_hdr", scope: !4416, file: !94, line: 450, baseType: !296, size: 32, offset: 26240)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "power_mgmt_data", scope: !4416, file: !94, line: 451, baseType: !4184, size: 160, offset: 26272)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "tlp_throttling_hdr", scope: !4416, file: !94, line: 452, baseType: !296, size: 32, offset: 26432)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "tlp_throttling_data", scope: !4416, file: !94, line: 453, baseType: !4184, size: 160, offset: 26464)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "force_speed_hdr", scope: !4416, file: !94, line: 454, baseType: !296, size: 32, offset: 26624)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "force_speed_data", scope: !4416, file: !94, line: 455, baseType: !4184, size: 160, offset: 26656)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "credit_timeout_hdr", scope: !4416, file: !94, line: 456, baseType: !296, size: 32, offset: 26816)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "credit_timeout_data", scope: !4416, file: !94, line: 457, baseType: !4184, size: 160, offset: 26848)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "link_state_hdr", scope: !4416, file: !94, line: 458, baseType: !296, size: 32, offset: 27008)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "link_state_data", scope: !4416, file: !94, line: 459, baseType: !4184, size: 160, offset: 27040)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !4416, file: !94, line: 460, baseType: !4479, size: 5568, offset: 27200)
!4479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 5568, elements: !4480)
!4480 = !{!4481}
!4481 = !DISubrange(count: 174)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "mrpc_mutex", scope: !228, file: !94, line: 499, baseType: !1268, size: 192, offset: 9216)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "mrpc_queue", scope: !228, file: !94, line: 500, baseType: !223, size: 128, offset: 9408)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "mrpc_busy", scope: !228, file: !94, line: 501, baseType: !282, size: 32, offset: 9536)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "mrpc_work", scope: !228, file: !94, line: 502, baseType: !2056, size: 256, offset: 9600)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "mrpc_timeout", scope: !228, file: !94, line: 503, baseType: !4487, size: 704, offset: 9856)
!4487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !104, line: 115, size: 704, elements: !4488)
!4488 = !{!4489, !4490, !4491, !4492}
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4487, file: !104, line: 116, baseType: !2056, size: 256)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4487, file: !104, line: 117, baseType: !3676, size: 320, offset: 256)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4487, file: !104, line: 120, baseType: !2890, size: 64, offset: 576)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !4487, file: !104, line: 121, baseType: !282, size: 32, offset: 640)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !228, file: !94, line: 504, baseType: !587, size: 8, offset: 10560)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "event_wq", scope: !228, file: !94, line: 506, baseType: !1579, size: 128, offset: 10624)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "event_cnt", scope: !228, file: !94, line: 507, baseType: !844, size: 32, offset: 10752)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "link_event_work", scope: !228, file: !94, line: 509, baseType: !2056, size: 256, offset: 10816)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "link_notifier", scope: !228, file: !94, line: 510, baseType: !4498, size: 64, offset: 11072)
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4499, size: 64)
!4499 = !DISubroutineType(types: !4500)
!4500 = !{null, !227}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "link_event_count", scope: !228, file: !94, line: 511, baseType: !4502, size: 2040, offset: 11136)
!4502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, size: 2040, elements: !4142)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "sndev", scope: !228, file: !94, line: 513, baseType: !4504, size: 64, offset: 13184)
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = !DICompositeType(tag: DW_TAG_structure_type, name: "switchtec_ntb", file: !94, line: 463, flags: DIFlagFwdDecl)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mrpc", scope: !228, file: !94, line: 515, baseType: !4507, size: 64, offset: 13248)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 64)
!4508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_mrpc_output", file: !94, line: 465, size: 8320, elements: !4509)
!4509 = !{!4510, !4511, !4512, !4513, !4514}
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4508, file: !94, line: 466, baseType: !296, size: 32)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_id", scope: !4508, file: !94, line: 467, baseType: !296, size: 32, offset: 32)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "rtn_code", scope: !4508, file: !94, line: 468, baseType: !296, size: 32, offset: 64)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "output_size", scope: !4508, file: !94, line: 469, baseType: !296, size: 32, offset: 96)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4508, file: !94, line: 470, baseType: !4150, size: 8192, offset: 128)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mrpc_dma_addr", scope: !228, file: !94, line: 516, baseType: !1017, size: 64, offset: 13312)
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 64)
!4517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchtec_user", file: !3, line: 50, size: 8960, elements: !4518)
!4518 = !{!4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4532}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "stdev", scope: !4517, file: !3, line: 51, baseType: !227, size: 64)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4517, file: !3, line: 53, baseType: !143, size: 32, offset: 64)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_comp", scope: !4517, file: !3, line: 55, baseType: !1579, size: 128, offset: 128)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4517, file: !3, line: 56, baseType: !3476, size: 32, offset: 256)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4517, file: !3, line: 57, baseType: !223, size: 128, offset: 320)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_done", scope: !4517, file: !3, line: 59, baseType: !587, size: 8, offset: 448)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4517, file: !3, line: 60, baseType: !296, size: 32, offset: 480)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4517, file: !3, line: 61, baseType: !296, size: 32, offset: 512)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "return_code", scope: !4517, file: !3, line: 62, baseType: !296, size: 32, offset: 544)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !4517, file: !3, line: 63, baseType: !427, size: 64, offset: 576)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "read_len", scope: !4517, file: !3, line: 64, baseType: !427, size: 64, offset: 640)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4517, file: !3, line: 65, baseType: !4531, size: 8192, offset: 704)
!4531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 8192, elements: !4151)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "event_cnt", scope: !4517, file: !3, line: 66, baseType: !282, size: 32, offset: 8896)
!4533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4534, size: 64)
!4534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !221)
!4535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4536, size: 64)
!4536 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !282)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 64)
!4538 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !255)
!4539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4540, size: 64)
!4540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4536)
!4541 = !{!0, !4542, !4547, !4592, !4595, !4597, !4602, !4654, !4659, !4664, !4666, !4671, !4676, !4678, !4683, !4688, !4690, !4695, !4697, !4699, !4701, !4703, !4705, !4710, !4712, !4715, !4717, !4722, !4724, !4729, !4734, !4736, !4739, !4741, !4744, !4758, !4760, !4762, !4764, !4766, !4768, !4770, !4772, !4774, !4776, !4778, !4789, !4794}
!4542 = !DIGlobalVariableExpression(var: !4543, expr: !DIExpression())
!4543 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version236", scope: !2, file: !3, line: 20, type: !4544, isLocal: true, isDefinition: true, align: 8)
!4544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 176, elements: !4545)
!4545 = !{!4546}
!4546 = !DISubrange(count: 22)
!4547 = !DIGlobalVariableExpression(var: !4548, expr: !DIExpression())
!4548 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 20, type: !4549, isLocal: true, isDefinition: true)
!4549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4550)
!4550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4551, size: 64)
!4551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4552)
!4552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !4553, line: 65, size: 576, align: 64, elements: !4554)
!4553 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!4554 = !{!4555, !4590, !4591}
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !4552, file: !4553, line: 66, baseType: !4556, size: 448)
!4556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !4553, line: 54, size: 448, elements: !4557)
!4557 = !{!4558, !4559, !4574, !4578, !4582, !4586}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4556, file: !4553, line: 55, baseType: !418, size: 128)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4556, file: !4553, line: 56, baseType: !4560, size: 64, offset: 128)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = !DISubroutineType(types: !4562)
!4562 = !{!413, !4563, !4564, !382}
!4563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4556, size: 64)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !4553, line: 46, size: 768, elements: !4566)
!4566 = !{!4567, !4568, !4569, !4570, !4573}
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4565, file: !4553, line: 47, baseType: !328, size: 512)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4565, file: !4553, line: 48, baseType: !213, size: 64, offset: 512)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !4565, file: !4553, line: 49, baseType: !334, size: 64, offset: 576)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !4565, file: !4553, line: 50, baseType: !4571, size: 64, offset: 640)
!4571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4572, size: 64)
!4572 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !4553, line: 50, flags: DIFlagFwdDecl)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !4565, file: !4553, line: 51, baseType: !1599, size: 64, offset: 704)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4556, file: !4553, line: 58, baseType: !4575, size: 64, offset: 192)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{!413, !4563, !4564, !262, !427}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !4556, file: !4553, line: 60, baseType: !4579, size: 64, offset: 256)
!4579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4580, size: 64)
!4580 = !DISubroutineType(types: !4581)
!4581 = !{null, !213, !262}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !4556, file: !4553, line: 61, baseType: !4583, size: 64, offset: 320)
!4583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4584, size: 64)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{!282, !213}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4556, file: !4553, line: 62, baseType: !4587, size: 64, offset: 384)
!4587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4588, size: 64)
!4588 = !DISubroutineType(types: !4589)
!4589 = !{null, !213}
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !4552, file: !4553, line: 67, baseType: !262, size: 64, offset: 448)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4552, file: !4553, line: 68, baseType: !262, size: 64, offset: 512)
!4592 = !DIGlobalVariableExpression(var: !4593, expr: !DIExpression())
!4593 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file237", scope: !2, file: !3, line: 21, type: !4594, isLocal: true, isDefinition: true, align: 8)
!4594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 352, elements: !1244)
!4595 = !DIGlobalVariableExpression(var: !4596, expr: !DIExpression())
!4596 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license238", scope: !2, file: !3, line: 21, type: !4544, isLocal: true, isDefinition: true, align: 8)
!4597 = !DIGlobalVariableExpression(var: !4598, expr: !DIExpression())
!4598 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author239", scope: !2, file: !3, line: 22, type: !4599, isLocal: true, isDefinition: true, align: 8)
!4599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 312, elements: !4600)
!4600 = !{!4601}
!4601 = !DISubrange(count: 39)
!4602 = !DIGlobalVariableExpression(var: !4603, expr: !DIExpression())
!4603 = distinct !DIGlobalVariable(name: "__param_max_devices", scope: !2, file: !3, line: 25, type: !4604, isLocal: true, isDefinition: true, align: 64)
!4604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4605)
!4605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4606, line: 69, size: 320, elements: !4607)
!4606 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4607 = !{!4608, !4609, !4610, !4626, !4628, !4632, !4633}
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4605, file: !4606, line: 70, baseType: !262, size: 64)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4605, file: !4606, line: 71, baseType: !213, size: 64, offset: 64)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4605, file: !4606, line: 72, baseType: !4611, size: 64, offset: 128)
!4611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4612, size: 64)
!4612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4613)
!4613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4606, line: 47, size: 256, elements: !4614)
!4614 = !{!4615, !4616, !4621, !4625}
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4613, file: !4606, line: 49, baseType: !7, size: 32)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4613, file: !4606, line: 51, baseType: !4617, size: 64, offset: 64)
!4617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4618, size: 64)
!4618 = !DISubroutineType(types: !4619)
!4619 = !{!282, !262, !4620}
!4620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4604, size: 64)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4613, file: !4606, line: 53, baseType: !4622, size: 64, offset: 128)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DISubroutineType(types: !4624)
!4624 = !{!282, !382, !4620}
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4613, file: !4606, line: 55, baseType: !565, size: 64, offset: 192)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4605, file: !4606, line: 73, baseType: !4627, size: 16, offset: 192)
!4627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4605, file: !4606, line: 74, baseType: !4629, size: 8, offset: 208)
!4629 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !256, line: 16, baseType: !4630)
!4630 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !258, line: 20, baseType: !4631)
!4631 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4605, file: !4606, line: 75, baseType: !1446, size: 8, offset: 216)
!4633 = !DIDerivedType(tag: DW_TAG_member, scope: !4605, file: !4606, line: 76, baseType: !4634, size: 64, offset: 256)
!4634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4605, file: !4606, line: 76, size: 64, elements: !4635)
!4635 = !{!4636, !4637, !4644}
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4634, file: !4606, line: 77, baseType: !217, size: 64)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4634, file: !4606, line: 78, baseType: !4638, size: 64)
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!4639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4640)
!4640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4606, line: 86, size: 128, elements: !4641)
!4641 = !{!4642, !4643}
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4640, file: !4606, line: 87, baseType: !7, size: 32)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4640, file: !4606, line: 88, baseType: !382, size: 64, offset: 64)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4634, file: !4606, line: 79, baseType: !4645, size: 64)
!4645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4646, size: 64)
!4646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4647)
!4647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4606, line: 92, size: 256, elements: !4648)
!4648 = !{!4649, !4650, !4651, !4652, !4653}
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4647, file: !4606, line: 94, baseType: !7, size: 32)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4647, file: !4606, line: 95, baseType: !7, size: 32, offset: 32)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4647, file: !4606, line: 96, baseType: !2780, size: 64, offset: 64)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4647, file: !4606, line: 97, baseType: !4611, size: 64, offset: 128)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4647, file: !4606, line: 98, baseType: !217, size: 64, offset: 192)
!4654 = !DIGlobalVariableExpression(var: !4655, expr: !DIExpression())
!4655 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_devicestype240", scope: !2, file: !3, line: 25, type: !4656, isLocal: true, isDefinition: true, align: 8)
!4656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 280, elements: !4657)
!4657 = !{!4658}
!4658 = !DISubrange(count: 35)
!4659 = !DIGlobalVariableExpression(var: !4660, expr: !DIExpression())
!4660 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_devices241", scope: !2, file: !3, line: 26, type: !4661, isLocal: true, isDefinition: true, align: 8)
!4661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 544, elements: !4662)
!4662 = !{!4663}
!4663 = !DISubrange(count: 68)
!4664 = !DIGlobalVariableExpression(var: !4665, expr: !DIExpression())
!4665 = distinct !DIGlobalVariable(name: "__param_use_dma_mrpc", scope: !2, file: !3, line: 29, type: !4604, isLocal: true, isDefinition: true, align: 64)
!4666 = !DIGlobalVariableExpression(var: !4667, expr: !DIExpression())
!4667 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_use_dma_mrpctype242", scope: !2, file: !3, line: 29, type: !4668, isLocal: true, isDefinition: true, align: 8)
!4668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 296, elements: !4669)
!4669 = !{!4670}
!4670 = !DISubrange(count: 37)
!4671 = !DIGlobalVariableExpression(var: !4672, expr: !DIExpression())
!4672 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_use_dma_mrpc243", scope: !2, file: !3, line: 30, type: !4673, isLocal: true, isDefinition: true, align: 8)
!4673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 536, elements: !4674)
!4674 = !{!4675}
!4675 = !DISubrange(count: 67)
!4676 = !DIGlobalVariableExpression(var: !4677, expr: !DIExpression())
!4677 = distinct !DIGlobalVariable(name: "__param_nirqs", scope: !2, file: !3, line: 34, type: !4604, isLocal: true, isDefinition: true, align: 64)
!4678 = !DIGlobalVariableExpression(var: !4679, expr: !DIExpression())
!4679 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_nirqstype244", scope: !2, file: !3, line: 34, type: !4680, isLocal: true, isDefinition: true, align: 8)
!4680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 232, elements: !4681)
!4681 = !{!4682}
!4682 = !DISubrange(count: 29)
!4683 = !DIGlobalVariableExpression(var: !4684, expr: !DIExpression())
!4684 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_nirqs245", scope: !2, file: !3, line: 35, type: !4685, isLocal: true, isDefinition: true, align: 8)
!4685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 768, elements: !4686)
!4686 = !{!4687}
!4687 = !DISubrange(count: 96)
!4688 = !DIGlobalVariableExpression(var: !4689, expr: !DIExpression())
!4689 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_switchtec_init258", scope: !2, file: !3, line: 1763, type: !217, isLocal: true, isDefinition: true)
!4690 = !DIGlobalVariableExpression(var: !4691, expr: !DIExpression())
!4691 = distinct !DIGlobalVariable(name: "__exitcall_switchtec_exit", scope: !2, file: !3, line: 1774, type: !4692, isLocal: true, isDefinition: true)
!4692 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4693, line: 117, baseType: !4694)
!4693 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!4695 = !DIGlobalVariableExpression(var: !4696, expr: !DIExpression())
!4696 = distinct !DIGlobalVariable(name: "switchtec_devt", scope: !2, file: !3, line: 37, type: !610, isLocal: true, isDefinition: true)
!4697 = !DIGlobalVariableExpression(var: !4698, expr: !DIExpression())
!4698 = distinct !DIGlobalVariable(name: "switchtec_class", scope: !2, file: !3, line: 40, type: !3888, isLocal: false, isDefinition: true)
!4699 = !DIGlobalVariableExpression(var: !4700, expr: !DIExpression())
!4700 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 20, type: !4552, isLocal: true, isDefinition: true)
!4701 = !DIGlobalVariableExpression(var: !4702, expr: !DIExpression())
!4702 = distinct !DIGlobalVariable(name: "__param_str_max_devices", scope: !2, file: !3, line: 25, type: !4544, isLocal: true, isDefinition: true)
!4703 = !DIGlobalVariableExpression(var: !4704, expr: !DIExpression())
!4704 = distinct !DIGlobalVariable(name: "max_devices", scope: !2, file: !3, line: 24, type: !282, isLocal: true, isDefinition: true)
!4705 = !DIGlobalVariableExpression(var: !4706, expr: !DIExpression())
!4706 = distinct !DIGlobalVariable(name: "__param_str_use_dma_mrpc", scope: !2, file: !3, line: 29, type: !4707, isLocal: true, isDefinition: true)
!4707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 184, elements: !4708)
!4708 = !{!4709}
!4709 = !DISubrange(count: 23)
!4710 = !DIGlobalVariableExpression(var: !4711, expr: !DIExpression())
!4711 = distinct !DIGlobalVariable(name: "use_dma_mrpc", scope: !2, file: !3, line: 28, type: !587, isLocal: true, isDefinition: true)
!4712 = !DIGlobalVariableExpression(var: !4713, expr: !DIExpression())
!4713 = distinct !DIGlobalVariable(name: "__param_str_nirqs", scope: !2, file: !3, line: 34, type: !4714, isLocal: true, isDefinition: true)
!4714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 128, elements: !1833)
!4715 = !DIGlobalVariableExpression(var: !4716, expr: !DIExpression())
!4716 = distinct !DIGlobalVariable(name: "nirqs", scope: !2, file: !3, line: 33, type: !282, isLocal: true, isDefinition: true)
!4717 = !DIGlobalVariableExpression(var: !4718, expr: !DIExpression())
!4718 = distinct !DIGlobalVariable(name: "__key", scope: !4719, file: !3, line: 1741, type: !742, isLocal: true, isDefinition: true)
!4719 = distinct !DISubprogram(name: "switchtec_init", scope: !3, file: !3, line: 1732, type: !4720, scopeLine: 1733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!4720 = !DISubroutineType(types: !4721)
!4721 = !{!282}
!4722 = !DIGlobalVariableExpression(var: !4723, expr: !DIExpression())
!4723 = distinct !DIGlobalVariable(name: "switchtec_pci_driver", scope: !2, file: !3, line: 1725, type: !3968, isLocal: true, isDefinition: true)
!4724 = !DIGlobalVariableExpression(var: !4725, expr: !DIExpression())
!4725 = distinct !DIGlobalVariable(name: "switchtec_pci_tbl", scope: !2, file: !3, line: 1672, type: !4726, isLocal: true, isDefinition: true)
!4726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3974, size: 24832, elements: !4727)
!4727 = !{!4728}
!4728 = !DISubrange(count: 97)
!4729 = !DIGlobalVariableExpression(var: !4730, expr: !DIExpression())
!4730 = distinct !DIGlobalVariable(name: "__key", scope: !4731, file: !3, line: 1306, type: !742, isLocal: true, isDefinition: true)
!4731 = distinct !DISubprogram(name: "stdev_create", scope: !3, file: !3, line: 1290, type: !4732, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!4732 = !DISubroutineType(types: !4733)
!4733 = !{!227, !231}
!4734 = !DIGlobalVariableExpression(var: !4735, expr: !DIExpression())
!4735 = distinct !DIGlobalVariable(name: "__key", scope: !4731, file: !3, line: 1311, type: !742, isLocal: true, isDefinition: true)
!4736 = !DIGlobalVariableExpression(var: !4737, expr: !DIExpression())
!4737 = distinct !DIGlobalVariable(name: "switchtec_device_groups", scope: !2, file: !3, line: 414, type: !4738, isLocal: true, isDefinition: true)
!4738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 128, elements: !1667)
!4739 = !DIGlobalVariableExpression(var: !4740, expr: !DIExpression())
!4740 = distinct !DIGlobalVariable(name: "switchtec_device_group", scope: !2, file: !3, line: 414, type: !435, isLocal: true, isDefinition: true)
!4741 = !DIGlobalVariableExpression(var: !4742, expr: !DIExpression())
!4742 = distinct !DIGlobalVariable(name: "switchtec_device_attrs", scope: !2, file: !3, line: 400, type: !4743, isLocal: true, isDefinition: true)
!4743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 704, elements: !4391)
!4744 = !DIGlobalVariableExpression(var: !4745, expr: !DIExpression())
!4745 = distinct !DIGlobalVariable(name: "dev_attr_device_version", scope: !2, file: !3, line: 285, type: !4746, isLocal: true, isDefinition: true)
!4746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !73, line: 99, size: 256, elements: !4747)
!4747 = !{!4748, !4749, !4754}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4746, file: !73, line: 100, baseType: !418, size: 128)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4746, file: !73, line: 101, baseType: !4750, size: 64, offset: 128)
!4750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4751, size: 64)
!4751 = !DISubroutineType(types: !4752)
!4752 = !{!413, !324, !4753, !382}
!4753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 64)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4746, file: !73, line: 103, baseType: !4755, size: 64, offset: 192)
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4756, size: 64)
!4756 = !DISubroutineType(types: !4757)
!4757 = !{!413, !324, !4753, !262, !427}
!4758 = !DIGlobalVariableExpression(var: !4759, expr: !DIExpression())
!4759 = distinct !DIGlobalVariable(name: "dev_attr_fw_version", scope: !2, file: !3, line: 297, type: !4746, isLocal: true, isDefinition: true)
!4760 = !DIGlobalVariableExpression(var: !4761, expr: !DIExpression())
!4761 = distinct !DIGlobalVariable(name: "dev_attr_vendor_id", scope: !2, file: !3, line: 335, type: !4746, isLocal: true, isDefinition: true)
!4762 = !DIGlobalVariableExpression(var: !4763, expr: !DIExpression())
!4763 = distinct !DIGlobalVariable(name: "dev_attr_product_id", scope: !2, file: !3, line: 336, type: !4746, isLocal: true, isDefinition: true)
!4764 = !DIGlobalVariableExpression(var: !4765, expr: !DIExpression())
!4765 = distinct !DIGlobalVariable(name: "dev_attr_product_revision", scope: !2, file: !3, line: 337, type: !4746, isLocal: true, isDefinition: true)
!4766 = !DIGlobalVariableExpression(var: !4767, expr: !DIExpression())
!4767 = distinct !DIGlobalVariable(name: "dev_attr_component_vendor", scope: !2, file: !3, line: 352, type: !4746, isLocal: true, isDefinition: true)
!4768 = !DIGlobalVariableExpression(var: !4769, expr: !DIExpression())
!4769 = distinct !DIGlobalVariable(name: "dev_attr_component_id", scope: !2, file: !3, line: 366, type: !4746, isLocal: true, isDefinition: true)
!4770 = !DIGlobalVariableExpression(var: !4771, expr: !DIExpression())
!4771 = distinct !DIGlobalVariable(name: "dev_attr_component_revision", scope: !2, file: !3, line: 380, type: !4746, isLocal: true, isDefinition: true)
!4772 = !DIGlobalVariableExpression(var: !4773, expr: !DIExpression())
!4773 = distinct !DIGlobalVariable(name: "dev_attr_partition", scope: !2, file: !3, line: 389, type: !4746, isLocal: true, isDefinition: true)
!4774 = !DIGlobalVariableExpression(var: !4775, expr: !DIExpression())
!4775 = distinct !DIGlobalVariable(name: "dev_attr_partition_count", scope: !2, file: !3, line: 398, type: !4746, isLocal: true, isDefinition: true)
!4776 = !DIGlobalVariableExpression(var: !4777, expr: !DIExpression())
!4777 = distinct !DIGlobalVariable(name: "switchtec_fops", scope: !2, file: !3, line: 1189, type: !2961, isLocal: true, isDefinition: true)
!4778 = !DIGlobalVariableExpression(var: !4779, expr: !DIExpression())
!4779 = distinct !DIGlobalVariable(name: "event_regs", scope: !2, file: !3, line: 899, type: !4780, isLocal: true, isDefinition: true)
!4780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4781, size: 4096, elements: !2327)
!4781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4782)
!4782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "event_reg", file: !3, line: 895, size: 128, elements: !4783)
!4783 = !{!4784, !4785}
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4782, file: !3, line: 896, baseType: !427, size: 64)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "map_reg", scope: !4782, file: !3, line: 897, baseType: !4786, size: 64, offset: 64)
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4787, size: 64)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{!295, !227, !427, !282}
!4789 = !DIGlobalVariableExpression(var: !4790, expr: !DIExpression())
!4790 = distinct !DIGlobalVariable(name: "__key", scope: !4791, file: !3, line: 81, type: !742, isLocal: true, isDefinition: true)
!4791 = distinct !DISubprogram(name: "stuser_create", scope: !3, file: !3, line: 69, type: !4792, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!4792 = !DISubroutineType(types: !4793)
!4793 = !{!4516, !227}
!4794 = !DIGlobalVariableExpression(var: !4795, expr: !DIExpression())
!4795 = distinct !DIGlobalVariable(name: "switchtec_minor_ida", scope: !2, file: !3, line: 38, type: !4796, isLocal: true, isDefinition: true)
!4796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !3363, line: 244, size: 128, elements: !4797)
!4797 = !{!4798}
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !4796, file: !3363, line: 245, baseType: !836, size: 128)
!4799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 552, elements: !4800)
!4800 = !{!4801}
!4801 = !DISubrange(count: 69)
!4802 = !{i32 7, !"Dwarf Version", i32 4}
!4803 = !{i32 2, !"Debug Info Version", i32 3}
!4804 = !{i32 1, !"wchar_size", i32 2}
!4805 = !{i32 1, !"Code Model", i32 2}
!4806 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4807 = !DILocalVariable(name: "rc", scope: !4719, file: !3, line: 1734, type: !282)
!4808 = !DILocation(line: 1734, column: 6, scope: !4719)
!4809 = !DILocation(line: 1736, column: 47, scope: !4719)
!4810 = !DILocation(line: 1736, column: 7, scope: !4719)
!4811 = !DILocation(line: 1736, column: 5, scope: !4719)
!4812 = !DILocation(line: 1738, column: 6, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 1738, column: 6)
!4814 = !DILocation(line: 1738, column: 6, scope: !4719)
!4815 = !DILocation(line: 1739, column: 10, scope: !4813)
!4816 = !DILocation(line: 1739, column: 3, scope: !4813)
!4817 = !DILocation(line: 1741, column: 20, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 1741, column: 20)
!4819 = !DILocation(line: 1741, column: 18, scope: !4719)
!4820 = !DILocation(line: 1742, column: 13, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 1742, column: 6)
!4822 = !DILocation(line: 1742, column: 6, scope: !4821)
!4823 = !DILocation(line: 1742, column: 6, scope: !4719)
!4824 = !DILocation(line: 1743, column: 16, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 1742, column: 31)
!4826 = !DILocation(line: 1743, column: 8, scope: !4825)
!4827 = !DILocation(line: 1743, column: 6, scope: !4825)
!4828 = !DILocation(line: 1744, column: 3, scope: !4825)
!4829 = !DILocation(line: 1747, column: 7, scope: !4719)
!4830 = !DILocation(line: 1747, column: 5, scope: !4719)
!4831 = !DILocation(line: 1748, column: 6, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 1748, column: 6)
!4833 = !DILocation(line: 1748, column: 6, scope: !4719)
!4834 = !DILocation(line: 1749, column: 3, scope: !4832)
!4835 = !DILocation(line: 1751, column: 2, scope: !4719)
!4836 = !DILocation(line: 1753, column: 2, scope: !4719)
!4837 = !DILabel(scope: !4719, name: "err_pci_register", file: !3, line: 1755)
!4838 = !DILocation(line: 1755, column: 1, scope: !4719)
!4839 = !DILocation(line: 1756, column: 16, scope: !4719)
!4840 = !DILocation(line: 1756, column: 2, scope: !4719)
!4841 = !DILabel(scope: !4719, name: "err_create_class", file: !3, line: 1758)
!4842 = !DILocation(line: 1758, column: 1, scope: !4719)
!4843 = !DILocation(line: 1759, column: 27, scope: !4719)
!4844 = !DILocation(line: 1759, column: 43, scope: !4719)
!4845 = !DILocation(line: 1759, column: 2, scope: !4719)
!4846 = !DILocation(line: 1761, column: 9, scope: !4719)
!4847 = !DILocation(line: 1761, column: 2, scope: !4719)
!4848 = !DILocation(line: 1762, column: 1, scope: !4719)
!4849 = distinct !DISubprogram(name: "switchtec_exit", scope: !3, file: !3, line: 1765, type: !1977, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!4850 = !DILocation(line: 1767, column: 2, scope: !4849)
!4851 = !DILocation(line: 1768, column: 16, scope: !4849)
!4852 = !DILocation(line: 1768, column: 2, scope: !4849)
!4853 = !DILocation(line: 1769, column: 27, scope: !4849)
!4854 = !DILocation(line: 1769, column: 43, scope: !4849)
!4855 = !DILocation(line: 1769, column: 2, scope: !4849)
!4856 = !DILocation(line: 1770, column: 2, scope: !4849)
!4857 = !DILocation(line: 1772, column: 2, scope: !4849)
!4858 = !DILocation(line: 1773, column: 1, scope: !4849)
!4859 = distinct !DISubprogram(name: "IS_ERR", scope: !4860, file: !4860, line: 34, type: !4861, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!4860 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!587, !2224}
!4863 = !DILocalVariable(name: "ptr", arg: 1, scope: !4859, file: !4860, line: 34, type: !2224)
!4864 = !DILocation(line: 34, column: 60, scope: !4859)
!4865 = !DILocation(line: 36, column: 9, scope: !4859)
!4866 = !DILocation(line: 36, column: 2, scope: !4859)
!4867 = distinct !DISubprogram(name: "PTR_ERR", scope: !4860, file: !4860, line: 29, type: !4868, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!4868 = !DISubroutineType(types: !4869)
!4869 = !{!105, !2224}
!4870 = !DILocalVariable(name: "ptr", arg: 1, scope: !4867, file: !4860, line: 29, type: !2224)
!4871 = !DILocation(line: 29, column: 61, scope: !4867)
!4872 = !DILocation(line: 31, column: 16, scope: !4867)
!4873 = !DILocation(line: 31, column: 9, scope: !4867)
!4874 = !DILocation(line: 31, column: 2, scope: !4867)
!4875 = distinct !DISubprogram(name: "switchtec_pci_probe", scope: !3, file: !3, line: 1590, type: !3986, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!4876 = !DILocalVariable(name: "pdev", arg: 1, scope: !4875, file: !3, line: 1590, type: !231)
!4877 = !DILocation(line: 1590, column: 48, scope: !4875)
!4878 = !DILocalVariable(name: "id", arg: 2, scope: !4875, file: !3, line: 1591, type: !3973)
!4879 = !DILocation(line: 1591, column: 39, scope: !4875)
!4880 = !DILocalVariable(name: "stdev", scope: !4875, file: !3, line: 1593, type: !227)
!4881 = !DILocation(line: 1593, column: 24, scope: !4875)
!4882 = !DILocalVariable(name: "rc", scope: !4875, file: !3, line: 1594, type: !282)
!4883 = !DILocation(line: 1594, column: 6, scope: !4875)
!4884 = !DILocation(line: 1596, column: 6, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 1596, column: 6)
!4886 = !DILocation(line: 1596, column: 12, scope: !4885)
!4887 = !DILocation(line: 1596, column: 18, scope: !4885)
!4888 = !DILocation(line: 1596, column: 6, scope: !4875)
!4889 = !DILocation(line: 1597, column: 3, scope: !4885)
!4890 = !DILocation(line: 1599, column: 23, scope: !4875)
!4891 = !DILocation(line: 1599, column: 10, scope: !4875)
!4892 = !DILocation(line: 1599, column: 8, scope: !4875)
!4893 = !DILocation(line: 1600, column: 13, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 1600, column: 6)
!4895 = !DILocation(line: 1600, column: 6, scope: !4894)
!4896 = !DILocation(line: 1600, column: 6, scope: !4875)
!4897 = !DILocation(line: 1601, column: 18, scope: !4894)
!4898 = !DILocation(line: 1601, column: 10, scope: !4894)
!4899 = !DILocation(line: 1601, column: 3, scope: !4894)
!4900 = !DILocation(line: 1603, column: 15, scope: !4875)
!4901 = !DILocation(line: 1603, column: 19, scope: !4875)
!4902 = !DILocation(line: 1603, column: 2, scope: !4875)
!4903 = !DILocation(line: 1603, column: 9, scope: !4875)
!4904 = !DILocation(line: 1603, column: 13, scope: !4875)
!4905 = !DILocation(line: 1605, column: 26, scope: !4875)
!4906 = !DILocation(line: 1605, column: 33, scope: !4875)
!4907 = !DILocation(line: 1605, column: 7, scope: !4875)
!4908 = !DILocation(line: 1605, column: 5, scope: !4875)
!4909 = !DILocation(line: 1606, column: 6, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 1606, column: 6)
!4911 = !DILocation(line: 1606, column: 6, scope: !4875)
!4912 = !DILocation(line: 1607, column: 3, scope: !4910)
!4913 = !DILocation(line: 1609, column: 26, scope: !4875)
!4914 = !DILocation(line: 1609, column: 7, scope: !4875)
!4915 = !DILocation(line: 1609, column: 5, scope: !4875)
!4916 = !DILocation(line: 1610, column: 6, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 1610, column: 6)
!4918 = !DILocation(line: 1610, column: 6, scope: !4875)
!4919 = !DILocation(line: 1611, column: 3, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 1610, column: 10)
!4921 = !DILocation(line: 1612, column: 3, scope: !4920)
!4922 = !DILocation(line: 1617, column: 6, scope: !4875)
!4923 = !DILocation(line: 1617, column: 13, scope: !4875)
!4924 = !DILocation(line: 1617, column: 28, scope: !4875)
!4925 = !DILocation(line: 1617, column: 5, scope: !4875)
!4926 = !DILocation(line: 1615, column: 2, scope: !4875)
!4927 = !DILocation(line: 1618, column: 27, scope: !4875)
!4928 = !DILocation(line: 1618, column: 2, scope: !4875)
!4929 = !DILocation(line: 1620, column: 6, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 1620, column: 6)
!4931 = !DILocation(line: 1620, column: 13, scope: !4930)
!4932 = !DILocation(line: 1620, column: 6, scope: !4875)
!4933 = !DILocation(line: 1621, column: 19, scope: !4930)
!4934 = !DILocation(line: 1621, column: 3, scope: !4930)
!4935 = !DILocation(line: 1623, column: 24, scope: !4875)
!4936 = !DILocation(line: 1623, column: 31, scope: !4875)
!4937 = !DILocation(line: 1623, column: 38, scope: !4875)
!4938 = !DILocation(line: 1623, column: 45, scope: !4875)
!4939 = !DILocation(line: 1623, column: 7, scope: !4875)
!4940 = !DILocation(line: 1623, column: 5, scope: !4875)
!4941 = !DILocation(line: 1624, column: 6, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 1624, column: 6)
!4943 = !DILocation(line: 1624, column: 6, scope: !4875)
!4944 = !DILocation(line: 1625, column: 3, scope: !4942)
!4945 = !DILocation(line: 1627, column: 2, scope: !4875)
!4946 = !DILocation(line: 1629, column: 2, scope: !4875)
!4947 = !DILabel(scope: !4875, name: "err_devadd", file: !3, line: 1631)
!4948 = !DILocation(line: 1631, column: 1, scope: !4875)
!4949 = !DILocation(line: 1632, column: 13, scope: !4875)
!4950 = !DILocation(line: 1632, column: 2, scope: !4875)
!4951 = !DILabel(scope: !4875, name: "err_put", file: !3, line: 1633)
!4952 = !DILocation(line: 1633, column: 1, scope: !4875)
!4953 = !DILocation(line: 1634, column: 2, scope: !4875)
!4954 = !DILocation(line: 1635, column: 14, scope: !4875)
!4955 = !DILocation(line: 1635, column: 21, scope: !4875)
!4956 = !DILocation(line: 1635, column: 2, scope: !4875)
!4957 = !DILocation(line: 1636, column: 9, scope: !4875)
!4958 = !DILocation(line: 1636, column: 2, scope: !4875)
!4959 = !DILocation(line: 1637, column: 1, scope: !4875)
!4960 = distinct !DISubprogram(name: "switchtec_pci_remove", scope: !3, file: !3, line: 1639, type: !3990, scopeLine: 1640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!4961 = !DILocalVariable(name: "pdev", arg: 1, scope: !4960, file: !3, line: 1639, type: !231)
!4962 = !DILocation(line: 1639, column: 50, scope: !4960)
!4963 = !DILocalVariable(name: "stdev", scope: !4960, file: !3, line: 1641, type: !227)
!4964 = !DILocation(line: 1641, column: 24, scope: !4960)
!4965 = !DILocation(line: 1641, column: 48, scope: !4960)
!4966 = !DILocation(line: 1641, column: 32, scope: !4960)
!4967 = !DILocation(line: 1643, column: 18, scope: !4960)
!4968 = !DILocation(line: 1643, column: 2, scope: !4960)
!4969 = !DILocation(line: 1645, column: 19, scope: !4960)
!4970 = !DILocation(line: 1645, column: 26, scope: !4960)
!4971 = !DILocation(line: 1645, column: 33, scope: !4960)
!4972 = !DILocation(line: 1645, column: 40, scope: !4960)
!4973 = !DILocation(line: 1645, column: 2, scope: !4960)
!4974 = !DILocation(line: 1646, column: 2, scope: !4960)
!4975 = !DILocation(line: 1647, column: 2, scope: !4960)
!4976 = !DILocation(line: 1648, column: 13, scope: !4960)
!4977 = !DILocation(line: 1648, column: 2, scope: !4960)
!4978 = !DILocation(line: 1649, column: 14, scope: !4960)
!4979 = !DILocation(line: 1649, column: 21, scope: !4960)
!4980 = !DILocation(line: 1649, column: 2, scope: !4960)
!4981 = !DILocation(line: 1650, column: 1, scope: !4960)
!4982 = distinct !DISubprogram(name: "request_module_nowait", scope: !4983, file: !4983, line: 31, type: !4984, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!4983 = !DIFile(filename: "./include/linux/kmod.h", directory: "/home/lizy2001/genbc/linux")
!4984 = !DISubroutineType(types: !4985)
!4985 = !{!282, !262, null}
!4986 = !DILocalVariable(name: "name", arg: 1, scope: !4982, file: !4983, line: 31, type: !262)
!4987 = !DILocation(line: 31, column: 53, scope: !4982)
!4988 = !DILocation(line: 31, column: 66, scope: !4982)
!4989 = !DILocalVariable(name: "v", arg: 1, scope: !4990, file: !4991, line: 39, type: !4994)
!4990 = distinct !DISubprogram(name: "arch_atomic_set", scope: !4991, file: !4991, line: 39, type: !4992, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!4991 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!4992 = !DISubroutineType(types: !4993)
!4993 = !{null, !4994, !282}
!4994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!4995 = !DILocation(line: 39, column: 55, scope: !4990, inlinedAt: !4996)
!4996 = distinct !DILocation(line: 46, column: 2, scope: !4997, inlinedAt: !4999)
!4997 = distinct !DISubprogram(name: "atomic_set", scope: !4998, file: !4998, line: 43, type: !4992, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!4998 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!4999 = distinct !DILocation(line: 1312, column: 2, scope: !4731)
!5000 = !DILocalVariable(name: "i", arg: 2, scope: !4990, file: !4991, line: 39, type: !282)
!5001 = !DILocation(line: 39, column: 62, scope: !4990, inlinedAt: !4996)
!5002 = !DILocalVariable(name: "v", arg: 1, scope: !5003, file: !5004, line: 84, type: !5007)
!5003 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !5004, file: !5004, line: 84, type: !5005, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5004 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5005 = !DISubroutineType(types: !5006)
!5006 = !{null, !5007, !427}
!5007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5008, size: 64)
!5008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5009)
!5009 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5010 = !DILocation(line: 84, column: 74, scope: !5003, inlinedAt: !5011)
!5011 = distinct !DILocation(line: 45, column: 2, scope: !4997, inlinedAt: !4999)
!5012 = !DILocalVariable(name: "size", arg: 2, scope: !5003, file: !5004, line: 84, type: !427)
!5013 = !DILocation(line: 84, column: 84, scope: !5003, inlinedAt: !5011)
!5014 = !DILocalVariable(name: "v", arg: 1, scope: !4997, file: !4998, line: 43, type: !4994)
!5015 = !DILocation(line: 43, column: 22, scope: !4997, inlinedAt: !4999)
!5016 = !DILocalVariable(name: "i", arg: 2, scope: !4997, file: !4998, line: 43, type: !282)
!5017 = !DILocation(line: 43, column: 29, scope: !4997, inlinedAt: !4999)
!5018 = !DILocalVariable(name: "pdev", arg: 1, scope: !4731, file: !3, line: 1290, type: !231)
!5019 = !DILocation(line: 1290, column: 59, scope: !4731)
!5020 = !DILocalVariable(name: "stdev", scope: !4731, file: !3, line: 1292, type: !227)
!5021 = !DILocation(line: 1292, column: 24, scope: !4731)
!5022 = !DILocalVariable(name: "minor", scope: !4731, file: !3, line: 1293, type: !282)
!5023 = !DILocation(line: 1293, column: 6, scope: !4731)
!5024 = !DILocalVariable(name: "dev", scope: !4731, file: !3, line: 1294, type: !324)
!5025 = !DILocation(line: 1294, column: 17, scope: !4731)
!5026 = !DILocalVariable(name: "cdev", scope: !4731, file: !3, line: 1295, type: !3208)
!5027 = !DILocation(line: 1295, column: 15, scope: !4731)
!5028 = !DILocalVariable(name: "rc", scope: !4731, file: !3, line: 1296, type: !282)
!5029 = !DILocation(line: 1296, column: 6, scope: !4731)
!5030 = !DILocation(line: 1299, column: 22, scope: !4731)
!5031 = !DILocation(line: 1299, column: 28, scope: !4731)
!5032 = !DILocation(line: 1299, column: 9, scope: !4731)
!5033 = !DILocation(line: 1298, column: 10, scope: !4731)
!5034 = !DILocation(line: 1298, column: 8, scope: !4731)
!5035 = !DILocation(line: 1300, column: 7, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1300, column: 6)
!5037 = !DILocation(line: 1300, column: 6, scope: !4731)
!5038 = !DILocation(line: 1301, column: 10, scope: !5036)
!5039 = !DILocation(line: 1301, column: 3, scope: !5036)
!5040 = !DILocation(line: 1303, column: 2, scope: !4731)
!5041 = !DILocation(line: 1303, column: 9, scope: !4731)
!5042 = !DILocation(line: 1303, column: 15, scope: !4731)
!5043 = !DILocation(line: 1304, column: 16, scope: !4731)
!5044 = !DILocation(line: 1304, column: 2, scope: !4731)
!5045 = !DILocation(line: 1304, column: 9, scope: !4731)
!5046 = !DILocation(line: 1304, column: 14, scope: !4731)
!5047 = !DILocation(line: 1305, column: 18, scope: !4731)
!5048 = !DILocation(line: 1305, column: 25, scope: !4731)
!5049 = !DILocation(line: 1305, column: 2, scope: !4731)
!5050 = !DILocation(line: 1306, column: 2, scope: !4731)
!5051 = !DILocation(line: 1306, column: 2, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1306, column: 2)
!5053 = !DILocation(line: 1307, column: 2, scope: !4731)
!5054 = !DILocation(line: 1307, column: 9, scope: !4731)
!5055 = !DILocation(line: 1307, column: 19, scope: !4731)
!5056 = !DILocation(line: 1308, column: 2, scope: !4731)
!5057 = !DILocation(line: 1308, column: 2, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1308, column: 2)
!5059 = !DILocation(line: 1309, column: 2, scope: !4731)
!5060 = !DILocation(line: 1309, column: 2, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1309, column: 2)
!5062 = !DILocation(line: 1309, column: 2, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 1309, column: 2)
!5064 = !DILocation(line: 1310, column: 2, scope: !4731)
!5065 = !DILocation(line: 1310, column: 2, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1310, column: 2)
!5067 = !DILocation(line: 1311, column: 2, scope: !4731)
!5068 = !DILocation(line: 1311, column: 2, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1311, column: 2)
!5070 = !DILocation(line: 1312, column: 14, scope: !4731)
!5071 = !DILocation(line: 1312, column: 21, scope: !4731)
!5072 = !DILocation(line: 45, column: 26, scope: !4997, inlinedAt: !4999)
!5073 = !DILocation(line: 86, column: 20, scope: !5003, inlinedAt: !5011)
!5074 = !DILocation(line: 86, column: 23, scope: !5003, inlinedAt: !5011)
!5075 = !DILocation(line: 86, column: 2, scope: !5003, inlinedAt: !5011)
!5076 = !DILocation(line: 87, column: 2, scope: !5003, inlinedAt: !5011)
!5077 = !DILocation(line: 46, column: 18, scope: !4997, inlinedAt: !4999)
!5078 = !DILocation(line: 46, column: 21, scope: !4997, inlinedAt: !4999)
!5079 = !DILocation(line: 41, column: 2, scope: !5080, inlinedAt: !4996)
!5080 = distinct !DILexicalBlock(scope: !4990, file: !4991, line: 41, column: 2)
!5081 = !DILocation(line: 1314, column: 9, scope: !4731)
!5082 = !DILocation(line: 1314, column: 16, scope: !4731)
!5083 = !DILocation(line: 1314, column: 6, scope: !4731)
!5084 = !DILocation(line: 1315, column: 20, scope: !4731)
!5085 = !DILocation(line: 1315, column: 2, scope: !4731)
!5086 = !DILocation(line: 1316, column: 15, scope: !4731)
!5087 = !DILocation(line: 1316, column: 2, scope: !4731)
!5088 = !DILocation(line: 1316, column: 7, scope: !4731)
!5089 = !DILocation(line: 1316, column: 13, scope: !4731)
!5090 = !DILocation(line: 1317, column: 17, scope: !4731)
!5091 = !DILocation(line: 1317, column: 23, scope: !4731)
!5092 = !DILocation(line: 1317, column: 2, scope: !4731)
!5093 = !DILocation(line: 1317, column: 7, scope: !4731)
!5094 = !DILocation(line: 1317, column: 14, scope: !4731)
!5095 = !DILocation(line: 1318, column: 2, scope: !4731)
!5096 = !DILocation(line: 1318, column: 7, scope: !4731)
!5097 = !DILocation(line: 1318, column: 14, scope: !4731)
!5098 = !DILocation(line: 1319, column: 2, scope: !4731)
!5099 = !DILocation(line: 1319, column: 7, scope: !4731)
!5100 = !DILocation(line: 1319, column: 15, scope: !4731)
!5101 = !DILocation(line: 1321, column: 10, scope: !4731)
!5102 = !DILocation(line: 1321, column: 8, scope: !4731)
!5103 = !DILocation(line: 1323, column: 6, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1323, column: 6)
!5105 = !DILocation(line: 1323, column: 12, scope: !5104)
!5106 = !DILocation(line: 1323, column: 6, scope: !4731)
!5107 = !DILocation(line: 1324, column: 8, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 1323, column: 17)
!5109 = !DILocation(line: 1324, column: 6, scope: !5108)
!5110 = !DILocation(line: 1325, column: 3, scope: !5108)
!5111 = !DILocation(line: 1328, column: 14, scope: !4731)
!5112 = !DILocation(line: 1328, column: 2, scope: !4731)
!5113 = !DILocation(line: 1328, column: 7, scope: !4731)
!5114 = !DILocation(line: 1328, column: 12, scope: !4731)
!5115 = !DILocation(line: 1329, column: 15, scope: !4731)
!5116 = !DILocation(line: 1329, column: 35, scope: !4731)
!5117 = !DILocation(line: 1329, column: 2, scope: !4731)
!5118 = !DILocation(line: 1331, column: 10, scope: !4731)
!5119 = !DILocation(line: 1331, column: 17, scope: !4731)
!5120 = !DILocation(line: 1331, column: 7, scope: !4731)
!5121 = !DILocation(line: 1332, column: 12, scope: !4731)
!5122 = !DILocation(line: 1332, column: 2, scope: !4731)
!5123 = !DILocation(line: 1333, column: 2, scope: !4731)
!5124 = !DILocation(line: 1333, column: 8, scope: !4731)
!5125 = !DILocation(line: 1333, column: 14, scope: !4731)
!5126 = !DILocation(line: 1335, column: 9, scope: !4731)
!5127 = !DILocation(line: 1335, column: 2, scope: !4731)
!5128 = !DILabel(scope: !4731, name: "err_put", file: !3, line: 1337)
!5129 = !DILocation(line: 1337, column: 1, scope: !4731)
!5130 = !DILocation(line: 1338, column: 14, scope: !4731)
!5131 = !DILocation(line: 1338, column: 21, scope: !4731)
!5132 = !DILocation(line: 1338, column: 2, scope: !4731)
!5133 = !DILocation(line: 1339, column: 17, scope: !4731)
!5134 = !DILocation(line: 1339, column: 9, scope: !4731)
!5135 = !DILocation(line: 1339, column: 2, scope: !4731)
!5136 = !DILocation(line: 1340, column: 1, scope: !4731)
!5137 = distinct !DISubprogram(name: "switchtec_init_pci", scope: !3, file: !3, line: 1512, type: !5138, scopeLine: 1514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5138 = !DISubroutineType(types: !5139)
!5139 = !{!282, !227, !231}
!5140 = !DILocalVariable(name: "stdev", arg: 1, scope: !5137, file: !3, line: 1512, type: !227)
!5141 = !DILocation(line: 1512, column: 53, scope: !5137)
!5142 = !DILocalVariable(name: "pdev", arg: 2, scope: !5137, file: !3, line: 1513, type: !231)
!5143 = !DILocation(line: 1513, column: 26, scope: !5137)
!5144 = !DILocalVariable(name: "rc", scope: !5137, file: !3, line: 1515, type: !282)
!5145 = !DILocation(line: 1515, column: 6, scope: !5137)
!5146 = !DILocalVariable(name: "map", scope: !5137, file: !3, line: 1516, type: !217)
!5147 = !DILocation(line: 1516, column: 16, scope: !5137)
!5148 = !DILocalVariable(name: "res_start", scope: !5137, file: !3, line: 1517, type: !216)
!5149 = !DILocation(line: 1517, column: 16, scope: !5137)
!5150 = !DILocalVariable(name: "res_len", scope: !5137, file: !3, line: 1517, type: !216)
!5151 = !DILocation(line: 1517, column: 27, scope: !5137)
!5152 = !DILocalVariable(name: "part_id", scope: !5137, file: !3, line: 1518, type: !295)
!5153 = !DILocation(line: 1518, column: 15, scope: !5137)
!5154 = !DILocation(line: 1520, column: 26, scope: !5137)
!5155 = !DILocation(line: 1520, column: 7, scope: !5137)
!5156 = !DILocation(line: 1520, column: 5, scope: !5137)
!5157 = !DILocation(line: 1521, column: 6, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1521, column: 6)
!5159 = !DILocation(line: 1521, column: 6, scope: !5137)
!5160 = !DILocation(line: 1522, column: 10, scope: !5158)
!5161 = !DILocation(line: 1522, column: 3, scope: !5158)
!5162 = !DILocation(line: 1524, column: 34, scope: !5137)
!5163 = !DILocation(line: 1524, column: 40, scope: !5137)
!5164 = !DILocation(line: 1524, column: 7, scope: !5137)
!5165 = !DILocation(line: 1524, column: 5, scope: !5137)
!5166 = !DILocation(line: 1525, column: 6, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1525, column: 6)
!5168 = !DILocation(line: 1525, column: 6, scope: !5137)
!5169 = !DILocation(line: 1526, column: 10, scope: !5167)
!5170 = !DILocation(line: 1526, column: 3, scope: !5167)
!5171 = !DILocation(line: 1528, column: 17, scope: !5137)
!5172 = !DILocation(line: 1528, column: 2, scope: !5137)
!5173 = !DILocation(line: 1530, column: 14, scope: !5137)
!5174 = !DILocation(line: 1530, column: 12, scope: !5137)
!5175 = !DILocation(line: 1531, column: 12, scope: !5137)
!5176 = !DILocation(line: 1531, column: 10, scope: !5137)
!5177 = !DILocation(line: 1533, column: 7, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1533, column: 6)
!5179 = !DILocation(line: 1533, column: 6, scope: !5137)
!5180 = !DILocation(line: 1535, column: 3, scope: !5178)
!5181 = !DILocation(line: 1537, column: 38, scope: !5137)
!5182 = !DILocation(line: 1537, column: 44, scope: !5137)
!5183 = !DILocation(line: 1537, column: 49, scope: !5137)
!5184 = !DILocation(line: 1537, column: 21, scope: !5137)
!5185 = !DILocation(line: 1537, column: 2, scope: !5137)
!5186 = !DILocation(line: 1537, column: 9, scope: !5137)
!5187 = !DILocation(line: 1537, column: 19, scope: !5137)
!5188 = !DILocation(line: 1539, column: 7, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1539, column: 6)
!5190 = !DILocation(line: 1539, column: 14, scope: !5189)
!5191 = !DILocation(line: 1539, column: 6, scope: !5137)
!5192 = !DILocation(line: 1540, column: 3, scope: !5189)
!5193 = !DILocation(line: 1542, column: 22, scope: !5137)
!5194 = !DILocation(line: 1542, column: 28, scope: !5137)
!5195 = !DILocation(line: 1543, column: 7, scope: !5137)
!5196 = !DILocation(line: 1543, column: 17, scope: !5137)
!5197 = !DILocation(line: 1544, column: 7, scope: !5137)
!5198 = !DILocation(line: 1544, column: 15, scope: !5137)
!5199 = !DILocation(line: 1542, column: 8, scope: !5137)
!5200 = !DILocation(line: 1542, column: 6, scope: !5137)
!5201 = !DILocation(line: 1545, column: 7, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1545, column: 6)
!5203 = !DILocation(line: 1545, column: 6, scope: !5137)
!5204 = !DILocation(line: 1546, column: 3, scope: !5202)
!5205 = !DILocation(line: 1548, column: 16, scope: !5137)
!5206 = !DILocation(line: 1548, column: 20, scope: !5137)
!5207 = !DILocation(line: 1548, column: 2, scope: !5137)
!5208 = !DILocation(line: 1548, column: 9, scope: !5137)
!5209 = !DILocation(line: 1548, column: 14, scope: !5137)
!5210 = !DILocation(line: 1549, column: 25, scope: !5137)
!5211 = !DILocation(line: 1549, column: 32, scope: !5137)
!5212 = !DILocation(line: 1549, column: 37, scope: !5137)
!5213 = !DILocation(line: 1549, column: 2, scope: !5137)
!5214 = !DILocation(line: 1549, column: 9, scope: !5137)
!5215 = !DILocation(line: 1549, column: 23, scope: !5137)
!5216 = !DILocation(line: 1550, column: 25, scope: !5137)
!5217 = !DILocation(line: 1550, column: 32, scope: !5137)
!5218 = !DILocation(line: 1550, column: 37, scope: !5137)
!5219 = !DILocation(line: 1550, column: 2, scope: !5137)
!5220 = !DILocation(line: 1550, column: 9, scope: !5137)
!5221 = !DILocation(line: 1550, column: 23, scope: !5137)
!5222 = !DILocation(line: 1551, column: 27, scope: !5137)
!5223 = !DILocation(line: 1551, column: 34, scope: !5137)
!5224 = !DILocation(line: 1551, column: 39, scope: !5137)
!5225 = !DILocation(line: 1551, column: 2, scope: !5137)
!5226 = !DILocation(line: 1551, column: 9, scope: !5137)
!5227 = !DILocation(line: 1551, column: 25, scope: !5137)
!5228 = !DILocation(line: 1552, column: 20, scope: !5137)
!5229 = !DILocation(line: 1552, column: 27, scope: !5137)
!5230 = !DILocation(line: 1552, column: 32, scope: !5137)
!5231 = !DILocation(line: 1552, column: 2, scope: !5137)
!5232 = !DILocation(line: 1552, column: 9, scope: !5137)
!5233 = !DILocation(line: 1552, column: 18, scope: !5137)
!5234 = !DILocation(line: 1554, column: 6, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1554, column: 6)
!5236 = !DILocation(line: 1554, column: 13, scope: !5235)
!5237 = !DILocation(line: 1554, column: 17, scope: !5235)
!5238 = !DILocation(line: 1554, column: 6, scope: !5137)
!5239 = !DILocation(line: 1555, column: 14, scope: !5235)
!5240 = !DILocation(line: 1555, column: 21, scope: !5235)
!5241 = !DILocation(line: 1555, column: 36, scope: !5235)
!5242 = !DILocation(line: 1555, column: 41, scope: !5235)
!5243 = !DILocation(line: 1555, column: 11, scope: !5235)
!5244 = !DILocation(line: 1555, column: 3, scope: !5235)
!5245 = !DILocation(line: 1556, column: 11, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5235, file: !3, line: 1556, column: 11)
!5247 = !DILocation(line: 1556, column: 18, scope: !5246)
!5248 = !DILocation(line: 1556, column: 22, scope: !5246)
!5249 = !DILocation(line: 1556, column: 11, scope: !5235)
!5250 = !DILocation(line: 1557, column: 14, scope: !5246)
!5251 = !DILocation(line: 1557, column: 21, scope: !5246)
!5252 = !DILocation(line: 1557, column: 36, scope: !5246)
!5253 = !DILocation(line: 1557, column: 41, scope: !5246)
!5254 = !DILocation(line: 1557, column: 11, scope: !5246)
!5255 = !DILocation(line: 1557, column: 3, scope: !5246)
!5256 = !DILocation(line: 1559, column: 3, scope: !5246)
!5257 = !DILocation(line: 1561, column: 29, scope: !5137)
!5258 = !DILocation(line: 1561, column: 21, scope: !5137)
!5259 = !DILocation(line: 1561, column: 2, scope: !5137)
!5260 = !DILocation(line: 1561, column: 9, scope: !5137)
!5261 = !DILocation(line: 1561, column: 19, scope: !5137)
!5262 = !DILocation(line: 1562, column: 36, scope: !5137)
!5263 = !DILocation(line: 1562, column: 43, scope: !5137)
!5264 = !DILocation(line: 1562, column: 53, scope: !5137)
!5265 = !DILocation(line: 1562, column: 27, scope: !5137)
!5266 = !DILocation(line: 1562, column: 2, scope: !5137)
!5267 = !DILocation(line: 1562, column: 9, scope: !5137)
!5268 = !DILocation(line: 1562, column: 25, scope: !5137)
!5269 = !DILocation(line: 1563, column: 29, scope: !5137)
!5270 = !DILocation(line: 1563, column: 36, scope: !5137)
!5271 = !DILocation(line: 1563, column: 41, scope: !5137)
!5272 = !DILocation(line: 1563, column: 2, scope: !5137)
!5273 = !DILocation(line: 1563, column: 9, scope: !5137)
!5274 = !DILocation(line: 1563, column: 27, scope: !5137)
!5275 = !DILocation(line: 1564, column: 26, scope: !5137)
!5276 = !DILocation(line: 1564, column: 33, scope: !5137)
!5277 = !DILocation(line: 1564, column: 51, scope: !5137)
!5278 = !DILocation(line: 1564, column: 58, scope: !5137)
!5279 = !DILocation(line: 1564, column: 2, scope: !5137)
!5280 = !DILocation(line: 1564, column: 9, scope: !5137)
!5281 = !DILocation(line: 1564, column: 23, scope: !5137)
!5282 = !DILocation(line: 1565, column: 24, scope: !5137)
!5283 = !DILocation(line: 1565, column: 31, scope: !5137)
!5284 = !DILocation(line: 1565, column: 36, scope: !5137)
!5285 = !DILocation(line: 1565, column: 2, scope: !5137)
!5286 = !DILocation(line: 1565, column: 9, scope: !5137)
!5287 = !DILocation(line: 1565, column: 22, scope: !5137)
!5288 = !DILocation(line: 1567, column: 6, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1567, column: 6)
!5290 = !DILocation(line: 1567, column: 13, scope: !5289)
!5291 = !DILocation(line: 1567, column: 29, scope: !5289)
!5292 = !DILocation(line: 1567, column: 6, scope: !5137)
!5293 = !DILocation(line: 1568, column: 3, scope: !5289)
!5294 = !DILocation(line: 1568, column: 10, scope: !5289)
!5295 = !DILocation(line: 1568, column: 26, scope: !5289)
!5296 = !DILocation(line: 1570, column: 11, scope: !5137)
!5297 = !DILocation(line: 1570, column: 2, scope: !5137)
!5298 = !DILocation(line: 1572, column: 18, scope: !5137)
!5299 = !DILocation(line: 1572, column: 24, scope: !5137)
!5300 = !DILocation(line: 1572, column: 2, scope: !5137)
!5301 = !DILocation(line: 1574, column: 7, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1574, column: 6)
!5303 = !DILocation(line: 1574, column: 6, scope: !5137)
!5304 = !DILocation(line: 1575, column: 3, scope: !5302)
!5305 = !DILocation(line: 1577, column: 16, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1577, column: 6)
!5307 = !DILocation(line: 1577, column: 23, scope: !5306)
!5308 = !DILocation(line: 1577, column: 34, scope: !5306)
!5309 = !DILocation(line: 1577, column: 15, scope: !5306)
!5310 = !DILocation(line: 1577, column: 6, scope: !5306)
!5311 = !DILocation(line: 1577, column: 43, scope: !5306)
!5312 = !DILocation(line: 1577, column: 6, scope: !5137)
!5313 = !DILocation(line: 1578, column: 3, scope: !5306)
!5314 = !DILocation(line: 1580, column: 40, scope: !5137)
!5315 = !DILocation(line: 1580, column: 47, scope: !5137)
!5316 = !DILocation(line: 1580, column: 53, scope: !5137)
!5317 = !DILocation(line: 1582, column: 12, scope: !5137)
!5318 = !DILocation(line: 1582, column: 19, scope: !5137)
!5319 = !DILocation(line: 1580, column: 20, scope: !5137)
!5320 = !DILocation(line: 1580, column: 2, scope: !5137)
!5321 = !DILocation(line: 1580, column: 9, scope: !5137)
!5322 = !DILocation(line: 1580, column: 18, scope: !5137)
!5323 = !DILocation(line: 1584, column: 6, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1584, column: 6)
!5325 = !DILocation(line: 1584, column: 13, scope: !5324)
!5326 = !DILocation(line: 1584, column: 22, scope: !5324)
!5327 = !DILocation(line: 1584, column: 6, scope: !5137)
!5328 = !DILocation(line: 1585, column: 3, scope: !5324)
!5329 = !DILocation(line: 1587, column: 2, scope: !5137)
!5330 = !DILocation(line: 1588, column: 1, scope: !5137)
!5331 = distinct !DISubprogram(name: "switchtec_init_isr", scope: !3, file: !3, line: 1434, type: !5332, scopeLine: 1435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5332 = !DISubroutineType(types: !5333)
!5333 = !{!282, !227}
!5334 = !DILocalVariable(name: "stdev", arg: 1, scope: !5331, file: !3, line: 1434, type: !227)
!5335 = !DILocation(line: 1434, column: 53, scope: !5331)
!5336 = !DILocalVariable(name: "nvecs", scope: !5331, file: !3, line: 1436, type: !282)
!5337 = !DILocation(line: 1436, column: 6, scope: !5331)
!5338 = !DILocalVariable(name: "event_irq", scope: !5331, file: !3, line: 1437, type: !282)
!5339 = !DILocation(line: 1437, column: 6, scope: !5331)
!5340 = !DILocalVariable(name: "dma_mrpc_irq", scope: !5331, file: !3, line: 1438, type: !282)
!5341 = !DILocation(line: 1438, column: 6, scope: !5331)
!5342 = !DILocalVariable(name: "rc", scope: !5331, file: !3, line: 1439, type: !282)
!5343 = !DILocation(line: 1439, column: 6, scope: !5331)
!5344 = !DILocation(line: 1441, column: 6, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1441, column: 6)
!5346 = !DILocation(line: 1441, column: 12, scope: !5345)
!5347 = !DILocation(line: 1441, column: 6, scope: !5331)
!5348 = !DILocation(line: 1442, column: 9, scope: !5345)
!5349 = !DILocation(line: 1442, column: 3, scope: !5345)
!5350 = !DILocation(line: 1444, column: 32, scope: !5331)
!5351 = !DILocation(line: 1444, column: 39, scope: !5331)
!5352 = !DILocation(line: 1444, column: 48, scope: !5331)
!5353 = !DILocation(line: 1444, column: 10, scope: !5331)
!5354 = !DILocation(line: 1444, column: 8, scope: !5331)
!5355 = !DILocation(line: 1447, column: 6, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1447, column: 6)
!5357 = !DILocation(line: 1447, column: 12, scope: !5356)
!5358 = !DILocation(line: 1447, column: 6, scope: !5331)
!5359 = !DILocation(line: 1448, column: 10, scope: !5356)
!5360 = !DILocation(line: 1448, column: 3, scope: !5356)
!5361 = !DILocation(line: 1450, column: 24, scope: !5331)
!5362 = !DILocation(line: 1450, column: 31, scope: !5331)
!5363 = !DILocation(line: 1450, column: 46, scope: !5331)
!5364 = !DILocation(line: 1450, column: 23, scope: !5331)
!5365 = !DILocation(line: 1450, column: 14, scope: !5331)
!5366 = !DILocation(line: 1450, column: 12, scope: !5331)
!5367 = !DILocation(line: 1451, column: 6, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1451, column: 6)
!5369 = !DILocation(line: 1451, column: 16, scope: !5368)
!5370 = !DILocation(line: 1451, column: 20, scope: !5368)
!5371 = !DILocation(line: 1451, column: 23, scope: !5368)
!5372 = !DILocation(line: 1451, column: 36, scope: !5368)
!5373 = !DILocation(line: 1451, column: 33, scope: !5368)
!5374 = !DILocation(line: 1451, column: 6, scope: !5331)
!5375 = !DILocation(line: 1452, column: 3, scope: !5368)
!5376 = !DILocation(line: 1454, column: 29, scope: !5331)
!5377 = !DILocation(line: 1454, column: 36, scope: !5331)
!5378 = !DILocation(line: 1454, column: 42, scope: !5331)
!5379 = !DILocation(line: 1454, column: 14, scope: !5331)
!5380 = !DILocation(line: 1454, column: 12, scope: !5331)
!5381 = !DILocation(line: 1455, column: 6, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1455, column: 6)
!5383 = !DILocation(line: 1455, column: 16, scope: !5382)
!5384 = !DILocation(line: 1455, column: 6, scope: !5331)
!5385 = !DILocation(line: 1456, column: 10, scope: !5382)
!5386 = !DILocation(line: 1456, column: 3, scope: !5382)
!5387 = !DILocation(line: 1458, column: 25, scope: !5331)
!5388 = !DILocation(line: 1458, column: 32, scope: !5331)
!5389 = !DILocation(line: 1458, column: 38, scope: !5331)
!5390 = !DILocation(line: 1458, column: 43, scope: !5331)
!5391 = !DILocation(line: 1460, column: 21, scope: !5331)
!5392 = !DILocation(line: 1458, column: 7, scope: !5331)
!5393 = !DILocation(line: 1458, column: 5, scope: !5331)
!5394 = !DILocation(line: 1462, column: 6, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1462, column: 6)
!5396 = !DILocation(line: 1462, column: 6, scope: !5331)
!5397 = !DILocation(line: 1463, column: 10, scope: !5395)
!5398 = !DILocation(line: 1463, column: 3, scope: !5395)
!5399 = !DILocation(line: 1465, column: 7, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1465, column: 6)
!5401 = !DILocation(line: 1465, column: 14, scope: !5400)
!5402 = !DILocation(line: 1465, column: 6, scope: !5331)
!5403 = !DILocation(line: 1466, column: 10, scope: !5400)
!5404 = !DILocation(line: 1466, column: 3, scope: !5400)
!5405 = !DILocation(line: 1468, column: 27, scope: !5331)
!5406 = !DILocation(line: 1468, column: 34, scope: !5331)
!5407 = !DILocation(line: 1468, column: 45, scope: !5331)
!5408 = !DILocation(line: 1468, column: 26, scope: !5331)
!5409 = !DILocation(line: 1468, column: 17, scope: !5331)
!5410 = !DILocation(line: 1468, column: 15, scope: !5331)
!5411 = !DILocation(line: 1469, column: 6, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1469, column: 6)
!5413 = !DILocation(line: 1469, column: 19, scope: !5412)
!5414 = !DILocation(line: 1469, column: 23, scope: !5412)
!5415 = !DILocation(line: 1469, column: 26, scope: !5412)
!5416 = !DILocation(line: 1469, column: 42, scope: !5412)
!5417 = !DILocation(line: 1469, column: 39, scope: !5412)
!5418 = !DILocation(line: 1469, column: 6, scope: !5331)
!5419 = !DILocation(line: 1470, column: 3, scope: !5412)
!5420 = !DILocation(line: 1472, column: 33, scope: !5331)
!5421 = !DILocation(line: 1472, column: 40, scope: !5331)
!5422 = !DILocation(line: 1472, column: 46, scope: !5331)
!5423 = !DILocation(line: 1472, column: 18, scope: !5331)
!5424 = !DILocation(line: 1472, column: 16, scope: !5331)
!5425 = !DILocation(line: 1473, column: 6, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1473, column: 6)
!5427 = !DILocation(line: 1473, column: 19, scope: !5426)
!5428 = !DILocation(line: 1473, column: 6, scope: !5331)
!5429 = !DILocation(line: 1474, column: 10, scope: !5426)
!5430 = !DILocation(line: 1474, column: 3, scope: !5426)
!5431 = !DILocation(line: 1476, column: 25, scope: !5331)
!5432 = !DILocation(line: 1476, column: 32, scope: !5331)
!5433 = !DILocation(line: 1476, column: 38, scope: !5331)
!5434 = !DILocation(line: 1476, column: 43, scope: !5331)
!5435 = !DILocation(line: 1478, column: 21, scope: !5331)
!5436 = !DILocation(line: 1476, column: 7, scope: !5331)
!5437 = !DILocation(line: 1476, column: 5, scope: !5331)
!5438 = !DILocation(line: 1480, column: 9, scope: !5331)
!5439 = !DILocation(line: 1480, column: 2, scope: !5331)
!5440 = !DILocation(line: 1481, column: 1, scope: !5331)
!5441 = distinct !DISubprogram(name: "enable_link_state_events", scope: !3, file: !3, line: 1232, type: !4499, scopeLine: 1233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5442 = !DILocalVariable(name: "stdev", arg: 1, scope: !5441, file: !3, line: 1232, type: !227)
!5443 = !DILocation(line: 1232, column: 60, scope: !5441)
!5444 = !DILocalVariable(name: "idx", scope: !5441, file: !3, line: 1234, type: !282)
!5445 = !DILocation(line: 1234, column: 6, scope: !5441)
!5446 = !DILocation(line: 1236, column: 11, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 1236, column: 2)
!5448 = !DILocation(line: 1236, column: 7, scope: !5447)
!5449 = !DILocation(line: 1236, column: 16, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 1236, column: 2)
!5451 = !DILocation(line: 1236, column: 22, scope: !5450)
!5452 = !DILocation(line: 1236, column: 29, scope: !5450)
!5453 = !DILocation(line: 1236, column: 20, scope: !5450)
!5454 = !DILocation(line: 1236, column: 2, scope: !5447)
!5455 = !DILocation(line: 1239, column: 7, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 1236, column: 51)
!5457 = !DILocation(line: 1239, column: 14, scope: !5456)
!5458 = !DILocation(line: 1239, column: 27, scope: !5456)
!5459 = !DILocation(line: 1239, column: 32, scope: !5456)
!5460 = !DILocation(line: 1239, column: 6, scope: !5456)
!5461 = !DILocation(line: 1237, column: 3, scope: !5456)
!5462 = !DILocation(line: 1240, column: 2, scope: !5456)
!5463 = !DILocation(line: 1236, column: 47, scope: !5450)
!5464 = !DILocation(line: 1236, column: 2, scope: !5450)
!5465 = distinct !{!5465, !5454, !5466}
!5466 = !DILocation(line: 1240, column: 2, scope: !5447)
!5467 = !DILocation(line: 1241, column: 1, scope: !5441)
!5468 = distinct !DISubprogram(name: "enable_dma_mrpc", scope: !3, file: !3, line: 1243, type: !4499, scopeLine: 1244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5469 = !DILocalVariable(name: "stdev", arg: 1, scope: !5468, file: !3, line: 1243, type: !227)
!5470 = !DILocation(line: 1243, column: 51, scope: !5468)
!5471 = !DILocation(line: 1245, column: 9, scope: !5468)
!5472 = !DILocation(line: 1245, column: 16, scope: !5468)
!5473 = !DILocation(line: 1245, column: 36, scope: !5468)
!5474 = !DILocation(line: 1245, column: 43, scope: !5468)
!5475 = !DILocation(line: 1245, column: 54, scope: !5468)
!5476 = !DILocation(line: 1245, column: 35, scope: !5468)
!5477 = !DILocation(line: 1245, column: 2, scope: !5468)
!5478 = !DILocation(line: 1246, column: 15, scope: !5468)
!5479 = !DILocation(line: 1246, column: 2, scope: !5468)
!5480 = !DILocation(line: 1247, column: 36, scope: !5468)
!5481 = !DILocation(line: 1247, column: 43, scope: !5468)
!5482 = !DILocation(line: 1247, column: 54, scope: !5468)
!5483 = !DILocation(line: 1247, column: 35, scope: !5468)
!5484 = !DILocation(line: 1247, column: 2, scope: !5468)
!5485 = !DILocation(line: 1248, column: 1, scope: !5468)
!5486 = distinct !DISubprogram(name: "stdev_kill", scope: !3, file: !3, line: 1264, type: !4499, scopeLine: 1265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5487 = !DILocalVariable(name: "stdev", arg: 1, scope: !5486, file: !3, line: 1264, type: !227)
!5488 = !DILocation(line: 1264, column: 46, scope: !5486)
!5489 = !DILocalVariable(name: "stuser", scope: !5486, file: !3, line: 1266, type: !4516)
!5490 = !DILocation(line: 1266, column: 25, scope: !5486)
!5491 = !DILocalVariable(name: "tmpuser", scope: !5486, file: !3, line: 1266, type: !4516)
!5492 = !DILocation(line: 1266, column: 34, scope: !5486)
!5493 = !DILocation(line: 1268, column: 19, scope: !5486)
!5494 = !DILocation(line: 1268, column: 26, scope: !5486)
!5495 = !DILocation(line: 1268, column: 2, scope: !5486)
!5496 = !DILocation(line: 1270, column: 28, scope: !5486)
!5497 = !DILocation(line: 1270, column: 35, scope: !5486)
!5498 = !DILocation(line: 1270, column: 2, scope: !5486)
!5499 = !DILocation(line: 1273, column: 14, scope: !5486)
!5500 = !DILocation(line: 1273, column: 21, scope: !5486)
!5501 = !DILocation(line: 1273, column: 2, scope: !5486)
!5502 = !DILocation(line: 1274, column: 2, scope: !5486)
!5503 = !DILocation(line: 1274, column: 9, scope: !5486)
!5504 = !DILocation(line: 1274, column: 15, scope: !5486)
!5505 = !DILocalVariable(name: "__mptr", scope: !5506, file: !3, line: 1277, type: !217)
!5506 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 1277, column: 2)
!5507 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1277, column: 2)
!5508 = !DILocation(line: 1277, column: 2, scope: !5506)
!5509 = !DILocation(line: 1277, column: 2, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 1277, column: 2)
!5511 = !DILocation(line: 1277, column: 2, scope: !5507)
!5512 = !DILocalVariable(name: "__mptr", scope: !5513, file: !3, line: 1277, type: !217)
!5513 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 1277, column: 2)
!5514 = !DILocation(line: 1277, column: 2, scope: !5513)
!5515 = !DILocation(line: 1277, column: 2, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 1277, column: 2)
!5517 = !DILocation(line: 1277, column: 2, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 1277, column: 2)
!5519 = !DILocation(line: 1278, column: 3, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 1277, column: 70)
!5521 = !DILocation(line: 1278, column: 11, scope: !5520)
!5522 = !DILocation(line: 1278, column: 20, scope: !5520)
!5523 = !DILocation(line: 1279, column: 3, scope: !5520)
!5524 = !DILocation(line: 1280, column: 18, scope: !5520)
!5525 = !DILocation(line: 1280, column: 26, scope: !5520)
!5526 = !DILocation(line: 1280, column: 3, scope: !5520)
!5527 = !DILocation(line: 1281, column: 14, scope: !5520)
!5528 = !DILocation(line: 1281, column: 3, scope: !5520)
!5529 = !DILocation(line: 1282, column: 2, scope: !5520)
!5530 = !DILocalVariable(name: "__mptr", scope: !5531, file: !3, line: 1277, type: !217)
!5531 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 1277, column: 2)
!5532 = !DILocation(line: 1277, column: 2, scope: !5531)
!5533 = !DILocation(line: 1277, column: 2, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 1277, column: 2)
!5535 = distinct !{!5535, !5511, !5536}
!5536 = !DILocation(line: 1282, column: 2, scope: !5507)
!5537 = !DILocation(line: 1284, column: 16, scope: !5486)
!5538 = !DILocation(line: 1284, column: 23, scope: !5486)
!5539 = !DILocation(line: 1284, column: 2, scope: !5486)
!5540 = !DILocation(line: 1287, column: 2, scope: !5486)
!5541 = !DILocation(line: 1288, column: 1, scope: !5486)
!5542 = distinct !DISubprogram(name: "kzalloc_node", scope: !137, file: !137, line: 673, type: !5543, scopeLine: 674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5543 = !DISubroutineType(types: !5544)
!5544 = !{!217, !427, !218, !282}
!5545 = !DILocalVariable(name: "size", arg: 1, scope: !5546, file: !137, line: 416, type: !427)
!5546 = distinct !DISubprogram(name: "__kmalloc_node", scope: !137, file: !137, line: 416, type: !5543, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5547 = !DILocation(line: 416, column: 52, scope: !5546, inlinedAt: !5548)
!5548 = distinct !DILocation(line: 575, column: 9, scope: !5549, inlinedAt: !5550)
!5549 = distinct !DISubprogram(name: "kmalloc_node", scope: !137, file: !137, line: 560, type: !5543, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5550 = distinct !DILocation(line: 675, column: 9, scope: !5542)
!5551 = !DILocalVariable(name: "flags", arg: 2, scope: !5546, file: !137, line: 416, type: !218)
!5552 = !DILocation(line: 416, column: 64, scope: !5546, inlinedAt: !5548)
!5553 = !DILocalVariable(name: "node", arg: 3, scope: !5546, file: !137, line: 416, type: !282)
!5554 = !DILocation(line: 416, column: 75, scope: !5546, inlinedAt: !5548)
!5555 = !DILocalVariable(name: "s", arg: 1, scope: !5556, file: !137, line: 421, type: !1032)
!5556 = distinct !DISubprogram(name: "kmem_cache_alloc_node", scope: !137, file: !137, line: 421, type: !5557, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5557 = !DISubroutineType(types: !5558)
!5558 = !{!217, !1032, !218, !282}
!5559 = !DILocation(line: 421, column: 71, scope: !5556, inlinedAt: !5560)
!5560 = distinct !DILocation(line: 459, column: 14, scope: !5561, inlinedAt: !5564)
!5561 = distinct !DISubprogram(name: "kmem_cache_alloc_node_trace", scope: !137, file: !137, line: 455, type: !5562, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5562 = !DISubroutineType(types: !5563)
!5563 = !{!217, !1032, !218, !282, !427}
!5564 = distinct !DILocation(line: 570, column: 10, scope: !5565, inlinedAt: !5550)
!5565 = distinct !DILexicalBlock(scope: !5566, file: !137, line: 564, column: 35)
!5566 = distinct !DILexicalBlock(scope: !5549, file: !137, line: 563, column: 6)
!5567 = !DILocalVariable(name: "flags", arg: 2, scope: !5556, file: !137, line: 421, type: !218)
!5568 = !DILocation(line: 421, column: 80, scope: !5556, inlinedAt: !5560)
!5569 = !DILocalVariable(name: "node", arg: 3, scope: !5556, file: !137, line: 421, type: !282)
!5570 = !DILocation(line: 421, column: 91, scope: !5556, inlinedAt: !5560)
!5571 = !DILocalVariable(name: "s", arg: 1, scope: !5561, file: !137, line: 455, type: !1032)
!5572 = !DILocation(line: 455, column: 48, scope: !5561, inlinedAt: !5564)
!5573 = !DILocalVariable(name: "gfpflags", arg: 2, scope: !5561, file: !137, line: 456, type: !218)
!5574 = !DILocation(line: 456, column: 16, scope: !5561, inlinedAt: !5564)
!5575 = !DILocalVariable(name: "node", arg: 3, scope: !5561, file: !137, line: 457, type: !282)
!5576 = !DILocation(line: 457, column: 14, scope: !5561, inlinedAt: !5564)
!5577 = !DILocalVariable(name: "size", arg: 4, scope: !5561, file: !137, line: 457, type: !427)
!5578 = !DILocation(line: 457, column: 27, scope: !5561, inlinedAt: !5564)
!5579 = !DILocalVariable(name: "ret", scope: !5561, file: !137, line: 459, type: !217)
!5580 = !DILocation(line: 459, column: 8, scope: !5561, inlinedAt: !5564)
!5581 = !DILocalVariable(name: "flags", arg: 1, scope: !5582, file: !137, line: 318, type: !218)
!5582 = distinct !DISubprogram(name: "kmalloc_type", scope: !137, file: !137, line: 318, type: !5583, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5583 = !DISubroutineType(types: !5584)
!5584 = !{!136, !218}
!5585 = !DILocation(line: 318, column: 67, scope: !5582, inlinedAt: !5586)
!5586 = distinct !DILocation(line: 571, column: 20, scope: !5565, inlinedAt: !5550)
!5587 = !DILocalVariable(name: "size", arg: 1, scope: !5588, file: !137, line: 346, type: !427)
!5588 = distinct !DISubprogram(name: "kmalloc_index", scope: !137, file: !137, line: 346, type: !5589, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5589 = !DISubroutineType(types: !5590)
!5590 = !{!7, !427}
!5591 = !DILocation(line: 346, column: 58, scope: !5588, inlinedAt: !5592)
!5592 = distinct !DILocation(line: 565, column: 20, scope: !5565, inlinedAt: !5550)
!5593 = !DILocalVariable(name: "size", arg: 1, scope: !5549, file: !137, line: 560, type: !427)
!5594 = !DILocation(line: 560, column: 50, scope: !5549, inlinedAt: !5550)
!5595 = !DILocalVariable(name: "flags", arg: 2, scope: !5549, file: !137, line: 560, type: !218)
!5596 = !DILocation(line: 560, column: 62, scope: !5549, inlinedAt: !5550)
!5597 = !DILocalVariable(name: "node", arg: 3, scope: !5549, file: !137, line: 560, type: !282)
!5598 = !DILocation(line: 560, column: 73, scope: !5549, inlinedAt: !5550)
!5599 = !DILocalVariable(name: "i", scope: !5565, file: !137, line: 565, type: !7)
!5600 = !DILocation(line: 565, column: 16, scope: !5565, inlinedAt: !5550)
!5601 = !DILocalVariable(name: "size", arg: 1, scope: !5542, file: !137, line: 673, type: !427)
!5602 = !DILocation(line: 673, column: 41, scope: !5542)
!5603 = !DILocalVariable(name: "flags", arg: 2, scope: !5542, file: !137, line: 673, type: !218)
!5604 = !DILocation(line: 673, column: 53, scope: !5542)
!5605 = !DILocalVariable(name: "node", arg: 3, scope: !5542, file: !137, line: 673, type: !282)
!5606 = !DILocation(line: 673, column: 64, scope: !5542)
!5607 = !DILocation(line: 675, column: 22, scope: !5542)
!5608 = !DILocation(line: 675, column: 28, scope: !5542)
!5609 = !DILocation(line: 675, column: 34, scope: !5542)
!5610 = !DILocation(line: 675, column: 48, scope: !5542)
!5611 = !DILocation(line: 563, column: 27, scope: !5566, inlinedAt: !5550)
!5612 = !DILocation(line: 563, column: 6, scope: !5566, inlinedAt: !5550)
!5613 = !DILocation(line: 563, column: 33, scope: !5566, inlinedAt: !5550)
!5614 = !DILocation(line: 564, column: 3, scope: !5566, inlinedAt: !5550)
!5615 = !DILocation(line: 564, column: 8, scope: !5566, inlinedAt: !5550)
!5616 = !DILocation(line: 563, column: 6, scope: !5549, inlinedAt: !5550)
!5617 = !DILocation(line: 565, column: 34, scope: !5565, inlinedAt: !5550)
!5618 = !DILocation(line: 348, column: 7, scope: !5619, inlinedAt: !5592)
!5619 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 348, column: 6)
!5620 = !DILocation(line: 348, column: 6, scope: !5588, inlinedAt: !5592)
!5621 = !DILocation(line: 349, column: 3, scope: !5619, inlinedAt: !5592)
!5622 = !DILocation(line: 351, column: 6, scope: !5623, inlinedAt: !5592)
!5623 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 351, column: 6)
!5624 = !DILocation(line: 351, column: 11, scope: !5623, inlinedAt: !5592)
!5625 = !DILocation(line: 351, column: 6, scope: !5588, inlinedAt: !5592)
!5626 = !DILocation(line: 352, column: 3, scope: !5623, inlinedAt: !5592)
!5627 = !DILocation(line: 354, column: 32, scope: !5628, inlinedAt: !5592)
!5628 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 354, column: 6)
!5629 = !DILocation(line: 354, column: 37, scope: !5628, inlinedAt: !5592)
!5630 = !DILocation(line: 354, column: 42, scope: !5628, inlinedAt: !5592)
!5631 = !DILocation(line: 354, column: 45, scope: !5628, inlinedAt: !5592)
!5632 = !DILocation(line: 354, column: 50, scope: !5628, inlinedAt: !5592)
!5633 = !DILocation(line: 354, column: 6, scope: !5588, inlinedAt: !5592)
!5634 = !DILocation(line: 355, column: 3, scope: !5628, inlinedAt: !5592)
!5635 = !DILocation(line: 356, column: 32, scope: !5636, inlinedAt: !5592)
!5636 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 356, column: 6)
!5637 = !DILocation(line: 356, column: 37, scope: !5636, inlinedAt: !5592)
!5638 = !DILocation(line: 356, column: 43, scope: !5636, inlinedAt: !5592)
!5639 = !DILocation(line: 356, column: 46, scope: !5636, inlinedAt: !5592)
!5640 = !DILocation(line: 356, column: 51, scope: !5636, inlinedAt: !5592)
!5641 = !DILocation(line: 356, column: 6, scope: !5588, inlinedAt: !5592)
!5642 = !DILocation(line: 357, column: 3, scope: !5636, inlinedAt: !5592)
!5643 = !DILocation(line: 358, column: 6, scope: !5644, inlinedAt: !5592)
!5644 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 358, column: 6)
!5645 = !DILocation(line: 358, column: 11, scope: !5644, inlinedAt: !5592)
!5646 = !DILocation(line: 358, column: 6, scope: !5588, inlinedAt: !5592)
!5647 = !DILocation(line: 358, column: 26, scope: !5644, inlinedAt: !5592)
!5648 = !DILocation(line: 359, column: 6, scope: !5649, inlinedAt: !5592)
!5649 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 359, column: 6)
!5650 = !DILocation(line: 359, column: 11, scope: !5649, inlinedAt: !5592)
!5651 = !DILocation(line: 359, column: 6, scope: !5588, inlinedAt: !5592)
!5652 = !DILocation(line: 359, column: 26, scope: !5649, inlinedAt: !5592)
!5653 = !DILocation(line: 360, column: 6, scope: !5654, inlinedAt: !5592)
!5654 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 360, column: 6)
!5655 = !DILocation(line: 360, column: 11, scope: !5654, inlinedAt: !5592)
!5656 = !DILocation(line: 360, column: 6, scope: !5588, inlinedAt: !5592)
!5657 = !DILocation(line: 360, column: 26, scope: !5654, inlinedAt: !5592)
!5658 = !DILocation(line: 361, column: 6, scope: !5659, inlinedAt: !5592)
!5659 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 361, column: 6)
!5660 = !DILocation(line: 361, column: 11, scope: !5659, inlinedAt: !5592)
!5661 = !DILocation(line: 361, column: 6, scope: !5588, inlinedAt: !5592)
!5662 = !DILocation(line: 361, column: 26, scope: !5659, inlinedAt: !5592)
!5663 = !DILocation(line: 362, column: 6, scope: !5664, inlinedAt: !5592)
!5664 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 362, column: 6)
!5665 = !DILocation(line: 362, column: 11, scope: !5664, inlinedAt: !5592)
!5666 = !DILocation(line: 362, column: 6, scope: !5588, inlinedAt: !5592)
!5667 = !DILocation(line: 362, column: 26, scope: !5664, inlinedAt: !5592)
!5668 = !DILocation(line: 363, column: 6, scope: !5669, inlinedAt: !5592)
!5669 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 363, column: 6)
!5670 = !DILocation(line: 363, column: 11, scope: !5669, inlinedAt: !5592)
!5671 = !DILocation(line: 363, column: 6, scope: !5588, inlinedAt: !5592)
!5672 = !DILocation(line: 363, column: 26, scope: !5669, inlinedAt: !5592)
!5673 = !DILocation(line: 364, column: 6, scope: !5674, inlinedAt: !5592)
!5674 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 364, column: 6)
!5675 = !DILocation(line: 364, column: 11, scope: !5674, inlinedAt: !5592)
!5676 = !DILocation(line: 364, column: 6, scope: !5588, inlinedAt: !5592)
!5677 = !DILocation(line: 364, column: 26, scope: !5674, inlinedAt: !5592)
!5678 = !DILocation(line: 365, column: 6, scope: !5679, inlinedAt: !5592)
!5679 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 365, column: 6)
!5680 = !DILocation(line: 365, column: 11, scope: !5679, inlinedAt: !5592)
!5681 = !DILocation(line: 365, column: 6, scope: !5588, inlinedAt: !5592)
!5682 = !DILocation(line: 365, column: 26, scope: !5679, inlinedAt: !5592)
!5683 = !DILocation(line: 366, column: 6, scope: !5684, inlinedAt: !5592)
!5684 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 366, column: 6)
!5685 = !DILocation(line: 366, column: 11, scope: !5684, inlinedAt: !5592)
!5686 = !DILocation(line: 366, column: 6, scope: !5588, inlinedAt: !5592)
!5687 = !DILocation(line: 366, column: 26, scope: !5684, inlinedAt: !5592)
!5688 = !DILocation(line: 367, column: 6, scope: !5689, inlinedAt: !5592)
!5689 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 367, column: 6)
!5690 = !DILocation(line: 367, column: 11, scope: !5689, inlinedAt: !5592)
!5691 = !DILocation(line: 367, column: 6, scope: !5588, inlinedAt: !5592)
!5692 = !DILocation(line: 367, column: 26, scope: !5689, inlinedAt: !5592)
!5693 = !DILocation(line: 368, column: 6, scope: !5694, inlinedAt: !5592)
!5694 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 368, column: 6)
!5695 = !DILocation(line: 368, column: 11, scope: !5694, inlinedAt: !5592)
!5696 = !DILocation(line: 368, column: 6, scope: !5588, inlinedAt: !5592)
!5697 = !DILocation(line: 368, column: 26, scope: !5694, inlinedAt: !5592)
!5698 = !DILocation(line: 369, column: 6, scope: !5699, inlinedAt: !5592)
!5699 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 369, column: 6)
!5700 = !DILocation(line: 369, column: 11, scope: !5699, inlinedAt: !5592)
!5701 = !DILocation(line: 369, column: 6, scope: !5588, inlinedAt: !5592)
!5702 = !DILocation(line: 369, column: 26, scope: !5699, inlinedAt: !5592)
!5703 = !DILocation(line: 370, column: 6, scope: !5704, inlinedAt: !5592)
!5704 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 370, column: 6)
!5705 = !DILocation(line: 370, column: 11, scope: !5704, inlinedAt: !5592)
!5706 = !DILocation(line: 370, column: 6, scope: !5588, inlinedAt: !5592)
!5707 = !DILocation(line: 370, column: 26, scope: !5704, inlinedAt: !5592)
!5708 = !DILocation(line: 371, column: 6, scope: !5709, inlinedAt: !5592)
!5709 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 371, column: 6)
!5710 = !DILocation(line: 371, column: 11, scope: !5709, inlinedAt: !5592)
!5711 = !DILocation(line: 371, column: 6, scope: !5588, inlinedAt: !5592)
!5712 = !DILocation(line: 371, column: 26, scope: !5709, inlinedAt: !5592)
!5713 = !DILocation(line: 372, column: 6, scope: !5714, inlinedAt: !5592)
!5714 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 372, column: 6)
!5715 = !DILocation(line: 372, column: 11, scope: !5714, inlinedAt: !5592)
!5716 = !DILocation(line: 372, column: 6, scope: !5588, inlinedAt: !5592)
!5717 = !DILocation(line: 372, column: 26, scope: !5714, inlinedAt: !5592)
!5718 = !DILocation(line: 373, column: 6, scope: !5719, inlinedAt: !5592)
!5719 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 373, column: 6)
!5720 = !DILocation(line: 373, column: 11, scope: !5719, inlinedAt: !5592)
!5721 = !DILocation(line: 373, column: 6, scope: !5588, inlinedAt: !5592)
!5722 = !DILocation(line: 373, column: 26, scope: !5719, inlinedAt: !5592)
!5723 = !DILocation(line: 374, column: 6, scope: !5724, inlinedAt: !5592)
!5724 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 374, column: 6)
!5725 = !DILocation(line: 374, column: 11, scope: !5724, inlinedAt: !5592)
!5726 = !DILocation(line: 374, column: 6, scope: !5588, inlinedAt: !5592)
!5727 = !DILocation(line: 374, column: 26, scope: !5724, inlinedAt: !5592)
!5728 = !DILocation(line: 375, column: 6, scope: !5729, inlinedAt: !5592)
!5729 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 375, column: 6)
!5730 = !DILocation(line: 375, column: 11, scope: !5729, inlinedAt: !5592)
!5731 = !DILocation(line: 375, column: 6, scope: !5588, inlinedAt: !5592)
!5732 = !DILocation(line: 375, column: 27, scope: !5729, inlinedAt: !5592)
!5733 = !DILocation(line: 376, column: 6, scope: !5734, inlinedAt: !5592)
!5734 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 376, column: 6)
!5735 = !DILocation(line: 376, column: 11, scope: !5734, inlinedAt: !5592)
!5736 = !DILocation(line: 376, column: 6, scope: !5588, inlinedAt: !5592)
!5737 = !DILocation(line: 376, column: 32, scope: !5734, inlinedAt: !5592)
!5738 = !DILocation(line: 377, column: 6, scope: !5739, inlinedAt: !5592)
!5739 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 377, column: 6)
!5740 = !DILocation(line: 377, column: 11, scope: !5739, inlinedAt: !5592)
!5741 = !DILocation(line: 377, column: 6, scope: !5588, inlinedAt: !5592)
!5742 = !DILocation(line: 377, column: 32, scope: !5739, inlinedAt: !5592)
!5743 = !DILocation(line: 378, column: 6, scope: !5744, inlinedAt: !5592)
!5744 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 378, column: 6)
!5745 = !DILocation(line: 378, column: 11, scope: !5744, inlinedAt: !5592)
!5746 = !DILocation(line: 378, column: 6, scope: !5588, inlinedAt: !5592)
!5747 = !DILocation(line: 378, column: 32, scope: !5744, inlinedAt: !5592)
!5748 = !DILocation(line: 379, column: 6, scope: !5749, inlinedAt: !5592)
!5749 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 379, column: 6)
!5750 = !DILocation(line: 379, column: 11, scope: !5749, inlinedAt: !5592)
!5751 = !DILocation(line: 379, column: 6, scope: !5588, inlinedAt: !5592)
!5752 = !DILocation(line: 379, column: 33, scope: !5749, inlinedAt: !5592)
!5753 = !DILocation(line: 380, column: 6, scope: !5754, inlinedAt: !5592)
!5754 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 380, column: 6)
!5755 = !DILocation(line: 380, column: 11, scope: !5754, inlinedAt: !5592)
!5756 = !DILocation(line: 380, column: 6, scope: !5588, inlinedAt: !5592)
!5757 = !DILocation(line: 380, column: 33, scope: !5754, inlinedAt: !5592)
!5758 = !DILocation(line: 381, column: 6, scope: !5759, inlinedAt: !5592)
!5759 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 381, column: 6)
!5760 = !DILocation(line: 381, column: 11, scope: !5759, inlinedAt: !5592)
!5761 = !DILocation(line: 381, column: 6, scope: !5588, inlinedAt: !5592)
!5762 = !DILocation(line: 381, column: 33, scope: !5759, inlinedAt: !5592)
!5763 = !DILocation(line: 382, column: 2, scope: !5764, inlinedAt: !5592)
!5764 = distinct !DILexicalBlock(scope: !5765, file: !137, line: 382, column: 2)
!5765 = distinct !DILexicalBlock(scope: !5588, file: !137, line: 382, column: 2)
!5766 = !{i32 -2143392071, i32 -2143392042, i32 -2143391996, i32 -2143391938, i32 -2143391884, i32 -2143391830, i32 -2143391775, i32 -2143391744}
!5767 = !DILocation(line: 382, column: 2, scope: !5768, inlinedAt: !5592)
!5768 = distinct !DILexicalBlock(scope: !5769, file: !137, line: 382, column: 2)
!5769 = distinct !DILexicalBlock(scope: !5765, file: !137, line: 382, column: 2)
!5770 = !{i32 -2143391301, i32 -2143391294, i32 -2143391240, i32 -2143391209, i32 -2143391179}
!5771 = !DILocation(line: 382, column: 2, scope: !5769, inlinedAt: !5592)
!5772 = !DILocation(line: 386, column: 1, scope: !5588, inlinedAt: !5592)
!5773 = !DILocation(line: 567, column: 8, scope: !5774, inlinedAt: !5550)
!5774 = distinct !DILexicalBlock(scope: !5565, file: !137, line: 567, column: 7)
!5775 = !DILocation(line: 567, column: 7, scope: !5565, inlinedAt: !5550)
!5776 = !DILocation(line: 568, column: 4, scope: !5774, inlinedAt: !5550)
!5777 = !DILocation(line: 571, column: 33, scope: !5565, inlinedAt: !5550)
!5778 = !DILocation(line: 325, column: 6, scope: !5779, inlinedAt: !5586)
!5779 = distinct !DILexicalBlock(scope: !5582, file: !137, line: 325, column: 6)
!5780 = !DILocation(line: 325, column: 6, scope: !5582, inlinedAt: !5586)
!5781 = !DILocation(line: 326, column: 3, scope: !5779, inlinedAt: !5586)
!5782 = !DILocation(line: 332, column: 9, scope: !5582, inlinedAt: !5586)
!5783 = !DILocation(line: 332, column: 15, scope: !5582, inlinedAt: !5586)
!5784 = !DILocation(line: 332, column: 2, scope: !5582, inlinedAt: !5586)
!5785 = !DILocation(line: 336, column: 1, scope: !5582, inlinedAt: !5586)
!5786 = !DILocation(line: 571, column: 5, scope: !5565, inlinedAt: !5550)
!5787 = !DILocation(line: 571, column: 41, scope: !5565, inlinedAt: !5550)
!5788 = !DILocation(line: 572, column: 7, scope: !5565, inlinedAt: !5550)
!5789 = !DILocation(line: 572, column: 14, scope: !5565, inlinedAt: !5550)
!5790 = !DILocation(line: 572, column: 20, scope: !5565, inlinedAt: !5550)
!5791 = !DILocation(line: 459, column: 36, scope: !5561, inlinedAt: !5564)
!5792 = !DILocation(line: 459, column: 39, scope: !5561, inlinedAt: !5564)
!5793 = !DILocation(line: 459, column: 49, scope: !5561, inlinedAt: !5564)
!5794 = !DILocation(line: 423, column: 26, scope: !5556, inlinedAt: !5560)
!5795 = !DILocation(line: 423, column: 29, scope: !5556, inlinedAt: !5560)
!5796 = !DILocation(line: 423, column: 9, scope: !5556, inlinedAt: !5560)
!5797 = !DILocation(line: 461, column: 22, scope: !5561, inlinedAt: !5564)
!5798 = !DILocation(line: 461, column: 25, scope: !5561, inlinedAt: !5564)
!5799 = !DILocation(line: 461, column: 30, scope: !5561, inlinedAt: !5564)
!5800 = !DILocation(line: 461, column: 36, scope: !5561, inlinedAt: !5564)
!5801 = !DILocation(line: 461, column: 8, scope: !5561, inlinedAt: !5564)
!5802 = !DILocation(line: 461, column: 6, scope: !5561, inlinedAt: !5564)
!5803 = !DILocation(line: 462, column: 9, scope: !5561, inlinedAt: !5564)
!5804 = !DILocation(line: 570, column: 3, scope: !5565, inlinedAt: !5550)
!5805 = !DILocation(line: 575, column: 24, scope: !5549, inlinedAt: !5550)
!5806 = !DILocation(line: 575, column: 30, scope: !5549, inlinedAt: !5550)
!5807 = !DILocation(line: 575, column: 37, scope: !5549, inlinedAt: !5550)
!5808 = !DILocation(line: 418, column: 19, scope: !5546, inlinedAt: !5548)
!5809 = !DILocation(line: 418, column: 25, scope: !5546, inlinedAt: !5548)
!5810 = !DILocation(line: 418, column: 9, scope: !5546, inlinedAt: !5548)
!5811 = !DILocation(line: 575, column: 2, scope: !5549, inlinedAt: !5550)
!5812 = !DILocation(line: 576, column: 1, scope: !5549, inlinedAt: !5550)
!5813 = !DILocation(line: 675, column: 2, scope: !5542)
!5814 = distinct !DISubprogram(name: "dev_to_node", scope: !73, file: !73, line: 630, type: !3517, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5815 = !DILocalVariable(name: "dev", arg: 1, scope: !5814, file: !73, line: 630, type: !324)
!5816 = !DILocation(line: 630, column: 46, scope: !5814)
!5817 = !DILocation(line: 632, column: 2, scope: !5814)
!5818 = distinct !DISubprogram(name: "ERR_PTR", scope: !4860, file: !4860, line: 24, type: !5819, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5819 = !DISubroutineType(types: !5820)
!5820 = !{!217, !105}
!5821 = !DILocalVariable(name: "error", arg: 1, scope: !5818, file: !4860, line: 24, type: !105)
!5822 = !DILocation(line: 24, column: 48, scope: !5818)
!5823 = !DILocation(line: 26, column: 18, scope: !5818)
!5824 = !DILocation(line: 26, column: 9, scope: !5818)
!5825 = !DILocation(line: 26, column: 2, scope: !5818)
!5826 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !5827, file: !5827, line: 33, type: !5828, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5827 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!5828 = !DISubroutineType(types: !5829)
!5829 = !{null, !222}
!5830 = !DILocalVariable(name: "list", arg: 1, scope: !5826, file: !5827, line: 33, type: !222)
!5831 = !DILocation(line: 33, column: 53, scope: !5826)
!5832 = !DILocation(line: 35, column: 2, scope: !5826)
!5833 = !DILocation(line: 35, column: 2, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5826, file: !5827, line: 35, column: 2)
!5835 = !DILocation(line: 35, column: 2, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5834, file: !5827, line: 35, column: 2)
!5837 = !DILocation(line: 35, column: 2, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5834, file: !5827, line: 35, column: 2)
!5839 = !DILocation(line: 36, column: 15, scope: !5826)
!5840 = !DILocation(line: 36, column: 2, scope: !5826)
!5841 = !DILocation(line: 36, column: 8, scope: !5826)
!5842 = !DILocation(line: 36, column: 13, scope: !5826)
!5843 = !DILocation(line: 37, column: 1, scope: !5826)
!5844 = distinct !DISubprogram(name: "__init_work", scope: !104, file: !104, line: 215, type: !5845, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5845 = !DISubroutineType(types: !5846)
!5846 = !{null, !2065, !282}
!5847 = !DILocalVariable(name: "work", arg: 1, scope: !5844, file: !104, line: 215, type: !2065)
!5848 = !DILocation(line: 215, column: 52, scope: !5844)
!5849 = !DILocalVariable(name: "onstack", arg: 2, scope: !5844, file: !104, line: 215, type: !282)
!5850 = !DILocation(line: 215, column: 62, scope: !5844)
!5851 = !DILocation(line: 215, column: 73, scope: !5844)
!5852 = distinct !DISubprogram(name: "mrpc_event_work", scope: !3, file: !3, line: 235, type: !2063, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5853 = !DILocalVariable(name: "work", arg: 1, scope: !5852, file: !3, line: 235, type: !2065)
!5854 = !DILocation(line: 235, column: 49, scope: !5852)
!5855 = !DILocalVariable(name: "stdev", scope: !5852, file: !3, line: 237, type: !227)
!5856 = !DILocation(line: 237, column: 24, scope: !5852)
!5857 = !DILocalVariable(name: "__mptr", scope: !5858, file: !3, line: 239, type: !217)
!5858 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 239, column: 10)
!5859 = !DILocation(line: 239, column: 10, scope: !5858)
!5860 = !DILocation(line: 239, column: 10, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 239, column: 10)
!5862 = !DILocation(line: 239, column: 8, scope: !5852)
!5863 = !DILocation(line: 243, column: 14, scope: !5852)
!5864 = !DILocation(line: 243, column: 21, scope: !5852)
!5865 = !DILocation(line: 243, column: 2, scope: !5852)
!5866 = !DILocation(line: 244, column: 23, scope: !5852)
!5867 = !DILocation(line: 244, column: 30, scope: !5852)
!5868 = !DILocation(line: 244, column: 2, scope: !5852)
!5869 = !DILocation(line: 245, column: 20, scope: !5852)
!5870 = !DILocation(line: 245, column: 2, scope: !5852)
!5871 = !DILocation(line: 246, column: 16, scope: !5852)
!5872 = !DILocation(line: 246, column: 23, scope: !5852)
!5873 = !DILocation(line: 246, column: 2, scope: !5852)
!5874 = !DILocation(line: 247, column: 1, scope: !5852)
!5875 = distinct !DISubprogram(name: "mrpc_timeout_work", scope: !3, file: !3, line: 249, type: !2063, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5876 = !DILocalVariable(name: "m", arg: 1, scope: !5877, file: !5878, line: 363, type: !2924)
!5877 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !5878, file: !5878, line: 363, type: !5879, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5878 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!5879 = !DISubroutineType(types: !5880)
!5880 = !{!216, !2924}
!5881 = !DILocation(line: 363, column: 74, scope: !5877, inlinedAt: !5882)
!5882 = distinct !DILocation(line: 266, column: 11, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 264, column: 50)
!5884 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 264, column: 6)
!5885 = !DILocalVariable(name: "work", arg: 1, scope: !5875, file: !3, line: 249, type: !2065)
!5886 = !DILocation(line: 249, column: 51, scope: !5875)
!5887 = !DILocalVariable(name: "stdev", scope: !5875, file: !3, line: 251, type: !227)
!5888 = !DILocation(line: 251, column: 24, scope: !5875)
!5889 = !DILocalVariable(name: "status", scope: !5875, file: !3, line: 252, type: !296)
!5890 = !DILocation(line: 252, column: 6, scope: !5875)
!5891 = !DILocalVariable(name: "__mptr", scope: !5892, file: !3, line: 254, type: !217)
!5892 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 254, column: 10)
!5893 = !DILocation(line: 254, column: 10, scope: !5892)
!5894 = !DILocation(line: 254, column: 10, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 254, column: 10)
!5896 = !DILocation(line: 254, column: 8, scope: !5875)
!5897 = !DILocation(line: 258, column: 14, scope: !5875)
!5898 = !DILocation(line: 258, column: 21, scope: !5875)
!5899 = !DILocation(line: 258, column: 2, scope: !5875)
!5900 = !DILocation(line: 260, column: 6, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 260, column: 6)
!5902 = !DILocation(line: 260, column: 13, scope: !5901)
!5903 = !DILocation(line: 260, column: 6, scope: !5875)
!5904 = !DILocation(line: 261, column: 12, scope: !5901)
!5905 = !DILocation(line: 261, column: 19, scope: !5901)
!5906 = !DILocation(line: 261, column: 29, scope: !5901)
!5907 = !DILocation(line: 261, column: 10, scope: !5901)
!5908 = !DILocation(line: 261, column: 3, scope: !5901)
!5909 = !DILocation(line: 263, column: 22, scope: !5901)
!5910 = !DILocation(line: 263, column: 29, scope: !5901)
!5911 = !DILocation(line: 263, column: 40, scope: !5901)
!5912 = !DILocation(line: 263, column: 21, scope: !5901)
!5913 = !DILocation(line: 263, column: 12, scope: !5901)
!5914 = !DILocation(line: 263, column: 10, scope: !5901)
!5915 = !DILocation(line: 264, column: 6, scope: !5884)
!5916 = !DILocation(line: 264, column: 13, scope: !5884)
!5917 = !DILocation(line: 264, column: 6, scope: !5875)
!5918 = !DILocation(line: 265, column: 26, scope: !5883)
!5919 = !DILocation(line: 265, column: 33, scope: !5883)
!5920 = !DILocation(line: 365, column: 27, scope: !5921, inlinedAt: !5882)
!5921 = distinct !DILexicalBlock(scope: !5877, file: !5878, line: 365, column: 6)
!5922 = !DILocation(line: 365, column: 6, scope: !5921, inlinedAt: !5882)
!5923 = !DILocation(line: 365, column: 6, scope: !5877, inlinedAt: !5882)
!5924 = !DILocation(line: 366, column: 12, scope: !5925, inlinedAt: !5882)
!5925 = distinct !DILexicalBlock(scope: !5926, file: !5878, line: 366, column: 7)
!5926 = distinct !DILexicalBlock(scope: !5921, file: !5878, line: 365, column: 31)
!5927 = !DILocation(line: 366, column: 14, scope: !5925, inlinedAt: !5882)
!5928 = !DILocation(line: 366, column: 7, scope: !5926, inlinedAt: !5882)
!5929 = !DILocation(line: 367, column: 4, scope: !5925, inlinedAt: !5882)
!5930 = !DILocation(line: 368, column: 28, scope: !5926, inlinedAt: !5882)
!5931 = !DILocation(line: 368, column: 10, scope: !5926, inlinedAt: !5882)
!5932 = !DILocation(line: 368, column: 3, scope: !5926, inlinedAt: !5882)
!5933 = !DILocation(line: 370, column: 29, scope: !5934, inlinedAt: !5882)
!5934 = distinct !DILexicalBlock(scope: !5921, file: !5878, line: 369, column: 9)
!5935 = !DILocation(line: 370, column: 10, scope: !5934, inlinedAt: !5882)
!5936 = !DILocation(line: 370, column: 3, scope: !5934, inlinedAt: !5882)
!5937 = !DILocation(line: 372, column: 1, scope: !5877, inlinedAt: !5882)
!5938 = !DILocation(line: 265, column: 3, scope: !5883)
!5939 = !DILocation(line: 267, column: 3, scope: !5883)
!5940 = !DILocation(line: 270, column: 20, scope: !5875)
!5941 = !DILocation(line: 270, column: 2, scope: !5875)
!5942 = !DILabel(scope: !5875, name: "out", file: !3, line: 271)
!5943 = !DILocation(line: 271, column: 1, scope: !5875)
!5944 = !DILocation(line: 272, column: 16, scope: !5875)
!5945 = !DILocation(line: 272, column: 23, scope: !5875)
!5946 = !DILocation(line: 272, column: 2, scope: !5875)
!5947 = !DILocation(line: 273, column: 1, scope: !5875)
!5948 = distinct !DISubprogram(name: "link_event_work", scope: !3, file: !3, line: 1200, type: !2063, scopeLine: 1201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5949 = !DILocalVariable(name: "work", arg: 1, scope: !5948, file: !3, line: 1200, type: !2065)
!5950 = !DILocation(line: 1200, column: 49, scope: !5948)
!5951 = !DILocalVariable(name: "stdev", scope: !5948, file: !3, line: 1202, type: !227)
!5952 = !DILocation(line: 1202, column: 24, scope: !5948)
!5953 = !DILocalVariable(name: "__mptr", scope: !5954, file: !3, line: 1204, type: !217)
!5954 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 1204, column: 10)
!5955 = !DILocation(line: 1204, column: 10, scope: !5954)
!5956 = !DILocation(line: 1204, column: 10, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 1204, column: 10)
!5958 = !DILocation(line: 1204, column: 8, scope: !5948)
!5959 = !DILocation(line: 1206, column: 6, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 1206, column: 6)
!5961 = !DILocation(line: 1206, column: 13, scope: !5960)
!5962 = !DILocation(line: 1206, column: 6, scope: !5948)
!5963 = !DILocation(line: 1207, column: 3, scope: !5960)
!5964 = !DILocation(line: 1207, column: 10, scope: !5960)
!5965 = !DILocation(line: 1207, column: 24, scope: !5960)
!5966 = !DILocation(line: 1208, column: 1, scope: !5948)
!5967 = distinct !DISubprogram(name: "stdev_release", scope: !3, file: !3, line: 1250, type: !3508, scopeLine: 1251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!5968 = !DILocalVariable(name: "dev", arg: 1, scope: !5967, file: !3, line: 1250, type: !324)
!5969 = !DILocation(line: 1250, column: 42, scope: !5967)
!5970 = !DILocalVariable(name: "stdev", scope: !5967, file: !3, line: 1252, type: !227)
!5971 = !DILocation(line: 1252, column: 24, scope: !5967)
!5972 = !DILocation(line: 1252, column: 41, scope: !5967)
!5973 = !DILocation(line: 1252, column: 32, scope: !5967)
!5974 = !DILocation(line: 1254, column: 6, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 1254, column: 6)
!5976 = !DILocation(line: 1254, column: 13, scope: !5975)
!5977 = !DILocation(line: 1254, column: 6, scope: !5967)
!5978 = !DILocation(line: 1255, column: 17, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 1254, column: 23)
!5980 = !DILocation(line: 1255, column: 24, scope: !5979)
!5981 = !DILocation(line: 1255, column: 35, scope: !5979)
!5982 = !DILocation(line: 1255, column: 16, scope: !5979)
!5983 = !DILocation(line: 1255, column: 3, scope: !5979)
!5984 = !DILocation(line: 1256, column: 16, scope: !5979)
!5985 = !DILocation(line: 1256, column: 3, scope: !5979)
!5986 = !DILocation(line: 1257, column: 14, scope: !5979)
!5987 = !DILocation(line: 1257, column: 21, scope: !5979)
!5988 = !DILocation(line: 1257, column: 32, scope: !5979)
!5989 = !DILocation(line: 1257, column: 13, scope: !5979)
!5990 = !DILocation(line: 1257, column: 3, scope: !5979)
!5991 = !DILocation(line: 1258, column: 22, scope: !5979)
!5992 = !DILocation(line: 1258, column: 29, scope: !5979)
!5993 = !DILocation(line: 1258, column: 35, scope: !5979)
!5994 = !DILocation(line: 1259, column: 5, scope: !5979)
!5995 = !DILocation(line: 1259, column: 12, scope: !5979)
!5996 = !DILocation(line: 1259, column: 22, scope: !5979)
!5997 = !DILocation(line: 1259, column: 29, scope: !5979)
!5998 = !DILocation(line: 1258, column: 3, scope: !5979)
!5999 = !DILocation(line: 1260, column: 2, scope: !5979)
!6000 = !DILocation(line: 1261, column: 8, scope: !5967)
!6001 = !DILocation(line: 1261, column: 2, scope: !5967)
!6002 = !DILocation(line: 1262, column: 1, scope: !5967)
!6003 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !6004, file: !6004, line: 137, type: !6005, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6004 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!6005 = !DISubroutineType(types: !6006)
!6006 = !{!217, !1032, !2224, !427, !218}
!6007 = !DILocalVariable(name: "s", arg: 1, scope: !6003, file: !6004, line: 137, type: !1032)
!6008 = !DILocation(line: 137, column: 54, scope: !6003)
!6009 = !DILocalVariable(name: "object", arg: 2, scope: !6003, file: !6004, line: 137, type: !2224)
!6010 = !DILocation(line: 137, column: 69, scope: !6003)
!6011 = !DILocalVariable(name: "size", arg: 3, scope: !6003, file: !6004, line: 138, type: !427)
!6012 = !DILocation(line: 138, column: 12, scope: !6003)
!6013 = !DILocalVariable(name: "flags", arg: 4, scope: !6003, file: !6004, line: 138, type: !218)
!6014 = !DILocation(line: 138, column: 24, scope: !6003)
!6015 = !DILocation(line: 140, column: 17, scope: !6003)
!6016 = !DILocation(line: 140, column: 2, scope: !6003)
!6017 = distinct !DISubprogram(name: "mrpc_complete_cmd", scope: !3, file: !3, line: 187, type: !4499, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6018 = !DILocalVariable(name: "stdev", arg: 1, scope: !6017, file: !3, line: 187, type: !227)
!6019 = !DILocation(line: 187, column: 53, scope: !6017)
!6020 = !DILocalVariable(name: "stuser", scope: !6017, file: !3, line: 190, type: !4516)
!6021 = !DILocation(line: 190, column: 25, scope: !6017)
!6022 = !DILocation(line: 192, column: 18, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 192, column: 6)
!6024 = !DILocation(line: 192, column: 25, scope: !6023)
!6025 = !DILocation(line: 192, column: 6, scope: !6023)
!6026 = !DILocation(line: 192, column: 6, scope: !6017)
!6027 = !DILocation(line: 193, column: 3, scope: !6023)
!6028 = !DILocalVariable(name: "__mptr", scope: !6029, file: !3, line: 195, type: !217)
!6029 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 195, column: 11)
!6030 = !DILocation(line: 195, column: 11, scope: !6029)
!6031 = !DILocation(line: 195, column: 11, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6029, file: !3, line: 195, column: 11)
!6033 = !DILocation(line: 195, column: 9, scope: !6017)
!6034 = !DILocation(line: 198, column: 6, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 198, column: 6)
!6036 = !DILocation(line: 198, column: 13, scope: !6035)
!6037 = !DILocation(line: 198, column: 6, scope: !6017)
!6038 = !DILocation(line: 199, column: 20, scope: !6035)
!6039 = !DILocation(line: 199, column: 27, scope: !6035)
!6040 = !DILocation(line: 199, column: 37, scope: !6035)
!6041 = !DILocation(line: 199, column: 3, scope: !6035)
!6042 = !DILocation(line: 199, column: 11, scope: !6035)
!6043 = !DILocation(line: 199, column: 18, scope: !6035)
!6044 = !DILocation(line: 201, column: 30, scope: !6035)
!6045 = !DILocation(line: 201, column: 37, scope: !6035)
!6046 = !DILocation(line: 201, column: 48, scope: !6035)
!6047 = !DILocation(line: 201, column: 29, scope: !6035)
!6048 = !DILocation(line: 201, column: 20, scope: !6035)
!6049 = !DILocation(line: 201, column: 3, scope: !6035)
!6050 = !DILocation(line: 201, column: 11, scope: !6035)
!6051 = !DILocation(line: 201, column: 18, scope: !6035)
!6052 = !DILocation(line: 203, column: 6, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 203, column: 6)
!6054 = !DILocation(line: 203, column: 14, scope: !6053)
!6055 = !DILocation(line: 203, column: 21, scope: !6053)
!6056 = !DILocation(line: 203, column: 6, scope: !6017)
!6057 = !DILocation(line: 204, column: 3, scope: !6053)
!6058 = !DILocation(line: 206, column: 19, scope: !6017)
!6059 = !DILocation(line: 206, column: 2, scope: !6017)
!6060 = !DILocation(line: 207, column: 2, scope: !6017)
!6061 = !DILocation(line: 207, column: 10, scope: !6017)
!6062 = !DILocation(line: 207, column: 22, scope: !6017)
!6063 = !DILocation(line: 209, column: 6, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 209, column: 6)
!6065 = !DILocation(line: 209, column: 14, scope: !6064)
!6066 = !DILocation(line: 209, column: 21, scope: !6064)
!6067 = !DILocation(line: 209, column: 6, scope: !6017)
!6068 = !DILocation(line: 210, column: 3, scope: !6064)
!6069 = !DILocation(line: 212, column: 6, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 212, column: 6)
!6071 = !DILocation(line: 212, column: 13, scope: !6070)
!6072 = !DILocation(line: 212, column: 6, scope: !6017)
!6073 = !DILocation(line: 213, column: 25, scope: !6070)
!6074 = !DILocation(line: 213, column: 32, scope: !6070)
!6075 = !DILocation(line: 213, column: 42, scope: !6070)
!6076 = !DILocation(line: 213, column: 3, scope: !6070)
!6077 = !DILocation(line: 213, column: 11, scope: !6070)
!6078 = !DILocation(line: 213, column: 23, scope: !6070)
!6079 = !DILocation(line: 215, column: 35, scope: !6070)
!6080 = !DILocation(line: 215, column: 42, scope: !6070)
!6081 = !DILocation(line: 215, column: 53, scope: !6070)
!6082 = !DILocation(line: 215, column: 34, scope: !6070)
!6083 = !DILocation(line: 215, column: 25, scope: !6070)
!6084 = !DILocation(line: 215, column: 3, scope: !6070)
!6085 = !DILocation(line: 215, column: 11, scope: !6070)
!6086 = !DILocation(line: 215, column: 23, scope: !6070)
!6087 = !DILocation(line: 216, column: 6, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 216, column: 6)
!6089 = !DILocation(line: 216, column: 14, scope: !6088)
!6090 = !DILocation(line: 216, column: 26, scope: !6088)
!6091 = !DILocation(line: 216, column: 6, scope: !6017)
!6092 = !DILocation(line: 217, column: 3, scope: !6088)
!6093 = !DILocation(line: 219, column: 6, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 219, column: 6)
!6095 = !DILocation(line: 219, column: 13, scope: !6094)
!6096 = !DILocation(line: 219, column: 6, scope: !6017)
!6097 = !DILocation(line: 220, column: 10, scope: !6094)
!6098 = !DILocation(line: 220, column: 18, scope: !6094)
!6099 = !DILocation(line: 220, column: 3, scope: !6094)
!6100 = !DILocation(line: 220, column: 25, scope: !6094)
!6101 = !DILocation(line: 220, column: 32, scope: !6094)
!6102 = !DILocation(line: 220, column: 42, scope: !6094)
!6103 = !DILocation(line: 221, column: 10, scope: !6094)
!6104 = !DILocation(line: 221, column: 18, scope: !6094)
!6105 = !DILocation(line: 223, column: 17, scope: !6094)
!6106 = !DILocation(line: 223, column: 25, scope: !6094)
!6107 = !DILocation(line: 223, column: 32, scope: !6094)
!6108 = !DILocation(line: 223, column: 39, scope: !6094)
!6109 = !DILocation(line: 223, column: 50, scope: !6094)
!6110 = !DILocation(line: 223, column: 31, scope: !6094)
!6111 = !DILocation(line: 224, column: 10, scope: !6094)
!6112 = !DILocation(line: 224, column: 18, scope: !6094)
!6113 = !DILocation(line: 223, column: 3, scope: !6094)
!6114 = !DILabel(scope: !6017, name: "out", file: !3, line: 225)
!6115 = !DILocation(line: 225, column: 1, scope: !6017)
!6116 = !DILocation(line: 226, column: 2, scope: !6017)
!6117 = !DILocation(line: 226, column: 10, scope: !6017)
!6118 = !DILocation(line: 226, column: 19, scope: !6017)
!6119 = !DILocation(line: 227, column: 2, scope: !6017)
!6120 = !DILocation(line: 228, column: 17, scope: !6017)
!6121 = !DILocation(line: 228, column: 25, scope: !6017)
!6122 = !DILocation(line: 228, column: 2, scope: !6017)
!6123 = !DILocation(line: 229, column: 13, scope: !6017)
!6124 = !DILocation(line: 229, column: 2, scope: !6017)
!6125 = !DILocation(line: 230, column: 2, scope: !6017)
!6126 = !DILocation(line: 230, column: 9, scope: !6017)
!6127 = !DILocation(line: 230, column: 19, scope: !6017)
!6128 = !DILocation(line: 232, column: 18, scope: !6017)
!6129 = !DILocation(line: 232, column: 2, scope: !6017)
!6130 = !DILocation(line: 233, column: 1, scope: !6017)
!6131 = distinct !DISubprogram(name: "list_empty", scope: !5827, file: !5827, line: 280, type: !6132, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6132 = !DISubroutineType(types: !6133)
!6133 = !{!282, !6134}
!6134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6135, size: 64)
!6135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !223)
!6136 = !DILocalVariable(name: "head", arg: 1, scope: !6131, file: !5827, line: 280, type: !6134)
!6137 = !DILocation(line: 280, column: 54, scope: !6131)
!6138 = !DILocation(line: 282, column: 9, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6131, file: !5827, line: 282, column: 9)
!6140 = !DILocation(line: 282, column: 9, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6139, file: !5827, line: 282, column: 9)
!6142 = !DILocation(line: 282, column: 34, scope: !6131)
!6143 = !DILocation(line: 282, column: 31, scope: !6131)
!6144 = !DILocation(line: 282, column: 2, scope: !6131)
!6145 = distinct !DISubprogram(name: "stuser_set_state", scope: !3, file: !3, line: 106, type: !6146, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6146 = !DISubroutineType(types: !6147)
!6147 = !{null, !4516, !143}
!6148 = !DILocalVariable(name: "stuser", arg: 1, scope: !6145, file: !3, line: 106, type: !4516)
!6149 = !DILocation(line: 106, column: 53, scope: !6145)
!6150 = !DILocalVariable(name: "state", arg: 2, scope: !6145, file: !3, line: 107, type: !143)
!6151 = !DILocation(line: 107, column: 25, scope: !6145)
!6152 = !DILocalVariable(name: "state_names", scope: !6145, file: !3, line: 111, type: !6153)
!6153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6154, size: 256, elements: !270)
!6154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!6155 = !DILocation(line: 111, column: 21, scope: !6145)
!6156 = !DILocation(line: 118, column: 18, scope: !6145)
!6157 = !DILocation(line: 118, column: 2, scope: !6145)
!6158 = !DILocation(line: 118, column: 10, scope: !6145)
!6159 = !DILocation(line: 118, column: 16, scope: !6145)
!6160 = !DILocation(line: 122, column: 1, scope: !6145)
!6161 = distinct !DISubprogram(name: "list_del_init", scope: !5827, file: !5827, line: 202, type: !5828, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6162 = !DILocalVariable(name: "entry", arg: 1, scope: !6161, file: !5827, line: 202, type: !222)
!6163 = !DILocation(line: 202, column: 52, scope: !6161)
!6164 = !DILocation(line: 204, column: 19, scope: !6161)
!6165 = !DILocation(line: 204, column: 2, scope: !6161)
!6166 = !DILocation(line: 205, column: 17, scope: !6161)
!6167 = !DILocation(line: 205, column: 2, scope: !6161)
!6168 = !DILocation(line: 206, column: 1, scope: !6161)
!6169 = distinct !DISubprogram(name: "stuser_put", scope: !3, file: !3, line: 101, type: !6170, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6170 = !DISubroutineType(types: !6171)
!6171 = !{null, !4516}
!6172 = !DILocalVariable(name: "stuser", arg: 1, scope: !6169, file: !3, line: 101, type: !4516)
!6173 = !DILocation(line: 101, column: 47, scope: !6169)
!6174 = !DILocation(line: 103, column: 12, scope: !6169)
!6175 = !DILocation(line: 103, column: 20, scope: !6169)
!6176 = !DILocation(line: 103, column: 2, scope: !6169)
!6177 = !DILocation(line: 104, column: 1, scope: !6169)
!6178 = distinct !DISubprogram(name: "mrpc_cmd_submit", scope: !3, file: !3, line: 139, type: !4499, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6179 = !DILocation(line: 363, column: 74, scope: !5877, inlinedAt: !6180)
!6180 = distinct !DILocation(line: 167, column: 10, scope: !6178)
!6181 = !DILocalVariable(name: "stdev", arg: 1, scope: !6178, file: !3, line: 139, type: !227)
!6182 = !DILocation(line: 139, column: 51, scope: !6178)
!6183 = !DILocalVariable(name: "stuser", scope: !6178, file: !3, line: 143, type: !4516)
!6184 = !DILocation(line: 143, column: 25, scope: !6178)
!6185 = !DILocation(line: 145, column: 6, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 145, column: 6)
!6187 = !DILocation(line: 145, column: 13, scope: !6186)
!6188 = !DILocation(line: 145, column: 6, scope: !6178)
!6189 = !DILocation(line: 146, column: 3, scope: !6186)
!6190 = !DILocation(line: 148, column: 18, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 148, column: 6)
!6192 = !DILocation(line: 148, column: 25, scope: !6191)
!6193 = !DILocation(line: 148, column: 6, scope: !6191)
!6194 = !DILocation(line: 148, column: 6, scope: !6178)
!6195 = !DILocation(line: 149, column: 3, scope: !6191)
!6196 = !DILocalVariable(name: "__mptr", scope: !6197, file: !3, line: 151, type: !217)
!6197 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 151, column: 11)
!6198 = !DILocation(line: 151, column: 11, scope: !6197)
!6199 = !DILocation(line: 151, column: 11, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 151, column: 11)
!6201 = !DILocation(line: 151, column: 9, scope: !6178)
!6202 = !DILocation(line: 154, column: 6, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 154, column: 6)
!6204 = !DILocation(line: 154, column: 13, scope: !6203)
!6205 = !DILocation(line: 154, column: 6, scope: !6178)
!6206 = !DILocation(line: 155, column: 3, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 154, column: 23)
!6208 = !DILocation(line: 155, column: 10, scope: !6207)
!6209 = !DILocation(line: 155, column: 20, scope: !6207)
!6210 = !DILocation(line: 155, column: 27, scope: !6207)
!6211 = !DILocation(line: 156, column: 10, scope: !6207)
!6212 = !DILocation(line: 156, column: 17, scope: !6207)
!6213 = !DILocation(line: 156, column: 27, scope: !6207)
!6214 = !DILocation(line: 156, column: 3, scope: !6207)
!6215 = !DILocation(line: 157, column: 2, scope: !6207)
!6216 = !DILocation(line: 159, column: 19, scope: !6178)
!6217 = !DILocation(line: 159, column: 2, scope: !6178)
!6218 = !DILocation(line: 160, column: 2, scope: !6178)
!6219 = !DILocation(line: 160, column: 9, scope: !6178)
!6220 = !DILocation(line: 160, column: 19, scope: !6178)
!6221 = !DILocation(line: 161, column: 15, scope: !6178)
!6222 = !DILocation(line: 161, column: 22, scope: !6178)
!6223 = !DILocation(line: 161, column: 33, scope: !6178)
!6224 = !DILocation(line: 161, column: 14, scope: !6178)
!6225 = !DILocation(line: 162, column: 7, scope: !6178)
!6226 = !DILocation(line: 162, column: 15, scope: !6178)
!6227 = !DILocation(line: 162, column: 21, scope: !6178)
!6228 = !DILocation(line: 162, column: 29, scope: !6178)
!6229 = !DILocation(line: 161, column: 2, scope: !6178)
!6230 = !DILocation(line: 163, column: 15, scope: !6178)
!6231 = !DILocation(line: 163, column: 2, scope: !6178)
!6232 = !DILocation(line: 164, column: 12, scope: !6178)
!6233 = !DILocation(line: 164, column: 20, scope: !6178)
!6234 = !DILocation(line: 164, column: 26, scope: !6178)
!6235 = !DILocation(line: 164, column: 33, scope: !6178)
!6236 = !DILocation(line: 164, column: 44, scope: !6178)
!6237 = !DILocation(line: 164, column: 25, scope: !6178)
!6238 = !DILocation(line: 164, column: 2, scope: !6178)
!6239 = !DILocation(line: 166, column: 25, scope: !6178)
!6240 = !DILocation(line: 166, column: 32, scope: !6178)
!6241 = !DILocation(line: 365, column: 27, scope: !5921, inlinedAt: !6180)
!6242 = !DILocation(line: 365, column: 6, scope: !5921, inlinedAt: !6180)
!6243 = !DILocation(line: 365, column: 6, scope: !5877, inlinedAt: !6180)
!6244 = !DILocation(line: 366, column: 12, scope: !5925, inlinedAt: !6180)
!6245 = !DILocation(line: 366, column: 14, scope: !5925, inlinedAt: !6180)
!6246 = !DILocation(line: 366, column: 7, scope: !5926, inlinedAt: !6180)
!6247 = !DILocation(line: 367, column: 4, scope: !5925, inlinedAt: !6180)
!6248 = !DILocation(line: 368, column: 28, scope: !5926, inlinedAt: !6180)
!6249 = !DILocation(line: 368, column: 10, scope: !5926, inlinedAt: !6180)
!6250 = !DILocation(line: 368, column: 3, scope: !5926, inlinedAt: !6180)
!6251 = !DILocation(line: 370, column: 29, scope: !5934, inlinedAt: !6180)
!6252 = !DILocation(line: 370, column: 10, scope: !5934, inlinedAt: !6180)
!6253 = !DILocation(line: 370, column: 3, scope: !5934, inlinedAt: !6180)
!6254 = !DILocation(line: 372, column: 1, scope: !5877, inlinedAt: !6180)
!6255 = !DILocation(line: 166, column: 2, scope: !6178)
!6256 = !DILocation(line: 168, column: 1, scope: !6178)
!6257 = distinct !DISubprogram(name: "__list_del_entry", scope: !5827, file: !5827, line: 130, type: !5828, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6258 = !DILocalVariable(name: "entry", arg: 1, scope: !6257, file: !5827, line: 130, type: !222)
!6259 = !DILocation(line: 130, column: 55, scope: !6257)
!6260 = !DILocation(line: 132, column: 30, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6257, file: !5827, line: 132, column: 6)
!6262 = !DILocation(line: 132, column: 7, scope: !6261)
!6263 = !DILocation(line: 132, column: 6, scope: !6257)
!6264 = !DILocation(line: 133, column: 3, scope: !6261)
!6265 = !DILocation(line: 135, column: 13, scope: !6257)
!6266 = !DILocation(line: 135, column: 20, scope: !6257)
!6267 = !DILocation(line: 135, column: 26, scope: !6257)
!6268 = !DILocation(line: 135, column: 33, scope: !6257)
!6269 = !DILocation(line: 135, column: 2, scope: !6257)
!6270 = !DILocation(line: 136, column: 1, scope: !6257)
!6271 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !5827, file: !5827, line: 51, type: !6272, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{!587, !222}
!6274 = !DILocalVariable(name: "entry", arg: 1, scope: !6271, file: !5827, line: 51, type: !222)
!6275 = !DILocation(line: 51, column: 61, scope: !6271)
!6276 = !DILocation(line: 53, column: 2, scope: !6271)
!6277 = distinct !DISubprogram(name: "__list_del", scope: !5827, file: !5827, line: 110, type: !6278, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6278 = !DISubroutineType(types: !6279)
!6279 = !{null, !222, !222}
!6280 = !DILocalVariable(name: "prev", arg: 1, scope: !6277, file: !5827, line: 110, type: !222)
!6281 = !DILocation(line: 110, column: 50, scope: !6277)
!6282 = !DILocalVariable(name: "next", arg: 2, scope: !6277, file: !5827, line: 110, type: !222)
!6283 = !DILocation(line: 110, column: 75, scope: !6277)
!6284 = !DILocation(line: 112, column: 15, scope: !6277)
!6285 = !DILocation(line: 112, column: 2, scope: !6277)
!6286 = !DILocation(line: 112, column: 8, scope: !6277)
!6287 = !DILocation(line: 112, column: 13, scope: !6277)
!6288 = !DILocation(line: 113, column: 2, scope: !6277)
!6289 = !DILocation(line: 113, column: 2, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6277, file: !5827, line: 113, column: 2)
!6291 = !DILocation(line: 113, column: 2, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6290, file: !5827, line: 113, column: 2)
!6293 = !DILocation(line: 113, column: 2, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6290, file: !5827, line: 113, column: 2)
!6295 = !DILocation(line: 114, column: 1, scope: !6277)
!6296 = distinct !DISubprogram(name: "kref_put", scope: !3477, file: !3477, line: 62, type: !6297, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6297 = !DISubroutineType(types: !6298)
!6298 = !{!282, !6299, !6300}
!6299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!6300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6301, size: 64)
!6301 = !DISubroutineType(types: !6302)
!6302 = !{null, !6299}
!6303 = !DILocalVariable(name: "kref", arg: 1, scope: !6296, file: !3477, line: 62, type: !6299)
!6304 = !DILocation(line: 62, column: 41, scope: !6296)
!6305 = !DILocalVariable(name: "release", arg: 2, scope: !6296, file: !3477, line: 62, type: !6300)
!6306 = !DILocation(line: 62, column: 54, scope: !6296)
!6307 = !DILocation(line: 64, column: 29, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6296, file: !3477, line: 64, column: 6)
!6309 = !DILocation(line: 64, column: 35, scope: !6308)
!6310 = !DILocation(line: 64, column: 6, scope: !6308)
!6311 = !DILocation(line: 64, column: 6, scope: !6296)
!6312 = !DILocation(line: 65, column: 3, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6308, file: !3477, line: 64, column: 46)
!6314 = !DILocation(line: 65, column: 11, scope: !6313)
!6315 = !DILocation(line: 66, column: 3, scope: !6313)
!6316 = !DILocation(line: 68, column: 2, scope: !6296)
!6317 = !DILocation(line: 69, column: 1, scope: !6296)
!6318 = distinct !DISubprogram(name: "stuser_free", scope: !3, file: !3, line: 89, type: !6301, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6319 = !DILocalVariable(name: "kref", arg: 1, scope: !6318, file: !3, line: 89, type: !6299)
!6320 = !DILocation(line: 89, column: 38, scope: !6318)
!6321 = !DILocalVariable(name: "stuser", scope: !6318, file: !3, line: 91, type: !4516)
!6322 = !DILocation(line: 91, column: 25, scope: !6318)
!6323 = !DILocalVariable(name: "__mptr", scope: !6324, file: !3, line: 93, type: !217)
!6324 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 93, column: 11)
!6325 = !DILocation(line: 93, column: 11, scope: !6324)
!6326 = !DILocation(line: 93, column: 11, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 93, column: 11)
!6328 = !DILocation(line: 93, column: 9, scope: !6318)
!6329 = !DILocation(line: 97, column: 14, scope: !6318)
!6330 = !DILocation(line: 97, column: 22, scope: !6318)
!6331 = !DILocation(line: 97, column: 29, scope: !6318)
!6332 = !DILocation(line: 97, column: 2, scope: !6318)
!6333 = !DILocation(line: 98, column: 8, scope: !6318)
!6334 = !DILocation(line: 98, column: 2, scope: !6318)
!6335 = !DILocation(line: 99, column: 1, scope: !6318)
!6336 = distinct !DISubprogram(name: "refcount_dec_and_test", scope: !156, file: !156, line: 331, type: !6337, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6337 = !DISubroutineType(types: !6338)
!6338 = !{!587, !6339}
!6339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!6340 = !DILocalVariable(name: "r", arg: 1, scope: !6336, file: !156, line: 331, type: !6339)
!6341 = !DILocation(line: 331, column: 67, scope: !6336)
!6342 = !DILocation(line: 333, column: 33, scope: !6336)
!6343 = !DILocation(line: 333, column: 9, scope: !6336)
!6344 = !DILocation(line: 333, column: 2, scope: !6336)
!6345 = distinct !DISubprogram(name: "__refcount_dec_and_test", scope: !156, file: !156, line: 313, type: !6346, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6346 = !DISubroutineType(types: !6347)
!6347 = !{!587, !6339, !802}
!6348 = !DILocalVariable(name: "r", arg: 1, scope: !6345, file: !156, line: 313, type: !6339)
!6349 = !DILocation(line: 313, column: 69, scope: !6345)
!6350 = !DILocalVariable(name: "oldp", arg: 2, scope: !6345, file: !156, line: 313, type: !802)
!6351 = !DILocation(line: 313, column: 77, scope: !6345)
!6352 = !DILocation(line: 315, column: 36, scope: !6345)
!6353 = !DILocation(line: 315, column: 39, scope: !6345)
!6354 = !DILocation(line: 315, column: 9, scope: !6345)
!6355 = !DILocation(line: 315, column: 2, scope: !6345)
!6356 = distinct !DISubprogram(name: "__refcount_sub_and_test", scope: !156, file: !156, line: 270, type: !6357, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6357 = !DISubroutineType(types: !6358)
!6358 = !{!587, !282, !6339, !802}
!6359 = !DILocalVariable(name: "i", arg: 1, scope: !6360, file: !4991, line: 188, type: !282)
!6360 = distinct !DISubprogram(name: "arch_atomic_fetch_sub", scope: !4991, file: !4991, line: 188, type: !6361, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6361 = !DISubroutineType(types: !6362)
!6362 = !{!282, !282, !4994}
!6363 = !DILocation(line: 188, column: 54, scope: !6360, inlinedAt: !6364)
!6364 = distinct !DILocation(line: 221, column: 9, scope: !6365, inlinedAt: !6366)
!6365 = distinct !DISubprogram(name: "atomic_fetch_sub_release", scope: !4998, file: !4998, line: 218, type: !6361, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6366 = distinct !DILocation(line: 272, column: 12, scope: !6356)
!6367 = !DILocalVariable(name: "v", arg: 2, scope: !6360, file: !4991, line: 188, type: !4994)
!6368 = !DILocation(line: 188, column: 67, scope: !6360, inlinedAt: !6364)
!6369 = !DILocalVariable(name: "__ret", scope: !6370, file: !4991, line: 190, type: !282)
!6370 = distinct !DILexicalBlock(scope: !6360, file: !4991, line: 190, column: 9)
!6371 = !DILocation(line: 190, column: 9, scope: !6370, inlinedAt: !6364)
!6372 = !DILocalVariable(name: "v", arg: 1, scope: !6373, file: !5004, line: 99, type: !5007)
!6373 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !5004, file: !5004, line: 99, type: !5005, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6374 = !DILocation(line: 99, column: 79, scope: !6373, inlinedAt: !6375)
!6375 = distinct !DILocation(line: 220, column: 2, scope: !6365, inlinedAt: !6366)
!6376 = !DILocalVariable(name: "size", arg: 2, scope: !6373, file: !5004, line: 99, type: !427)
!6377 = !DILocation(line: 99, column: 89, scope: !6373, inlinedAt: !6375)
!6378 = !DILocalVariable(name: "i", arg: 1, scope: !6365, file: !4998, line: 218, type: !282)
!6379 = !DILocation(line: 218, column: 30, scope: !6365, inlinedAt: !6366)
!6380 = !DILocalVariable(name: "v", arg: 2, scope: !6365, file: !4998, line: 218, type: !4994)
!6381 = !DILocation(line: 218, column: 43, scope: !6365, inlinedAt: !6366)
!6382 = !DILocalVariable(name: "i", arg: 1, scope: !6356, file: !156, line: 270, type: !282)
!6383 = !DILocation(line: 270, column: 61, scope: !6356)
!6384 = !DILocalVariable(name: "r", arg: 2, scope: !6356, file: !156, line: 270, type: !6339)
!6385 = !DILocation(line: 270, column: 76, scope: !6356)
!6386 = !DILocalVariable(name: "oldp", arg: 3, scope: !6356, file: !156, line: 270, type: !802)
!6387 = !DILocation(line: 270, column: 84, scope: !6356)
!6388 = !DILocalVariable(name: "old", scope: !6356, file: !156, line: 272, type: !282)
!6389 = !DILocation(line: 272, column: 6, scope: !6356)
!6390 = !DILocation(line: 272, column: 37, scope: !6356)
!6391 = !DILocation(line: 272, column: 41, scope: !6356)
!6392 = !DILocation(line: 272, column: 44, scope: !6356)
!6393 = !DILocation(line: 220, column: 31, scope: !6365, inlinedAt: !6366)
!6394 = !DILocation(line: 101, column: 20, scope: !6373, inlinedAt: !6375)
!6395 = !DILocation(line: 101, column: 23, scope: !6373, inlinedAt: !6375)
!6396 = !DILocation(line: 101, column: 2, scope: !6373, inlinedAt: !6375)
!6397 = !DILocation(line: 102, column: 2, scope: !6373, inlinedAt: !6375)
!6398 = !DILocation(line: 221, column: 39, scope: !6365, inlinedAt: !6366)
!6399 = !DILocation(line: 221, column: 42, scope: !6365, inlinedAt: !6366)
!6400 = !{i32 -2147016529}
!6401 = !DILocation(line: 274, column: 6, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6356, file: !156, line: 274, column: 6)
!6403 = !DILocation(line: 274, column: 6, scope: !6356)
!6404 = !DILocation(line: 275, column: 11, scope: !6402)
!6405 = !DILocation(line: 275, column: 4, scope: !6402)
!6406 = !DILocation(line: 275, column: 9, scope: !6402)
!6407 = !DILocation(line: 275, column: 3, scope: !6402)
!6408 = !DILocation(line: 277, column: 6, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6356, file: !156, line: 277, column: 6)
!6410 = !DILocation(line: 277, column: 13, scope: !6409)
!6411 = !DILocation(line: 277, column: 10, scope: !6409)
!6412 = !DILocation(line: 277, column: 6, scope: !6356)
!6413 = !DILocation(line: 278, column: 3, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6409, file: !156, line: 277, column: 16)
!6415 = !{i32 -2144332422}
!6416 = !DILocation(line: 279, column: 3, scope: !6414)
!6417 = !DILocation(line: 282, column: 6, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6356, file: !156, line: 282, column: 6)
!6419 = !DILocation(line: 282, column: 6, scope: !6356)
!6420 = !DILocation(line: 283, column: 26, scope: !6418)
!6421 = !DILocation(line: 283, column: 3, scope: !6418)
!6422 = !DILocation(line: 285, column: 2, scope: !6356)
!6423 = !DILocation(line: 286, column: 1, scope: !6356)
!6424 = distinct !DISubprogram(name: "kasan_check_write", scope: !6425, file: !6425, line: 38, type: !6426, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6425 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!6426 = !DISubroutineType(types: !6427)
!6427 = !{!587, !5007, !7}
!6428 = !DILocalVariable(name: "p", arg: 1, scope: !6424, file: !6425, line: 38, type: !5007)
!6429 = !DILocation(line: 38, column: 59, scope: !6424)
!6430 = !DILocalVariable(name: "size", arg: 2, scope: !6424, file: !6425, line: 38, type: !7)
!6431 = !DILocation(line: 38, column: 75, scope: !6424)
!6432 = !DILocation(line: 40, column: 2, scope: !6424)
!6433 = distinct !DISubprogram(name: "kcsan_check_access", scope: !6434, file: !6434, line: 178, type: !6435, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6434 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!6435 = !DISubroutineType(types: !6436)
!6436 = !{null, !5007, !427, !282}
!6437 = !DILocalVariable(name: "ptr", arg: 1, scope: !6433, file: !6434, line: 178, type: !5007)
!6438 = !DILocation(line: 178, column: 60, scope: !6433)
!6439 = !DILocalVariable(name: "size", arg: 2, scope: !6433, file: !6434, line: 178, type: !427)
!6440 = !DILocation(line: 178, column: 72, scope: !6433)
!6441 = !DILocalVariable(name: "type", arg: 3, scope: !6433, file: !6434, line: 179, type: !282)
!6442 = !DILocation(line: 179, column: 15, scope: !6433)
!6443 = !DILocation(line: 179, column: 23, scope: !6433)
!6444 = distinct !DISubprogram(name: "flush_wc_buf", scope: !3, file: !3, line: 126, type: !4499, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6445 = !DILocalVariable(name: "stdev", arg: 1, scope: !6444, file: !3, line: 126, type: !227)
!6446 = !DILocation(line: 126, column: 48, scope: !6444)
!6447 = !DILocalVariable(name: "mmio_dbmsg", scope: !6444, file: !3, line: 128, type: !6448)
!6448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6449, size: 64)
!6449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ntb_dbmsg_regs", file: !94, line: 374, size: 131072, elements: !6450)
!6450 = !{!6451, !6453, !6454, !6455, !6456, !6457, !6459, !6460, !6461, !6467, !6476, !6480, !6481, !6485, !6487}
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !6449, file: !94, line: 375, baseType: !6452, size: 32768)
!6452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 32768, elements: !4151)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "odb", scope: !6449, file: !94, line: 376, baseType: !255, size: 64, offset: 32768)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "odb_mask", scope: !6449, file: !94, line: 377, baseType: !255, size: 64, offset: 32832)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "idb", scope: !6449, file: !94, line: 378, baseType: !255, size: 64, offset: 32896)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "idb_mask", scope: !6449, file: !94, line: 379, baseType: !255, size: 64, offset: 32960)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "idb_vec_map", scope: !6449, file: !94, line: 380, baseType: !6458, size: 512, offset: 33024)
!6458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, size: 512, elements: !387)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "msg_map", scope: !6449, file: !94, line: 381, baseType: !296, size: 32, offset: 33536)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !6449, file: !94, line: 382, baseType: !296, size: 32, offset: 33568)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "omsg", scope: !6449, file: !94, line: 386, baseType: !6462, size: 256, offset: 33600)
!6462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6463, size: 256, elements: !270)
!6463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6449, file: !94, line: 383, size: 64, elements: !6464)
!6464 = !{!6465, !6466}
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !6463, file: !94, line: 384, baseType: !296, size: 32)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6463, file: !94, line: 385, baseType: !296, size: 32, offset: 32)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "imsg", scope: !6449, file: !94, line: 394, baseType: !6468, size: 256, offset: 33856)
!6468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6469, size: 256, elements: !270)
!6469 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6449, file: !94, line: 388, size: 64, elements: !6470)
!6470 = !{!6471, !6472, !6473, !6474, !6475}
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !6469, file: !94, line: 389, baseType: !296, size: 32)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6469, file: !94, line: 390, baseType: !1446, size: 8, offset: 32)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6469, file: !94, line: 391, baseType: !1446, size: 8, offset: 40)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !6469, file: !94, line: 392, baseType: !1446, size: 8, offset: 48)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6469, file: !94, line: 393, baseType: !1446, size: 8, offset: 56)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !6449, file: !94, line: 396, baseType: !6477, size: 31424, offset: 34112)
!6477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, size: 31424, elements: !6478)
!6478 = !{!6479}
!6479 = !DISubrange(count: 3928)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "msix_table", scope: !6449, file: !94, line: 397, baseType: !4150, size: 8192, offset: 65536)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !6449, file: !94, line: 398, baseType: !6482, size: 24576, offset: 73728)
!6482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, size: 24576, elements: !6483)
!6483 = !{!6484}
!6484 = !DISubrange(count: 3072)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "pba", scope: !6449, file: !94, line: 399, baseType: !6486, size: 192, offset: 98304)
!6486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, size: 192, elements: !4294)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "reserved5", scope: !6449, file: !94, line: 400, baseType: !6488, size: 32576, offset: 98496)
!6488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1446, size: 32576, elements: !6489)
!6489 = !{!6490}
!6490 = !DISubrange(count: 4072)
!6491 = !DILocation(line: 128, column: 33, scope: !6444)
!6492 = !DILocation(line: 134, column: 31, scope: !6444)
!6493 = !DILocation(line: 134, column: 38, scope: !6444)
!6494 = !DILocation(line: 134, column: 15, scope: !6444)
!6495 = !DILocation(line: 134, column: 47, scope: !6444)
!6496 = !DILocation(line: 134, column: 13, scope: !6444)
!6497 = !DILocation(line: 136, column: 12, scope: !6444)
!6498 = !DILocation(line: 136, column: 24, scope: !6444)
!6499 = !DILocation(line: 136, column: 11, scope: !6444)
!6500 = !DILocation(line: 136, column: 2, scope: !6444)
!6501 = !DILocation(line: 137, column: 1, scope: !6444)
!6502 = distinct !DISubprogram(name: "schedule_delayed_work", scope: !104, file: !104, line: 623, type: !6503, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{!587, !6505, !216}
!6505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 64)
!6506 = !DILocalVariable(name: "dwork", arg: 1, scope: !6502, file: !104, line: 623, type: !6505)
!6507 = !DILocation(line: 623, column: 63, scope: !6502)
!6508 = !DILocalVariable(name: "delay", arg: 2, scope: !6502, file: !104, line: 624, type: !216)
!6509 = !DILocation(line: 624, column: 21, scope: !6502)
!6510 = !DILocation(line: 626, column: 28, scope: !6502)
!6511 = !DILocation(line: 626, column: 39, scope: !6502)
!6512 = !DILocation(line: 626, column: 46, scope: !6502)
!6513 = !DILocation(line: 626, column: 9, scope: !6502)
!6514 = !DILocation(line: 626, column: 2, scope: !6502)
!6515 = distinct !DISubprogram(name: "queue_delayed_work", scope: !104, file: !104, line: 518, type: !6516, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6516 = !DISubroutineType(types: !6517)
!6517 = !{!587, !2890, !6505, !216}
!6518 = !DILocalVariable(name: "wq", arg: 1, scope: !6515, file: !104, line: 518, type: !2890)
!6519 = !DILocation(line: 518, column: 64, scope: !6515)
!6520 = !DILocalVariable(name: "dwork", arg: 2, scope: !6515, file: !104, line: 519, type: !6505)
!6521 = !DILocation(line: 519, column: 32, scope: !6515)
!6522 = !DILocalVariable(name: "delay", arg: 3, scope: !6515, file: !104, line: 520, type: !216)
!6523 = !DILocation(line: 520, column: 25, scope: !6515)
!6524 = !DILocation(line: 522, column: 49, scope: !6515)
!6525 = !DILocation(line: 522, column: 53, scope: !6515)
!6526 = !DILocation(line: 522, column: 60, scope: !6515)
!6527 = !DILocation(line: 522, column: 9, scope: !6515)
!6528 = !DILocation(line: 522, column: 2, scope: !6515)
!6529 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !5878, file: !5878, line: 308, type: !5879, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6530 = !DILocalVariable(name: "m", arg: 1, scope: !6529, file: !5878, line: 308, type: !2924)
!6531 = !DILocation(line: 308, column: 66, scope: !6529)
!6532 = !DILocation(line: 310, column: 10, scope: !6529)
!6533 = !DILocation(line: 310, column: 12, scope: !6529)
!6534 = !DILocation(line: 310, column: 34, scope: !6529)
!6535 = !DILocation(line: 310, column: 39, scope: !6529)
!6536 = !DILocation(line: 310, column: 2, scope: !6529)
!6537 = distinct !DISubprogram(name: "device_version_show", scope: !3, file: !3, line: 275, type: !4751, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6538 = !DILocalVariable(name: "dev", arg: 1, scope: !6537, file: !3, line: 275, type: !324)
!6539 = !DILocation(line: 275, column: 51, scope: !6537)
!6540 = !DILocalVariable(name: "attr", arg: 2, scope: !6537, file: !3, line: 276, type: !4753)
!6541 = !DILocation(line: 276, column: 27, scope: !6537)
!6542 = !DILocalVariable(name: "buf", arg: 3, scope: !6537, file: !3, line: 276, type: !382)
!6543 = !DILocation(line: 276, column: 39, scope: !6537)
!6544 = !DILocalVariable(name: "stdev", scope: !6537, file: !3, line: 278, type: !227)
!6545 = !DILocation(line: 278, column: 24, scope: !6537)
!6546 = !DILocation(line: 278, column: 41, scope: !6537)
!6547 = !DILocation(line: 278, column: 32, scope: !6537)
!6548 = !DILocalVariable(name: "ver", scope: !6537, file: !3, line: 279, type: !296)
!6549 = !DILocation(line: 279, column: 6, scope: !6537)
!6550 = !DILocation(line: 281, column: 18, scope: !6537)
!6551 = !DILocation(line: 281, column: 25, scope: !6537)
!6552 = !DILocation(line: 281, column: 40, scope: !6537)
!6553 = !DILocation(line: 281, column: 17, scope: !6537)
!6554 = !DILocation(line: 281, column: 8, scope: !6537)
!6555 = !DILocation(line: 281, column: 6, scope: !6537)
!6556 = !DILocation(line: 283, column: 17, scope: !6537)
!6557 = !DILocation(line: 283, column: 30, scope: !6537)
!6558 = !DILocation(line: 283, column: 9, scope: !6537)
!6559 = !DILocation(line: 283, column: 2, scope: !6537)
!6560 = distinct !DISubprogram(name: "to_stdev", scope: !94, file: !94, line: 519, type: !6561, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6561 = !DISubroutineType(types: !6562)
!6562 = !{!227, !324}
!6563 = !DILocalVariable(name: "dev", arg: 1, scope: !6560, file: !94, line: 519, type: !324)
!6564 = !DILocation(line: 519, column: 61, scope: !6560)
!6565 = !DILocalVariable(name: "__mptr", scope: !6566, file: !94, line: 521, type: !217)
!6566 = distinct !DILexicalBlock(scope: !6560, file: !94, line: 521, column: 9)
!6567 = !DILocation(line: 521, column: 9, scope: !6566)
!6568 = !DILocation(line: 521, column: 9, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6566, file: !94, line: 521, column: 9)
!6570 = !DILocation(line: 521, column: 2, scope: !6560)
!6571 = distinct !DISubprogram(name: "fw_version_show", scope: !3, file: !3, line: 287, type: !4751, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6572 = !DILocalVariable(name: "dev", arg: 1, scope: !6571, file: !3, line: 287, type: !324)
!6573 = !DILocation(line: 287, column: 47, scope: !6571)
!6574 = !DILocalVariable(name: "attr", arg: 2, scope: !6571, file: !3, line: 288, type: !4753)
!6575 = !DILocation(line: 288, column: 27, scope: !6571)
!6576 = !DILocalVariable(name: "buf", arg: 3, scope: !6571, file: !3, line: 288, type: !382)
!6577 = !DILocation(line: 288, column: 39, scope: !6571)
!6578 = !DILocalVariable(name: "stdev", scope: !6571, file: !3, line: 290, type: !227)
!6579 = !DILocation(line: 290, column: 24, scope: !6571)
!6580 = !DILocation(line: 290, column: 41, scope: !6571)
!6581 = !DILocation(line: 290, column: 32, scope: !6571)
!6582 = !DILocalVariable(name: "ver", scope: !6571, file: !3, line: 291, type: !296)
!6583 = !DILocation(line: 291, column: 6, scope: !6571)
!6584 = !DILocation(line: 293, column: 18, scope: !6571)
!6585 = !DILocation(line: 293, column: 25, scope: !6571)
!6586 = !DILocation(line: 293, column: 40, scope: !6571)
!6587 = !DILocation(line: 293, column: 17, scope: !6571)
!6588 = !DILocation(line: 293, column: 8, scope: !6571)
!6589 = !DILocation(line: 293, column: 6, scope: !6571)
!6590 = !DILocation(line: 295, column: 17, scope: !6571)
!6591 = !DILocation(line: 295, column: 32, scope: !6571)
!6592 = !DILocation(line: 295, column: 9, scope: !6571)
!6593 = !DILocation(line: 295, column: 2, scope: !6571)
!6594 = distinct !DISubprogram(name: "vendor_id_show", scope: !3, file: !3, line: 335, type: !4751, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6595 = !DILocalVariable(name: "dev", arg: 1, scope: !6594, file: !3, line: 335, type: !324)
!6596 = !DILocation(line: 335, column: 1, scope: !6594)
!6597 = !DILocalVariable(name: "attr", arg: 2, scope: !6594, file: !3, line: 335, type: !4753)
!6598 = !DILocalVariable(name: "buf", arg: 3, scope: !6594, file: !3, line: 335, type: !382)
!6599 = !DILocalVariable(name: "stdev", scope: !6594, file: !3, line: 335, type: !227)
!6600 = !DILocalVariable(name: "si", scope: !6594, file: !3, line: 335, type: !4214)
!6601 = !DILocation(line: 335, column: 1, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 335, column: 1)
!6603 = !DILocation(line: 335, column: 1, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 335, column: 1)
!6605 = distinct !DISubprogram(name: "io_string_show", scope: !3, file: !3, line: 299, type: !6606, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6606 = !DISubroutineType(types: !6607)
!6607 = !{!413, !382, !217, !427}
!6608 = !DILocalVariable(name: "buf", arg: 1, scope: !6605, file: !3, line: 299, type: !382)
!6609 = !DILocation(line: 299, column: 37, scope: !6605)
!6610 = !DILocalVariable(name: "attr", arg: 2, scope: !6605, file: !3, line: 299, type: !217)
!6611 = !DILocation(line: 299, column: 56, scope: !6605)
!6612 = !DILocalVariable(name: "len", arg: 3, scope: !6605, file: !3, line: 299, type: !427)
!6613 = !DILocation(line: 299, column: 69, scope: !6605)
!6614 = !DILocalVariable(name: "i", scope: !6605, file: !3, line: 301, type: !282)
!6615 = !DILocation(line: 301, column: 6, scope: !6605)
!6616 = !DILocation(line: 303, column: 16, scope: !6605)
!6617 = !DILocation(line: 303, column: 21, scope: !6605)
!6618 = !DILocation(line: 303, column: 27, scope: !6605)
!6619 = !DILocation(line: 303, column: 2, scope: !6605)
!6620 = !DILocation(line: 304, column: 2, scope: !6605)
!6621 = !DILocation(line: 304, column: 6, scope: !6605)
!6622 = !DILocation(line: 304, column: 11, scope: !6605)
!6623 = !DILocation(line: 305, column: 2, scope: !6605)
!6624 = !DILocation(line: 305, column: 6, scope: !6605)
!6625 = !DILocation(line: 305, column: 10, scope: !6605)
!6626 = !DILocation(line: 305, column: 15, scope: !6605)
!6627 = !DILocation(line: 307, column: 11, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 307, column: 2)
!6629 = !DILocation(line: 307, column: 15, scope: !6628)
!6630 = !DILocation(line: 307, column: 9, scope: !6628)
!6631 = !DILocation(line: 307, column: 7, scope: !6628)
!6632 = !DILocation(line: 307, column: 20, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 307, column: 2)
!6634 = !DILocation(line: 307, column: 22, scope: !6633)
!6635 = !DILocation(line: 307, column: 2, scope: !6628)
!6636 = !DILocation(line: 308, column: 7, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 308, column: 7)
!6638 = distinct !DILexicalBlock(scope: !6633, file: !3, line: 307, column: 32)
!6639 = !DILocation(line: 308, column: 11, scope: !6637)
!6640 = !DILocation(line: 308, column: 14, scope: !6637)
!6641 = !DILocation(line: 308, column: 7, scope: !6638)
!6642 = !DILocation(line: 309, column: 4, scope: !6637)
!6643 = !DILocation(line: 310, column: 3, scope: !6638)
!6644 = !DILocation(line: 310, column: 7, scope: !6638)
!6645 = !DILocation(line: 310, column: 10, scope: !6638)
!6646 = !DILocation(line: 311, column: 3, scope: !6638)
!6647 = !DILocation(line: 311, column: 7, scope: !6638)
!6648 = !DILocation(line: 311, column: 9, scope: !6638)
!6649 = !DILocation(line: 311, column: 14, scope: !6638)
!6650 = !DILocation(line: 312, column: 2, scope: !6638)
!6651 = !DILocation(line: 307, column: 28, scope: !6633)
!6652 = !DILocation(line: 307, column: 2, scope: !6633)
!6653 = distinct !{!6653, !6635, !6654}
!6654 = !DILocation(line: 312, column: 2, scope: !6628)
!6655 = !DILocation(line: 314, column: 16, scope: !6605)
!6656 = !DILocation(line: 314, column: 9, scope: !6605)
!6657 = !DILocation(line: 314, column: 2, scope: !6605)
!6658 = distinct !DISubprogram(name: "product_id_show", scope: !3, file: !3, line: 336, type: !4751, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6659 = !DILocalVariable(name: "dev", arg: 1, scope: !6658, file: !3, line: 336, type: !324)
!6660 = !DILocation(line: 336, column: 1, scope: !6658)
!6661 = !DILocalVariable(name: "attr", arg: 2, scope: !6658, file: !3, line: 336, type: !4753)
!6662 = !DILocalVariable(name: "buf", arg: 3, scope: !6658, file: !3, line: 336, type: !382)
!6663 = !DILocalVariable(name: "stdev", scope: !6658, file: !3, line: 336, type: !227)
!6664 = !DILocalVariable(name: "si", scope: !6658, file: !3, line: 336, type: !4214)
!6665 = !DILocation(line: 336, column: 1, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 336, column: 1)
!6667 = !DILocation(line: 336, column: 1, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 336, column: 1)
!6669 = distinct !DISubprogram(name: "product_revision_show", scope: !3, file: !3, line: 337, type: !4751, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6670 = !DILocalVariable(name: "dev", arg: 1, scope: !6669, file: !3, line: 337, type: !324)
!6671 = !DILocation(line: 337, column: 1, scope: !6669)
!6672 = !DILocalVariable(name: "attr", arg: 2, scope: !6669, file: !3, line: 337, type: !4753)
!6673 = !DILocalVariable(name: "buf", arg: 3, scope: !6669, file: !3, line: 337, type: !382)
!6674 = !DILocalVariable(name: "stdev", scope: !6669, file: !3, line: 337, type: !227)
!6675 = !DILocalVariable(name: "si", scope: !6669, file: !3, line: 337, type: !4214)
!6676 = !DILocation(line: 337, column: 1, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 337, column: 1)
!6678 = !DILocation(line: 337, column: 1, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 337, column: 1)
!6680 = distinct !DISubprogram(name: "component_vendor_show", scope: !3, file: !3, line: 339, type: !4751, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6681 = !DILocalVariable(name: "dev", arg: 1, scope: !6680, file: !3, line: 339, type: !324)
!6682 = !DILocation(line: 339, column: 53, scope: !6680)
!6683 = !DILocalVariable(name: "attr", arg: 2, scope: !6680, file: !3, line: 340, type: !4753)
!6684 = !DILocation(line: 340, column: 35, scope: !6680)
!6685 = !DILocalVariable(name: "buf", arg: 3, scope: !6680, file: !3, line: 340, type: !382)
!6686 = !DILocation(line: 340, column: 47, scope: !6680)
!6687 = !DILocalVariable(name: "stdev", scope: !6680, file: !3, line: 342, type: !227)
!6688 = !DILocation(line: 342, column: 24, scope: !6680)
!6689 = !DILocation(line: 342, column: 41, scope: !6680)
!6690 = !DILocation(line: 342, column: 32, scope: !6680)
!6691 = !DILocalVariable(name: "si", scope: !6680, file: !3, line: 343, type: !4214)
!6692 = !DILocation(line: 343, column: 32, scope: !6680)
!6693 = !DILocation(line: 343, column: 37, scope: !6680)
!6694 = !DILocation(line: 343, column: 44, scope: !6680)
!6695 = !DILocation(line: 346, column: 6, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6680, file: !3, line: 346, column: 6)
!6697 = !DILocation(line: 346, column: 13, scope: !6696)
!6698 = !DILocation(line: 346, column: 17, scope: !6696)
!6699 = !DILocation(line: 346, column: 6, scope: !6680)
!6700 = !DILocation(line: 347, column: 18, scope: !6696)
!6701 = !DILocation(line: 347, column: 10, scope: !6696)
!6702 = !DILocation(line: 347, column: 3, scope: !6696)
!6703 = !DILocation(line: 349, column: 24, scope: !6680)
!6704 = !DILocation(line: 349, column: 30, scope: !6680)
!6705 = !DILocation(line: 349, column: 34, scope: !6680)
!6706 = !DILocation(line: 349, column: 39, scope: !6680)
!6707 = !DILocation(line: 349, column: 29, scope: !6680)
!6708 = !DILocation(line: 349, column: 9, scope: !6680)
!6709 = !DILocation(line: 349, column: 2, scope: !6680)
!6710 = !DILocation(line: 351, column: 1, scope: !6680)
!6711 = distinct !DISubprogram(name: "component_id_show", scope: !3, file: !3, line: 354, type: !4751, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6712 = !DILocalVariable(name: "dev", arg: 1, scope: !6711, file: !3, line: 354, type: !324)
!6713 = !DILocation(line: 354, column: 49, scope: !6711)
!6714 = !DILocalVariable(name: "attr", arg: 2, scope: !6711, file: !3, line: 355, type: !4753)
!6715 = !DILocation(line: 355, column: 27, scope: !6711)
!6716 = !DILocalVariable(name: "buf", arg: 3, scope: !6711, file: !3, line: 355, type: !382)
!6717 = !DILocation(line: 355, column: 39, scope: !6711)
!6718 = !DILocalVariable(name: "stdev", scope: !6711, file: !3, line: 357, type: !227)
!6719 = !DILocation(line: 357, column: 24, scope: !6711)
!6720 = !DILocation(line: 357, column: 41, scope: !6711)
!6721 = !DILocation(line: 357, column: 32, scope: !6711)
!6722 = !DILocalVariable(name: "id", scope: !6711, file: !3, line: 358, type: !282)
!6723 = !DILocation(line: 358, column: 6, scope: !6711)
!6724 = !DILocation(line: 358, column: 21, scope: !6711)
!6725 = !DILocation(line: 358, column: 28, scope: !6711)
!6726 = !DILocation(line: 358, column: 43, scope: !6711)
!6727 = !DILocation(line: 358, column: 48, scope: !6711)
!6728 = !DILocation(line: 358, column: 20, scope: !6711)
!6729 = !DILocation(line: 358, column: 11, scope: !6711)
!6730 = !DILocation(line: 361, column: 6, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 361, column: 6)
!6732 = !DILocation(line: 361, column: 13, scope: !6731)
!6733 = !DILocation(line: 361, column: 17, scope: !6731)
!6734 = !DILocation(line: 361, column: 6, scope: !6711)
!6735 = !DILocation(line: 362, column: 18, scope: !6731)
!6736 = !DILocation(line: 362, column: 10, scope: !6731)
!6737 = !DILocation(line: 362, column: 3, scope: !6731)
!6738 = !DILocation(line: 364, column: 17, scope: !6711)
!6739 = !DILocation(line: 364, column: 34, scope: !6711)
!6740 = !DILocation(line: 364, column: 9, scope: !6711)
!6741 = !DILocation(line: 364, column: 2, scope: !6711)
!6742 = !DILocation(line: 365, column: 1, scope: !6711)
!6743 = distinct !DISubprogram(name: "component_revision_show", scope: !3, file: !3, line: 368, type: !4751, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6744 = !DILocalVariable(name: "dev", arg: 1, scope: !6743, file: !3, line: 368, type: !324)
!6745 = !DILocation(line: 368, column: 55, scope: !6743)
!6746 = !DILocalVariable(name: "attr", arg: 2, scope: !6743, file: !3, line: 369, type: !4753)
!6747 = !DILocation(line: 369, column: 27, scope: !6743)
!6748 = !DILocalVariable(name: "buf", arg: 3, scope: !6743, file: !3, line: 369, type: !382)
!6749 = !DILocation(line: 369, column: 39, scope: !6743)
!6750 = !DILocalVariable(name: "stdev", scope: !6743, file: !3, line: 371, type: !227)
!6751 = !DILocation(line: 371, column: 24, scope: !6743)
!6752 = !DILocation(line: 371, column: 41, scope: !6743)
!6753 = !DILocation(line: 371, column: 32, scope: !6743)
!6754 = !DILocalVariable(name: "rev", scope: !6743, file: !3, line: 372, type: !282)
!6755 = !DILocation(line: 372, column: 6, scope: !6743)
!6756 = !DILocation(line: 372, column: 21, scope: !6743)
!6757 = !DILocation(line: 372, column: 28, scope: !6743)
!6758 = !DILocation(line: 372, column: 43, scope: !6743)
!6759 = !DILocation(line: 372, column: 48, scope: !6743)
!6760 = !DILocation(line: 372, column: 12, scope: !6743)
!6761 = !DILocation(line: 375, column: 6, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 375, column: 6)
!6763 = !DILocation(line: 375, column: 13, scope: !6762)
!6764 = !DILocation(line: 375, column: 17, scope: !6762)
!6765 = !DILocation(line: 375, column: 6, scope: !6743)
!6766 = !DILocation(line: 376, column: 18, scope: !6762)
!6767 = !DILocation(line: 376, column: 10, scope: !6762)
!6768 = !DILocation(line: 376, column: 3, scope: !6762)
!6769 = !DILocation(line: 378, column: 17, scope: !6743)
!6770 = !DILocation(line: 378, column: 30, scope: !6743)
!6771 = !DILocation(line: 378, column: 9, scope: !6743)
!6772 = !DILocation(line: 378, column: 2, scope: !6743)
!6773 = !DILocation(line: 379, column: 1, scope: !6743)
!6774 = distinct !DISubprogram(name: "partition_show", scope: !3, file: !3, line: 382, type: !4751, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6775 = !DILocalVariable(name: "dev", arg: 1, scope: !6774, file: !3, line: 382, type: !324)
!6776 = !DILocation(line: 382, column: 46, scope: !6774)
!6777 = !DILocalVariable(name: "attr", arg: 2, scope: !6774, file: !3, line: 383, type: !4753)
!6778 = !DILocation(line: 383, column: 27, scope: !6774)
!6779 = !DILocalVariable(name: "buf", arg: 3, scope: !6774, file: !3, line: 383, type: !382)
!6780 = !DILocation(line: 383, column: 39, scope: !6774)
!6781 = !DILocalVariable(name: "stdev", scope: !6774, file: !3, line: 385, type: !227)
!6782 = !DILocation(line: 385, column: 24, scope: !6774)
!6783 = !DILocation(line: 385, column: 41, scope: !6774)
!6784 = !DILocation(line: 385, column: 32, scope: !6774)
!6785 = !DILocation(line: 387, column: 17, scope: !6774)
!6786 = !DILocation(line: 387, column: 30, scope: !6774)
!6787 = !DILocation(line: 387, column: 37, scope: !6774)
!6788 = !DILocation(line: 387, column: 9, scope: !6774)
!6789 = !DILocation(line: 387, column: 2, scope: !6774)
!6790 = distinct !DISubprogram(name: "partition_count_show", scope: !3, file: !3, line: 391, type: !4751, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6791 = !DILocalVariable(name: "dev", arg: 1, scope: !6790, file: !3, line: 391, type: !324)
!6792 = !DILocation(line: 391, column: 52, scope: !6790)
!6793 = !DILocalVariable(name: "attr", arg: 2, scope: !6790, file: !3, line: 392, type: !4753)
!6794 = !DILocation(line: 392, column: 27, scope: !6790)
!6795 = !DILocalVariable(name: "buf", arg: 3, scope: !6790, file: !3, line: 392, type: !382)
!6796 = !DILocation(line: 392, column: 39, scope: !6790)
!6797 = !DILocalVariable(name: "stdev", scope: !6790, file: !3, line: 394, type: !227)
!6798 = !DILocation(line: 394, column: 24, scope: !6790)
!6799 = !DILocation(line: 394, column: 41, scope: !6790)
!6800 = !DILocation(line: 394, column: 32, scope: !6790)
!6801 = !DILocation(line: 396, column: 17, scope: !6790)
!6802 = !DILocation(line: 396, column: 30, scope: !6790)
!6803 = !DILocation(line: 396, column: 37, scope: !6790)
!6804 = !DILocation(line: 396, column: 9, scope: !6790)
!6805 = !DILocation(line: 396, column: 2, scope: !6790)
!6806 = distinct !DISubprogram(name: "writeq", scope: !6807, file: !6807, line: 97, type: !6808, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6807 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!6808 = !DISubroutineType(types: !6809)
!6809 = !{null, !255, !6810}
!6810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!6811 = !DILocalVariable(name: "val", arg: 1, scope: !6806, file: !6807, line: 97, type: !255)
!6812 = !DILocation(line: 97, column: 1, scope: !6806)
!6813 = !DILocalVariable(name: "addr", arg: 2, scope: !6806, file: !6807, line: 97, type: !6810)
!6814 = !{i32 -2143539330}
!6815 = distinct !DISubprogram(name: "dma_free_coherent", scope: !6816, file: !6816, line: 400, type: !6817, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6816 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!6817 = !DISubroutineType(types: !6818)
!6818 = !{null, !324, !427, !217, !1017}
!6819 = !DILocalVariable(name: "dev", arg: 1, scope: !6815, file: !6816, line: 400, type: !324)
!6820 = !DILocation(line: 400, column: 53, scope: !6815)
!6821 = !DILocalVariable(name: "size", arg: 2, scope: !6815, file: !6816, line: 400, type: !427)
!6822 = !DILocation(line: 400, column: 65, scope: !6815)
!6823 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !6815, file: !6816, line: 401, type: !217)
!6824 = !DILocation(line: 401, column: 9, scope: !6815)
!6825 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !6815, file: !6816, line: 401, type: !1017)
!6826 = !DILocation(line: 401, column: 30, scope: !6815)
!6827 = !DILocation(line: 403, column: 24, scope: !6815)
!6828 = !DILocation(line: 403, column: 29, scope: !6815)
!6829 = !DILocation(line: 403, column: 35, scope: !6815)
!6830 = !DILocation(line: 403, column: 45, scope: !6815)
!6831 = !DILocation(line: 403, column: 9, scope: !6815)
!6832 = !DILocation(line: 403, column: 2, scope: !6815)
!6833 = distinct !DISubprogram(name: "switchtec_dev_read", scope: !3, file: !3, line: 509, type: !2971, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6834 = !DILocalVariable(name: "addr", arg: 1, scope: !6835, file: !6836, line: 138, type: !2224)
!6835 = distinct !DISubprogram(name: "check_copy_size", scope: !6836, file: !6836, line: 138, type: !6837, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6836 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!6837 = !DISubroutineType(types: !6838)
!6838 = !{!587, !2224, !427, !587}
!6839 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !6840)
!6840 = distinct !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !6846)
!6841 = distinct !DILexicalBlock(scope: !6843, file: !6842, line: 199, column: 6)
!6842 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!6843 = distinct !DISubprogram(name: "copy_to_user", scope: !6842, file: !6842, line: 197, type: !6844, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!6844 = !DISubroutineType(types: !6845)
!6845 = !{!216, !217, !2224, !216}
!6846 = distinct !DILocation(line: 560, column: 7, scope: !6833)
!6847 = !DILocalVariable(name: "bytes", arg: 2, scope: !6835, file: !6836, line: 138, type: !427)
!6848 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !6840)
!6849 = !DILocalVariable(name: "is_source", arg: 3, scope: !6835, file: !6836, line: 138, type: !587)
!6850 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !6840)
!6851 = !DILocalVariable(name: "sz", scope: !6835, file: !6836, line: 140, type: !282)
!6852 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !6840)
!6853 = !DILocalVariable(name: "__ret_warn_on", scope: !6854, file: !6836, line: 150, type: !282)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !6836, line: 150, column: 6)
!6855 = distinct !DILexicalBlock(scope: !6835, file: !6836, line: 150, column: 6)
!6856 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !6840)
!6857 = !DILocalVariable(name: "to", arg: 1, scope: !6843, file: !6842, line: 197, type: !217)
!6858 = !DILocation(line: 197, column: 27, scope: !6843, inlinedAt: !6846)
!6859 = !DILocalVariable(name: "from", arg: 2, scope: !6843, file: !6842, line: 197, type: !2224)
!6860 = !DILocation(line: 197, column: 43, scope: !6843, inlinedAt: !6846)
!6861 = !DILocalVariable(name: "n", arg: 3, scope: !6843, file: !6842, line: 197, type: !216)
!6862 = !DILocation(line: 197, column: 63, scope: !6843, inlinedAt: !6846)
!6863 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !6864)
!6864 = distinct !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !6865)
!6865 = distinct !DILocation(line: 552, column: 7, scope: !6833)
!6866 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !6864)
!6867 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !6864)
!6868 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !6864)
!6869 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !6864)
!6870 = !DILocation(line: 197, column: 27, scope: !6843, inlinedAt: !6865)
!6871 = !DILocation(line: 197, column: 43, scope: !6843, inlinedAt: !6865)
!6872 = !DILocation(line: 197, column: 63, scope: !6843, inlinedAt: !6865)
!6873 = !DILocalVariable(name: "filp", arg: 1, scope: !6833, file: !3, line: 509, type: !457)
!6874 = !DILocation(line: 509, column: 48, scope: !6833)
!6875 = !DILocalVariable(name: "data", arg: 2, scope: !6833, file: !3, line: 509, type: !382)
!6876 = !DILocation(line: 509, column: 67, scope: !6833)
!6877 = !DILocalVariable(name: "size", arg: 3, scope: !6833, file: !3, line: 510, type: !427)
!6878 = !DILocation(line: 510, column: 14, scope: !6833)
!6879 = !DILocalVariable(name: "off", arg: 4, scope: !6833, file: !3, line: 510, type: !2973)
!6880 = !DILocation(line: 510, column: 28, scope: !6833)
!6881 = !DILocalVariable(name: "stuser", scope: !6833, file: !3, line: 512, type: !4516)
!6882 = !DILocation(line: 512, column: 25, scope: !6833)
!6883 = !DILocation(line: 512, column: 34, scope: !6833)
!6884 = !DILocation(line: 512, column: 40, scope: !6833)
!6885 = !DILocalVariable(name: "stdev", scope: !6833, file: !3, line: 513, type: !227)
!6886 = !DILocation(line: 513, column: 24, scope: !6833)
!6887 = !DILocation(line: 513, column: 32, scope: !6833)
!6888 = !DILocation(line: 513, column: 40, scope: !6833)
!6889 = !DILocalVariable(name: "rc", scope: !6833, file: !3, line: 514, type: !282)
!6890 = !DILocation(line: 514, column: 6, scope: !6833)
!6891 = !DILocation(line: 516, column: 6, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 516, column: 6)
!6893 = !DILocation(line: 516, column: 11, scope: !6892)
!6894 = !DILocation(line: 516, column: 33, scope: !6892)
!6895 = !DILocation(line: 517, column: 6, scope: !6892)
!6896 = !DILocation(line: 517, column: 11, scope: !6892)
!6897 = !DILocation(line: 516, column: 6, scope: !6833)
!6898 = !DILocation(line: 518, column: 3, scope: !6892)
!6899 = !DILocation(line: 520, column: 33, scope: !6833)
!6900 = !DILocation(line: 520, column: 7, scope: !6833)
!6901 = !DILocation(line: 520, column: 5, scope: !6833)
!6902 = !DILocation(line: 521, column: 6, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 521, column: 6)
!6904 = !DILocation(line: 521, column: 6, scope: !6833)
!6905 = !DILocation(line: 522, column: 10, scope: !6903)
!6906 = !DILocation(line: 522, column: 3, scope: !6903)
!6907 = !DILocation(line: 524, column: 6, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 524, column: 6)
!6909 = !DILocation(line: 524, column: 14, scope: !6908)
!6910 = !DILocation(line: 524, column: 20, scope: !6908)
!6911 = !DILocation(line: 524, column: 6, scope: !6833)
!6912 = !DILocation(line: 525, column: 17, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 524, column: 34)
!6914 = !DILocation(line: 525, column: 24, scope: !6913)
!6915 = !DILocation(line: 525, column: 3, scope: !6913)
!6916 = !DILocation(line: 526, column: 3, scope: !6913)
!6917 = !DILocation(line: 529, column: 21, scope: !6833)
!6918 = !DILocation(line: 529, column: 26, scope: !6833)
!6919 = !DILocation(line: 529, column: 2, scope: !6833)
!6920 = !DILocation(line: 529, column: 10, scope: !6833)
!6921 = !DILocation(line: 529, column: 19, scope: !6833)
!6922 = !DILocation(line: 531, column: 16, scope: !6833)
!6923 = !DILocation(line: 531, column: 23, scope: !6833)
!6924 = !DILocation(line: 531, column: 2, scope: !6833)
!6925 = !DILocation(line: 533, column: 6, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 533, column: 6)
!6927 = !DILocation(line: 533, column: 12, scope: !6926)
!6928 = !DILocation(line: 533, column: 20, scope: !6926)
!6929 = !DILocation(line: 533, column: 6, scope: !6833)
!6930 = !DILocation(line: 534, column: 8, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 534, column: 7)
!6932 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 533, column: 34)
!6933 = !DILocation(line: 534, column: 16, scope: !6931)
!6934 = !DILocation(line: 534, column: 7, scope: !6932)
!6935 = !DILocation(line: 535, column: 4, scope: !6931)
!6936 = !DILocation(line: 536, column: 2, scope: !6932)
!6937 = !DILocalVariable(name: "__ret", scope: !6938, file: !3, line: 537, type: !282)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 537, column: 8)
!6939 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 536, column: 9)
!6940 = !DILocation(line: 537, column: 8, scope: !6938)
!6941 = !DILocation(line: 537, column: 8, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6938, file: !3, line: 537, column: 8)
!6943 = !DILocation(line: 537, column: 8, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 537, column: 8)
!6945 = !DILocation(line: 537, column: 8, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6938, file: !3, line: 537, column: 8)
!6947 = !DILocalVariable(name: "__wq_entry", scope: !6948, file: !3, line: 537, type: !6949)
!6948 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 537, column: 8)
!6949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1580, line: 29, size: 320, elements: !6950)
!6950 = !{!6951, !6952, !6953, !6959}
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6949, file: !1580, line: 30, baseType: !7, size: 32)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6949, file: !1580, line: 31, baseType: !217, size: 64, offset: 64)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !6949, file: !1580, line: 32, baseType: !6954, size: 64, offset: 128)
!6954 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1580, line: 16, baseType: !6955)
!6955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6956, size: 64)
!6956 = !DISubroutineType(types: !6957)
!6957 = !{!282, !6958, !7, !282, !217}
!6958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6949, size: 64)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6949, file: !1580, line: 33, baseType: !223, size: 128, offset: 192)
!6960 = !DILocation(line: 537, column: 8, scope: !6948)
!6961 = !DILocalVariable(name: "__ret", scope: !6948, file: !3, line: 537, type: !105)
!6962 = !DILocalVariable(name: "__int", scope: !6963, file: !3, line: 537, type: !105)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 537, column: 8)
!6964 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 537, column: 8)
!6965 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 537, column: 8)
!6966 = !DILocation(line: 537, column: 8, scope: !6963)
!6967 = !DILocation(line: 537, column: 8, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 537, column: 8)
!6969 = !DILocation(line: 537, column: 8, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 537, column: 8)
!6971 = !DILocation(line: 537, column: 8, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 537, column: 8)
!6973 = !DILocation(line: 537, column: 8, scope: !6964)
!6974 = distinct !{!6974, !6975, !6975}
!6975 = !DILocation(line: 537, column: 8, scope: !6965)
!6976 = !DILabel(scope: !6948, name: "__out", file: !3, line: 537)
!6977 = !DILocation(line: 537, column: 6, scope: !6939)
!6978 = !DILocation(line: 539, column: 7, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 539, column: 7)
!6980 = !DILocation(line: 539, column: 10, scope: !6979)
!6981 = !DILocation(line: 539, column: 7, scope: !6939)
!6982 = !DILocation(line: 540, column: 11, scope: !6979)
!6983 = !DILocation(line: 540, column: 4, scope: !6979)
!6984 = !DILocation(line: 543, column: 33, scope: !6833)
!6985 = !DILocation(line: 543, column: 7, scope: !6833)
!6986 = !DILocation(line: 543, column: 5, scope: !6833)
!6987 = !DILocation(line: 544, column: 6, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 544, column: 6)
!6989 = !DILocation(line: 544, column: 6, scope: !6833)
!6990 = !DILocation(line: 545, column: 10, scope: !6988)
!6991 = !DILocation(line: 545, column: 3, scope: !6988)
!6992 = !DILocation(line: 547, column: 6, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 547, column: 6)
!6994 = !DILocation(line: 547, column: 14, scope: !6993)
!6995 = !DILocation(line: 547, column: 20, scope: !6993)
!6996 = !DILocation(line: 547, column: 6, scope: !6833)
!6997 = !DILocation(line: 548, column: 17, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 547, column: 34)
!6999 = !DILocation(line: 548, column: 24, scope: !6998)
!7000 = !DILocation(line: 548, column: 3, scope: !6998)
!7001 = !DILocation(line: 549, column: 3, scope: !6998)
!7002 = !DILocation(line: 552, column: 20, scope: !6833)
!7003 = !DILocation(line: 552, column: 27, scope: !6833)
!7004 = !DILocation(line: 552, column: 35, scope: !6833)
!7005 = !DILocation(line: 552, column: 26, scope: !6833)
!7006 = !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !6865)
!7007 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !6864)
!7008 = distinct !DILexicalBlock(scope: !6835, file: !6836, line: 141, column: 6)
!7009 = !DILocation(line: 0, scope: !7008, inlinedAt: !6864)
!7010 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !6864)
!7011 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !6864)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !6836, line: 142, column: 7)
!7013 = distinct !DILexicalBlock(scope: !7008, file: !6836, line: 141, column: 39)
!7014 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !6864)
!7015 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !6864)
!7016 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !6864)
!7017 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !6864)
!7018 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !6864)
!7019 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !6864)
!7020 = distinct !DILexicalBlock(scope: !7012, file: !6836, line: 144, column: 12)
!7021 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !6864)
!7022 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !6864)
!7023 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !6864)
!7024 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !6864)
!7025 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !6864)
!7026 = distinct !DILexicalBlock(scope: !6854, file: !6836, line: 150, column: 6)
!7027 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !6864)
!7028 = distinct !DILexicalBlock(scope: !7029, file: !6836, line: 150, column: 6)
!7029 = distinct !DILexicalBlock(scope: !7026, file: !6836, line: 150, column: 6)
!7030 = !{i32 -2145399499, i32 -2145399470, i32 -2145399424, i32 -2145399366, i32 -2145399312, i32 -2145399258, i32 -2145399203, i32 -2145399172}
!7031 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !6864)
!7032 = distinct !DILexicalBlock(scope: !7029, file: !6836, line: 150, column: 6)
!7033 = !{i32 -2145398752, i32 -2145398745, i32 -2145398693, i32 -2145398662, i32 -2145398632}
!7034 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !6864)
!7035 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !6864)
!7036 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !6864)
!7037 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !6864)
!7038 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !6864)
!7039 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !6864)
!7040 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !6864)
!7041 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !6864)
!7042 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !6864)
!7043 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !6864)
!7044 = !DILocation(line: 199, column: 6, scope: !6843, inlinedAt: !6865)
!7045 = !DILocation(line: 200, column: 21, scope: !6841, inlinedAt: !6865)
!7046 = !DILocation(line: 200, column: 25, scope: !6841, inlinedAt: !6865)
!7047 = !DILocation(line: 200, column: 31, scope: !6841, inlinedAt: !6865)
!7048 = !DILocation(line: 200, column: 7, scope: !6841, inlinedAt: !6865)
!7049 = !DILocation(line: 200, column: 5, scope: !6841, inlinedAt: !6865)
!7050 = !DILocation(line: 200, column: 3, scope: !6841, inlinedAt: !6865)
!7051 = !DILocation(line: 201, column: 9, scope: !6843, inlinedAt: !6865)
!7052 = !DILocation(line: 552, column: 7, scope: !6833)
!7053 = !DILocation(line: 552, column: 5, scope: !6833)
!7054 = !DILocation(line: 554, column: 6, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 554, column: 6)
!7056 = !DILocation(line: 554, column: 6, scope: !6833)
!7057 = !DILocation(line: 555, column: 6, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 554, column: 10)
!7059 = !DILocation(line: 556, column: 3, scope: !7058)
!7060 = !DILocation(line: 559, column: 7, scope: !6833)
!7061 = !DILocation(line: 560, column: 20, scope: !6833)
!7062 = !DILocation(line: 560, column: 27, scope: !6833)
!7063 = !DILocation(line: 560, column: 35, scope: !6833)
!7064 = !DILocation(line: 560, column: 26, scope: !6833)
!7065 = !DILocation(line: 561, column: 6, scope: !6833)
!7066 = !DILocation(line: 561, column: 11, scope: !6833)
!7067 = !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !6846)
!7068 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !6840)
!7069 = !DILocation(line: 0, scope: !7008, inlinedAt: !6840)
!7070 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !6840)
!7071 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !6840)
!7072 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !6840)
!7073 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !6840)
!7074 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !6840)
!7075 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !6840)
!7076 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !6840)
!7077 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !6840)
!7078 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !6840)
!7079 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !6840)
!7080 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !6840)
!7081 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !6840)
!7082 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !6840)
!7083 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !6840)
!7084 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !6840)
!7085 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !6840)
!7086 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !6840)
!7087 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !6840)
!7088 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !6840)
!7089 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !6840)
!7090 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !6840)
!7091 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !6840)
!7092 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !6840)
!7093 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !6840)
!7094 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !6840)
!7095 = !DILocation(line: 199, column: 6, scope: !6843, inlinedAt: !6846)
!7096 = !DILocation(line: 200, column: 21, scope: !6841, inlinedAt: !6846)
!7097 = !DILocation(line: 200, column: 25, scope: !6841, inlinedAt: !6846)
!7098 = !DILocation(line: 200, column: 31, scope: !6841, inlinedAt: !6846)
!7099 = !DILocation(line: 200, column: 7, scope: !6841, inlinedAt: !6846)
!7100 = !DILocation(line: 200, column: 5, scope: !6841, inlinedAt: !6846)
!7101 = !DILocation(line: 200, column: 3, scope: !6841, inlinedAt: !6846)
!7102 = !DILocation(line: 201, column: 9, scope: !6843, inlinedAt: !6846)
!7103 = !DILocation(line: 560, column: 7, scope: !6833)
!7104 = !DILocation(line: 560, column: 5, scope: !6833)
!7105 = !DILocation(line: 562, column: 6, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 562, column: 6)
!7107 = !DILocation(line: 562, column: 6, scope: !6833)
!7108 = !DILocation(line: 563, column: 6, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 562, column: 10)
!7110 = !DILocation(line: 564, column: 3, scope: !7109)
!7111 = !DILocation(line: 567, column: 19, scope: !6833)
!7112 = !DILocation(line: 567, column: 2, scope: !6833)
!7113 = !DILabel(scope: !6833, name: "out", file: !3, line: 569)
!7114 = !DILocation(line: 569, column: 1, scope: !6833)
!7115 = !DILocation(line: 570, column: 16, scope: !6833)
!7116 = !DILocation(line: 570, column: 23, scope: !6833)
!7117 = !DILocation(line: 570, column: 2, scope: !6833)
!7118 = !DILocation(line: 572, column: 6, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 572, column: 6)
!7120 = !DILocation(line: 572, column: 14, scope: !7119)
!7121 = !DILocation(line: 572, column: 21, scope: !7119)
!7122 = !DILocation(line: 572, column: 6, scope: !6833)
!7123 = !DILocation(line: 573, column: 10, scope: !7119)
!7124 = !DILocation(line: 573, column: 3, scope: !7119)
!7125 = !DILocation(line: 574, column: 11, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 574, column: 11)
!7127 = !DILocation(line: 574, column: 19, scope: !7126)
!7128 = !DILocation(line: 574, column: 26, scope: !7126)
!7129 = !DILocation(line: 574, column: 11, scope: !7119)
!7130 = !DILocation(line: 575, column: 3, scope: !7126)
!7131 = !DILocation(line: 577, column: 3, scope: !7126)
!7132 = !DILocation(line: 578, column: 1, scope: !6833)
!7133 = distinct !DISubprogram(name: "switchtec_dev_write", scope: !3, file: !3, line: 457, type: !2976, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7134 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !7135)
!7135 = distinct !DILocation(line: 191, column: 6, scope: !7136, inlinedAt: !7138)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !6842, line: 191, column: 6)
!7137 = distinct !DISubprogram(name: "copy_from_user", scope: !6842, file: !6842, line: 189, type: !6844, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7138 = distinct !DILocation(line: 492, column: 7, scope: !7133)
!7139 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !7135)
!7140 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !7135)
!7141 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !7135)
!7142 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !7135)
!7143 = !DILocalVariable(name: "to", arg: 1, scope: !7137, file: !6842, line: 189, type: !217)
!7144 = !DILocation(line: 189, column: 22, scope: !7137, inlinedAt: !7138)
!7145 = !DILocalVariable(name: "from", arg: 2, scope: !7137, file: !6842, line: 189, type: !2224)
!7146 = !DILocation(line: 189, column: 45, scope: !7137, inlinedAt: !7138)
!7147 = !DILocalVariable(name: "n", arg: 3, scope: !7137, file: !6842, line: 189, type: !216)
!7148 = !DILocation(line: 189, column: 65, scope: !7137, inlinedAt: !7138)
!7149 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !7150)
!7150 = distinct !DILocation(line: 191, column: 6, scope: !7136, inlinedAt: !7151)
!7151 = distinct !DILocation(line: 479, column: 7, scope: !7133)
!7152 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !7150)
!7153 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !7150)
!7154 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !7150)
!7155 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !7150)
!7156 = !DILocation(line: 189, column: 22, scope: !7137, inlinedAt: !7151)
!7157 = !DILocation(line: 189, column: 45, scope: !7137, inlinedAt: !7151)
!7158 = !DILocation(line: 189, column: 65, scope: !7137, inlinedAt: !7151)
!7159 = !DILocalVariable(name: "filp", arg: 1, scope: !7133, file: !3, line: 457, type: !457)
!7160 = !DILocation(line: 457, column: 49, scope: !7133)
!7161 = !DILocalVariable(name: "data", arg: 2, scope: !7133, file: !3, line: 457, type: !262)
!7162 = !DILocation(line: 457, column: 74, scope: !7133)
!7163 = !DILocalVariable(name: "size", arg: 3, scope: !7133, file: !3, line: 458, type: !427)
!7164 = !DILocation(line: 458, column: 15, scope: !7133)
!7165 = !DILocalVariable(name: "off", arg: 4, scope: !7133, file: !3, line: 458, type: !2973)
!7166 = !DILocation(line: 458, column: 29, scope: !7133)
!7167 = !DILocalVariable(name: "stuser", scope: !7133, file: !3, line: 460, type: !4516)
!7168 = !DILocation(line: 460, column: 25, scope: !7133)
!7169 = !DILocation(line: 460, column: 34, scope: !7133)
!7170 = !DILocation(line: 460, column: 40, scope: !7133)
!7171 = !DILocalVariable(name: "stdev", scope: !7133, file: !3, line: 461, type: !227)
!7172 = !DILocation(line: 461, column: 24, scope: !7133)
!7173 = !DILocation(line: 461, column: 32, scope: !7133)
!7174 = !DILocation(line: 461, column: 40, scope: !7133)
!7175 = !DILocalVariable(name: "rc", scope: !7133, file: !3, line: 462, type: !282)
!7176 = !DILocation(line: 462, column: 6, scope: !7133)
!7177 = !DILocation(line: 464, column: 6, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 464, column: 6)
!7179 = !DILocation(line: 464, column: 11, scope: !7178)
!7180 = !DILocation(line: 464, column: 33, scope: !7178)
!7181 = !DILocation(line: 465, column: 6, scope: !7178)
!7182 = !DILocation(line: 465, column: 11, scope: !7178)
!7183 = !DILocation(line: 464, column: 6, scope: !7133)
!7184 = !DILocation(line: 466, column: 3, scope: !7178)
!7185 = !DILocation(line: 468, column: 21, scope: !7133)
!7186 = !DILocation(line: 468, column: 26, scope: !7133)
!7187 = !DILocation(line: 468, column: 2, scope: !7133)
!7188 = !DILocation(line: 468, column: 10, scope: !7133)
!7189 = !DILocation(line: 468, column: 19, scope: !7133)
!7190 = !DILocation(line: 470, column: 33, scope: !7133)
!7191 = !DILocation(line: 470, column: 7, scope: !7133)
!7192 = !DILocation(line: 470, column: 5, scope: !7133)
!7193 = !DILocation(line: 471, column: 6, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 471, column: 6)
!7195 = !DILocation(line: 471, column: 6, scope: !7133)
!7196 = !DILocation(line: 472, column: 10, scope: !7194)
!7197 = !DILocation(line: 472, column: 3, scope: !7194)
!7198 = !DILocation(line: 474, column: 6, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 474, column: 6)
!7200 = !DILocation(line: 474, column: 14, scope: !7199)
!7201 = !DILocation(line: 474, column: 20, scope: !7199)
!7202 = !DILocation(line: 474, column: 6, scope: !7133)
!7203 = !DILocation(line: 475, column: 6, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7199, file: !3, line: 474, column: 34)
!7205 = !DILocation(line: 476, column: 3, scope: !7204)
!7206 = !DILocation(line: 479, column: 23, scope: !7133)
!7207 = !DILocation(line: 479, column: 31, scope: !7133)
!7208 = !DILocation(line: 479, column: 22, scope: !7133)
!7209 = !DILocation(line: 479, column: 36, scope: !7133)
!7210 = !DILocation(line: 191, column: 6, scope: !7136, inlinedAt: !7151)
!7211 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !7150)
!7212 = !DILocation(line: 0, scope: !7008, inlinedAt: !7150)
!7213 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !7150)
!7214 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !7150)
!7215 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !7150)
!7216 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !7150)
!7217 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !7150)
!7218 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !7150)
!7219 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !7150)
!7220 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !7150)
!7221 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !7150)
!7222 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !7150)
!7223 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !7150)
!7224 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !7150)
!7225 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !7150)
!7226 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !7150)
!7227 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !7150)
!7228 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !7150)
!7229 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !7150)
!7230 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !7150)
!7231 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !7150)
!7232 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !7150)
!7233 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !7150)
!7234 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !7150)
!7235 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !7150)
!7236 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !7150)
!7237 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !7150)
!7238 = !DILocation(line: 191, column: 6, scope: !7137, inlinedAt: !7151)
!7239 = !DILocation(line: 192, column: 23, scope: !7136, inlinedAt: !7151)
!7240 = !DILocation(line: 192, column: 27, scope: !7136, inlinedAt: !7151)
!7241 = !DILocation(line: 192, column: 33, scope: !7136, inlinedAt: !7151)
!7242 = !DILocation(line: 192, column: 7, scope: !7136, inlinedAt: !7151)
!7243 = !DILocation(line: 192, column: 5, scope: !7136, inlinedAt: !7151)
!7244 = !DILocation(line: 192, column: 3, scope: !7136, inlinedAt: !7151)
!7245 = !DILocation(line: 193, column: 9, scope: !7137, inlinedAt: !7151)
!7246 = !DILocation(line: 479, column: 7, scope: !7133)
!7247 = !DILocation(line: 479, column: 5, scope: !7133)
!7248 = !DILocation(line: 480, column: 6, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 480, column: 6)
!7250 = !DILocation(line: 480, column: 6, scope: !7133)
!7251 = !DILocation(line: 481, column: 6, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 480, column: 10)
!7253 = !DILocation(line: 482, column: 3, scope: !7252)
!7254 = !DILocation(line: 484, column: 8, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 484, column: 6)
!7256 = !DILocation(line: 484, column: 33, scope: !7255)
!7257 = !DILocation(line: 484, column: 52, scope: !7255)
!7258 = !DILocation(line: 485, column: 8, scope: !7255)
!7259 = !DILocation(line: 485, column: 33, scope: !7255)
!7260 = !DILocation(line: 485, column: 52, scope: !7255)
!7261 = !DILocation(line: 486, column: 7, scope: !7255)
!7262 = !DILocation(line: 484, column: 6, scope: !7133)
!7263 = !DILocation(line: 487, column: 6, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 486, column: 31)
!7265 = !DILocation(line: 488, column: 3, scope: !7264)
!7266 = !DILocation(line: 491, column: 7, scope: !7133)
!7267 = !DILocation(line: 492, column: 23, scope: !7133)
!7268 = !DILocation(line: 492, column: 31, scope: !7133)
!7269 = !DILocation(line: 492, column: 22, scope: !7133)
!7270 = !DILocation(line: 492, column: 37, scope: !7133)
!7271 = !DILocation(line: 492, column: 43, scope: !7133)
!7272 = !DILocation(line: 492, column: 48, scope: !7133)
!7273 = !DILocation(line: 191, column: 6, scope: !7136, inlinedAt: !7138)
!7274 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !7135)
!7275 = !DILocation(line: 0, scope: !7008, inlinedAt: !7135)
!7276 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !7135)
!7277 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !7135)
!7278 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !7135)
!7279 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !7135)
!7280 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !7135)
!7281 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !7135)
!7282 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !7135)
!7283 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !7135)
!7284 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !7135)
!7285 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !7135)
!7286 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !7135)
!7287 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !7135)
!7288 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !7135)
!7289 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !7135)
!7290 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !7135)
!7291 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !7135)
!7292 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !7135)
!7293 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !7135)
!7294 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !7135)
!7295 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !7135)
!7296 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !7135)
!7297 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !7135)
!7298 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !7135)
!7299 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !7135)
!7300 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !7135)
!7301 = !DILocation(line: 191, column: 6, scope: !7137, inlinedAt: !7138)
!7302 = !DILocation(line: 192, column: 23, scope: !7136, inlinedAt: !7138)
!7303 = !DILocation(line: 192, column: 27, scope: !7136, inlinedAt: !7138)
!7304 = !DILocation(line: 192, column: 33, scope: !7136, inlinedAt: !7138)
!7305 = !DILocation(line: 192, column: 7, scope: !7136, inlinedAt: !7138)
!7306 = !DILocation(line: 192, column: 5, scope: !7136, inlinedAt: !7138)
!7307 = !DILocation(line: 192, column: 3, scope: !7136, inlinedAt: !7138)
!7308 = !DILocation(line: 193, column: 9, scope: !7137, inlinedAt: !7138)
!7309 = !DILocation(line: 492, column: 7, scope: !7133)
!7310 = !DILocation(line: 492, column: 5, scope: !7133)
!7311 = !DILocation(line: 493, column: 6, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 493, column: 6)
!7313 = !DILocation(line: 493, column: 6, scope: !7133)
!7314 = !DILocation(line: 494, column: 6, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 493, column: 10)
!7316 = !DILocation(line: 495, column: 3, scope: !7315)
!7317 = !DILocation(line: 498, column: 22, scope: !7133)
!7318 = !DILocation(line: 498, column: 7, scope: !7133)
!7319 = !DILocation(line: 498, column: 5, scope: !7133)
!7320 = !DILocation(line: 498, column: 2, scope: !7133)
!7321 = !DILabel(scope: !7133, name: "out", file: !3, line: 500)
!7322 = !DILocation(line: 500, column: 1, scope: !7133)
!7323 = !DILocation(line: 501, column: 16, scope: !7133)
!7324 = !DILocation(line: 501, column: 23, scope: !7133)
!7325 = !DILocation(line: 501, column: 2, scope: !7133)
!7326 = !DILocation(line: 503, column: 6, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 503, column: 6)
!7328 = !DILocation(line: 503, column: 6, scope: !7133)
!7329 = !DILocation(line: 504, column: 10, scope: !7327)
!7330 = !DILocation(line: 504, column: 3, scope: !7327)
!7331 = !DILocation(line: 506, column: 9, scope: !7133)
!7332 = !DILocation(line: 506, column: 2, scope: !7133)
!7333 = !DILocation(line: 507, column: 1, scope: !7133)
!7334 = distinct !DISubprogram(name: "switchtec_dev_poll", scope: !3, file: !3, line: 580, type: !7335, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7335 = !DISubroutineType(types: !7336)
!7336 = !{!3002, !457, !7337}
!7337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7338, size: 64)
!7338 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_table", file: !3006, line: 46, baseType: !3005)
!7339 = !DILocalVariable(name: "v", arg: 1, scope: !7340, file: !4991, line: 23, type: !7343)
!7340 = distinct !DISubprogram(name: "arch_atomic_read", scope: !4991, file: !4991, line: 23, type: !7341, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7341 = !DISubroutineType(types: !7342)
!7342 = !{!282, !7343}
!7343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7344, size: 64)
!7344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!7345 = !DILocation(line: 23, column: 61, scope: !7340, inlinedAt: !7346)
!7346 = distinct !DILocation(line: 28, column: 9, scope: !7347, inlinedAt: !7348)
!7347 = distinct !DISubprogram(name: "atomic_read", scope: !4998, file: !4998, line: 25, type: !7341, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7348 = distinct !DILocation(line: 597, column: 27, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 597, column: 6)
!7350 = !DILocalVariable(name: "v", arg: 1, scope: !7351, file: !5004, line: 69, type: !5007)
!7351 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5004, file: !5004, line: 69, type: !5005, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7352 = !DILocation(line: 69, column: 73, scope: !7351, inlinedAt: !7353)
!7353 = distinct !DILocation(line: 27, column: 2, scope: !7347, inlinedAt: !7348)
!7354 = !DILocalVariable(name: "size", arg: 2, scope: !7351, file: !5004, line: 69, type: !427)
!7355 = !DILocation(line: 69, column: 83, scope: !7351, inlinedAt: !7353)
!7356 = !DILocalVariable(name: "v", arg: 1, scope: !7347, file: !4998, line: 25, type: !7343)
!7357 = !DILocation(line: 25, column: 29, scope: !7347, inlinedAt: !7348)
!7358 = !DILocalVariable(name: "filp", arg: 1, scope: !7334, file: !3, line: 580, type: !457)
!7359 = !DILocation(line: 580, column: 49, scope: !7334)
!7360 = !DILocalVariable(name: "wait", arg: 2, scope: !7334, file: !3, line: 580, type: !7337)
!7361 = !DILocation(line: 580, column: 67, scope: !7334)
!7362 = !DILocalVariable(name: "stuser", scope: !7334, file: !3, line: 582, type: !4516)
!7363 = !DILocation(line: 582, column: 25, scope: !7334)
!7364 = !DILocation(line: 582, column: 34, scope: !7334)
!7365 = !DILocation(line: 582, column: 40, scope: !7334)
!7366 = !DILocalVariable(name: "stdev", scope: !7334, file: !3, line: 583, type: !227)
!7367 = !DILocation(line: 583, column: 24, scope: !7334)
!7368 = !DILocation(line: 583, column: 32, scope: !7334)
!7369 = !DILocation(line: 583, column: 40, scope: !7334)
!7370 = !DILocalVariable(name: "ret", scope: !7334, file: !3, line: 584, type: !3002)
!7371 = !DILocation(line: 584, column: 11, scope: !7334)
!7372 = !DILocation(line: 586, column: 12, scope: !7334)
!7373 = !DILocation(line: 586, column: 19, scope: !7334)
!7374 = !DILocation(line: 586, column: 27, scope: !7334)
!7375 = !DILocation(line: 586, column: 37, scope: !7334)
!7376 = !DILocation(line: 586, column: 2, scope: !7334)
!7377 = !DILocation(line: 587, column: 12, scope: !7334)
!7378 = !DILocation(line: 587, column: 19, scope: !7334)
!7379 = !DILocation(line: 587, column: 26, scope: !7334)
!7380 = !DILocation(line: 587, column: 36, scope: !7334)
!7381 = !DILocation(line: 587, column: 2, scope: !7334)
!7382 = !DILocation(line: 589, column: 32, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 589, column: 6)
!7384 = !DILocation(line: 589, column: 6, scope: !7383)
!7385 = !DILocation(line: 589, column: 6, scope: !7334)
!7386 = !DILocation(line: 590, column: 3, scope: !7383)
!7387 = !DILocation(line: 592, column: 16, scope: !7334)
!7388 = !DILocation(line: 592, column: 23, scope: !7334)
!7389 = !DILocation(line: 592, column: 2, scope: !7334)
!7390 = !DILocation(line: 594, column: 6, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 594, column: 6)
!7392 = !DILocation(line: 594, column: 14, scope: !7391)
!7393 = !DILocation(line: 594, column: 6, scope: !7334)
!7394 = !DILocation(line: 595, column: 7, scope: !7391)
!7395 = !DILocation(line: 595, column: 3, scope: !7391)
!7396 = !DILocation(line: 597, column: 6, scope: !7349)
!7397 = !DILocation(line: 597, column: 14, scope: !7349)
!7398 = !DILocation(line: 597, column: 40, scope: !7349)
!7399 = !DILocation(line: 597, column: 47, scope: !7349)
!7400 = !DILocation(line: 27, column: 25, scope: !7347, inlinedAt: !7348)
!7401 = !DILocation(line: 71, column: 19, scope: !7351, inlinedAt: !7353)
!7402 = !DILocation(line: 71, column: 22, scope: !7351, inlinedAt: !7353)
!7403 = !DILocation(line: 71, column: 2, scope: !7351, inlinedAt: !7353)
!7404 = !DILocation(line: 72, column: 2, scope: !7351, inlinedAt: !7353)
!7405 = !DILocation(line: 28, column: 26, scope: !7347, inlinedAt: !7348)
!7406 = !DILocation(line: 29, column: 9, scope: !7340, inlinedAt: !7346)
!7407 = !DILocation(line: 597, column: 24, scope: !7349)
!7408 = !DILocation(line: 597, column: 6, scope: !7334)
!7409 = !DILocation(line: 598, column: 7, scope: !7349)
!7410 = !DILocation(line: 598, column: 3, scope: !7349)
!7411 = !DILocation(line: 600, column: 9, scope: !7334)
!7412 = !DILocation(line: 600, column: 2, scope: !7334)
!7413 = !DILocation(line: 601, column: 1, scope: !7334)
!7414 = distinct !DISubprogram(name: "switchtec_dev_ioctl", scope: !3, file: !3, line: 1144, type: !3017, scopeLine: 1146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7415 = !DILocalVariable(name: "filp", arg: 1, scope: !7414, file: !3, line: 1144, type: !457)
!7416 = !DILocation(line: 1144, column: 46, scope: !7414)
!7417 = !DILocalVariable(name: "cmd", arg: 2, scope: !7414, file: !3, line: 1144, type: !7)
!7418 = !DILocation(line: 1144, column: 65, scope: !7414)
!7419 = !DILocalVariable(name: "arg", arg: 3, scope: !7414, file: !3, line: 1145, type: !216)
!7420 = !DILocation(line: 1145, column: 19, scope: !7414)
!7421 = !DILocalVariable(name: "stuser", scope: !7414, file: !3, line: 1147, type: !4516)
!7422 = !DILocation(line: 1147, column: 25, scope: !7414)
!7423 = !DILocation(line: 1147, column: 34, scope: !7414)
!7424 = !DILocation(line: 1147, column: 40, scope: !7414)
!7425 = !DILocalVariable(name: "stdev", scope: !7414, file: !3, line: 1148, type: !227)
!7426 = !DILocation(line: 1148, column: 24, scope: !7414)
!7427 = !DILocation(line: 1148, column: 32, scope: !7414)
!7428 = !DILocation(line: 1148, column: 40, scope: !7414)
!7429 = !DILocalVariable(name: "rc", scope: !7414, file: !3, line: 1149, type: !282)
!7430 = !DILocation(line: 1149, column: 6, scope: !7414)
!7431 = !DILocalVariable(name: "argp", scope: !7414, file: !3, line: 1150, type: !217)
!7432 = !DILocation(line: 1150, column: 15, scope: !7414)
!7433 = !DILocation(line: 1150, column: 37, scope: !7414)
!7434 = !DILocation(line: 1150, column: 22, scope: !7414)
!7435 = !DILocation(line: 1152, column: 33, scope: !7414)
!7436 = !DILocation(line: 1152, column: 7, scope: !7414)
!7437 = !DILocation(line: 1152, column: 5, scope: !7414)
!7438 = !DILocation(line: 1153, column: 6, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 1153, column: 6)
!7440 = !DILocation(line: 1153, column: 6, scope: !7414)
!7441 = !DILocation(line: 1154, column: 10, scope: !7439)
!7442 = !DILocation(line: 1154, column: 3, scope: !7439)
!7443 = !DILocation(line: 1156, column: 10, scope: !7414)
!7444 = !DILocation(line: 1156, column: 2, scope: !7414)
!7445 = !DILocation(line: 1158, column: 25, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 1156, column: 15)
!7447 = !DILocation(line: 1158, column: 32, scope: !7446)
!7448 = !DILocation(line: 1158, column: 8, scope: !7446)
!7449 = !DILocation(line: 1158, column: 6, scope: !7446)
!7450 = !DILocation(line: 1159, column: 3, scope: !7446)
!7451 = !DILocation(line: 1161, column: 30, scope: !7446)
!7452 = !DILocation(line: 1161, column: 37, scope: !7446)
!7453 = !DILocation(line: 1161, column: 8, scope: !7446)
!7454 = !DILocation(line: 1161, column: 6, scope: !7446)
!7455 = !DILocation(line: 1162, column: 3, scope: !7446)
!7456 = !DILocation(line: 1164, column: 28, scope: !7446)
!7457 = !DILocation(line: 1164, column: 35, scope: !7446)
!7458 = !DILocation(line: 1164, column: 43, scope: !7446)
!7459 = !DILocation(line: 1164, column: 8, scope: !7446)
!7460 = !DILocation(line: 1164, column: 6, scope: !7446)
!7461 = !DILocation(line: 1166, column: 3, scope: !7446)
!7462 = !DILocation(line: 1168, column: 24, scope: !7446)
!7463 = !DILocation(line: 1168, column: 31, scope: !7446)
!7464 = !DILocation(line: 1168, column: 8, scope: !7446)
!7465 = !DILocation(line: 1168, column: 6, scope: !7446)
!7466 = !DILocation(line: 1169, column: 3, scope: !7446)
!7467 = !DILocation(line: 1171, column: 26, scope: !7446)
!7468 = !DILocation(line: 1171, column: 33, scope: !7446)
!7469 = !DILocation(line: 1171, column: 8, scope: !7446)
!7470 = !DILocation(line: 1171, column: 6, scope: !7446)
!7471 = !DILocation(line: 1172, column: 3, scope: !7446)
!7472 = !DILocation(line: 1174, column: 26, scope: !7446)
!7473 = !DILocation(line: 1174, column: 33, scope: !7446)
!7474 = !DILocation(line: 1174, column: 8, scope: !7446)
!7475 = !DILocation(line: 1174, column: 6, scope: !7446)
!7476 = !DILocation(line: 1175, column: 3, scope: !7446)
!7477 = !DILocation(line: 1177, column: 28, scope: !7446)
!7478 = !DILocation(line: 1177, column: 35, scope: !7446)
!7479 = !DILocation(line: 1177, column: 43, scope: !7446)
!7480 = !DILocation(line: 1177, column: 8, scope: !7446)
!7481 = !DILocation(line: 1177, column: 6, scope: !7446)
!7482 = !DILocation(line: 1179, column: 3, scope: !7446)
!7483 = !DILocation(line: 1181, column: 6, scope: !7446)
!7484 = !DILocation(line: 1182, column: 3, scope: !7446)
!7485 = !DILocation(line: 1185, column: 16, scope: !7414)
!7486 = !DILocation(line: 1185, column: 23, scope: !7414)
!7487 = !DILocation(line: 1185, column: 2, scope: !7414)
!7488 = !DILocation(line: 1186, column: 9, scope: !7414)
!7489 = !DILocation(line: 1186, column: 2, scope: !7414)
!7490 = !DILocation(line: 1187, column: 1, scope: !7414)
!7491 = distinct !DISubprogram(name: "switchtec_dev_open", scope: !3, file: !3, line: 416, type: !3027, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7492 = !DILocalVariable(name: "inode", arg: 1, scope: !7491, file: !3, line: 416, type: !526)
!7493 = !DILocation(line: 416, column: 45, scope: !7491)
!7494 = !DILocalVariable(name: "filp", arg: 2, scope: !7491, file: !3, line: 416, type: !457)
!7495 = !DILocation(line: 416, column: 65, scope: !7491)
!7496 = !DILocalVariable(name: "stdev", scope: !7491, file: !3, line: 418, type: !227)
!7497 = !DILocation(line: 418, column: 24, scope: !7491)
!7498 = !DILocalVariable(name: "stuser", scope: !7491, file: !3, line: 419, type: !4516)
!7499 = !DILocation(line: 419, column: 25, scope: !7491)
!7500 = !DILocalVariable(name: "__mptr", scope: !7501, file: !3, line: 421, type: !217)
!7501 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 421, column: 10)
!7502 = !DILocation(line: 421, column: 10, scope: !7501)
!7503 = !DILocation(line: 421, column: 10, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 421, column: 10)
!7505 = !DILocation(line: 421, column: 8, scope: !7491)
!7506 = !DILocation(line: 423, column: 25, scope: !7491)
!7507 = !DILocation(line: 423, column: 11, scope: !7491)
!7508 = !DILocation(line: 423, column: 9, scope: !7491)
!7509 = !DILocation(line: 424, column: 13, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 424, column: 6)
!7511 = !DILocation(line: 424, column: 6, scope: !7510)
!7512 = !DILocation(line: 424, column: 6, scope: !7491)
!7513 = !DILocation(line: 425, column: 18, scope: !7510)
!7514 = !DILocation(line: 425, column: 10, scope: !7510)
!7515 = !DILocation(line: 425, column: 3, scope: !7510)
!7516 = !DILocation(line: 427, column: 23, scope: !7491)
!7517 = !DILocation(line: 427, column: 2, scope: !7491)
!7518 = !DILocation(line: 427, column: 8, scope: !7491)
!7519 = !DILocation(line: 427, column: 21, scope: !7491)
!7520 = !DILocation(line: 428, column: 14, scope: !7491)
!7521 = !DILocation(line: 428, column: 21, scope: !7491)
!7522 = !DILocation(line: 428, column: 2, scope: !7491)
!7523 = !DILocation(line: 432, column: 2, scope: !7491)
!7524 = !DILocation(line: 433, column: 1, scope: !7491)
!7525 = distinct !DISubprogram(name: "switchtec_dev_release", scope: !3, file: !3, line: 435, type: !3027, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7526 = !DILocalVariable(name: "inode", arg: 1, scope: !7525, file: !3, line: 435, type: !526)
!7527 = !DILocation(line: 435, column: 48, scope: !7525)
!7528 = !DILocalVariable(name: "filp", arg: 2, scope: !7525, file: !3, line: 435, type: !457)
!7529 = !DILocation(line: 435, column: 68, scope: !7525)
!7530 = !DILocalVariable(name: "stuser", scope: !7525, file: !3, line: 437, type: !4516)
!7531 = !DILocation(line: 437, column: 25, scope: !7525)
!7532 = !DILocation(line: 437, column: 34, scope: !7525)
!7533 = !DILocation(line: 437, column: 40, scope: !7525)
!7534 = !DILocation(line: 439, column: 13, scope: !7525)
!7535 = !DILocation(line: 439, column: 2, scope: !7525)
!7536 = !DILocation(line: 441, column: 2, scope: !7525)
!7537 = distinct !DISubprogram(name: "lock_mutex_and_test_alive", scope: !3, file: !3, line: 444, type: !5332, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7538 = !DILocalVariable(name: "stdev", arg: 1, scope: !7537, file: !3, line: 444, type: !227)
!7539 = !DILocation(line: 444, column: 60, scope: !7537)
!7540 = !DILocation(line: 446, column: 32, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 446, column: 6)
!7542 = !DILocation(line: 446, column: 39, scope: !7541)
!7543 = !DILocation(line: 446, column: 6, scope: !7541)
!7544 = !DILocation(line: 446, column: 6, scope: !7537)
!7545 = !DILocation(line: 447, column: 3, scope: !7541)
!7546 = !DILocation(line: 449, column: 7, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 449, column: 6)
!7548 = !DILocation(line: 449, column: 14, scope: !7547)
!7549 = !DILocation(line: 449, column: 6, scope: !7537)
!7550 = !DILocation(line: 450, column: 17, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 449, column: 21)
!7552 = !DILocation(line: 450, column: 24, scope: !7551)
!7553 = !DILocation(line: 450, column: 3, scope: !7551)
!7554 = !DILocation(line: 451, column: 3, scope: !7551)
!7555 = !DILocation(line: 454, column: 2, scope: !7537)
!7556 = !DILocation(line: 455, column: 1, scope: !7537)
!7557 = distinct !DISubprogram(name: "copy_overflow", scope: !6836, file: !6836, line: 132, type: !7558, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7558 = !DISubroutineType(types: !7559)
!7559 = !{null, !282, !216}
!7560 = !DILocalVariable(name: "size", arg: 1, scope: !7557, file: !6836, line: 132, type: !282)
!7561 = !DILocation(line: 132, column: 38, scope: !7557)
!7562 = !DILocalVariable(name: "count", arg: 2, scope: !7557, file: !6836, line: 132, type: !216)
!7563 = !DILocation(line: 132, column: 58, scope: !7557)
!7564 = !DILocalVariable(name: "__ret_warn_on", scope: !7565, file: !6836, line: 134, type: !282)
!7565 = distinct !DILexicalBlock(scope: !7557, file: !6836, line: 134, column: 2)
!7566 = !DILocation(line: 134, column: 2, scope: !7565)
!7567 = !DILocation(line: 134, column: 2, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7565, file: !6836, line: 134, column: 2)
!7569 = !DILocation(line: 134, column: 2, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7568, file: !6836, line: 134, column: 2)
!7571 = !DILocation(line: 134, column: 2, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7570, file: !6836, line: 134, column: 2)
!7573 = !DILocation(line: 134, column: 2, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7570, file: !6836, line: 134, column: 2)
!7575 = !DILocation(line: 134, column: 2, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7574, file: !6836, line: 134, column: 2)
!7577 = !DILocation(line: 134, column: 2, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7574, file: !6836, line: 134, column: 2)
!7579 = !{i32 -2145401323, i32 -2145401294, i32 -2145401248, i32 -2145401190, i32 -2145401136, i32 -2145401082, i32 -2145401027, i32 -2145400996}
!7580 = !DILocation(line: 134, column: 2, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7574, file: !6836, line: 134, column: 2)
!7582 = !{i32 -2145400576, i32 -2145400569, i32 -2145400517, i32 -2145400486, i32 -2145400456}
!7583 = !DILocation(line: 134, column: 2, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7574, file: !6836, line: 134, column: 2)
!7585 = !DILocation(line: 134, column: 2, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7570, file: !6836, line: 134, column: 2)
!7587 = !DILocation(line: 135, column: 1, scope: !7557)
!7588 = distinct !DISubprogram(name: "check_object_size", scope: !6836, file: !6836, line: 122, type: !7589, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7589 = !DISubroutineType(types: !7590)
!7590 = !{null, !2224, !216, !587}
!7591 = !DILocalVariable(name: "ptr", arg: 1, scope: !7588, file: !6836, line: 122, type: !2224)
!7592 = !DILocation(line: 122, column: 50, scope: !7588)
!7593 = !DILocalVariable(name: "n", arg: 2, scope: !7588, file: !6836, line: 122, type: !216)
!7594 = !DILocation(line: 122, column: 69, scope: !7588)
!7595 = !DILocalVariable(name: "to_user", arg: 3, scope: !7588, file: !6836, line: 123, type: !587)
!7596 = !DILocation(line: 123, column: 15, scope: !7588)
!7597 = !DILocation(line: 124, column: 3, scope: !7588)
!7598 = distinct !DISubprogram(name: "mrpc_queue_cmd", scope: !3, file: !3, line: 170, type: !7599, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7599 = !DISubroutineType(types: !7600)
!7600 = !{!282, !4516}
!7601 = !DILocalVariable(name: "stuser", arg: 1, scope: !7598, file: !3, line: 170, type: !4516)
!7602 = !DILocation(line: 170, column: 50, scope: !7598)
!7603 = !DILocalVariable(name: "stdev", scope: !7598, file: !3, line: 174, type: !227)
!7604 = !DILocation(line: 174, column: 24, scope: !7598)
!7605 = !DILocation(line: 174, column: 32, scope: !7598)
!7606 = !DILocation(line: 174, column: 40, scope: !7598)
!7607 = !DILocation(line: 176, column: 12, scope: !7598)
!7608 = !DILocation(line: 176, column: 20, scope: !7598)
!7609 = !DILocation(line: 176, column: 2, scope: !7598)
!7610 = !DILocation(line: 177, column: 2, scope: !7598)
!7611 = !DILocation(line: 177, column: 10, scope: !7598)
!7612 = !DILocation(line: 177, column: 19, scope: !7598)
!7613 = !DILocation(line: 178, column: 19, scope: !7598)
!7614 = !DILocation(line: 178, column: 2, scope: !7598)
!7615 = !DILocation(line: 179, column: 2, scope: !7598)
!7616 = !DILocation(line: 179, column: 10, scope: !7598)
!7617 = !DILocation(line: 179, column: 19, scope: !7598)
!7618 = !DILocation(line: 180, column: 17, scope: !7598)
!7619 = !DILocation(line: 180, column: 25, scope: !7598)
!7620 = !DILocation(line: 180, column: 32, scope: !7598)
!7621 = !DILocation(line: 180, column: 39, scope: !7598)
!7622 = !DILocation(line: 180, column: 2, scope: !7598)
!7623 = !DILocation(line: 182, column: 18, scope: !7598)
!7624 = !DILocation(line: 182, column: 2, scope: !7598)
!7625 = !DILocation(line: 184, column: 2, scope: !7598)
!7626 = distinct !DISubprogram(name: "kref_get", scope: !3477, file: !3477, line: 43, type: !6301, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7627 = !DILocalVariable(name: "kref", arg: 1, scope: !7626, file: !3477, line: 43, type: !6299)
!7628 = !DILocation(line: 43, column: 42, scope: !7626)
!7629 = !DILocation(line: 45, column: 16, scope: !7626)
!7630 = !DILocation(line: 45, column: 22, scope: !7626)
!7631 = !DILocation(line: 45, column: 2, scope: !7626)
!7632 = !DILocation(line: 46, column: 1, scope: !7626)
!7633 = distinct !DISubprogram(name: "list_add_tail", scope: !5827, file: !5827, line: 98, type: !6278, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7634 = !DILocalVariable(name: "new", arg: 1, scope: !7633, file: !5827, line: 98, type: !222)
!7635 = !DILocation(line: 98, column: 52, scope: !7633)
!7636 = !DILocalVariable(name: "head", arg: 2, scope: !7633, file: !5827, line: 98, type: !222)
!7637 = !DILocation(line: 98, column: 75, scope: !7633)
!7638 = !DILocation(line: 100, column: 13, scope: !7633)
!7639 = !DILocation(line: 100, column: 18, scope: !7633)
!7640 = !DILocation(line: 100, column: 24, scope: !7633)
!7641 = !DILocation(line: 100, column: 30, scope: !7633)
!7642 = !DILocation(line: 100, column: 2, scope: !7633)
!7643 = !DILocation(line: 101, column: 1, scope: !7633)
!7644 = distinct !DISubprogram(name: "refcount_inc", scope: !156, file: !156, line: 265, type: !7645, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7645 = !DISubroutineType(types: !7646)
!7646 = !{null, !6339}
!7647 = !DILocalVariable(name: "r", arg: 1, scope: !7644, file: !156, line: 265, type: !6339)
!7648 = !DILocation(line: 265, column: 45, scope: !7644)
!7649 = !DILocation(line: 267, column: 17, scope: !7644)
!7650 = !DILocation(line: 267, column: 2, scope: !7644)
!7651 = !DILocation(line: 268, column: 1, scope: !7644)
!7652 = distinct !DISubprogram(name: "__refcount_inc", scope: !156, file: !156, line: 248, type: !7653, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7653 = !DISubroutineType(types: !7654)
!7654 = !{null, !6339, !802}
!7655 = !DILocalVariable(name: "r", arg: 1, scope: !7652, file: !156, line: 248, type: !6339)
!7656 = !DILocation(line: 248, column: 47, scope: !7652)
!7657 = !DILocalVariable(name: "oldp", arg: 2, scope: !7652, file: !156, line: 248, type: !802)
!7658 = !DILocation(line: 248, column: 55, scope: !7652)
!7659 = !DILocation(line: 250, column: 20, scope: !7652)
!7660 = !DILocation(line: 250, column: 23, scope: !7652)
!7661 = !DILocation(line: 250, column: 2, scope: !7652)
!7662 = !DILocation(line: 251, column: 1, scope: !7652)
!7663 = distinct !DISubprogram(name: "__refcount_add", scope: !156, file: !156, line: 191, type: !7664, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7664 = !DISubroutineType(types: !7665)
!7665 = !{null, !282, !6339, !802}
!7666 = !DILocalVariable(name: "i", arg: 1, scope: !7667, file: !4991, line: 182, type: !282)
!7667 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !4991, file: !4991, line: 182, type: !6361, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7668 = !DILocation(line: 182, column: 54, scope: !7667, inlinedAt: !7669)
!7669 = distinct !DILocation(line: 143, column: 9, scope: !7670, inlinedAt: !7671)
!7670 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !4998, file: !4998, line: 140, type: !6361, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7671 = distinct !DILocation(line: 193, column: 12, scope: !7663)
!7672 = !DILocalVariable(name: "v", arg: 2, scope: !7667, file: !4991, line: 182, type: !4994)
!7673 = !DILocation(line: 182, column: 67, scope: !7667, inlinedAt: !7669)
!7674 = !DILocalVariable(name: "__ret", scope: !7675, file: !4991, line: 184, type: !282)
!7675 = distinct !DILexicalBlock(scope: !7667, file: !4991, line: 184, column: 9)
!7676 = !DILocation(line: 184, column: 9, scope: !7675, inlinedAt: !7669)
!7677 = !DILocation(line: 99, column: 79, scope: !6373, inlinedAt: !7678)
!7678 = distinct !DILocation(line: 142, column: 2, scope: !7670, inlinedAt: !7671)
!7679 = !DILocation(line: 99, column: 89, scope: !6373, inlinedAt: !7678)
!7680 = !DILocalVariable(name: "i", arg: 1, scope: !7670, file: !4998, line: 140, type: !282)
!7681 = !DILocation(line: 140, column: 30, scope: !7670, inlinedAt: !7671)
!7682 = !DILocalVariable(name: "v", arg: 2, scope: !7670, file: !4998, line: 140, type: !4994)
!7683 = !DILocation(line: 140, column: 43, scope: !7670, inlinedAt: !7671)
!7684 = !DILocalVariable(name: "i", arg: 1, scope: !7663, file: !156, line: 191, type: !282)
!7685 = !DILocation(line: 191, column: 39, scope: !7663)
!7686 = !DILocalVariable(name: "r", arg: 2, scope: !7663, file: !156, line: 191, type: !6339)
!7687 = !DILocation(line: 191, column: 54, scope: !7663)
!7688 = !DILocalVariable(name: "oldp", arg: 3, scope: !7663, file: !156, line: 191, type: !802)
!7689 = !DILocation(line: 191, column: 62, scope: !7663)
!7690 = !DILocalVariable(name: "old", scope: !7663, file: !156, line: 193, type: !282)
!7691 = !DILocation(line: 193, column: 6, scope: !7663)
!7692 = !DILocation(line: 193, column: 37, scope: !7663)
!7693 = !DILocation(line: 193, column: 41, scope: !7663)
!7694 = !DILocation(line: 193, column: 44, scope: !7663)
!7695 = !DILocation(line: 142, column: 31, scope: !7670, inlinedAt: !7671)
!7696 = !DILocation(line: 101, column: 20, scope: !6373, inlinedAt: !7678)
!7697 = !DILocation(line: 101, column: 23, scope: !6373, inlinedAt: !7678)
!7698 = !DILocation(line: 101, column: 2, scope: !6373, inlinedAt: !7678)
!7699 = !DILocation(line: 102, column: 2, scope: !6373, inlinedAt: !7678)
!7700 = !DILocation(line: 143, column: 39, scope: !7670, inlinedAt: !7671)
!7701 = !DILocation(line: 143, column: 42, scope: !7670, inlinedAt: !7671)
!7702 = !{i32 -2147017885}
!7703 = !DILocation(line: 195, column: 6, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7663, file: !156, line: 195, column: 6)
!7705 = !DILocation(line: 195, column: 6, scope: !7663)
!7706 = !DILocation(line: 196, column: 11, scope: !7704)
!7707 = !DILocation(line: 196, column: 4, scope: !7704)
!7708 = !DILocation(line: 196, column: 9, scope: !7704)
!7709 = !DILocation(line: 196, column: 3, scope: !7704)
!7710 = !DILocation(line: 198, column: 6, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7663, file: !156, line: 198, column: 6)
!7712 = !DILocation(line: 198, column: 6, scope: !7663)
!7713 = !DILocation(line: 199, column: 26, scope: !7711)
!7714 = !DILocation(line: 199, column: 3, scope: !7711)
!7715 = !DILocation(line: 200, column: 11, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7711, file: !156, line: 200, column: 11)
!7717 = !DILocation(line: 200, column: 11, scope: !7711)
!7718 = !DILocation(line: 201, column: 26, scope: !7716)
!7719 = !DILocation(line: 201, column: 3, scope: !7716)
!7720 = !DILocation(line: 202, column: 1, scope: !7663)
!7721 = distinct !DISubprogram(name: "__list_add", scope: !5827, file: !5827, line: 63, type: !7722, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7722 = !DISubroutineType(types: !7723)
!7723 = !{null, !222, !222, !222}
!7724 = !DILocalVariable(name: "new", arg: 1, scope: !7721, file: !5827, line: 63, type: !222)
!7725 = !DILocation(line: 63, column: 49, scope: !7721)
!7726 = !DILocalVariable(name: "prev", arg: 2, scope: !7721, file: !5827, line: 64, type: !222)
!7727 = !DILocation(line: 64, column: 28, scope: !7721)
!7728 = !DILocalVariable(name: "next", arg: 3, scope: !7721, file: !5827, line: 65, type: !222)
!7729 = !DILocation(line: 65, column: 28, scope: !7721)
!7730 = !DILocation(line: 67, column: 24, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7721, file: !5827, line: 67, column: 6)
!7732 = !DILocation(line: 67, column: 29, scope: !7731)
!7733 = !DILocation(line: 67, column: 35, scope: !7731)
!7734 = !DILocation(line: 67, column: 7, scope: !7731)
!7735 = !DILocation(line: 67, column: 6, scope: !7721)
!7736 = !DILocation(line: 68, column: 3, scope: !7731)
!7737 = !DILocation(line: 70, column: 15, scope: !7721)
!7738 = !DILocation(line: 70, column: 2, scope: !7721)
!7739 = !DILocation(line: 70, column: 8, scope: !7721)
!7740 = !DILocation(line: 70, column: 13, scope: !7721)
!7741 = !DILocation(line: 71, column: 14, scope: !7721)
!7742 = !DILocation(line: 71, column: 2, scope: !7721)
!7743 = !DILocation(line: 71, column: 7, scope: !7721)
!7744 = !DILocation(line: 71, column: 12, scope: !7721)
!7745 = !DILocation(line: 72, column: 14, scope: !7721)
!7746 = !DILocation(line: 72, column: 2, scope: !7721)
!7747 = !DILocation(line: 72, column: 7, scope: !7721)
!7748 = !DILocation(line: 72, column: 12, scope: !7721)
!7749 = !DILocation(line: 73, column: 2, scope: !7721)
!7750 = !DILocation(line: 73, column: 2, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7721, file: !5827, line: 73, column: 2)
!7752 = !DILocation(line: 73, column: 2, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7751, file: !5827, line: 73, column: 2)
!7754 = !DILocation(line: 73, column: 2, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7751, file: !5827, line: 73, column: 2)
!7756 = !DILocation(line: 74, column: 1, scope: !7721)
!7757 = distinct !DISubprogram(name: "__list_add_valid", scope: !5827, file: !5827, line: 45, type: !7758, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7758 = !DISubroutineType(types: !7759)
!7759 = !{!587, !222, !222, !222}
!7760 = !DILocalVariable(name: "new", arg: 1, scope: !7757, file: !5827, line: 45, type: !222)
!7761 = !DILocation(line: 45, column: 55, scope: !7757)
!7762 = !DILocalVariable(name: "prev", arg: 2, scope: !7757, file: !5827, line: 46, type: !222)
!7763 = !DILocation(line: 46, column: 23, scope: !7757)
!7764 = !DILocalVariable(name: "next", arg: 3, scope: !7757, file: !5827, line: 47, type: !222)
!7765 = !DILocation(line: 47, column: 23, scope: !7757)
!7766 = !DILocation(line: 49, column: 2, scope: !7757)
!7767 = distinct !DISubprogram(name: "poll_wait", scope: !3006, file: !3006, line: 48, type: !7768, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7768 = !DISubroutineType(types: !7769)
!7769 = !{null, !457, !3013, !7337}
!7770 = !DILocalVariable(name: "filp", arg: 1, scope: !7767, file: !3006, line: 48, type: !457)
!7771 = !DILocation(line: 48, column: 44, scope: !7767)
!7772 = !DILocalVariable(name: "wait_address", arg: 2, scope: !7767, file: !3006, line: 48, type: !3013)
!7773 = !DILocation(line: 48, column: 70, scope: !7767)
!7774 = !DILocalVariable(name: "p", arg: 3, scope: !7767, file: !3006, line: 48, type: !7337)
!7775 = !DILocation(line: 48, column: 96, scope: !7767)
!7776 = !DILocation(line: 50, column: 6, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7767, file: !3006, line: 50, column: 6)
!7778 = !DILocation(line: 50, column: 8, scope: !7777)
!7779 = !DILocation(line: 50, column: 11, scope: !7777)
!7780 = !DILocation(line: 50, column: 14, scope: !7777)
!7781 = !DILocation(line: 50, column: 21, scope: !7777)
!7782 = !DILocation(line: 50, column: 24, scope: !7777)
!7783 = !DILocation(line: 50, column: 6, scope: !7767)
!7784 = !DILocation(line: 51, column: 3, scope: !7777)
!7785 = !DILocation(line: 51, column: 6, scope: !7777)
!7786 = !DILocation(line: 51, column: 13, scope: !7777)
!7787 = !DILocation(line: 51, column: 19, scope: !7777)
!7788 = !DILocation(line: 51, column: 33, scope: !7777)
!7789 = !DILocation(line: 52, column: 1, scope: !7767)
!7790 = distinct !DISubprogram(name: "kasan_check_read", scope: !6425, file: !6425, line: 34, type: !6426, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7791 = !DILocalVariable(name: "p", arg: 1, scope: !7790, file: !6425, line: 34, type: !5007)
!7792 = !DILocation(line: 34, column: 58, scope: !7790)
!7793 = !DILocalVariable(name: "size", arg: 2, scope: !7790, file: !6425, line: 34, type: !7)
!7794 = !DILocation(line: 34, column: 74, scope: !7790)
!7795 = !DILocation(line: 36, column: 2, scope: !7790)
!7796 = distinct !DISubprogram(name: "ioctl_flash_info", scope: !3, file: !3, line: 603, type: !7797, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{!282, !227, !7799}
!7799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7800, size: 64)
!7800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchtec_ioctl_flash_info", file: !7801, line: 48, size: 128, elements: !7802)
!7801 = !DIFile(filename: "./include/uapi/linux/switchtec_ioctl.h", directory: "/home/lizy2001/genbc/linux")
!7802 = !{!7803, !7804, !7805}
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "flash_length", scope: !7800, file: !7801, line: 49, baseType: !257, size: 64)
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "num_partitions", scope: !7800, file: !7801, line: 50, baseType: !297, size: 32, offset: 64)
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !7800, file: !7801, line: 51, baseType: !297, size: 32, offset: 96)
!7806 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !7807)
!7807 = distinct !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !7808)
!7808 = distinct !DILocation(line: 619, column: 6, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 619, column: 6)
!7810 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !7807)
!7811 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !7807)
!7812 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !7807)
!7813 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !7807)
!7814 = !DILocation(line: 197, column: 27, scope: !6843, inlinedAt: !7808)
!7815 = !DILocation(line: 197, column: 43, scope: !6843, inlinedAt: !7808)
!7816 = !DILocation(line: 197, column: 63, scope: !6843, inlinedAt: !7808)
!7817 = !DILocalVariable(name: "stdev", arg: 1, scope: !7796, file: !3, line: 603, type: !227)
!7818 = !DILocation(line: 603, column: 51, scope: !7796)
!7819 = !DILocalVariable(name: "uinfo", arg: 2, scope: !7796, file: !3, line: 604, type: !7799)
!7820 = !DILocation(line: 604, column: 50, scope: !7796)
!7821 = !DILocalVariable(name: "info", scope: !7796, file: !3, line: 606, type: !7800)
!7822 = !DILocation(line: 606, column: 36, scope: !7796)
!7823 = !DILocalVariable(name: "fi", scope: !7796, file: !3, line: 607, type: !4300)
!7824 = !DILocation(line: 607, column: 34, scope: !7796)
!7825 = !DILocation(line: 607, column: 39, scope: !7796)
!7826 = !DILocation(line: 607, column: 46, scope: !7796)
!7827 = !DILocation(line: 609, column: 6, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 609, column: 6)
!7829 = !DILocation(line: 609, column: 13, scope: !7828)
!7830 = !DILocation(line: 609, column: 17, scope: !7828)
!7831 = !DILocation(line: 609, column: 6, scope: !7796)
!7832 = !DILocation(line: 610, column: 33, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 609, column: 36)
!7834 = !DILocation(line: 610, column: 37, scope: !7833)
!7835 = !DILocation(line: 610, column: 42, scope: !7833)
!7836 = !DILocation(line: 610, column: 32, scope: !7833)
!7837 = !DILocation(line: 610, column: 23, scope: !7833)
!7838 = !DILocation(line: 610, column: 8, scope: !7833)
!7839 = !DILocation(line: 610, column: 21, scope: !7833)
!7840 = !DILocation(line: 611, column: 8, scope: !7833)
!7841 = !DILocation(line: 611, column: 23, scope: !7833)
!7842 = !DILocation(line: 612, column: 2, scope: !7833)
!7843 = !DILocation(line: 612, column: 13, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 612, column: 13)
!7845 = !DILocation(line: 612, column: 20, scope: !7844)
!7846 = !DILocation(line: 612, column: 24, scope: !7844)
!7847 = !DILocation(line: 612, column: 13, scope: !7828)
!7848 = !DILocation(line: 613, column: 33, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 612, column: 43)
!7850 = !DILocation(line: 613, column: 37, scope: !7849)
!7851 = !DILocation(line: 613, column: 42, scope: !7849)
!7852 = !DILocation(line: 613, column: 32, scope: !7849)
!7853 = !DILocation(line: 613, column: 23, scope: !7849)
!7854 = !DILocation(line: 613, column: 8, scope: !7849)
!7855 = !DILocation(line: 613, column: 21, scope: !7849)
!7856 = !DILocation(line: 614, column: 8, scope: !7849)
!7857 = !DILocation(line: 614, column: 23, scope: !7849)
!7858 = !DILocation(line: 615, column: 2, scope: !7849)
!7859 = !DILocation(line: 616, column: 3, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 615, column: 9)
!7861 = !DILocation(line: 619, column: 19, scope: !7809)
!7862 = !DILocation(line: 619, column: 26, scope: !7809)
!7863 = !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !7808)
!7864 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !7807)
!7865 = !DILocation(line: 0, scope: !7008, inlinedAt: !7807)
!7866 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !7807)
!7867 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !7807)
!7868 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !7807)
!7869 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !7807)
!7870 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !7807)
!7871 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !7807)
!7872 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !7807)
!7873 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !7807)
!7874 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !7807)
!7875 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !7807)
!7876 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !7807)
!7877 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !7807)
!7878 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !7807)
!7879 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !7807)
!7880 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !7807)
!7881 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !7807)
!7882 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !7807)
!7883 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !7807)
!7884 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !7807)
!7885 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !7807)
!7886 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !7807)
!7887 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !7807)
!7888 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !7807)
!7889 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !7807)
!7890 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !7807)
!7891 = !DILocation(line: 199, column: 6, scope: !6843, inlinedAt: !7808)
!7892 = !DILocation(line: 200, column: 21, scope: !6841, inlinedAt: !7808)
!7893 = !DILocation(line: 200, column: 25, scope: !6841, inlinedAt: !7808)
!7894 = !DILocation(line: 200, column: 31, scope: !6841, inlinedAt: !7808)
!7895 = !DILocation(line: 200, column: 7, scope: !6841, inlinedAt: !7808)
!7896 = !DILocation(line: 200, column: 5, scope: !6841, inlinedAt: !7808)
!7897 = !DILocation(line: 200, column: 3, scope: !6841, inlinedAt: !7808)
!7898 = !DILocation(line: 201, column: 9, scope: !6843, inlinedAt: !7808)
!7899 = !DILocation(line: 619, column: 6, scope: !7809)
!7900 = !DILocation(line: 619, column: 6, scope: !7796)
!7901 = !DILocation(line: 620, column: 3, scope: !7809)
!7902 = !DILocation(line: 622, column: 2, scope: !7796)
!7903 = !DILocation(line: 623, column: 1, scope: !7796)
!7904 = distinct !DISubprogram(name: "ioctl_flash_part_info", scope: !3, file: !3, line: 806, type: !7905, scopeLine: 808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!7905 = !DISubroutineType(types: !7906)
!7906 = !{!282, !227, !7907}
!7907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7908, size: 64)
!7908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchtec_ioctl_flash_part_info", file: !7801, line: 57, size: 128, elements: !7909)
!7909 = !{!7910, !7911, !7912, !7913}
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "flash_partition", scope: !7908, file: !7801, line: 58, baseType: !297, size: 32)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !7908, file: !7801, line: 59, baseType: !297, size: 32, offset: 32)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7908, file: !7801, line: 60, baseType: !297, size: 32, offset: 64)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7908, file: !7801, line: 61, baseType: !297, size: 32, offset: 96)
!7914 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !7915)
!7915 = distinct !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !7916)
!7916 = distinct !DILocation(line: 827, column: 6, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 827, column: 6)
!7918 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !7915)
!7919 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !7915)
!7920 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !7915)
!7921 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !7915)
!7922 = !DILocation(line: 197, column: 27, scope: !6843, inlinedAt: !7916)
!7923 = !DILocation(line: 197, column: 43, scope: !6843, inlinedAt: !7916)
!7924 = !DILocation(line: 197, column: 63, scope: !6843, inlinedAt: !7916)
!7925 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !7926)
!7926 = distinct !DILocation(line: 191, column: 6, scope: !7136, inlinedAt: !7927)
!7927 = distinct !DILocation(line: 812, column: 6, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 812, column: 6)
!7929 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !7926)
!7930 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !7926)
!7931 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !7926)
!7932 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !7926)
!7933 = !DILocation(line: 189, column: 22, scope: !7137, inlinedAt: !7927)
!7934 = !DILocation(line: 189, column: 45, scope: !7137, inlinedAt: !7927)
!7935 = !DILocation(line: 189, column: 65, scope: !7137, inlinedAt: !7927)
!7936 = !DILocalVariable(name: "stdev", arg: 1, scope: !7904, file: !3, line: 806, type: !227)
!7937 = !DILocation(line: 806, column: 56, scope: !7904)
!7938 = !DILocalVariable(name: "uinfo", arg: 2, scope: !7904, file: !3, line: 807, type: !7907)
!7939 = !DILocation(line: 807, column: 50, scope: !7904)
!7940 = !DILocalVariable(name: "ret", scope: !7904, file: !3, line: 809, type: !282)
!7941 = !DILocation(line: 809, column: 6, scope: !7904)
!7942 = !DILocalVariable(name: "info", scope: !7904, file: !3, line: 810, type: !7908)
!7943 = !DILocation(line: 810, column: 41, scope: !7904)
!7944 = !DILocation(line: 812, column: 21, scope: !7928)
!7945 = !DILocation(line: 812, column: 28, scope: !7928)
!7946 = !DILocation(line: 191, column: 6, scope: !7136, inlinedAt: !7927)
!7947 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !7926)
!7948 = !DILocation(line: 0, scope: !7008, inlinedAt: !7926)
!7949 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !7926)
!7950 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !7926)
!7951 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !7926)
!7952 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !7926)
!7953 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !7926)
!7954 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !7926)
!7955 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !7926)
!7956 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !7926)
!7957 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !7926)
!7958 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !7926)
!7959 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !7926)
!7960 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !7926)
!7961 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !7926)
!7962 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !7926)
!7963 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !7926)
!7964 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !7926)
!7965 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !7926)
!7966 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !7926)
!7967 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !7926)
!7968 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !7926)
!7969 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !7926)
!7970 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !7926)
!7971 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !7926)
!7972 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !7926)
!7973 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !7926)
!7974 = !DILocation(line: 191, column: 6, scope: !7137, inlinedAt: !7927)
!7975 = !DILocation(line: 192, column: 23, scope: !7136, inlinedAt: !7927)
!7976 = !DILocation(line: 192, column: 27, scope: !7136, inlinedAt: !7927)
!7977 = !DILocation(line: 192, column: 33, scope: !7136, inlinedAt: !7927)
!7978 = !DILocation(line: 192, column: 7, scope: !7136, inlinedAt: !7927)
!7979 = !DILocation(line: 192, column: 5, scope: !7136, inlinedAt: !7927)
!7980 = !DILocation(line: 192, column: 3, scope: !7136, inlinedAt: !7927)
!7981 = !DILocation(line: 193, column: 9, scope: !7137, inlinedAt: !7927)
!7982 = !DILocation(line: 812, column: 6, scope: !7928)
!7983 = !DILocation(line: 812, column: 6, scope: !7904)
!7984 = !DILocation(line: 813, column: 3, scope: !7928)
!7985 = !DILocation(line: 815, column: 6, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 815, column: 6)
!7987 = !DILocation(line: 815, column: 13, scope: !7986)
!7988 = !DILocation(line: 815, column: 17, scope: !7986)
!7989 = !DILocation(line: 815, column: 6, scope: !7904)
!7990 = !DILocation(line: 816, column: 30, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 815, column: 36)
!7992 = !DILocation(line: 816, column: 9, scope: !7991)
!7993 = !DILocation(line: 816, column: 7, scope: !7991)
!7994 = !DILocation(line: 817, column: 7, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 817, column: 7)
!7996 = !DILocation(line: 817, column: 7, scope: !7991)
!7997 = !DILocation(line: 818, column: 11, scope: !7995)
!7998 = !DILocation(line: 818, column: 4, scope: !7995)
!7999 = !DILocation(line: 819, column: 2, scope: !7991)
!8000 = !DILocation(line: 819, column: 13, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 819, column: 13)
!8002 = !DILocation(line: 819, column: 20, scope: !8001)
!8003 = !DILocation(line: 819, column: 24, scope: !8001)
!8004 = !DILocation(line: 819, column: 13, scope: !7986)
!8005 = !DILocation(line: 820, column: 30, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 819, column: 43)
!8007 = !DILocation(line: 820, column: 9, scope: !8006)
!8008 = !DILocation(line: 820, column: 7, scope: !8006)
!8009 = !DILocation(line: 821, column: 7, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 821, column: 7)
!8011 = !DILocation(line: 821, column: 7, scope: !8006)
!8012 = !DILocation(line: 822, column: 11, scope: !8010)
!8013 = !DILocation(line: 822, column: 4, scope: !8010)
!8014 = !DILocation(line: 823, column: 2, scope: !8006)
!8015 = !DILocation(line: 824, column: 3, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 823, column: 9)
!8017 = !DILocation(line: 827, column: 19, scope: !7917)
!8018 = !DILocation(line: 827, column: 26, scope: !7917)
!8019 = !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !7916)
!8020 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !7915)
!8021 = !DILocation(line: 0, scope: !7008, inlinedAt: !7915)
!8022 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !7915)
!8023 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !7915)
!8024 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !7915)
!8025 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !7915)
!8026 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !7915)
!8027 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !7915)
!8028 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !7915)
!8029 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !7915)
!8030 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !7915)
!8031 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !7915)
!8032 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !7915)
!8033 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !7915)
!8034 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !7915)
!8035 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !7915)
!8036 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !7915)
!8037 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !7915)
!8038 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !7915)
!8039 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !7915)
!8040 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !7915)
!8041 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !7915)
!8042 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !7915)
!8043 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !7915)
!8044 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !7915)
!8045 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !7915)
!8046 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !7915)
!8047 = !DILocation(line: 199, column: 6, scope: !6843, inlinedAt: !7916)
!8048 = !DILocation(line: 200, column: 21, scope: !6841, inlinedAt: !7916)
!8049 = !DILocation(line: 200, column: 25, scope: !6841, inlinedAt: !7916)
!8050 = !DILocation(line: 200, column: 31, scope: !6841, inlinedAt: !7916)
!8051 = !DILocation(line: 200, column: 7, scope: !6841, inlinedAt: !7916)
!8052 = !DILocation(line: 200, column: 5, scope: !6841, inlinedAt: !7916)
!8053 = !DILocation(line: 200, column: 3, scope: !6841, inlinedAt: !7916)
!8054 = !DILocation(line: 201, column: 9, scope: !6843, inlinedAt: !7916)
!8055 = !DILocation(line: 827, column: 6, scope: !7917)
!8056 = !DILocation(line: 827, column: 6, scope: !7904)
!8057 = !DILocation(line: 828, column: 3, scope: !7917)
!8058 = !DILocation(line: 830, column: 2, scope: !7904)
!8059 = !DILocation(line: 831, column: 1, scope: !7904)
!8060 = distinct !DISubprogram(name: "ioctl_event_summary", scope: !3, file: !3, line: 833, type: !8061, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!8061 = !DISubroutineType(types: !8062)
!8062 = !{!282, !227, !4516, !8063, !427}
!8063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8064, size: 64)
!8064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchtec_ioctl_event_summary", file: !7801, line: 73, size: 9920, elements: !8065)
!8065 = !{!8066, !8067, !8068, !8069, !8070, !8072}
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !8064, file: !7801, line: 74, baseType: !257, size: 64)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "part_bitmap", scope: !8064, file: !7801, line: 75, baseType: !257, size: 64, offset: 64)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "local_part", scope: !8064, file: !7801, line: 76, baseType: !297, size: 32, offset: 128)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8064, file: !7801, line: 77, baseType: !297, size: 32, offset: 160)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !8064, file: !7801, line: 78, baseType: !8071, size: 1536, offset: 192)
!8071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 1536, elements: !317)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "pff", scope: !8064, file: !7801, line: 79, baseType: !8073, size: 8160, offset: 1728)
!8073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 8160, elements: !4142)
!8074 = !DILocation(line: 23, column: 61, scope: !7340, inlinedAt: !8075)
!8075 = distinct !DILocation(line: 28, column: 9, scope: !7347, inlinedAt: !8076)
!8076 = distinct !DILocation(line: 866, column: 22, scope: !8060)
!8077 = !DILocation(line: 69, column: 73, scope: !7351, inlinedAt: !8078)
!8078 = distinct !DILocation(line: 27, column: 2, scope: !7347, inlinedAt: !8076)
!8079 = !DILocation(line: 69, column: 83, scope: !7351, inlinedAt: !8078)
!8080 = !DILocation(line: 25, column: 29, scope: !7347, inlinedAt: !8076)
!8081 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !8082)
!8082 = distinct !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !8083)
!8083 = distinct !DILocation(line: 861, column: 6, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 861, column: 6)
!8085 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !8082)
!8086 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !8082)
!8087 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !8082)
!8088 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !8082)
!8089 = !DILocation(line: 197, column: 27, scope: !6843, inlinedAt: !8083)
!8090 = !DILocation(line: 197, column: 43, scope: !6843, inlinedAt: !8083)
!8091 = !DILocation(line: 197, column: 63, scope: !6843, inlinedAt: !8083)
!8092 = !DILocalVariable(name: "stdev", arg: 1, scope: !8060, file: !3, line: 833, type: !227)
!8093 = !DILocation(line: 833, column: 54, scope: !8060)
!8094 = !DILocalVariable(name: "stuser", arg: 2, scope: !8060, file: !3, line: 834, type: !4516)
!8095 = !DILocation(line: 834, column: 25, scope: !8060)
!8096 = !DILocalVariable(name: "usum", arg: 3, scope: !8060, file: !3, line: 835, type: !8063)
!8097 = !DILocation(line: 835, column: 47, scope: !8060)
!8098 = !DILocalVariable(name: "size", arg: 4, scope: !8060, file: !3, line: 836, type: !427)
!8099 = !DILocation(line: 836, column: 9, scope: !8060)
!8100 = !DILocalVariable(name: "s", scope: !8060, file: !3, line: 838, type: !8063)
!8101 = !DILocation(line: 838, column: 40, scope: !8060)
!8102 = !DILocalVariable(name: "i", scope: !8060, file: !3, line: 839, type: !282)
!8103 = !DILocation(line: 839, column: 6, scope: !8060)
!8104 = !DILocalVariable(name: "reg", scope: !8060, file: !3, line: 840, type: !296)
!8105 = !DILocation(line: 840, column: 6, scope: !8060)
!8106 = !DILocalVariable(name: "ret", scope: !8060, file: !3, line: 841, type: !282)
!8107 = !DILocation(line: 841, column: 6, scope: !8060)
!8108 = !DILocation(line: 843, column: 6, scope: !8060)
!8109 = !DILocation(line: 843, column: 4, scope: !8060)
!8110 = !DILocation(line: 844, column: 7, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 844, column: 6)
!8112 = !DILocation(line: 844, column: 6, scope: !8060)
!8113 = !DILocation(line: 845, column: 3, scope: !8111)
!8114 = !DILocation(line: 847, column: 24, scope: !8060)
!8115 = !DILocation(line: 847, column: 31, scope: !8060)
!8116 = !DILocation(line: 847, column: 46, scope: !8060)
!8117 = !DILocation(line: 847, column: 23, scope: !8060)
!8118 = !DILocation(line: 847, column: 14, scope: !8060)
!8119 = !DILocation(line: 847, column: 2, scope: !8060)
!8120 = !DILocation(line: 847, column: 5, scope: !8060)
!8121 = !DILocation(line: 847, column: 12, scope: !8060)
!8122 = !DILocation(line: 848, column: 29, scope: !8060)
!8123 = !DILocation(line: 848, column: 36, scope: !8060)
!8124 = !DILocation(line: 848, column: 51, scope: !8060)
!8125 = !DILocation(line: 848, column: 28, scope: !8060)
!8126 = !DILocation(line: 848, column: 19, scope: !8060)
!8127 = !DILocation(line: 848, column: 2, scope: !8060)
!8128 = !DILocation(line: 848, column: 5, scope: !8060)
!8129 = !DILocation(line: 848, column: 17, scope: !8060)
!8130 = !DILocation(line: 849, column: 28, scope: !8060)
!8131 = !DILocation(line: 849, column: 35, scope: !8060)
!8132 = !DILocation(line: 849, column: 50, scope: !8060)
!8133 = !DILocation(line: 849, column: 27, scope: !8060)
!8134 = !DILocation(line: 849, column: 18, scope: !8060)
!8135 = !DILocation(line: 849, column: 2, scope: !8060)
!8136 = !DILocation(line: 849, column: 5, scope: !8060)
!8137 = !DILocation(line: 849, column: 16, scope: !8060)
!8138 = !DILocation(line: 851, column: 9, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 851, column: 2)
!8140 = !DILocation(line: 851, column: 7, scope: !8139)
!8141 = !DILocation(line: 851, column: 14, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 851, column: 2)
!8143 = !DILocation(line: 851, column: 18, scope: !8142)
!8144 = !DILocation(line: 851, column: 25, scope: !8142)
!8145 = !DILocation(line: 851, column: 16, scope: !8142)
!8146 = !DILocation(line: 851, column: 2, scope: !8139)
!8147 = !DILocation(line: 852, column: 19, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 851, column: 47)
!8149 = !DILocation(line: 852, column: 26, scope: !8148)
!8150 = !DILocation(line: 852, column: 44, scope: !8148)
!8151 = !DILocation(line: 852, column: 47, scope: !8148)
!8152 = !DILocation(line: 852, column: 18, scope: !8148)
!8153 = !DILocation(line: 852, column: 9, scope: !8148)
!8154 = !DILocation(line: 852, column: 7, scope: !8148)
!8155 = !DILocation(line: 853, column: 16, scope: !8148)
!8156 = !DILocation(line: 853, column: 3, scope: !8148)
!8157 = !DILocation(line: 853, column: 6, scope: !8148)
!8158 = !DILocation(line: 853, column: 11, scope: !8148)
!8159 = !DILocation(line: 853, column: 14, scope: !8148)
!8160 = !DILocation(line: 854, column: 2, scope: !8148)
!8161 = !DILocation(line: 851, column: 43, scope: !8142)
!8162 = !DILocation(line: 851, column: 2, scope: !8142)
!8163 = distinct !{!8163, !8146, !8164}
!8164 = !DILocation(line: 854, column: 2, scope: !8139)
!8165 = !DILocation(line: 856, column: 9, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 856, column: 2)
!8167 = !DILocation(line: 856, column: 7, scope: !8166)
!8168 = !DILocation(line: 856, column: 14, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 856, column: 2)
!8170 = !DILocation(line: 856, column: 18, scope: !8169)
!8171 = !DILocation(line: 856, column: 25, scope: !8169)
!8172 = !DILocation(line: 856, column: 16, scope: !8169)
!8173 = !DILocation(line: 856, column: 2, scope: !8166)
!8174 = !DILocation(line: 857, column: 19, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 856, column: 45)
!8176 = !DILocation(line: 857, column: 26, scope: !8175)
!8177 = !DILocation(line: 857, column: 39, scope: !8175)
!8178 = !DILocation(line: 857, column: 42, scope: !8175)
!8179 = !DILocation(line: 857, column: 18, scope: !8175)
!8180 = !DILocation(line: 857, column: 9, scope: !8175)
!8181 = !DILocation(line: 857, column: 7, scope: !8175)
!8182 = !DILocation(line: 858, column: 15, scope: !8175)
!8183 = !DILocation(line: 858, column: 3, scope: !8175)
!8184 = !DILocation(line: 858, column: 6, scope: !8175)
!8185 = !DILocation(line: 858, column: 10, scope: !8175)
!8186 = !DILocation(line: 858, column: 13, scope: !8175)
!8187 = !DILocation(line: 859, column: 2, scope: !8175)
!8188 = !DILocation(line: 856, column: 41, scope: !8169)
!8189 = !DILocation(line: 856, column: 2, scope: !8169)
!8190 = distinct !{!8190, !8173, !8191}
!8191 = !DILocation(line: 859, column: 2, scope: !8166)
!8192 = !DILocation(line: 861, column: 19, scope: !8084)
!8193 = !DILocation(line: 861, column: 25, scope: !8084)
!8194 = !DILocation(line: 861, column: 28, scope: !8084)
!8195 = !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !8083)
!8196 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !8082)
!8197 = !DILocation(line: 0, scope: !7008, inlinedAt: !8082)
!8198 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !8082)
!8199 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !8082)
!8200 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !8082)
!8201 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !8082)
!8202 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !8082)
!8203 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !8082)
!8204 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !8082)
!8205 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !8082)
!8206 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !8082)
!8207 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !8082)
!8208 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !8082)
!8209 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !8082)
!8210 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !8082)
!8211 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !8082)
!8212 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !8082)
!8213 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !8082)
!8214 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !8082)
!8215 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !8082)
!8216 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !8082)
!8217 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !8082)
!8218 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !8082)
!8219 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !8082)
!8220 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !8082)
!8221 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !8082)
!8222 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !8082)
!8223 = !DILocation(line: 199, column: 6, scope: !6843, inlinedAt: !8083)
!8224 = !DILocation(line: 200, column: 21, scope: !6841, inlinedAt: !8083)
!8225 = !DILocation(line: 200, column: 25, scope: !6841, inlinedAt: !8083)
!8226 = !DILocation(line: 200, column: 31, scope: !6841, inlinedAt: !8083)
!8227 = !DILocation(line: 200, column: 7, scope: !6841, inlinedAt: !8083)
!8228 = !DILocation(line: 200, column: 5, scope: !6841, inlinedAt: !8083)
!8229 = !DILocation(line: 200, column: 3, scope: !6841, inlinedAt: !8083)
!8230 = !DILocation(line: 201, column: 9, scope: !6843, inlinedAt: !8083)
!8231 = !DILocation(line: 861, column: 6, scope: !8084)
!8232 = !DILocation(line: 861, column: 6, scope: !8060)
!8233 = !DILocation(line: 862, column: 7, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 861, column: 35)
!8235 = !DILocation(line: 863, column: 3, scope: !8234)
!8236 = !DILocation(line: 866, column: 35, scope: !8060)
!8237 = !DILocation(line: 866, column: 42, scope: !8060)
!8238 = !DILocation(line: 27, column: 25, scope: !7347, inlinedAt: !8076)
!8239 = !DILocation(line: 71, column: 19, scope: !7351, inlinedAt: !8078)
!8240 = !DILocation(line: 71, column: 22, scope: !7351, inlinedAt: !8078)
!8241 = !DILocation(line: 71, column: 2, scope: !7351, inlinedAt: !8078)
!8242 = !DILocation(line: 72, column: 2, scope: !7351, inlinedAt: !8078)
!8243 = !DILocation(line: 28, column: 26, scope: !7347, inlinedAt: !8076)
!8244 = !DILocation(line: 29, column: 9, scope: !7340, inlinedAt: !8075)
!8245 = !DILocation(line: 866, column: 2, scope: !8060)
!8246 = !DILocation(line: 866, column: 10, scope: !8060)
!8247 = !DILocation(line: 866, column: 20, scope: !8060)
!8248 = !DILabel(scope: !8060, name: "error_case", file: !3, line: 868)
!8249 = !DILocation(line: 868, column: 1, scope: !8060)
!8250 = !DILocation(line: 869, column: 8, scope: !8060)
!8251 = !DILocation(line: 869, column: 2, scope: !8060)
!8252 = !DILocation(line: 870, column: 9, scope: !8060)
!8253 = !DILocation(line: 870, column: 2, scope: !8060)
!8254 = !DILocation(line: 871, column: 1, scope: !8060)
!8255 = distinct !DISubprogram(name: "ioctl_event_ctl", scope: !3, file: !3, line: 1013, type: !8256, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!8256 = !DISubroutineType(types: !8257)
!8257 = !{!282, !227, !8258}
!8258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8259, size: 64)
!8259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchtec_ioctl_event_ctl", file: !7801, line: 130, size: 320, elements: !8260)
!8260 = !{!8261, !8262, !8263, !8264, !8265, !8266}
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "event_id", scope: !8259, file: !7801, line: 131, baseType: !297, size: 32)
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8259, file: !7801, line: 132, baseType: !1538, size: 32, offset: 32)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8259, file: !7801, line: 133, baseType: !297, size: 32, offset: 64)
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "occurred", scope: !8259, file: !7801, line: 134, baseType: !297, size: 32, offset: 96)
!8265 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8259, file: !7801, line: 135, baseType: !297, size: 32, offset: 128)
!8266 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8259, file: !7801, line: 136, baseType: !8267, size: 160, offset: 160)
!8267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 160, elements: !4185)
!8268 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !8269)
!8269 = distinct !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !8270)
!8270 = distinct !DILocation(line: 1053, column: 6, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8255, file: !3, line: 1053, column: 6)
!8272 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !8269)
!8273 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !8269)
!8274 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !8269)
!8275 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !8269)
!8276 = !DILocation(line: 197, column: 27, scope: !6843, inlinedAt: !8270)
!8277 = !DILocation(line: 197, column: 43, scope: !6843, inlinedAt: !8270)
!8278 = !DILocation(line: 197, column: 63, scope: !6843, inlinedAt: !8270)
!8279 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !8280)
!8280 = distinct !DILocation(line: 191, column: 6, scope: !7136, inlinedAt: !8281)
!8281 = distinct !DILocation(line: 1021, column: 6, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8255, file: !3, line: 1021, column: 6)
!8283 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !8280)
!8284 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !8280)
!8285 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !8280)
!8286 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !8280)
!8287 = !DILocation(line: 189, column: 22, scope: !7137, inlinedAt: !8281)
!8288 = !DILocation(line: 189, column: 45, scope: !7137, inlinedAt: !8281)
!8289 = !DILocation(line: 189, column: 65, scope: !7137, inlinedAt: !8281)
!8290 = !DILocalVariable(name: "stdev", arg: 1, scope: !8255, file: !3, line: 1013, type: !227)
!8291 = !DILocation(line: 1013, column: 50, scope: !8255)
!8292 = !DILocalVariable(name: "uctl", arg: 2, scope: !8255, file: !3, line: 1014, type: !8258)
!8293 = !DILocation(line: 1014, column: 43, scope: !8255)
!8294 = !DILocalVariable(name: "ret", scope: !8255, file: !3, line: 1016, type: !282)
!8295 = !DILocation(line: 1016, column: 6, scope: !8255)
!8296 = !DILocalVariable(name: "nr_idxs", scope: !8255, file: !3, line: 1017, type: !282)
!8297 = !DILocation(line: 1017, column: 6, scope: !8255)
!8298 = !DILocalVariable(name: "event_flags", scope: !8255, file: !3, line: 1018, type: !7)
!8299 = !DILocation(line: 1018, column: 15, scope: !8255)
!8300 = !DILocalVariable(name: "ctl", scope: !8255, file: !3, line: 1019, type: !8259)
!8301 = !DILocation(line: 1019, column: 35, scope: !8255)
!8302 = !DILocation(line: 1021, column: 21, scope: !8282)
!8303 = !DILocation(line: 1021, column: 27, scope: !8282)
!8304 = !DILocation(line: 191, column: 6, scope: !7136, inlinedAt: !8281)
!8305 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !8280)
!8306 = !DILocation(line: 0, scope: !7008, inlinedAt: !8280)
!8307 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !8280)
!8308 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !8280)
!8309 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !8280)
!8310 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !8280)
!8311 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !8280)
!8312 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !8280)
!8313 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !8280)
!8314 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !8280)
!8315 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !8280)
!8316 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !8280)
!8317 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !8280)
!8318 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !8280)
!8319 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !8280)
!8320 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !8280)
!8321 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !8280)
!8322 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !8280)
!8323 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !8280)
!8324 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !8280)
!8325 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !8280)
!8326 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !8280)
!8327 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !8280)
!8328 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !8280)
!8329 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !8280)
!8330 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !8280)
!8331 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !8280)
!8332 = !DILocation(line: 191, column: 6, scope: !7137, inlinedAt: !8281)
!8333 = !DILocation(line: 192, column: 23, scope: !7136, inlinedAt: !8281)
!8334 = !DILocation(line: 192, column: 27, scope: !7136, inlinedAt: !8281)
!8335 = !DILocation(line: 192, column: 33, scope: !7136, inlinedAt: !8281)
!8336 = !DILocation(line: 192, column: 7, scope: !7136, inlinedAt: !8281)
!8337 = !DILocation(line: 192, column: 5, scope: !7136, inlinedAt: !8281)
!8338 = !DILocation(line: 192, column: 3, scope: !7136, inlinedAt: !8281)
!8339 = !DILocation(line: 193, column: 9, scope: !7137, inlinedAt: !8281)
!8340 = !DILocation(line: 1021, column: 6, scope: !8282)
!8341 = !DILocation(line: 1021, column: 6, scope: !8255)
!8342 = !DILocation(line: 1022, column: 3, scope: !8282)
!8343 = !DILocation(line: 1024, column: 10, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8255, file: !3, line: 1024, column: 6)
!8345 = !DILocation(line: 1024, column: 19, scope: !8344)
!8346 = !DILocation(line: 1024, column: 6, scope: !8255)
!8347 = !DILocation(line: 1025, column: 3, scope: !8344)
!8348 = !DILocation(line: 1027, column: 10, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8255, file: !3, line: 1027, column: 6)
!8350 = !DILocation(line: 1027, column: 16, scope: !8349)
!8351 = !DILocation(line: 1027, column: 6, scope: !8255)
!8352 = !DILocation(line: 1028, column: 3, scope: !8349)
!8353 = !DILocation(line: 1030, column: 10, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8255, file: !3, line: 1030, column: 6)
!8355 = !DILocation(line: 1030, column: 16, scope: !8354)
!8356 = !DILocation(line: 1030, column: 6, scope: !8255)
!8357 = !DILocation(line: 1031, column: 22, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 1031, column: 7)
!8359 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 1030, column: 50)
!8360 = !DILocation(line: 1031, column: 7, scope: !8358)
!8361 = !DILocation(line: 1031, column: 32, scope: !8358)
!8362 = !DILocation(line: 1031, column: 40, scope: !8358)
!8363 = !DILocation(line: 1031, column: 7, scope: !8359)
!8364 = !DILocation(line: 1032, column: 12, scope: !8358)
!8365 = !DILocation(line: 1032, column: 4, scope: !8358)
!8366 = !DILocation(line: 1033, column: 27, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 1033, column: 12)
!8368 = !DILocation(line: 1033, column: 12, scope: !8367)
!8369 = !DILocation(line: 1033, column: 37, scope: !8367)
!8370 = !DILocation(line: 1033, column: 45, scope: !8367)
!8371 = !DILocation(line: 1033, column: 12, scope: !8358)
!8372 = !DILocation(line: 1034, column: 14, scope: !8367)
!8373 = !DILocation(line: 1034, column: 21, scope: !8367)
!8374 = !DILocation(line: 1034, column: 12, scope: !8367)
!8375 = !DILocation(line: 1034, column: 4, scope: !8367)
!8376 = !DILocation(line: 1035, column: 27, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 1035, column: 12)
!8378 = !DILocation(line: 1035, column: 12, scope: !8377)
!8379 = !DILocation(line: 1035, column: 37, scope: !8377)
!8380 = !DILocation(line: 1035, column: 45, scope: !8377)
!8381 = !DILocation(line: 1035, column: 12, scope: !8367)
!8382 = !DILocation(line: 1036, column: 14, scope: !8377)
!8383 = !DILocation(line: 1036, column: 21, scope: !8377)
!8384 = !DILocation(line: 1036, column: 12, scope: !8377)
!8385 = !DILocation(line: 1036, column: 4, scope: !8377)
!8386 = !DILocation(line: 1038, column: 4, scope: !8377)
!8387 = !DILocation(line: 1040, column: 21, scope: !8359)
!8388 = !DILocation(line: 1040, column: 15, scope: !8359)
!8389 = !DILocation(line: 1041, column: 12, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 1041, column: 3)
!8391 = !DILocation(line: 1041, column: 18, scope: !8390)
!8392 = !DILocation(line: 1041, column: 8, scope: !8390)
!8393 = !DILocation(line: 1041, column: 27, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 1041, column: 3)
!8395 = !DILocation(line: 1041, column: 35, scope: !8394)
!8396 = !DILocation(line: 1041, column: 33, scope: !8394)
!8397 = !DILocation(line: 1041, column: 3, scope: !8390)
!8398 = !DILocation(line: 1042, column: 16, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 1041, column: 57)
!8400 = !DILocation(line: 1042, column: 8, scope: !8399)
!8401 = !DILocation(line: 1042, column: 14, scope: !8399)
!8402 = !DILocation(line: 1043, column: 20, scope: !8399)
!8403 = !DILocation(line: 1043, column: 10, scope: !8399)
!8404 = !DILocation(line: 1043, column: 8, scope: !8399)
!8405 = !DILocation(line: 1044, column: 8, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 1044, column: 8)
!8407 = !DILocation(line: 1044, column: 12, scope: !8406)
!8408 = !DILocation(line: 1044, column: 8, scope: !8399)
!8409 = !DILocation(line: 1045, column: 12, scope: !8406)
!8410 = !DILocation(line: 1045, column: 5, scope: !8406)
!8411 = !DILocation(line: 1046, column: 3, scope: !8399)
!8412 = !DILocation(line: 1041, column: 48, scope: !8394)
!8413 = !DILocation(line: 1041, column: 53, scope: !8394)
!8414 = !DILocation(line: 1041, column: 3, scope: !8394)
!8415 = distinct !{!8415, !8397, !8416}
!8416 = !DILocation(line: 1046, column: 3, scope: !8390)
!8417 = !DILocation(line: 1047, column: 2, scope: !8359)
!8418 = !DILocation(line: 1048, column: 19, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 1047, column: 9)
!8420 = !DILocation(line: 1048, column: 9, scope: !8419)
!8421 = !DILocation(line: 1048, column: 7, scope: !8419)
!8422 = !DILocation(line: 1049, column: 7, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8419, file: !3, line: 1049, column: 7)
!8424 = !DILocation(line: 1049, column: 11, scope: !8423)
!8425 = !DILocation(line: 1049, column: 7, scope: !8419)
!8426 = !DILocation(line: 1050, column: 11, scope: !8423)
!8427 = !DILocation(line: 1050, column: 4, scope: !8423)
!8428 = !DILocation(line: 1053, column: 19, scope: !8271)
!8429 = !DILocation(line: 1053, column: 25, scope: !8271)
!8430 = !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !8270)
!8431 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !8269)
!8432 = !DILocation(line: 0, scope: !7008, inlinedAt: !8269)
!8433 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !8269)
!8434 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !8269)
!8435 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !8269)
!8436 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !8269)
!8437 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !8269)
!8438 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !8269)
!8439 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !8269)
!8440 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !8269)
!8441 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !8269)
!8442 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !8269)
!8443 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !8269)
!8444 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !8269)
!8445 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !8269)
!8446 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !8269)
!8447 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !8269)
!8448 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !8269)
!8449 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !8269)
!8450 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !8269)
!8451 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !8269)
!8452 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !8269)
!8453 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !8269)
!8454 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !8269)
!8455 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !8269)
!8456 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !8269)
!8457 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !8269)
!8458 = !DILocation(line: 199, column: 6, scope: !6843, inlinedAt: !8270)
!8459 = !DILocation(line: 200, column: 21, scope: !6841, inlinedAt: !8270)
!8460 = !DILocation(line: 200, column: 25, scope: !6841, inlinedAt: !8270)
!8461 = !DILocation(line: 200, column: 31, scope: !6841, inlinedAt: !8270)
!8462 = !DILocation(line: 200, column: 7, scope: !6841, inlinedAt: !8270)
!8463 = !DILocation(line: 200, column: 5, scope: !6841, inlinedAt: !8270)
!8464 = !DILocation(line: 200, column: 3, scope: !6841, inlinedAt: !8270)
!8465 = !DILocation(line: 201, column: 9, scope: !6843, inlinedAt: !8270)
!8466 = !DILocation(line: 1053, column: 6, scope: !8271)
!8467 = !DILocation(line: 1053, column: 6, scope: !8255)
!8468 = !DILocation(line: 1054, column: 3, scope: !8271)
!8469 = !DILocation(line: 1056, column: 2, scope: !8255)
!8470 = !DILocation(line: 1057, column: 1, scope: !8255)
!8471 = distinct !DISubprogram(name: "ioctl_pff_to_port", scope: !3, file: !3, line: 1059, type: !8472, scopeLine: 1061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!8472 = !DISubroutineType(types: !8473)
!8473 = !{!282, !227, !8474}
!8474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8475, size: 64)
!8475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "switchtec_ioctl_pff_port", file: !7801, line: 140, size: 96, elements: !8476)
!8476 = !{!8477, !8478, !8479}
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "pff", scope: !8475, file: !7801, line: 141, baseType: !297, size: 32)
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "partition", scope: !8475, file: !7801, line: 142, baseType: !297, size: 32, offset: 32)
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8475, file: !7801, line: 143, baseType: !297, size: 32, offset: 64)
!8480 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !8481)
!8481 = distinct !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !8482)
!8482 = distinct !DILocation(line: 1100, column: 6, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8471, file: !3, line: 1100, column: 6)
!8484 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !8481)
!8485 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !8481)
!8486 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !8481)
!8487 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !8481)
!8488 = !DILocation(line: 197, column: 27, scope: !6843, inlinedAt: !8482)
!8489 = !DILocation(line: 197, column: 43, scope: !6843, inlinedAt: !8482)
!8490 = !DILocation(line: 197, column: 63, scope: !6843, inlinedAt: !8482)
!8491 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !8492)
!8492 = distinct !DILocation(line: 191, column: 6, scope: !7136, inlinedAt: !8493)
!8493 = distinct !DILocation(line: 1067, column: 6, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8471, file: !3, line: 1067, column: 6)
!8495 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !8492)
!8496 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !8492)
!8497 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !8492)
!8498 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !8492)
!8499 = !DILocation(line: 189, column: 22, scope: !7137, inlinedAt: !8493)
!8500 = !DILocation(line: 189, column: 45, scope: !7137, inlinedAt: !8493)
!8501 = !DILocation(line: 189, column: 65, scope: !7137, inlinedAt: !8493)
!8502 = !DILocalVariable(name: "stdev", arg: 1, scope: !8471, file: !3, line: 1059, type: !227)
!8503 = !DILocation(line: 1059, column: 52, scope: !8471)
!8504 = !DILocalVariable(name: "up", arg: 2, scope: !8471, file: !3, line: 1060, type: !8474)
!8505 = !DILocation(line: 1060, column: 49, scope: !8471)
!8506 = !DILocalVariable(name: "i", scope: !8471, file: !3, line: 1062, type: !282)
!8507 = !DILocation(line: 1062, column: 6, scope: !8471)
!8508 = !DILocalVariable(name: "part", scope: !8471, file: !3, line: 1062, type: !282)
!8509 = !DILocation(line: 1062, column: 9, scope: !8471)
!8510 = !DILocalVariable(name: "reg", scope: !8471, file: !3, line: 1063, type: !296)
!8511 = !DILocation(line: 1063, column: 6, scope: !8471)
!8512 = !DILocalVariable(name: "pcfg", scope: !8471, file: !3, line: 1064, type: !4376)
!8513 = !DILocation(line: 1064, column: 32, scope: !8471)
!8514 = !DILocalVariable(name: "p", scope: !8471, file: !3, line: 1065, type: !8475)
!8515 = !DILocation(line: 1065, column: 34, scope: !8471)
!8516 = !DILocation(line: 1067, column: 21, scope: !8494)
!8517 = !DILocation(line: 1067, column: 25, scope: !8494)
!8518 = !DILocation(line: 191, column: 6, scope: !7136, inlinedAt: !8493)
!8519 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !8492)
!8520 = !DILocation(line: 0, scope: !7008, inlinedAt: !8492)
!8521 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !8492)
!8522 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !8492)
!8523 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !8492)
!8524 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !8492)
!8525 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !8492)
!8526 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !8492)
!8527 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !8492)
!8528 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !8492)
!8529 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !8492)
!8530 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !8492)
!8531 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !8492)
!8532 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !8492)
!8533 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !8492)
!8534 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !8492)
!8535 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !8492)
!8536 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !8492)
!8537 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !8492)
!8538 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !8492)
!8539 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !8492)
!8540 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !8492)
!8541 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !8492)
!8542 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !8492)
!8543 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !8492)
!8544 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !8492)
!8545 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !8492)
!8546 = !DILocation(line: 191, column: 6, scope: !7137, inlinedAt: !8493)
!8547 = !DILocation(line: 192, column: 23, scope: !7136, inlinedAt: !8493)
!8548 = !DILocation(line: 192, column: 27, scope: !7136, inlinedAt: !8493)
!8549 = !DILocation(line: 192, column: 33, scope: !7136, inlinedAt: !8493)
!8550 = !DILocation(line: 192, column: 7, scope: !7136, inlinedAt: !8493)
!8551 = !DILocation(line: 192, column: 5, scope: !7136, inlinedAt: !8493)
!8552 = !DILocation(line: 192, column: 3, scope: !7136, inlinedAt: !8493)
!8553 = !DILocation(line: 193, column: 9, scope: !7137, inlinedAt: !8493)
!8554 = !DILocation(line: 1067, column: 6, scope: !8494)
!8555 = !DILocation(line: 1067, column: 6, scope: !8471)
!8556 = !DILocation(line: 1068, column: 3, scope: !8494)
!8557 = !DILocation(line: 1070, column: 4, scope: !8471)
!8558 = !DILocation(line: 1070, column: 9, scope: !8471)
!8559 = !DILocation(line: 1071, column: 12, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8471, file: !3, line: 1071, column: 2)
!8561 = !DILocation(line: 1071, column: 7, scope: !8560)
!8562 = !DILocation(line: 1071, column: 17, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 1071, column: 2)
!8564 = !DILocation(line: 1071, column: 24, scope: !8563)
!8565 = !DILocation(line: 1071, column: 31, scope: !8563)
!8566 = !DILocation(line: 1071, column: 22, scope: !8563)
!8567 = !DILocation(line: 1071, column: 2, scope: !8560)
!8568 = !DILocation(line: 1072, column: 11, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 1071, column: 56)
!8570 = !DILocation(line: 1072, column: 18, scope: !8569)
!8571 = !DILocation(line: 1072, column: 36, scope: !8569)
!8572 = !DILocation(line: 1072, column: 8, scope: !8569)
!8573 = !DILocation(line: 1073, column: 17, scope: !8569)
!8574 = !DILocation(line: 1073, column: 5, scope: !8569)
!8575 = !DILocation(line: 1073, column: 15, scope: !8569)
!8576 = !DILocation(line: 1075, column: 19, scope: !8569)
!8577 = !DILocation(line: 1075, column: 25, scope: !8569)
!8578 = !DILocation(line: 1075, column: 18, scope: !8569)
!8579 = !DILocation(line: 1075, column: 9, scope: !8569)
!8580 = !DILocation(line: 1075, column: 7, scope: !8569)
!8581 = !DILocation(line: 1076, column: 7, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 1076, column: 7)
!8583 = !DILocation(line: 1076, column: 16, scope: !8582)
!8584 = !DILocation(line: 1076, column: 11, scope: !8582)
!8585 = !DILocation(line: 1076, column: 7, scope: !8569)
!8586 = !DILocation(line: 1077, column: 6, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1076, column: 21)
!8588 = !DILocation(line: 1077, column: 11, scope: !8587)
!8589 = !DILocation(line: 1078, column: 4, scope: !8587)
!8590 = !DILocation(line: 1081, column: 19, scope: !8569)
!8591 = !DILocation(line: 1081, column: 25, scope: !8569)
!8592 = !DILocation(line: 1081, column: 18, scope: !8569)
!8593 = !DILocation(line: 1081, column: 9, scope: !8569)
!8594 = !DILocation(line: 1081, column: 7, scope: !8569)
!8595 = !DILocation(line: 1082, column: 7, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 1082, column: 7)
!8597 = !DILocation(line: 1082, column: 16, scope: !8596)
!8598 = !DILocation(line: 1082, column: 11, scope: !8596)
!8599 = !DILocation(line: 1082, column: 7, scope: !8569)
!8600 = !DILocation(line: 1083, column: 6, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 1082, column: 21)
!8602 = !DILocation(line: 1083, column: 11, scope: !8601)
!8603 = !DILocation(line: 1084, column: 4, scope: !8601)
!8604 = !DILocation(line: 1087, column: 10, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 1087, column: 3)
!8606 = !DILocation(line: 1087, column: 8, scope: !8605)
!8607 = !DILocation(line: 1087, column: 15, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 1087, column: 3)
!8609 = !DILocation(line: 1087, column: 17, scope: !8608)
!8610 = !DILocation(line: 1087, column: 3, scope: !8605)
!8611 = !DILocation(line: 1088, column: 20, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 1087, column: 59)
!8613 = !DILocation(line: 1088, column: 26, scope: !8612)
!8614 = !DILocation(line: 1088, column: 42, scope: !8612)
!8615 = !DILocation(line: 1088, column: 19, scope: !8612)
!8616 = !DILocation(line: 1088, column: 10, scope: !8612)
!8617 = !DILocation(line: 1088, column: 8, scope: !8612)
!8618 = !DILocation(line: 1089, column: 8, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8612, file: !3, line: 1089, column: 8)
!8620 = !DILocation(line: 1089, column: 17, scope: !8619)
!8621 = !DILocation(line: 1089, column: 12, scope: !8619)
!8622 = !DILocation(line: 1089, column: 8, scope: !8612)
!8623 = !DILocation(line: 1090, column: 5, scope: !8619)
!8624 = !DILocation(line: 1092, column: 13, scope: !8612)
!8625 = !DILocation(line: 1092, column: 15, scope: !8612)
!8626 = !DILocation(line: 1092, column: 6, scope: !8612)
!8627 = !DILocation(line: 1092, column: 11, scope: !8612)
!8628 = !DILocation(line: 1093, column: 4, scope: !8612)
!8629 = !DILocation(line: 1087, column: 55, scope: !8608)
!8630 = !DILocation(line: 1087, column: 3, scope: !8608)
!8631 = distinct !{!8631, !8610, !8632}
!8632 = !DILocation(line: 1094, column: 3, scope: !8605)
!8633 = !DILocation(line: 1096, column: 9, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 1096, column: 7)
!8635 = !DILocation(line: 1096, column: 14, scope: !8634)
!8636 = !DILocation(line: 1096, column: 7, scope: !8569)
!8637 = !DILocation(line: 1097, column: 4, scope: !8634)
!8638 = !DILocation(line: 1098, column: 2, scope: !8569)
!8639 = !DILocation(line: 1071, column: 52, scope: !8563)
!8640 = !DILocation(line: 1071, column: 2, scope: !8563)
!8641 = distinct !{!8641, !8567, !8642}
!8642 = !DILocation(line: 1098, column: 2, scope: !8560)
!8643 = !DILocation(line: 1100, column: 19, scope: !8483)
!8644 = !DILocation(line: 1100, column: 23, scope: !8483)
!8645 = !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !8482)
!8646 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !8481)
!8647 = !DILocation(line: 0, scope: !7008, inlinedAt: !8481)
!8648 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !8481)
!8649 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !8481)
!8650 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !8481)
!8651 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !8481)
!8652 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !8481)
!8653 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !8481)
!8654 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !8481)
!8655 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !8481)
!8656 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !8481)
!8657 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !8481)
!8658 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !8481)
!8659 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !8481)
!8660 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !8481)
!8661 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !8481)
!8662 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !8481)
!8663 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !8481)
!8664 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !8481)
!8665 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !8481)
!8666 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !8481)
!8667 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !8481)
!8668 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !8481)
!8669 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !8481)
!8670 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !8481)
!8671 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !8481)
!8672 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !8481)
!8673 = !DILocation(line: 199, column: 6, scope: !6843, inlinedAt: !8482)
!8674 = !DILocation(line: 200, column: 21, scope: !6841, inlinedAt: !8482)
!8675 = !DILocation(line: 200, column: 25, scope: !6841, inlinedAt: !8482)
!8676 = !DILocation(line: 200, column: 31, scope: !6841, inlinedAt: !8482)
!8677 = !DILocation(line: 200, column: 7, scope: !6841, inlinedAt: !8482)
!8678 = !DILocation(line: 200, column: 5, scope: !6841, inlinedAt: !8482)
!8679 = !DILocation(line: 200, column: 3, scope: !6841, inlinedAt: !8482)
!8680 = !DILocation(line: 201, column: 9, scope: !6843, inlinedAt: !8482)
!8681 = !DILocation(line: 1100, column: 6, scope: !8483)
!8682 = !DILocation(line: 1100, column: 6, scope: !8471)
!8683 = !DILocation(line: 1101, column: 3, scope: !8483)
!8684 = !DILocation(line: 1103, column: 2, scope: !8471)
!8685 = !DILocation(line: 1104, column: 1, scope: !8471)
!8686 = distinct !DISubprogram(name: "ioctl_port_to_pff", scope: !3, file: !3, line: 1106, type: !8472, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!8687 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !8688)
!8688 = distinct !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !8689)
!8689 = distinct !DILocation(line: 1138, column: 6, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8686, file: !3, line: 1138, column: 6)
!8691 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !8688)
!8692 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !8688)
!8693 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !8688)
!8694 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !8688)
!8695 = !DILocation(line: 197, column: 27, scope: !6843, inlinedAt: !8689)
!8696 = !DILocation(line: 197, column: 43, scope: !6843, inlinedAt: !8689)
!8697 = !DILocation(line: 197, column: 63, scope: !6843, inlinedAt: !8689)
!8698 = !DILocation(line: 138, column: 29, scope: !6835, inlinedAt: !8699)
!8699 = distinct !DILocation(line: 191, column: 6, scope: !7136, inlinedAt: !8700)
!8700 = distinct !DILocation(line: 1112, column: 6, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8686, file: !3, line: 1112, column: 6)
!8702 = !DILocation(line: 138, column: 42, scope: !6835, inlinedAt: !8699)
!8703 = !DILocation(line: 138, column: 54, scope: !6835, inlinedAt: !8699)
!8704 = !DILocation(line: 140, column: 6, scope: !6835, inlinedAt: !8699)
!8705 = !DILocation(line: 150, column: 6, scope: !6854, inlinedAt: !8699)
!8706 = !DILocation(line: 189, column: 22, scope: !7137, inlinedAt: !8700)
!8707 = !DILocation(line: 189, column: 45, scope: !7137, inlinedAt: !8700)
!8708 = !DILocation(line: 189, column: 65, scope: !7137, inlinedAt: !8700)
!8709 = !DILocalVariable(name: "stdev", arg: 1, scope: !8686, file: !3, line: 1106, type: !227)
!8710 = !DILocation(line: 1106, column: 52, scope: !8686)
!8711 = !DILocalVariable(name: "up", arg: 2, scope: !8686, file: !3, line: 1107, type: !8474)
!8712 = !DILocation(line: 1107, column: 49, scope: !8686)
!8713 = !DILocalVariable(name: "p", scope: !8686, file: !3, line: 1109, type: !8475)
!8714 = !DILocation(line: 1109, column: 34, scope: !8686)
!8715 = !DILocalVariable(name: "pcfg", scope: !8686, file: !3, line: 1110, type: !4376)
!8716 = !DILocation(line: 1110, column: 32, scope: !8686)
!8717 = !DILocation(line: 1112, column: 21, scope: !8701)
!8718 = !DILocation(line: 1112, column: 25, scope: !8701)
!8719 = !DILocation(line: 191, column: 6, scope: !7136, inlinedAt: !8700)
!8720 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !8699)
!8721 = !DILocation(line: 0, scope: !7008, inlinedAt: !8699)
!8722 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !8699)
!8723 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !8699)
!8724 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !8699)
!8725 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !8699)
!8726 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !8699)
!8727 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !8699)
!8728 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !8699)
!8729 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !8699)
!8730 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !8699)
!8731 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !8699)
!8732 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !8699)
!8733 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !8699)
!8734 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !8699)
!8735 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !8699)
!8736 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !8699)
!8737 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !8699)
!8738 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !8699)
!8739 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !8699)
!8740 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !8699)
!8741 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !8699)
!8742 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !8699)
!8743 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !8699)
!8744 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !8699)
!8745 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !8699)
!8746 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !8699)
!8747 = !DILocation(line: 191, column: 6, scope: !7137, inlinedAt: !8700)
!8748 = !DILocation(line: 192, column: 23, scope: !7136, inlinedAt: !8700)
!8749 = !DILocation(line: 192, column: 27, scope: !7136, inlinedAt: !8700)
!8750 = !DILocation(line: 192, column: 33, scope: !7136, inlinedAt: !8700)
!8751 = !DILocation(line: 192, column: 7, scope: !7136, inlinedAt: !8700)
!8752 = !DILocation(line: 192, column: 5, scope: !7136, inlinedAt: !8700)
!8753 = !DILocation(line: 192, column: 3, scope: !7136, inlinedAt: !8700)
!8754 = !DILocation(line: 193, column: 9, scope: !7137, inlinedAt: !8700)
!8755 = !DILocation(line: 1112, column: 6, scope: !8701)
!8756 = !DILocation(line: 1112, column: 6, scope: !8686)
!8757 = !DILocation(line: 1113, column: 3, scope: !8701)
!8758 = !DILocation(line: 1115, column: 8, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8686, file: !3, line: 1115, column: 6)
!8760 = !DILocation(line: 1115, column: 18, scope: !8759)
!8761 = !DILocation(line: 1115, column: 6, scope: !8686)
!8762 = !DILocation(line: 1116, column: 10, scope: !8759)
!8763 = !DILocation(line: 1116, column: 17, scope: !8759)
!8764 = !DILocation(line: 1116, column: 8, scope: !8759)
!8765 = !DILocation(line: 1116, column: 3, scope: !8759)
!8766 = !DILocation(line: 1117, column: 13, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8759, file: !3, line: 1117, column: 11)
!8768 = !DILocation(line: 1117, column: 25, scope: !8767)
!8769 = !DILocation(line: 1117, column: 32, scope: !8767)
!8770 = !DILocation(line: 1117, column: 23, scope: !8767)
!8771 = !DILocation(line: 1117, column: 11, scope: !8759)
!8772 = !DILocation(line: 1118, column: 11, scope: !8767)
!8773 = !DILocation(line: 1118, column: 18, scope: !8767)
!8774 = !DILocation(line: 1118, column: 38, scope: !8767)
!8775 = !DILocation(line: 1118, column: 8, scope: !8767)
!8776 = !DILocation(line: 1118, column: 3, scope: !8767)
!8777 = !DILocation(line: 1120, column: 3, scope: !8767)
!8778 = !DILocation(line: 1122, column: 12, scope: !8686)
!8779 = !DILocation(line: 1122, column: 2, scope: !8686)
!8780 = !DILocation(line: 1124, column: 21, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8686, file: !3, line: 1122, column: 18)
!8782 = !DILocation(line: 1124, column: 27, scope: !8781)
!8783 = !DILocation(line: 1124, column: 20, scope: !8781)
!8784 = !DILocation(line: 1124, column: 11, scope: !8781)
!8785 = !DILocation(line: 1124, column: 5, scope: !8781)
!8786 = !DILocation(line: 1124, column: 9, scope: !8781)
!8787 = !DILocation(line: 1125, column: 3, scope: !8781)
!8788 = !DILocation(line: 1127, column: 21, scope: !8781)
!8789 = !DILocation(line: 1127, column: 27, scope: !8781)
!8790 = !DILocation(line: 1127, column: 20, scope: !8781)
!8791 = !DILocation(line: 1127, column: 11, scope: !8781)
!8792 = !DILocation(line: 1127, column: 5, scope: !8781)
!8793 = !DILocation(line: 1127, column: 9, scope: !8781)
!8794 = !DILocation(line: 1128, column: 3, scope: !8781)
!8795 = !DILocation(line: 1130, column: 9, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 1130, column: 7)
!8797 = !DILocation(line: 1130, column: 7, scope: !8796)
!8798 = !DILocation(line: 1130, column: 14, scope: !8796)
!8799 = !DILocation(line: 1130, column: 7, scope: !8781)
!8800 = !DILocation(line: 1131, column: 4, scope: !8796)
!8801 = !DILocalVariable(name: "_i", scope: !8802, file: !3, line: 1132, type: !297)
!8802 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 1132, column: 12)
!8803 = !DILocation(line: 1132, column: 12, scope: !8802)
!8804 = !DILocalVariable(name: "_s", scope: !8802, file: !3, line: 1132, type: !216)
!8805 = !DILocalVariable(name: "_mask", scope: !8802, file: !3, line: 1132, type: !216)
!8806 = !DILocation(line: 1132, column: 12, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8802, file: !3, line: 1132, column: 12)
!8808 = !DILocation(line: 1132, column: 12, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8802, file: !3, line: 1132, column: 12)
!8810 = !DILocation(line: 1132, column: 5, scope: !8781)
!8811 = !DILocation(line: 1132, column: 10, scope: !8781)
!8812 = !DILocation(line: 1134, column: 21, scope: !8781)
!8813 = !DILocation(line: 1134, column: 27, scope: !8781)
!8814 = !DILocation(line: 1134, column: 45, scope: !8781)
!8815 = !DILocation(line: 1134, column: 50, scope: !8781)
!8816 = !DILocation(line: 1134, column: 20, scope: !8781)
!8817 = !DILocation(line: 1134, column: 11, scope: !8781)
!8818 = !DILocation(line: 1134, column: 5, scope: !8781)
!8819 = !DILocation(line: 1134, column: 9, scope: !8781)
!8820 = !DILocation(line: 1135, column: 3, scope: !8781)
!8821 = !DILocation(line: 1138, column: 19, scope: !8690)
!8822 = !DILocation(line: 1138, column: 23, scope: !8690)
!8823 = !DILocation(line: 199, column: 6, scope: !6841, inlinedAt: !8689)
!8824 = !DILocation(line: 141, column: 6, scope: !7008, inlinedAt: !8688)
!8825 = !DILocation(line: 0, scope: !7008, inlinedAt: !8688)
!8826 = !DILocation(line: 141, column: 6, scope: !6835, inlinedAt: !8688)
!8827 = !DILocation(line: 142, column: 29, scope: !7012, inlinedAt: !8688)
!8828 = !DILocation(line: 142, column: 8, scope: !7012, inlinedAt: !8688)
!8829 = !DILocation(line: 142, column: 7, scope: !7013, inlinedAt: !8688)
!8830 = !DILocation(line: 143, column: 18, scope: !7012, inlinedAt: !8688)
!8831 = !DILocation(line: 143, column: 22, scope: !7012, inlinedAt: !8688)
!8832 = !DILocation(line: 143, column: 4, scope: !7012, inlinedAt: !8688)
!8833 = !DILocation(line: 144, column: 12, scope: !7020, inlinedAt: !8688)
!8834 = !DILocation(line: 144, column: 12, scope: !7012, inlinedAt: !8688)
!8835 = !DILocation(line: 145, column: 4, scope: !7020, inlinedAt: !8688)
!8836 = !DILocation(line: 147, column: 4, scope: !7020, inlinedAt: !8688)
!8837 = !DILocation(line: 148, column: 3, scope: !7013, inlinedAt: !8688)
!8838 = !DILocation(line: 150, column: 6, scope: !7026, inlinedAt: !8688)
!8839 = !DILocation(line: 150, column: 6, scope: !7028, inlinedAt: !8688)
!8840 = !DILocation(line: 150, column: 6, scope: !7032, inlinedAt: !8688)
!8841 = !DILocation(line: 150, column: 6, scope: !7029, inlinedAt: !8688)
!8842 = !DILocation(line: 150, column: 6, scope: !6855, inlinedAt: !8688)
!8843 = !DILocation(line: 150, column: 6, scope: !6835, inlinedAt: !8688)
!8844 = !DILocation(line: 151, column: 3, scope: !6855, inlinedAt: !8688)
!8845 = !DILocation(line: 152, column: 20, scope: !6835, inlinedAt: !8688)
!8846 = !DILocation(line: 152, column: 26, scope: !6835, inlinedAt: !8688)
!8847 = !DILocation(line: 152, column: 33, scope: !6835, inlinedAt: !8688)
!8848 = !DILocation(line: 152, column: 2, scope: !6835, inlinedAt: !8688)
!8849 = !DILocation(line: 153, column: 2, scope: !6835, inlinedAt: !8688)
!8850 = !DILocation(line: 154, column: 1, scope: !6835, inlinedAt: !8688)
!8851 = !DILocation(line: 199, column: 6, scope: !6843, inlinedAt: !8689)
!8852 = !DILocation(line: 200, column: 21, scope: !6841, inlinedAt: !8689)
!8853 = !DILocation(line: 200, column: 25, scope: !6841, inlinedAt: !8689)
!8854 = !DILocation(line: 200, column: 31, scope: !6841, inlinedAt: !8689)
!8855 = !DILocation(line: 200, column: 7, scope: !6841, inlinedAt: !8689)
!8856 = !DILocation(line: 200, column: 5, scope: !6841, inlinedAt: !8689)
!8857 = !DILocation(line: 200, column: 3, scope: !6841, inlinedAt: !8689)
!8858 = !DILocation(line: 201, column: 9, scope: !6843, inlinedAt: !8689)
!8859 = !DILocation(line: 1138, column: 6, scope: !8690)
!8860 = !DILocation(line: 1138, column: 6, scope: !8686)
!8861 = !DILocation(line: 1139, column: 3, scope: !8690)
!8862 = !DILocation(line: 1141, column: 2, scope: !8686)
!8863 = !DILocation(line: 1142, column: 1, scope: !8686)
!8864 = distinct !DISubprogram(name: "flash_part_info_gen3", scope: !3, file: !3, line: 632, type: !7905, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!8865 = !DILocalVariable(name: "stdev", arg: 1, scope: !8864, file: !3, line: 632, type: !227)
!8866 = !DILocation(line: 632, column: 55, scope: !8864)
!8867 = !DILocalVariable(name: "info", arg: 2, scope: !8864, file: !3, line: 633, type: !7907)
!8868 = !DILocation(line: 633, column: 43, scope: !8864)
!8869 = !DILocalVariable(name: "fi", scope: !8864, file: !3, line: 635, type: !8870)
!8870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4307, size: 64)
!8871 = !DILocation(line: 635, column: 39, scope: !8864)
!8872 = !DILocation(line: 636, column: 4, scope: !8864)
!8873 = !DILocation(line: 636, column: 11, scope: !8864)
!8874 = !DILocation(line: 636, column: 28, scope: !8864)
!8875 = !DILocalVariable(name: "si", scope: !8864, file: !3, line: 637, type: !8876)
!8876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 64)
!8877 = !DILocation(line: 637, column: 37, scope: !8864)
!8878 = !DILocation(line: 637, column: 43, scope: !8864)
!8879 = !DILocation(line: 637, column: 50, scope: !8864)
!8880 = !DILocation(line: 637, column: 65, scope: !8864)
!8881 = !DILocalVariable(name: "active_addr", scope: !8864, file: !3, line: 638, type: !296)
!8882 = !DILocation(line: 638, column: 6, scope: !8864)
!8883 = !DILocation(line: 640, column: 10, scope: !8864)
!8884 = !DILocation(line: 640, column: 16, scope: !8864)
!8885 = !DILocation(line: 640, column: 2, scope: !8864)
!8886 = !DILocation(line: 642, column: 27, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 640, column: 33)
!8888 = !DILocation(line: 642, column: 31, scope: !8887)
!8889 = !DILocation(line: 642, column: 26, scope: !8887)
!8890 = !DILocation(line: 642, column: 17, scope: !8887)
!8891 = !DILocation(line: 642, column: 15, scope: !8887)
!8892 = !DILocation(line: 643, column: 20, scope: !8887)
!8893 = !DILocation(line: 643, column: 27, scope: !8887)
!8894 = !DILocation(line: 643, column: 31, scope: !8887)
!8895 = !DILocation(line: 643, column: 3, scope: !8887)
!8896 = !DILocation(line: 644, column: 17, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 644, column: 7)
!8898 = !DILocation(line: 644, column: 21, scope: !8897)
!8899 = !DILocation(line: 644, column: 16, scope: !8897)
!8900 = !DILocation(line: 644, column: 7, scope: !8897)
!8901 = !DILocation(line: 644, column: 34, scope: !8897)
!8902 = !DILocation(line: 644, column: 7, scope: !8887)
!8903 = !DILocation(line: 645, column: 4, scope: !8897)
!8904 = !DILocation(line: 645, column: 10, scope: !8897)
!8905 = !DILocation(line: 645, column: 17, scope: !8897)
!8906 = !DILocation(line: 646, column: 3, scope: !8887)
!8907 = !DILocation(line: 648, column: 27, scope: !8887)
!8908 = !DILocation(line: 648, column: 31, scope: !8887)
!8909 = !DILocation(line: 648, column: 26, scope: !8887)
!8910 = !DILocation(line: 648, column: 17, scope: !8887)
!8911 = !DILocation(line: 648, column: 15, scope: !8887)
!8912 = !DILocation(line: 649, column: 20, scope: !8887)
!8913 = !DILocation(line: 649, column: 27, scope: !8887)
!8914 = !DILocation(line: 649, column: 31, scope: !8887)
!8915 = !DILocation(line: 649, column: 3, scope: !8887)
!8916 = !DILocation(line: 650, column: 17, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 650, column: 7)
!8918 = !DILocation(line: 650, column: 21, scope: !8917)
!8919 = !DILocation(line: 650, column: 16, scope: !8917)
!8920 = !DILocation(line: 650, column: 7, scope: !8917)
!8921 = !DILocation(line: 650, column: 34, scope: !8917)
!8922 = !DILocation(line: 650, column: 7, scope: !8887)
!8923 = !DILocation(line: 651, column: 4, scope: !8917)
!8924 = !DILocation(line: 651, column: 10, scope: !8917)
!8925 = !DILocation(line: 651, column: 17, scope: !8917)
!8926 = !DILocation(line: 652, column: 3, scope: !8887)
!8927 = !DILocation(line: 654, column: 27, scope: !8887)
!8928 = !DILocation(line: 654, column: 31, scope: !8887)
!8929 = !DILocation(line: 654, column: 26, scope: !8887)
!8930 = !DILocation(line: 654, column: 17, scope: !8887)
!8931 = !DILocation(line: 654, column: 15, scope: !8887)
!8932 = !DILocation(line: 655, column: 20, scope: !8887)
!8933 = !DILocation(line: 655, column: 27, scope: !8887)
!8934 = !DILocation(line: 655, column: 31, scope: !8887)
!8935 = !DILocation(line: 655, column: 3, scope: !8887)
!8936 = !DILocation(line: 656, column: 17, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 656, column: 7)
!8938 = !DILocation(line: 656, column: 21, scope: !8937)
!8939 = !DILocation(line: 656, column: 16, scope: !8937)
!8940 = !DILocation(line: 656, column: 7, scope: !8937)
!8941 = !DILocation(line: 656, column: 34, scope: !8937)
!8942 = !DILocation(line: 656, column: 7, scope: !8887)
!8943 = !DILocation(line: 657, column: 4, scope: !8937)
!8944 = !DILocation(line: 657, column: 10, scope: !8937)
!8945 = !DILocation(line: 657, column: 17, scope: !8937)
!8946 = !DILocation(line: 658, column: 3, scope: !8887)
!8947 = !DILocation(line: 660, column: 27, scope: !8887)
!8948 = !DILocation(line: 660, column: 31, scope: !8887)
!8949 = !DILocation(line: 660, column: 26, scope: !8887)
!8950 = !DILocation(line: 660, column: 17, scope: !8887)
!8951 = !DILocation(line: 660, column: 15, scope: !8887)
!8952 = !DILocation(line: 661, column: 20, scope: !8887)
!8953 = !DILocation(line: 661, column: 27, scope: !8887)
!8954 = !DILocation(line: 661, column: 31, scope: !8887)
!8955 = !DILocation(line: 661, column: 3, scope: !8887)
!8956 = !DILocation(line: 662, column: 17, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 662, column: 7)
!8958 = !DILocation(line: 662, column: 21, scope: !8957)
!8959 = !DILocation(line: 662, column: 16, scope: !8957)
!8960 = !DILocation(line: 662, column: 7, scope: !8957)
!8961 = !DILocation(line: 662, column: 34, scope: !8957)
!8962 = !DILocation(line: 662, column: 7, scope: !8887)
!8963 = !DILocation(line: 663, column: 4, scope: !8957)
!8964 = !DILocation(line: 663, column: 10, scope: !8957)
!8965 = !DILocation(line: 663, column: 17, scope: !8957)
!8966 = !DILocation(line: 664, column: 3, scope: !8887)
!8967 = !DILocation(line: 666, column: 20, scope: !8887)
!8968 = !DILocation(line: 666, column: 27, scope: !8887)
!8969 = !DILocation(line: 666, column: 31, scope: !8887)
!8970 = !DILocation(line: 666, column: 3, scope: !8887)
!8971 = !DILocation(line: 667, column: 3, scope: !8887)
!8972 = !DILocation(line: 669, column: 20, scope: !8887)
!8973 = !DILocation(line: 669, column: 27, scope: !8887)
!8974 = !DILocation(line: 669, column: 31, scope: !8887)
!8975 = !DILocation(line: 669, column: 3, scope: !8887)
!8976 = !DILocation(line: 670, column: 3, scope: !8887)
!8977 = !DILocation(line: 672, column: 20, scope: !8887)
!8978 = !DILocation(line: 672, column: 27, scope: !8887)
!8979 = !DILocation(line: 672, column: 31, scope: !8887)
!8980 = !DILocation(line: 672, column: 3, scope: !8887)
!8981 = !DILocation(line: 673, column: 3, scope: !8887)
!8982 = !DILocation(line: 675, column: 20, scope: !8887)
!8983 = !DILocation(line: 675, column: 27, scope: !8887)
!8984 = !DILocation(line: 675, column: 31, scope: !8887)
!8985 = !DILocation(line: 675, column: 3, scope: !8887)
!8986 = !DILocation(line: 676, column: 3, scope: !8887)
!8987 = !DILocation(line: 678, column: 20, scope: !8887)
!8988 = !DILocation(line: 678, column: 27, scope: !8887)
!8989 = !DILocation(line: 678, column: 31, scope: !8887)
!8990 = !DILocation(line: 678, column: 3, scope: !8887)
!8991 = !DILocation(line: 679, column: 3, scope: !8887)
!8992 = !DILocation(line: 681, column: 20, scope: !8887)
!8993 = !DILocation(line: 681, column: 27, scope: !8887)
!8994 = !DILocation(line: 681, column: 31, scope: !8887)
!8995 = !DILocation(line: 681, column: 3, scope: !8887)
!8996 = !DILocation(line: 682, column: 3, scope: !8887)
!8997 = !DILocation(line: 684, column: 20, scope: !8887)
!8998 = !DILocation(line: 684, column: 27, scope: !8887)
!8999 = !DILocation(line: 684, column: 31, scope: !8887)
!9000 = !DILocation(line: 684, column: 3, scope: !8887)
!9001 = !DILocation(line: 685, column: 3, scope: !8887)
!9002 = !DILocation(line: 687, column: 20, scope: !8887)
!9003 = !DILocation(line: 687, column: 27, scope: !8887)
!9004 = !DILocation(line: 687, column: 31, scope: !8887)
!9005 = !DILocation(line: 687, column: 3, scope: !8887)
!9006 = !DILocation(line: 688, column: 3, scope: !8887)
!9007 = !DILocation(line: 690, column: 20, scope: !8887)
!9008 = !DILocation(line: 690, column: 27, scope: !8887)
!9009 = !DILocation(line: 690, column: 31, scope: !8887)
!9010 = !DILocation(line: 690, column: 3, scope: !8887)
!9011 = !DILocation(line: 691, column: 3, scope: !8887)
!9012 = !DILocation(line: 693, column: 3, scope: !8887)
!9013 = !DILocation(line: 696, column: 6, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 696, column: 6)
!9015 = !DILocation(line: 696, column: 12, scope: !9014)
!9016 = !DILocation(line: 696, column: 23, scope: !9014)
!9017 = !DILocation(line: 696, column: 20, scope: !9014)
!9018 = !DILocation(line: 696, column: 6, scope: !8864)
!9019 = !DILocation(line: 697, column: 3, scope: !9014)
!9020 = !DILocation(line: 697, column: 9, scope: !9014)
!9021 = !DILocation(line: 697, column: 16, scope: !9014)
!9022 = !DILocation(line: 699, column: 2, scope: !8864)
!9023 = !DILocation(line: 700, column: 1, scope: !8864)
!9024 = distinct !DISubprogram(name: "flash_part_info_gen4", scope: !3, file: !3, line: 702, type: !7905, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9025 = !DILocalVariable(name: "stdev", arg: 1, scope: !9024, file: !3, line: 702, type: !227)
!9026 = !DILocation(line: 702, column: 55, scope: !9024)
!9027 = !DILocalVariable(name: "info", arg: 2, scope: !9024, file: !3, line: 703, type: !7907)
!9028 = !DILocation(line: 703, column: 43, scope: !9024)
!9029 = !DILocalVariable(name: "fi", scope: !9024, file: !3, line: 705, type: !9030)
!9030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4332, size: 64)
!9031 = !DILocation(line: 705, column: 39, scope: !9024)
!9032 = !DILocation(line: 705, column: 45, scope: !9024)
!9033 = !DILocation(line: 705, column: 52, scope: !9024)
!9034 = !DILocation(line: 705, column: 69, scope: !9024)
!9035 = !DILocalVariable(name: "si", scope: !9024, file: !3, line: 706, type: !9036)
!9036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4245, size: 64)
!9037 = !DILocation(line: 706, column: 37, scope: !9024)
!9038 = !DILocation(line: 706, column: 43, scope: !9024)
!9039 = !DILocation(line: 706, column: 50, scope: !9024)
!9040 = !DILocation(line: 706, column: 65, scope: !9024)
!9041 = !DILocalVariable(name: "af", scope: !9024, file: !3, line: 707, type: !9042)
!9042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4337, size: 64)
!9043 = !DILocation(line: 707, column: 45, scope: !9024)
!9044 = !DILocation(line: 707, column: 51, scope: !9024)
!9045 = !DILocation(line: 707, column: 55, scope: !9024)
!9046 = !DILocation(line: 709, column: 10, scope: !9024)
!9047 = !DILocation(line: 709, column: 16, scope: !9024)
!9048 = !DILocation(line: 709, column: 2, scope: !9024)
!9049 = !DILocation(line: 711, column: 20, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 709, column: 33)
!9051 = !DILocation(line: 711, column: 27, scope: !9050)
!9052 = !DILocation(line: 711, column: 31, scope: !9050)
!9053 = !DILocation(line: 711, column: 3, scope: !9050)
!9054 = !DILocation(line: 712, column: 3, scope: !9050)
!9055 = !DILocation(line: 714, column: 20, scope: !9050)
!9056 = !DILocation(line: 714, column: 27, scope: !9050)
!9057 = !DILocation(line: 714, column: 31, scope: !9050)
!9058 = !DILocation(line: 714, column: 3, scope: !9050)
!9059 = !DILocation(line: 715, column: 3, scope: !9050)
!9060 = !DILocation(line: 717, column: 20, scope: !9050)
!9061 = !DILocation(line: 717, column: 27, scope: !9050)
!9062 = !DILocation(line: 717, column: 31, scope: !9050)
!9063 = !DILocation(line: 717, column: 3, scope: !9050)
!9064 = !DILocation(line: 718, column: 16, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 718, column: 7)
!9066 = !DILocation(line: 718, column: 20, scope: !9065)
!9067 = !DILocation(line: 718, column: 7, scope: !9065)
!9068 = !DILocation(line: 718, column: 25, scope: !9065)
!9069 = !DILocation(line: 718, column: 7, scope: !9050)
!9070 = !DILocation(line: 719, column: 4, scope: !9065)
!9071 = !DILocation(line: 719, column: 10, scope: !9065)
!9072 = !DILocation(line: 719, column: 17, scope: !9065)
!9073 = !DILocation(line: 720, column: 17, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 720, column: 7)
!9075 = !DILocation(line: 720, column: 21, scope: !9074)
!9076 = !DILocation(line: 720, column: 16, scope: !9074)
!9077 = !DILocation(line: 720, column: 7, scope: !9074)
!9078 = !DILocation(line: 720, column: 34, scope: !9074)
!9079 = !DILocation(line: 720, column: 7, scope: !9050)
!9080 = !DILocation(line: 721, column: 4, scope: !9074)
!9081 = !DILocation(line: 721, column: 10, scope: !9074)
!9082 = !DILocation(line: 721, column: 17, scope: !9074)
!9083 = !DILocation(line: 722, column: 3, scope: !9050)
!9084 = !DILocation(line: 724, column: 20, scope: !9050)
!9085 = !DILocation(line: 724, column: 27, scope: !9050)
!9086 = !DILocation(line: 724, column: 31, scope: !9050)
!9087 = !DILocation(line: 724, column: 3, scope: !9050)
!9088 = !DILocation(line: 725, column: 16, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 725, column: 7)
!9090 = !DILocation(line: 725, column: 20, scope: !9089)
!9091 = !DILocation(line: 725, column: 7, scope: !9089)
!9092 = !DILocation(line: 725, column: 25, scope: !9089)
!9093 = !DILocation(line: 725, column: 7, scope: !9050)
!9094 = !DILocation(line: 726, column: 4, scope: !9089)
!9095 = !DILocation(line: 726, column: 10, scope: !9089)
!9096 = !DILocation(line: 726, column: 17, scope: !9089)
!9097 = !DILocation(line: 727, column: 17, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 727, column: 7)
!9099 = !DILocation(line: 727, column: 21, scope: !9098)
!9100 = !DILocation(line: 727, column: 16, scope: !9098)
!9101 = !DILocation(line: 727, column: 7, scope: !9098)
!9102 = !DILocation(line: 727, column: 34, scope: !9098)
!9103 = !DILocation(line: 727, column: 7, scope: !9050)
!9104 = !DILocation(line: 728, column: 4, scope: !9098)
!9105 = !DILocation(line: 728, column: 10, scope: !9098)
!9106 = !DILocation(line: 728, column: 17, scope: !9098)
!9107 = !DILocation(line: 729, column: 3, scope: !9050)
!9108 = !DILocation(line: 731, column: 20, scope: !9050)
!9109 = !DILocation(line: 731, column: 27, scope: !9050)
!9110 = !DILocation(line: 731, column: 31, scope: !9050)
!9111 = !DILocation(line: 731, column: 3, scope: !9050)
!9112 = !DILocation(line: 732, column: 16, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 732, column: 7)
!9114 = !DILocation(line: 732, column: 20, scope: !9113)
!9115 = !DILocation(line: 732, column: 7, scope: !9113)
!9116 = !DILocation(line: 732, column: 25, scope: !9113)
!9117 = !DILocation(line: 732, column: 7, scope: !9050)
!9118 = !DILocation(line: 733, column: 4, scope: !9113)
!9119 = !DILocation(line: 733, column: 10, scope: !9113)
!9120 = !DILocation(line: 733, column: 17, scope: !9113)
!9121 = !DILocation(line: 734, column: 17, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 734, column: 7)
!9123 = !DILocation(line: 734, column: 21, scope: !9122)
!9124 = !DILocation(line: 734, column: 16, scope: !9122)
!9125 = !DILocation(line: 734, column: 7, scope: !9122)
!9126 = !DILocation(line: 734, column: 34, scope: !9122)
!9127 = !DILocation(line: 734, column: 7, scope: !9050)
!9128 = !DILocation(line: 735, column: 4, scope: !9122)
!9129 = !DILocation(line: 735, column: 10, scope: !9122)
!9130 = !DILocation(line: 735, column: 17, scope: !9122)
!9131 = !DILocation(line: 736, column: 3, scope: !9050)
!9132 = !DILocation(line: 738, column: 20, scope: !9050)
!9133 = !DILocation(line: 738, column: 27, scope: !9050)
!9134 = !DILocation(line: 738, column: 31, scope: !9050)
!9135 = !DILocation(line: 738, column: 3, scope: !9050)
!9136 = !DILocation(line: 739, column: 16, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 739, column: 7)
!9138 = !DILocation(line: 739, column: 20, scope: !9137)
!9139 = !DILocation(line: 739, column: 7, scope: !9137)
!9140 = !DILocation(line: 739, column: 25, scope: !9137)
!9141 = !DILocation(line: 739, column: 7, scope: !9050)
!9142 = !DILocation(line: 740, column: 4, scope: !9137)
!9143 = !DILocation(line: 740, column: 10, scope: !9137)
!9144 = !DILocation(line: 740, column: 17, scope: !9137)
!9145 = !DILocation(line: 741, column: 17, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 741, column: 7)
!9147 = !DILocation(line: 741, column: 21, scope: !9146)
!9148 = !DILocation(line: 741, column: 16, scope: !9146)
!9149 = !DILocation(line: 741, column: 7, scope: !9146)
!9150 = !DILocation(line: 741, column: 34, scope: !9146)
!9151 = !DILocation(line: 741, column: 7, scope: !9050)
!9152 = !DILocation(line: 742, column: 4, scope: !9146)
!9153 = !DILocation(line: 742, column: 10, scope: !9146)
!9154 = !DILocation(line: 742, column: 17, scope: !9146)
!9155 = !DILocation(line: 743, column: 3, scope: !9050)
!9156 = !DILocation(line: 745, column: 20, scope: !9050)
!9157 = !DILocation(line: 745, column: 27, scope: !9050)
!9158 = !DILocation(line: 745, column: 31, scope: !9050)
!9159 = !DILocation(line: 745, column: 3, scope: !9050)
!9160 = !DILocation(line: 746, column: 16, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 746, column: 7)
!9162 = !DILocation(line: 746, column: 20, scope: !9161)
!9163 = !DILocation(line: 746, column: 7, scope: !9161)
!9164 = !DILocation(line: 746, column: 25, scope: !9161)
!9165 = !DILocation(line: 746, column: 7, scope: !9050)
!9166 = !DILocation(line: 747, column: 4, scope: !9161)
!9167 = !DILocation(line: 747, column: 10, scope: !9161)
!9168 = !DILocation(line: 747, column: 17, scope: !9161)
!9169 = !DILocation(line: 748, column: 17, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 748, column: 7)
!9171 = !DILocation(line: 748, column: 21, scope: !9170)
!9172 = !DILocation(line: 748, column: 16, scope: !9170)
!9173 = !DILocation(line: 748, column: 7, scope: !9170)
!9174 = !DILocation(line: 748, column: 34, scope: !9170)
!9175 = !DILocation(line: 748, column: 7, scope: !9050)
!9176 = !DILocation(line: 749, column: 4, scope: !9170)
!9177 = !DILocation(line: 749, column: 10, scope: !9170)
!9178 = !DILocation(line: 749, column: 17, scope: !9170)
!9179 = !DILocation(line: 750, column: 3, scope: !9050)
!9180 = !DILocation(line: 752, column: 20, scope: !9050)
!9181 = !DILocation(line: 752, column: 27, scope: !9050)
!9182 = !DILocation(line: 752, column: 31, scope: !9050)
!9183 = !DILocation(line: 752, column: 3, scope: !9050)
!9184 = !DILocation(line: 753, column: 16, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 753, column: 7)
!9186 = !DILocation(line: 753, column: 20, scope: !9185)
!9187 = !DILocation(line: 753, column: 7, scope: !9185)
!9188 = !DILocation(line: 753, column: 25, scope: !9185)
!9189 = !DILocation(line: 753, column: 7, scope: !9050)
!9190 = !DILocation(line: 754, column: 4, scope: !9185)
!9191 = !DILocation(line: 754, column: 10, scope: !9185)
!9192 = !DILocation(line: 754, column: 17, scope: !9185)
!9193 = !DILocation(line: 755, column: 17, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 755, column: 7)
!9195 = !DILocation(line: 755, column: 21, scope: !9194)
!9196 = !DILocation(line: 755, column: 16, scope: !9194)
!9197 = !DILocation(line: 755, column: 7, scope: !9194)
!9198 = !DILocation(line: 755, column: 34, scope: !9194)
!9199 = !DILocation(line: 755, column: 7, scope: !9050)
!9200 = !DILocation(line: 756, column: 4, scope: !9194)
!9201 = !DILocation(line: 756, column: 10, scope: !9194)
!9202 = !DILocation(line: 756, column: 17, scope: !9194)
!9203 = !DILocation(line: 757, column: 3, scope: !9050)
!9204 = !DILocation(line: 759, column: 20, scope: !9050)
!9205 = !DILocation(line: 759, column: 27, scope: !9050)
!9206 = !DILocation(line: 759, column: 31, scope: !9050)
!9207 = !DILocation(line: 759, column: 3, scope: !9050)
!9208 = !DILocation(line: 760, column: 16, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 760, column: 7)
!9210 = !DILocation(line: 760, column: 20, scope: !9209)
!9211 = !DILocation(line: 760, column: 7, scope: !9209)
!9212 = !DILocation(line: 760, column: 25, scope: !9209)
!9213 = !DILocation(line: 760, column: 7, scope: !9050)
!9214 = !DILocation(line: 761, column: 4, scope: !9209)
!9215 = !DILocation(line: 761, column: 10, scope: !9209)
!9216 = !DILocation(line: 761, column: 17, scope: !9209)
!9217 = !DILocation(line: 762, column: 17, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 762, column: 7)
!9219 = !DILocation(line: 762, column: 21, scope: !9218)
!9220 = !DILocation(line: 762, column: 16, scope: !9218)
!9221 = !DILocation(line: 762, column: 7, scope: !9218)
!9222 = !DILocation(line: 762, column: 34, scope: !9218)
!9223 = !DILocation(line: 762, column: 7, scope: !9050)
!9224 = !DILocation(line: 763, column: 4, scope: !9218)
!9225 = !DILocation(line: 763, column: 10, scope: !9218)
!9226 = !DILocation(line: 763, column: 17, scope: !9218)
!9227 = !DILocation(line: 764, column: 3, scope: !9050)
!9228 = !DILocation(line: 766, column: 20, scope: !9050)
!9229 = !DILocation(line: 766, column: 27, scope: !9050)
!9230 = !DILocation(line: 766, column: 31, scope: !9050)
!9231 = !DILocation(line: 766, column: 3, scope: !9050)
!9232 = !DILocation(line: 767, column: 16, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 767, column: 7)
!9234 = !DILocation(line: 767, column: 20, scope: !9233)
!9235 = !DILocation(line: 767, column: 7, scope: !9233)
!9236 = !DILocation(line: 767, column: 25, scope: !9233)
!9237 = !DILocation(line: 767, column: 7, scope: !9050)
!9238 = !DILocation(line: 768, column: 4, scope: !9233)
!9239 = !DILocation(line: 768, column: 10, scope: !9233)
!9240 = !DILocation(line: 768, column: 17, scope: !9233)
!9241 = !DILocation(line: 769, column: 17, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 769, column: 7)
!9243 = !DILocation(line: 769, column: 21, scope: !9242)
!9244 = !DILocation(line: 769, column: 16, scope: !9242)
!9245 = !DILocation(line: 769, column: 7, scope: !9242)
!9246 = !DILocation(line: 769, column: 34, scope: !9242)
!9247 = !DILocation(line: 769, column: 7, scope: !9050)
!9248 = !DILocation(line: 770, column: 4, scope: !9242)
!9249 = !DILocation(line: 770, column: 10, scope: !9242)
!9250 = !DILocation(line: 770, column: 17, scope: !9242)
!9251 = !DILocation(line: 771, column: 3, scope: !9050)
!9252 = !DILocation(line: 773, column: 20, scope: !9050)
!9253 = !DILocation(line: 773, column: 27, scope: !9050)
!9254 = !DILocation(line: 773, column: 31, scope: !9050)
!9255 = !DILocation(line: 773, column: 3, scope: !9050)
!9256 = !DILocation(line: 774, column: 3, scope: !9050)
!9257 = !DILocation(line: 776, column: 20, scope: !9050)
!9258 = !DILocation(line: 776, column: 27, scope: !9050)
!9259 = !DILocation(line: 776, column: 31, scope: !9050)
!9260 = !DILocation(line: 776, column: 3, scope: !9050)
!9261 = !DILocation(line: 777, column: 3, scope: !9050)
!9262 = !DILocation(line: 779, column: 20, scope: !9050)
!9263 = !DILocation(line: 779, column: 27, scope: !9050)
!9264 = !DILocation(line: 779, column: 31, scope: !9050)
!9265 = !DILocation(line: 779, column: 3, scope: !9050)
!9266 = !DILocation(line: 780, column: 3, scope: !9050)
!9267 = !DILocation(line: 782, column: 20, scope: !9050)
!9268 = !DILocation(line: 782, column: 27, scope: !9050)
!9269 = !DILocation(line: 782, column: 31, scope: !9050)
!9270 = !DILocation(line: 782, column: 3, scope: !9050)
!9271 = !DILocation(line: 783, column: 3, scope: !9050)
!9272 = !DILocation(line: 785, column: 20, scope: !9050)
!9273 = !DILocation(line: 785, column: 27, scope: !9050)
!9274 = !DILocation(line: 785, column: 31, scope: !9050)
!9275 = !DILocation(line: 785, column: 3, scope: !9050)
!9276 = !DILocation(line: 786, column: 3, scope: !9050)
!9277 = !DILocation(line: 788, column: 20, scope: !9050)
!9278 = !DILocation(line: 788, column: 27, scope: !9050)
!9279 = !DILocation(line: 788, column: 31, scope: !9050)
!9280 = !DILocation(line: 788, column: 3, scope: !9050)
!9281 = !DILocation(line: 789, column: 3, scope: !9050)
!9282 = !DILocation(line: 791, column: 20, scope: !9050)
!9283 = !DILocation(line: 791, column: 27, scope: !9050)
!9284 = !DILocation(line: 791, column: 31, scope: !9050)
!9285 = !DILocation(line: 791, column: 3, scope: !9050)
!9286 = !DILocation(line: 792, column: 3, scope: !9050)
!9287 = !DILocation(line: 794, column: 20, scope: !9050)
!9288 = !DILocation(line: 794, column: 27, scope: !9050)
!9289 = !DILocation(line: 794, column: 31, scope: !9050)
!9290 = !DILocation(line: 794, column: 3, scope: !9050)
!9291 = !DILocation(line: 795, column: 3, scope: !9050)
!9292 = !DILocation(line: 797, column: 20, scope: !9050)
!9293 = !DILocation(line: 797, column: 27, scope: !9050)
!9294 = !DILocation(line: 797, column: 31, scope: !9050)
!9295 = !DILocation(line: 797, column: 3, scope: !9050)
!9296 = !DILocation(line: 798, column: 3, scope: !9050)
!9297 = !DILocation(line: 800, column: 3, scope: !9050)
!9298 = !DILocation(line: 803, column: 2, scope: !9024)
!9299 = !DILocation(line: 804, column: 1, scope: !9024)
!9300 = distinct !DISubprogram(name: "set_fw_info_part", scope: !3, file: !3, line: 625, type: !9301, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9301 = !DISubroutineType(types: !9302)
!9302 = !{null, !7907, !9303}
!9303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!9304 = !DILocalVariable(name: "info", arg: 1, scope: !9300, file: !3, line: 625, type: !7907)
!9305 = !DILocation(line: 625, column: 70, scope: !9300)
!9306 = !DILocalVariable(name: "pi", arg: 2, scope: !9300, file: !3, line: 626, type: !9303)
!9307 = !DILocation(line: 626, column: 40, scope: !9300)
!9308 = !DILocation(line: 628, column: 28, scope: !9300)
!9309 = !DILocation(line: 628, column: 32, scope: !9300)
!9310 = !DILocation(line: 628, column: 27, scope: !9300)
!9311 = !DILocation(line: 628, column: 18, scope: !9300)
!9312 = !DILocation(line: 628, column: 2, scope: !9300)
!9313 = !DILocation(line: 628, column: 8, scope: !9300)
!9314 = !DILocation(line: 628, column: 16, scope: !9300)
!9315 = !DILocation(line: 629, column: 27, scope: !9300)
!9316 = !DILocation(line: 629, column: 31, scope: !9300)
!9317 = !DILocation(line: 629, column: 26, scope: !9300)
!9318 = !DILocation(line: 629, column: 17, scope: !9300)
!9319 = !DILocation(line: 629, column: 2, scope: !9300)
!9320 = !DILocation(line: 629, column: 8, scope: !9300)
!9321 = !DILocation(line: 629, column: 15, scope: !9300)
!9322 = !DILocation(line: 630, column: 1, scope: !9300)
!9323 = distinct !DISubprogram(name: "kzalloc", scope: !137, file: !137, line: 662, type: !9324, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9324 = !DISubroutineType(types: !9325)
!9325 = !{!217, !427, !218}
!9326 = !DILocalVariable(name: "s", arg: 1, scope: !9327, file: !137, line: 445, type: !1032)
!9327 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !137, file: !137, line: 445, type: !9328, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9328 = !DISubroutineType(types: !9329)
!9329 = !{!217, !1032, !218, !427}
!9330 = !DILocation(line: 445, column: 72, scope: !9327, inlinedAt: !9331)
!9331 = distinct !DILocation(line: 552, column: 10, scope: !9332, inlinedAt: !9335)
!9332 = distinct !DILexicalBlock(scope: !9333, file: !137, line: 540, column: 34)
!9333 = distinct !DILexicalBlock(scope: !9334, file: !137, line: 540, column: 6)
!9334 = distinct !DISubprogram(name: "kmalloc", scope: !137, file: !137, line: 538, type: !9324, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9335 = distinct !DILocation(line: 664, column: 9, scope: !9323)
!9336 = !DILocalVariable(name: "flags", arg: 2, scope: !9327, file: !137, line: 446, type: !218)
!9337 = !DILocation(line: 446, column: 9, scope: !9327, inlinedAt: !9331)
!9338 = !DILocalVariable(name: "size", arg: 3, scope: !9327, file: !137, line: 446, type: !427)
!9339 = !DILocation(line: 446, column: 23, scope: !9327, inlinedAt: !9331)
!9340 = !DILocalVariable(name: "ret", scope: !9327, file: !137, line: 448, type: !217)
!9341 = !DILocation(line: 448, column: 8, scope: !9327, inlinedAt: !9331)
!9342 = !DILocation(line: 318, column: 67, scope: !5582, inlinedAt: !9343)
!9343 = distinct !DILocation(line: 553, column: 20, scope: !9332, inlinedAt: !9335)
!9344 = !DILocation(line: 346, column: 58, scope: !5588, inlinedAt: !9345)
!9345 = distinct !DILocation(line: 547, column: 11, scope: !9332, inlinedAt: !9335)
!9346 = !DILocalVariable(name: "size", arg: 1, scope: !9347, file: !137, line: 472, type: !427)
!9347 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !137, file: !137, line: 472, type: !9348, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9348 = !DISubroutineType(types: !9349)
!9349 = !{!217, !427, !218, !7}
!9350 = !DILocation(line: 472, column: 28, scope: !9347, inlinedAt: !9351)
!9351 = distinct !DILocation(line: 481, column: 9, scope: !9352, inlinedAt: !9353)
!9352 = distinct !DISubprogram(name: "kmalloc_large", scope: !137, file: !137, line: 478, type: !9324, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9353 = distinct !DILocation(line: 545, column: 11, scope: !9354, inlinedAt: !9335)
!9354 = distinct !DILexicalBlock(scope: !9332, file: !137, line: 544, column: 7)
!9355 = !DILocalVariable(name: "flags", arg: 2, scope: !9347, file: !137, line: 472, type: !218)
!9356 = !DILocation(line: 472, column: 40, scope: !9347, inlinedAt: !9351)
!9357 = !DILocalVariable(name: "order", arg: 3, scope: !9347, file: !137, line: 472, type: !7)
!9358 = !DILocation(line: 472, column: 60, scope: !9347, inlinedAt: !9351)
!9359 = !DILocalVariable(name: "size", arg: 1, scope: !9352, file: !137, line: 478, type: !427)
!9360 = !DILocation(line: 478, column: 51, scope: !9352, inlinedAt: !9353)
!9361 = !DILocalVariable(name: "flags", arg: 2, scope: !9352, file: !137, line: 478, type: !218)
!9362 = !DILocation(line: 478, column: 63, scope: !9352, inlinedAt: !9353)
!9363 = !DILocalVariable(name: "order", scope: !9352, file: !137, line: 480, type: !7)
!9364 = !DILocation(line: 480, column: 15, scope: !9352, inlinedAt: !9353)
!9365 = !DILocalVariable(name: "size", arg: 1, scope: !9334, file: !137, line: 538, type: !427)
!9366 = !DILocation(line: 538, column: 45, scope: !9334, inlinedAt: !9335)
!9367 = !DILocalVariable(name: "flags", arg: 2, scope: !9334, file: !137, line: 538, type: !218)
!9368 = !DILocation(line: 538, column: 57, scope: !9334, inlinedAt: !9335)
!9369 = !DILocalVariable(name: "index", scope: !9332, file: !137, line: 542, type: !7)
!9370 = !DILocation(line: 542, column: 16, scope: !9332, inlinedAt: !9335)
!9371 = !DILocalVariable(name: "size", arg: 1, scope: !9323, file: !137, line: 662, type: !427)
!9372 = !DILocation(line: 662, column: 36, scope: !9323)
!9373 = !DILocalVariable(name: "flags", arg: 2, scope: !9323, file: !137, line: 662, type: !218)
!9374 = !DILocation(line: 662, column: 48, scope: !9323)
!9375 = !DILocation(line: 664, column: 17, scope: !9323)
!9376 = !DILocation(line: 664, column: 23, scope: !9323)
!9377 = !DILocation(line: 664, column: 29, scope: !9323)
!9378 = !DILocation(line: 540, column: 27, scope: !9333, inlinedAt: !9335)
!9379 = !DILocation(line: 540, column: 6, scope: !9333, inlinedAt: !9335)
!9380 = !DILocation(line: 540, column: 6, scope: !9334, inlinedAt: !9335)
!9381 = !DILocation(line: 544, column: 7, scope: !9354, inlinedAt: !9335)
!9382 = !DILocation(line: 544, column: 12, scope: !9354, inlinedAt: !9335)
!9383 = !DILocation(line: 544, column: 7, scope: !9332, inlinedAt: !9335)
!9384 = !DILocation(line: 545, column: 25, scope: !9354, inlinedAt: !9335)
!9385 = !DILocation(line: 545, column: 31, scope: !9354, inlinedAt: !9335)
!9386 = !DILocation(line: 480, column: 33, scope: !9352, inlinedAt: !9353)
!9387 = !DILocation(line: 480, column: 23, scope: !9352, inlinedAt: !9353)
!9388 = !DILocation(line: 481, column: 29, scope: !9352, inlinedAt: !9353)
!9389 = !DILocation(line: 481, column: 35, scope: !9352, inlinedAt: !9353)
!9390 = !DILocation(line: 481, column: 42, scope: !9352, inlinedAt: !9353)
!9391 = !DILocation(line: 474, column: 23, scope: !9347, inlinedAt: !9351)
!9392 = !DILocation(line: 474, column: 29, scope: !9347, inlinedAt: !9351)
!9393 = !DILocation(line: 474, column: 36, scope: !9347, inlinedAt: !9351)
!9394 = !DILocation(line: 474, column: 9, scope: !9347, inlinedAt: !9351)
!9395 = !DILocation(line: 545, column: 4, scope: !9354, inlinedAt: !9335)
!9396 = !DILocation(line: 547, column: 25, scope: !9332, inlinedAt: !9335)
!9397 = !DILocation(line: 348, column: 7, scope: !5619, inlinedAt: !9345)
!9398 = !DILocation(line: 348, column: 6, scope: !5588, inlinedAt: !9345)
!9399 = !DILocation(line: 349, column: 3, scope: !5619, inlinedAt: !9345)
!9400 = !DILocation(line: 351, column: 6, scope: !5623, inlinedAt: !9345)
!9401 = !DILocation(line: 351, column: 11, scope: !5623, inlinedAt: !9345)
!9402 = !DILocation(line: 351, column: 6, scope: !5588, inlinedAt: !9345)
!9403 = !DILocation(line: 352, column: 3, scope: !5623, inlinedAt: !9345)
!9404 = !DILocation(line: 354, column: 32, scope: !5628, inlinedAt: !9345)
!9405 = !DILocation(line: 354, column: 37, scope: !5628, inlinedAt: !9345)
!9406 = !DILocation(line: 354, column: 42, scope: !5628, inlinedAt: !9345)
!9407 = !DILocation(line: 354, column: 45, scope: !5628, inlinedAt: !9345)
!9408 = !DILocation(line: 354, column: 50, scope: !5628, inlinedAt: !9345)
!9409 = !DILocation(line: 354, column: 6, scope: !5588, inlinedAt: !9345)
!9410 = !DILocation(line: 355, column: 3, scope: !5628, inlinedAt: !9345)
!9411 = !DILocation(line: 356, column: 32, scope: !5636, inlinedAt: !9345)
!9412 = !DILocation(line: 356, column: 37, scope: !5636, inlinedAt: !9345)
!9413 = !DILocation(line: 356, column: 43, scope: !5636, inlinedAt: !9345)
!9414 = !DILocation(line: 356, column: 46, scope: !5636, inlinedAt: !9345)
!9415 = !DILocation(line: 356, column: 51, scope: !5636, inlinedAt: !9345)
!9416 = !DILocation(line: 356, column: 6, scope: !5588, inlinedAt: !9345)
!9417 = !DILocation(line: 357, column: 3, scope: !5636, inlinedAt: !9345)
!9418 = !DILocation(line: 358, column: 6, scope: !5644, inlinedAt: !9345)
!9419 = !DILocation(line: 358, column: 11, scope: !5644, inlinedAt: !9345)
!9420 = !DILocation(line: 358, column: 6, scope: !5588, inlinedAt: !9345)
!9421 = !DILocation(line: 358, column: 26, scope: !5644, inlinedAt: !9345)
!9422 = !DILocation(line: 359, column: 6, scope: !5649, inlinedAt: !9345)
!9423 = !DILocation(line: 359, column: 11, scope: !5649, inlinedAt: !9345)
!9424 = !DILocation(line: 359, column: 6, scope: !5588, inlinedAt: !9345)
!9425 = !DILocation(line: 359, column: 26, scope: !5649, inlinedAt: !9345)
!9426 = !DILocation(line: 360, column: 6, scope: !5654, inlinedAt: !9345)
!9427 = !DILocation(line: 360, column: 11, scope: !5654, inlinedAt: !9345)
!9428 = !DILocation(line: 360, column: 6, scope: !5588, inlinedAt: !9345)
!9429 = !DILocation(line: 360, column: 26, scope: !5654, inlinedAt: !9345)
!9430 = !DILocation(line: 361, column: 6, scope: !5659, inlinedAt: !9345)
!9431 = !DILocation(line: 361, column: 11, scope: !5659, inlinedAt: !9345)
!9432 = !DILocation(line: 361, column: 6, scope: !5588, inlinedAt: !9345)
!9433 = !DILocation(line: 361, column: 26, scope: !5659, inlinedAt: !9345)
!9434 = !DILocation(line: 362, column: 6, scope: !5664, inlinedAt: !9345)
!9435 = !DILocation(line: 362, column: 11, scope: !5664, inlinedAt: !9345)
!9436 = !DILocation(line: 362, column: 6, scope: !5588, inlinedAt: !9345)
!9437 = !DILocation(line: 362, column: 26, scope: !5664, inlinedAt: !9345)
!9438 = !DILocation(line: 363, column: 6, scope: !5669, inlinedAt: !9345)
!9439 = !DILocation(line: 363, column: 11, scope: !5669, inlinedAt: !9345)
!9440 = !DILocation(line: 363, column: 6, scope: !5588, inlinedAt: !9345)
!9441 = !DILocation(line: 363, column: 26, scope: !5669, inlinedAt: !9345)
!9442 = !DILocation(line: 364, column: 6, scope: !5674, inlinedAt: !9345)
!9443 = !DILocation(line: 364, column: 11, scope: !5674, inlinedAt: !9345)
!9444 = !DILocation(line: 364, column: 6, scope: !5588, inlinedAt: !9345)
!9445 = !DILocation(line: 364, column: 26, scope: !5674, inlinedAt: !9345)
!9446 = !DILocation(line: 365, column: 6, scope: !5679, inlinedAt: !9345)
!9447 = !DILocation(line: 365, column: 11, scope: !5679, inlinedAt: !9345)
!9448 = !DILocation(line: 365, column: 6, scope: !5588, inlinedAt: !9345)
!9449 = !DILocation(line: 365, column: 26, scope: !5679, inlinedAt: !9345)
!9450 = !DILocation(line: 366, column: 6, scope: !5684, inlinedAt: !9345)
!9451 = !DILocation(line: 366, column: 11, scope: !5684, inlinedAt: !9345)
!9452 = !DILocation(line: 366, column: 6, scope: !5588, inlinedAt: !9345)
!9453 = !DILocation(line: 366, column: 26, scope: !5684, inlinedAt: !9345)
!9454 = !DILocation(line: 367, column: 6, scope: !5689, inlinedAt: !9345)
!9455 = !DILocation(line: 367, column: 11, scope: !5689, inlinedAt: !9345)
!9456 = !DILocation(line: 367, column: 6, scope: !5588, inlinedAt: !9345)
!9457 = !DILocation(line: 367, column: 26, scope: !5689, inlinedAt: !9345)
!9458 = !DILocation(line: 368, column: 6, scope: !5694, inlinedAt: !9345)
!9459 = !DILocation(line: 368, column: 11, scope: !5694, inlinedAt: !9345)
!9460 = !DILocation(line: 368, column: 6, scope: !5588, inlinedAt: !9345)
!9461 = !DILocation(line: 368, column: 26, scope: !5694, inlinedAt: !9345)
!9462 = !DILocation(line: 369, column: 6, scope: !5699, inlinedAt: !9345)
!9463 = !DILocation(line: 369, column: 11, scope: !5699, inlinedAt: !9345)
!9464 = !DILocation(line: 369, column: 6, scope: !5588, inlinedAt: !9345)
!9465 = !DILocation(line: 369, column: 26, scope: !5699, inlinedAt: !9345)
!9466 = !DILocation(line: 370, column: 6, scope: !5704, inlinedAt: !9345)
!9467 = !DILocation(line: 370, column: 11, scope: !5704, inlinedAt: !9345)
!9468 = !DILocation(line: 370, column: 6, scope: !5588, inlinedAt: !9345)
!9469 = !DILocation(line: 370, column: 26, scope: !5704, inlinedAt: !9345)
!9470 = !DILocation(line: 371, column: 6, scope: !5709, inlinedAt: !9345)
!9471 = !DILocation(line: 371, column: 11, scope: !5709, inlinedAt: !9345)
!9472 = !DILocation(line: 371, column: 6, scope: !5588, inlinedAt: !9345)
!9473 = !DILocation(line: 371, column: 26, scope: !5709, inlinedAt: !9345)
!9474 = !DILocation(line: 372, column: 6, scope: !5714, inlinedAt: !9345)
!9475 = !DILocation(line: 372, column: 11, scope: !5714, inlinedAt: !9345)
!9476 = !DILocation(line: 372, column: 6, scope: !5588, inlinedAt: !9345)
!9477 = !DILocation(line: 372, column: 26, scope: !5714, inlinedAt: !9345)
!9478 = !DILocation(line: 373, column: 6, scope: !5719, inlinedAt: !9345)
!9479 = !DILocation(line: 373, column: 11, scope: !5719, inlinedAt: !9345)
!9480 = !DILocation(line: 373, column: 6, scope: !5588, inlinedAt: !9345)
!9481 = !DILocation(line: 373, column: 26, scope: !5719, inlinedAt: !9345)
!9482 = !DILocation(line: 374, column: 6, scope: !5724, inlinedAt: !9345)
!9483 = !DILocation(line: 374, column: 11, scope: !5724, inlinedAt: !9345)
!9484 = !DILocation(line: 374, column: 6, scope: !5588, inlinedAt: !9345)
!9485 = !DILocation(line: 374, column: 26, scope: !5724, inlinedAt: !9345)
!9486 = !DILocation(line: 375, column: 6, scope: !5729, inlinedAt: !9345)
!9487 = !DILocation(line: 375, column: 11, scope: !5729, inlinedAt: !9345)
!9488 = !DILocation(line: 375, column: 6, scope: !5588, inlinedAt: !9345)
!9489 = !DILocation(line: 375, column: 27, scope: !5729, inlinedAt: !9345)
!9490 = !DILocation(line: 376, column: 6, scope: !5734, inlinedAt: !9345)
!9491 = !DILocation(line: 376, column: 11, scope: !5734, inlinedAt: !9345)
!9492 = !DILocation(line: 376, column: 6, scope: !5588, inlinedAt: !9345)
!9493 = !DILocation(line: 376, column: 32, scope: !5734, inlinedAt: !9345)
!9494 = !DILocation(line: 377, column: 6, scope: !5739, inlinedAt: !9345)
!9495 = !DILocation(line: 377, column: 11, scope: !5739, inlinedAt: !9345)
!9496 = !DILocation(line: 377, column: 6, scope: !5588, inlinedAt: !9345)
!9497 = !DILocation(line: 377, column: 32, scope: !5739, inlinedAt: !9345)
!9498 = !DILocation(line: 378, column: 6, scope: !5744, inlinedAt: !9345)
!9499 = !DILocation(line: 378, column: 11, scope: !5744, inlinedAt: !9345)
!9500 = !DILocation(line: 378, column: 6, scope: !5588, inlinedAt: !9345)
!9501 = !DILocation(line: 378, column: 32, scope: !5744, inlinedAt: !9345)
!9502 = !DILocation(line: 379, column: 6, scope: !5749, inlinedAt: !9345)
!9503 = !DILocation(line: 379, column: 11, scope: !5749, inlinedAt: !9345)
!9504 = !DILocation(line: 379, column: 6, scope: !5588, inlinedAt: !9345)
!9505 = !DILocation(line: 379, column: 33, scope: !5749, inlinedAt: !9345)
!9506 = !DILocation(line: 380, column: 6, scope: !5754, inlinedAt: !9345)
!9507 = !DILocation(line: 380, column: 11, scope: !5754, inlinedAt: !9345)
!9508 = !DILocation(line: 380, column: 6, scope: !5588, inlinedAt: !9345)
!9509 = !DILocation(line: 380, column: 33, scope: !5754, inlinedAt: !9345)
!9510 = !DILocation(line: 381, column: 6, scope: !5759, inlinedAt: !9345)
!9511 = !DILocation(line: 381, column: 11, scope: !5759, inlinedAt: !9345)
!9512 = !DILocation(line: 381, column: 6, scope: !5588, inlinedAt: !9345)
!9513 = !DILocation(line: 381, column: 33, scope: !5759, inlinedAt: !9345)
!9514 = !DILocation(line: 382, column: 2, scope: !5764, inlinedAt: !9345)
!9515 = !DILocation(line: 382, column: 2, scope: !5768, inlinedAt: !9345)
!9516 = !DILocation(line: 382, column: 2, scope: !5769, inlinedAt: !9345)
!9517 = !DILocation(line: 386, column: 1, scope: !5588, inlinedAt: !9345)
!9518 = !DILocation(line: 547, column: 9, scope: !9332, inlinedAt: !9335)
!9519 = !DILocation(line: 549, column: 8, scope: !9520, inlinedAt: !9335)
!9520 = distinct !DILexicalBlock(scope: !9332, file: !137, line: 549, column: 7)
!9521 = !DILocation(line: 549, column: 7, scope: !9332, inlinedAt: !9335)
!9522 = !DILocation(line: 550, column: 4, scope: !9520, inlinedAt: !9335)
!9523 = !DILocation(line: 553, column: 33, scope: !9332, inlinedAt: !9335)
!9524 = !DILocation(line: 325, column: 6, scope: !5779, inlinedAt: !9343)
!9525 = !DILocation(line: 325, column: 6, scope: !5582, inlinedAt: !9343)
!9526 = !DILocation(line: 326, column: 3, scope: !5779, inlinedAt: !9343)
!9527 = !DILocation(line: 332, column: 9, scope: !5582, inlinedAt: !9343)
!9528 = !DILocation(line: 332, column: 15, scope: !5582, inlinedAt: !9343)
!9529 = !DILocation(line: 332, column: 2, scope: !5582, inlinedAt: !9343)
!9530 = !DILocation(line: 336, column: 1, scope: !5582, inlinedAt: !9343)
!9531 = !DILocation(line: 553, column: 5, scope: !9332, inlinedAt: !9335)
!9532 = !DILocation(line: 553, column: 41, scope: !9332, inlinedAt: !9335)
!9533 = !DILocation(line: 554, column: 5, scope: !9332, inlinedAt: !9335)
!9534 = !DILocation(line: 554, column: 12, scope: !9332, inlinedAt: !9335)
!9535 = !DILocation(line: 448, column: 31, scope: !9327, inlinedAt: !9331)
!9536 = !DILocation(line: 448, column: 34, scope: !9327, inlinedAt: !9331)
!9537 = !DILocation(line: 448, column: 14, scope: !9327, inlinedAt: !9331)
!9538 = !DILocation(line: 450, column: 22, scope: !9327, inlinedAt: !9331)
!9539 = !DILocation(line: 450, column: 25, scope: !9327, inlinedAt: !9331)
!9540 = !DILocation(line: 450, column: 30, scope: !9327, inlinedAt: !9331)
!9541 = !DILocation(line: 450, column: 36, scope: !9327, inlinedAt: !9331)
!9542 = !DILocation(line: 450, column: 8, scope: !9327, inlinedAt: !9331)
!9543 = !DILocation(line: 450, column: 6, scope: !9327, inlinedAt: !9331)
!9544 = !DILocation(line: 451, column: 9, scope: !9327, inlinedAt: !9331)
!9545 = !DILocation(line: 552, column: 3, scope: !9332, inlinedAt: !9335)
!9546 = !DILocation(line: 557, column: 19, scope: !9334, inlinedAt: !9335)
!9547 = !DILocation(line: 557, column: 25, scope: !9334, inlinedAt: !9335)
!9548 = !DILocation(line: 557, column: 9, scope: !9334, inlinedAt: !9335)
!9549 = !DILocation(line: 557, column: 2, scope: !9334, inlinedAt: !9335)
!9550 = !DILocation(line: 558, column: 1, scope: !9334, inlinedAt: !9335)
!9551 = !DILocation(line: 664, column: 2, scope: !9323)
!9552 = distinct !DISubprogram(name: "get_order", scope: !9553, file: !9553, line: 29, type: !9554, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9553 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!9554 = !DISubroutineType(types: !9555)
!9555 = !{!282, !216}
!9556 = !DILocalVariable(name: "x", arg: 1, scope: !9557, file: !9558, line: 366, type: !257)
!9557 = distinct !DISubprogram(name: "fls64", scope: !9558, file: !9558, line: 366, type: !9559, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9558 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!9559 = !DISubroutineType(types: !9560)
!9560 = !{!282, !257}
!9561 = !DILocation(line: 366, column: 40, scope: !9557, inlinedAt: !9562)
!9562 = distinct !DILocation(line: 46, column: 9, scope: !9552)
!9563 = !DILocalVariable(name: "bitpos", scope: !9557, file: !9558, line: 368, type: !282)
!9564 = !DILocation(line: 368, column: 6, scope: !9557, inlinedAt: !9562)
!9565 = !DILocalVariable(name: "size", arg: 1, scope: !9552, file: !9553, line: 29, type: !216)
!9566 = !DILocation(line: 29, column: 63, scope: !9552)
!9567 = !DILocation(line: 31, column: 27, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9552, file: !9553, line: 31, column: 6)
!9569 = !DILocation(line: 31, column: 6, scope: !9568)
!9570 = !DILocation(line: 31, column: 6, scope: !9552)
!9571 = !DILocation(line: 32, column: 8, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9573, file: !9553, line: 32, column: 7)
!9573 = distinct !DILexicalBlock(scope: !9568, file: !9553, line: 31, column: 34)
!9574 = !DILocation(line: 32, column: 7, scope: !9573)
!9575 = !DILocation(line: 33, column: 4, scope: !9572)
!9576 = !DILocation(line: 35, column: 7, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9573, file: !9553, line: 35, column: 7)
!9578 = !DILocation(line: 35, column: 12, scope: !9577)
!9579 = !DILocation(line: 35, column: 7, scope: !9573)
!9580 = !DILocation(line: 36, column: 4, scope: !9577)
!9581 = !DILocation(line: 38, column: 10, scope: !9573)
!9582 = !DILocation(line: 38, column: 28, scope: !9573)
!9583 = !DILocation(line: 38, column: 41, scope: !9573)
!9584 = !DILocation(line: 38, column: 3, scope: !9573)
!9585 = !DILocation(line: 41, column: 6, scope: !9552)
!9586 = !DILocation(line: 42, column: 7, scope: !9552)
!9587 = !DILocation(line: 46, column: 15, scope: !9552)
!9588 = !DILocation(line: 374, column: 2, scope: !9557, inlinedAt: !9562)
!9589 = !DILocation(line: 376, column: 14, scope: !9557, inlinedAt: !9562)
!9590 = !{i32 805311}
!9591 = !DILocation(line: 377, column: 9, scope: !9557, inlinedAt: !9562)
!9592 = !DILocation(line: 377, column: 16, scope: !9557, inlinedAt: !9562)
!9593 = !DILocation(line: 46, column: 2, scope: !9552)
!9594 = !DILocation(line: 48, column: 1, scope: !9552)
!9595 = distinct !DISubprogram(name: "__ilog2_u64", scope: !9596, file: !9596, line: 30, type: !9597, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9596 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!9597 = !DISubroutineType(types: !9598)
!9598 = !{!282, !255}
!9599 = !DILocation(line: 366, column: 40, scope: !9557, inlinedAt: !9600)
!9600 = distinct !DILocation(line: 32, column: 9, scope: !9595)
!9601 = !DILocation(line: 368, column: 6, scope: !9557, inlinedAt: !9600)
!9602 = !DILocalVariable(name: "n", arg: 1, scope: !9595, file: !9596, line: 30, type: !255)
!9603 = !DILocation(line: 30, column: 21, scope: !9595)
!9604 = !DILocation(line: 32, column: 15, scope: !9595)
!9605 = !DILocation(line: 374, column: 2, scope: !9557, inlinedAt: !9600)
!9606 = !DILocation(line: 376, column: 14, scope: !9557, inlinedAt: !9600)
!9607 = !DILocation(line: 377, column: 9, scope: !9557, inlinedAt: !9600)
!9608 = !DILocation(line: 377, column: 16, scope: !9557, inlinedAt: !9600)
!9609 = !DILocation(line: 32, column: 18, scope: !9595)
!9610 = !DILocation(line: 32, column: 2, scope: !9595)
!9611 = distinct !DISubprogram(name: "global_ev_reg", scope: !3, file: !3, line: 873, type: !4787, scopeLine: 875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9612 = !DILocalVariable(name: "stdev", arg: 1, scope: !9611, file: !3, line: 873, type: !227)
!9613 = !DILocation(line: 873, column: 57, scope: !9611)
!9614 = !DILocalVariable(name: "offset", arg: 2, scope: !9611, file: !3, line: 874, type: !427)
!9615 = !DILocation(line: 874, column: 14, scope: !9611)
!9616 = !DILocalVariable(name: "index", arg: 3, scope: !9611, file: !3, line: 874, type: !282)
!9617 = !DILocation(line: 874, column: 26, scope: !9611)
!9618 = !DILocation(line: 876, column: 25, scope: !9611)
!9619 = !DILocation(line: 876, column: 32, scope: !9611)
!9620 = !DILocation(line: 876, column: 9, scope: !9611)
!9621 = !DILocation(line: 876, column: 48, scope: !9611)
!9622 = !DILocation(line: 876, column: 46, scope: !9611)
!9623 = !DILocation(line: 876, column: 2, scope: !9611)
!9624 = distinct !DISubprogram(name: "part_ev_reg", scope: !3, file: !3, line: 879, type: !4787, scopeLine: 881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9625 = !DILocalVariable(name: "stdev", arg: 1, scope: !9624, file: !3, line: 879, type: !227)
!9626 = !DILocation(line: 879, column: 55, scope: !9624)
!9627 = !DILocalVariable(name: "offset", arg: 2, scope: !9624, file: !3, line: 880, type: !427)
!9628 = !DILocation(line: 880, column: 12, scope: !9624)
!9629 = !DILocalVariable(name: "index", arg: 3, scope: !9624, file: !3, line: 880, type: !282)
!9630 = !DILocation(line: 880, column: 24, scope: !9624)
!9631 = !DILocation(line: 882, column: 26, scope: !9624)
!9632 = !DILocation(line: 882, column: 33, scope: !9624)
!9633 = !DILocation(line: 882, column: 51, scope: !9624)
!9634 = !DILocation(line: 882, column: 9, scope: !9624)
!9635 = !DILocation(line: 882, column: 60, scope: !9624)
!9636 = !DILocation(line: 882, column: 58, scope: !9624)
!9637 = !DILocation(line: 882, column: 2, scope: !9624)
!9638 = distinct !DISubprogram(name: "pff_ev_reg", scope: !3, file: !3, line: 885, type: !4787, scopeLine: 887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9639 = !DILocalVariable(name: "stdev", arg: 1, scope: !9638, file: !3, line: 885, type: !227)
!9640 = !DILocation(line: 885, column: 54, scope: !9638)
!9641 = !DILocalVariable(name: "offset", arg: 2, scope: !9638, file: !3, line: 886, type: !427)
!9642 = !DILocation(line: 886, column: 18, scope: !9638)
!9643 = !DILocalVariable(name: "index", arg: 3, scope: !9638, file: !3, line: 886, type: !282)
!9644 = !DILocation(line: 886, column: 30, scope: !9638)
!9645 = !DILocation(line: 888, column: 26, scope: !9638)
!9646 = !DILocation(line: 888, column: 33, scope: !9638)
!9647 = !DILocation(line: 888, column: 46, scope: !9638)
!9648 = !DILocation(line: 888, column: 9, scope: !9638)
!9649 = !DILocation(line: 888, column: 55, scope: !9638)
!9650 = !DILocation(line: 888, column: 53, scope: !9638)
!9651 = !DILocation(line: 888, column: 2, scope: !9638)
!9652 = distinct !DISubprogram(name: "event_ctl", scope: !3, file: !3, line: 960, type: !8256, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9653 = !DILocalVariable(name: "stdev", arg: 1, scope: !9652, file: !3, line: 960, type: !227)
!9654 = !DILocation(line: 960, column: 44, scope: !9652)
!9655 = !DILocalVariable(name: "ctl", arg: 2, scope: !9652, file: !3, line: 961, type: !8258)
!9656 = !DILocation(line: 961, column: 42, scope: !9652)
!9657 = !DILocalVariable(name: "i", scope: !9652, file: !3, line: 963, type: !282)
!9658 = !DILocation(line: 963, column: 6, scope: !9652)
!9659 = !DILocalVariable(name: "reg", scope: !9652, file: !3, line: 964, type: !295)
!9660 = !DILocation(line: 964, column: 15, scope: !9652)
!9661 = !DILocalVariable(name: "hdr", scope: !9652, file: !3, line: 965, type: !296)
!9662 = !DILocation(line: 965, column: 6, scope: !9652)
!9663 = !DILocation(line: 967, column: 23, scope: !9652)
!9664 = !DILocation(line: 967, column: 30, scope: !9652)
!9665 = !DILocation(line: 967, column: 35, scope: !9652)
!9666 = !DILocation(line: 967, column: 45, scope: !9652)
!9667 = !DILocation(line: 967, column: 50, scope: !9652)
!9668 = !DILocation(line: 967, column: 8, scope: !9652)
!9669 = !DILocation(line: 967, column: 6, scope: !9652)
!9670 = !DILocation(line: 968, column: 13, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 968, column: 6)
!9672 = !DILocation(line: 968, column: 6, scope: !9671)
!9673 = !DILocation(line: 968, column: 6, scope: !9652)
!9674 = !DILocation(line: 969, column: 18, scope: !9671)
!9675 = !DILocation(line: 969, column: 10, scope: !9671)
!9676 = !DILocation(line: 969, column: 3, scope: !9671)
!9677 = !DILocation(line: 971, column: 17, scope: !9652)
!9678 = !DILocation(line: 971, column: 8, scope: !9652)
!9679 = !DILocation(line: 971, column: 6, scope: !9652)
!9680 = !DILocation(line: 972, column: 9, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 972, column: 2)
!9682 = !DILocation(line: 972, column: 7, scope: !9681)
!9683 = !DILocation(line: 972, column: 14, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 972, column: 2)
!9685 = !DILocation(line: 972, column: 16, scope: !9684)
!9686 = !DILocation(line: 972, column: 2, scope: !9681)
!9687 = !DILocation(line: 973, column: 28, scope: !9684)
!9688 = !DILocation(line: 973, column: 32, scope: !9684)
!9689 = !DILocation(line: 973, column: 34, scope: !9684)
!9690 = !DILocation(line: 973, column: 27, scope: !9684)
!9691 = !DILocation(line: 973, column: 18, scope: !9684)
!9692 = !DILocation(line: 973, column: 3, scope: !9684)
!9693 = !DILocation(line: 973, column: 8, scope: !9684)
!9694 = !DILocation(line: 973, column: 13, scope: !9684)
!9695 = !DILocation(line: 973, column: 16, scope: !9684)
!9696 = !DILocation(line: 972, column: 42, scope: !9684)
!9697 = !DILocation(line: 972, column: 2, scope: !9684)
!9698 = distinct !{!9698, !9686, !9699}
!9699 = !DILocation(line: 973, column: 38, scope: !9681)
!9700 = !DILocation(line: 975, column: 18, scope: !9652)
!9701 = !DILocation(line: 975, column: 22, scope: !9652)
!9702 = !DILocation(line: 975, column: 2, scope: !9652)
!9703 = !DILocation(line: 975, column: 7, scope: !9652)
!9704 = !DILocation(line: 975, column: 16, scope: !9652)
!9705 = !DILocation(line: 976, column: 16, scope: !9652)
!9706 = !DILocation(line: 976, column: 20, scope: !9652)
!9707 = !DILocation(line: 976, column: 26, scope: !9652)
!9708 = !DILocation(line: 976, column: 2, scope: !9652)
!9709 = !DILocation(line: 976, column: 7, scope: !9652)
!9710 = !DILocation(line: 976, column: 13, scope: !9652)
!9711 = !DILocation(line: 978, column: 8, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 978, column: 6)
!9713 = !DILocation(line: 978, column: 13, scope: !9712)
!9714 = !DILocation(line: 978, column: 19, scope: !9712)
!9715 = !DILocation(line: 978, column: 6, scope: !9652)
!9716 = !DILocation(line: 979, column: 7, scope: !9712)
!9717 = !DILocation(line: 979, column: 3, scope: !9712)
!9718 = !DILocation(line: 980, column: 6, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 980, column: 6)
!9720 = !DILocation(line: 980, column: 11, scope: !9719)
!9721 = !DILocation(line: 980, column: 17, scope: !9719)
!9722 = !DILocation(line: 980, column: 6, scope: !9652)
!9723 = !DILocation(line: 981, column: 7, scope: !9719)
!9724 = !DILocation(line: 981, column: 3, scope: !9719)
!9725 = !DILocation(line: 982, column: 6, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 982, column: 6)
!9727 = !DILocation(line: 982, column: 11, scope: !9726)
!9728 = !DILocation(line: 982, column: 17, scope: !9726)
!9729 = !DILocation(line: 982, column: 6, scope: !9652)
!9730 = !DILocation(line: 983, column: 7, scope: !9726)
!9731 = !DILocation(line: 983, column: 3, scope: !9726)
!9732 = !DILocation(line: 984, column: 6, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 984, column: 6)
!9734 = !DILocation(line: 984, column: 11, scope: !9733)
!9735 = !DILocation(line: 984, column: 17, scope: !9733)
!9736 = !DILocation(line: 984, column: 6, scope: !9652)
!9737 = !DILocation(line: 985, column: 7, scope: !9733)
!9738 = !DILocation(line: 985, column: 3, scope: !9733)
!9739 = !DILocation(line: 986, column: 6, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 986, column: 6)
!9741 = !DILocation(line: 986, column: 11, scope: !9740)
!9742 = !DILocation(line: 986, column: 17, scope: !9740)
!9743 = !DILocation(line: 986, column: 6, scope: !9652)
!9744 = !DILocation(line: 987, column: 7, scope: !9740)
!9745 = !DILocation(line: 987, column: 3, scope: !9740)
!9746 = !DILocation(line: 988, column: 6, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 988, column: 6)
!9748 = !DILocation(line: 988, column: 11, scope: !9747)
!9749 = !DILocation(line: 988, column: 17, scope: !9747)
!9750 = !DILocation(line: 988, column: 6, scope: !9652)
!9751 = !DILocation(line: 989, column: 7, scope: !9747)
!9752 = !DILocation(line: 989, column: 3, scope: !9747)
!9753 = !DILocation(line: 990, column: 6, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 990, column: 6)
!9755 = !DILocation(line: 990, column: 11, scope: !9754)
!9756 = !DILocation(line: 990, column: 17, scope: !9754)
!9757 = !DILocation(line: 990, column: 6, scope: !9652)
!9758 = !DILocation(line: 991, column: 7, scope: !9754)
!9759 = !DILocation(line: 991, column: 3, scope: !9754)
!9760 = !DILocation(line: 992, column: 6, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 992, column: 6)
!9762 = !DILocation(line: 992, column: 11, scope: !9761)
!9763 = !DILocation(line: 992, column: 17, scope: !9761)
!9764 = !DILocation(line: 992, column: 6, scope: !9652)
!9765 = !DILocation(line: 993, column: 7, scope: !9761)
!9766 = !DILocation(line: 993, column: 3, scope: !9761)
!9767 = !DILocation(line: 994, column: 6, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 994, column: 6)
!9769 = !DILocation(line: 994, column: 11, scope: !9768)
!9770 = !DILocation(line: 994, column: 17, scope: !9768)
!9771 = !DILocation(line: 994, column: 6, scope: !9652)
!9772 = !DILocation(line: 995, column: 7, scope: !9768)
!9773 = !DILocation(line: 995, column: 3, scope: !9768)
!9774 = !DILocation(line: 997, column: 6, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 997, column: 6)
!9776 = !DILocation(line: 997, column: 11, scope: !9775)
!9777 = !DILocation(line: 997, column: 6, scope: !9652)
!9778 = !DILocation(line: 998, column: 13, scope: !9775)
!9779 = !DILocation(line: 998, column: 18, scope: !9775)
!9780 = !DILocation(line: 998, column: 3, scope: !9775)
!9781 = !DILocation(line: 1000, column: 2, scope: !9652)
!9782 = !DILocation(line: 1000, column: 7, scope: !9652)
!9783 = !DILocation(line: 1000, column: 13, scope: !9652)
!9784 = !DILocation(line: 1001, column: 6, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 1001, column: 6)
!9786 = !DILocation(line: 1001, column: 10, scope: !9785)
!9787 = !DILocation(line: 1001, column: 6, scope: !9652)
!9788 = !DILocation(line: 1002, column: 3, scope: !9785)
!9789 = !DILocation(line: 1002, column: 8, scope: !9785)
!9790 = !DILocation(line: 1002, column: 14, scope: !9785)
!9791 = !DILocation(line: 1003, column: 6, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 1003, column: 6)
!9793 = !DILocation(line: 1003, column: 10, scope: !9792)
!9794 = !DILocation(line: 1003, column: 6, scope: !9652)
!9795 = !DILocation(line: 1004, column: 3, scope: !9792)
!9796 = !DILocation(line: 1004, column: 8, scope: !9792)
!9797 = !DILocation(line: 1004, column: 14, scope: !9792)
!9798 = !DILocation(line: 1005, column: 6, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 1005, column: 6)
!9800 = !DILocation(line: 1005, column: 10, scope: !9799)
!9801 = !DILocation(line: 1005, column: 6, scope: !9652)
!9802 = !DILocation(line: 1006, column: 3, scope: !9799)
!9803 = !DILocation(line: 1006, column: 8, scope: !9799)
!9804 = !DILocation(line: 1006, column: 14, scope: !9799)
!9805 = !DILocation(line: 1007, column: 6, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 1007, column: 6)
!9807 = !DILocation(line: 1007, column: 10, scope: !9806)
!9808 = !DILocation(line: 1007, column: 6, scope: !9652)
!9809 = !DILocation(line: 1008, column: 3, scope: !9806)
!9810 = !DILocation(line: 1008, column: 8, scope: !9806)
!9811 = !DILocation(line: 1008, column: 14, scope: !9806)
!9812 = !DILocation(line: 1010, column: 2, scope: !9652)
!9813 = !DILocation(line: 1011, column: 1, scope: !9652)
!9814 = distinct !DISubprogram(name: "event_hdr_addr", scope: !3, file: !3, line: 937, type: !9815, scopeLine: 939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9815 = !DISubroutineType(types: !9816)
!9816 = !{!295, !227, !282, !282}
!9817 = !DILocalVariable(name: "stdev", arg: 1, scope: !9814, file: !3, line: 937, type: !227)
!9818 = !DILocation(line: 937, column: 58, scope: !9814)
!9819 = !DILocalVariable(name: "event_id", arg: 2, scope: !9814, file: !3, line: 938, type: !282)
!9820 = !DILocation(line: 938, column: 12, scope: !9814)
!9821 = !DILocalVariable(name: "index", arg: 3, scope: !9814, file: !3, line: 938, type: !282)
!9822 = !DILocation(line: 938, column: 26, scope: !9814)
!9823 = !DILocalVariable(name: "off", scope: !9814, file: !3, line: 940, type: !427)
!9824 = !DILocation(line: 940, column: 9, scope: !9814)
!9825 = !DILocation(line: 942, column: 6, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9814, file: !3, line: 942, column: 6)
!9827 = !DILocation(line: 942, column: 15, scope: !9826)
!9828 = !DILocation(line: 942, column: 19, scope: !9826)
!9829 = !DILocation(line: 942, column: 22, scope: !9826)
!9830 = !DILocation(line: 942, column: 31, scope: !9826)
!9831 = !DILocation(line: 942, column: 6, scope: !9814)
!9832 = !DILocation(line: 943, column: 25, scope: !9826)
!9833 = !DILocation(line: 943, column: 10, scope: !9826)
!9834 = !DILocation(line: 943, column: 3, scope: !9826)
!9835 = !DILocation(line: 945, column: 19, scope: !9814)
!9836 = !DILocation(line: 945, column: 8, scope: !9814)
!9837 = !DILocation(line: 945, column: 29, scope: !9814)
!9838 = !DILocation(line: 945, column: 6, scope: !9814)
!9839 = !DILocation(line: 947, column: 17, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9814, file: !3, line: 947, column: 6)
!9841 = !DILocation(line: 947, column: 6, scope: !9840)
!9842 = !DILocation(line: 947, column: 27, scope: !9840)
!9843 = !DILocation(line: 947, column: 35, scope: !9840)
!9844 = !DILocation(line: 947, column: 6, scope: !9814)
!9845 = !DILocation(line: 948, column: 7, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 948, column: 7)
!9847 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 947, column: 51)
!9848 = !DILocation(line: 948, column: 13, scope: !9846)
!9849 = !DILocation(line: 948, column: 7, scope: !9847)
!9850 = !DILocation(line: 949, column: 12, scope: !9846)
!9851 = !DILocation(line: 949, column: 19, scope: !9846)
!9852 = !DILocation(line: 949, column: 10, scope: !9846)
!9853 = !DILocation(line: 949, column: 4, scope: !9846)
!9854 = !DILocation(line: 950, column: 12, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9846, file: !3, line: 950, column: 12)
!9856 = !DILocation(line: 950, column: 18, scope: !9855)
!9857 = !DILocation(line: 950, column: 22, scope: !9855)
!9858 = !DILocation(line: 950, column: 25, scope: !9855)
!9859 = !DILocation(line: 950, column: 34, scope: !9855)
!9860 = !DILocation(line: 950, column: 41, scope: !9855)
!9861 = !DILocation(line: 950, column: 31, scope: !9855)
!9862 = !DILocation(line: 950, column: 12, scope: !9846)
!9863 = !DILocation(line: 951, column: 26, scope: !9855)
!9864 = !DILocation(line: 951, column: 11, scope: !9855)
!9865 = !DILocation(line: 951, column: 4, scope: !9855)
!9866 = !DILocation(line: 952, column: 2, scope: !9847)
!9867 = !DILocation(line: 952, column: 24, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 952, column: 13)
!9869 = !DILocation(line: 952, column: 13, scope: !9868)
!9870 = !DILocation(line: 952, column: 34, scope: !9868)
!9871 = !DILocation(line: 952, column: 42, scope: !9868)
!9872 = !DILocation(line: 952, column: 13, scope: !9840)
!9873 = !DILocation(line: 953, column: 7, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9875, file: !3, line: 953, column: 7)
!9875 = distinct !DILexicalBlock(scope: !9868, file: !3, line: 952, column: 57)
!9876 = !DILocation(line: 953, column: 13, scope: !9874)
!9877 = !DILocation(line: 953, column: 17, scope: !9874)
!9878 = !DILocation(line: 953, column: 20, scope: !9874)
!9879 = !DILocation(line: 953, column: 29, scope: !9874)
!9880 = !DILocation(line: 953, column: 36, scope: !9874)
!9881 = !DILocation(line: 953, column: 26, scope: !9874)
!9882 = !DILocation(line: 953, column: 7, scope: !9875)
!9883 = !DILocation(line: 954, column: 26, scope: !9874)
!9884 = !DILocation(line: 954, column: 11, scope: !9874)
!9885 = !DILocation(line: 954, column: 4, scope: !9874)
!9886 = !DILocation(line: 955, column: 2, scope: !9875)
!9887 = !DILocation(line: 957, column: 20, scope: !9814)
!9888 = !DILocation(line: 957, column: 9, scope: !9814)
!9889 = !DILocation(line: 957, column: 30, scope: !9814)
!9890 = !DILocation(line: 957, column: 38, scope: !9814)
!9891 = !DILocation(line: 957, column: 45, scope: !9814)
!9892 = !DILocation(line: 957, column: 50, scope: !9814)
!9893 = !DILocation(line: 957, column: 2, scope: !9814)
!9894 = !DILocation(line: 958, column: 1, scope: !9814)
!9895 = distinct !DISubprogram(name: "array_index_mask_nospec", scope: !9896, file: !9896, line: 36, type: !9897, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9896 = !DIFile(filename: "./arch/x86/include/asm/barrier.h", directory: "/home/lizy2001/genbc/linux")
!9897 = !DISubroutineType(types: !9898)
!9898 = !{!216, !216, !216}
!9899 = !DILocalVariable(name: "index", arg: 1, scope: !9895, file: !9896, line: 36, type: !216)
!9900 = !DILocation(line: 36, column: 67, scope: !9895)
!9901 = !DILocalVariable(name: "size", arg: 2, scope: !9895, file: !9896, line: 37, type: !216)
!9902 = !DILocation(line: 37, column: 17, scope: !9895)
!9903 = !DILocalVariable(name: "mask", scope: !9895, file: !9896, line: 39, type: !216)
!9904 = !DILocation(line: 39, column: 16, scope: !9895)
!9905 = !DILocation(line: 43, column: 9, scope: !9895)
!9906 = !DILocation(line: 43, column: 20, scope: !9895)
!9907 = !DILocation(line: 41, column: 2, scope: !9895)
!9908 = !{i32 444958}
!9909 = !DILocation(line: 45, column: 9, scope: !9895)
!9910 = !DILocation(line: 45, column: 2, scope: !9895)
!9911 = !DILocation(line: 23, column: 61, scope: !7340, inlinedAt: !9912)
!9912 = distinct !DILocation(line: 28, column: 9, scope: !7347, inlinedAt: !9913)
!9913 = distinct !DILocation(line: 82, column: 22, scope: !4791)
!9914 = !DILocation(line: 69, column: 73, scope: !7351, inlinedAt: !9915)
!9915 = distinct !DILocation(line: 27, column: 2, scope: !7347, inlinedAt: !9913)
!9916 = !DILocation(line: 69, column: 83, scope: !7351, inlinedAt: !9915)
!9917 = !DILocation(line: 25, column: 29, scope: !7347, inlinedAt: !9913)
!9918 = !DILocalVariable(name: "stdev", arg: 1, scope: !4791, file: !3, line: 69, type: !227)
!9919 = !DILocation(line: 69, column: 67, scope: !4791)
!9920 = !DILocalVariable(name: "stuser", scope: !4791, file: !3, line: 71, type: !4516)
!9921 = !DILocation(line: 71, column: 25, scope: !4791)
!9922 = !DILocation(line: 73, column: 11, scope: !4791)
!9923 = !DILocation(line: 73, column: 9, scope: !4791)
!9924 = !DILocation(line: 74, column: 7, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 74, column: 6)
!9926 = !DILocation(line: 74, column: 6, scope: !4791)
!9927 = !DILocation(line: 75, column: 10, scope: !9925)
!9928 = !DILocation(line: 75, column: 3, scope: !9925)
!9929 = !DILocation(line: 77, column: 14, scope: !4791)
!9930 = !DILocation(line: 77, column: 21, scope: !4791)
!9931 = !DILocation(line: 77, column: 2, scope: !4791)
!9932 = !DILocation(line: 78, column: 18, scope: !4791)
!9933 = !DILocation(line: 78, column: 2, scope: !4791)
!9934 = !DILocation(line: 78, column: 10, scope: !4791)
!9935 = !DILocation(line: 78, column: 16, scope: !4791)
!9936 = !DILocation(line: 79, column: 13, scope: !4791)
!9937 = !DILocation(line: 79, column: 21, scope: !4791)
!9938 = !DILocation(line: 79, column: 2, scope: !4791)
!9939 = !DILocation(line: 80, column: 18, scope: !4791)
!9940 = !DILocation(line: 80, column: 26, scope: !4791)
!9941 = !DILocation(line: 80, column: 2, scope: !4791)
!9942 = !DILocation(line: 81, column: 2, scope: !4791)
!9943 = !DILocation(line: 81, column: 2, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 81, column: 2)
!9945 = !DILocation(line: 82, column: 35, scope: !4791)
!9946 = !DILocation(line: 82, column: 42, scope: !4791)
!9947 = !DILocation(line: 27, column: 25, scope: !7347, inlinedAt: !9913)
!9948 = !DILocation(line: 71, column: 19, scope: !7351, inlinedAt: !9915)
!9949 = !DILocation(line: 71, column: 22, scope: !7351, inlinedAt: !9915)
!9950 = !DILocation(line: 71, column: 2, scope: !7351, inlinedAt: !9915)
!9951 = !DILocation(line: 72, column: 2, scope: !7351, inlinedAt: !9915)
!9952 = !DILocation(line: 28, column: 26, scope: !7347, inlinedAt: !9913)
!9953 = !DILocation(line: 29, column: 9, scope: !7340, inlinedAt: !9912)
!9954 = !DILocation(line: 82, column: 2, scope: !4791)
!9955 = !DILocation(line: 82, column: 10, scope: !4791)
!9956 = !DILocation(line: 82, column: 20, scope: !4791)
!9957 = !DILocation(line: 86, column: 9, scope: !4791)
!9958 = !DILocation(line: 86, column: 2, scope: !4791)
!9959 = !DILocation(line: 87, column: 1, scope: !4791)
!9960 = distinct !DISubprogram(name: "kref_init", scope: !3477, file: !3477, line: 29, type: !6301, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9961 = !DILocalVariable(name: "kref", arg: 1, scope: !9960, file: !3477, line: 29, type: !6299)
!9962 = !DILocation(line: 29, column: 43, scope: !9960)
!9963 = !DILocation(line: 31, column: 16, scope: !9960)
!9964 = !DILocation(line: 31, column: 22, scope: !9960)
!9965 = !DILocation(line: 31, column: 2, scope: !9960)
!9966 = !DILocation(line: 32, column: 1, scope: !9960)
!9967 = distinct !DISubprogram(name: "refcount_set", scope: !156, file: !156, line: 134, type: !9968, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9968 = !DISubroutineType(types: !9969)
!9969 = !{null, !6339, !282}
!9970 = !DILocation(line: 39, column: 55, scope: !4990, inlinedAt: !9971)
!9971 = distinct !DILocation(line: 46, column: 2, scope: !4997, inlinedAt: !9972)
!9972 = distinct !DILocation(line: 136, column: 2, scope: !9967)
!9973 = !DILocation(line: 39, column: 62, scope: !4990, inlinedAt: !9971)
!9974 = !DILocation(line: 84, column: 74, scope: !5003, inlinedAt: !9975)
!9975 = distinct !DILocation(line: 45, column: 2, scope: !4997, inlinedAt: !9972)
!9976 = !DILocation(line: 84, column: 84, scope: !5003, inlinedAt: !9975)
!9977 = !DILocation(line: 43, column: 22, scope: !4997, inlinedAt: !9972)
!9978 = !DILocation(line: 43, column: 29, scope: !4997, inlinedAt: !9972)
!9979 = !DILocalVariable(name: "r", arg: 1, scope: !9967, file: !156, line: 134, type: !6339)
!9980 = !DILocation(line: 134, column: 45, scope: !9967)
!9981 = !DILocalVariable(name: "n", arg: 2, scope: !9967, file: !156, line: 134, type: !282)
!9982 = !DILocation(line: 134, column: 52, scope: !9967)
!9983 = !DILocation(line: 136, column: 14, scope: !9967)
!9984 = !DILocation(line: 136, column: 17, scope: !9967)
!9985 = !DILocation(line: 136, column: 23, scope: !9967)
!9986 = !DILocation(line: 45, column: 26, scope: !4997, inlinedAt: !9972)
!9987 = !DILocation(line: 86, column: 20, scope: !5003, inlinedAt: !9975)
!9988 = !DILocation(line: 86, column: 23, scope: !5003, inlinedAt: !9975)
!9989 = !DILocation(line: 86, column: 2, scope: !5003, inlinedAt: !9975)
!9990 = !DILocation(line: 87, column: 2, scope: !5003, inlinedAt: !9975)
!9991 = !DILocation(line: 46, column: 18, scope: !4997, inlinedAt: !9972)
!9992 = !DILocation(line: 46, column: 21, scope: !4997, inlinedAt: !9972)
!9993 = !DILocation(line: 41, column: 2, scope: !5080, inlinedAt: !9971)
!9994 = !DILocation(line: 137, column: 1, scope: !9967)
!9995 = distinct !DISubprogram(name: "dma_set_mask_and_coherent", scope: !6816, file: !6816, line: 420, type: !9996, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!9996 = !DISubroutineType(types: !9997)
!9997 = !{!282, !324, !255}
!9998 = !DILocalVariable(name: "dev", arg: 1, scope: !9995, file: !6816, line: 420, type: !324)
!9999 = !DILocation(line: 420, column: 60, scope: !9995)
!10000 = !DILocalVariable(name: "mask", arg: 2, scope: !9995, file: !6816, line: 420, type: !255)
!10001 = !DILocation(line: 420, column: 69, scope: !9995)
!10002 = !DILocalVariable(name: "rc", scope: !9995, file: !6816, line: 422, type: !282)
!10003 = !DILocation(line: 422, column: 6, scope: !9995)
!10004 = !DILocation(line: 422, column: 24, scope: !9995)
!10005 = !DILocation(line: 422, column: 29, scope: !9995)
!10006 = !DILocation(line: 422, column: 11, scope: !9995)
!10007 = !DILocation(line: 423, column: 6, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9995, file: !6816, line: 423, column: 6)
!10009 = !DILocation(line: 423, column: 9, scope: !10008)
!10010 = !DILocation(line: 423, column: 6, scope: !9995)
!10011 = !DILocation(line: 424, column: 25, scope: !10008)
!10012 = !DILocation(line: 424, column: 30, scope: !10008)
!10013 = !DILocation(line: 424, column: 3, scope: !10008)
!10014 = !DILocation(line: 425, column: 9, scope: !9995)
!10015 = !DILocation(line: 425, column: 2, scope: !9995)
!10016 = distinct !DISubprogram(name: "init_pff", scope: !3, file: !3, line: 1483, type: !4499, scopeLine: 1484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10017 = !DILocalVariable(name: "stdev", arg: 1, scope: !10016, file: !3, line: 1483, type: !227)
!10018 = !DILocation(line: 1483, column: 44, scope: !10016)
!10019 = !DILocalVariable(name: "i", scope: !10016, file: !3, line: 1485, type: !282)
!10020 = !DILocation(line: 1485, column: 6, scope: !10016)
!10021 = !DILocalVariable(name: "reg", scope: !10016, file: !3, line: 1486, type: !296)
!10022 = !DILocation(line: 1486, column: 6, scope: !10016)
!10023 = !DILocalVariable(name: "pcfg", scope: !10016, file: !3, line: 1487, type: !4376)
!10024 = !DILocation(line: 1487, column: 32, scope: !10016)
!10025 = !DILocation(line: 1487, column: 39, scope: !10016)
!10026 = !DILocation(line: 1487, column: 46, scope: !10016)
!10027 = !DILocation(line: 1489, column: 9, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 1489, column: 2)
!10029 = !DILocation(line: 1489, column: 7, scope: !10028)
!10030 = !DILocation(line: 1489, column: 14, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10028, file: !3, line: 1489, column: 2)
!10032 = !DILocation(line: 1489, column: 16, scope: !10031)
!10033 = !DILocation(line: 1489, column: 2, scope: !10028)
!10034 = !DILocation(line: 1490, column: 19, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 1489, column: 46)
!10036 = !DILocation(line: 1490, column: 26, scope: !10035)
!10037 = !DILocation(line: 1490, column: 39, scope: !10035)
!10038 = !DILocation(line: 1490, column: 42, scope: !10035)
!10039 = !DILocation(line: 1490, column: 18, scope: !10035)
!10040 = !DILocation(line: 1490, column: 9, scope: !10035)
!10041 = !DILocation(line: 1490, column: 7, scope: !10035)
!10042 = !DILocation(line: 1491, column: 7, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 1491, column: 7)
!10044 = !DILocation(line: 1491, column: 11, scope: !10043)
!10045 = !DILocation(line: 1491, column: 7, scope: !10035)
!10046 = !DILocation(line: 1492, column: 4, scope: !10043)
!10047 = !DILocation(line: 1493, column: 2, scope: !10035)
!10048 = !DILocation(line: 1489, column: 42, scope: !10031)
!10049 = !DILocation(line: 1489, column: 2, scope: !10031)
!10050 = distinct !{!10050, !10033, !10051}
!10051 = !DILocation(line: 1493, column: 2, scope: !10028)
!10052 = !DILocation(line: 1495, column: 25, scope: !10016)
!10053 = !DILocation(line: 1495, column: 2, scope: !10016)
!10054 = !DILocation(line: 1495, column: 9, scope: !10016)
!10055 = !DILocation(line: 1495, column: 23, scope: !10016)
!10056 = !DILocation(line: 1497, column: 18, scope: !10016)
!10057 = !DILocation(line: 1497, column: 24, scope: !10016)
!10058 = !DILocation(line: 1497, column: 17, scope: !10016)
!10059 = !DILocation(line: 1497, column: 8, scope: !10016)
!10060 = !DILocation(line: 1497, column: 6, scope: !10016)
!10061 = !DILocation(line: 1498, column: 6, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 1498, column: 6)
!10063 = !DILocation(line: 1498, column: 12, scope: !10062)
!10064 = !DILocation(line: 1498, column: 19, scope: !10062)
!10065 = !DILocation(line: 1498, column: 10, scope: !10062)
!10066 = !DILocation(line: 1498, column: 6, scope: !10016)
!10067 = !DILocation(line: 1499, column: 3, scope: !10062)
!10068 = !DILocation(line: 1499, column: 10, scope: !10062)
!10069 = !DILocation(line: 1499, column: 20, scope: !10062)
!10070 = !DILocation(line: 1499, column: 25, scope: !10062)
!10071 = !DILocation(line: 1501, column: 18, scope: !10016)
!10072 = !DILocation(line: 1501, column: 24, scope: !10016)
!10073 = !DILocation(line: 1501, column: 17, scope: !10016)
!10074 = !DILocation(line: 1501, column: 8, scope: !10016)
!10075 = !DILocation(line: 1501, column: 6, scope: !10016)
!10076 = !DILocation(line: 1502, column: 6, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 1502, column: 6)
!10078 = !DILocation(line: 1502, column: 12, scope: !10077)
!10079 = !DILocation(line: 1502, column: 19, scope: !10077)
!10080 = !DILocation(line: 1502, column: 10, scope: !10077)
!10081 = !DILocation(line: 1502, column: 6, scope: !10016)
!10082 = !DILocation(line: 1503, column: 3, scope: !10077)
!10083 = !DILocation(line: 1503, column: 10, scope: !10077)
!10084 = !DILocation(line: 1503, column: 20, scope: !10077)
!10085 = !DILocation(line: 1503, column: 25, scope: !10077)
!10086 = !DILocation(line: 1505, column: 9, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 1505, column: 2)
!10088 = !DILocation(line: 1505, column: 7, scope: !10087)
!10089 = !DILocation(line: 1505, column: 14, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10087, file: !3, line: 1505, column: 2)
!10091 = !DILocation(line: 1505, column: 16, scope: !10090)
!10092 = !DILocation(line: 1505, column: 2, scope: !10087)
!10093 = !DILocation(line: 1506, column: 19, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 1505, column: 58)
!10095 = !DILocation(line: 1506, column: 25, scope: !10094)
!10096 = !DILocation(line: 1506, column: 41, scope: !10094)
!10097 = !DILocation(line: 1506, column: 18, scope: !10094)
!10098 = !DILocation(line: 1506, column: 9, scope: !10094)
!10099 = !DILocation(line: 1506, column: 7, scope: !10094)
!10100 = !DILocation(line: 1507, column: 7, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 1507, column: 7)
!10102 = !DILocation(line: 1507, column: 13, scope: !10101)
!10103 = !DILocation(line: 1507, column: 20, scope: !10101)
!10104 = !DILocation(line: 1507, column: 11, scope: !10101)
!10105 = !DILocation(line: 1507, column: 7, scope: !10094)
!10106 = !DILocation(line: 1508, column: 4, scope: !10101)
!10107 = !DILocation(line: 1508, column: 11, scope: !10101)
!10108 = !DILocation(line: 1508, column: 21, scope: !10101)
!10109 = !DILocation(line: 1508, column: 26, scope: !10101)
!10110 = !DILocation(line: 1509, column: 2, scope: !10094)
!10111 = !DILocation(line: 1505, column: 54, scope: !10090)
!10112 = !DILocation(line: 1505, column: 2, scope: !10090)
!10113 = distinct !{!10113, !10092, !10114}
!10114 = !DILocation(line: 1509, column: 2, scope: !10087)
!10115 = !DILocation(line: 1510, column: 1, scope: !10016)
!10116 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !233, file: !233, line: 1870, type: !10117, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10117 = !DISubroutineType(types: !10118)
!10118 = !{null, !231, !217}
!10119 = !DILocalVariable(name: "pdev", arg: 1, scope: !10116, file: !233, line: 1870, type: !231)
!10120 = !DILocation(line: 1870, column: 52, scope: !10116)
!10121 = !DILocalVariable(name: "data", arg: 2, scope: !10116, file: !233, line: 1870, type: !217)
!10122 = !DILocation(line: 1870, column: 64, scope: !10116)
!10123 = !DILocation(line: 1872, column: 19, scope: !10116)
!10124 = !DILocation(line: 1872, column: 25, scope: !10116)
!10125 = !DILocation(line: 1872, column: 30, scope: !10116)
!10126 = !DILocation(line: 1872, column: 2, scope: !10116)
!10127 = !DILocation(line: 1873, column: 1, scope: !10116)
!10128 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !6816, file: !6816, line: 392, type: !10129, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10129 = !DISubroutineType(types: !10130)
!10130 = !{!217, !324, !427, !10131, !218}
!10131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!10132 = !DILocalVariable(name: "dev", arg: 1, scope: !10128, file: !6816, line: 392, type: !324)
!10133 = !DILocation(line: 392, column: 55, scope: !10128)
!10134 = !DILocalVariable(name: "size", arg: 2, scope: !10128, file: !6816, line: 392, type: !427)
!10135 = !DILocation(line: 392, column: 67, scope: !10128)
!10136 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !10128, file: !6816, line: 393, type: !10131)
!10137 = !DILocation(line: 393, column: 15, scope: !10128)
!10138 = !DILocalVariable(name: "gfp", arg: 4, scope: !10128, file: !6816, line: 393, type: !218)
!10139 = !DILocation(line: 393, column: 33, scope: !10128)
!10140 = !DILocation(line: 396, column: 25, scope: !10128)
!10141 = !DILocation(line: 396, column: 30, scope: !10128)
!10142 = !DILocation(line: 396, column: 36, scope: !10128)
!10143 = !DILocation(line: 396, column: 48, scope: !10128)
!10144 = !DILocation(line: 397, column: 5, scope: !10128)
!10145 = !DILocation(line: 397, column: 9, scope: !10128)
!10146 = !DILocation(line: 397, column: 4, scope: !10128)
!10147 = !DILocation(line: 396, column: 9, scope: !10128)
!10148 = !DILocation(line: 396, column: 2, scope: !10128)
!10149 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !73, file: !73, line: 660, type: !10150, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10150 = !DISubroutineType(types: !10151)
!10151 = !{null, !324, !217}
!10152 = !DILocalVariable(name: "dev", arg: 1, scope: !10149, file: !73, line: 660, type: !324)
!10153 = !DILocation(line: 660, column: 51, scope: !10149)
!10154 = !DILocalVariable(name: "data", arg: 2, scope: !10149, file: !73, line: 660, type: !217)
!10155 = !DILocation(line: 660, column: 62, scope: !10149)
!10156 = !DILocation(line: 662, column: 21, scope: !10149)
!10157 = !DILocation(line: 662, column: 2, scope: !10149)
!10158 = !DILocation(line: 662, column: 7, scope: !10149)
!10159 = !DILocation(line: 662, column: 19, scope: !10149)
!10160 = !DILocation(line: 663, column: 1, scope: !10149)
!10161 = distinct !DISubprogram(name: "pci_alloc_irq_vectors", scope: !233, file: !233, line: 1800, type: !10162, scopeLine: 1802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10162 = !DISubroutineType(types: !10163)
!10163 = !{!282, !231, !7, !7, !7}
!10164 = !DILocalVariable(name: "dev", arg: 1, scope: !10161, file: !233, line: 1800, type: !231)
!10165 = !DILocation(line: 1800, column: 39, scope: !10161)
!10166 = !DILocalVariable(name: "min_vecs", arg: 2, scope: !10161, file: !233, line: 1800, type: !7)
!10167 = !DILocation(line: 1800, column: 57, scope: !10161)
!10168 = !DILocalVariable(name: "max_vecs", arg: 3, scope: !10161, file: !233, line: 1801, type: !7)
!10169 = !DILocation(line: 1801, column: 22, scope: !10161)
!10170 = !DILocalVariable(name: "flags", arg: 4, scope: !10161, file: !233, line: 1801, type: !7)
!10171 = !DILocation(line: 1801, column: 45, scope: !10161)
!10172 = !DILocation(line: 1803, column: 40, scope: !10161)
!10173 = !DILocation(line: 1803, column: 45, scope: !10161)
!10174 = !DILocation(line: 1803, column: 55, scope: !10161)
!10175 = !DILocation(line: 1803, column: 65, scope: !10161)
!10176 = !DILocation(line: 1803, column: 9, scope: !10161)
!10177 = !DILocation(line: 1803, column: 2, scope: !10161)
!10178 = distinct !DISubprogram(name: "devm_request_irq", scope: !309, file: !309, line: 203, type: !10179, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10179 = !DISubroutineType(types: !10180)
!10180 = !{!282, !324, !7, !10181, !216, !262, !217}
!10181 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !309, line: 92, baseType: !10182)
!10182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10183, size: 64)
!10183 = !DISubroutineType(types: !10184)
!10184 = !{!10185, !282, !217}
!10185 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !207, line: 17, baseType: !206)
!10186 = !DILocalVariable(name: "dev", arg: 1, scope: !10178, file: !309, line: 203, type: !324)
!10187 = !DILocation(line: 203, column: 33, scope: !10178)
!10188 = !DILocalVariable(name: "irq", arg: 2, scope: !10178, file: !309, line: 203, type: !7)
!10189 = !DILocation(line: 203, column: 51, scope: !10178)
!10190 = !DILocalVariable(name: "handler", arg: 3, scope: !10178, file: !309, line: 203, type: !10181)
!10191 = !DILocation(line: 203, column: 70, scope: !10178)
!10192 = !DILocalVariable(name: "irqflags", arg: 4, scope: !10178, file: !309, line: 204, type: !216)
!10193 = !DILocation(line: 204, column: 18, scope: !10178)
!10194 = !DILocalVariable(name: "devname", arg: 5, scope: !10178, file: !309, line: 204, type: !262)
!10195 = !DILocation(line: 204, column: 40, scope: !10178)
!10196 = !DILocalVariable(name: "dev_id", arg: 6, scope: !10178, file: !309, line: 204, type: !217)
!10197 = !DILocation(line: 204, column: 55, scope: !10178)
!10198 = !DILocation(line: 206, column: 35, scope: !10178)
!10199 = !DILocation(line: 206, column: 40, scope: !10178)
!10200 = !DILocation(line: 206, column: 45, scope: !10178)
!10201 = !DILocation(line: 206, column: 60, scope: !10178)
!10202 = !DILocation(line: 207, column: 7, scope: !10178)
!10203 = !DILocation(line: 207, column: 16, scope: !10178)
!10204 = !DILocation(line: 206, column: 9, scope: !10178)
!10205 = !DILocation(line: 206, column: 2, scope: !10178)
!10206 = distinct !DISubprogram(name: "switchtec_event_isr", scope: !3, file: !3, line: 1383, type: !10183, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10207 = !DILocalVariable(name: "v", arg: 1, scope: !10208, file: !4991, line: 93, type: !4994)
!10208 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !4991, file: !4991, line: 93, type: !10209, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10209 = !DISubroutineType(types: !10210)
!10210 = !{null, !4994}
!10211 = !DILocation(line: 93, column: 55, scope: !10208, inlinedAt: !10212)
!10212 = distinct !DILocation(line: 241, column: 2, scope: !10213, inlinedAt: !10214)
!10213 = distinct !DISubprogram(name: "atomic_inc", scope: !4998, file: !4998, line: 238, type: !10209, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10214 = distinct !DILocation(line: 1409, column: 3, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 1408, column: 19)
!10216 = distinct !DILexicalBlock(scope: !10206, file: !3, line: 1408, column: 6)
!10217 = !DILocation(line: 99, column: 79, scope: !6373, inlinedAt: !10218)
!10218 = distinct !DILocation(line: 240, column: 2, scope: !10213, inlinedAt: !10214)
!10219 = !DILocation(line: 99, column: 89, scope: !6373, inlinedAt: !10218)
!10220 = !DILocalVariable(name: "v", arg: 1, scope: !10213, file: !4998, line: 238, type: !4994)
!10221 = !DILocation(line: 238, column: 22, scope: !10213, inlinedAt: !10214)
!10222 = !DILocalVariable(name: "irq", arg: 1, scope: !10206, file: !3, line: 1383, type: !282)
!10223 = !DILocation(line: 1383, column: 44, scope: !10206)
!10224 = !DILocalVariable(name: "dev", arg: 2, scope: !10206, file: !3, line: 1383, type: !217)
!10225 = !DILocation(line: 1383, column: 55, scope: !10206)
!10226 = !DILocalVariable(name: "stdev", scope: !10206, file: !3, line: 1385, type: !227)
!10227 = !DILocation(line: 1385, column: 24, scope: !10206)
!10228 = !DILocation(line: 1385, column: 32, scope: !10206)
!10229 = !DILocalVariable(name: "reg", scope: !10206, file: !3, line: 1386, type: !296)
!10230 = !DILocation(line: 1386, column: 6, scope: !10206)
!10231 = !DILocalVariable(name: "ret", scope: !10206, file: !3, line: 1387, type: !10185)
!10232 = !DILocation(line: 1387, column: 14, scope: !10206)
!10233 = !DILocalVariable(name: "eid", scope: !10206, file: !3, line: 1388, type: !282)
!10234 = !DILocation(line: 1388, column: 6, scope: !10206)
!10235 = !DILocalVariable(name: "event_count", scope: !10206, file: !3, line: 1388, type: !282)
!10236 = !DILocation(line: 1388, column: 11, scope: !10206)
!10237 = !DILocation(line: 1390, column: 18, scope: !10206)
!10238 = !DILocation(line: 1390, column: 25, scope: !10206)
!10239 = !DILocation(line: 1390, column: 40, scope: !10206)
!10240 = !DILocation(line: 1390, column: 17, scope: !10206)
!10241 = !DILocation(line: 1390, column: 8, scope: !10206)
!10242 = !DILocation(line: 1390, column: 6, scope: !10206)
!10243 = !DILocation(line: 1391, column: 6, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10206, file: !3, line: 1391, column: 6)
!10245 = !DILocation(line: 1391, column: 10, scope: !10244)
!10246 = !DILocation(line: 1391, column: 6, scope: !10206)
!10247 = !DILocation(line: 1393, column: 7, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10244, file: !3, line: 1391, column: 38)
!10249 = !DILocation(line: 1394, column: 18, scope: !10248)
!10250 = !DILocation(line: 1394, column: 25, scope: !10248)
!10251 = !DILocation(line: 1394, column: 3, scope: !10248)
!10252 = !DILocation(line: 1395, column: 13, scope: !10248)
!10253 = !DILocation(line: 1395, column: 19, scope: !10248)
!10254 = !DILocation(line: 1395, column: 26, scope: !10248)
!10255 = !DILocation(line: 1395, column: 41, scope: !10248)
!10256 = !DILocation(line: 1395, column: 18, scope: !10248)
!10257 = !DILocation(line: 1395, column: 3, scope: !10248)
!10258 = !DILocation(line: 1396, column: 2, scope: !10248)
!10259 = !DILocation(line: 1398, column: 26, scope: !10206)
!10260 = !DILocation(line: 1398, column: 2, scope: !10206)
!10261 = !DILocation(line: 1400, column: 11, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10206, file: !3, line: 1400, column: 2)
!10263 = !DILocation(line: 1400, column: 7, scope: !10262)
!10264 = !DILocation(line: 1400, column: 16, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 1400, column: 2)
!10266 = !DILocation(line: 1400, column: 20, scope: !10265)
!10267 = !DILocation(line: 1400, column: 2, scope: !10262)
!10268 = !DILocation(line: 1401, column: 7, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 1401, column: 7)
!10270 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 1400, column: 57)
!10271 = !DILocation(line: 1401, column: 11, scope: !10269)
!10272 = !DILocation(line: 1401, column: 47, scope: !10269)
!10273 = !DILocation(line: 1402, column: 7, scope: !10269)
!10274 = !DILocation(line: 1402, column: 11, scope: !10269)
!10275 = !DILocation(line: 1401, column: 7, scope: !10270)
!10276 = !DILocation(line: 1403, column: 4, scope: !10269)
!10277 = !DILocation(line: 1405, column: 34, scope: !10270)
!10278 = !DILocation(line: 1405, column: 41, scope: !10270)
!10279 = !DILocation(line: 1405, column: 18, scope: !10270)
!10280 = !DILocation(line: 1405, column: 15, scope: !10270)
!10281 = !DILocation(line: 1406, column: 2, scope: !10270)
!10282 = !DILocation(line: 1400, column: 53, scope: !10265)
!10283 = !DILocation(line: 1400, column: 2, scope: !10265)
!10284 = distinct !{!10284, !10267, !10285}
!10285 = !DILocation(line: 1406, column: 2, scope: !10262)
!10286 = !DILocation(line: 1408, column: 6, scope: !10216)
!10287 = !DILocation(line: 1408, column: 6, scope: !10206)
!10288 = !DILocation(line: 1409, column: 15, scope: !10215)
!10289 = !DILocation(line: 1409, column: 22, scope: !10215)
!10290 = !DILocation(line: 240, column: 31, scope: !10213, inlinedAt: !10214)
!10291 = !DILocation(line: 101, column: 20, scope: !6373, inlinedAt: !10218)
!10292 = !DILocation(line: 101, column: 23, scope: !6373, inlinedAt: !10218)
!10293 = !DILocation(line: 101, column: 2, scope: !6373, inlinedAt: !10218)
!10294 = !DILocation(line: 102, column: 2, scope: !6373, inlinedAt: !10218)
!10295 = !DILocation(line: 241, column: 18, scope: !10213, inlinedAt: !10214)
!10296 = !DILocation(line: 96, column: 16, scope: !10208, inlinedAt: !10212)
!10297 = !DILocation(line: 96, column: 19, scope: !10208, inlinedAt: !10212)
!10298 = !DILocation(line: 95, column: 2, scope: !10208, inlinedAt: !10212)
!10299 = !{i32 -2147023845}
!10300 = !DILocation(line: 1410, column: 3, scope: !10215)
!10301 = !DILocation(line: 1413, column: 3, scope: !10215)
!10302 = !DILocation(line: 1416, column: 9, scope: !10206)
!10303 = !DILocation(line: 1416, column: 2, scope: !10206)
!10304 = !DILocation(line: 1417, column: 1, scope: !10206)
!10305 = distinct !DISubprogram(name: "switchtec_dma_mrpc_isr", scope: !3, file: !3, line: 1420, type: !10183, scopeLine: 1421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10306 = !DILocalVariable(name: "irq", arg: 1, scope: !10305, file: !3, line: 1420, type: !282)
!10307 = !DILocation(line: 1420, column: 47, scope: !10305)
!10308 = !DILocalVariable(name: "dev", arg: 2, scope: !10305, file: !3, line: 1420, type: !217)
!10309 = !DILocation(line: 1420, column: 58, scope: !10305)
!10310 = !DILocalVariable(name: "stdev", scope: !10305, file: !3, line: 1422, type: !227)
!10311 = !DILocation(line: 1422, column: 24, scope: !10305)
!10312 = !DILocation(line: 1422, column: 32, scope: !10305)
!10313 = !DILocalVariable(name: "ret", scope: !10305, file: !3, line: 1423, type: !10185)
!10314 = !DILocation(line: 1423, column: 14, scope: !10305)
!10315 = !DILocation(line: 1427, column: 6, scope: !10305)
!10316 = !DILocation(line: 1427, column: 13, scope: !10305)
!10317 = !DILocation(line: 1427, column: 28, scope: !10305)
!10318 = !DILocation(line: 1427, column: 5, scope: !10305)
!10319 = !DILocation(line: 1425, column: 2, scope: !10305)
!10320 = !DILocation(line: 1428, column: 17, scope: !10305)
!10321 = !DILocation(line: 1428, column: 24, scope: !10305)
!10322 = !DILocation(line: 1428, column: 2, scope: !10305)
!10323 = !DILocation(line: 1430, column: 6, scope: !10305)
!10324 = !DILocation(line: 1431, column: 9, scope: !10305)
!10325 = !DILocation(line: 1431, column: 2, scope: !10305)
!10326 = distinct !DISubprogram(name: "schedule_work", scope: !104, file: !104, line: 566, type: !10327, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10327 = !DISubroutineType(types: !10328)
!10328 = !{!587, !2065}
!10329 = !DILocalVariable(name: "work", arg: 1, scope: !10326, file: !104, line: 566, type: !2065)
!10330 = !DILocation(line: 566, column: 54, scope: !10326)
!10331 = !DILocation(line: 568, column: 20, scope: !10326)
!10332 = !DILocation(line: 568, column: 31, scope: !10326)
!10333 = !DILocation(line: 568, column: 9, scope: !10326)
!10334 = !DILocation(line: 568, column: 2, scope: !10326)
!10335 = distinct !DISubprogram(name: "check_link_state_events", scope: !3, file: !3, line: 1210, type: !4499, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10336 = !DILocalVariable(name: "stdev", arg: 1, scope: !10335, file: !3, line: 1210, type: !227)
!10337 = !DILocation(line: 1210, column: 59, scope: !10335)
!10338 = !DILocalVariable(name: "idx", scope: !10335, file: !3, line: 1212, type: !282)
!10339 = !DILocation(line: 1212, column: 6, scope: !10335)
!10340 = !DILocalVariable(name: "reg", scope: !10335, file: !3, line: 1213, type: !296)
!10341 = !DILocation(line: 1213, column: 6, scope: !10335)
!10342 = !DILocalVariable(name: "count", scope: !10335, file: !3, line: 1214, type: !282)
!10343 = !DILocation(line: 1214, column: 6, scope: !10335)
!10344 = !DILocalVariable(name: "occurred", scope: !10335, file: !3, line: 1215, type: !282)
!10345 = !DILocation(line: 1215, column: 6, scope: !10335)
!10346 = !DILocation(line: 1217, column: 11, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10335, file: !3, line: 1217, column: 2)
!10348 = !DILocation(line: 1217, column: 7, scope: !10347)
!10349 = !DILocation(line: 1217, column: 16, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10347, file: !3, line: 1217, column: 2)
!10351 = !DILocation(line: 1217, column: 22, scope: !10350)
!10352 = !DILocation(line: 1217, column: 29, scope: !10350)
!10353 = !DILocation(line: 1217, column: 20, scope: !10350)
!10354 = !DILocation(line: 1217, column: 2, scope: !10347)
!10355 = !DILocation(line: 1218, column: 19, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 1217, column: 51)
!10357 = !DILocation(line: 1218, column: 26, scope: !10356)
!10358 = !DILocation(line: 1218, column: 39, scope: !10356)
!10359 = !DILocation(line: 1218, column: 44, scope: !10356)
!10360 = !DILocation(line: 1218, column: 18, scope: !10356)
!10361 = !DILocation(line: 1218, column: 9, scope: !10356)
!10362 = !DILocation(line: 1218, column: 7, scope: !10356)
!10363 = !DILocation(line: 1220, column: 12, scope: !10356)
!10364 = !DILocation(line: 1220, column: 16, scope: !10356)
!10365 = !DILocation(line: 1220, column: 22, scope: !10356)
!10366 = !DILocation(line: 1220, column: 9, scope: !10356)
!10367 = !DILocation(line: 1222, column: 7, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10356, file: !3, line: 1222, column: 7)
!10369 = !DILocation(line: 1222, column: 16, scope: !10368)
!10370 = !DILocation(line: 1222, column: 23, scope: !10368)
!10371 = !DILocation(line: 1222, column: 40, scope: !10368)
!10372 = !DILocation(line: 1222, column: 13, scope: !10368)
!10373 = !DILocation(line: 1222, column: 7, scope: !10356)
!10374 = !DILocation(line: 1223, column: 13, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10368, file: !3, line: 1222, column: 46)
!10376 = !DILocation(line: 1224, column: 35, scope: !10375)
!10377 = !DILocation(line: 1224, column: 4, scope: !10375)
!10378 = !DILocation(line: 1224, column: 11, scope: !10375)
!10379 = !DILocation(line: 1224, column: 28, scope: !10375)
!10380 = !DILocation(line: 1224, column: 33, scope: !10375)
!10381 = !DILocation(line: 1225, column: 3, scope: !10375)
!10382 = !DILocation(line: 1226, column: 2, scope: !10356)
!10383 = !DILocation(line: 1217, column: 47, scope: !10350)
!10384 = !DILocation(line: 1217, column: 2, scope: !10350)
!10385 = distinct !{!10385, !10354, !10386}
!10386 = !DILocation(line: 1226, column: 2, scope: !10347)
!10387 = !DILocation(line: 1228, column: 6, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10335, file: !3, line: 1228, column: 6)
!10389 = !DILocation(line: 1228, column: 6, scope: !10335)
!10390 = !DILocation(line: 1229, column: 18, scope: !10388)
!10391 = !DILocation(line: 1229, column: 25, scope: !10388)
!10392 = !DILocation(line: 1229, column: 3, scope: !10388)
!10393 = !DILocation(line: 1230, column: 1, scope: !10335)
!10394 = distinct !DISubprogram(name: "mask_all_events", scope: !3, file: !3, line: 1361, type: !10395, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10395 = !DISubroutineType(types: !10396)
!10396 = !{!282, !227, !282}
!10397 = !DILocalVariable(name: "stdev", arg: 1, scope: !10394, file: !3, line: 1361, type: !227)
!10398 = !DILocation(line: 1361, column: 50, scope: !10394)
!10399 = !DILocalVariable(name: "eid", arg: 2, scope: !10394, file: !3, line: 1361, type: !282)
!10400 = !DILocation(line: 1361, column: 61, scope: !10394)
!10401 = !DILocalVariable(name: "idx", scope: !10394, file: !3, line: 1363, type: !282)
!10402 = !DILocation(line: 1363, column: 6, scope: !10394)
!10403 = !DILocalVariable(name: "count", scope: !10394, file: !3, line: 1364, type: !282)
!10404 = !DILocation(line: 1364, column: 6, scope: !10394)
!10405 = !DILocation(line: 1366, column: 17, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 1366, column: 6)
!10407 = !DILocation(line: 1366, column: 6, scope: !10406)
!10408 = !DILocation(line: 1366, column: 22, scope: !10406)
!10409 = !DILocation(line: 1366, column: 30, scope: !10406)
!10410 = !DILocation(line: 1366, column: 6, scope: !10394)
!10411 = !DILocation(line: 1367, column: 12, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 1367, column: 3)
!10413 = distinct !DILexicalBlock(scope: !10406, file: !3, line: 1366, column: 46)
!10414 = !DILocation(line: 1367, column: 8, scope: !10412)
!10415 = !DILocation(line: 1367, column: 17, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10412, file: !3, line: 1367, column: 3)
!10417 = !DILocation(line: 1367, column: 23, scope: !10416)
!10418 = !DILocation(line: 1367, column: 30, scope: !10416)
!10419 = !DILocation(line: 1367, column: 21, scope: !10416)
!10420 = !DILocation(line: 1367, column: 3, scope: !10412)
!10421 = !DILocation(line: 1368, column: 24, scope: !10416)
!10422 = !DILocation(line: 1368, column: 31, scope: !10416)
!10423 = !DILocation(line: 1368, column: 36, scope: !10416)
!10424 = !DILocation(line: 1368, column: 13, scope: !10416)
!10425 = !DILocation(line: 1368, column: 10, scope: !10416)
!10426 = !DILocation(line: 1368, column: 4, scope: !10416)
!10427 = !DILocation(line: 1367, column: 50, scope: !10416)
!10428 = !DILocation(line: 1367, column: 3, scope: !10416)
!10429 = distinct !{!10429, !10420, !10430}
!10430 = !DILocation(line: 1368, column: 39, scope: !10412)
!10431 = !DILocation(line: 1369, column: 2, scope: !10413)
!10432 = !DILocation(line: 1369, column: 24, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10406, file: !3, line: 1369, column: 13)
!10434 = !DILocation(line: 1369, column: 13, scope: !10433)
!10435 = !DILocation(line: 1369, column: 29, scope: !10433)
!10436 = !DILocation(line: 1369, column: 37, scope: !10433)
!10437 = !DILocation(line: 1369, column: 13, scope: !10406)
!10438 = !DILocation(line: 1370, column: 12, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 1370, column: 3)
!10440 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 1369, column: 52)
!10441 = !DILocation(line: 1370, column: 8, scope: !10439)
!10442 = !DILocation(line: 1370, column: 17, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 1370, column: 3)
!10444 = !DILocation(line: 1370, column: 23, scope: !10443)
!10445 = !DILocation(line: 1370, column: 30, scope: !10443)
!10446 = !DILocation(line: 1370, column: 21, scope: !10443)
!10447 = !DILocation(line: 1370, column: 3, scope: !10439)
!10448 = !DILocation(line: 1371, column: 9, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10450, file: !3, line: 1371, column: 8)
!10450 = distinct !DILexicalBlock(scope: !10443, file: !3, line: 1370, column: 52)
!10451 = !DILocation(line: 1371, column: 16, scope: !10449)
!10452 = !DILocation(line: 1371, column: 26, scope: !10449)
!10453 = !DILocation(line: 1371, column: 8, scope: !10450)
!10454 = !DILocation(line: 1372, column: 5, scope: !10449)
!10455 = !DILocation(line: 1374, column: 24, scope: !10450)
!10456 = !DILocation(line: 1374, column: 31, scope: !10450)
!10457 = !DILocation(line: 1374, column: 36, scope: !10450)
!10458 = !DILocation(line: 1374, column: 13, scope: !10450)
!10459 = !DILocation(line: 1374, column: 10, scope: !10450)
!10460 = !DILocation(line: 1375, column: 3, scope: !10450)
!10461 = !DILocation(line: 1370, column: 48, scope: !10443)
!10462 = !DILocation(line: 1370, column: 3, scope: !10443)
!10463 = distinct !{!10463, !10447, !10464}
!10464 = !DILocation(line: 1375, column: 3, scope: !10439)
!10465 = !DILocation(line: 1376, column: 2, scope: !10440)
!10466 = !DILocation(line: 1377, column: 23, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 1376, column: 9)
!10468 = !DILocation(line: 1377, column: 30, scope: !10467)
!10469 = !DILocation(line: 1377, column: 12, scope: !10467)
!10470 = !DILocation(line: 1377, column: 9, scope: !10467)
!10471 = !DILocation(line: 1380, column: 9, scope: !10394)
!10472 = !DILocation(line: 1380, column: 2, scope: !10394)
!10473 = distinct !DISubprogram(name: "queue_work", scope: !104, file: !104, line: 504, type: !10474, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10474 = !DISubroutineType(types: !10475)
!10475 = !{!587, !2890, !2065}
!10476 = !DILocalVariable(name: "wq", arg: 1, scope: !10473, file: !104, line: 504, type: !2890)
!10477 = !DILocation(line: 504, column: 56, scope: !10473)
!10478 = !DILocalVariable(name: "work", arg: 2, scope: !10473, file: !104, line: 505, type: !2065)
!10479 = !DILocation(line: 505, column: 30, scope: !10473)
!10480 = !DILocation(line: 507, column: 41, scope: !10473)
!10481 = !DILocation(line: 507, column: 45, scope: !10473)
!10482 = !DILocation(line: 507, column: 9, scope: !10473)
!10483 = !DILocation(line: 507, column: 2, scope: !10473)
!10484 = distinct !DISubprogram(name: "mask_event", scope: !3, file: !3, line: 1342, type: !10485, scopeLine: 1343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10485 = !DISubroutineType(types: !10486)
!10486 = !{!282, !227, !282, !282}
!10487 = !DILocalVariable(name: "stdev", arg: 1, scope: !10484, file: !3, line: 1342, type: !227)
!10488 = !DILocation(line: 1342, column: 45, scope: !10484)
!10489 = !DILocalVariable(name: "eid", arg: 2, scope: !10484, file: !3, line: 1342, type: !282)
!10490 = !DILocation(line: 1342, column: 56, scope: !10484)
!10491 = !DILocalVariable(name: "idx", arg: 3, scope: !10484, file: !3, line: 1342, type: !282)
!10492 = !DILocation(line: 1342, column: 65, scope: !10484)
!10493 = !DILocalVariable(name: "off", scope: !10484, file: !3, line: 1344, type: !427)
!10494 = !DILocation(line: 1344, column: 9, scope: !10484)
!10495 = !DILocation(line: 1344, column: 26, scope: !10484)
!10496 = !DILocation(line: 1344, column: 15, scope: !10484)
!10497 = !DILocation(line: 1344, column: 31, scope: !10484)
!10498 = !DILocalVariable(name: "hdr_reg", scope: !10484, file: !3, line: 1345, type: !295)
!10499 = !DILocation(line: 1345, column: 15, scope: !10484)
!10500 = !DILocalVariable(name: "hdr", scope: !10484, file: !3, line: 1346, type: !296)
!10501 = !DILocation(line: 1346, column: 6, scope: !10484)
!10502 = !DILocation(line: 1348, column: 23, scope: !10484)
!10503 = !DILocation(line: 1348, column: 12, scope: !10484)
!10504 = !DILocation(line: 1348, column: 28, scope: !10484)
!10505 = !DILocation(line: 1348, column: 36, scope: !10484)
!10506 = !DILocation(line: 1348, column: 43, scope: !10484)
!10507 = !DILocation(line: 1348, column: 48, scope: !10484)
!10508 = !DILocation(line: 1348, column: 10, scope: !10484)
!10509 = !DILocation(line: 1349, column: 17, scope: !10484)
!10510 = !DILocation(line: 1349, column: 8, scope: !10484)
!10511 = !DILocation(line: 1349, column: 6, scope: !10484)
!10512 = !DILocation(line: 1351, column: 8, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 1351, column: 6)
!10514 = !DILocation(line: 1351, column: 12, scope: !10513)
!10515 = !DILocation(line: 1351, column: 39, scope: !10513)
!10516 = !DILocation(line: 1351, column: 42, scope: !10513)
!10517 = !DILocation(line: 1351, column: 46, scope: !10513)
!10518 = !DILocation(line: 1351, column: 6, scope: !10484)
!10519 = !DILocation(line: 1352, column: 3, scope: !10513)
!10520 = !DILocation(line: 1355, column: 6, scope: !10484)
!10521 = !DILocation(line: 1356, column: 12, scope: !10484)
!10522 = !DILocation(line: 1356, column: 17, scope: !10484)
!10523 = !DILocation(line: 1356, column: 2, scope: !10484)
!10524 = !DILocation(line: 1358, column: 2, scope: !10484)
!10525 = !DILocation(line: 1359, column: 1, scope: !10484)
!10526 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !233, file: !233, line: 1865, type: !10527, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10527 = !DISubroutineType(types: !10528)
!10528 = !{!217, !231}
!10529 = !DILocalVariable(name: "pdev", arg: 1, scope: !10526, file: !233, line: 1865, type: !231)
!10530 = !DILocation(line: 1865, column: 53, scope: !10526)
!10531 = !DILocation(line: 1867, column: 26, scope: !10526)
!10532 = !DILocation(line: 1867, column: 32, scope: !10526)
!10533 = !DILocation(line: 1867, column: 9, scope: !10526)
!10534 = !DILocation(line: 1867, column: 2, scope: !10526)
!10535 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !73, file: !73, line: 655, type: !10536, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !355)
!10536 = !DISubroutineType(types: !10537)
!10537 = !{!217, !3822}
!10538 = !DILocalVariable(name: "dev", arg: 1, scope: !10535, file: !73, line: 655, type: !3822)
!10539 = !DILocation(line: 655, column: 58, scope: !10535)
!10540 = !DILocation(line: 657, column: 9, scope: !10535)
!10541 = !DILocation(line: 657, column: 14, scope: !10535)
!10542 = !DILocation(line: 657, column: 2, scope: !10535)
