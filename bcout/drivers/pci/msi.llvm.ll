; ModuleID = '../bcout/drivers/pci/msi.llvm.bc'
source_filename = "drivers/pci/msi.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.cpumask = type { [1 x i64] }
%struct.kmem_cache = type opaque
%struct.msi_domain_info = type { i32, %struct.msi_domain_ops*, %struct.irq_chip*, i8*, void (%struct.irq_desc*)*, i8*, i8*, i8* }
%struct.msi_domain_ops = type { i64 (%struct.msi_domain_info*, %struct.irq_alloc_info*)*, i32 (%struct.irq_domain*, %struct.msi_domain_info*, i32, i64, %struct.irq_alloc_info*)*, void (%struct.irq_domain*, %struct.msi_domain_info*, i32)*, {}*, i32 (%struct.irq_domain*, %struct.device*, i32, %struct.irq_alloc_info*)*, void (%struct.irq_alloc_info*, i32)*, void (%struct.irq_alloc_info*, %struct.msi_desc*)*, i32 (%struct.irq_domain*, %struct.msi_desc*, i32)*, i32 (%struct.irq_domain*, %struct.device*, i32)*, void (%struct.irq_domain*, %struct.device*)* }
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, i32 (%struct.irq_data*, i32, i8*)*, i32 (%struct.irq_data*, i32, i1)*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, i64 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i8*, %struct.msi_desc*, [1 x %struct.cpumask] }
%struct.msi_desc = type { %struct.list_head, i32, i32, %struct.device*, %struct.msi_msg, %struct.irq_affinity_desc*, void (%struct.msi_desc*, i8*)*, i8*, %union.anon.65 }
%struct.msi_msg = type { i32, i32, i32 }
%struct.irq_affinity_desc = type { %struct.cpumask, i8 }
%union.anon.65 = type { %struct.anon.66 }
%struct.anon.66 = type { i32, %struct.anon.67, %union.anon.68 }
%struct.anon.67 = type { i16, i16, i32 }
%union.anon.68 = type { i8* }
%struct.irq_domain_chip_generic = type { i32, i32, i32, i32, i32, [0 x %struct.irq_chip_generic*] }
%struct.irq_chip_generic = type { %struct.raw_spinlock, i8*, i32 (i8*)*, void (i32, i8*)*, void (%struct.irq_chip_generic*)*, void (%struct.irq_chip_generic*)*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, %struct.irq_domain*, %struct.list_head, [0 x %struct.irq_chip_type] }
%struct.irq_chip_type = type { %struct.irq_chip, %struct.irq_chip_regs, void (%struct.irq_desc*)*, i32, i32, i32* }
%struct.irq_chip_regs = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.irq_desc = type { %struct.irq_common_data, %struct.irq_data, i32*, {}*, %struct.irqaction*, i32, i32, i32, i32, i32, i32, i64, i32, %struct.atomic_t, i32, %struct.raw_spinlock, %struct.cpumask*, %struct.cpumask*, i64, %struct.atomic_t, %struct.wait_queue_head, i32, i32, i32, i32, %struct.proc_dir_entry*, %struct.callback_head, %struct.kobject, %struct.mutex, i32, %struct.module*, i8* }
%struct.irqaction = type { i32 (i32, i8*)*, i8*, i8*, %struct.irqaction*, i32 (i32, i8*)*, %struct.task_struct*, %struct.irqaction*, i32, i32, i64, i64, i8*, %struct.proc_dir_entry* }
%struct.proc_dir_entry = type opaque
%struct.irq_alloc_info = type { i32, i32, i32, i64, %struct.cpumask*, %struct.msi_desc*, i8*, %union.anon.70 }
%union.anon.70 = type { %struct.ioapic_alloc_info }
%struct.ioapic_alloc_info = type { i32, i32, i8, %struct.IO_APIC_route_entry* }
%struct.IO_APIC_route_entry = type opaque
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.69, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type { %struct.module*, %struct.device*, %struct.device_node*, %struct.list_head, i32 (%struct.msi_controller*, %struct.pci_dev*, %struct.msi_desc*)*, i32 (%struct.msi_controller*, %struct.pci_dev*, i32, i32)*, void (%struct.msi_controller*, i32)* }
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, {}*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, {}*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, {}*, {}*, {}* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.69 = type { %struct.pci_sriov* }
%struct.pci_sriov = type { i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i32, i8, i8, i16, %struct.pci_dev*, %struct.pci_dev*, i32, i8, i16, i16, [6 x i64], i8 }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.irq_affinity = type { i32, i32, i32, [4 x i32], void (%struct.irq_affinity*, i32)*, i8* }
%struct.msix_entry = type { i32, i16 }
%struct.pci_sysdata = type { i32, i32, %struct.acpi_device*, i8*, i8*, %struct.pci_dev* }
%struct.acpi_device = type { i32, i8*, %struct.fwnode_handle, %struct.acpi_device*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.acpi_device_status, %struct.acpi_device_flags, %struct.acpi_device_pnp, %struct.acpi_device_power, %struct.acpi_device_wakeup, %struct.acpi_device_perf, %struct.acpi_device_dir, %struct.acpi_device_data, %struct.acpi_scan_handler*, %struct.acpi_hotplug_context*, %struct.acpi_driver*, %struct.acpi_gpio_mapping*, i8*, %struct.device, i32, i32, %struct.list_head, %struct.mutex, void (%struct.acpi_device*)* }
%struct.acpi_device_status = type { i32 }
%struct.acpi_device_flags = type { i32 }
%struct.acpi_device_pnp = type { [8 x i8], %struct.acpi_pnp_type, i64, i8*, %struct.list_head, [40 x i8], [20 x i8], %union.acpi_object* }
%struct.acpi_pnp_type = type { i32 }
%union.acpi_object = type { %struct.anon.76 }
%struct.anon.76 = type { i32, i32, i64, i32 }
%struct.acpi_device_power = type { i32, %struct.acpi_device_power_flags, [5 x %struct.acpi_device_power_state] }
%struct.acpi_device_power_flags = type { i32 }
%struct.acpi_device_power_state = type { %struct.anon.78, i32, i32, %struct.list_head }
%struct.anon.78 = type { i8 }
%struct.acpi_device_wakeup = type { i8*, i64, i64, %struct.list_head, %struct.acpi_device_wakeup_flags, %struct.acpi_device_wakeup_context, %struct.wakeup_source*, i32, i32 }
%struct.acpi_device_wakeup_flags = type { i8 }
%struct.acpi_device_wakeup_context = type { void (%struct.acpi_device_wakeup_context*)*, %struct.device* }
%struct.acpi_device_perf = type { i32, %struct.acpi_device_perf_flags, i32, %struct.acpi_device_perf_state* }
%struct.acpi_device_perf_flags = type { i8 }
%struct.acpi_device_perf_state = type { %struct.anon.79, i8, i8, i32 }
%struct.anon.79 = type { i8 }
%struct.acpi_device_dir = type { %struct.proc_dir_entry* }
%struct.acpi_device_data = type { %union.acpi_object*, %struct.list_head, %union.acpi_object*, %struct.list_head }
%struct.acpi_scan_handler = type { %struct.acpi_device_id*, %struct.list_head, i1 (i8*, %struct.acpi_device_id**)*, i32 (%struct.acpi_device*, %struct.acpi_device_id*)*, void (%struct.acpi_device*)*, void (%struct.device*)*, void (%struct.device*)*, %struct.acpi_hotplug_profile }
%struct.acpi_hotplug_profile = type { %struct.kobject, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*)*, i8 }
%struct.acpi_hotplug_context = type { %struct.acpi_device*, i32 (%struct.acpi_device*, i32)*, void (%struct.acpi_device*, i32)*, void (%struct.acpi_device*)* }
%struct.acpi_driver = type { [80 x i8], [80 x i8], %struct.acpi_device_id*, i32, %struct.acpi_device_ops, %struct.device_driver, %struct.module* }
%struct.acpi_device_ops = type { i32 (%struct.acpi_device*)*, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*, i32)* }
%struct.acpi_gpio_mapping = type opaque

@pci_msi_ignore_mask = dso_local global i32 0, align 4, !dbg !0
@.str = private unnamed_addr constant [18 x i8] c"drivers/pci/msi.c\00", align 1
@pci_msi_enable = internal global i32 1, align 4, !dbg !4542
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 8
@.str.1 = private unnamed_addr constant [20 x i8] c"include/linux/msi.h\00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"can't enable MSI (MSI-X already enabled)\0A\00", align 1
@.str.3 = private unnamed_addr constant [68 x i8] c"Device has broken 64-bit MSI but arch tried to assign one above 4G\0A\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"msi_irqs\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.6 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"msix\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"msi\00", align 1
@.str.10 = private unnamed_addr constant [47 x i8] c"can't enable MSI-X (MSI IRQ already assigned)\0A\00", align 1
@pci_msi_domain_ops_default = internal global { i64 (%struct.msi_domain_info*, %struct.irq_alloc_info*)*, i32 (%struct.irq_domain*, %struct.msi_domain_info*, i32, i64, %struct.irq_alloc_info*)*, void (%struct.irq_domain*, %struct.msi_domain_info*, i32)*, i32 (%struct.irq_domain*, %struct.msi_domain_info*, %struct.device*)*, i32 (%struct.irq_domain*, %struct.device*, i32, %struct.irq_alloc_info*)*, void (%struct.irq_alloc_info*, i32)*, void (%struct.irq_alloc_info*, %struct.msi_desc*)*, i32 (%struct.irq_domain*, %struct.msi_desc*, i32)*, i32 (%struct.irq_domain*, %struct.device*, i32)*, void (%struct.irq_domain*, %struct.device*)* } { i64 (%struct.msi_domain_info*, %struct.irq_alloc_info*)* null, i32 (%struct.irq_domain*, %struct.msi_domain_info*, i32, i64, %struct.irq_alloc_info*)* null, void (%struct.irq_domain*, %struct.msi_domain_info*, i32)* null, i32 (%struct.irq_domain*, %struct.msi_domain_info*, %struct.device*)* @pci_msi_domain_check_cap, i32 (%struct.irq_domain*, %struct.device*, i32, %struct.irq_alloc_info*)* null, void (%struct.irq_alloc_info*, i32)* null, void (%struct.irq_alloc_info*, %struct.msi_desc*)* @pci_msi_domain_set_desc, i32 (%struct.irq_domain*, %struct.msi_desc*, i32)* @pci_msi_domain_handle_error, i32 (%struct.irq_domain*, %struct.device*, i32)* null, void (%struct.irq_domain*, %struct.device*)* null }, align 8, !dbg !4544
@of_fwnode_ops = external dso_local constant %struct.fwnode_operations, align 8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local void @arch_restore_msi_irqs(%struct.pci_dev* %dev) #0 !dbg !4638 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !4639, metadata !DIExpression()), !dbg !4640
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4641
  call void @default_restore_msi_irqs(%struct.pci_dev* %0) #8, !dbg !4642
  ret void, !dbg !4643
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @default_restore_msi_irqs(%struct.pci_dev* %dev) #0 !dbg !4644 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %entry1 = alloca %struct.msi_desc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.msi_desc*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp10 = alloca %struct.msi_desc*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !4645, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !4647, metadata !DIExpression()), !dbg !4648
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4649, metadata !DIExpression()), !dbg !4652
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4652
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !4652
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 14, !dbg !4652
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list, i32 0, i32 0, !dbg !4652
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4652
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !4652
  store i8* %2, i8** %__mptr, align 8, !dbg !4652
  br label %do.body, !dbg !4652

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4653

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !4652
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !4652
  %4 = bitcast i8* %add.ptr to %struct.msi_desc*, !dbg !4652
  store %struct.msi_desc* %4, %struct.msi_desc** %tmp, align 8, !dbg !4653
  %5 = load %struct.msi_desc*, %struct.msi_desc** %tmp, align 8, !dbg !4652
  store %struct.msi_desc* %5, %struct.msi_desc** %entry1, align 8, !dbg !4655
  br label %for.cond, !dbg !4655

for.cond:                                         ; preds = %do.end9, %do.end
  %6 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !4656
  %list = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %6, i32 0, i32 0, !dbg !4656
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4656
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !4656
  %msi_list4 = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 14, !dbg !4656
  %cmp = icmp eq %struct.list_head* %list, %msi_list4, !dbg !4656
  %lnot = xor i1 %cmp, true, !dbg !4656
  br i1 %lnot, label %for.body, label %for.end, !dbg !4655

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4658
  %9 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !4659
  %irq = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %9, i32 0, i32 1, !dbg !4660
  %10 = load i32, i32* %irq, align 8, !dbg !4660
  call void @default_restore_msi_irq(%struct.pci_dev* %8, i32 %10) #8, !dbg !4661
  br label %for.inc, !dbg !4661

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !4662, metadata !DIExpression()), !dbg !4664
  %11 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !4664
  %list6 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %11, i32 0, i32 0, !dbg !4664
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %list6, i32 0, i32 0, !dbg !4664
  %12 = load %struct.list_head*, %struct.list_head** %next7, align 8, !dbg !4664
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !4664
  store i8* %13, i8** %__mptr5, align 8, !dbg !4664
  br label %do.body8, !dbg !4664

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !4665

do.end9:                                          ; preds = %do.body8
  %14 = load i8*, i8** %__mptr5, align 8, !dbg !4664
  %add.ptr11 = getelementptr i8, i8* %14, i64 0, !dbg !4664
  %15 = bitcast i8* %add.ptr11 to %struct.msi_desc*, !dbg !4664
  store %struct.msi_desc* %15, %struct.msi_desc** %tmp10, align 8, !dbg !4665
  %16 = load %struct.msi_desc*, %struct.msi_desc** %tmp10, align 8, !dbg !4664
  store %struct.msi_desc* %16, %struct.msi_desc** %entry1, align 8, !dbg !4656
  br label %for.cond, !dbg !4656, !llvm.loop !4667

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4669
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__pci_msi_desc_mask_irq(%struct.msi_desc* %desc, i32 %mask, i32 %flag) #0 !dbg !4670 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.msi_desc*, align 8
  %mask.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %mask_bits = alloca i32, align 4
  store %struct.msi_desc* %desc, %struct.msi_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc.addr, metadata !4673, metadata !DIExpression()), !dbg !4674
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !4675, metadata !DIExpression()), !dbg !4676
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !4677, metadata !DIExpression()), !dbg !4678
  call void @llvm.dbg.declare(metadata i32* %mask_bits, metadata !4679, metadata !DIExpression()), !dbg !4680
  %0 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !4681
  %1 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %0, i32 0, i32 8, !dbg !4682
  %2 = bitcast %union.anon.65* %1 to %struct.anon.66*, !dbg !4682
  %masked = getelementptr inbounds %struct.anon.66, %struct.anon.66* %2, i32 0, i32 0, !dbg !4682
  %3 = load i32, i32* %masked, align 8, !dbg !4682
  store i32 %3, i32* %mask_bits, align 4, !dbg !4680
  %4 = load i32, i32* @pci_msi_ignore_mask, align 4, !dbg !4683
  %tobool = icmp ne i32 %4, 0, !dbg !4683
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4685

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !4686
  %6 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %5, i32 0, i32 8, !dbg !4687
  %7 = bitcast %union.anon.65* %6 to %struct.anon.66*, !dbg !4687
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %7, i32 0, i32 1, !dbg !4687
  %8 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !4688
  %bf.load = load i16, i16* %8, align 4, !dbg !4688
  %bf.lshr = lshr i16 %bf.load, 7, !dbg !4688
  %bf.clear = and i16 %bf.lshr, 1, !dbg !4688
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !4688
  %tobool1 = icmp ne i8 %bf.cast, 0, !dbg !4686
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4689

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !4690
  br label %return, !dbg !4690

if.end:                                           ; preds = %lor.lhs.false
  %9 = load i32, i32* %mask.addr, align 4, !dbg !4691
  %neg = xor i32 %9, -1, !dbg !4692
  %10 = load i32, i32* %mask_bits, align 4, !dbg !4693
  %and = and i32 %10, %neg, !dbg !4693
  store i32 %and, i32* %mask_bits, align 4, !dbg !4693
  %11 = load i32, i32* %flag.addr, align 4, !dbg !4694
  %12 = load i32, i32* %mask_bits, align 4, !dbg !4695
  %or = or i32 %12, %11, !dbg !4695
  store i32 %or, i32* %mask_bits, align 4, !dbg !4695
  %13 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !4696
  %call = call %struct.pci_dev* @msi_desc_to_pci_dev(%struct.msi_desc* %13) #8, !dbg !4697
  %14 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !4698
  %15 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %14, i32 0, i32 8, !dbg !4699
  %16 = bitcast %union.anon.65* %15 to %struct.anon.66*, !dbg !4699
  %17 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %16, i32 0, i32 2, !dbg !4699
  %mask_pos = bitcast %union.anon.68* %17 to i8*, !dbg !4699
  %18 = load i8, i8* %mask_pos, align 8, !dbg !4699
  %conv = zext i8 %18 to i32, !dbg !4698
  %19 = load i32, i32* %mask_bits, align 4, !dbg !4700
  %call2 = call i32 @pci_write_config_dword(%struct.pci_dev* %call, i32 %conv, i32 %19) #8, !dbg !4701
  %20 = load i32, i32* %mask_bits, align 4, !dbg !4702
  store i32 %20, i32* %retval, align 4, !dbg !4703
  br label %return, !dbg !4703

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !4704
  ret i32 %21, !dbg !4704
}

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_dword(%struct.pci_dev*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.pci_dev* @msi_desc_to_pci_dev(%struct.msi_desc* %desc) #0 !dbg !4705 {
entry:
  %desc.addr = alloca %struct.msi_desc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  store %struct.msi_desc* %desc, %struct.msi_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc.addr, metadata !4708, metadata !DIExpression()), !dbg !4709
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4710, metadata !DIExpression()), !dbg !4712
  %0 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !4712
  %dev = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %0, i32 0, i32 3, !dbg !4712
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4712
  %2 = bitcast %struct.device* %1 to i8*, !dbg !4712
  store i8* %2, i8** %__mptr, align 8, !dbg !4712
  br label %do.body, !dbg !4712

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4713

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !4712
  %add.ptr = getelementptr i8, i8* %3, i64 -176, !dbg !4712
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !4712
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !4713
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !4712
  ret %struct.pci_dev* %5, !dbg !4715
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__pci_msix_desc_mask_irq(%struct.msi_desc* %desc, i32 %flag) #0 !dbg !4716 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca %struct.msi_desc*, align 8
  %flag.addr = alloca i32, align 4
  %mask_bits = alloca i32, align 4
  %desc_addr = alloca i8*, align 8
  store %struct.msi_desc* %desc, %struct.msi_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc.addr, metadata !4719, metadata !DIExpression()), !dbg !4720
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !4721, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.declare(metadata i32* %mask_bits, metadata !4723, metadata !DIExpression()), !dbg !4724
  %0 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !4725
  %1 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %0, i32 0, i32 8, !dbg !4726
  %2 = bitcast %union.anon.65* %1 to %struct.anon.66*, !dbg !4726
  %masked = getelementptr inbounds %struct.anon.66, %struct.anon.66* %2, i32 0, i32 0, !dbg !4726
  %3 = load i32, i32* %masked, align 8, !dbg !4726
  store i32 %3, i32* %mask_bits, align 4, !dbg !4724
  call void @llvm.dbg.declare(metadata i8** %desc_addr, metadata !4727, metadata !DIExpression()), !dbg !4728
  %4 = load i32, i32* @pci_msi_ignore_mask, align 4, !dbg !4729
  %tobool = icmp ne i32 %4, 0, !dbg !4729
  br i1 %tobool, label %if.then, label %if.end, !dbg !4731

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4732
  br label %return, !dbg !4732

if.end:                                           ; preds = %entry
  %5 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !4733
  %call = call i8* @pci_msix_desc_addr(%struct.msi_desc* %5) #8, !dbg !4734
  store i8* %call, i8** %desc_addr, align 8, !dbg !4735
  %6 = load i8*, i8** %desc_addr, align 8, !dbg !4736
  %tobool1 = icmp ne i8* %6, null, !dbg !4736
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !4738

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4739
  br label %return, !dbg !4739

if.end3:                                          ; preds = %if.end
  %7 = load i32, i32* %mask_bits, align 4, !dbg !4740
  %and = and i32 %7, -2, !dbg !4740
  store i32 %and, i32* %mask_bits, align 4, !dbg !4740
  %8 = load i32, i32* %flag.addr, align 4, !dbg !4741
  %and4 = and i32 %8, 1, !dbg !4743
  %tobool5 = icmp ne i32 %and4, 0, !dbg !4743
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !4744

if.then6:                                         ; preds = %if.end3
  %9 = load i32, i32* %mask_bits, align 4, !dbg !4745
  %or = or i32 %9, 1, !dbg !4745
  store i32 %or, i32* %mask_bits, align 4, !dbg !4745
  br label %if.end7, !dbg !4746

if.end7:                                          ; preds = %if.then6, %if.end3
  %10 = load i32, i32* %mask_bits, align 4, !dbg !4747
  %11 = load i8*, i8** %desc_addr, align 8, !dbg !4748
  %add.ptr = getelementptr i8, i8* %11, i64 12, !dbg !4749
  call void @writel(i32 %10, i8* %add.ptr) #8, !dbg !4750
  %12 = load i32, i32* %mask_bits, align 4, !dbg !4751
  store i32 %12, i32* %retval, align 4, !dbg !4752
  br label %return, !dbg !4752

return:                                           ; preds = %if.end7, %if.then2, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !4753
  ret i32 %13, !dbg !4753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_msix_desc_addr(%struct.msi_desc* %desc) #0 !dbg !4754 {
entry:
  %retval = alloca i8*, align 8
  %desc.addr = alloca %struct.msi_desc*, align 8
  store %struct.msi_desc* %desc, %struct.msi_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc.addr, metadata !4757, metadata !DIExpression()), !dbg !4758
  %0 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !4759
  %1 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %0, i32 0, i32 8, !dbg !4761
  %2 = bitcast %union.anon.65* %1 to %struct.anon.66*, !dbg !4761
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %2, i32 0, i32 1, !dbg !4761
  %3 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !4762
  %bf.load = load i16, i16* %3, align 4, !dbg !4762
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !4762
  %bf.clear = and i16 %bf.lshr, 1, !dbg !4762
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !4762
  %tobool = icmp ne i8 %bf.cast, 0, !dbg !4759
  br i1 %tobool, label %if.then, label %if.end, !dbg !4763

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !4764
  br label %return, !dbg !4764

if.end:                                           ; preds = %entry
  %4 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !4765
  %5 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %4, i32 0, i32 8, !dbg !4766
  %6 = bitcast %union.anon.65* %5 to %struct.anon.66*, !dbg !4766
  %7 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %6, i32 0, i32 2, !dbg !4766
  %mask_base = bitcast %union.anon.68* %7 to i8**, !dbg !4766
  %8 = load i8*, i8** %mask_base, align 8, !dbg !4766
  %9 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !4767
  %10 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %9, i32 0, i32 8, !dbg !4768
  %11 = bitcast %union.anon.65* %10 to %struct.anon.66*, !dbg !4768
  %msi_attrib1 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %11, i32 0, i32 1, !dbg !4768
  %entry_nr = getelementptr inbounds %struct.anon.67, %struct.anon.67* %msi_attrib1, i32 0, i32 1, !dbg !4769
  %12 = load i16, i16* %entry_nr, align 2, !dbg !4769
  %conv = zext i16 %12 to i32, !dbg !4767
  %mul = mul i32 %conv, 16, !dbg !4770
  %idx.ext = sext i32 %mul to i64, !dbg !4771
  %add.ptr = getelementptr i8, i8* %8, i64 %idx.ext, !dbg !4771
  store i8* %add.ptr, i8** %retval, align 8, !dbg !4772
  br label %return, !dbg !4772

return:                                           ; preds = %if.end, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !4773
  ret i8* %13, !dbg !4773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #0 !dbg !4774 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !4780, metadata !DIExpression()), !dbg !4781
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !4782, metadata !DIExpression()), !dbg !4781
  %0 = load i32, i32* %val.addr, align 4, !dbg !4781
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !4781
  %2 = bitcast i8* %1 to i32*, !dbg !4781
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #9, !dbg !4781, !srcloc !4783
  ret void, !dbg !4781
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_msi_mask_irq(%struct.irq_data* %data) #0 !dbg !4784 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !4785, metadata !DIExpression()), !dbg !4786
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !4787
  call void @msi_set_mask_bit(%struct.irq_data* %0, i32 1) #8, !dbg !4788
  ret void, !dbg !4789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msi_set_mask_bit(%struct.irq_data* %data, i32 %flag) #0 !dbg !4790 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  %flag.addr = alloca i32, align 4
  %desc = alloca %struct.msi_desc*, align 8
  %offset = alloca i32, align 4
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !4793, metadata !DIExpression()), !dbg !4794
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !4795, metadata !DIExpression()), !dbg !4796
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc, metadata !4797, metadata !DIExpression()), !dbg !4798
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !4799
  %call = call %struct.msi_desc* @irq_data_get_msi_desc(%struct.irq_data* %0) #8, !dbg !4800
  store %struct.msi_desc* %call, %struct.msi_desc** %desc, align 8, !dbg !4798
  %1 = load %struct.msi_desc*, %struct.msi_desc** %desc, align 8, !dbg !4801
  %2 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %1, i32 0, i32 8, !dbg !4803
  %3 = bitcast %union.anon.65* %2 to %struct.anon.66*, !dbg !4803
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %3, i32 0, i32 1, !dbg !4803
  %4 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !4804
  %bf.load = load i16, i16* %4, align 4, !dbg !4804
  %bf.clear = and i16 %bf.load, 1, !dbg !4804
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !4804
  %tobool = icmp ne i8 %bf.cast, 0, !dbg !4801
  br i1 %tobool, label %if.then, label %if.else, !dbg !4805

if.then:                                          ; preds = %entry
  %5 = load %struct.msi_desc*, %struct.msi_desc** %desc, align 8, !dbg !4806
  %6 = load i32, i32* %flag.addr, align 4, !dbg !4808
  call void @msix_mask_irq(%struct.msi_desc* %5, i32 %6) #8, !dbg !4809
  %7 = load %struct.msi_desc*, %struct.msi_desc** %desc, align 8, !dbg !4810
  %8 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %7, i32 0, i32 8, !dbg !4811
  %9 = bitcast %union.anon.65* %8 to %struct.anon.66*, !dbg !4811
  %10 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %9, i32 0, i32 2, !dbg !4811
  %mask_base = bitcast %union.anon.68* %10 to i8**, !dbg !4811
  %11 = load i8*, i8** %mask_base, align 8, !dbg !4811
  %call1 = call i32 @readl(i8* %11) #8, !dbg !4812
  br label %if.end, !dbg !4813

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !4814, metadata !DIExpression()), !dbg !4816
  %12 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !4817
  %irq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %12, i32 0, i32 1, !dbg !4818
  %13 = load i32, i32* %irq, align 4, !dbg !4818
  %14 = load %struct.msi_desc*, %struct.msi_desc** %desc, align 8, !dbg !4819
  %irq2 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %14, i32 0, i32 1, !dbg !4820
  %15 = load i32, i32* %irq2, align 8, !dbg !4820
  %sub = sub i32 %13, %15, !dbg !4821
  store i32 %sub, i32* %offset, align 4, !dbg !4816
  %16 = load %struct.msi_desc*, %struct.msi_desc** %desc, align 8, !dbg !4822
  %17 = load i32, i32* %offset, align 4, !dbg !4823
  %shl = shl i32 1, %17, !dbg !4824
  %18 = load i32, i32* %flag.addr, align 4, !dbg !4825
  %19 = load i32, i32* %offset, align 4, !dbg !4826
  %shl3 = shl i32 %18, %19, !dbg !4827
  call void @msi_mask_irq(%struct.msi_desc* %16, i32 %shl, i32 %shl3) #8, !dbg !4828
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4829
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_msi_unmask_irq(%struct.irq_data* %data) #0 !dbg !4830 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !4831, metadata !DIExpression()), !dbg !4832
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !4833
  call void @msi_set_mask_bit(%struct.irq_data* %0, i32 0) #8, !dbg !4834
  ret void, !dbg !4835
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @default_restore_msi_irq(%struct.pci_dev* %dev, i32 %irq) #0 !dbg !4836 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %irq.addr = alloca i32, align 4
  %entry1 = alloca %struct.msi_desc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.msi_desc*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp13 = alloca %struct.msi_desc*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !4839, metadata !DIExpression()), !dbg !4840
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !4841, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !4843, metadata !DIExpression()), !dbg !4844
  store %struct.msi_desc* null, %struct.msi_desc** %entry1, align 8, !dbg !4845
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4846
  %msix_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !4848
  %1 = bitcast [5 x i8]* %msix_enabled to i40*, !dbg !4848
  %bf.load = load i40, i40* %1, align 1, !dbg !4848
  %bf.lshr = lshr i40 %bf.load, 13, !dbg !4848
  %bf.clear = and i40 %bf.lshr, 1, !dbg !4848
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !4848
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !4846
  br i1 %tobool, label %if.then, label %if.else, !dbg !4849

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4850, metadata !DIExpression()), !dbg !4854
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4854
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !4854
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 14, !dbg !4854
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list, i32 0, i32 0, !dbg !4854
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4854
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !4854
  store i8* %4, i8** %__mptr, align 8, !dbg !4854
  br label %do.body, !dbg !4854

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !4855

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !4854
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !4854
  %6 = bitcast i8* %add.ptr to %struct.msi_desc*, !dbg !4854
  store %struct.msi_desc* %6, %struct.msi_desc** %tmp, align 8, !dbg !4855
  %7 = load %struct.msi_desc*, %struct.msi_desc** %tmp, align 8, !dbg !4854
  store %struct.msi_desc* %7, %struct.msi_desc** %entry1, align 8, !dbg !4857
  br label %for.cond, !dbg !4857

for.cond:                                         ; preds = %do.end12, %do.end
  %8 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !4858
  %list = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %8, i32 0, i32 0, !dbg !4858
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4858
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !4858
  %msi_list4 = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 14, !dbg !4858
  %cmp = icmp eq %struct.list_head* %list, %msi_list4, !dbg !4858
  %lnot = xor i1 %cmp, true, !dbg !4858
  br i1 %lnot, label %for.body, label %for.end, !dbg !4857

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %irq.addr, align 4, !dbg !4860
  %11 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !4863
  %irq5 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %11, i32 0, i32 1, !dbg !4864
  %12 = load i32, i32* %irq5, align 8, !dbg !4864
  %cmp6 = icmp eq i32 %10, %12, !dbg !4865
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !4866

if.then7:                                         ; preds = %for.body
  br label %for.end, !dbg !4867

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4868

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !4869, metadata !DIExpression()), !dbg !4871
  %13 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !4871
  %list9 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %13, i32 0, i32 0, !dbg !4871
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %list9, i32 0, i32 0, !dbg !4871
  %14 = load %struct.list_head*, %struct.list_head** %next10, align 8, !dbg !4871
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !4871
  store i8* %15, i8** %__mptr8, align 8, !dbg !4871
  br label %do.body11, !dbg !4871

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !4872

do.end12:                                         ; preds = %do.body11
  %16 = load i8*, i8** %__mptr8, align 8, !dbg !4871
  %add.ptr14 = getelementptr i8, i8* %16, i64 0, !dbg !4871
  %17 = bitcast i8* %add.ptr14 to %struct.msi_desc*, !dbg !4871
  store %struct.msi_desc* %17, %struct.msi_desc** %tmp13, align 8, !dbg !4872
  %18 = load %struct.msi_desc*, %struct.msi_desc** %tmp13, align 8, !dbg !4871
  store %struct.msi_desc* %18, %struct.msi_desc** %entry1, align 8, !dbg !4858
  br label %for.cond, !dbg !4858, !llvm.loop !4874

for.end:                                          ; preds = %if.then7, %for.cond
  br label %if.end22, !dbg !4876

if.else:                                          ; preds = %entry
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !4877
  %msi_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 46, !dbg !4879
  %20 = bitcast [5 x i8]* %msi_enabled to i40*, !dbg !4879
  %bf.load15 = load i40, i40* %20, align 1, !dbg !4879
  %bf.lshr16 = lshr i40 %bf.load15, 12, !dbg !4879
  %bf.clear17 = and i40 %bf.lshr16, 1, !dbg !4879
  %bf.cast18 = trunc i40 %bf.clear17 to i32, !dbg !4879
  %tobool19 = icmp ne i32 %bf.cast18, 0, !dbg !4877
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !4880

if.then20:                                        ; preds = %if.else
  %21 = load i32, i32* %irq.addr, align 4, !dbg !4881
  %call = call %struct.msi_desc* @irq_get_msi_desc(i32 %21) #8, !dbg !4883
  store %struct.msi_desc* %call, %struct.msi_desc** %entry1, align 8, !dbg !4884
  br label %if.end21, !dbg !4885

if.end21:                                         ; preds = %if.then20, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %for.end
  %22 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !4886
  %tobool23 = icmp ne %struct.msi_desc* %22, null, !dbg !4886
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !4888

if.then24:                                        ; preds = %if.end22
  %23 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !4889
  %24 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !4890
  %msg = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %24, i32 0, i32 4, !dbg !4891
  call void @__pci_write_msi_msg(%struct.msi_desc* %23, %struct.msi_msg* %msg) #8, !dbg !4892
  br label %if.end25, !dbg !4892

if.end25:                                         ; preds = %if.then24, %if.end22
  ret void, !dbg !4893
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @__pci_read_msi_msg(%struct.msi_desc* %entry1, %struct.msi_msg* %msg) #0 !dbg !4894 {
entry:
  %entry.addr = alloca %struct.msi_desc*, align 8
  %msg.addr = alloca %struct.msi_msg*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %base = alloca i8*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %pos = alloca i32, align 4
  %data46 = alloca i16, align 2
  store %struct.msi_desc* %entry1, %struct.msi_desc** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry.addr, metadata !4897, metadata !DIExpression()), !dbg !4898
  store %struct.msi_msg* %msg, %struct.msi_msg** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_msg** %msg.addr, metadata !4899, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !4901, metadata !DIExpression()), !dbg !4902
  %0 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !4903
  %call = call %struct.pci_dev* @msi_desc_to_pci_dev(%struct.msi_desc* %0) #8, !dbg !4904
  store %struct.pci_dev* %call, %struct.pci_dev** %dev, align 8, !dbg !4902
  br label %do.body, !dbg !4905

do.body:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4906
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 26, !dbg !4906
  %2 = load i32, i32* %current_state, align 8, !dbg !4906
  %cmp = icmp ne i32 %2, 0, !dbg !4906
  %lnot = xor i1 %cmp, true, !dbg !4906
  %lnot2 = xor i1 %lnot, true, !dbg !4906
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4906
  %conv = sext i32 %lnot.ext to i64, !dbg !4906
  %tobool = icmp ne i64 %conv, 0, !dbg !4906
  br i1 %tobool, label %if.then, label %if.end, !dbg !4909

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !4906

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !4910

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !4912

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !4910

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 281, i32 0, i64 12) #9, !dbg !4914, !srcloc !4916
  br label %do.end6, !dbg !4914

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !4910

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 246) #9, !dbg !4917, !srcloc !4920
  unreachable, !dbg !4921

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !4910

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !4910

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !4909

do.end10:                                         ; preds = %if.end
  %3 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !4922
  %4 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %3, i32 0, i32 8, !dbg !4924
  %5 = bitcast %union.anon.65* %4 to %struct.anon.66*, !dbg !4924
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %5, i32 0, i32 1, !dbg !4924
  %6 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !4925
  %bf.load = load i16, i16* %6, align 4, !dbg !4925
  %bf.clear = and i16 %bf.load, 1, !dbg !4925
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !4925
  %tobool11 = icmp ne i8 %bf.cast, 0, !dbg !4922
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !4926

if.then12:                                        ; preds = %do.end10
  call void @llvm.dbg.declare(metadata i8** %base, metadata !4927, metadata !DIExpression()), !dbg !4929
  %7 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !4930
  %call13 = call i8* @pci_msix_desc_addr(%struct.msi_desc* %7) #8, !dbg !4931
  store i8* %call13, i8** %base, align 8, !dbg !4929
  %8 = load i8*, i8** %base, align 8, !dbg !4932
  %tobool14 = icmp ne i8* %8, null, !dbg !4932
  br i1 %tobool14, label %if.end39, label %if.then15, !dbg !4934

if.then15:                                        ; preds = %if.then12
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !4935, metadata !DIExpression()), !dbg !4938
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !4938
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !4939
  %tobool16 = icmp ne i32 %9, 0, !dbg !4939
  %lnot17 = xor i1 %tobool16, true, !dbg !4939
  %lnot19 = xor i1 %lnot17, true, !dbg !4939
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !4939
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !4939
  %tobool22 = icmp ne i64 %conv21, 0, !dbg !4939
  br i1 %tobool22, label %if.then23, label %if.end32, !dbg !4938

if.then23:                                        ; preds = %if.then15
  br label %do.body24, !dbg !4939

do.body24:                                        ; preds = %if.then23
  br label %do.body25, !dbg !4941

do.body25:                                        ; preds = %do.body24
  br label %do.end26, !dbg !4943

do.end26:                                         ; preds = %do.body25
  br label %do.body27, !dbg !4941

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 287, i32 2305, i64 12) #9, !dbg !4945, !srcloc !4947
  br label %do.end28, !dbg !4945

do.end28:                                         ; preds = %do.body27
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 247) #9, !dbg !4948, !srcloc !4950
  br label %do.body29, !dbg !4941

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !4951

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !4941

do.end31:                                         ; preds = %do.end30
  br label %if.end32, !dbg !4941

if.end32:                                         ; preds = %do.end31, %if.then15
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !4938
  %tobool33 = icmp ne i32 %10, 0, !dbg !4938
  %lnot34 = xor i1 %tobool33, true, !dbg !4938
  %lnot36 = xor i1 %lnot34, true, !dbg !4938
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !4938
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !4938
  store i64 %conv38, i64* %tmp, align 8, !dbg !4939
  %11 = load i64, i64* %tmp, align 8, !dbg !4938
  br label %if.end67, !dbg !4953

if.end39:                                         ; preds = %if.then12
  %12 = load i8*, i8** %base, align 8, !dbg !4954
  %add.ptr = getelementptr i8, i8* %12, i64 0, !dbg !4955
  %call40 = call i32 @readl(i8* %add.ptr) #8, !dbg !4956
  %13 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !4957
  %address_lo = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %13, i32 0, i32 0, !dbg !4958
  store i32 %call40, i32* %address_lo, align 4, !dbg !4959
  %14 = load i8*, i8** %base, align 8, !dbg !4960
  %add.ptr41 = getelementptr i8, i8* %14, i64 4, !dbg !4961
  %call42 = call i32 @readl(i8* %add.ptr41) #8, !dbg !4962
  %15 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !4963
  %address_hi = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %15, i32 0, i32 1, !dbg !4964
  store i32 %call42, i32* %address_hi, align 4, !dbg !4965
  %16 = load i8*, i8** %base, align 8, !dbg !4966
  %add.ptr43 = getelementptr i8, i8* %16, i64 8, !dbg !4967
  %call44 = call i32 @readl(i8* %add.ptr43) #8, !dbg !4968
  %17 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !4969
  %data = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %17, i32 0, i32 2, !dbg !4970
  store i32 %call44, i32* %data, align 4, !dbg !4971
  br label %if.end67, !dbg !4972

if.else:                                          ; preds = %do.end10
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !4973, metadata !DIExpression()), !dbg !4975
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4976
  %msi_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 15, !dbg !4977
  %19 = load i8, i8* %msi_cap, align 1, !dbg !4977
  %conv45 = zext i8 %19 to i32, !dbg !4976
  store i32 %conv45, i32* %pos, align 4, !dbg !4975
  call void @llvm.dbg.declare(metadata i16* %data46, metadata !4978, metadata !DIExpression()), !dbg !4979
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4980
  %21 = load i32, i32* %pos, align 4, !dbg !4981
  %add = add i32 %21, 4, !dbg !4982
  %22 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !4983
  %address_lo47 = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %22, i32 0, i32 0, !dbg !4984
  %call48 = call i32 @pci_read_config_dword(%struct.pci_dev* %20, i32 %add, i32* %address_lo47) #8, !dbg !4985
  %23 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !4986
  %24 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %23, i32 0, i32 8, !dbg !4988
  %25 = bitcast %union.anon.65* %24 to %struct.anon.66*, !dbg !4988
  %msi_attrib49 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %25, i32 0, i32 1, !dbg !4988
  %26 = bitcast %struct.anon.67* %msi_attrib49 to i16*, !dbg !4989
  %bf.load50 = load i16, i16* %26, align 4, !dbg !4989
  %bf.lshr = lshr i16 %bf.load50, 8, !dbg !4989
  %bf.clear51 = and i16 %bf.lshr, 1, !dbg !4989
  %bf.cast52 = trunc i16 %bf.clear51 to i8, !dbg !4989
  %tobool53 = icmp ne i8 %bf.cast52, 0, !dbg !4986
  br i1 %tobool53, label %if.then54, label %if.else60, !dbg !4990

if.then54:                                        ; preds = %if.else
  %27 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4991
  %28 = load i32, i32* %pos, align 4, !dbg !4993
  %add55 = add i32 %28, 8, !dbg !4994
  %29 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !4995
  %address_hi56 = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %29, i32 0, i32 1, !dbg !4996
  %call57 = call i32 @pci_read_config_dword(%struct.pci_dev* %27, i32 %add55, i32* %address_hi56) #8, !dbg !4997
  %30 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4998
  %31 = load i32, i32* %pos, align 4, !dbg !4999
  %add58 = add i32 %31, 12, !dbg !5000
  %call59 = call i32 @pci_read_config_word(%struct.pci_dev* %30, i32 %add58, i16* %data46) #8, !dbg !5001
  br label %if.end64, !dbg !5002

if.else60:                                        ; preds = %if.else
  %32 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !5003
  %address_hi61 = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %32, i32 0, i32 1, !dbg !5005
  store i32 0, i32* %address_hi61, align 4, !dbg !5006
  %33 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5007
  %34 = load i32, i32* %pos, align 4, !dbg !5008
  %add62 = add i32 %34, 8, !dbg !5009
  %call63 = call i32 @pci_read_config_word(%struct.pci_dev* %33, i32 %add62, i16* %data46) #8, !dbg !5010
  br label %if.end64

if.end64:                                         ; preds = %if.else60, %if.then54
  %35 = load i16, i16* %data46, align 2, !dbg !5011
  %conv65 = zext i16 %35 to i32, !dbg !5011
  %36 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !5012
  %data66 = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %36, i32 0, i32 2, !dbg !5013
  store i32 %conv65, i32* %data66, align 4, !dbg !5014
  br label %if.end67

if.end67:                                         ; preds = %if.end32, %if.end64, %if.end39
  ret void, !dbg !5015
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #0 !dbg !5016 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !5021, metadata !DIExpression()), !dbg !5022
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5023, metadata !DIExpression()), !dbg !5022
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !5022
  %1 = bitcast i8* %0 to i32*, !dbg !5022
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #9, !dbg !5022, !srcloc !5024
  store i32 %2, i32* %ret, align 4, !dbg !5022
  %3 = load i32, i32* %ret, align 4, !dbg !5022
  ret i32 %3, !dbg !5022
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_dword(%struct.pci_dev*, i32, i32*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @__pci_write_msi_msg(%struct.msi_desc* %entry1, %struct.msi_msg* %msg) #0 !dbg !5025 {
entry:
  %entry.addr = alloca %struct.msi_desc*, align 8
  %msg.addr = alloca %struct.msi_msg*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %base = alloca i8*, align 8
  %pos = alloca i32, align 4
  %msgctl = alloca i16, align 2
  store %struct.msi_desc* %entry1, %struct.msi_desc** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry.addr, metadata !5026, metadata !DIExpression()), !dbg !5027
  store %struct.msi_msg* %msg, %struct.msi_msg** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_msg** %msg.addr, metadata !5028, metadata !DIExpression()), !dbg !5029
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !5030, metadata !DIExpression()), !dbg !5031
  %0 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !5032
  %call = call %struct.pci_dev* @msi_desc_to_pci_dev(%struct.msi_desc* %0) #8, !dbg !5033
  store %struct.pci_dev* %call, %struct.pci_dev** %dev, align 8, !dbg !5031
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5034
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 26, !dbg !5036
  %2 = load i32, i32* %current_state, align 8, !dbg !5036
  %cmp = icmp ne i32 %2, 0, !dbg !5037
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5038

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5039
  %call2 = call zeroext i1 @pci_dev_is_disconnected(%struct.pci_dev* %3) #8, !dbg !5040
  br i1 %call2, label %if.then, label %if.else, !dbg !5041

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end46, !dbg !5042

if.else:                                          ; preds = %lor.lhs.false
  %4 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !5044
  %5 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %4, i32 0, i32 8, !dbg !5046
  %6 = bitcast %union.anon.65* %5 to %struct.anon.66*, !dbg !5046
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %6, i32 0, i32 1, !dbg !5046
  %7 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !5047
  %bf.load = load i16, i16* %7, align 4, !dbg !5047
  %bf.clear = and i16 %bf.load, 1, !dbg !5047
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !5047
  %tobool = icmp ne i8 %bf.cast, 0, !dbg !5044
  br i1 %tobool, label %if.then3, label %if.else9, !dbg !5048

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %base, metadata !5049, metadata !DIExpression()), !dbg !5051
  %8 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !5052
  %call4 = call i8* @pci_msix_desc_addr(%struct.msi_desc* %8) #8, !dbg !5053
  store i8* %call4, i8** %base, align 8, !dbg !5051
  %9 = load i8*, i8** %base, align 8, !dbg !5054
  %tobool5 = icmp ne i8* %9, null, !dbg !5054
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !5056

if.then6:                                         ; preds = %if.then3
  br label %skip, !dbg !5057

if.end:                                           ; preds = %if.then3
  %10 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !5058
  %address_lo = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %10, i32 0, i32 0, !dbg !5059
  %11 = load i32, i32* %address_lo, align 4, !dbg !5059
  %12 = load i8*, i8** %base, align 8, !dbg !5060
  %add.ptr = getelementptr i8, i8* %12, i64 0, !dbg !5061
  call void @writel(i32 %11, i8* %add.ptr) #8, !dbg !5062
  %13 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !5063
  %address_hi = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %13, i32 0, i32 1, !dbg !5064
  %14 = load i32, i32* %address_hi, align 4, !dbg !5064
  %15 = load i8*, i8** %base, align 8, !dbg !5065
  %add.ptr7 = getelementptr i8, i8* %15, i64 4, !dbg !5066
  call void @writel(i32 %14, i8* %add.ptr7) #8, !dbg !5067
  %16 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !5068
  %data = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %16, i32 0, i32 2, !dbg !5069
  %17 = load i32, i32* %data, align 4, !dbg !5069
  %18 = load i8*, i8** %base, align 8, !dbg !5070
  %add.ptr8 = getelementptr i8, i8* %18, i64 8, !dbg !5071
  call void @writel(i32 %17, i8* %add.ptr8) #8, !dbg !5072
  br label %if.end45, !dbg !5073

if.else9:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5074, metadata !DIExpression()), !dbg !5076
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5077
  %msi_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 15, !dbg !5078
  %20 = load i8, i8* %msi_cap, align 1, !dbg !5078
  %conv = zext i8 %20 to i32, !dbg !5077
  store i32 %conv, i32* %pos, align 4, !dbg !5076
  call void @llvm.dbg.declare(metadata i16* %msgctl, metadata !5079, metadata !DIExpression()), !dbg !5080
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5081
  %22 = load i32, i32* %pos, align 4, !dbg !5082
  %add = add i32 %22, 2, !dbg !5083
  %call10 = call i32 @pci_read_config_word(%struct.pci_dev* %21, i32 %add, i16* %msgctl) #8, !dbg !5084
  %23 = load i16, i16* %msgctl, align 2, !dbg !5085
  %conv11 = zext i16 %23 to i32, !dbg !5085
  %and = and i32 %conv11, -113, !dbg !5085
  %conv12 = trunc i32 %and to i16, !dbg !5085
  store i16 %conv12, i16* %msgctl, align 2, !dbg !5085
  %24 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !5086
  %25 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %24, i32 0, i32 8, !dbg !5087
  %26 = bitcast %union.anon.65* %25 to %struct.anon.66*, !dbg !5087
  %msi_attrib13 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %26, i32 0, i32 1, !dbg !5087
  %27 = bitcast %struct.anon.67* %msi_attrib13 to i16*, !dbg !5088
  %bf.load14 = load i16, i16* %27, align 4, !dbg !5088
  %bf.lshr = lshr i16 %bf.load14, 1, !dbg !5088
  %bf.clear15 = and i16 %bf.lshr, 7, !dbg !5088
  %bf.cast16 = trunc i16 %bf.clear15 to i8, !dbg !5088
  %conv17 = zext i8 %bf.cast16 to i32, !dbg !5086
  %shl = shl i32 %conv17, 4, !dbg !5089
  %28 = load i16, i16* %msgctl, align 2, !dbg !5090
  %conv18 = zext i16 %28 to i32, !dbg !5090
  %or = or i32 %conv18, %shl, !dbg !5090
  %conv19 = trunc i32 %or to i16, !dbg !5090
  store i16 %conv19, i16* %msgctl, align 2, !dbg !5090
  %29 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5091
  %30 = load i32, i32* %pos, align 4, !dbg !5092
  %add20 = add i32 %30, 2, !dbg !5093
  %31 = load i16, i16* %msgctl, align 2, !dbg !5094
  %call21 = call i32 @pci_write_config_word(%struct.pci_dev* %29, i32 %add20, i16 zeroext %31) #8, !dbg !5095
  %32 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5096
  %33 = load i32, i32* %pos, align 4, !dbg !5097
  %add22 = add i32 %33, 4, !dbg !5098
  %34 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !5099
  %address_lo23 = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %34, i32 0, i32 0, !dbg !5100
  %35 = load i32, i32* %address_lo23, align 4, !dbg !5100
  %call24 = call i32 @pci_write_config_dword(%struct.pci_dev* %32, i32 %add22, i32 %35) #8, !dbg !5101
  %36 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !5102
  %37 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %36, i32 0, i32 8, !dbg !5104
  %38 = bitcast %union.anon.65* %37 to %struct.anon.66*, !dbg !5104
  %msi_attrib25 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %38, i32 0, i32 1, !dbg !5104
  %39 = bitcast %struct.anon.67* %msi_attrib25 to i16*, !dbg !5105
  %bf.load26 = load i16, i16* %39, align 4, !dbg !5105
  %bf.lshr27 = lshr i16 %bf.load26, 8, !dbg !5105
  %bf.clear28 = and i16 %bf.lshr27, 1, !dbg !5105
  %bf.cast29 = trunc i16 %bf.clear28 to i8, !dbg !5105
  %tobool30 = icmp ne i8 %bf.cast29, 0, !dbg !5102
  br i1 %tobool30, label %if.then31, label %if.else39, !dbg !5106

if.then31:                                        ; preds = %if.else9
  %40 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5107
  %41 = load i32, i32* %pos, align 4, !dbg !5109
  %add32 = add i32 %41, 8, !dbg !5110
  %42 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !5111
  %address_hi33 = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %42, i32 0, i32 1, !dbg !5112
  %43 = load i32, i32* %address_hi33, align 4, !dbg !5112
  %call34 = call i32 @pci_write_config_dword(%struct.pci_dev* %40, i32 %add32, i32 %43) #8, !dbg !5113
  %44 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5114
  %45 = load i32, i32* %pos, align 4, !dbg !5115
  %add35 = add i32 %45, 12, !dbg !5116
  %46 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !5117
  %data36 = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %46, i32 0, i32 2, !dbg !5118
  %47 = load i32, i32* %data36, align 4, !dbg !5118
  %conv37 = trunc i32 %47 to i16, !dbg !5117
  %call38 = call i32 @pci_write_config_word(%struct.pci_dev* %44, i32 %add35, i16 zeroext %conv37) #8, !dbg !5119
  br label %if.end44, !dbg !5120

if.else39:                                        ; preds = %if.else9
  %48 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5121
  %49 = load i32, i32* %pos, align 4, !dbg !5123
  %add40 = add i32 %49, 8, !dbg !5124
  %50 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !5125
  %data41 = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %50, i32 0, i32 2, !dbg !5126
  %51 = load i32, i32* %data41, align 4, !dbg !5126
  %conv42 = trunc i32 %51 to i16, !dbg !5125
  %call43 = call i32 @pci_write_config_word(%struct.pci_dev* %48, i32 %add40, i16 zeroext %conv42) #8, !dbg !5127
  br label %if.end44

if.end44:                                         ; preds = %if.else39, %if.then31
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then
  br label %skip, !dbg !5128

skip:                                             ; preds = %if.end46, %if.then6
  call void @llvm.dbg.label(metadata !5129), !dbg !5130
  %52 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !5131
  %msg47 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %52, i32 0, i32 4, !dbg !5132
  %53 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !5133
  %54 = bitcast %struct.msi_msg* %msg47 to i8*, !dbg !5134
  %55 = bitcast %struct.msi_msg* %53 to i8*, !dbg !5134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 4 %55, i64 12, i1 false), !dbg !5134
  %56 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !5135
  %write_msi_msg = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %56, i32 0, i32 6, !dbg !5137
  %57 = load void (%struct.msi_desc*, i8*)*, void (%struct.msi_desc*, i8*)** %write_msi_msg, align 8, !dbg !5137
  %tobool48 = icmp ne void (%struct.msi_desc*, i8*)* %57, null, !dbg !5135
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !5138

if.then49:                                        ; preds = %skip
  %58 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !5139
  %write_msi_msg50 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %58, i32 0, i32 6, !dbg !5140
  %59 = load void (%struct.msi_desc*, i8*)*, void (%struct.msi_desc*, i8*)** %write_msi_msg50, align 8, !dbg !5140
  %60 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !5141
  %61 = load %struct.msi_desc*, %struct.msi_desc** %entry.addr, align 8, !dbg !5142
  %write_msi_msg_data = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %61, i32 0, i32 7, !dbg !5143
  %62 = load i8*, i8** %write_msi_msg_data, align 8, !dbg !5143
  call void %59(%struct.msi_desc* %60, i8* %62) #8, !dbg !5139
  br label %if.end51, !dbg !5139

if.end51:                                         ; preds = %if.then49, %skip
  ret void, !dbg !5144
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_dev_is_disconnected(%struct.pci_dev* %dev) #0 !dbg !5145 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5150, metadata !DIExpression()), !dbg !5151
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5152
  %error_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 40, !dbg !5153
  %1 = load i32, i32* %error_state, align 4, !dbg !5153
  %cmp = icmp eq i32 %1, 3, !dbg !5154
  ret i1 %cmp, !dbg !5155
}

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_word(%struct.pci_dev*, i32, i16 zeroext) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_write_msi_msg(i32 %irq, %struct.msi_msg* %msg) #0 !dbg !5156 {
entry:
  %irq.addr = alloca i32, align 4
  %msg.addr = alloca %struct.msi_msg*, align 8
  %entry1 = alloca %struct.msi_desc*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5159, metadata !DIExpression()), !dbg !5160
  store %struct.msi_msg* %msg, %struct.msi_msg** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_msg** %msg.addr, metadata !5161, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !5163, metadata !DIExpression()), !dbg !5164
  %0 = load i32, i32* %irq.addr, align 4, !dbg !5165
  %call = call %struct.msi_desc* @irq_get_msi_desc(i32 %0) #8, !dbg !5166
  store %struct.msi_desc* %call, %struct.msi_desc** %entry1, align 8, !dbg !5164
  %1 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !5167
  %2 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !5168
  call void @__pci_write_msi_msg(%struct.msi_desc* %1, %struct.msi_msg* %2) #8, !dbg !5169
  ret void, !dbg !5170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.msi_desc* @irq_get_msi_desc(i32 %irq) #0 !dbg !5171 {
entry:
  %irq.addr = alloca i32, align 4
  %d = alloca %struct.irq_data*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5174, metadata !DIExpression()), !dbg !5175
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d, metadata !5176, metadata !DIExpression()), !dbg !5177
  %0 = load i32, i32* %irq.addr, align 4, !dbg !5178
  %call = call %struct.irq_data* @irq_get_irq_data(i32 %0) #8, !dbg !5179
  store %struct.irq_data* %call, %struct.irq_data** %d, align 8, !dbg !5177
  %1 = load %struct.irq_data*, %struct.irq_data** %d, align 8, !dbg !5180
  %tobool = icmp ne %struct.irq_data* %1, null, !dbg !5180
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5180

cond.true:                                        ; preds = %entry
  %2 = load %struct.irq_data*, %struct.irq_data** %d, align 8, !dbg !5181
  %common = getelementptr inbounds %struct.irq_data, %struct.irq_data* %2, i32 0, i32 3, !dbg !5182
  %3 = load %struct.irq_common_data*, %struct.irq_common_data** %common, align 8, !dbg !5182
  %msi_desc = getelementptr inbounds %struct.irq_common_data, %struct.irq_common_data* %3, i32 0, i32 2, !dbg !5183
  %4 = load %struct.msi_desc*, %struct.msi_desc** %msi_desc, align 8, !dbg !5183
  br label %cond.end, !dbg !5180

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5180

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.msi_desc* [ %4, %cond.true ], [ null, %cond.false ], !dbg !5180
  ret %struct.msi_desc* %cond, !dbg !5184
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_restore_msi_state(%struct.pci_dev* %dev) #0 !dbg !5185 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5186, metadata !DIExpression()), !dbg !5187
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5188
  call void @__pci_restore_msi_state(%struct.pci_dev* %0) #8, !dbg !5189
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5190
  call void @__pci_restore_msix_state(%struct.pci_dev* %1) #8, !dbg !5191
  ret void, !dbg !5192
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__pci_restore_msi_state(%struct.pci_dev* %dev) #0 !dbg !5193 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %control = alloca i16, align 2
  %entry1 = alloca %struct.msi_desc*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5194, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.declare(metadata i16* %control, metadata !5196, metadata !DIExpression()), !dbg !5197
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !5198, metadata !DIExpression()), !dbg !5199
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5200
  %msi_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !5202
  %1 = bitcast [5 x i8]* %msi_enabled to i40*, !dbg !5202
  %bf.load = load i40, i40* %1, align 1, !dbg !5202
  %bf.lshr = lshr i40 %bf.load, 12, !dbg !5202
  %bf.clear = and i40 %bf.lshr, 1, !dbg !5202
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !5202
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5200
  br i1 %tobool, label %if.end, label %if.then, !dbg !5203

if.then:                                          ; preds = %entry
  br label %return, !dbg !5204

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5205
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 43, !dbg !5206
  %3 = load i32, i32* %irq, align 4, !dbg !5206
  %call = call %struct.msi_desc* @irq_get_msi_desc(i32 %3) #8, !dbg !5207
  store %struct.msi_desc* %call, %struct.msi_desc** %entry1, align 8, !dbg !5208
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5209
  call void @pci_intx_for_msi(%struct.pci_dev* %4, i32 0) #8, !dbg !5210
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5211
  call void @pci_msi_set_enable(%struct.pci_dev* %5, i32 0) #8, !dbg !5212
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5213
  call void @arch_restore_msi_irqs(%struct.pci_dev* %6) #8, !dbg !5214
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5215
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5216
  %msi_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 15, !dbg !5217
  %9 = load i8, i8* %msi_cap, align 1, !dbg !5217
  %conv = zext i8 %9 to i32, !dbg !5216
  %add = add i32 %conv, 2, !dbg !5218
  %call2 = call i32 @pci_read_config_word(%struct.pci_dev* %7, i32 %add, i16* %control) #8, !dbg !5219
  %10 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !5220
  %11 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !5221
  %12 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %11, i32 0, i32 8, !dbg !5222
  %13 = bitcast %union.anon.65* %12 to %struct.anon.66*, !dbg !5222
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %13, i32 0, i32 1, !dbg !5222
  %14 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !5223
  %bf.load3 = load i16, i16* %14, align 4, !dbg !5223
  %bf.lshr4 = lshr i16 %bf.load3, 4, !dbg !5223
  %bf.clear5 = and i16 %bf.lshr4, 7, !dbg !5223
  %bf.cast6 = trunc i16 %bf.clear5 to i8, !dbg !5223
  %conv7 = zext i8 %bf.cast6 to i32, !dbg !5221
  %call8 = call i32 @msi_mask(i32 %conv7) #10, !dbg !5224
  %15 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !5225
  %16 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %15, i32 0, i32 8, !dbg !5226
  %17 = bitcast %union.anon.65* %16 to %struct.anon.66*, !dbg !5226
  %masked = getelementptr inbounds %struct.anon.66, %struct.anon.66* %17, i32 0, i32 0, !dbg !5226
  %18 = load i32, i32* %masked, align 8, !dbg !5226
  call void @msi_mask_irq(%struct.msi_desc* %10, i32 %call8, i32 %18) #8, !dbg !5227
  %19 = load i16, i16* %control, align 2, !dbg !5228
  %conv9 = zext i16 %19 to i32, !dbg !5228
  %and = and i32 %conv9, -113, !dbg !5228
  %conv10 = trunc i32 %and to i16, !dbg !5228
  store i16 %conv10, i16* %control, align 2, !dbg !5228
  %20 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !5229
  %21 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %20, i32 0, i32 8, !dbg !5230
  %22 = bitcast %union.anon.65* %21 to %struct.anon.66*, !dbg !5230
  %msi_attrib11 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %22, i32 0, i32 1, !dbg !5230
  %23 = bitcast %struct.anon.67* %msi_attrib11 to i16*, !dbg !5231
  %bf.load12 = load i16, i16* %23, align 4, !dbg !5231
  %bf.lshr13 = lshr i16 %bf.load12, 1, !dbg !5231
  %bf.clear14 = and i16 %bf.lshr13, 7, !dbg !5231
  %bf.cast15 = trunc i16 %bf.clear14 to i8, !dbg !5231
  %conv16 = zext i8 %bf.cast15 to i32, !dbg !5229
  %shl = shl i32 %conv16, 4, !dbg !5232
  %or = or i32 %shl, 1, !dbg !5233
  %24 = load i16, i16* %control, align 2, !dbg !5234
  %conv17 = zext i16 %24 to i32, !dbg !5234
  %or18 = or i32 %conv17, %or, !dbg !5234
  %conv19 = trunc i32 %or18 to i16, !dbg !5234
  store i16 %conv19, i16* %control, align 2, !dbg !5234
  %25 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5235
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5236
  %msi_cap20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 15, !dbg !5237
  %27 = load i8, i8* %msi_cap20, align 1, !dbg !5237
  %conv21 = zext i8 %27 to i32, !dbg !5236
  %add22 = add i32 %conv21, 2, !dbg !5238
  %28 = load i16, i16* %control, align 2, !dbg !5239
  %call23 = call i32 @pci_write_config_word(%struct.pci_dev* %25, i32 %add22, i16 zeroext %28) #8, !dbg !5240
  br label %return, !dbg !5241

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__pci_restore_msix_state(%struct.pci_dev* %dev) #0 !dbg !5242 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %entry1 = alloca %struct.msi_desc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.msi_desc*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp30 = alloca %struct.msi_desc*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5243, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !5245, metadata !DIExpression()), !dbg !5246
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5247
  %msix_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !5249
  %1 = bitcast [5 x i8]* %msix_enabled to i40*, !dbg !5249
  %bf.load = load i40, i40* %1, align 1, !dbg !5249
  %bf.lshr = lshr i40 %bf.load, 13, !dbg !5249
  %bf.clear = and i40 %bf.lshr, 1, !dbg !5249
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !5249
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5247
  br i1 %tobool, label %if.end, label %if.then, !dbg !5250

if.then:                                          ; preds = %entry
  br label %return, !dbg !5251

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !5252

do.body:                                          ; preds = %if.end
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5253
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !5253
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 14, !dbg !5253
  %call = call i32 @list_empty(%struct.list_head* %msi_list) #8, !dbg !5253
  %tobool3 = icmp ne i32 %call, 0, !dbg !5253
  %lnot = xor i1 %tobool3, true, !dbg !5253
  %lnot4 = xor i1 %lnot, true, !dbg !5253
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !5253
  %conv = sext i32 %lnot.ext to i64, !dbg !5253
  %tobool5 = icmp ne i64 %conv, 0, !dbg !5253
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !5256

if.then6:                                         ; preds = %do.body
  br label %do.body7, !dbg !5253

do.body7:                                         ; preds = %if.then6
  br label %do.body8, !dbg !5257

do.body8:                                         ; preds = %do.body7
  br label %do.end, !dbg !5259

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !5257

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 441, i32 0, i64 12) #9, !dbg !5261, !srcloc !5263
  br label %do.end10, !dbg !5261

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !5257

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 255) #9, !dbg !5264, !srcloc !5267
  unreachable, !dbg !5268

do.end12:                                         ; No predecessors!
  br label %do.end13, !dbg !5257

do.end13:                                         ; preds = %do.end12
  br label %if.end14, !dbg !5257

if.end14:                                         ; preds = %do.end13, %do.body
  br label %do.end15, !dbg !5256

do.end15:                                         ; preds = %if.end14
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5269
  call void @pci_intx_for_msi(%struct.pci_dev* %3, i32 0) #8, !dbg !5270
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5271
  call void @pci_msix_clear_and_set_ctrl(%struct.pci_dev* %4, i16 zeroext 0, i16 zeroext -16384) #8, !dbg !5272
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5273
  call void @arch_restore_msi_irqs(%struct.pci_dev* %5) #8, !dbg !5274
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5275, metadata !DIExpression()), !dbg !5278
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5278
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !5278
  %msi_list17 = getelementptr inbounds %struct.device, %struct.device* %dev16, i32 0, i32 14, !dbg !5278
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list17, i32 0, i32 0, !dbg !5278
  %7 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5278
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !5278
  store i8* %8, i8** %__mptr, align 8, !dbg !5278
  br label %do.body18, !dbg !5278

do.body18:                                        ; preds = %do.end15
  br label %do.end19, !dbg !5279

do.end19:                                         ; preds = %do.body18
  %9 = load i8*, i8** %__mptr, align 8, !dbg !5278
  %add.ptr = getelementptr i8, i8* %9, i64 0, !dbg !5278
  %10 = bitcast i8* %add.ptr to %struct.msi_desc*, !dbg !5278
  store %struct.msi_desc* %10, %struct.msi_desc** %tmp, align 8, !dbg !5279
  %11 = load %struct.msi_desc*, %struct.msi_desc** %tmp, align 8, !dbg !5278
  store %struct.msi_desc* %11, %struct.msi_desc** %entry1, align 8, !dbg !5281
  br label %for.cond, !dbg !5281

for.cond:                                         ; preds = %do.end29, %do.end19
  %12 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !5282
  %list = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %12, i32 0, i32 0, !dbg !5282
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5282
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !5282
  %msi_list21 = getelementptr inbounds %struct.device, %struct.device* %dev20, i32 0, i32 14, !dbg !5282
  %cmp = icmp eq %struct.list_head* %list, %msi_list21, !dbg !5282
  %lnot23 = xor i1 %cmp, true, !dbg !5282
  br i1 %lnot23, label %for.body, label %for.end, !dbg !5281

for.body:                                         ; preds = %for.cond
  %14 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !5284
  %15 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !5285
  %16 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %15, i32 0, i32 8, !dbg !5286
  %17 = bitcast %union.anon.65* %16 to %struct.anon.66*, !dbg !5286
  %masked = getelementptr inbounds %struct.anon.66, %struct.anon.66* %17, i32 0, i32 0, !dbg !5286
  %18 = load i32, i32* %masked, align 8, !dbg !5286
  call void @msix_mask_irq(%struct.msi_desc* %14, i32 %18) #8, !dbg !5287
  br label %for.inc, !dbg !5287

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !5288, metadata !DIExpression()), !dbg !5290
  %19 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !5290
  %list26 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %19, i32 0, i32 0, !dbg !5290
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %list26, i32 0, i32 0, !dbg !5290
  %20 = load %struct.list_head*, %struct.list_head** %next27, align 8, !dbg !5290
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !5290
  store i8* %21, i8** %__mptr25, align 8, !dbg !5290
  br label %do.body28, !dbg !5290

do.body28:                                        ; preds = %for.inc
  br label %do.end29, !dbg !5291

do.end29:                                         ; preds = %do.body28
  %22 = load i8*, i8** %__mptr25, align 8, !dbg !5290
  %add.ptr31 = getelementptr i8, i8* %22, i64 0, !dbg !5290
  %23 = bitcast i8* %add.ptr31 to %struct.msi_desc*, !dbg !5290
  store %struct.msi_desc* %23, %struct.msi_desc** %tmp30, align 8, !dbg !5291
  %24 = load %struct.msi_desc*, %struct.msi_desc** %tmp30, align 8, !dbg !5290
  store %struct.msi_desc* %24, %struct.msi_desc** %entry1, align 8, !dbg !5282
  br label %for.cond, !dbg !5282, !llvm.loop !5293

for.end:                                          ; preds = %for.cond
  %25 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5295
  call void @pci_msix_clear_and_set_ctrl(%struct.pci_dev* %25, i16 zeroext 16384, i16 zeroext 0) #8, !dbg !5296
  br label %return, !dbg !5297

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !5297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_msi_vec_count(%struct.pci_dev* %dev) #0 !dbg !5298 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ret = alloca i32, align 4
  %msgctl = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5299, metadata !DIExpression()), !dbg !5300
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5301, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.declare(metadata i16* %msgctl, metadata !5303, metadata !DIExpression()), !dbg !5304
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5305
  %msi_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 15, !dbg !5307
  %1 = load i8, i8* %msi_cap, align 1, !dbg !5307
  %tobool = icmp ne i8 %1, 0, !dbg !5305
  br i1 %tobool, label %if.end, label %if.then, !dbg !5308

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5309
  br label %return, !dbg !5309

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5310
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5311
  %msi_cap1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 15, !dbg !5312
  %4 = load i8, i8* %msi_cap1, align 1, !dbg !5312
  %conv = zext i8 %4 to i32, !dbg !5311
  %add = add i32 %conv, 2, !dbg !5313
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 %add, i16* %msgctl) #8, !dbg !5314
  %5 = load i16, i16* %msgctl, align 2, !dbg !5315
  %conv2 = zext i16 %5 to i32, !dbg !5315
  %and = and i32 %conv2, 14, !dbg !5316
  %shr = ashr i32 %and, 1, !dbg !5317
  %shl = shl i32 1, %shr, !dbg !5318
  store i32 %shl, i32* %ret, align 4, !dbg !5319
  %6 = load i32, i32* %ret, align 4, !dbg !5320
  store i32 %6, i32* %retval, align 4, !dbg !5321
  br label %return, !dbg !5321

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !5322
  ret i32 %7, !dbg !5322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_disable_msi(%struct.pci_dev* %dev) #0 !dbg !5323 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5324, metadata !DIExpression()), !dbg !5325
  %0 = load i32, i32* @pci_msi_enable, align 4, !dbg !5326
  %tobool = icmp ne i32 %0, 0, !dbg !5326
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5328

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5329
  %tobool1 = icmp ne %struct.pci_dev* %1, null, !dbg !5329
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !5330

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5331
  %msi_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 46, !dbg !5332
  %3 = bitcast [5 x i8]* %msi_enabled to i40*, !dbg !5332
  %bf.load = load i40, i40* %3, align 1, !dbg !5332
  %bf.lshr = lshr i40 %bf.load, 12, !dbg !5332
  %bf.clear = and i40 %bf.lshr, 1, !dbg !5332
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !5332
  %tobool3 = icmp ne i32 %bf.cast, 0, !dbg !5331
  br i1 %tobool3, label %if.end, label %if.then, !dbg !5333

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  br label %return, !dbg !5334

if.end:                                           ; preds = %lor.lhs.false2
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5335
  call void @pci_msi_shutdown(%struct.pci_dev* %4) #8, !dbg !5336
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5337
  call void @free_msi_irqs(%struct.pci_dev* %5) #8, !dbg !5338
  br label %return, !dbg !5339

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5339
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_msi_shutdown(%struct.pci_dev* %dev) #0 !dbg !5340 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %desc = alloca %struct.msi_desc*, align 8
  %mask = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.msi_desc*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5341, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc, metadata !5343, metadata !DIExpression()), !dbg !5344
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !5345, metadata !DIExpression()), !dbg !5346
  %0 = load i32, i32* @pci_msi_enable, align 4, !dbg !5347
  %tobool = icmp ne i32 %0, 0, !dbg !5347
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5349

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5350
  %tobool1 = icmp ne %struct.pci_dev* %1, null, !dbg !5350
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !5351

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5352
  %msi_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 46, !dbg !5353
  %3 = bitcast [5 x i8]* %msi_enabled to i40*, !dbg !5353
  %bf.load = load i40, i40* %3, align 1, !dbg !5353
  %bf.lshr = lshr i40 %bf.load, 12, !dbg !5353
  %bf.clear = and i40 %bf.lshr, 1, !dbg !5353
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !5353
  %tobool3 = icmp ne i32 %bf.cast, 0, !dbg !5352
  br i1 %tobool3, label %if.end, label %if.then, !dbg !5354

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  br label %return, !dbg !5355

if.end:                                           ; preds = %lor.lhs.false2
  br label %do.body, !dbg !5356

do.body:                                          ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5357
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !5357
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev4, i32 0, i32 14, !dbg !5357
  %call = call i32 @list_empty(%struct.list_head* %msi_list) #8, !dbg !5357
  %tobool5 = icmp ne i32 %call, 0, !dbg !5357
  %lnot = xor i1 %tobool5, true, !dbg !5357
  %lnot6 = xor i1 %lnot, true, !dbg !5357
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !5357
  %conv = sext i32 %lnot.ext to i64, !dbg !5357
  %tobool7 = icmp ne i64 %conv, 0, !dbg !5357
  br i1 %tobool7, label %if.then8, label %if.end16, !dbg !5360

if.then8:                                         ; preds = %do.body
  br label %do.body9, !dbg !5357

do.body9:                                         ; preds = %if.then8
  br label %do.body10, !dbg !5361

do.body10:                                        ; preds = %do.body9
  br label %do.end, !dbg !5363

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !5361

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 924, i32 0, i64 12) #9, !dbg !5365, !srcloc !5367
  br label %do.end12, !dbg !5365

do.end12:                                         ; preds = %do.body11
  br label %do.body13, !dbg !5361

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 269) #9, !dbg !5368, !srcloc !5371
  unreachable, !dbg !5372

do.end14:                                         ; No predecessors!
  br label %do.end15, !dbg !5361

do.end15:                                         ; preds = %do.end14
  br label %if.end16, !dbg !5361

if.end16:                                         ; preds = %do.end15, %do.body
  br label %do.end17, !dbg !5360

do.end17:                                         ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5373, metadata !DIExpression()), !dbg !5375
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5375
  %dev18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !5375
  %msi_list19 = getelementptr inbounds %struct.device, %struct.device* %dev18, i32 0, i32 14, !dbg !5375
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list19, i32 0, i32 0, !dbg !5375
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5375
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !5375
  store i8* %7, i8** %__mptr, align 8, !dbg !5375
  br label %do.body20, !dbg !5375

do.body20:                                        ; preds = %do.end17
  br label %do.end21, !dbg !5376

do.end21:                                         ; preds = %do.body20
  %8 = load i8*, i8** %__mptr, align 8, !dbg !5375
  %add.ptr = getelementptr i8, i8* %8, i64 0, !dbg !5375
  %9 = bitcast i8* %add.ptr to %struct.msi_desc*, !dbg !5375
  store %struct.msi_desc* %9, %struct.msi_desc** %tmp, align 8, !dbg !5376
  %10 = load %struct.msi_desc*, %struct.msi_desc** %tmp, align 8, !dbg !5375
  store %struct.msi_desc* %10, %struct.msi_desc** %desc, align 8, !dbg !5378
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5379
  call void @pci_msi_set_enable(%struct.pci_dev* %11, i32 0) #8, !dbg !5380
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5381
  call void @pci_intx_for_msi(%struct.pci_dev* %12, i32 1) #8, !dbg !5382
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5383
  %msi_enabled22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 46, !dbg !5384
  %14 = bitcast [5 x i8]* %msi_enabled22 to i40*, !dbg !5384
  %bf.load23 = load i40, i40* %14, align 1, !dbg !5385
  %bf.clear24 = and i40 %bf.load23, -4097, !dbg !5385
  store i40 %bf.clear24, i40* %14, align 1, !dbg !5385
  %15 = load %struct.msi_desc*, %struct.msi_desc** %desc, align 8, !dbg !5386
  %16 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %15, i32 0, i32 8, !dbg !5387
  %17 = bitcast %union.anon.65* %16 to %struct.anon.66*, !dbg !5387
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %17, i32 0, i32 1, !dbg !5387
  %18 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !5388
  %bf.load25 = load i16, i16* %18, align 4, !dbg !5388
  %bf.lshr26 = lshr i16 %bf.load25, 4, !dbg !5388
  %bf.clear27 = and i16 %bf.lshr26, 7, !dbg !5388
  %bf.cast28 = trunc i16 %bf.clear27 to i8, !dbg !5388
  %conv29 = zext i8 %bf.cast28 to i32, !dbg !5386
  %call30 = call i32 @msi_mask(i32 %conv29) #10, !dbg !5389
  store i32 %call30, i32* %mask, align 4, !dbg !5390
  %19 = load %struct.msi_desc*, %struct.msi_desc** %desc, align 8, !dbg !5391
  %20 = load i32, i32* %mask, align 4, !dbg !5392
  %21 = load i32, i32* %mask, align 4, !dbg !5393
  %neg = xor i32 %21, -1, !dbg !5394
  %call31 = call i32 @__pci_msi_desc_mask_irq(%struct.msi_desc* %19, i32 %20, i32 %neg) #8, !dbg !5395
  %22 = load %struct.msi_desc*, %struct.msi_desc** %desc, align 8, !dbg !5396
  %23 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %22, i32 0, i32 8, !dbg !5397
  %24 = bitcast %union.anon.65* %23 to %struct.anon.66*, !dbg !5397
  %msi_attrib32 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %24, i32 0, i32 1, !dbg !5397
  %default_irq = getelementptr inbounds %struct.anon.67, %struct.anon.67* %msi_attrib32, i32 0, i32 2, !dbg !5398
  %25 = load i32, i32* %default_irq, align 4, !dbg !5398
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5399
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 43, !dbg !5400
  store i32 %25, i32* %irq, align 4, !dbg !5401
  %27 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5402
  %call33 = call i32 @pcibios_alloc_irq(%struct.pci_dev* %27) #8, !dbg !5403
  br label %return, !dbg !5404

return:                                           ; preds = %do.end21, %if.then
  ret void, !dbg !5404
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_msi_irqs(%struct.pci_dev* %dev) #0 !dbg !5405 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %msi_list = alloca %struct.list_head*, align 8
  %entry3 = alloca %struct.msi_desc*, align 8
  %tmp = alloca %struct.msi_desc*, align 8
  %msi_attrs = alloca %struct.attribute**, align 8
  %dev_attr = alloca %struct.device_attribute*, align 8
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp6 = alloca %struct.msi_desc*, align 8
  %__mptr30 = alloca i8*, align 8
  %tmp35 = alloca %struct.msi_desc*, align 8
  %__mptr38 = alloca i8*, align 8
  %tmp42 = alloca %struct.msi_desc*, align 8
  %__mptr44 = alloca i8*, align 8
  %tmp49 = alloca %struct.msi_desc*, align 8
  %__mptr68 = alloca i8*, align 8
  %tmp73 = alloca %struct.msi_desc*, align 8
  %__mptr83 = alloca i8*, align 8
  %tmp88 = alloca %struct.device_attribute*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5406, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.declare(metadata %struct.list_head** %msi_list, metadata !5408, metadata !DIExpression()), !dbg !5409
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5410
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !5410
  %msi_list2 = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 14, !dbg !5410
  store %struct.list_head* %msi_list2, %struct.list_head** %msi_list, align 8, !dbg !5409
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry3, metadata !5411, metadata !DIExpression()), !dbg !5412
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %tmp, metadata !5413, metadata !DIExpression()), !dbg !5414
  call void @llvm.dbg.declare(metadata %struct.attribute*** %msi_attrs, metadata !5415, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %dev_attr, metadata !5417, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5419, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5421, metadata !DIExpression()), !dbg !5422
  store i32 0, i32* %count, align 4, !dbg !5422
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5423, metadata !DIExpression()), !dbg !5426
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5426
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !5426
  %msi_list5 = getelementptr inbounds %struct.device, %struct.device* %dev4, i32 0, i32 14, !dbg !5426
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list5, i32 0, i32 0, !dbg !5426
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5426
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !5426
  store i8* %3, i8** %__mptr, align 8, !dbg !5426
  br label %do.body, !dbg !5426

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5427

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !5426
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !5426
  %5 = bitcast i8* %add.ptr to %struct.msi_desc*, !dbg !5426
  store %struct.msi_desc* %5, %struct.msi_desc** %tmp6, align 8, !dbg !5427
  %6 = load %struct.msi_desc*, %struct.msi_desc** %tmp6, align 8, !dbg !5426
  store %struct.msi_desc* %6, %struct.msi_desc** %entry3, align 8, !dbg !5429
  br label %for.cond, !dbg !5429

for.cond:                                         ; preds = %do.end34, %do.end
  %7 = load %struct.msi_desc*, %struct.msi_desc** %entry3, align 8, !dbg !5430
  %list = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %7, i32 0, i32 0, !dbg !5430
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5430
  %dev7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !5430
  %msi_list8 = getelementptr inbounds %struct.device, %struct.device* %dev7, i32 0, i32 14, !dbg !5430
  %cmp = icmp eq %struct.list_head* %list, %msi_list8, !dbg !5430
  %lnot = xor i1 %cmp, true, !dbg !5430
  br i1 %lnot, label %for.body, label %for.end37, !dbg !5429

for.body:                                         ; preds = %for.cond
  %9 = load %struct.msi_desc*, %struct.msi_desc** %entry3, align 8, !dbg !5432
  %irq = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %9, i32 0, i32 1, !dbg !5434
  %10 = load i32, i32* %irq, align 8, !dbg !5434
  %tobool = icmp ne i32 %10, 0, !dbg !5432
  br i1 %tobool, label %if.then, label %if.end28, !dbg !5435

if.then:                                          ; preds = %for.body
  store i32 0, i32* %i, align 4, !dbg !5436
  br label %for.cond9, !dbg !5438

for.cond9:                                        ; preds = %for.inc, %if.then
  %11 = load i32, i32* %i, align 4, !dbg !5439
  %12 = load %struct.msi_desc*, %struct.msi_desc** %entry3, align 8, !dbg !5441
  %nvec_used = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %12, i32 0, i32 2, !dbg !5442
  %13 = load i32, i32* %nvec_used, align 4, !dbg !5442
  %cmp10 = icmp ult i32 %11, %13, !dbg !5443
  br i1 %cmp10, label %for.body11, label %for.end, !dbg !5444

for.body11:                                       ; preds = %for.cond9
  br label %do.body12, !dbg !5445

do.body12:                                        ; preds = %for.body11
  %14 = load %struct.msi_desc*, %struct.msi_desc** %entry3, align 8, !dbg !5446
  %irq13 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %14, i32 0, i32 1, !dbg !5446
  %15 = load i32, i32* %irq13, align 8, !dbg !5446
  %16 = load i32, i32* %i, align 4, !dbg !5446
  %add = add i32 %15, %16, !dbg !5446
  %call = call i32 @irq_has_action(i32 %add) #8, !dbg !5446
  %tobool14 = icmp ne i32 %call, 0, !dbg !5446
  %lnot15 = xor i1 %tobool14, true, !dbg !5446
  %lnot16 = xor i1 %lnot15, true, !dbg !5446
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !5446
  %conv = sext i32 %lnot.ext to i64, !dbg !5446
  %tobool17 = icmp ne i64 %conv, 0, !dbg !5446
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !5449

if.then18:                                        ; preds = %do.body12
  br label %do.body19, !dbg !5446

do.body19:                                        ; preds = %if.then18
  br label %do.body20, !dbg !5450

do.body20:                                        ; preds = %do.body19
  br label %do.end21, !dbg !5452

do.end21:                                         ; preds = %do.body20
  br label %do.body22, !dbg !5450

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 376, i32 0, i64 12) #9, !dbg !5454, !srcloc !5456
  br label %do.end23, !dbg !5454

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !5450

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 250) #9, !dbg !5457, !srcloc !5460
  unreachable, !dbg !5461

do.end25:                                         ; No predecessors!
  br label %do.end26, !dbg !5450

do.end26:                                         ; preds = %do.end25
  br label %if.end, !dbg !5450

if.end:                                           ; preds = %do.end26, %do.body12
  br label %do.end27, !dbg !5449

do.end27:                                         ; preds = %if.end
  br label %for.inc, !dbg !5449

for.inc:                                          ; preds = %do.end27
  %17 = load i32, i32* %i, align 4, !dbg !5462
  %inc = add i32 %17, 1, !dbg !5462
  store i32 %inc, i32* %i, align 4, !dbg !5462
  br label %for.cond9, !dbg !5463, !llvm.loop !5464

for.end:                                          ; preds = %for.cond9
  br label %if.end28, !dbg !5465

if.end28:                                         ; preds = %for.end, %for.body
  br label %for.inc29, !dbg !5434

for.inc29:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata i8** %__mptr30, metadata !5466, metadata !DIExpression()), !dbg !5468
  %18 = load %struct.msi_desc*, %struct.msi_desc** %entry3, align 8, !dbg !5468
  %list31 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %18, i32 0, i32 0, !dbg !5468
  %next32 = getelementptr inbounds %struct.list_head, %struct.list_head* %list31, i32 0, i32 0, !dbg !5468
  %19 = load %struct.list_head*, %struct.list_head** %next32, align 8, !dbg !5468
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !5468
  store i8* %20, i8** %__mptr30, align 8, !dbg !5468
  br label %do.body33, !dbg !5468

do.body33:                                        ; preds = %for.inc29
  br label %do.end34, !dbg !5469

do.end34:                                         ; preds = %do.body33
  %21 = load i8*, i8** %__mptr30, align 8, !dbg !5468
  %add.ptr36 = getelementptr i8, i8* %21, i64 0, !dbg !5468
  %22 = bitcast i8* %add.ptr36 to %struct.msi_desc*, !dbg !5468
  store %struct.msi_desc* %22, %struct.msi_desc** %tmp35, align 8, !dbg !5469
  %23 = load %struct.msi_desc*, %struct.msi_desc** %tmp35, align 8, !dbg !5468
  store %struct.msi_desc* %23, %struct.msi_desc** %entry3, align 8, !dbg !5430
  br label %for.cond, !dbg !5430, !llvm.loop !5471

for.end37:                                        ; preds = %for.cond
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5473
  call void @pci_msi_teardown_msi_irqs(%struct.pci_dev* %24) #8, !dbg !5474
  call void @llvm.dbg.declare(metadata i8** %__mptr38, metadata !5475, metadata !DIExpression()), !dbg !5478
  %25 = load %struct.list_head*, %struct.list_head** %msi_list, align 8, !dbg !5478
  %next39 = getelementptr inbounds %struct.list_head, %struct.list_head* %25, i32 0, i32 0, !dbg !5478
  %26 = load %struct.list_head*, %struct.list_head** %next39, align 8, !dbg !5478
  %27 = bitcast %struct.list_head* %26 to i8*, !dbg !5478
  store i8* %27, i8** %__mptr38, align 8, !dbg !5478
  br label %do.body40, !dbg !5478

do.body40:                                        ; preds = %for.end37
  br label %do.end41, !dbg !5479

do.end41:                                         ; preds = %do.body40
  %28 = load i8*, i8** %__mptr38, align 8, !dbg !5478
  %add.ptr43 = getelementptr i8, i8* %28, i64 0, !dbg !5478
  %29 = bitcast i8* %add.ptr43 to %struct.msi_desc*, !dbg !5478
  store %struct.msi_desc* %29, %struct.msi_desc** %tmp42, align 8, !dbg !5479
  %30 = load %struct.msi_desc*, %struct.msi_desc** %tmp42, align 8, !dbg !5478
  store %struct.msi_desc* %30, %struct.msi_desc** %entry3, align 8, !dbg !5481
  call void @llvm.dbg.declare(metadata i8** %__mptr44, metadata !5482, metadata !DIExpression()), !dbg !5484
  %31 = load %struct.msi_desc*, %struct.msi_desc** %entry3, align 8, !dbg !5484
  %list45 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %31, i32 0, i32 0, !dbg !5484
  %next46 = getelementptr inbounds %struct.list_head, %struct.list_head* %list45, i32 0, i32 0, !dbg !5484
  %32 = load %struct.list_head*, %struct.list_head** %next46, align 8, !dbg !5484
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !5484
  store i8* %33, i8** %__mptr44, align 8, !dbg !5484
  br label %do.body47, !dbg !5484

do.body47:                                        ; preds = %do.end41
  br label %do.end48, !dbg !5485

do.end48:                                         ; preds = %do.body47
  %34 = load i8*, i8** %__mptr44, align 8, !dbg !5484
  %add.ptr50 = getelementptr i8, i8* %34, i64 0, !dbg !5484
  %35 = bitcast i8* %add.ptr50 to %struct.msi_desc*, !dbg !5484
  store %struct.msi_desc* %35, %struct.msi_desc** %tmp49, align 8, !dbg !5485
  %36 = load %struct.msi_desc*, %struct.msi_desc** %tmp49, align 8, !dbg !5484
  store %struct.msi_desc* %36, %struct.msi_desc** %tmp, align 8, !dbg !5481
  br label %for.cond51, !dbg !5481

for.cond51:                                       ; preds = %do.end72, %do.end48
  %37 = load %struct.msi_desc*, %struct.msi_desc** %entry3, align 8, !dbg !5487
  %list52 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %37, i32 0, i32 0, !dbg !5487
  %38 = load %struct.list_head*, %struct.list_head** %msi_list, align 8, !dbg !5487
  %cmp53 = icmp eq %struct.list_head* %list52, %38, !dbg !5487
  %lnot55 = xor i1 %cmp53, true, !dbg !5487
  br i1 %lnot55, label %for.body57, label %for.end75, !dbg !5481

for.body57:                                       ; preds = %for.cond51
  %39 = load %struct.msi_desc*, %struct.msi_desc** %entry3, align 8, !dbg !5489
  %40 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %39, i32 0, i32 8, !dbg !5492
  %41 = bitcast %union.anon.65* %40 to %struct.anon.66*, !dbg !5492
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %41, i32 0, i32 1, !dbg !5492
  %42 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !5493
  %bf.load = load i16, i16* %42, align 4, !dbg !5493
  %bf.clear = and i16 %bf.load, 1, !dbg !5493
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !5493
  %tobool58 = icmp ne i8 %bf.cast, 0, !dbg !5489
  br i1 %tobool58, label %if.then59, label %if.end65, !dbg !5494

if.then59:                                        ; preds = %for.body57
  %43 = load %struct.msi_desc*, %struct.msi_desc** %entry3, align 8, !dbg !5495
  %list60 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %43, i32 0, i32 0, !dbg !5498
  %44 = load %struct.list_head*, %struct.list_head** %msi_list, align 8, !dbg !5499
  %call61 = call i32 @list_is_last(%struct.list_head* %list60, %struct.list_head* %44) #8, !dbg !5500
  %tobool62 = icmp ne i32 %call61, 0, !dbg !5500
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !5501

if.then63:                                        ; preds = %if.then59
  %45 = load %struct.msi_desc*, %struct.msi_desc** %entry3, align 8, !dbg !5502
  %46 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %45, i32 0, i32 8, !dbg !5503
  %47 = bitcast %union.anon.65* %46 to %struct.anon.66*, !dbg !5503
  %48 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %47, i32 0, i32 2, !dbg !5503
  %mask_base = bitcast %union.anon.68* %48 to i8**, !dbg !5503
  %49 = load i8*, i8** %mask_base, align 8, !dbg !5503
  call void @iounmap(i8* %49) #8, !dbg !5504
  br label %if.end64, !dbg !5504

if.end64:                                         ; preds = %if.then63, %if.then59
  br label %if.end65, !dbg !5505

if.end65:                                         ; preds = %if.end64, %for.body57
  %50 = load %struct.msi_desc*, %struct.msi_desc** %entry3, align 8, !dbg !5506
  %list66 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %50, i32 0, i32 0, !dbg !5507
  call void @list_del(%struct.list_head* %list66) #8, !dbg !5508
  %51 = load %struct.msi_desc*, %struct.msi_desc** %entry3, align 8, !dbg !5509
  call void @free_msi_entry(%struct.msi_desc* %51) #8, !dbg !5510
  br label %for.inc67, !dbg !5511

for.inc67:                                        ; preds = %if.end65
  %52 = load %struct.msi_desc*, %struct.msi_desc** %tmp, align 8, !dbg !5487
  store %struct.msi_desc* %52, %struct.msi_desc** %entry3, align 8, !dbg !5487
  call void @llvm.dbg.declare(metadata i8** %__mptr68, metadata !5512, metadata !DIExpression()), !dbg !5514
  %53 = load %struct.msi_desc*, %struct.msi_desc** %tmp, align 8, !dbg !5514
  %list69 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %53, i32 0, i32 0, !dbg !5514
  %next70 = getelementptr inbounds %struct.list_head, %struct.list_head* %list69, i32 0, i32 0, !dbg !5514
  %54 = load %struct.list_head*, %struct.list_head** %next70, align 8, !dbg !5514
  %55 = bitcast %struct.list_head* %54 to i8*, !dbg !5514
  store i8* %55, i8** %__mptr68, align 8, !dbg !5514
  br label %do.body71, !dbg !5514

do.body71:                                        ; preds = %for.inc67
  br label %do.end72, !dbg !5515

do.end72:                                         ; preds = %do.body71
  %56 = load i8*, i8** %__mptr68, align 8, !dbg !5514
  %add.ptr74 = getelementptr i8, i8* %56, i64 0, !dbg !5514
  %57 = bitcast i8* %add.ptr74 to %struct.msi_desc*, !dbg !5514
  store %struct.msi_desc* %57, %struct.msi_desc** %tmp73, align 8, !dbg !5515
  %58 = load %struct.msi_desc*, %struct.msi_desc** %tmp73, align 8, !dbg !5514
  store %struct.msi_desc* %58, %struct.msi_desc** %tmp, align 8, !dbg !5487
  br label %for.cond51, !dbg !5487, !llvm.loop !5517

for.end75:                                        ; preds = %for.cond51
  %59 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5519
  %msi_irq_groups = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %59, i32 0, i32 57, !dbg !5521
  %60 = load %struct.attribute_group**, %struct.attribute_group*** %msi_irq_groups, align 8, !dbg !5521
  %tobool76 = icmp ne %struct.attribute_group** %60, null, !dbg !5519
  br i1 %tobool76, label %if.then77, label %if.end95, !dbg !5522

if.then77:                                        ; preds = %for.end75
  %61 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5523
  %dev78 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %61, i32 0, i32 41, !dbg !5525
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev78, i32 0, i32 0, !dbg !5526
  %62 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5527
  %msi_irq_groups79 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %62, i32 0, i32 57, !dbg !5528
  %63 = load %struct.attribute_group**, %struct.attribute_group*** %msi_irq_groups79, align 8, !dbg !5528
  call void @sysfs_remove_groups(%struct.kobject* %kobj, %struct.attribute_group** %63) #8, !dbg !5529
  %64 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5530
  %msi_irq_groups80 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %64, i32 0, i32 57, !dbg !5531
  %65 = load %struct.attribute_group**, %struct.attribute_group*** %msi_irq_groups80, align 8, !dbg !5531
  %arrayidx = getelementptr %struct.attribute_group*, %struct.attribute_group** %65, i64 0, !dbg !5530
  %66 = load %struct.attribute_group*, %struct.attribute_group** %arrayidx, align 8, !dbg !5530
  %attrs = getelementptr inbounds %struct.attribute_group, %struct.attribute_group* %66, i32 0, i32 3, !dbg !5532
  %67 = load %struct.attribute**, %struct.attribute*** %attrs, align 8, !dbg !5532
  store %struct.attribute** %67, %struct.attribute*** %msi_attrs, align 8, !dbg !5533
  br label %while.cond, !dbg !5534

while.cond:                                       ; preds = %do.end87, %if.then77
  %68 = load %struct.attribute**, %struct.attribute*** %msi_attrs, align 8, !dbg !5535
  %69 = load i32, i32* %count, align 4, !dbg !5536
  %idxprom = sext i32 %69 to i64, !dbg !5535
  %arrayidx81 = getelementptr %struct.attribute*, %struct.attribute** %68, i64 %idxprom, !dbg !5535
  %70 = load %struct.attribute*, %struct.attribute** %arrayidx81, align 8, !dbg !5535
  %tobool82 = icmp ne %struct.attribute* %70, null, !dbg !5534
  br i1 %tobool82, label %while.body, label %while.end, !dbg !5534

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr83, metadata !5537, metadata !DIExpression()), !dbg !5540
  %71 = load %struct.attribute**, %struct.attribute*** %msi_attrs, align 8, !dbg !5540
  %72 = load i32, i32* %count, align 4, !dbg !5540
  %idxprom84 = sext i32 %72 to i64, !dbg !5540
  %arrayidx85 = getelementptr %struct.attribute*, %struct.attribute** %71, i64 %idxprom84, !dbg !5540
  %73 = load %struct.attribute*, %struct.attribute** %arrayidx85, align 8, !dbg !5540
  %74 = bitcast %struct.attribute* %73 to i8*, !dbg !5540
  store i8* %74, i8** %__mptr83, align 8, !dbg !5540
  br label %do.body86, !dbg !5540

do.body86:                                        ; preds = %while.body
  br label %do.end87, !dbg !5541

do.end87:                                         ; preds = %do.body86
  %75 = load i8*, i8** %__mptr83, align 8, !dbg !5540
  %add.ptr89 = getelementptr i8, i8* %75, i64 0, !dbg !5540
  %76 = bitcast i8* %add.ptr89 to %struct.device_attribute*, !dbg !5540
  store %struct.device_attribute* %76, %struct.device_attribute** %tmp88, align 8, !dbg !5541
  %77 = load %struct.device_attribute*, %struct.device_attribute** %tmp88, align 8, !dbg !5540
  store %struct.device_attribute* %77, %struct.device_attribute** %dev_attr, align 8, !dbg !5543
  %78 = load %struct.device_attribute*, %struct.device_attribute** %dev_attr, align 8, !dbg !5544
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %78, i32 0, i32 0, !dbg !5545
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !5546
  %79 = load i8*, i8** %name, align 8, !dbg !5546
  call void @kfree(i8* %79) #8, !dbg !5547
  %80 = load %struct.device_attribute*, %struct.device_attribute** %dev_attr, align 8, !dbg !5548
  %81 = bitcast %struct.device_attribute* %80 to i8*, !dbg !5548
  call void @kfree(i8* %81) #8, !dbg !5549
  %82 = load i32, i32* %count, align 4, !dbg !5550
  %inc90 = add i32 %82, 1, !dbg !5550
  store i32 %inc90, i32* %count, align 4, !dbg !5550
  br label %while.cond, !dbg !5534, !llvm.loop !5551

while.end:                                        ; preds = %while.cond
  %83 = load %struct.attribute**, %struct.attribute*** %msi_attrs, align 8, !dbg !5553
  %84 = bitcast %struct.attribute** %83 to i8*, !dbg !5553
  call void @kfree(i8* %84) #8, !dbg !5554
  %85 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5555
  %msi_irq_groups91 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %85, i32 0, i32 57, !dbg !5556
  %86 = load %struct.attribute_group**, %struct.attribute_group*** %msi_irq_groups91, align 8, !dbg !5556
  %arrayidx92 = getelementptr %struct.attribute_group*, %struct.attribute_group** %86, i64 0, !dbg !5555
  %87 = load %struct.attribute_group*, %struct.attribute_group** %arrayidx92, align 8, !dbg !5555
  %88 = bitcast %struct.attribute_group* %87 to i8*, !dbg !5555
  call void @kfree(i8* %88) #8, !dbg !5557
  %89 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5558
  %msi_irq_groups93 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %89, i32 0, i32 57, !dbg !5559
  %90 = load %struct.attribute_group**, %struct.attribute_group*** %msi_irq_groups93, align 8, !dbg !5559
  %91 = bitcast %struct.attribute_group** %90 to i8*, !dbg !5558
  call void @kfree(i8* %91) #8, !dbg !5560
  %92 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5561
  %msi_irq_groups94 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %92, i32 0, i32 57, !dbg !5562
  store %struct.attribute_group** null, %struct.attribute_group*** %msi_irq_groups94, align 8, !dbg !5563
  br label %if.end95, !dbg !5564

if.end95:                                         ; preds = %while.end, %for.end75
  ret void, !dbg !5565
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_msix_vec_count(%struct.pci_dev* %dev) #0 !dbg !5566 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %control = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5567, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.declare(metadata i16* %control, metadata !5569, metadata !DIExpression()), !dbg !5570
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5571
  %msix_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 16, !dbg !5573
  %1 = load i8, i8* %msix_cap, align 4, !dbg !5573
  %tobool = icmp ne i8 %1, 0, !dbg !5571
  br i1 %tobool, label %if.end, label %if.then, !dbg !5574

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5575
  br label %return, !dbg !5575

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5576
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5577
  %msix_cap1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 16, !dbg !5578
  %4 = load i8, i8* %msix_cap1, align 4, !dbg !5578
  %conv = zext i8 %4 to i32, !dbg !5577
  %add = add i32 %conv, 2, !dbg !5579
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 %add, i16* %control) #8, !dbg !5580
  %5 = load i16, i16* %control, align 2, !dbg !5581
  %conv2 = zext i16 %5 to i32, !dbg !5581
  %and = and i32 %conv2, 2047, !dbg !5581
  %add3 = add i32 %and, 1, !dbg !5581
  store i32 %add3, i32* %retval, align 4, !dbg !5582
  br label %return, !dbg !5582

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !5583
  ret i32 %6, !dbg !5583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_disable_msix(%struct.pci_dev* %dev) #0 !dbg !5584 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5585, metadata !DIExpression()), !dbg !5586
  %0 = load i32, i32* @pci_msi_enable, align 4, !dbg !5587
  %tobool = icmp ne i32 %0, 0, !dbg !5587
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5589

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5590
  %tobool1 = icmp ne %struct.pci_dev* %1, null, !dbg !5590
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !5591

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5592
  %msix_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 46, !dbg !5593
  %3 = bitcast [5 x i8]* %msix_enabled to i40*, !dbg !5593
  %bf.load = load i40, i40* %3, align 1, !dbg !5593
  %bf.lshr = lshr i40 %bf.load, 13, !dbg !5593
  %bf.clear = and i40 %bf.lshr, 1, !dbg !5593
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !5593
  %tobool3 = icmp ne i32 %bf.cast, 0, !dbg !5592
  br i1 %tobool3, label %if.end, label %if.then, !dbg !5594

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  br label %return, !dbg !5595

if.end:                                           ; preds = %lor.lhs.false2
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5596
  call void @pci_msix_shutdown(%struct.pci_dev* %4) #8, !dbg !5597
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5598
  call void @free_msi_irqs(%struct.pci_dev* %5) #8, !dbg !5599
  br label %return, !dbg !5600

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5600
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_msix_shutdown(%struct.pci_dev* %dev) #0 !dbg !5601 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %entry1 = alloca %struct.msi_desc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.msi_desc*, align 8
  %__mptr14 = alloca i8*, align 8
  %tmp19 = alloca %struct.msi_desc*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5602, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !5604, metadata !DIExpression()), !dbg !5605
  %0 = load i32, i32* @pci_msi_enable, align 4, !dbg !5606
  %tobool = icmp ne i32 %0, 0, !dbg !5606
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5608

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5609
  %tobool2 = icmp ne %struct.pci_dev* %1, null, !dbg !5609
  br i1 %tobool2, label %lor.lhs.false3, label %if.then, !dbg !5610

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5611
  %msix_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 46, !dbg !5612
  %3 = bitcast [5 x i8]* %msix_enabled to i40*, !dbg !5612
  %bf.load = load i40, i40* %3, align 1, !dbg !5612
  %bf.lshr = lshr i40 %bf.load, 13, !dbg !5612
  %bf.clear = and i40 %bf.lshr, 1, !dbg !5612
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !5612
  %tobool4 = icmp ne i32 %bf.cast, 0, !dbg !5611
  br i1 %tobool4, label %if.end, label %if.then, !dbg !5613

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  br label %return, !dbg !5614

if.end:                                           ; preds = %lor.lhs.false3
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5615
  %call = call zeroext i1 @pci_dev_is_disconnected(%struct.pci_dev* %4) #8, !dbg !5617
  br i1 %call, label %if.then5, label %if.end9, !dbg !5618

if.then5:                                         ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5619
  %msix_enabled6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 46, !dbg !5621
  %6 = bitcast [5 x i8]* %msix_enabled6 to i40*, !dbg !5621
  %bf.load7 = load i40, i40* %6, align 1, !dbg !5622
  %bf.clear8 = and i40 %bf.load7, -8193, !dbg !5622
  store i40 %bf.clear8, i40* %6, align 1, !dbg !5622
  br label %return, !dbg !5623

if.end9:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5624, metadata !DIExpression()), !dbg !5627
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5627
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !5627
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev10, i32 0, i32 14, !dbg !5627
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list, i32 0, i32 0, !dbg !5627
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5627
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !5627
  store i8* %9, i8** %__mptr, align 8, !dbg !5627
  br label %do.body, !dbg !5627

do.body:                                          ; preds = %if.end9
  br label %do.end, !dbg !5628

do.end:                                           ; preds = %do.body
  %10 = load i8*, i8** %__mptr, align 8, !dbg !5627
  %add.ptr = getelementptr i8, i8* %10, i64 0, !dbg !5627
  %11 = bitcast i8* %add.ptr to %struct.msi_desc*, !dbg !5627
  store %struct.msi_desc* %11, %struct.msi_desc** %tmp, align 8, !dbg !5628
  %12 = load %struct.msi_desc*, %struct.msi_desc** %tmp, align 8, !dbg !5627
  store %struct.msi_desc* %12, %struct.msi_desc** %entry1, align 8, !dbg !5630
  br label %for.cond, !dbg !5630

for.cond:                                         ; preds = %do.end18, %do.end
  %13 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !5631
  %list = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %13, i32 0, i32 0, !dbg !5631
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5631
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !5631
  %msi_list12 = getelementptr inbounds %struct.device, %struct.device* %dev11, i32 0, i32 14, !dbg !5631
  %cmp = icmp eq %struct.list_head* %list, %msi_list12, !dbg !5631
  %lnot = xor i1 %cmp, true, !dbg !5631
  br i1 %lnot, label %for.body, label %for.end, !dbg !5630

for.body:                                         ; preds = %for.cond
  %15 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !5633
  %call13 = call i32 @__pci_msix_desc_mask_irq(%struct.msi_desc* %15, i32 1) #8, !dbg !5635
  br label %for.inc, !dbg !5636

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr14, metadata !5637, metadata !DIExpression()), !dbg !5639
  %16 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !5639
  %list15 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %16, i32 0, i32 0, !dbg !5639
  %next16 = getelementptr inbounds %struct.list_head, %struct.list_head* %list15, i32 0, i32 0, !dbg !5639
  %17 = load %struct.list_head*, %struct.list_head** %next16, align 8, !dbg !5639
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !5639
  store i8* %18, i8** %__mptr14, align 8, !dbg !5639
  br label %do.body17, !dbg !5639

do.body17:                                        ; preds = %for.inc
  br label %do.end18, !dbg !5640

do.end18:                                         ; preds = %do.body17
  %19 = load i8*, i8** %__mptr14, align 8, !dbg !5639
  %add.ptr20 = getelementptr i8, i8* %19, i64 0, !dbg !5639
  %20 = bitcast i8* %add.ptr20 to %struct.msi_desc*, !dbg !5639
  store %struct.msi_desc* %20, %struct.msi_desc** %tmp19, align 8, !dbg !5640
  %21 = load %struct.msi_desc*, %struct.msi_desc** %tmp19, align 8, !dbg !5639
  store %struct.msi_desc* %21, %struct.msi_desc** %entry1, align 8, !dbg !5631
  br label %for.cond, !dbg !5631, !llvm.loop !5642

for.end:                                          ; preds = %for.cond
  %22 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5644
  call void @pci_msix_clear_and_set_ctrl(%struct.pci_dev* %22, i16 zeroext -32768, i16 zeroext 0) #8, !dbg !5645
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5646
  call void @pci_intx_for_msi(%struct.pci_dev* %23, i32 1) #8, !dbg !5647
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5648
  %msix_enabled21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 46, !dbg !5649
  %25 = bitcast [5 x i8]* %msix_enabled21 to i40*, !dbg !5649
  %bf.load22 = load i40, i40* %25, align 1, !dbg !5650
  %bf.clear23 = and i40 %bf.load22, -8193, !dbg !5650
  store i40 %bf.clear23, i40* %25, align 1, !dbg !5650
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5651
  %call24 = call i32 @pcibios_alloc_irq(%struct.pci_dev* %26) #8, !dbg !5652
  br label %return, !dbg !5653

return:                                           ; preds = %for.end, %if.then5, %if.then
  ret void, !dbg !5653
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_no_msi() #0 !dbg !5654 {
entry:
  store i32 0, i32* @pci_msi_enable, align 4, !dbg !5655
  ret void, !dbg !5656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_msi_enabled() #0 !dbg !5657 {
entry:
  %0 = load i32, i32* @pci_msi_enable, align 4, !dbg !5660
  ret i32 %0, !dbg !5661
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_enable_msi(%struct.pci_dev* %dev) #0 !dbg !5662 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5663, metadata !DIExpression()), !dbg !5664
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !5665, metadata !DIExpression()), !dbg !5666
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5667
  %call = call i32 @__pci_enable_msi_range(%struct.pci_dev* %0, i32 1, i32 1, %struct.irq_affinity* null) #8, !dbg !5668
  store i32 %call, i32* %rc, align 4, !dbg !5666
  %1 = load i32, i32* %rc, align 4, !dbg !5669
  %cmp = icmp slt i32 %1, 0, !dbg !5671
  br i1 %cmp, label %if.then, label %if.end, !dbg !5672

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %rc, align 4, !dbg !5673
  store i32 %2, i32* %retval, align 4, !dbg !5674
  br label %return, !dbg !5674

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5675
  br label %return, !dbg !5675

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !5676
  ret i32 %3, !dbg !5676
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__pci_enable_msi_range(%struct.pci_dev* %dev, i32 %minvec, i32 %maxvec, %struct.irq_affinity* %affd) #0 !dbg !5677 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %minvec.addr = alloca i32, align 4
  %maxvec.addr = alloca i32, align 4
  %affd.addr = alloca %struct.irq_affinity*, align 8
  %nvec = alloca i32, align 4
  %rc = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5693, metadata !DIExpression()), !dbg !5694
  store i32 %minvec, i32* %minvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minvec.addr, metadata !5695, metadata !DIExpression()), !dbg !5696
  store i32 %maxvec, i32* %maxvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxvec.addr, metadata !5697, metadata !DIExpression()), !dbg !5698
  store %struct.irq_affinity* %affd, %struct.irq_affinity** %affd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_affinity** %affd.addr, metadata !5699, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.declare(metadata i32* %nvec, metadata !5701, metadata !DIExpression()), !dbg !5702
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !5703, metadata !DIExpression()), !dbg !5704
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5705
  %1 = load i32, i32* %minvec.addr, align 4, !dbg !5707
  %call = call i32 @pci_msi_supported(%struct.pci_dev* %0, i32 %1) #8, !dbg !5708
  %tobool = icmp ne i32 %call, 0, !dbg !5708
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5709

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5710
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 26, !dbg !5711
  %3 = load i32, i32* %current_state, align 8, !dbg !5711
  %cmp = icmp ne i32 %3, 0, !dbg !5712
  br i1 %cmp, label %if.then, label %if.end, !dbg !5713

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !5714
  br label %return, !dbg !5714

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5715
  %msix_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 46, !dbg !5717
  %5 = bitcast [5 x i8]* %msix_enabled to i40*, !dbg !5717
  %bf.load = load i40, i40* %5, align 1, !dbg !5717
  %bf.lshr = lshr i40 %bf.load, 13, !dbg !5717
  %bf.clear = and i40 %bf.lshr, 1, !dbg !5717
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !5717
  %tobool1 = icmp ne i32 %bf.cast, 0, !dbg !5715
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !5718

if.then2:                                         ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5719
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !5719
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0)) #11, !dbg !5719
  store i32 -22, i32* %retval, align 4, !dbg !5721
  br label %return, !dbg !5721

if.end4:                                          ; preds = %if.end
  %7 = load i32, i32* %maxvec.addr, align 4, !dbg !5722
  %8 = load i32, i32* %minvec.addr, align 4, !dbg !5724
  %cmp5 = icmp slt i32 %7, %8, !dbg !5725
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5726

if.then6:                                         ; preds = %if.end4
  store i32 -34, i32* %retval, align 4, !dbg !5727
  br label %return, !dbg !5727

if.end7:                                          ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5728, metadata !DIExpression()), !dbg !5731
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5731
  %msi_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 46, !dbg !5731
  %10 = bitcast [5 x i8]* %msi_enabled to i40*, !dbg !5731
  %bf.load8 = load i40, i40* %10, align 1, !dbg !5731
  %bf.lshr9 = lshr i40 %bf.load8, 12, !dbg !5731
  %bf.clear10 = and i40 %bf.lshr9, 1, !dbg !5731
  %bf.cast11 = trunc i40 %bf.clear10 to i32, !dbg !5731
  %tobool12 = icmp ne i32 %bf.cast11, 0, !dbg !5731
  %lnot = xor i1 %tobool12, true, !dbg !5731
  %lnot13 = xor i1 %lnot, true, !dbg !5731
  %lnot.ext = zext i1 %lnot13 to i32, !dbg !5731
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5731
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !5732
  %tobool14 = icmp ne i32 %11, 0, !dbg !5732
  %lnot15 = xor i1 %tobool14, true, !dbg !5732
  %lnot17 = xor i1 %lnot15, true, !dbg !5732
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !5732
  %conv = sext i32 %lnot.ext18 to i64, !dbg !5732
  %tobool19 = icmp ne i64 %conv, 0, !dbg !5732
  br i1 %tobool19, label %if.then20, label %if.end27, !dbg !5731

if.then20:                                        ; preds = %if.end7
  br label %do.body, !dbg !5732

do.body:                                          ; preds = %if.then20
  br label %do.body21, !dbg !5734

do.body21:                                        ; preds = %do.body
  br label %do.end, !dbg !5736

do.end:                                           ; preds = %do.body21
  br label %do.body22, !dbg !5734

do.body22:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1075, i32 2307, i64 12) #9, !dbg !5738, !srcloc !5740
  br label %do.end23, !dbg !5738

do.end23:                                         ; preds = %do.body22
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 273) #9, !dbg !5741, !srcloc !5743
  br label %do.body24, !dbg !5734

do.body24:                                        ; preds = %do.end23
  br label %do.end25, !dbg !5744

do.end25:                                         ; preds = %do.body24
  br label %do.end26, !dbg !5734

do.end26:                                         ; preds = %do.end25
  br label %if.end27, !dbg !5734

if.end27:                                         ; preds = %do.end26, %if.end7
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !5731
  %tobool28 = icmp ne i32 %12, 0, !dbg !5731
  %lnot29 = xor i1 %tobool28, true, !dbg !5731
  %lnot31 = xor i1 %lnot29, true, !dbg !5731
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !5731
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !5731
  store i64 %conv33, i64* %tmp, align 8, !dbg !5732
  %13 = load i64, i64* %tmp, align 8, !dbg !5731
  %tobool34 = icmp ne i64 %13, 0, !dbg !5746
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !5747

if.then35:                                        ; preds = %if.end27
  store i32 -22, i32* %retval, align 4, !dbg !5748
  br label %return, !dbg !5748

if.end36:                                         ; preds = %if.end27
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5749
  %call37 = call i32 @pci_msi_vec_count(%struct.pci_dev* %14) #8, !dbg !5750
  store i32 %call37, i32* %nvec, align 4, !dbg !5751
  %15 = load i32, i32* %nvec, align 4, !dbg !5752
  %cmp38 = icmp slt i32 %15, 0, !dbg !5754
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !5755

if.then40:                                        ; preds = %if.end36
  %16 = load i32, i32* %nvec, align 4, !dbg !5756
  store i32 %16, i32* %retval, align 4, !dbg !5757
  br label %return, !dbg !5757

if.end41:                                         ; preds = %if.end36
  %17 = load i32, i32* %nvec, align 4, !dbg !5758
  %18 = load i32, i32* %minvec.addr, align 4, !dbg !5760
  %cmp42 = icmp slt i32 %17, %18, !dbg !5761
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !5762

if.then44:                                        ; preds = %if.end41
  store i32 -28, i32* %retval, align 4, !dbg !5763
  br label %return, !dbg !5763

if.end45:                                         ; preds = %if.end41
  %19 = load i32, i32* %nvec, align 4, !dbg !5764
  %20 = load i32, i32* %maxvec.addr, align 4, !dbg !5766
  %cmp46 = icmp sgt i32 %19, %20, !dbg !5767
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !5768

if.then48:                                        ; preds = %if.end45
  %21 = load i32, i32* %maxvec.addr, align 4, !dbg !5769
  store i32 %21, i32* %nvec, align 4, !dbg !5770
  br label %if.end49, !dbg !5771

if.end49:                                         ; preds = %if.then48, %if.end45
  br label %for.cond, !dbg !5772

for.cond:                                         ; preds = %if.end70, %if.end49
  %22 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !5773
  %tobool50 = icmp ne %struct.irq_affinity* %22, null, !dbg !5773
  br i1 %tobool50, label %if.then51, label %if.end57, !dbg !5778

if.then51:                                        ; preds = %for.cond
  %23 = load i32, i32* %minvec.addr, align 4, !dbg !5779
  %24 = load i32, i32* %nvec, align 4, !dbg !5781
  %25 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !5782
  %call52 = call i32 @irq_calc_affinity_vectors(i32 %23, i32 %24, %struct.irq_affinity* %25) #8, !dbg !5783
  store i32 %call52, i32* %nvec, align 4, !dbg !5784
  %26 = load i32, i32* %nvec, align 4, !dbg !5785
  %27 = load i32, i32* %minvec.addr, align 4, !dbg !5787
  %cmp53 = icmp slt i32 %26, %27, !dbg !5788
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !5789

if.then55:                                        ; preds = %if.then51
  store i32 -28, i32* %retval, align 4, !dbg !5790
  br label %return, !dbg !5790

if.end56:                                         ; preds = %if.then51
  br label %if.end57, !dbg !5791

if.end57:                                         ; preds = %if.end56, %for.cond
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5792
  %29 = load i32, i32* %nvec, align 4, !dbg !5793
  %30 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !5794
  %call58 = call i32 @msi_capability_init(%struct.pci_dev* %28, i32 %29, %struct.irq_affinity* %30) #8, !dbg !5795
  store i32 %call58, i32* %rc, align 4, !dbg !5796
  %31 = load i32, i32* %rc, align 4, !dbg !5797
  %cmp59 = icmp eq i32 %31, 0, !dbg !5799
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !5800

if.then61:                                        ; preds = %if.end57
  %32 = load i32, i32* %nvec, align 4, !dbg !5801
  store i32 %32, i32* %retval, align 4, !dbg !5802
  br label %return, !dbg !5802

if.end62:                                         ; preds = %if.end57
  %33 = load i32, i32* %rc, align 4, !dbg !5803
  %cmp63 = icmp slt i32 %33, 0, !dbg !5805
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !5806

if.then65:                                        ; preds = %if.end62
  %34 = load i32, i32* %rc, align 4, !dbg !5807
  store i32 %34, i32* %retval, align 4, !dbg !5808
  br label %return, !dbg !5808

if.end66:                                         ; preds = %if.end62
  %35 = load i32, i32* %rc, align 4, !dbg !5809
  %36 = load i32, i32* %minvec.addr, align 4, !dbg !5811
  %cmp67 = icmp slt i32 %35, %36, !dbg !5812
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !5813

if.then69:                                        ; preds = %if.end66
  store i32 -28, i32* %retval, align 4, !dbg !5814
  br label %return, !dbg !5814

if.end70:                                         ; preds = %if.end66
  %37 = load i32, i32* %rc, align 4, !dbg !5815
  store i32 %37, i32* %nvec, align 4, !dbg !5816
  br label %for.cond, !dbg !5817, !llvm.loop !5818

return:                                           ; preds = %if.then69, %if.then65, %if.then61, %if.then55, %if.then44, %if.then40, %if.then35, %if.then6, %if.then2, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !5821
  ret i32 %38, !dbg !5821
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_enable_msix_range(%struct.pci_dev* %dev, %struct.msix_entry* %entries, i32 %minvec, i32 %maxvec) #0 !dbg !5822 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %entries.addr = alloca %struct.msix_entry*, align 8
  %minvec.addr = alloca i32, align 4
  %maxvec.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5830, metadata !DIExpression()), !dbg !5831
  store %struct.msix_entry* %entries, %struct.msix_entry** %entries.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msix_entry** %entries.addr, metadata !5832, metadata !DIExpression()), !dbg !5833
  store i32 %minvec, i32* %minvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minvec.addr, metadata !5834, metadata !DIExpression()), !dbg !5835
  store i32 %maxvec, i32* %maxvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxvec.addr, metadata !5836, metadata !DIExpression()), !dbg !5837
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5838
  %1 = load %struct.msix_entry*, %struct.msix_entry** %entries.addr, align 8, !dbg !5839
  %2 = load i32, i32* %minvec.addr, align 4, !dbg !5840
  %3 = load i32, i32* %maxvec.addr, align 4, !dbg !5841
  %call = call i32 @__pci_enable_msix_range(%struct.pci_dev* %0, %struct.msix_entry* %1, i32 %2, i32 %3, %struct.irq_affinity* null, i32 0) #8, !dbg !5842
  ret i32 %call, !dbg !5843
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__pci_enable_msix_range(%struct.pci_dev* %dev, %struct.msix_entry* %entries, i32 %minvec, i32 %maxvec, %struct.irq_affinity* %affd, i32 %flags) #0 !dbg !5844 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %entries.addr = alloca %struct.msix_entry*, align 8
  %minvec.addr = alloca i32, align 4
  %maxvec.addr = alloca i32, align 4
  %affd.addr = alloca %struct.irq_affinity*, align 8
  %flags.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  %nvec = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5847, metadata !DIExpression()), !dbg !5848
  store %struct.msix_entry* %entries, %struct.msix_entry** %entries.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msix_entry** %entries.addr, metadata !5849, metadata !DIExpression()), !dbg !5850
  store i32 %minvec, i32* %minvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minvec.addr, metadata !5851, metadata !DIExpression()), !dbg !5852
  store i32 %maxvec, i32* %maxvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxvec.addr, metadata !5853, metadata !DIExpression()), !dbg !5854
  store %struct.irq_affinity* %affd, %struct.irq_affinity** %affd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_affinity** %affd.addr, metadata !5855, metadata !DIExpression()), !dbg !5856
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5857, metadata !DIExpression()), !dbg !5858
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !5859, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.declare(metadata i32* %nvec, metadata !5861, metadata !DIExpression()), !dbg !5862
  %0 = load i32, i32* %maxvec.addr, align 4, !dbg !5863
  store i32 %0, i32* %nvec, align 4, !dbg !5862
  %1 = load i32, i32* %maxvec.addr, align 4, !dbg !5864
  %2 = load i32, i32* %minvec.addr, align 4, !dbg !5866
  %cmp = icmp slt i32 %1, %2, !dbg !5867
  br i1 %cmp, label %if.then, label %if.end, !dbg !5868

if.then:                                          ; preds = %entry
  store i32 -34, i32* %retval, align 4, !dbg !5869
  br label %return, !dbg !5869

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5870, metadata !DIExpression()), !dbg !5873
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5873
  %msix_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 46, !dbg !5873
  %4 = bitcast [5 x i8]* %msix_enabled to i40*, !dbg !5873
  %bf.load = load i40, i40* %4, align 1, !dbg !5873
  %bf.lshr = lshr i40 %bf.load, 13, !dbg !5873
  %bf.clear = and i40 %bf.lshr, 1, !dbg !5873
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !5873
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5873
  %lnot = xor i1 %tobool, true, !dbg !5873
  %lnot1 = xor i1 %lnot, true, !dbg !5873
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5873
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5873
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !5874
  %tobool2 = icmp ne i32 %5, 0, !dbg !5874
  %lnot3 = xor i1 %tobool2, true, !dbg !5874
  %lnot5 = xor i1 %lnot3, true, !dbg !5874
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !5874
  %conv = sext i32 %lnot.ext6 to i64, !dbg !5874
  %tobool7 = icmp ne i64 %conv, 0, !dbg !5874
  br i1 %tobool7, label %if.then8, label %if.end15, !dbg !5873

if.then8:                                         ; preds = %if.end
  br label %do.body, !dbg !5874

do.body:                                          ; preds = %if.then8
  br label %do.body9, !dbg !5876

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !5878

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !5876

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1127, i32 2307, i64 12) #9, !dbg !5880, !srcloc !5882
  br label %do.end11, !dbg !5880

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 274) #9, !dbg !5883, !srcloc !5885
  br label %do.body12, !dbg !5876

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !5886

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !5876

do.end14:                                         ; preds = %do.end13
  br label %if.end15, !dbg !5876

if.end15:                                         ; preds = %do.end14, %if.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !5873
  %tobool16 = icmp ne i32 %6, 0, !dbg !5873
  %lnot17 = xor i1 %tobool16, true, !dbg !5873
  %lnot19 = xor i1 %lnot17, true, !dbg !5873
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !5873
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !5873
  store i64 %conv21, i64* %tmp, align 8, !dbg !5874
  %7 = load i64, i64* %tmp, align 8, !dbg !5873
  %tobool22 = icmp ne i64 %7, 0, !dbg !5888
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5889

if.then23:                                        ; preds = %if.end15
  store i32 -22, i32* %retval, align 4, !dbg !5890
  br label %return, !dbg !5890

if.end24:                                         ; preds = %if.end15
  br label %for.cond, !dbg !5891

for.cond:                                         ; preds = %if.end44, %if.end24
  %8 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !5892
  %tobool25 = icmp ne %struct.irq_affinity* %8, null, !dbg !5892
  br i1 %tobool25, label %if.then26, label %if.end31, !dbg !5897

if.then26:                                        ; preds = %for.cond
  %9 = load i32, i32* %minvec.addr, align 4, !dbg !5898
  %10 = load i32, i32* %nvec, align 4, !dbg !5900
  %11 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !5901
  %call = call i32 @irq_calc_affinity_vectors(i32 %9, i32 %10, %struct.irq_affinity* %11) #8, !dbg !5902
  store i32 %call, i32* %nvec, align 4, !dbg !5903
  %12 = load i32, i32* %nvec, align 4, !dbg !5904
  %13 = load i32, i32* %minvec.addr, align 4, !dbg !5906
  %cmp27 = icmp slt i32 %12, %13, !dbg !5907
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !5908

if.then29:                                        ; preds = %if.then26
  store i32 -28, i32* %retval, align 4, !dbg !5909
  br label %return, !dbg !5909

if.end30:                                         ; preds = %if.then26
  br label %if.end31, !dbg !5910

if.end31:                                         ; preds = %if.end30, %for.cond
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5911
  %15 = load %struct.msix_entry*, %struct.msix_entry** %entries.addr, align 8, !dbg !5912
  %16 = load i32, i32* %nvec, align 4, !dbg !5913
  %17 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !5914
  %18 = load i32, i32* %flags.addr, align 4, !dbg !5915
  %call32 = call i32 @__pci_enable_msix(%struct.pci_dev* %14, %struct.msix_entry* %15, i32 %16, %struct.irq_affinity* %17, i32 %18) #8, !dbg !5916
  store i32 %call32, i32* %rc, align 4, !dbg !5917
  %19 = load i32, i32* %rc, align 4, !dbg !5918
  %cmp33 = icmp eq i32 %19, 0, !dbg !5920
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !5921

if.then35:                                        ; preds = %if.end31
  %20 = load i32, i32* %nvec, align 4, !dbg !5922
  store i32 %20, i32* %retval, align 4, !dbg !5923
  br label %return, !dbg !5923

if.end36:                                         ; preds = %if.end31
  %21 = load i32, i32* %rc, align 4, !dbg !5924
  %cmp37 = icmp slt i32 %21, 0, !dbg !5926
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !5927

if.then39:                                        ; preds = %if.end36
  %22 = load i32, i32* %rc, align 4, !dbg !5928
  store i32 %22, i32* %retval, align 4, !dbg !5929
  br label %return, !dbg !5929

if.end40:                                         ; preds = %if.end36
  %23 = load i32, i32* %rc, align 4, !dbg !5930
  %24 = load i32, i32* %minvec.addr, align 4, !dbg !5932
  %cmp41 = icmp slt i32 %23, %24, !dbg !5933
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !5934

if.then43:                                        ; preds = %if.end40
  store i32 -28, i32* %retval, align 4, !dbg !5935
  br label %return, !dbg !5935

if.end44:                                         ; preds = %if.end40
  %25 = load i32, i32* %rc, align 4, !dbg !5936
  store i32 %25, i32* %nvec, align 4, !dbg !5937
  br label %for.cond, !dbg !5938, !llvm.loop !5939

return:                                           ; preds = %if.then43, %if.then39, %if.then35, %if.then29, %if.then23, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !5942
  ret i32 %26, !dbg !5942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_alloc_irq_vectors_affinity(%struct.pci_dev* %dev, i32 %min_vecs, i32 %max_vecs, i32 %flags, %struct.irq_affinity* %affd) #0 !dbg !5943 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %min_vecs.addr = alloca i32, align 4
  %max_vecs.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %affd.addr = alloca %struct.irq_affinity*, align 8
  %msi_default_affd = alloca %struct.irq_affinity, align 8
  %nvecs = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5946, metadata !DIExpression()), !dbg !5947
  store i32 %min_vecs, i32* %min_vecs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_vecs.addr, metadata !5948, metadata !DIExpression()), !dbg !5949
  store i32 %max_vecs, i32* %max_vecs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_vecs.addr, metadata !5950, metadata !DIExpression()), !dbg !5951
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5952, metadata !DIExpression()), !dbg !5953
  store %struct.irq_affinity* %affd, %struct.irq_affinity** %affd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_affinity** %affd.addr, metadata !5954, metadata !DIExpression()), !dbg !5955
  call void @llvm.dbg.declare(metadata %struct.irq_affinity* %msi_default_affd, metadata !5956, metadata !DIExpression()), !dbg !5957
  %0 = bitcast %struct.irq_affinity* %msi_default_affd to i8*, !dbg !5957
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 48, i1 false), !dbg !5957
  call void @llvm.dbg.declare(metadata i32* %nvecs, metadata !5958, metadata !DIExpression()), !dbg !5959
  store i32 -28, i32* %nvecs, align 4, !dbg !5959
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5960
  %and = and i32 %1, 8, !dbg !5962
  %tobool = icmp ne i32 %and, 0, !dbg !5962
  br i1 %tobool, label %if.then, label %if.else, !dbg !5963

if.then:                                          ; preds = %entry
  %2 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !5964
  %tobool1 = icmp ne %struct.irq_affinity* %2, null, !dbg !5964
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !5967

if.then2:                                         ; preds = %if.then
  store %struct.irq_affinity* %msi_default_affd, %struct.irq_affinity** %affd.addr, align 8, !dbg !5968
  br label %if.end, !dbg !5969

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end28, !dbg !5970

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5971, metadata !DIExpression()), !dbg !5975
  %3 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !5975
  %tobool3 = icmp ne %struct.irq_affinity* %3, null, !dbg !5975
  %lnot = xor i1 %tobool3, true, !dbg !5975
  %lnot4 = xor i1 %lnot, true, !dbg !5975
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !5975
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5975
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !5976
  %tobool5 = icmp ne i32 %4, 0, !dbg !5976
  %lnot6 = xor i1 %tobool5, true, !dbg !5976
  %lnot8 = xor i1 %lnot6, true, !dbg !5976
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !5976
  %conv = sext i32 %lnot.ext9 to i64, !dbg !5976
  %tobool10 = icmp ne i64 %conv, 0, !dbg !5976
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !5975

if.then11:                                        ; preds = %if.else
  br label %do.body, !dbg !5976

do.body:                                          ; preds = %if.then11
  br label %do.body12, !dbg !5978

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !5980

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !5978

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1201, i32 2305, i64 12) #9, !dbg !5982, !srcloc !5984
  br label %do.end14, !dbg !5982

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 275) #9, !dbg !5985, !srcloc !5987
  br label %do.body15, !dbg !5978

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !5988

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !5978

do.end17:                                         ; preds = %do.end16
  br label %if.end18, !dbg !5978

if.end18:                                         ; preds = %do.end17, %if.else
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !5975
  %tobool19 = icmp ne i32 %5, 0, !dbg !5975
  %lnot20 = xor i1 %tobool19, true, !dbg !5975
  %lnot22 = xor i1 %lnot20, true, !dbg !5975
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !5975
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !5975
  store i64 %conv24, i64* %tmp, align 8, !dbg !5976
  %6 = load i64, i64* %tmp, align 8, !dbg !5975
  %tobool25 = icmp ne i64 %6, 0, !dbg !5990
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !5991

if.then26:                                        ; preds = %if.end18
  store %struct.irq_affinity* null, %struct.irq_affinity** %affd.addr, align 8, !dbg !5992
  br label %if.end27, !dbg !5993

if.end27:                                         ; preds = %if.then26, %if.end18
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.end
  %7 = load i32, i32* %flags.addr, align 4, !dbg !5994
  %and29 = and i32 %7, 4, !dbg !5996
  %tobool30 = icmp ne i32 %and29, 0, !dbg !5996
  br i1 %tobool30, label %if.then31, label %if.end35, !dbg !5997

if.then31:                                        ; preds = %if.end28
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5998
  %9 = load i32, i32* %min_vecs.addr, align 4, !dbg !6000
  %10 = load i32, i32* %max_vecs.addr, align 4, !dbg !6001
  %11 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !6002
  %12 = load i32, i32* %flags.addr, align 4, !dbg !6003
  %call = call i32 @__pci_enable_msix_range(%struct.pci_dev* %8, %struct.msix_entry* null, i32 %9, i32 %10, %struct.irq_affinity* %11, i32 %12) #8, !dbg !6004
  store i32 %call, i32* %nvecs, align 4, !dbg !6005
  %13 = load i32, i32* %nvecs, align 4, !dbg !6006
  %cmp = icmp sgt i32 %13, 0, !dbg !6008
  br i1 %cmp, label %if.then33, label %if.end34, !dbg !6009

if.then33:                                        ; preds = %if.then31
  %14 = load i32, i32* %nvecs, align 4, !dbg !6010
  store i32 %14, i32* %retval, align 4, !dbg !6011
  br label %return, !dbg !6011

if.end34:                                         ; preds = %if.then31
  br label %if.end35, !dbg !6012

if.end35:                                         ; preds = %if.end34, %if.end28
  %15 = load i32, i32* %flags.addr, align 4, !dbg !6013
  %and36 = and i32 %15, 2, !dbg !6015
  %tobool37 = icmp ne i32 %and36, 0, !dbg !6015
  br i1 %tobool37, label %if.then38, label %if.end44, !dbg !6016

if.then38:                                        ; preds = %if.end35
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6017
  %17 = load i32, i32* %min_vecs.addr, align 4, !dbg !6019
  %18 = load i32, i32* %max_vecs.addr, align 4, !dbg !6020
  %19 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !6021
  %call39 = call i32 @__pci_enable_msi_range(%struct.pci_dev* %16, i32 %17, i32 %18, %struct.irq_affinity* %19) #8, !dbg !6022
  store i32 %call39, i32* %nvecs, align 4, !dbg !6023
  %20 = load i32, i32* %nvecs, align 4, !dbg !6024
  %cmp40 = icmp sgt i32 %20, 0, !dbg !6026
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !6027

if.then42:                                        ; preds = %if.then38
  %21 = load i32, i32* %nvecs, align 4, !dbg !6028
  store i32 %21, i32* %retval, align 4, !dbg !6029
  br label %return, !dbg !6029

if.end43:                                         ; preds = %if.then38
  br label %if.end44, !dbg !6030

if.end44:                                         ; preds = %if.end43, %if.end35
  %22 = load i32, i32* %flags.addr, align 4, !dbg !6031
  %and45 = and i32 %22, 1, !dbg !6033
  %tobool46 = icmp ne i32 %and45, 0, !dbg !6033
  br i1 %tobool46, label %if.then47, label %if.end57, !dbg !6034

if.then47:                                        ; preds = %if.end44
  %23 = load i32, i32* %min_vecs.addr, align 4, !dbg !6035
  %cmp48 = icmp eq i32 %23, 1, !dbg !6038
  br i1 %cmp48, label %land.lhs.true, label %if.end56, !dbg !6039

land.lhs.true:                                    ; preds = %if.then47
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6040
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 43, !dbg !6041
  %25 = load i32, i32* %irq, align 4, !dbg !6041
  %tobool50 = icmp ne i32 %25, 0, !dbg !6040
  br i1 %tobool50, label %if.then51, label %if.end56, !dbg !6042

if.then51:                                        ; preds = %land.lhs.true
  %26 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !6043
  %tobool52 = icmp ne %struct.irq_affinity* %26, null, !dbg !6043
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !6046

if.then53:                                        ; preds = %if.then51
  %27 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !6047
  %call54 = call %struct.irq_affinity_desc* @irq_create_affinity_masks(i32 1, %struct.irq_affinity* %27) #8, !dbg !6048
  br label %if.end55, !dbg !6048

if.end55:                                         ; preds = %if.then53, %if.then51
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6049
  call void @pci_intx(%struct.pci_dev* %28, i32 1) #8, !dbg !6050
  store i32 1, i32* %retval, align 4, !dbg !6051
  br label %return, !dbg !6051

if.end56:                                         ; preds = %land.lhs.true, %if.then47
  br label %if.end57, !dbg !6052

if.end57:                                         ; preds = %if.end56, %if.end44
  %29 = load i32, i32* %nvecs, align 4, !dbg !6053
  store i32 %29, i32* %retval, align 4, !dbg !6054
  br label %return, !dbg !6054

return:                                           ; preds = %if.end57, %if.end55, %if.then42, %if.then33
  %30 = load i32, i32* %retval, align 4, !dbg !6055
  ret i32 %30, !dbg !6055
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.irq_affinity_desc* @irq_create_affinity_masks(i32 %nvec, %struct.irq_affinity* %affd) #0 !dbg !6056 {
entry:
  %nvec.addr = alloca i32, align 4
  %affd.addr = alloca %struct.irq_affinity*, align 8
  store i32 %nvec, i32* %nvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nvec.addr, metadata !6059, metadata !DIExpression()), !dbg !6060
  store %struct.irq_affinity* %affd, %struct.irq_affinity** %affd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_affinity** %affd.addr, metadata !6061, metadata !DIExpression()), !dbg !6062
  ret %struct.irq_affinity_desc* null, !dbg !6063
}

; Function Attrs: noredzone
declare dso_local void @pci_intx(%struct.pci_dev*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_free_irq_vectors(%struct.pci_dev* %dev) #0 !dbg !6064 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6065, metadata !DIExpression()), !dbg !6066
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6067
  call void @pci_disable_msix(%struct.pci_dev* %0) #8, !dbg !6068
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6069
  call void @pci_disable_msi(%struct.pci_dev* %1) #8, !dbg !6070
  ret void, !dbg !6071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_irq_vector(%struct.pci_dev* %dev, i32 %nr) #0 !dbg !6072 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %nr.addr = alloca i32, align 4
  %entry1 = alloca %struct.msi_desc*, align 8
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.msi_desc*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp12 = alloca %struct.msi_desc*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp28 = alloca i64, align 8
  %entry42 = alloca %struct.msi_desc*, align 8
  %__mptr43 = alloca i8*, align 8
  %tmp49 = alloca %struct.msi_desc*, align 8
  %__ret_warn_on51 = alloca i32, align 4
  %tmp75 = alloca i64, align 8
  %__ret_warn_on85 = alloca i32, align 4
  %tmp109 = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6075, metadata !DIExpression()), !dbg !6076
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !6077, metadata !DIExpression()), !dbg !6078
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6079
  %msix_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !6081
  %1 = bitcast [5 x i8]* %msix_enabled to i40*, !dbg !6081
  %bf.load = load i40, i40* %1, align 1, !dbg !6081
  %bf.lshr = lshr i40 %bf.load, 13, !dbg !6081
  %bf.clear = and i40 %bf.lshr, 1, !dbg !6081
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !6081
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6079
  br i1 %tobool, label %if.then, label %if.end35, !dbg !6082

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !6083, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6086, metadata !DIExpression()), !dbg !6087
  store i32 0, i32* %i, align 4, !dbg !6087
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6088, metadata !DIExpression()), !dbg !6091
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6091
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !6091
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 14, !dbg !6091
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list, i32 0, i32 0, !dbg !6091
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6091
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !6091
  store i8* %4, i8** %__mptr, align 8, !dbg !6091
  br label %do.body, !dbg !6091

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !6092

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !6091
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !6091
  %6 = bitcast i8* %add.ptr to %struct.msi_desc*, !dbg !6091
  store %struct.msi_desc* %6, %struct.msi_desc** %tmp, align 8, !dbg !6092
  %7 = load %struct.msi_desc*, %struct.msi_desc** %tmp, align 8, !dbg !6091
  store %struct.msi_desc* %7, %struct.msi_desc** %entry1, align 8, !dbg !6094
  br label %for.cond, !dbg !6094

for.cond:                                         ; preds = %do.end11, %do.end
  %8 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !6095
  %list = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %8, i32 0, i32 0, !dbg !6095
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6095
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !6095
  %msi_list4 = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 14, !dbg !6095
  %cmp = icmp eq %struct.list_head* %list, %msi_list4, !dbg !6095
  %lnot = xor i1 %cmp, true, !dbg !6095
  br i1 %lnot, label %for.body, label %for.end, !dbg !6094

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !6097
  %11 = load i32, i32* %nr.addr, align 4, !dbg !6100
  %cmp5 = icmp eq i32 %10, %11, !dbg !6101
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !6102

if.then6:                                         ; preds = %for.body
  %12 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !6103
  %irq = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %12, i32 0, i32 1, !dbg !6104
  %13 = load i32, i32* %irq, align 8, !dbg !6104
  store i32 %13, i32* %retval, align 4, !dbg !6105
  br label %return, !dbg !6105

if.end:                                           ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !6106
  %inc = add i32 %14, 1, !dbg !6106
  store i32 %inc, i32* %i, align 4, !dbg !6106
  br label %for.inc, !dbg !6107

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !6108, metadata !DIExpression()), !dbg !6110
  %15 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !6110
  %list8 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %15, i32 0, i32 0, !dbg !6110
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %list8, i32 0, i32 0, !dbg !6110
  %16 = load %struct.list_head*, %struct.list_head** %next9, align 8, !dbg !6110
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !6110
  store i8* %17, i8** %__mptr7, align 8, !dbg !6110
  br label %do.body10, !dbg !6110

do.body10:                                        ; preds = %for.inc
  br label %do.end11, !dbg !6111

do.end11:                                         ; preds = %do.body10
  %18 = load i8*, i8** %__mptr7, align 8, !dbg !6110
  %add.ptr13 = getelementptr i8, i8* %18, i64 0, !dbg !6110
  %19 = bitcast i8* %add.ptr13 to %struct.msi_desc*, !dbg !6110
  store %struct.msi_desc* %19, %struct.msi_desc** %tmp12, align 8, !dbg !6111
  %20 = load %struct.msi_desc*, %struct.msi_desc** %tmp12, align 8, !dbg !6110
  store %struct.msi_desc* %20, %struct.msi_desc** %entry1, align 8, !dbg !6095
  br label %for.cond, !dbg !6095, !llvm.loop !6113

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6115, metadata !DIExpression()), !dbg !6117
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !6117
  %21 = load i32, i32* %__ret_warn_on, align 4, !dbg !6118
  %tobool14 = icmp ne i32 %21, 0, !dbg !6118
  %lnot15 = xor i1 %tobool14, true, !dbg !6118
  %lnot16 = xor i1 %lnot15, true, !dbg !6118
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !6118
  %conv = sext i32 %lnot.ext to i64, !dbg !6118
  %tobool17 = icmp ne i64 %conv, 0, !dbg !6118
  br i1 %tobool17, label %if.then18, label %if.end27, !dbg !6117

if.then18:                                        ; preds = %for.end
  br label %do.body19, !dbg !6118

do.body19:                                        ; preds = %if.then18
  br label %do.body20, !dbg !6120

do.body20:                                        ; preds = %do.body19
  br label %do.end21, !dbg !6122

do.end21:                                         ; preds = %do.body20
  br label %do.body22, !dbg !6120

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1266, i32 2307, i64 12) #9, !dbg !6124, !srcloc !6126
  br label %do.end23, !dbg !6124

do.end23:                                         ; preds = %do.body22
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 278) #9, !dbg !6127, !srcloc !6129
  br label %do.body24, !dbg !6120

do.body24:                                        ; preds = %do.end23
  br label %do.end25, !dbg !6130

do.end25:                                         ; preds = %do.body24
  br label %do.end26, !dbg !6120

do.end26:                                         ; preds = %do.end25
  br label %if.end27, !dbg !6120

if.end27:                                         ; preds = %do.end26, %for.end
  %22 = load i32, i32* %__ret_warn_on, align 4, !dbg !6117
  %tobool29 = icmp ne i32 %22, 0, !dbg !6117
  %lnot30 = xor i1 %tobool29, true, !dbg !6117
  %lnot32 = xor i1 %lnot30, true, !dbg !6117
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !6117
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !6117
  store i64 %conv34, i64* %tmp28, align 8, !dbg !6118
  %23 = load i64, i64* %tmp28, align 8, !dbg !6117
  store i32 -22, i32* %retval, align 4, !dbg !6132
  br label %return, !dbg !6132

if.end35:                                         ; preds = %entry
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6133
  %msi_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 46, !dbg !6135
  %25 = bitcast [5 x i8]* %msi_enabled to i40*, !dbg !6135
  %bf.load36 = load i40, i40* %25, align 1, !dbg !6135
  %bf.lshr37 = lshr i40 %bf.load36, 12, !dbg !6135
  %bf.clear38 = and i40 %bf.lshr37, 1, !dbg !6135
  %bf.cast39 = trunc i40 %bf.clear38 to i32, !dbg !6135
  %tobool40 = icmp ne i32 %bf.cast39, 0, !dbg !6133
  br i1 %tobool40, label %if.then41, label %if.else, !dbg !6136

if.then41:                                        ; preds = %if.end35
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry42, metadata !6137, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.declare(metadata i8** %__mptr43, metadata !6140, metadata !DIExpression()), !dbg !6142
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6142
  %dev44 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !6142
  %msi_list45 = getelementptr inbounds %struct.device, %struct.device* %dev44, i32 0, i32 14, !dbg !6142
  %next46 = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list45, i32 0, i32 0, !dbg !6142
  %27 = load %struct.list_head*, %struct.list_head** %next46, align 8, !dbg !6142
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !6142
  store i8* %28, i8** %__mptr43, align 8, !dbg !6142
  br label %do.body47, !dbg !6142

do.body47:                                        ; preds = %if.then41
  br label %do.end48, !dbg !6143

do.end48:                                         ; preds = %do.body47
  %29 = load i8*, i8** %__mptr43, align 8, !dbg !6142
  %add.ptr50 = getelementptr i8, i8* %29, i64 0, !dbg !6142
  %30 = bitcast i8* %add.ptr50 to %struct.msi_desc*, !dbg !6142
  store %struct.msi_desc* %30, %struct.msi_desc** %tmp49, align 8, !dbg !6143
  %31 = load %struct.msi_desc*, %struct.msi_desc** %tmp49, align 8, !dbg !6142
  store %struct.msi_desc* %31, %struct.msi_desc** %entry42, align 8, !dbg !6139
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on51, metadata !6145, metadata !DIExpression()), !dbg !6148
  %32 = load i32, i32* %nr.addr, align 4, !dbg !6148
  %33 = load %struct.msi_desc*, %struct.msi_desc** %entry42, align 8, !dbg !6148
  %nvec_used = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %33, i32 0, i32 2, !dbg !6148
  %34 = load i32, i32* %nvec_used, align 4, !dbg !6148
  %cmp52 = icmp uge i32 %32, %34, !dbg !6148
  %lnot54 = xor i1 %cmp52, true, !dbg !6148
  %lnot56 = xor i1 %lnot54, true, !dbg !6148
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !6148
  store i32 %lnot.ext57, i32* %__ret_warn_on51, align 4, !dbg !6148
  %35 = load i32, i32* %__ret_warn_on51, align 4, !dbg !6149
  %tobool58 = icmp ne i32 %35, 0, !dbg !6149
  %lnot59 = xor i1 %tobool58, true, !dbg !6149
  %lnot61 = xor i1 %lnot59, true, !dbg !6149
  %lnot.ext62 = zext i1 %lnot61 to i32, !dbg !6149
  %conv63 = sext i32 %lnot.ext62 to i64, !dbg !6149
  %tobool64 = icmp ne i64 %conv63, 0, !dbg !6149
  br i1 %tobool64, label %if.then65, label %if.end74, !dbg !6148

if.then65:                                        ; preds = %do.end48
  br label %do.body66, !dbg !6149

do.body66:                                        ; preds = %if.then65
  br label %do.body67, !dbg !6151

do.body67:                                        ; preds = %do.body66
  br label %do.end68, !dbg !6153

do.end68:                                         ; preds = %do.body67
  br label %do.body69, !dbg !6151

do.body69:                                        ; preds = %do.end68
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1273, i32 2307, i64 12) #9, !dbg !6155, !srcloc !6157
  br label %do.end70, !dbg !6155

do.end70:                                         ; preds = %do.body69
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 280) #9, !dbg !6158, !srcloc !6160
  br label %do.body71, !dbg !6151

do.body71:                                        ; preds = %do.end70
  br label %do.end72, !dbg !6161

do.end72:                                         ; preds = %do.body71
  br label %do.end73, !dbg !6151

do.end73:                                         ; preds = %do.end72
  br label %if.end74, !dbg !6151

if.end74:                                         ; preds = %do.end73, %do.end48
  %36 = load i32, i32* %__ret_warn_on51, align 4, !dbg !6148
  %tobool76 = icmp ne i32 %36, 0, !dbg !6148
  %lnot77 = xor i1 %tobool76, true, !dbg !6148
  %lnot79 = xor i1 %lnot77, true, !dbg !6148
  %lnot.ext80 = zext i1 %lnot79 to i32, !dbg !6148
  %conv81 = sext i32 %lnot.ext80 to i64, !dbg !6148
  store i64 %conv81, i64* %tmp75, align 8, !dbg !6149
  %37 = load i64, i64* %tmp75, align 8, !dbg !6148
  %tobool82 = icmp ne i64 %37, 0, !dbg !6163
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !6164

if.then83:                                        ; preds = %if.end74
  store i32 -22, i32* %retval, align 4, !dbg !6165
  br label %return, !dbg !6165

if.end84:                                         ; preds = %if.end74
  br label %if.end119, !dbg !6166

if.else:                                          ; preds = %if.end35
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on85, metadata !6167, metadata !DIExpression()), !dbg !6171
  %38 = load i32, i32* %nr.addr, align 4, !dbg !6171
  %cmp86 = icmp ugt i32 %38, 0, !dbg !6171
  %lnot88 = xor i1 %cmp86, true, !dbg !6171
  %lnot90 = xor i1 %lnot88, true, !dbg !6171
  %lnot.ext91 = zext i1 %lnot90 to i32, !dbg !6171
  store i32 %lnot.ext91, i32* %__ret_warn_on85, align 4, !dbg !6171
  %39 = load i32, i32* %__ret_warn_on85, align 4, !dbg !6172
  %tobool92 = icmp ne i32 %39, 0, !dbg !6172
  %lnot93 = xor i1 %tobool92, true, !dbg !6172
  %lnot95 = xor i1 %lnot93, true, !dbg !6172
  %lnot.ext96 = zext i1 %lnot95 to i32, !dbg !6172
  %conv97 = sext i32 %lnot.ext96 to i64, !dbg !6172
  %tobool98 = icmp ne i64 %conv97, 0, !dbg !6172
  br i1 %tobool98, label %if.then99, label %if.end108, !dbg !6171

if.then99:                                        ; preds = %if.else
  br label %do.body100, !dbg !6172

do.body100:                                       ; preds = %if.then99
  br label %do.body101, !dbg !6174

do.body101:                                       ; preds = %do.body100
  br label %do.end102, !dbg !6176

do.end102:                                        ; preds = %do.body101
  br label %do.body103, !dbg !6174

do.body103:                                       ; preds = %do.end102
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1276, i32 2307, i64 12) #9, !dbg !6178, !srcloc !6180
  br label %do.end104, !dbg !6178

do.end104:                                        ; preds = %do.body103
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 281) #9, !dbg !6181, !srcloc !6183
  br label %do.body105, !dbg !6174

do.body105:                                       ; preds = %do.end104
  br label %do.end106, !dbg !6184

do.end106:                                        ; preds = %do.body105
  br label %do.end107, !dbg !6174

do.end107:                                        ; preds = %do.end106
  br label %if.end108, !dbg !6174

if.end108:                                        ; preds = %do.end107, %if.else
  %40 = load i32, i32* %__ret_warn_on85, align 4, !dbg !6171
  %tobool110 = icmp ne i32 %40, 0, !dbg !6171
  %lnot111 = xor i1 %tobool110, true, !dbg !6171
  %lnot113 = xor i1 %lnot111, true, !dbg !6171
  %lnot.ext114 = zext i1 %lnot113 to i32, !dbg !6171
  %conv115 = sext i32 %lnot.ext114 to i64, !dbg !6171
  store i64 %conv115, i64* %tmp109, align 8, !dbg !6172
  %41 = load i64, i64* %tmp109, align 8, !dbg !6171
  %tobool116 = icmp ne i64 %41, 0, !dbg !6186
  br i1 %tobool116, label %if.then117, label %if.end118, !dbg !6187

if.then117:                                       ; preds = %if.end108
  store i32 -22, i32* %retval, align 4, !dbg !6188
  br label %return, !dbg !6188

if.end118:                                        ; preds = %if.end108
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.end84
  %42 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6189
  %irq120 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 43, !dbg !6190
  %43 = load i32, i32* %irq120, align 4, !dbg !6190
  %44 = load i32, i32* %nr.addr, align 4, !dbg !6191
  %add = add i32 %43, %44, !dbg !6192
  store i32 %add, i32* %retval, align 4, !dbg !6193
  br label %return, !dbg !6193

return:                                           ; preds = %if.end119, %if.then117, %if.then83, %if.end27, %if.then6
  %45 = load i32, i32* %retval, align 4, !dbg !6194
  ret i32 %45, !dbg !6194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.cpumask* @pci_irq_get_affinity(%struct.pci_dev* %dev, i32 %nr) #0 !dbg !6195 {
entry:
  %retval = alloca %struct.cpumask*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %nr.addr = alloca i32, align 4
  %entry1 = alloca %struct.msi_desc*, align 8
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.msi_desc*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp12 = alloca %struct.msi_desc*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp28 = alloca i64, align 8
  %entry41 = alloca %struct.msi_desc*, align 8
  %__mptr42 = alloca i8*, align 8
  %tmp48 = alloca %struct.msi_desc*, align 8
  %__ret_warn_on50 = alloca i32, align 4
  %tmp77 = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6198, metadata !DIExpression()), !dbg !6199
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !6200, metadata !DIExpression()), !dbg !6201
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6202
  %msix_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !6204
  %1 = bitcast [5 x i8]* %msix_enabled to i40*, !dbg !6204
  %bf.load = load i40, i40* %1, align 1, !dbg !6204
  %bf.lshr = lshr i40 %bf.load, 13, !dbg !6204
  %bf.clear = and i40 %bf.lshr, 1, !dbg !6204
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !6204
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6202
  br i1 %tobool, label %if.then, label %if.else, !dbg !6205

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !6206, metadata !DIExpression()), !dbg !6208
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6209, metadata !DIExpression()), !dbg !6210
  store i32 0, i32* %i, align 4, !dbg !6210
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6211, metadata !DIExpression()), !dbg !6214
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6214
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !6214
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 14, !dbg !6214
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list, i32 0, i32 0, !dbg !6214
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6214
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !6214
  store i8* %4, i8** %__mptr, align 8, !dbg !6214
  br label %do.body, !dbg !6214

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !6215

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !6214
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !6214
  %6 = bitcast i8* %add.ptr to %struct.msi_desc*, !dbg !6214
  store %struct.msi_desc* %6, %struct.msi_desc** %tmp, align 8, !dbg !6215
  %7 = load %struct.msi_desc*, %struct.msi_desc** %tmp, align 8, !dbg !6214
  store %struct.msi_desc* %7, %struct.msi_desc** %entry1, align 8, !dbg !6217
  br label %for.cond, !dbg !6217

for.cond:                                         ; preds = %do.end11, %do.end
  %8 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !6218
  %list = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %8, i32 0, i32 0, !dbg !6218
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6218
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !6218
  %msi_list4 = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 14, !dbg !6218
  %cmp = icmp eq %struct.list_head* %list, %msi_list4, !dbg !6218
  %lnot = xor i1 %cmp, true, !dbg !6218
  br i1 %lnot, label %for.body, label %for.end, !dbg !6217

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !6220
  %11 = load i32, i32* %nr.addr, align 4, !dbg !6223
  %cmp5 = icmp eq i32 %10, %11, !dbg !6224
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !6225

if.then6:                                         ; preds = %for.body
  %12 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !6226
  %affinity = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %12, i32 0, i32 5, !dbg !6227
  %13 = load %struct.irq_affinity_desc*, %struct.irq_affinity_desc** %affinity, align 8, !dbg !6227
  %mask = getelementptr inbounds %struct.irq_affinity_desc, %struct.irq_affinity_desc* %13, i32 0, i32 0, !dbg !6228
  store %struct.cpumask* %mask, %struct.cpumask** %retval, align 8, !dbg !6229
  br label %return, !dbg !6229

if.end:                                           ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !6230
  %inc = add i32 %14, 1, !dbg !6230
  store i32 %inc, i32* %i, align 4, !dbg !6230
  br label %for.inc, !dbg !6231

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !6232, metadata !DIExpression()), !dbg !6234
  %15 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !6234
  %list8 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %15, i32 0, i32 0, !dbg !6234
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %list8, i32 0, i32 0, !dbg !6234
  %16 = load %struct.list_head*, %struct.list_head** %next9, align 8, !dbg !6234
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !6234
  store i8* %17, i8** %__mptr7, align 8, !dbg !6234
  br label %do.body10, !dbg !6234

do.body10:                                        ; preds = %for.inc
  br label %do.end11, !dbg !6235

do.end11:                                         ; preds = %do.body10
  %18 = load i8*, i8** %__mptr7, align 8, !dbg !6234
  %add.ptr13 = getelementptr i8, i8* %18, i64 0, !dbg !6234
  %19 = bitcast i8* %add.ptr13 to %struct.msi_desc*, !dbg !6234
  store %struct.msi_desc* %19, %struct.msi_desc** %tmp12, align 8, !dbg !6235
  %20 = load %struct.msi_desc*, %struct.msi_desc** %tmp12, align 8, !dbg !6234
  store %struct.msi_desc* %20, %struct.msi_desc** %entry1, align 8, !dbg !6218
  br label %for.cond, !dbg !6218, !llvm.loop !6237

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6239, metadata !DIExpression()), !dbg !6241
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !6241
  %21 = load i32, i32* %__ret_warn_on, align 4, !dbg !6242
  %tobool14 = icmp ne i32 %21, 0, !dbg !6242
  %lnot15 = xor i1 %tobool14, true, !dbg !6242
  %lnot16 = xor i1 %lnot15, true, !dbg !6242
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !6242
  %conv = sext i32 %lnot.ext to i64, !dbg !6242
  %tobool17 = icmp ne i64 %conv, 0, !dbg !6242
  br i1 %tobool17, label %if.then18, label %if.end27, !dbg !6241

if.then18:                                        ; preds = %for.end
  br label %do.body19, !dbg !6242

do.body19:                                        ; preds = %if.then18
  br label %do.body20, !dbg !6244

do.body20:                                        ; preds = %do.body19
  br label %do.end21, !dbg !6246

do.end21:                                         ; preds = %do.body20
  br label %do.body22, !dbg !6244

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1300, i32 2307, i64 12) #9, !dbg !6248, !srcloc !6250
  br label %do.end23, !dbg !6248

do.end23:                                         ; preds = %do.body22
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 284) #9, !dbg !6251, !srcloc !6253
  br label %do.body24, !dbg !6244

do.body24:                                        ; preds = %do.end23
  br label %do.end25, !dbg !6254

do.end25:                                         ; preds = %do.body24
  br label %do.end26, !dbg !6244

do.end26:                                         ; preds = %do.end25
  br label %if.end27, !dbg !6244

if.end27:                                         ; preds = %do.end26, %for.end
  %22 = load i32, i32* %__ret_warn_on, align 4, !dbg !6241
  %tobool29 = icmp ne i32 %22, 0, !dbg !6241
  %lnot30 = xor i1 %tobool29, true, !dbg !6241
  %lnot32 = xor i1 %lnot30, true, !dbg !6241
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !6241
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !6241
  store i64 %conv34, i64* %tmp28, align 8, !dbg !6242
  %23 = load i64, i64* %tmp28, align 8, !dbg !6241
  store %struct.cpumask* null, %struct.cpumask** %retval, align 8, !dbg !6256
  br label %return, !dbg !6256

if.else:                                          ; preds = %entry
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6257
  %msi_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 46, !dbg !6259
  %25 = bitcast [5 x i8]* %msi_enabled to i40*, !dbg !6259
  %bf.load35 = load i40, i40* %25, align 1, !dbg !6259
  %bf.lshr36 = lshr i40 %bf.load35, 12, !dbg !6259
  %bf.clear37 = and i40 %bf.lshr36, 1, !dbg !6259
  %bf.cast38 = trunc i40 %bf.clear37 to i32, !dbg !6259
  %tobool39 = icmp ne i32 %bf.cast38, 0, !dbg !6257
  br i1 %tobool39, label %if.then40, label %if.else89, !dbg !6260

if.then40:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry41, metadata !6261, metadata !DIExpression()), !dbg !6263
  call void @llvm.dbg.declare(metadata i8** %__mptr42, metadata !6264, metadata !DIExpression()), !dbg !6266
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6266
  %dev43 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !6266
  %msi_list44 = getelementptr inbounds %struct.device, %struct.device* %dev43, i32 0, i32 14, !dbg !6266
  %next45 = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list44, i32 0, i32 0, !dbg !6266
  %27 = load %struct.list_head*, %struct.list_head** %next45, align 8, !dbg !6266
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !6266
  store i8* %28, i8** %__mptr42, align 8, !dbg !6266
  br label %do.body46, !dbg !6266

do.body46:                                        ; preds = %if.then40
  br label %do.end47, !dbg !6267

do.end47:                                         ; preds = %do.body46
  %29 = load i8*, i8** %__mptr42, align 8, !dbg !6266
  %add.ptr49 = getelementptr i8, i8* %29, i64 0, !dbg !6266
  %30 = bitcast i8* %add.ptr49 to %struct.msi_desc*, !dbg !6266
  store %struct.msi_desc* %30, %struct.msi_desc** %tmp48, align 8, !dbg !6267
  %31 = load %struct.msi_desc*, %struct.msi_desc** %tmp48, align 8, !dbg !6266
  store %struct.msi_desc* %31, %struct.msi_desc** %entry41, align 8, !dbg !6263
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on50, metadata !6269, metadata !DIExpression()), !dbg !6272
  %32 = load %struct.msi_desc*, %struct.msi_desc** %entry41, align 8, !dbg !6272
  %tobool51 = icmp ne %struct.msi_desc* %32, null, !dbg !6272
  br i1 %tobool51, label %lor.lhs.false, label %lor.end, !dbg !6272

lor.lhs.false:                                    ; preds = %do.end47
  %33 = load %struct.msi_desc*, %struct.msi_desc** %entry41, align 8, !dbg !6272
  %affinity52 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %33, i32 0, i32 5, !dbg !6272
  %34 = load %struct.irq_affinity_desc*, %struct.irq_affinity_desc** %affinity52, align 8, !dbg !6272
  %tobool53 = icmp ne %struct.irq_affinity_desc* %34, null, !dbg !6272
  br i1 %tobool53, label %lor.rhs, label %lor.end, !dbg !6272

lor.rhs:                                          ; preds = %lor.lhs.false
  %35 = load i32, i32* %nr.addr, align 4, !dbg !6272
  %36 = load %struct.msi_desc*, %struct.msi_desc** %entry41, align 8, !dbg !6272
  %nvec_used = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %36, i32 0, i32 2, !dbg !6272
  %37 = load i32, i32* %nvec_used, align 4, !dbg !6272
  %cmp54 = icmp uge i32 %35, %37, !dbg !6272
  br label %lor.end, !dbg !6272

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %do.end47
  %38 = phi i1 [ true, %lor.lhs.false ], [ true, %do.end47 ], [ %cmp54, %lor.rhs ]
  %lnot56 = xor i1 %38, true, !dbg !6272
  %lnot58 = xor i1 %lnot56, true, !dbg !6272
  %lnot.ext59 = zext i1 %lnot58 to i32, !dbg !6272
  store i32 %lnot.ext59, i32* %__ret_warn_on50, align 4, !dbg !6272
  %39 = load i32, i32* %__ret_warn_on50, align 4, !dbg !6273
  %tobool60 = icmp ne i32 %39, 0, !dbg !6273
  %lnot61 = xor i1 %tobool60, true, !dbg !6273
  %lnot63 = xor i1 %lnot61, true, !dbg !6273
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !6273
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !6273
  %tobool66 = icmp ne i64 %conv65, 0, !dbg !6273
  br i1 %tobool66, label %if.then67, label %if.end76, !dbg !6272

if.then67:                                        ; preds = %lor.end
  br label %do.body68, !dbg !6273

do.body68:                                        ; preds = %if.then67
  br label %do.body69, !dbg !6275

do.body69:                                        ; preds = %do.body68
  br label %do.end70, !dbg !6277

do.end70:                                         ; preds = %do.body69
  br label %do.body71, !dbg !6275

do.body71:                                        ; preds = %do.end70
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1306, i32 2307, i64 12) #9, !dbg !6279, !srcloc !6281
  br label %do.end72, !dbg !6279

do.end72:                                         ; preds = %do.body71
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 286) #9, !dbg !6282, !srcloc !6284
  br label %do.body73, !dbg !6275

do.body73:                                        ; preds = %do.end72
  br label %do.end74, !dbg !6285

do.end74:                                         ; preds = %do.body73
  br label %do.end75, !dbg !6275

do.end75:                                         ; preds = %do.end74
  br label %if.end76, !dbg !6275

if.end76:                                         ; preds = %do.end75, %lor.end
  %40 = load i32, i32* %__ret_warn_on50, align 4, !dbg !6272
  %tobool78 = icmp ne i32 %40, 0, !dbg !6272
  %lnot79 = xor i1 %tobool78, true, !dbg !6272
  %lnot81 = xor i1 %lnot79, true, !dbg !6272
  %lnot.ext82 = zext i1 %lnot81 to i32, !dbg !6272
  %conv83 = sext i32 %lnot.ext82 to i64, !dbg !6272
  store i64 %conv83, i64* %tmp77, align 8, !dbg !6273
  %41 = load i64, i64* %tmp77, align 8, !dbg !6272
  %tobool84 = icmp ne i64 %41, 0, !dbg !6287
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !6288

if.then85:                                        ; preds = %if.end76
  store %struct.cpumask* null, %struct.cpumask** %retval, align 8, !dbg !6289
  br label %return, !dbg !6289

if.end86:                                         ; preds = %if.end76
  %42 = load %struct.msi_desc*, %struct.msi_desc** %entry41, align 8, !dbg !6290
  %affinity87 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %42, i32 0, i32 5, !dbg !6291
  %43 = load %struct.irq_affinity_desc*, %struct.irq_affinity_desc** %affinity87, align 8, !dbg !6291
  %44 = load i32, i32* %nr.addr, align 4, !dbg !6292
  %idxprom = sext i32 %44 to i64, !dbg !6290
  %arrayidx = getelementptr %struct.irq_affinity_desc, %struct.irq_affinity_desc* %43, i64 %idxprom, !dbg !6290
  %mask88 = getelementptr inbounds %struct.irq_affinity_desc, %struct.irq_affinity_desc* %arrayidx, i32 0, i32 0, !dbg !6293
  store %struct.cpumask* %mask88, %struct.cpumask** %retval, align 8, !dbg !6294
  br label %return, !dbg !6294

if.else89:                                        ; preds = %if.else
  store %struct.cpumask* @__cpu_possible_mask, %struct.cpumask** %retval, align 8, !dbg !6295
  br label %return, !dbg !6295

return:                                           ; preds = %if.else89, %if.end86, %if.then85, %if.end27, %if.then6
  %45 = load %struct.cpumask*, %struct.cpumask** %retval, align 8, !dbg !6297
  ret %struct.cpumask* %45, !dbg !6297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @msi_desc_to_pci_sysdata(%struct.msi_desc* %desc) #0 !dbg !6298 {
entry:
  %desc.addr = alloca %struct.msi_desc*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  store %struct.msi_desc* %desc, %struct.msi_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc.addr, metadata !6299, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !6301, metadata !DIExpression()), !dbg !6302
  %0 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !6303
  %call = call %struct.pci_dev* @msi_desc_to_pci_dev(%struct.msi_desc* %0) #8, !dbg !6304
  store %struct.pci_dev* %call, %struct.pci_dev** %dev, align 8, !dbg !6302
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6305
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 1, !dbg !6306
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6306
  %sysdata = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 11, !dbg !6307
  %3 = load i8*, i8** %sysdata, align 8, !dbg !6307
  ret i8* %3, !dbg !6308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_msi_domain_write_msg(%struct.irq_data* %irq_data, %struct.msi_msg* %msg) #0 !dbg !6309 {
entry:
  %irq_data.addr = alloca %struct.irq_data*, align 8
  %msg.addr = alloca %struct.msi_msg*, align 8
  %desc = alloca %struct.msi_desc*, align 8
  store %struct.irq_data* %irq_data, %struct.irq_data** %irq_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %irq_data.addr, metadata !6310, metadata !DIExpression()), !dbg !6311
  store %struct.msi_msg* %msg, %struct.msi_msg** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_msg** %msg.addr, metadata !6312, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc, metadata !6314, metadata !DIExpression()), !dbg !6315
  %0 = load %struct.irq_data*, %struct.irq_data** %irq_data.addr, align 8, !dbg !6316
  %call = call %struct.msi_desc* @irq_data_get_msi_desc(%struct.irq_data* %0) #8, !dbg !6317
  store %struct.msi_desc* %call, %struct.msi_desc** %desc, align 8, !dbg !6315
  %1 = load %struct.msi_desc*, %struct.msi_desc** %desc, align 8, !dbg !6318
  %irq = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %1, i32 0, i32 1, !dbg !6320
  %2 = load i32, i32* %irq, align 8, !dbg !6320
  %3 = load %struct.irq_data*, %struct.irq_data** %irq_data.addr, align 8, !dbg !6321
  %irq1 = getelementptr inbounds %struct.irq_data, %struct.irq_data* %3, i32 0, i32 1, !dbg !6322
  %4 = load i32, i32* %irq1, align 4, !dbg !6322
  %cmp = icmp eq i32 %2, %4, !dbg !6323
  br i1 %cmp, label %if.then, label %if.end, !dbg !6324

if.then:                                          ; preds = %entry
  %5 = load %struct.msi_desc*, %struct.msi_desc** %desc, align 8, !dbg !6325
  %6 = load %struct.msi_msg*, %struct.msi_msg** %msg.addr, align 8, !dbg !6326
  call void @__pci_write_msi_msg(%struct.msi_desc* %5, %struct.msi_msg* %6) #8, !dbg !6327
  br label %if.end, !dbg !6327

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.msi_desc* @irq_data_get_msi_desc(%struct.irq_data* %d) #0 !dbg !6329 {
entry:
  %d.addr = alloca %struct.irq_data*, align 8
  store %struct.irq_data* %d, %struct.irq_data** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d.addr, metadata !6332, metadata !DIExpression()), !dbg !6333
  %0 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !6334
  %common = getelementptr inbounds %struct.irq_data, %struct.irq_data* %0, i32 0, i32 3, !dbg !6335
  %1 = load %struct.irq_common_data*, %struct.irq_common_data** %common, align 8, !dbg !6335
  %msi_desc = getelementptr inbounds %struct.irq_common_data, %struct.irq_common_data* %1, i32 0, i32 2, !dbg !6336
  %2 = load %struct.msi_desc*, %struct.msi_desc** %msi_desc, align 8, !dbg !6336
  ret %struct.msi_desc* %2, !dbg !6337
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_msi_domain_check_cap(%struct.irq_domain* %domain, %struct.msi_domain_info* %info, %struct.device* %dev) #0 !dbg !6338 {
entry:
  %retval = alloca i32, align 4
  %domain.addr = alloca %struct.irq_domain*, align 8
  %info.addr = alloca %struct.msi_domain_info*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %desc = alloca %struct.msi_desc*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %tmp5 = alloca %struct.msi_desc*, align 8
  store %struct.irq_domain* %domain, %struct.irq_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %domain.addr, metadata !6339, metadata !DIExpression()), !dbg !6340
  store %struct.msi_domain_info* %info, %struct.msi_domain_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_domain_info** %info.addr, metadata !6341, metadata !DIExpression()), !dbg !6342
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6343, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc, metadata !6345, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6347, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !6350, metadata !DIExpression()), !dbg !6352
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6352
  %1 = bitcast %struct.device* %0 to i8*, !dbg !6352
  store i8* %1, i8** %__mptr1, align 8, !dbg !6352
  br label %do.body, !dbg !6352

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6353

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr1, align 8, !dbg !6352
  %add.ptr = getelementptr i8, i8* %2, i64 -176, !dbg !6352
  %3 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !6352
  store %struct.pci_dev* %3, %struct.pci_dev** %tmp, align 8, !dbg !6353
  %4 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6352
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !6349
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 14, !dbg !6349
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list, i32 0, i32 0, !dbg !6349
  %5 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6349
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !6349
  store i8* %6, i8** %__mptr, align 8, !dbg !6349
  br label %do.body3, !dbg !6349

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !6355

do.end4:                                          ; preds = %do.body3
  %7 = load i8*, i8** %__mptr, align 8, !dbg !6349
  %add.ptr6 = getelementptr i8, i8* %7, i64 0, !dbg !6349
  %8 = bitcast i8* %add.ptr6 to %struct.msi_desc*, !dbg !6349
  store %struct.msi_desc* %8, %struct.msi_desc** %tmp5, align 8, !dbg !6355
  %9 = load %struct.msi_desc*, %struct.msi_desc** %tmp5, align 8, !dbg !6349
  store %struct.msi_desc* %9, %struct.msi_desc** %desc, align 8, !dbg !6346
  %10 = load %struct.msi_desc*, %struct.msi_desc** %desc, align 8, !dbg !6357
  %call = call zeroext i1 @pci_msi_desc_is_multi_msi(%struct.msi_desc* %10) #8, !dbg !6359
  br i1 %call, label %land.lhs.true, label %if.else, !dbg !6360

land.lhs.true:                                    ; preds = %do.end4
  %11 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6361
  %flags = getelementptr inbounds %struct.msi_domain_info, %struct.msi_domain_info* %11, i32 0, i32 0, !dbg !6362
  %12 = load i32, i32* %flags, align 8, !dbg !6362
  %and = and i32 %12, 4, !dbg !6363
  %tobool = icmp ne i32 %and, 0, !dbg !6363
  br i1 %tobool, label %if.else, label %if.then, !dbg !6364

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !6365
  br label %return, !dbg !6365

if.else:                                          ; preds = %land.lhs.true, %do.end4
  %13 = load %struct.msi_desc*, %struct.msi_desc** %desc, align 8, !dbg !6366
  %14 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %13, i32 0, i32 8, !dbg !6368
  %15 = bitcast %union.anon.65* %14 to %struct.anon.66*, !dbg !6368
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %15, i32 0, i32 1, !dbg !6368
  %16 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !6369
  %bf.load = load i16, i16* %16, align 4, !dbg !6369
  %bf.clear = and i16 %bf.load, 1, !dbg !6369
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !6369
  %conv = zext i8 %bf.cast to i32, !dbg !6366
  %tobool7 = icmp ne i32 %conv, 0, !dbg !6366
  br i1 %tobool7, label %land.lhs.true8, label %if.end, !dbg !6370

land.lhs.true8:                                   ; preds = %if.else
  %17 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6371
  %flags9 = getelementptr inbounds %struct.msi_domain_info, %struct.msi_domain_info* %17, i32 0, i32 0, !dbg !6372
  %18 = load i32, i32* %flags9, align 8, !dbg !6372
  %and10 = and i32 %18, 8, !dbg !6373
  %tobool11 = icmp ne i32 %and10, 0, !dbg !6373
  br i1 %tobool11, label %if.end, label %if.then12, !dbg !6374

if.then12:                                        ; preds = %land.lhs.true8
  store i32 -524, i32* %retval, align 4, !dbg !6375
  br label %return, !dbg !6375

if.end:                                           ; preds = %land.lhs.true8, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6376
  br label %return, !dbg !6376

return:                                           ; preds = %if.end13, %if.then12, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !6377
  ret i32 %19, !dbg !6377
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_msi_desc_is_multi_msi(%struct.msi_desc* %desc) #0 !dbg !6378 {
entry:
  %desc.addr = alloca %struct.msi_desc*, align 8
  store %struct.msi_desc* %desc, %struct.msi_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc.addr, metadata !6381, metadata !DIExpression()), !dbg !6382
  %0 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !6383
  %1 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %0, i32 0, i32 8, !dbg !6384
  %2 = bitcast %union.anon.65* %1 to %struct.anon.66*, !dbg !6384
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %2, i32 0, i32 1, !dbg !6384
  %3 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !6385
  %bf.load = load i16, i16* %3, align 4, !dbg !6385
  %bf.clear = and i16 %bf.load, 1, !dbg !6385
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !6385
  %tobool = icmp ne i8 %bf.cast, 0, !dbg !6383
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6386

land.rhs:                                         ; preds = %entry
  %4 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !6387
  %nvec_used = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %4, i32 0, i32 2, !dbg !6388
  %5 = load i32, i32* %nvec_used, align 4, !dbg !6388
  %cmp = icmp ugt i32 %5, 1, !dbg !6389
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !6390
  ret i1 %6, !dbg !6391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.irq_domain* @pci_msi_create_irq_domain(%struct.fwnode_handle* %fwnode, %struct.msi_domain_info* %info, %struct.irq_domain* %parent) #0 !dbg !6392 {
entry:
  %retval = alloca %struct.irq_domain*, align 8
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  %info.addr = alloca %struct.msi_domain_info*, align 8
  %parent.addr = alloca %struct.irq_domain*, align 8
  %domain = alloca %struct.irq_domain*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !6395, metadata !DIExpression()), !dbg !6396
  store %struct.msi_domain_info* %info, %struct.msi_domain_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_domain_info** %info.addr, metadata !6397, metadata !DIExpression()), !dbg !6398
  store %struct.irq_domain* %parent, %struct.irq_domain** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %parent.addr, metadata !6399, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %domain, metadata !6401, metadata !DIExpression()), !dbg !6402
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6403, metadata !DIExpression()), !dbg !6406
  %0 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6406
  %flags = getelementptr inbounds %struct.msi_domain_info, %struct.msi_domain_info* %0, i32 0, i32 0, !dbg !6406
  %1 = load i32, i32* %flags, align 8, !dbg !6406
  %and = and i32 %1, 64, !dbg !6406
  %tobool = icmp ne i32 %and, 0, !dbg !6406
  %lnot = xor i1 %tobool, true, !dbg !6406
  %lnot1 = xor i1 %lnot, true, !dbg !6406
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6406
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6406
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !6407
  %tobool2 = icmp ne i32 %2, 0, !dbg !6407
  %lnot3 = xor i1 %tobool2, true, !dbg !6407
  %lnot5 = xor i1 %lnot3, true, !dbg !6407
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !6407
  %conv = sext i32 %lnot.ext6 to i64, !dbg !6407
  %tobool7 = icmp ne i64 %conv, 0, !dbg !6407
  br i1 %tobool7, label %if.then, label %if.end, !dbg !6406

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6407

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !6409

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !6411

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !6409

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1464, i32 2305, i64 12) #9, !dbg !6413, !srcloc !6415
  br label %do.end10, !dbg !6413

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 291) #9, !dbg !6416, !srcloc !6418
  br label %do.body11, !dbg !6409

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !6419

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !6409

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !6409

if.end:                                           ; preds = %do.end13, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !6406
  %tobool14 = icmp ne i32 %3, 0, !dbg !6406
  %lnot15 = xor i1 %tobool14, true, !dbg !6406
  %lnot17 = xor i1 %lnot15, true, !dbg !6406
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !6406
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !6406
  store i64 %conv19, i64* %tmp, align 8, !dbg !6407
  %4 = load i64, i64* %tmp, align 8, !dbg !6406
  %tobool20 = icmp ne i64 %4, 0, !dbg !6421
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !6422

if.then21:                                        ; preds = %if.end
  %5 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6423
  %flags22 = getelementptr inbounds %struct.msi_domain_info, %struct.msi_domain_info* %5, i32 0, i32 0, !dbg !6424
  %6 = load i32, i32* %flags22, align 8, !dbg !6425
  %and23 = and i32 %6, -65, !dbg !6425
  store i32 %and23, i32* %flags22, align 8, !dbg !6425
  br label %if.end24, !dbg !6423

if.end24:                                         ; preds = %if.then21, %if.end
  %7 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6426
  %flags25 = getelementptr inbounds %struct.msi_domain_info, %struct.msi_domain_info* %7, i32 0, i32 0, !dbg !6428
  %8 = load i32, i32* %flags25, align 8, !dbg !6428
  %and26 = and i32 %8, 1, !dbg !6429
  %tobool27 = icmp ne i32 %and26, 0, !dbg !6429
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !6430

if.then28:                                        ; preds = %if.end24
  %9 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6431
  call void @pci_msi_domain_update_dom_ops(%struct.msi_domain_info* %9) #8, !dbg !6432
  br label %if.end29, !dbg !6432

if.end29:                                         ; preds = %if.then28, %if.end24
  %10 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6433
  %flags30 = getelementptr inbounds %struct.msi_domain_info, %struct.msi_domain_info* %10, i32 0, i32 0, !dbg !6435
  %11 = load i32, i32* %flags30, align 8, !dbg !6435
  %and31 = and i32 %11, 2, !dbg !6436
  %tobool32 = icmp ne i32 %and31, 0, !dbg !6436
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !6437

if.then33:                                        ; preds = %if.end29
  %12 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6438
  call void @pci_msi_domain_update_chip_ops(%struct.msi_domain_info* %12) #8, !dbg !6439
  br label %if.end34, !dbg !6439

if.end34:                                         ; preds = %if.then33, %if.end29
  %13 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6440
  %flags35 = getelementptr inbounds %struct.msi_domain_info, %struct.msi_domain_info* %13, i32 0, i32 0, !dbg !6441
  %14 = load i32, i32* %flags35, align 8, !dbg !6442
  %or = or i32 %14, 16, !dbg !6442
  store i32 %or, i32* %flags35, align 8, !dbg !6442
  %15 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6443
  %flags36 = getelementptr inbounds %struct.msi_domain_info, %struct.msi_domain_info* %15, i32 0, i32 0, !dbg !6445
  %16 = load i32, i32* %flags36, align 8, !dbg !6446
  %or37 = or i32 %16, 32, !dbg !6446
  store i32 %or37, i32* %flags36, align 8, !dbg !6446
  %17 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6447
  %chip = getelementptr inbounds %struct.msi_domain_info, %struct.msi_domain_info* %17, i32 0, i32 2, !dbg !6448
  %18 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !6448
  %flags38 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %18, i32 0, i32 35, !dbg !6449
  %19 = load i64, i64* %flags38, align 8, !dbg !6450
  %or39 = or i64 %19, 32, !dbg !6450
  store i64 %or39, i64* %flags38, align 8, !dbg !6450
  %20 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !6451
  %21 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6452
  %22 = load %struct.irq_domain*, %struct.irq_domain** %parent.addr, align 8, !dbg !6453
  %call = call %struct.irq_domain* @msi_create_irq_domain(%struct.fwnode_handle* %20, %struct.msi_domain_info* %21, %struct.irq_domain* %22) #8, !dbg !6454
  store %struct.irq_domain* %call, %struct.irq_domain** %domain, align 8, !dbg !6455
  %23 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !6456
  %tobool40 = icmp ne %struct.irq_domain* %23, null, !dbg !6456
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !6458

if.then41:                                        ; preds = %if.end34
  store %struct.irq_domain* null, %struct.irq_domain** %retval, align 8, !dbg !6459
  br label %return, !dbg !6459

if.end42:                                         ; preds = %if.end34
  %24 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !6460
  call void @irq_domain_update_bus_token(%struct.irq_domain* %24, i32 3) #8, !dbg !6461
  %25 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !6462
  store %struct.irq_domain* %25, %struct.irq_domain** %retval, align 8, !dbg !6463
  br label %return, !dbg !6463

return:                                           ; preds = %if.end42, %if.then41
  %26 = load %struct.irq_domain*, %struct.irq_domain** %retval, align 8, !dbg !6464
  ret %struct.irq_domain* %26, !dbg !6464
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_msi_domain_update_dom_ops(%struct.msi_domain_info* %info) #0 !dbg !6465 {
entry:
  %info.addr = alloca %struct.msi_domain_info*, align 8
  %ops = alloca %struct.msi_domain_ops*, align 8
  store %struct.msi_domain_info* %info, %struct.msi_domain_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_domain_info** %info.addr, metadata !6468, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.declare(metadata %struct.msi_domain_ops** %ops, metadata !6470, metadata !DIExpression()), !dbg !6471
  %0 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6472
  %ops1 = getelementptr inbounds %struct.msi_domain_info, %struct.msi_domain_info* %0, i32 0, i32 1, !dbg !6473
  %1 = load %struct.msi_domain_ops*, %struct.msi_domain_ops** %ops1, align 8, !dbg !6473
  store %struct.msi_domain_ops* %1, %struct.msi_domain_ops** %ops, align 8, !dbg !6471
  %2 = load %struct.msi_domain_ops*, %struct.msi_domain_ops** %ops, align 8, !dbg !6474
  %cmp = icmp eq %struct.msi_domain_ops* %2, null, !dbg !6476
  br i1 %cmp, label %if.then, label %if.else, !dbg !6477

if.then:                                          ; preds = %entry
  %3 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6478
  %ops2 = getelementptr inbounds %struct.msi_domain_info, %struct.msi_domain_info* %3, i32 0, i32 1, !dbg !6480
  store %struct.msi_domain_ops* bitcast ({ i64 (%struct.msi_domain_info*, %struct.irq_alloc_info*)*, i32 (%struct.irq_domain*, %struct.msi_domain_info*, i32, i64, %struct.irq_alloc_info*)*, void (%struct.irq_domain*, %struct.msi_domain_info*, i32)*, i32 (%struct.irq_domain*, %struct.msi_domain_info*, %struct.device*)*, i32 (%struct.irq_domain*, %struct.device*, i32, %struct.irq_alloc_info*)*, void (%struct.irq_alloc_info*, i32)*, void (%struct.irq_alloc_info*, %struct.msi_desc*)*, i32 (%struct.irq_domain*, %struct.msi_desc*, i32)*, i32 (%struct.irq_domain*, %struct.device*, i32)*, void (%struct.irq_domain*, %struct.device*)* }* @pci_msi_domain_ops_default to %struct.msi_domain_ops*), %struct.msi_domain_ops** %ops2, align 8, !dbg !6481
  br label %if.end16, !dbg !6482

if.else:                                          ; preds = %entry
  %4 = load %struct.msi_domain_ops*, %struct.msi_domain_ops** %ops, align 8, !dbg !6483
  %set_desc = getelementptr inbounds %struct.msi_domain_ops, %struct.msi_domain_ops* %4, i32 0, i32 6, !dbg !6486
  %5 = load void (%struct.irq_alloc_info*, %struct.msi_desc*)*, void (%struct.irq_alloc_info*, %struct.msi_desc*)** %set_desc, align 8, !dbg !6486
  %cmp3 = icmp eq void (%struct.irq_alloc_info*, %struct.msi_desc*)* %5, null, !dbg !6487
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !6488

if.then4:                                         ; preds = %if.else
  %6 = load %struct.msi_domain_ops*, %struct.msi_domain_ops** %ops, align 8, !dbg !6489
  %set_desc5 = getelementptr inbounds %struct.msi_domain_ops, %struct.msi_domain_ops* %6, i32 0, i32 6, !dbg !6490
  store void (%struct.irq_alloc_info*, %struct.msi_desc*)* @pci_msi_domain_set_desc, void (%struct.irq_alloc_info*, %struct.msi_desc*)** %set_desc5, align 8, !dbg !6491
  br label %if.end, !dbg !6489

if.end:                                           ; preds = %if.then4, %if.else
  %7 = load %struct.msi_domain_ops*, %struct.msi_domain_ops** %ops, align 8, !dbg !6492
  %msi_check = getelementptr inbounds %struct.msi_domain_ops, %struct.msi_domain_ops* %7, i32 0, i32 3, !dbg !6494
  %msi_check6 = bitcast {}** %msi_check to i32 (%struct.irq_domain*, %struct.msi_domain_info*, %struct.device*)**, !dbg !6494
  %8 = load i32 (%struct.irq_domain*, %struct.msi_domain_info*, %struct.device*)*, i32 (%struct.irq_domain*, %struct.msi_domain_info*, %struct.device*)** %msi_check6, align 8, !dbg !6494
  %cmp7 = icmp eq i32 (%struct.irq_domain*, %struct.msi_domain_info*, %struct.device*)* %8, null, !dbg !6495
  br i1 %cmp7, label %if.then8, label %if.end11, !dbg !6496

if.then8:                                         ; preds = %if.end
  %9 = load %struct.msi_domain_ops*, %struct.msi_domain_ops** %ops, align 8, !dbg !6497
  %msi_check9 = getelementptr inbounds %struct.msi_domain_ops, %struct.msi_domain_ops* %9, i32 0, i32 3, !dbg !6498
  %msi_check10 = bitcast {}** %msi_check9 to i32 (%struct.irq_domain*, %struct.msi_domain_info*, %struct.device*)**, !dbg !6498
  store i32 (%struct.irq_domain*, %struct.msi_domain_info*, %struct.device*)* @pci_msi_domain_check_cap, i32 (%struct.irq_domain*, %struct.msi_domain_info*, %struct.device*)** %msi_check10, align 8, !dbg !6499
  br label %if.end11, !dbg !6497

if.end11:                                         ; preds = %if.then8, %if.end
  %10 = load %struct.msi_domain_ops*, %struct.msi_domain_ops** %ops, align 8, !dbg !6500
  %handle_error = getelementptr inbounds %struct.msi_domain_ops, %struct.msi_domain_ops* %10, i32 0, i32 7, !dbg !6502
  %11 = load i32 (%struct.irq_domain*, %struct.msi_desc*, i32)*, i32 (%struct.irq_domain*, %struct.msi_desc*, i32)** %handle_error, align 8, !dbg !6502
  %cmp12 = icmp eq i32 (%struct.irq_domain*, %struct.msi_desc*, i32)* %11, null, !dbg !6503
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !6504

if.then13:                                        ; preds = %if.end11
  %12 = load %struct.msi_domain_ops*, %struct.msi_domain_ops** %ops, align 8, !dbg !6505
  %handle_error14 = getelementptr inbounds %struct.msi_domain_ops, %struct.msi_domain_ops* %12, i32 0, i32 7, !dbg !6506
  store i32 (%struct.irq_domain*, %struct.msi_desc*, i32)* @pci_msi_domain_handle_error, i32 (%struct.irq_domain*, %struct.msi_desc*, i32)** %handle_error14, align 8, !dbg !6507
  br label %if.end15, !dbg !6505

if.end15:                                         ; preds = %if.then13, %if.end11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then
  ret void, !dbg !6508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_msi_domain_update_chip_ops(%struct.msi_domain_info* %info) #0 !dbg !6509 {
entry:
  %info.addr = alloca %struct.msi_domain_info*, align 8
  %chip = alloca %struct.irq_chip*, align 8
  store %struct.msi_domain_info* %info, %struct.msi_domain_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_domain_info** %info.addr, metadata !6510, metadata !DIExpression()), !dbg !6511
  call void @llvm.dbg.declare(metadata %struct.irq_chip** %chip, metadata !6512, metadata !DIExpression()), !dbg !6513
  %0 = load %struct.msi_domain_info*, %struct.msi_domain_info** %info.addr, align 8, !dbg !6514
  %chip1 = getelementptr inbounds %struct.msi_domain_info, %struct.msi_domain_info* %0, i32 0, i32 2, !dbg !6515
  %1 = load %struct.irq_chip*, %struct.irq_chip** %chip1, align 8, !dbg !6515
  store %struct.irq_chip* %1, %struct.irq_chip** %chip, align 8, !dbg !6513
  br label %do.body, !dbg !6516

do.body:                                          ; preds = %entry
  %2 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !6517
  %tobool = icmp ne %struct.irq_chip* %2, null, !dbg !6517
  %lnot = xor i1 %tobool, true, !dbg !6517
  %lnot2 = xor i1 %lnot, true, !dbg !6517
  %lnot3 = xor i1 %lnot2, true, !dbg !6517
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !6517
  %conv = sext i32 %lnot.ext to i64, !dbg !6517
  %tobool4 = icmp ne i64 %conv, 0, !dbg !6517
  br i1 %tobool4, label %if.then, label %if.end, !dbg !6520

if.then:                                          ; preds = %do.body
  br label %do.body5, !dbg !6517

do.body5:                                         ; preds = %if.then
  br label %do.body6, !dbg !6521

do.body6:                                         ; preds = %do.body5
  br label %do.end, !dbg !6523

do.end:                                           ; preds = %do.body6
  br label %do.body7, !dbg !6521

do.body7:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1438, i32 0, i64 12) #9, !dbg !6525, !srcloc !6527
  br label %do.end8, !dbg !6525

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !6521

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 290) #9, !dbg !6528, !srcloc !6531
  unreachable, !dbg !6532

do.end10:                                         ; No predecessors!
  br label %do.end11, !dbg !6521

do.end11:                                         ; preds = %do.end10
  br label %if.end, !dbg !6521

if.end:                                           ; preds = %do.end11, %do.body
  br label %do.end12, !dbg !6520

do.end12:                                         ; preds = %if.end
  %3 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !6533
  %irq_write_msi_msg = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %3, i32 0, i32 27, !dbg !6535
  %4 = load void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)** %irq_write_msi_msg, align 8, !dbg !6535
  %tobool13 = icmp ne void (%struct.irq_data*, %struct.msi_msg*)* %4, null, !dbg !6533
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !6536

if.then14:                                        ; preds = %do.end12
  %5 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !6537
  %irq_write_msi_msg15 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %5, i32 0, i32 27, !dbg !6538
  store void (%struct.irq_data*, %struct.msi_msg*)* @pci_msi_domain_write_msg, void (%struct.irq_data*, %struct.msi_msg*)** %irq_write_msi_msg15, align 8, !dbg !6539
  br label %if.end16, !dbg !6537

if.end16:                                         ; preds = %if.then14, %do.end12
  %6 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !6540
  %irq_mask = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %6, i32 0, i32 7, !dbg !6542
  %7 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_mask, align 8, !dbg !6542
  %tobool17 = icmp ne void (%struct.irq_data*)* %7, null, !dbg !6540
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !6543

if.then18:                                        ; preds = %if.end16
  %8 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !6544
  %irq_mask19 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %8, i32 0, i32 7, !dbg !6545
  store void (%struct.irq_data*)* @pci_msi_mask_irq, void (%struct.irq_data*)** %irq_mask19, align 8, !dbg !6546
  br label %if.end20, !dbg !6544

if.end20:                                         ; preds = %if.then18, %if.end16
  %9 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !6547
  %irq_unmask = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %9, i32 0, i32 9, !dbg !6549
  %10 = load void (%struct.irq_data*)*, void (%struct.irq_data*)** %irq_unmask, align 8, !dbg !6549
  %tobool21 = icmp ne void (%struct.irq_data*)* %10, null, !dbg !6547
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !6550

if.then22:                                        ; preds = %if.end20
  %11 = load %struct.irq_chip*, %struct.irq_chip** %chip, align 8, !dbg !6551
  %irq_unmask23 = getelementptr inbounds %struct.irq_chip, %struct.irq_chip* %11, i32 0, i32 9, !dbg !6552
  store void (%struct.irq_data*)* @pci_msi_unmask_irq, void (%struct.irq_data*)** %irq_unmask23, align 8, !dbg !6553
  br label %if.end24, !dbg !6551

if.end24:                                         ; preds = %if.then22, %if.end20
  ret void, !dbg !6554
}

; Function Attrs: noredzone
declare dso_local %struct.irq_domain* @msi_create_irq_domain(%struct.fwnode_handle*, %struct.msi_domain_info*, %struct.irq_domain*) #2

; Function Attrs: noredzone
declare dso_local void @irq_domain_update_bus_token(%struct.irq_domain*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_msi_domain_get_msi_rid(%struct.irq_domain* %domain, %struct.pci_dev* %pdev) #0 !dbg !6555 {
entry:
  %domain.addr = alloca %struct.irq_domain*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %of_node = alloca %struct.device_node*, align 8
  %rid = alloca i32, align 4
  store %struct.irq_domain* %domain, %struct.irq_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %domain.addr, metadata !6558, metadata !DIExpression()), !dbg !6559
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6560, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.declare(metadata %struct.device_node** %of_node, metadata !6562, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.declare(metadata i32* %rid, metadata !6564, metadata !DIExpression()), !dbg !6565
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6566
  %call = call zeroext i16 @pci_dev_id(%struct.pci_dev* %0) #8, !dbg !6567
  %conv = zext i16 %call to i32, !dbg !6567
  store i32 %conv, i32* %rid, align 4, !dbg !6565
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6568
  %2 = bitcast i32* %rid to i8*, !dbg !6569
  %call1 = call i32 @pci_for_each_dma_alias(%struct.pci_dev* %1, i32 (%struct.pci_dev*, i16, i8*)* @get_msi_id_cb, i8* %2) #8, !dbg !6570
  %3 = load %struct.irq_domain*, %struct.irq_domain** %domain.addr, align 8, !dbg !6571
  %call2 = call %struct.device_node* @irq_domain_get_of_node(%struct.irq_domain* %3) #8, !dbg !6572
  store %struct.device_node* %call2, %struct.device_node** %of_node, align 8, !dbg !6573
  %4 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !6574
  %tobool = icmp ne %struct.device_node* %4, null, !dbg !6574
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6574

cond.true:                                        ; preds = %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6575
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !6576
  %6 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !6577
  %7 = load i32, i32* %rid, align 4, !dbg !6578
  %call3 = call i32 @of_msi_map_id(%struct.device* %dev, %struct.device_node* %6, i32 %7) #8, !dbg !6579
  br label %cond.end, !dbg !6574

cond.false:                                       ; preds = %entry
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6580
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !6581
  %9 = load i32, i32* %rid, align 4, !dbg !6582
  %call5 = call i32 @iort_msi_map_id(%struct.device* %dev4, i32 %9) #8, !dbg !6583
  br label %cond.end, !dbg !6574

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call3, %cond.true ], [ %call5, %cond.false ], !dbg !6574
  store i32 %cond, i32* %rid, align 4, !dbg !6584
  %10 = load i32, i32* %rid, align 4, !dbg !6585
  ret i32 %10, !dbg !6586
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @pci_dev_id(%struct.pci_dev* %dev) #0 !dbg !6587 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6590, metadata !DIExpression()), !dbg !6591
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6592
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !6592
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6592
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 13, !dbg !6592
  %2 = load i8, i8* %number, align 8, !dbg !6592
  %conv = zext i8 %2 to i16, !dbg !6592
  %conv1 = zext i16 %conv to i32, !dbg !6592
  %shl = shl i32 %conv1, 8, !dbg !6592
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6592
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 6, !dbg !6592
  %4 = load i32, i32* %devfn, align 8, !dbg !6592
  %or = or i32 %shl, %4, !dbg !6592
  %conv2 = trunc i32 %or to i16, !dbg !6592
  ret i16 %conv2, !dbg !6593
}

; Function Attrs: noredzone
declare dso_local i32 @pci_for_each_dma_alias(%struct.pci_dev*, i32 (%struct.pci_dev*, i16, i8*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_msi_id_cb(%struct.pci_dev* %pdev, i16 zeroext %alias, i8* %data) #0 !dbg !6594 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %alias.addr = alloca i16, align 2
  %data.addr = alloca i8*, align 8
  %pa = alloca i32*, align 8
  %bus = alloca i8, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6597, metadata !DIExpression()), !dbg !6598
  store i16 %alias, i16* %alias.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %alias.addr, metadata !6599, metadata !DIExpression()), !dbg !6600
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6601, metadata !DIExpression()), !dbg !6602
  call void @llvm.dbg.declare(metadata i32** %pa, metadata !6603, metadata !DIExpression()), !dbg !6604
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6605
  %1 = bitcast i8* %0 to i32*, !dbg !6605
  store i32* %1, i32** %pa, align 8, !dbg !6604
  call void @llvm.dbg.declare(metadata i8* %bus, metadata !6606, metadata !DIExpression()), !dbg !6607
  %2 = load i32*, i32** %pa, align 8, !dbg !6608
  %3 = load i32, i32* %2, align 4, !dbg !6608
  %shr = lshr i32 %3, 8, !dbg !6608
  %and = and i32 %shr, 255, !dbg !6608
  %conv = trunc i32 %and to i8, !dbg !6608
  store i8 %conv, i8* %bus, align 1, !dbg !6607
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6609
  %bus1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 1, !dbg !6611
  %5 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !6611
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 13, !dbg !6612
  %6 = load i8, i8* %number, align 8, !dbg !6612
  %conv2 = zext i8 %6 to i32, !dbg !6609
  %7 = load i8, i8* %bus, align 1, !dbg !6613
  %conv3 = zext i8 %7 to i32, !dbg !6613
  %cmp = icmp ne i32 %conv2, %conv3, !dbg !6614
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6615

lor.lhs.false:                                    ; preds = %entry
  %8 = load i16, i16* %alias.addr, align 2, !dbg !6616
  %conv5 = zext i16 %8 to i32, !dbg !6616
  %shr6 = ashr i32 %conv5, 8, !dbg !6616
  %and7 = and i32 %shr6, 255, !dbg !6616
  %9 = load i8, i8* %bus, align 1, !dbg !6617
  %conv8 = zext i8 %9 to i32, !dbg !6617
  %cmp9 = icmp ne i32 %and7, %conv8, !dbg !6618
  br i1 %cmp9, label %if.then, label %if.end, !dbg !6619

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load i16, i16* %alias.addr, align 2, !dbg !6620
  %conv11 = zext i16 %10 to i32, !dbg !6620
  %11 = load i32*, i32** %pa, align 8, !dbg !6621
  store i32 %conv11, i32* %11, align 4, !dbg !6622
  br label %if.end, !dbg !6623

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret i32 0, !dbg !6624
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @irq_domain_get_of_node(%struct.irq_domain* %d) #0 !dbg !6625 {
entry:
  %d.addr = alloca %struct.irq_domain*, align 8
  %__to_of_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.device_node*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.device_node*, align 8
  store %struct.irq_domain* %d, %struct.irq_domain** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %d.addr, metadata !6628, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_of_node_fwnode, metadata !6630, metadata !DIExpression()), !dbg !6632
  %0 = load %struct.irq_domain*, %struct.irq_domain** %d.addr, align 8, !dbg !6632
  %fwnode = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %0, i32 0, i32 6, !dbg !6632
  %1 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !6632
  store %struct.fwnode_handle* %1, %struct.fwnode_handle** %__to_of_node_fwnode, align 8, !dbg !6632
  %2 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_of_node_fwnode, align 8, !dbg !6632
  %call = call zeroext i1 @is_of_node(%struct.fwnode_handle* %2) #8, !dbg !6632
  br i1 %call, label %cond.true, label %cond.false, !dbg !6632

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6633, metadata !DIExpression()), !dbg !6635
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_of_node_fwnode, align 8, !dbg !6635
  %4 = bitcast %struct.fwnode_handle* %3 to i8*, !dbg !6635
  store i8* %4, i8** %__mptr, align 8, !dbg !6635
  br label %do.body, !dbg !6635

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !6636

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !6635
  %add.ptr = getelementptr i8, i8* %5, i64 -24, !dbg !6635
  %6 = bitcast i8* %add.ptr to %struct.device_node*, !dbg !6635
  store %struct.device_node* %6, %struct.device_node** %tmp1, align 8, !dbg !6636
  %7 = load %struct.device_node*, %struct.device_node** %tmp1, align 8, !dbg !6635
  br label %cond.end, !dbg !6632

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6632

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.device_node* [ %7, %do.end ], [ null, %cond.false ], !dbg !6632
  store %struct.device_node* %cond, %struct.device_node** %tmp, align 8, !dbg !6632
  %8 = load %struct.device_node*, %struct.device_node** %tmp, align 8, !dbg !6632
  ret %struct.device_node* %8, !dbg !6638
}

; Function Attrs: noredzone
declare dso_local i32 @of_msi_map_id(%struct.device*, %struct.device_node*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iort_msi_map_id(%struct.device* %dev, i32 %id) #0 !dbg !6639 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %id.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6643, metadata !DIExpression()), !dbg !6644
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !6645, metadata !DIExpression()), !dbg !6646
  %0 = load i32, i32* %id.addr, align 4, !dbg !6647
  ret i32 %0, !dbg !6648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.irq_domain* @pci_msi_get_device_domain(%struct.pci_dev* %pdev) #0 !dbg !6649 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dom = alloca %struct.irq_domain*, align 8
  %rid = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6652, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %dom, metadata !6654, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.declare(metadata i32* %rid, metadata !6656, metadata !DIExpression()), !dbg !6657
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6658
  %call = call zeroext i16 @pci_dev_id(%struct.pci_dev* %0) #8, !dbg !6659
  %conv = zext i16 %call to i32, !dbg !6659
  store i32 %conv, i32* %rid, align 4, !dbg !6657
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6660
  %2 = bitcast i32* %rid to i8*, !dbg !6661
  %call1 = call i32 @pci_for_each_dma_alias(%struct.pci_dev* %1, i32 (%struct.pci_dev*, i16, i8*)* @get_msi_id_cb, i8* %2) #8, !dbg !6662
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6663
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !6664
  %4 = load i32, i32* %rid, align 4, !dbg !6665
  %call2 = call %struct.irq_domain* @of_msi_map_get_device_domain(%struct.device* %dev, i32 %4, i32 3) #8, !dbg !6666
  store %struct.irq_domain* %call2, %struct.irq_domain** %dom, align 8, !dbg !6667
  %5 = load %struct.irq_domain*, %struct.irq_domain** %dom, align 8, !dbg !6668
  %tobool = icmp ne %struct.irq_domain* %5, null, !dbg !6668
  br i1 %tobool, label %if.end, label %if.then, !dbg !6670

if.then:                                          ; preds = %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6671
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !6672
  %7 = load i32, i32* %rid, align 4, !dbg !6673
  %call4 = call %struct.irq_domain* @iort_get_device_domain(%struct.device* %dev3, i32 %7, i32 3) #8, !dbg !6674
  store %struct.irq_domain* %call4, %struct.irq_domain** %dom, align 8, !dbg !6675
  br label %if.end, !dbg !6676

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.irq_domain*, %struct.irq_domain** %dom, align 8, !dbg !6677
  ret %struct.irq_domain* %8, !dbg !6678
}

; Function Attrs: noredzone
declare dso_local %struct.irq_domain* @of_msi_map_get_device_domain(%struct.device*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.irq_domain* @iort_get_device_domain(%struct.device* %dev, i32 %id, i32 %bus_token) #0 !dbg !6679 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %id.addr = alloca i32, align 4
  %bus_token.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6682, metadata !DIExpression()), !dbg !6683
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !6684, metadata !DIExpression()), !dbg !6685
  store i32 %bus_token, i32* %bus_token.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bus_token.addr, metadata !6686, metadata !DIExpression()), !dbg !6687
  ret %struct.irq_domain* null, !dbg !6688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_dev_has_special_msi_domain(%struct.pci_dev* %pdev) #0 !dbg !6689 {
entry:
  %retval = alloca i1, align 1
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dom = alloca %struct.irq_domain*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6692, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %dom, metadata !6694, metadata !DIExpression()), !dbg !6695
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6696
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !6697
  %call = call %struct.irq_domain* @dev_get_msi_domain(%struct.device* %dev) #8, !dbg !6698
  store %struct.irq_domain* %call, %struct.irq_domain** %dom, align 8, !dbg !6695
  %1 = load %struct.irq_domain*, %struct.irq_domain** %dom, align 8, !dbg !6699
  %tobool = icmp ne %struct.irq_domain* %1, null, !dbg !6699
  br i1 %tobool, label %if.end, label %if.then, !dbg !6701

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6702
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 1, !dbg !6703
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6703
  %dev1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %3, i32 0, i32 21, !dbg !6704
  %call2 = call %struct.irq_domain* @dev_get_msi_domain(%struct.device* %dev1) #8, !dbg !6705
  store %struct.irq_domain* %call2, %struct.irq_domain** %dom, align 8, !dbg !6706
  br label %if.end, !dbg !6707

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.irq_domain*, %struct.irq_domain** %dom, align 8, !dbg !6708
  %tobool3 = icmp ne %struct.irq_domain* %4, null, !dbg !6708
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !6710

if.then4:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !6711
  br label %return, !dbg !6711

if.end5:                                          ; preds = %if.end
  %5 = load %struct.irq_domain*, %struct.irq_domain** %dom, align 8, !dbg !6712
  %bus_token = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %5, i32 0, i32 7, !dbg !6713
  %6 = load i32, i32* %bus_token, align 8, !dbg !6713
  %cmp = icmp ne i32 %6, 3, !dbg !6714
  store i1 %cmp, i1* %retval, align 1, !dbg !6715
  br label %return, !dbg !6715

return:                                           ; preds = %if.end5, %if.then4
  %7 = load i1, i1* %retval, align 1, !dbg !6716
  ret i1 %7, !dbg !6716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.irq_domain* @dev_get_msi_domain(%struct.device* %dev) #0 !dbg !6717 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6720, metadata !DIExpression()), !dbg !6721
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6722
  %msi_domain = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 13, !dbg !6723
  %1 = load %struct.irq_domain*, %struct.irq_domain** %msi_domain, align 8, !dbg !6723
  ret %struct.irq_domain* %1, !dbg !6724
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msix_mask_irq(%struct.msi_desc* %desc, i32 %flag) #0 !dbg !6725 {
entry:
  %desc.addr = alloca %struct.msi_desc*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.msi_desc* %desc, %struct.msi_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc.addr, metadata !6728, metadata !DIExpression()), !dbg !6729
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !6730, metadata !DIExpression()), !dbg !6731
  %0 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !6732
  %1 = load i32, i32* %flag.addr, align 4, !dbg !6733
  %call = call i32 @__pci_msix_desc_mask_irq(%struct.msi_desc* %0, i32 %1) #8, !dbg !6734
  %2 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !6735
  %3 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %2, i32 0, i32 8, !dbg !6736
  %4 = bitcast %union.anon.65* %3 to %struct.anon.66*, !dbg !6736
  %masked = getelementptr inbounds %struct.anon.66, %struct.anon.66* %4, i32 0, i32 0, !dbg !6736
  store i32 %call, i32* %masked, align 8, !dbg !6737
  ret void, !dbg !6738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msi_mask_irq(%struct.msi_desc* %desc, i32 %mask, i32 %flag) #0 !dbg !6739 {
entry:
  %desc.addr = alloca %struct.msi_desc*, align 8
  %mask.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  store %struct.msi_desc* %desc, %struct.msi_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc.addr, metadata !6742, metadata !DIExpression()), !dbg !6743
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !6744, metadata !DIExpression()), !dbg !6745
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !6746, metadata !DIExpression()), !dbg !6747
  %0 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !6748
  %1 = load i32, i32* %mask.addr, align 4, !dbg !6749
  %2 = load i32, i32* %flag.addr, align 4, !dbg !6750
  %call = call i32 @__pci_msi_desc_mask_irq(%struct.msi_desc* %0, i32 %1, i32 %2) #8, !dbg !6751
  %3 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !6752
  %4 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %3, i32 0, i32 8, !dbg !6753
  %5 = bitcast %union.anon.65* %4 to %struct.anon.66*, !dbg !6753
  %masked = getelementptr inbounds %struct.anon.66, %struct.anon.66* %5, i32 0, i32 0, !dbg !6753
  store i32 %call, i32* %masked, align 8, !dbg !6754
  ret void, !dbg !6755
}

; Function Attrs: noredzone
declare dso_local %struct.irq_data* @irq_get_irq_data(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_intx_for_msi(%struct.pci_dev* %dev, i32 %enable) #0 !dbg !6756 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %enable.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6757, metadata !DIExpression()), !dbg !6758
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !6759, metadata !DIExpression()), !dbg !6760
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6761
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 47, !dbg !6763
  %1 = load i16, i16* %dev_flags, align 2, !dbg !6763
  %conv = zext i16 %1 to i32, !dbg !6761
  %and = and i32 %conv, 1, !dbg !6764
  %tobool = icmp ne i32 %and, 0, !dbg !6764
  br i1 %tobool, label %if.end, label %if.then, !dbg !6765

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6766
  %3 = load i32, i32* %enable.addr, align 4, !dbg !6767
  call void @pci_intx(%struct.pci_dev* %2, i32 %3) #8, !dbg !6768
  br label %if.end, !dbg !6768

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6769
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_msi_set_enable(%struct.pci_dev* %dev, i32 %enable) #0 !dbg !6770 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %enable.addr = alloca i32, align 4
  %control = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6771, metadata !DIExpression()), !dbg !6772
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !6773, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.declare(metadata i16* %control, metadata !6775, metadata !DIExpression()), !dbg !6776
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6777
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6778
  %msi_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 15, !dbg !6779
  %2 = load i8, i8* %msi_cap, align 1, !dbg !6779
  %conv = zext i8 %2 to i32, !dbg !6778
  %add = add i32 %conv, 2, !dbg !6780
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %0, i32 %add, i16* %control) #8, !dbg !6781
  %3 = load i16, i16* %control, align 2, !dbg !6782
  %conv1 = zext i16 %3 to i32, !dbg !6782
  %and = and i32 %conv1, -2, !dbg !6782
  %conv2 = trunc i32 %and to i16, !dbg !6782
  store i16 %conv2, i16* %control, align 2, !dbg !6782
  %4 = load i32, i32* %enable.addr, align 4, !dbg !6783
  %tobool = icmp ne i32 %4, 0, !dbg !6783
  br i1 %tobool, label %if.then, label %if.end, !dbg !6785

if.then:                                          ; preds = %entry
  %5 = load i16, i16* %control, align 2, !dbg !6786
  %conv3 = zext i16 %5 to i32, !dbg !6786
  %or = or i32 %conv3, 1, !dbg !6786
  %conv4 = trunc i32 %or to i16, !dbg !6786
  store i16 %conv4, i16* %control, align 2, !dbg !6786
  br label %if.end, !dbg !6787

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6788
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6789
  %msi_cap5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 15, !dbg !6790
  %8 = load i8, i8* %msi_cap5, align 1, !dbg !6790
  %conv6 = zext i8 %8 to i32, !dbg !6789
  %add7 = add i32 %conv6, 2, !dbg !6791
  %9 = load i16, i16* %control, align 2, !dbg !6792
  %call8 = call i32 @pci_write_config_word(%struct.pci_dev* %6, i32 %add7, i16 zeroext %9) #8, !dbg !6793
  ret void, !dbg !6794
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @msi_mask(i32 %x) #4 !dbg !6795 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6798, metadata !DIExpression()), !dbg !6799
  %0 = load i32, i32* %x.addr, align 4, !dbg !6800
  %cmp = icmp uge i32 %0, 5, !dbg !6802
  br i1 %cmp, label %if.then, label %if.end, !dbg !6803

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !6804
  br label %return, !dbg !6804

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %x.addr, align 4, !dbg !6805
  %shl = shl i32 1, %1, !dbg !6806
  %shl1 = shl i32 1, %shl, !dbg !6807
  %sub = sub i32 %shl1, 1, !dbg !6808
  store i32 %sub, i32* %retval, align 4, !dbg !6809
  br label %return, !dbg !6809

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !6810
  ret i32 %2, !dbg !6810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !6811 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6817, metadata !DIExpression()), !dbg !6818
  br label %do.body, !dbg !6819

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6821

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6819
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !6819
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6819
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !6821
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !6819
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6823
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !6824
  %conv = zext i1 %cmp to i32, !dbg !6824
  ret i32 %conv, !dbg !6825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_msix_clear_and_set_ctrl(%struct.pci_dev* %dev, i16 zeroext %clear, i16 zeroext %set) #0 !dbg !6826 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %clear.addr = alloca i16, align 2
  %set.addr = alloca i16, align 2
  %ctrl = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6829, metadata !DIExpression()), !dbg !6830
  store i16 %clear, i16* %clear.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clear.addr, metadata !6831, metadata !DIExpression()), !dbg !6832
  store i16 %set, i16* %set.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %set.addr, metadata !6833, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !6835, metadata !DIExpression()), !dbg !6836
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6837
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6838
  %msix_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 16, !dbg !6839
  %2 = load i8, i8* %msix_cap, align 4, !dbg !6839
  %conv = zext i8 %2 to i32, !dbg !6838
  %add = add i32 %conv, 2, !dbg !6840
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %0, i32 %add, i16* %ctrl) #8, !dbg !6841
  %3 = load i16, i16* %clear.addr, align 2, !dbg !6842
  %conv1 = zext i16 %3 to i32, !dbg !6842
  %neg = xor i32 %conv1, -1, !dbg !6843
  %4 = load i16, i16* %ctrl, align 2, !dbg !6844
  %conv2 = zext i16 %4 to i32, !dbg !6844
  %and = and i32 %conv2, %neg, !dbg !6844
  %conv3 = trunc i32 %and to i16, !dbg !6844
  store i16 %conv3, i16* %ctrl, align 2, !dbg !6844
  %5 = load i16, i16* %set.addr, align 2, !dbg !6845
  %conv4 = zext i16 %5 to i32, !dbg !6845
  %6 = load i16, i16* %ctrl, align 2, !dbg !6846
  %conv5 = zext i16 %6 to i32, !dbg !6846
  %or = or i32 %conv5, %conv4, !dbg !6846
  %conv6 = trunc i32 %or to i16, !dbg !6846
  store i16 %conv6, i16* %ctrl, align 2, !dbg !6846
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6847
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6848
  %msix_cap7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 16, !dbg !6849
  %9 = load i8, i8* %msix_cap7, align 4, !dbg !6849
  %conv8 = zext i8 %9 to i32, !dbg !6848
  %add9 = add i32 %conv8, 2, !dbg !6850
  %10 = load i16, i16* %ctrl, align 2, !dbg !6851
  %call10 = call i32 @pci_write_config_word(%struct.pci_dev* %7, i32 %add9, i16 zeroext %10) #8, !dbg !6852
  ret void, !dbg !6853
}

; Function Attrs: noredzone
declare dso_local i32 @pcibios_alloc_irq(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @irq_has_action(i32 %irq) #0 !dbg !6854 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6857, metadata !DIExpression()), !dbg !6858
  %0 = load i32, i32* %irq.addr, align 4, !dbg !6859
  %call = call %struct.irq_desc* @irq_to_desc(i32 %0) #8, !dbg !6860
  %call1 = call i32 @irq_desc_has_action(%struct.irq_desc* %call) #8, !dbg !6861
  ret i32 %call1, !dbg !6862
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_msi_teardown_msi_irqs(%struct.pci_dev* %dev) #0 !dbg !6863 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %domain = alloca %struct.irq_domain*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6864, metadata !DIExpression()), !dbg !6865
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %domain, metadata !6866, metadata !DIExpression()), !dbg !6867
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6868
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !6869
  %call = call %struct.irq_domain* @dev_get_msi_domain(%struct.device* %dev1) #8, !dbg !6870
  store %struct.irq_domain* %call, %struct.irq_domain** %domain, align 8, !dbg !6871
  %1 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !6872
  %tobool = icmp ne %struct.irq_domain* %1, null, !dbg !6872
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !6874

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !6875
  %call2 = call zeroext i1 @irq_domain_is_hierarchy(%struct.irq_domain* %2) #8, !dbg !6876
  br i1 %call2, label %if.then, label %if.else, !dbg !6877

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !6878
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6879
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !6880
  call void @msi_domain_free_irqs(%struct.irq_domain* %3, %struct.device* %dev3) #8, !dbg !6881
  br label %if.end, !dbg !6881

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6882
  call void @arch_teardown_msi_irqs(%struct.pci_dev* %5) #8, !dbg !6883
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6884
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_is_last(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !6885 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !6888, metadata !DIExpression()), !dbg !6889
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6890, metadata !DIExpression()), !dbg !6891
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6892
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !6893
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6893
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6894
  %cmp = icmp eq %struct.list_head* %1, %2, !dbg !6895
  %conv = zext i1 %cmp to i32, !dbg !6895
  ret i32 %conv, !dbg !6896
}

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !6897 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6902
  call void @__list_del_entry(%struct.list_head* %0) #8, !dbg !6903
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6904
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !6905
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !6906
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6907
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !6908
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !6909
  ret void, !dbg !6910
}

; Function Attrs: noredzone
declare dso_local void @free_msi_entry(%struct.msi_desc*) #2

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_groups(%struct.kobject*, %struct.attribute_group**) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @irq_desc_has_action(%struct.irq_desc* %desc) #0 !dbg !6911 {
entry:
  %desc.addr = alloca %struct.irq_desc*, align 8
  store %struct.irq_desc* %desc, %struct.irq_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_desc** %desc.addr, metadata !6914, metadata !DIExpression()), !dbg !6915
  %0 = load %struct.irq_desc*, %struct.irq_desc** %desc.addr, align 8, !dbg !6916
  %action = getelementptr inbounds %struct.irq_desc, %struct.irq_desc* %0, i32 0, i32 4, !dbg !6917
  %1 = load %struct.irqaction*, %struct.irqaction** %action, align 8, !dbg !6917
  %cmp = icmp ne %struct.irqaction* %1, null, !dbg !6918
  %conv = zext i1 %cmp to i32, !dbg !6918
  ret i32 %conv, !dbg !6919
}

; Function Attrs: noredzone
declare dso_local %struct.irq_desc* @irq_to_desc(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @irq_domain_is_hierarchy(%struct.irq_domain* %domain) #0 !dbg !6920 {
entry:
  %domain.addr = alloca %struct.irq_domain*, align 8
  store %struct.irq_domain* %domain, %struct.irq_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %domain.addr, metadata !6923, metadata !DIExpression()), !dbg !6924
  %0 = load %struct.irq_domain*, %struct.irq_domain** %domain.addr, align 8, !dbg !6925
  %flags = getelementptr inbounds %struct.irq_domain, %struct.irq_domain* %0, i32 0, i32 4, !dbg !6926
  %1 = load i32, i32* %flags, align 8, !dbg !6926
  %and = and i32 %1, 1, !dbg !6927
  %tobool = icmp ne i32 %and, 0, !dbg !6925
  ret i1 %tobool, !dbg !6928
}

; Function Attrs: noredzone
declare dso_local void @msi_domain_free_irqs(%struct.irq_domain*, %struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_teardown_msi_irqs(%struct.pci_dev* %dev) #0 !dbg !6929 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6930, metadata !DIExpression()), !dbg !6931
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6932, metadata !DIExpression()), !dbg !6934
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !6934
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !6935
  %tobool = icmp ne i32 %0, 0, !dbg !6935
  %lnot = xor i1 %tobool, true, !dbg !6935
  %lnot1 = xor i1 %lnot, true, !dbg !6935
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6935
  %conv = sext i32 %lnot.ext to i64, !dbg !6935
  %tobool2 = icmp ne i64 %conv, 0, !dbg !6935
  br i1 %tobool2, label %if.then, label %if.end, !dbg !6934

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6935

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !6937

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !6939

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !6937

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 219, i32 2307, i64 12) #9, !dbg !6941, !srcloc !6943
  br label %do.end5, !dbg !6941

do.end5:                                          ; preds = %do.body4
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 233) #9, !dbg !6944, !srcloc !6946
  br label %do.body6, !dbg !6937

do.body6:                                         ; preds = %do.end5
  br label %do.end7, !dbg !6947

do.end7:                                          ; preds = %do.body6
  br label %do.end8, !dbg !6937

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !6937

if.end:                                           ; preds = %do.end8, %entry
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !6934
  %tobool9 = icmp ne i32 %1, 0, !dbg !6934
  %lnot10 = xor i1 %tobool9, true, !dbg !6934
  %lnot12 = xor i1 %lnot10, true, !dbg !6934
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !6934
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !6934
  store i64 %conv14, i64* %tmp, align 8, !dbg !6935
  %2 = load i64, i64* %tmp, align 8, !dbg !6934
  ret void, !dbg !6949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !6950 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6951, metadata !DIExpression()), !dbg !6952
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6953
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #8, !dbg !6955
  br i1 %call, label %if.end, label %if.then, !dbg !6956

if.then:                                          ; preds = %entry
  br label %return, !dbg !6957

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6958
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6959
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !6959
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6960
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !6961
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6961
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #8, !dbg !6962
  br label %return, !dbg !6963

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !6964 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6967, metadata !DIExpression()), !dbg !6968
  ret i1 true, !dbg !6969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !6970 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !6973, metadata !DIExpression()), !dbg !6974
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !6975, metadata !DIExpression()), !dbg !6976
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6977
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6978
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6979
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !6980
  br label %do.body, !dbg !6981

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !6982

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !6984

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !6982

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6986
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6986
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !6986
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !6986
  br label %do.end5, !dbg !6986

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !6982

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !6988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_msi_supported(%struct.pci_dev* %dev, i32 %nvec) #0 !dbg !6989 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %nvec.addr = alloca i32, align 4
  %bus = alloca %struct.pci_bus*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6990, metadata !DIExpression()), !dbg !6991
  store i32 %nvec, i32* %nvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nvec.addr, metadata !6992, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus, metadata !6994, metadata !DIExpression()), !dbg !6995
  %0 = load i32, i32* @pci_msi_enable, align 4, !dbg !6996
  %tobool = icmp ne i32 %0, 0, !dbg !6996
  br i1 %tobool, label %if.end, label %if.then, !dbg !6998

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6999
  br label %return, !dbg !6999

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7000
  %tobool1 = icmp ne %struct.pci_dev* %1, null, !dbg !7000
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !7002

lor.lhs.false:                                    ; preds = %if.end
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7003
  %no_msi = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 46, !dbg !7004
  %3 = bitcast [5 x i8]* %no_msi to i40*, !dbg !7004
  %bf.load = load i40, i40* %3, align 1, !dbg !7004
  %bf.lshr = lshr i40 %bf.load, 6, !dbg !7004
  %bf.clear = and i40 %bf.lshr, 1, !dbg !7004
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !7004
  %tobool2 = icmp ne i32 %bf.cast, 0, !dbg !7003
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7005

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !7006
  br label %return, !dbg !7006

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i32, i32* %nvec.addr, align 4, !dbg !7007
  %cmp = icmp slt i32 %4, 1, !dbg !7009
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !7010

if.then5:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !7011
  br label %return, !dbg !7011

if.end6:                                          ; preds = %if.end4
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7012
  %bus7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 1, !dbg !7014
  %6 = load %struct.pci_bus*, %struct.pci_bus** %bus7, align 8, !dbg !7014
  store %struct.pci_bus* %6, %struct.pci_bus** %bus, align 8, !dbg !7015
  br label %for.cond, !dbg !7016

for.cond:                                         ; preds = %for.inc, %if.end6
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !7017
  %tobool8 = icmp ne %struct.pci_bus* %7, null, !dbg !7019
  br i1 %tobool8, label %for.body, label %for.end, !dbg !7019

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !7020
  %bus_flags = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 19, !dbg !7022
  %9 = load i16, i16* %bus_flags, align 2, !dbg !7022
  %conv = zext i16 %9 to i32, !dbg !7020
  %and = and i32 %conv, 1, !dbg !7023
  %tobool9 = icmp ne i32 %and, 0, !dbg !7023
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !7024

if.then10:                                        ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !7025
  br label %return, !dbg !7025

if.end11:                                         ; preds = %for.body
  br label %for.inc, !dbg !7026

for.inc:                                          ; preds = %if.end11
  %10 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !7027
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %10, i32 0, i32 1, !dbg !7028
  %11 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !7028
  store %struct.pci_bus* %11, %struct.pci_bus** %bus, align 8, !dbg !7029
  br label %for.cond, !dbg !7030, !llvm.loop !7031

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !7033
  br label %return, !dbg !7033

return:                                           ; preds = %for.end, %if.then10, %if.then5, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7034
  ret i32 %12, !dbg !7034
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @irq_calc_affinity_vectors(i32 %minvec, i32 %maxvec, %struct.irq_affinity* %affd) #0 !dbg !7035 {
entry:
  %minvec.addr = alloca i32, align 4
  %maxvec.addr = alloca i32, align 4
  %affd.addr = alloca %struct.irq_affinity*, align 8
  store i32 %minvec, i32* %minvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minvec.addr, metadata !7040, metadata !DIExpression()), !dbg !7041
  store i32 %maxvec, i32* %maxvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxvec.addr, metadata !7042, metadata !DIExpression()), !dbg !7043
  store %struct.irq_affinity* %affd, %struct.irq_affinity** %affd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_affinity** %affd.addr, metadata !7044, metadata !DIExpression()), !dbg !7045
  %0 = load i32, i32* %maxvec.addr, align 4, !dbg !7046
  ret i32 %0, !dbg !7047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @msi_capability_init(%struct.pci_dev* %dev, i32 %nvec, %struct.irq_affinity* %affd) #0 !dbg !7048 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %nvec.addr = alloca i32, align 4
  %affd.addr = alloca %struct.irq_affinity*, align 8
  %entry1 = alloca %struct.msi_desc*, align 8
  %ret = alloca i32, align 4
  %mask = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7051, metadata !DIExpression()), !dbg !7052
  store i32 %nvec, i32* %nvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nvec.addr, metadata !7053, metadata !DIExpression()), !dbg !7054
  store %struct.irq_affinity* %affd, %struct.irq_affinity** %affd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_affinity** %affd.addr, metadata !7055, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !7057, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7059, metadata !DIExpression()), !dbg !7060
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !7061, metadata !DIExpression()), !dbg !7062
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7063
  call void @pci_msi_set_enable(%struct.pci_dev* %0, i32 0) #8, !dbg !7064
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7065
  %2 = load i32, i32* %nvec.addr, align 4, !dbg !7066
  %3 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !7067
  %call = call %struct.msi_desc* @msi_setup_entry(%struct.pci_dev* %1, i32 %2, %struct.irq_affinity* %3) #8, !dbg !7068
  store %struct.msi_desc* %call, %struct.msi_desc** %entry1, align 8, !dbg !7069
  %4 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7070
  %tobool = icmp ne %struct.msi_desc* %4, null, !dbg !7070
  br i1 %tobool, label %if.end, label %if.then, !dbg !7072

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7073
  br label %return, !dbg !7073

if.end:                                           ; preds = %entry
  %5 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7074
  %6 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %5, i32 0, i32 8, !dbg !7075
  %7 = bitcast %union.anon.65* %6 to %struct.anon.66*, !dbg !7075
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %7, i32 0, i32 1, !dbg !7075
  %8 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !7076
  %bf.load = load i16, i16* %8, align 4, !dbg !7076
  %bf.lshr = lshr i16 %bf.load, 4, !dbg !7076
  %bf.clear = and i16 %bf.lshr, 7, !dbg !7076
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !7076
  %conv = zext i8 %bf.cast to i32, !dbg !7074
  %call2 = call i32 @msi_mask(i32 %conv) #10, !dbg !7077
  store i32 %call2, i32* %mask, align 4, !dbg !7078
  %9 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7079
  %10 = load i32, i32* %mask, align 4, !dbg !7080
  %11 = load i32, i32* %mask, align 4, !dbg !7081
  call void @msi_mask_irq(%struct.msi_desc* %9, i32 %10, i32 %11) #8, !dbg !7082
  %12 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7083
  %list = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %12, i32 0, i32 0, !dbg !7084
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7085
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !7085
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 14, !dbg !7085
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %msi_list) #8, !dbg !7086
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7087
  %15 = load i32, i32* %nvec.addr, align 4, !dbg !7088
  %call4 = call i32 @pci_msi_setup_msi_irqs(%struct.pci_dev* %14, i32 %15, i32 5) #8, !dbg !7089
  store i32 %call4, i32* %ret, align 4, !dbg !7090
  %16 = load i32, i32* %ret, align 4, !dbg !7091
  %tobool5 = icmp ne i32 %16, 0, !dbg !7091
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !7093

if.then6:                                         ; preds = %if.end
  %17 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7094
  %18 = load i32, i32* %mask, align 4, !dbg !7096
  %19 = load i32, i32* %mask, align 4, !dbg !7097
  %neg = xor i32 %19, -1, !dbg !7098
  call void @msi_mask_irq(%struct.msi_desc* %17, i32 %18, i32 %neg) #8, !dbg !7099
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7100
  call void @free_msi_irqs(%struct.pci_dev* %20) #8, !dbg !7101
  %21 = load i32, i32* %ret, align 4, !dbg !7102
  store i32 %21, i32* %retval, align 4, !dbg !7103
  br label %return, !dbg !7103

if.end7:                                          ; preds = %if.end
  %22 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7104
  %call8 = call i32 @msi_verify_entries(%struct.pci_dev* %22) #8, !dbg !7105
  store i32 %call8, i32* %ret, align 4, !dbg !7106
  %23 = load i32, i32* %ret, align 4, !dbg !7107
  %tobool9 = icmp ne i32 %23, 0, !dbg !7107
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !7109

if.then10:                                        ; preds = %if.end7
  %24 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7110
  %25 = load i32, i32* %mask, align 4, !dbg !7112
  %26 = load i32, i32* %mask, align 4, !dbg !7113
  %neg11 = xor i32 %26, -1, !dbg !7114
  call void @msi_mask_irq(%struct.msi_desc* %24, i32 %25, i32 %neg11) #8, !dbg !7115
  %27 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7116
  call void @free_msi_irqs(%struct.pci_dev* %27) #8, !dbg !7117
  %28 = load i32, i32* %ret, align 4, !dbg !7118
  store i32 %28, i32* %retval, align 4, !dbg !7119
  br label %return, !dbg !7119

if.end12:                                         ; preds = %if.end7
  %29 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7120
  %call13 = call i32 @populate_msi_sysfs(%struct.pci_dev* %29) #8, !dbg !7121
  store i32 %call13, i32* %ret, align 4, !dbg !7122
  %30 = load i32, i32* %ret, align 4, !dbg !7123
  %tobool14 = icmp ne i32 %30, 0, !dbg !7123
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !7125

if.then15:                                        ; preds = %if.end12
  %31 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7126
  %32 = load i32, i32* %mask, align 4, !dbg !7128
  %33 = load i32, i32* %mask, align 4, !dbg !7129
  %neg16 = xor i32 %33, -1, !dbg !7130
  call void @msi_mask_irq(%struct.msi_desc* %31, i32 %32, i32 %neg16) #8, !dbg !7131
  %34 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7132
  call void @free_msi_irqs(%struct.pci_dev* %34) #8, !dbg !7133
  %35 = load i32, i32* %ret, align 4, !dbg !7134
  store i32 %35, i32* %retval, align 4, !dbg !7135
  br label %return, !dbg !7135

if.end17:                                         ; preds = %if.end12
  %36 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7136
  call void @pci_intx_for_msi(%struct.pci_dev* %36, i32 0) #8, !dbg !7137
  %37 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7138
  call void @pci_msi_set_enable(%struct.pci_dev* %37, i32 1) #8, !dbg !7139
  %38 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7140
  %msi_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 46, !dbg !7141
  %39 = bitcast [5 x i8]* %msi_enabled to i40*, !dbg !7141
  %bf.load18 = load i40, i40* %39, align 1, !dbg !7142
  %bf.clear19 = and i40 %bf.load18, -4097, !dbg !7142
  %bf.set = or i40 %bf.clear19, 4096, !dbg !7142
  store i40 %bf.set, i40* %39, align 1, !dbg !7142
  %40 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7143
  call void @pcibios_free_irq(%struct.pci_dev* %40) #8, !dbg !7144
  %41 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7145
  %irq = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %41, i32 0, i32 1, !dbg !7146
  %42 = load i32, i32* %irq, align 8, !dbg !7146
  %43 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7147
  %irq20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 43, !dbg !7148
  store i32 %42, i32* %irq20, align 4, !dbg !7149
  store i32 0, i32* %retval, align 4, !dbg !7150
  br label %return, !dbg !7150

return:                                           ; preds = %if.end17, %if.then15, %if.then10, %if.then6, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !7151
  ret i32 %44, !dbg !7151
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.msi_desc* @msi_setup_entry(%struct.pci_dev* %dev, i32 %nvec, %struct.irq_affinity* %affd) #0 !dbg !7152 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %nvec.addr = alloca i32, align 4
  %affd.addr = alloca %struct.irq_affinity*, align 8
  %masks = alloca %struct.irq_affinity_desc*, align 8
  %entry1 = alloca %struct.msi_desc*, align 8
  %control = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7155, metadata !DIExpression()), !dbg !7156
  store i32 %nvec, i32* %nvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nvec.addr, metadata !7157, metadata !DIExpression()), !dbg !7158
  store %struct.irq_affinity* %affd, %struct.irq_affinity** %affd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_affinity** %affd.addr, metadata !7159, metadata !DIExpression()), !dbg !7160
  call void @llvm.dbg.declare(metadata %struct.irq_affinity_desc** %masks, metadata !7161, metadata !DIExpression()), !dbg !7162
  store %struct.irq_affinity_desc* null, %struct.irq_affinity_desc** %masks, align 8, !dbg !7162
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !7163, metadata !DIExpression()), !dbg !7164
  call void @llvm.dbg.declare(metadata i16* %control, metadata !7165, metadata !DIExpression()), !dbg !7166
  %0 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !7167
  %tobool = icmp ne %struct.irq_affinity* %0, null, !dbg !7167
  br i1 %tobool, label %if.then, label %if.end, !dbg !7169

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %nvec.addr, align 4, !dbg !7170
  %2 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !7171
  %call = call %struct.irq_affinity_desc* @irq_create_affinity_masks(i32 %1, %struct.irq_affinity* %2) #8, !dbg !7172
  store %struct.irq_affinity_desc* %call, %struct.irq_affinity_desc** %masks, align 8, !dbg !7173
  br label %if.end, !dbg !7174

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7175
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !7176
  %4 = load i32, i32* %nvec.addr, align 4, !dbg !7177
  %5 = load %struct.irq_affinity_desc*, %struct.irq_affinity_desc** %masks, align 8, !dbg !7178
  %call3 = call %struct.msi_desc* @alloc_msi_entry(%struct.device* %dev2, i32 %4, %struct.irq_affinity_desc* %5) #8, !dbg !7179
  store %struct.msi_desc* %call3, %struct.msi_desc** %entry1, align 8, !dbg !7180
  %6 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7181
  %tobool4 = icmp ne %struct.msi_desc* %6, null, !dbg !7181
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !7183

if.then5:                                         ; preds = %if.end
  br label %out, !dbg !7184

if.end6:                                          ; preds = %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7185
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7186
  %msi_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 15, !dbg !7187
  %9 = load i8, i8* %msi_cap, align 1, !dbg !7187
  %conv = zext i8 %9 to i32, !dbg !7186
  %add = add i32 %conv, 2, !dbg !7188
  %call7 = call i32 @pci_read_config_word(%struct.pci_dev* %7, i32 %add, i16* %control) #8, !dbg !7189
  %10 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7190
  %11 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %10, i32 0, i32 8, !dbg !7191
  %12 = bitcast %union.anon.65* %11 to %struct.anon.66*, !dbg !7191
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %12, i32 0, i32 1, !dbg !7191
  %13 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !7192
  %bf.load = load i16, i16* %13, align 4, !dbg !7193
  %bf.clear = and i16 %bf.load, -2, !dbg !7193
  store i16 %bf.clear, i16* %13, align 4, !dbg !7193
  %14 = load i16, i16* %control, align 2, !dbg !7194
  %conv8 = zext i16 %14 to i32, !dbg !7194
  %and = and i32 %conv8, 128, !dbg !7195
  %tobool9 = icmp ne i32 %and, 0, !dbg !7196
  %lnot = xor i1 %tobool9, true, !dbg !7196
  %lnot10 = xor i1 %lnot, true, !dbg !7197
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !7197
  %conv11 = trunc i32 %lnot.ext to i8, !dbg !7197
  %15 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7198
  %16 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %15, i32 0, i32 8, !dbg !7199
  %17 = bitcast %union.anon.65* %16 to %struct.anon.66*, !dbg !7199
  %msi_attrib12 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %17, i32 0, i32 1, !dbg !7199
  %18 = bitcast %struct.anon.67* %msi_attrib12 to i16*, !dbg !7200
  %19 = zext i8 %conv11 to i16, !dbg !7201
  %bf.load13 = load i16, i16* %18, align 4, !dbg !7201
  %bf.value = and i16 %19, 1, !dbg !7201
  %bf.shl = shl i16 %bf.value, 8, !dbg !7201
  %bf.clear14 = and i16 %bf.load13, -257, !dbg !7201
  %bf.set = or i16 %bf.clear14, %bf.shl, !dbg !7201
  store i16 %bf.set, i16* %18, align 4, !dbg !7201
  %bf.result.cast = trunc i16 %bf.value to i8, !dbg !7201
  %20 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7202
  %21 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %20, i32 0, i32 8, !dbg !7203
  %22 = bitcast %union.anon.65* %21 to %struct.anon.66*, !dbg !7203
  %msi_attrib15 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %22, i32 0, i32 1, !dbg !7203
  %23 = bitcast %struct.anon.67* %msi_attrib15 to i16*, !dbg !7204
  %bf.load16 = load i16, i16* %23, align 4, !dbg !7205
  %bf.clear17 = and i16 %bf.load16, -513, !dbg !7205
  store i16 %bf.clear17, i16* %23, align 4, !dbg !7205
  %24 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7206
  %25 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %24, i32 0, i32 8, !dbg !7207
  %26 = bitcast %union.anon.65* %25 to %struct.anon.66*, !dbg !7207
  %msi_attrib18 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %26, i32 0, i32 1, !dbg !7207
  %entry_nr = getelementptr inbounds %struct.anon.67, %struct.anon.67* %msi_attrib18, i32 0, i32 1, !dbg !7208
  store i16 0, i16* %entry_nr, align 2, !dbg !7209
  %27 = load i16, i16* %control, align 2, !dbg !7210
  %conv19 = zext i16 %27 to i32, !dbg !7210
  %and20 = and i32 %conv19, 256, !dbg !7211
  %tobool21 = icmp ne i32 %and20, 0, !dbg !7212
  %lnot22 = xor i1 %tobool21, true, !dbg !7212
  %lnot24 = xor i1 %lnot22, true, !dbg !7213
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !7213
  %conv26 = trunc i32 %lnot.ext25 to i8, !dbg !7213
  %28 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7214
  %29 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %28, i32 0, i32 8, !dbg !7215
  %30 = bitcast %union.anon.65* %29 to %struct.anon.66*, !dbg !7215
  %msi_attrib27 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %30, i32 0, i32 1, !dbg !7215
  %31 = bitcast %struct.anon.67* %msi_attrib27 to i16*, !dbg !7216
  %32 = zext i8 %conv26 to i16, !dbg !7217
  %bf.load28 = load i16, i16* %31, align 4, !dbg !7217
  %bf.value29 = and i16 %32, 1, !dbg !7217
  %bf.shl30 = shl i16 %bf.value29, 7, !dbg !7217
  %bf.clear31 = and i16 %bf.load28, -129, !dbg !7217
  %bf.set32 = or i16 %bf.clear31, %bf.shl30, !dbg !7217
  store i16 %bf.set32, i16* %31, align 4, !dbg !7217
  %bf.result.cast33 = trunc i16 %bf.value29 to i8, !dbg !7217
  %33 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7218
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 43, !dbg !7219
  %34 = load i32, i32* %irq, align 4, !dbg !7219
  %35 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7220
  %36 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %35, i32 0, i32 8, !dbg !7221
  %37 = bitcast %union.anon.65* %36 to %struct.anon.66*, !dbg !7221
  %msi_attrib34 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %37, i32 0, i32 1, !dbg !7221
  %default_irq = getelementptr inbounds %struct.anon.67, %struct.anon.67* %msi_attrib34, i32 0, i32 2, !dbg !7222
  store i32 %34, i32* %default_irq, align 4, !dbg !7223
  %38 = load i16, i16* %control, align 2, !dbg !7224
  %conv35 = zext i16 %38 to i32, !dbg !7224
  %and36 = and i32 %conv35, 14, !dbg !7225
  %shr = ashr i32 %and36, 1, !dbg !7226
  %conv37 = trunc i32 %shr to i8, !dbg !7227
  %39 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7228
  %40 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %39, i32 0, i32 8, !dbg !7229
  %41 = bitcast %union.anon.65* %40 to %struct.anon.66*, !dbg !7229
  %msi_attrib38 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %41, i32 0, i32 1, !dbg !7229
  %42 = bitcast %struct.anon.67* %msi_attrib38 to i16*, !dbg !7230
  %43 = zext i8 %conv37 to i16, !dbg !7231
  %bf.load39 = load i16, i16* %42, align 4, !dbg !7231
  %bf.value40 = and i16 %43, 7, !dbg !7231
  %bf.shl41 = shl i16 %bf.value40, 4, !dbg !7231
  %bf.clear42 = and i16 %bf.load39, -113, !dbg !7231
  %bf.set43 = or i16 %bf.clear42, %bf.shl41, !dbg !7231
  store i16 %bf.set43, i16* %42, align 4, !dbg !7231
  %bf.result.cast44 = trunc i16 %bf.value40 to i8, !dbg !7231
  %44 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv45 = sext i32 %44 to i64, !dbg !7232
  %call46 = call i64 @__roundup_pow_of_two(i64 %conv45) #10, !dbg !7232
  %45 = call i1 @llvm.is.constant.i64(i64 %call46), !dbg !7232
  br i1 %45, label %cond.true, label %cond.false550, !dbg !7232

cond.true:                                        ; preds = %if.end6
  %46 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv47 = sext i32 %46 to i64, !dbg !7232
  %call48 = call i64 @__roundup_pow_of_two(i64 %conv47) #10, !dbg !7232
  %47 = call i1 @llvm.is.constant.i64(i64 %call48), !dbg !7232
  br i1 %47, label %cond.true49, label %cond.false547, !dbg !7232

cond.true49:                                      ; preds = %cond.true
  %48 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv50 = sext i32 %48 to i64, !dbg !7232
  %call51 = call i64 @__roundup_pow_of_two(i64 %conv50) #10, !dbg !7232
  %cmp = icmp ult i64 %call51, 2, !dbg !7232
  br i1 %cmp, label %cond.true53, label %cond.false, !dbg !7232

cond.true53:                                      ; preds = %cond.true49
  br label %cond.end545, !dbg !7232

cond.false:                                       ; preds = %cond.true49
  %49 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv54 = sext i32 %49 to i64, !dbg !7232
  %call55 = call i64 @__roundup_pow_of_two(i64 %conv54) #10, !dbg !7232
  %and56 = and i64 %call55, -9223372036854775808, !dbg !7232
  %tobool57 = icmp ne i64 %and56, 0, !dbg !7232
  br i1 %tobool57, label %cond.true58, label %cond.false59, !dbg !7232

cond.true58:                                      ; preds = %cond.false
  br label %cond.end543, !dbg !7232

cond.false59:                                     ; preds = %cond.false
  %50 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv60 = sext i32 %50 to i64, !dbg !7232
  %call61 = call i64 @__roundup_pow_of_two(i64 %conv60) #10, !dbg !7232
  %and62 = and i64 %call61, 4611686018427387904, !dbg !7232
  %tobool63 = icmp ne i64 %and62, 0, !dbg !7232
  br i1 %tobool63, label %cond.true64, label %cond.false65, !dbg !7232

cond.true64:                                      ; preds = %cond.false59
  br label %cond.end541, !dbg !7232

cond.false65:                                     ; preds = %cond.false59
  %51 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv66 = sext i32 %51 to i64, !dbg !7232
  %call67 = call i64 @__roundup_pow_of_two(i64 %conv66) #10, !dbg !7232
  %and68 = and i64 %call67, 2305843009213693952, !dbg !7232
  %tobool69 = icmp ne i64 %and68, 0, !dbg !7232
  br i1 %tobool69, label %cond.true70, label %cond.false71, !dbg !7232

cond.true70:                                      ; preds = %cond.false65
  br label %cond.end539, !dbg !7232

cond.false71:                                     ; preds = %cond.false65
  %52 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv72 = sext i32 %52 to i64, !dbg !7232
  %call73 = call i64 @__roundup_pow_of_two(i64 %conv72) #10, !dbg !7232
  %and74 = and i64 %call73, 1152921504606846976, !dbg !7232
  %tobool75 = icmp ne i64 %and74, 0, !dbg !7232
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !7232

cond.true76:                                      ; preds = %cond.false71
  br label %cond.end537, !dbg !7232

cond.false77:                                     ; preds = %cond.false71
  %53 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv78 = sext i32 %53 to i64, !dbg !7232
  %call79 = call i64 @__roundup_pow_of_two(i64 %conv78) #10, !dbg !7232
  %and80 = and i64 %call79, 576460752303423488, !dbg !7232
  %tobool81 = icmp ne i64 %and80, 0, !dbg !7232
  br i1 %tobool81, label %cond.true82, label %cond.false83, !dbg !7232

cond.true82:                                      ; preds = %cond.false77
  br label %cond.end535, !dbg !7232

cond.false83:                                     ; preds = %cond.false77
  %54 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv84 = sext i32 %54 to i64, !dbg !7232
  %call85 = call i64 @__roundup_pow_of_two(i64 %conv84) #10, !dbg !7232
  %and86 = and i64 %call85, 288230376151711744, !dbg !7232
  %tobool87 = icmp ne i64 %and86, 0, !dbg !7232
  br i1 %tobool87, label %cond.true88, label %cond.false89, !dbg !7232

cond.true88:                                      ; preds = %cond.false83
  br label %cond.end533, !dbg !7232

cond.false89:                                     ; preds = %cond.false83
  %55 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv90 = sext i32 %55 to i64, !dbg !7232
  %call91 = call i64 @__roundup_pow_of_two(i64 %conv90) #10, !dbg !7232
  %and92 = and i64 %call91, 144115188075855872, !dbg !7232
  %tobool93 = icmp ne i64 %and92, 0, !dbg !7232
  br i1 %tobool93, label %cond.true94, label %cond.false95, !dbg !7232

cond.true94:                                      ; preds = %cond.false89
  br label %cond.end531, !dbg !7232

cond.false95:                                     ; preds = %cond.false89
  %56 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv96 = sext i32 %56 to i64, !dbg !7232
  %call97 = call i64 @__roundup_pow_of_two(i64 %conv96) #10, !dbg !7232
  %and98 = and i64 %call97, 72057594037927936, !dbg !7232
  %tobool99 = icmp ne i64 %and98, 0, !dbg !7232
  br i1 %tobool99, label %cond.true100, label %cond.false101, !dbg !7232

cond.true100:                                     ; preds = %cond.false95
  br label %cond.end529, !dbg !7232

cond.false101:                                    ; preds = %cond.false95
  %57 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv102 = sext i32 %57 to i64, !dbg !7232
  %call103 = call i64 @__roundup_pow_of_two(i64 %conv102) #10, !dbg !7232
  %and104 = and i64 %call103, 36028797018963968, !dbg !7232
  %tobool105 = icmp ne i64 %and104, 0, !dbg !7232
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !7232

cond.true106:                                     ; preds = %cond.false101
  br label %cond.end527, !dbg !7232

cond.false107:                                    ; preds = %cond.false101
  %58 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv108 = sext i32 %58 to i64, !dbg !7232
  %call109 = call i64 @__roundup_pow_of_two(i64 %conv108) #10, !dbg !7232
  %and110 = and i64 %call109, 18014398509481984, !dbg !7232
  %tobool111 = icmp ne i64 %and110, 0, !dbg !7232
  br i1 %tobool111, label %cond.true112, label %cond.false113, !dbg !7232

cond.true112:                                     ; preds = %cond.false107
  br label %cond.end525, !dbg !7232

cond.false113:                                    ; preds = %cond.false107
  %59 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv114 = sext i32 %59 to i64, !dbg !7232
  %call115 = call i64 @__roundup_pow_of_two(i64 %conv114) #10, !dbg !7232
  %and116 = and i64 %call115, 9007199254740992, !dbg !7232
  %tobool117 = icmp ne i64 %and116, 0, !dbg !7232
  br i1 %tobool117, label %cond.true118, label %cond.false119, !dbg !7232

cond.true118:                                     ; preds = %cond.false113
  br label %cond.end523, !dbg !7232

cond.false119:                                    ; preds = %cond.false113
  %60 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv120 = sext i32 %60 to i64, !dbg !7232
  %call121 = call i64 @__roundup_pow_of_two(i64 %conv120) #10, !dbg !7232
  %and122 = and i64 %call121, 4503599627370496, !dbg !7232
  %tobool123 = icmp ne i64 %and122, 0, !dbg !7232
  br i1 %tobool123, label %cond.true124, label %cond.false125, !dbg !7232

cond.true124:                                     ; preds = %cond.false119
  br label %cond.end521, !dbg !7232

cond.false125:                                    ; preds = %cond.false119
  %61 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv126 = sext i32 %61 to i64, !dbg !7232
  %call127 = call i64 @__roundup_pow_of_two(i64 %conv126) #10, !dbg !7232
  %and128 = and i64 %call127, 2251799813685248, !dbg !7232
  %tobool129 = icmp ne i64 %and128, 0, !dbg !7232
  br i1 %tobool129, label %cond.true130, label %cond.false131, !dbg !7232

cond.true130:                                     ; preds = %cond.false125
  br label %cond.end519, !dbg !7232

cond.false131:                                    ; preds = %cond.false125
  %62 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv132 = sext i32 %62 to i64, !dbg !7232
  %call133 = call i64 @__roundup_pow_of_two(i64 %conv132) #10, !dbg !7232
  %and134 = and i64 %call133, 1125899906842624, !dbg !7232
  %tobool135 = icmp ne i64 %and134, 0, !dbg !7232
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !7232

cond.true136:                                     ; preds = %cond.false131
  br label %cond.end517, !dbg !7232

cond.false137:                                    ; preds = %cond.false131
  %63 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv138 = sext i32 %63 to i64, !dbg !7232
  %call139 = call i64 @__roundup_pow_of_two(i64 %conv138) #10, !dbg !7232
  %and140 = and i64 %call139, 562949953421312, !dbg !7232
  %tobool141 = icmp ne i64 %and140, 0, !dbg !7232
  br i1 %tobool141, label %cond.true142, label %cond.false143, !dbg !7232

cond.true142:                                     ; preds = %cond.false137
  br label %cond.end515, !dbg !7232

cond.false143:                                    ; preds = %cond.false137
  %64 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv144 = sext i32 %64 to i64, !dbg !7232
  %call145 = call i64 @__roundup_pow_of_two(i64 %conv144) #10, !dbg !7232
  %and146 = and i64 %call145, 281474976710656, !dbg !7232
  %tobool147 = icmp ne i64 %and146, 0, !dbg !7232
  br i1 %tobool147, label %cond.true148, label %cond.false149, !dbg !7232

cond.true148:                                     ; preds = %cond.false143
  br label %cond.end513, !dbg !7232

cond.false149:                                    ; preds = %cond.false143
  %65 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv150 = sext i32 %65 to i64, !dbg !7232
  %call151 = call i64 @__roundup_pow_of_two(i64 %conv150) #10, !dbg !7232
  %and152 = and i64 %call151, 140737488355328, !dbg !7232
  %tobool153 = icmp ne i64 %and152, 0, !dbg !7232
  br i1 %tobool153, label %cond.true154, label %cond.false155, !dbg !7232

cond.true154:                                     ; preds = %cond.false149
  br label %cond.end511, !dbg !7232

cond.false155:                                    ; preds = %cond.false149
  %66 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv156 = sext i32 %66 to i64, !dbg !7232
  %call157 = call i64 @__roundup_pow_of_two(i64 %conv156) #10, !dbg !7232
  %and158 = and i64 %call157, 70368744177664, !dbg !7232
  %tobool159 = icmp ne i64 %and158, 0, !dbg !7232
  br i1 %tobool159, label %cond.true160, label %cond.false161, !dbg !7232

cond.true160:                                     ; preds = %cond.false155
  br label %cond.end509, !dbg !7232

cond.false161:                                    ; preds = %cond.false155
  %67 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv162 = sext i32 %67 to i64, !dbg !7232
  %call163 = call i64 @__roundup_pow_of_two(i64 %conv162) #10, !dbg !7232
  %and164 = and i64 %call163, 35184372088832, !dbg !7232
  %tobool165 = icmp ne i64 %and164, 0, !dbg !7232
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !7232

cond.true166:                                     ; preds = %cond.false161
  br label %cond.end507, !dbg !7232

cond.false167:                                    ; preds = %cond.false161
  %68 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv168 = sext i32 %68 to i64, !dbg !7232
  %call169 = call i64 @__roundup_pow_of_two(i64 %conv168) #10, !dbg !7232
  %and170 = and i64 %call169, 17592186044416, !dbg !7232
  %tobool171 = icmp ne i64 %and170, 0, !dbg !7232
  br i1 %tobool171, label %cond.true172, label %cond.false173, !dbg !7232

cond.true172:                                     ; preds = %cond.false167
  br label %cond.end505, !dbg !7232

cond.false173:                                    ; preds = %cond.false167
  %69 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv174 = sext i32 %69 to i64, !dbg !7232
  %call175 = call i64 @__roundup_pow_of_two(i64 %conv174) #10, !dbg !7232
  %and176 = and i64 %call175, 8796093022208, !dbg !7232
  %tobool177 = icmp ne i64 %and176, 0, !dbg !7232
  br i1 %tobool177, label %cond.true178, label %cond.false179, !dbg !7232

cond.true178:                                     ; preds = %cond.false173
  br label %cond.end503, !dbg !7232

cond.false179:                                    ; preds = %cond.false173
  %70 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv180 = sext i32 %70 to i64, !dbg !7232
  %call181 = call i64 @__roundup_pow_of_two(i64 %conv180) #10, !dbg !7232
  %and182 = and i64 %call181, 4398046511104, !dbg !7232
  %tobool183 = icmp ne i64 %and182, 0, !dbg !7232
  br i1 %tobool183, label %cond.true184, label %cond.false185, !dbg !7232

cond.true184:                                     ; preds = %cond.false179
  br label %cond.end501, !dbg !7232

cond.false185:                                    ; preds = %cond.false179
  %71 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv186 = sext i32 %71 to i64, !dbg !7232
  %call187 = call i64 @__roundup_pow_of_two(i64 %conv186) #10, !dbg !7232
  %and188 = and i64 %call187, 2199023255552, !dbg !7232
  %tobool189 = icmp ne i64 %and188, 0, !dbg !7232
  br i1 %tobool189, label %cond.true190, label %cond.false191, !dbg !7232

cond.true190:                                     ; preds = %cond.false185
  br label %cond.end499, !dbg !7232

cond.false191:                                    ; preds = %cond.false185
  %72 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv192 = sext i32 %72 to i64, !dbg !7232
  %call193 = call i64 @__roundup_pow_of_two(i64 %conv192) #10, !dbg !7232
  %and194 = and i64 %call193, 1099511627776, !dbg !7232
  %tobool195 = icmp ne i64 %and194, 0, !dbg !7232
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !7232

cond.true196:                                     ; preds = %cond.false191
  br label %cond.end497, !dbg !7232

cond.false197:                                    ; preds = %cond.false191
  %73 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv198 = sext i32 %73 to i64, !dbg !7232
  %call199 = call i64 @__roundup_pow_of_two(i64 %conv198) #10, !dbg !7232
  %and200 = and i64 %call199, 549755813888, !dbg !7232
  %tobool201 = icmp ne i64 %and200, 0, !dbg !7232
  br i1 %tobool201, label %cond.true202, label %cond.false203, !dbg !7232

cond.true202:                                     ; preds = %cond.false197
  br label %cond.end495, !dbg !7232

cond.false203:                                    ; preds = %cond.false197
  %74 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv204 = sext i32 %74 to i64, !dbg !7232
  %call205 = call i64 @__roundup_pow_of_two(i64 %conv204) #10, !dbg !7232
  %and206 = and i64 %call205, 274877906944, !dbg !7232
  %tobool207 = icmp ne i64 %and206, 0, !dbg !7232
  br i1 %tobool207, label %cond.true208, label %cond.false209, !dbg !7232

cond.true208:                                     ; preds = %cond.false203
  br label %cond.end493, !dbg !7232

cond.false209:                                    ; preds = %cond.false203
  %75 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv210 = sext i32 %75 to i64, !dbg !7232
  %call211 = call i64 @__roundup_pow_of_two(i64 %conv210) #10, !dbg !7232
  %and212 = and i64 %call211, 137438953472, !dbg !7232
  %tobool213 = icmp ne i64 %and212, 0, !dbg !7232
  br i1 %tobool213, label %cond.true214, label %cond.false215, !dbg !7232

cond.true214:                                     ; preds = %cond.false209
  br label %cond.end491, !dbg !7232

cond.false215:                                    ; preds = %cond.false209
  %76 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv216 = sext i32 %76 to i64, !dbg !7232
  %call217 = call i64 @__roundup_pow_of_two(i64 %conv216) #10, !dbg !7232
  %and218 = and i64 %call217, 68719476736, !dbg !7232
  %tobool219 = icmp ne i64 %and218, 0, !dbg !7232
  br i1 %tobool219, label %cond.true220, label %cond.false221, !dbg !7232

cond.true220:                                     ; preds = %cond.false215
  br label %cond.end489, !dbg !7232

cond.false221:                                    ; preds = %cond.false215
  %77 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv222 = sext i32 %77 to i64, !dbg !7232
  %call223 = call i64 @__roundup_pow_of_two(i64 %conv222) #10, !dbg !7232
  %and224 = and i64 %call223, 34359738368, !dbg !7232
  %tobool225 = icmp ne i64 %and224, 0, !dbg !7232
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !7232

cond.true226:                                     ; preds = %cond.false221
  br label %cond.end487, !dbg !7232

cond.false227:                                    ; preds = %cond.false221
  %78 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv228 = sext i32 %78 to i64, !dbg !7232
  %call229 = call i64 @__roundup_pow_of_two(i64 %conv228) #10, !dbg !7232
  %and230 = and i64 %call229, 17179869184, !dbg !7232
  %tobool231 = icmp ne i64 %and230, 0, !dbg !7232
  br i1 %tobool231, label %cond.true232, label %cond.false233, !dbg !7232

cond.true232:                                     ; preds = %cond.false227
  br label %cond.end485, !dbg !7232

cond.false233:                                    ; preds = %cond.false227
  %79 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv234 = sext i32 %79 to i64, !dbg !7232
  %call235 = call i64 @__roundup_pow_of_two(i64 %conv234) #10, !dbg !7232
  %and236 = and i64 %call235, 8589934592, !dbg !7232
  %tobool237 = icmp ne i64 %and236, 0, !dbg !7232
  br i1 %tobool237, label %cond.true238, label %cond.false239, !dbg !7232

cond.true238:                                     ; preds = %cond.false233
  br label %cond.end483, !dbg !7232

cond.false239:                                    ; preds = %cond.false233
  %80 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv240 = sext i32 %80 to i64, !dbg !7232
  %call241 = call i64 @__roundup_pow_of_two(i64 %conv240) #10, !dbg !7232
  %and242 = and i64 %call241, 4294967296, !dbg !7232
  %tobool243 = icmp ne i64 %and242, 0, !dbg !7232
  br i1 %tobool243, label %cond.true244, label %cond.false245, !dbg !7232

cond.true244:                                     ; preds = %cond.false239
  br label %cond.end481, !dbg !7232

cond.false245:                                    ; preds = %cond.false239
  %81 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv246 = sext i32 %81 to i64, !dbg !7232
  %call247 = call i64 @__roundup_pow_of_two(i64 %conv246) #10, !dbg !7232
  %and248 = and i64 %call247, 2147483648, !dbg !7232
  %tobool249 = icmp ne i64 %and248, 0, !dbg !7232
  br i1 %tobool249, label %cond.true250, label %cond.false251, !dbg !7232

cond.true250:                                     ; preds = %cond.false245
  br label %cond.end479, !dbg !7232

cond.false251:                                    ; preds = %cond.false245
  %82 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv252 = sext i32 %82 to i64, !dbg !7232
  %call253 = call i64 @__roundup_pow_of_two(i64 %conv252) #10, !dbg !7232
  %and254 = and i64 %call253, 1073741824, !dbg !7232
  %tobool255 = icmp ne i64 %and254, 0, !dbg !7232
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !7232

cond.true256:                                     ; preds = %cond.false251
  br label %cond.end477, !dbg !7232

cond.false257:                                    ; preds = %cond.false251
  %83 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv258 = sext i32 %83 to i64, !dbg !7232
  %call259 = call i64 @__roundup_pow_of_two(i64 %conv258) #10, !dbg !7232
  %and260 = and i64 %call259, 536870912, !dbg !7232
  %tobool261 = icmp ne i64 %and260, 0, !dbg !7232
  br i1 %tobool261, label %cond.true262, label %cond.false263, !dbg !7232

cond.true262:                                     ; preds = %cond.false257
  br label %cond.end475, !dbg !7232

cond.false263:                                    ; preds = %cond.false257
  %84 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv264 = sext i32 %84 to i64, !dbg !7232
  %call265 = call i64 @__roundup_pow_of_two(i64 %conv264) #10, !dbg !7232
  %and266 = and i64 %call265, 268435456, !dbg !7232
  %tobool267 = icmp ne i64 %and266, 0, !dbg !7232
  br i1 %tobool267, label %cond.true268, label %cond.false269, !dbg !7232

cond.true268:                                     ; preds = %cond.false263
  br label %cond.end473, !dbg !7232

cond.false269:                                    ; preds = %cond.false263
  %85 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv270 = sext i32 %85 to i64, !dbg !7232
  %call271 = call i64 @__roundup_pow_of_two(i64 %conv270) #10, !dbg !7232
  %and272 = and i64 %call271, 134217728, !dbg !7232
  %tobool273 = icmp ne i64 %and272, 0, !dbg !7232
  br i1 %tobool273, label %cond.true274, label %cond.false275, !dbg !7232

cond.true274:                                     ; preds = %cond.false269
  br label %cond.end471, !dbg !7232

cond.false275:                                    ; preds = %cond.false269
  %86 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv276 = sext i32 %86 to i64, !dbg !7232
  %call277 = call i64 @__roundup_pow_of_two(i64 %conv276) #10, !dbg !7232
  %and278 = and i64 %call277, 67108864, !dbg !7232
  %tobool279 = icmp ne i64 %and278, 0, !dbg !7232
  br i1 %tobool279, label %cond.true280, label %cond.false281, !dbg !7232

cond.true280:                                     ; preds = %cond.false275
  br label %cond.end469, !dbg !7232

cond.false281:                                    ; preds = %cond.false275
  %87 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv282 = sext i32 %87 to i64, !dbg !7232
  %call283 = call i64 @__roundup_pow_of_two(i64 %conv282) #10, !dbg !7232
  %and284 = and i64 %call283, 33554432, !dbg !7232
  %tobool285 = icmp ne i64 %and284, 0, !dbg !7232
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !7232

cond.true286:                                     ; preds = %cond.false281
  br label %cond.end467, !dbg !7232

cond.false287:                                    ; preds = %cond.false281
  %88 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv288 = sext i32 %88 to i64, !dbg !7232
  %call289 = call i64 @__roundup_pow_of_two(i64 %conv288) #10, !dbg !7232
  %and290 = and i64 %call289, 16777216, !dbg !7232
  %tobool291 = icmp ne i64 %and290, 0, !dbg !7232
  br i1 %tobool291, label %cond.true292, label %cond.false293, !dbg !7232

cond.true292:                                     ; preds = %cond.false287
  br label %cond.end465, !dbg !7232

cond.false293:                                    ; preds = %cond.false287
  %89 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv294 = sext i32 %89 to i64, !dbg !7232
  %call295 = call i64 @__roundup_pow_of_two(i64 %conv294) #10, !dbg !7232
  %and296 = and i64 %call295, 8388608, !dbg !7232
  %tobool297 = icmp ne i64 %and296, 0, !dbg !7232
  br i1 %tobool297, label %cond.true298, label %cond.false299, !dbg !7232

cond.true298:                                     ; preds = %cond.false293
  br label %cond.end463, !dbg !7232

cond.false299:                                    ; preds = %cond.false293
  %90 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv300 = sext i32 %90 to i64, !dbg !7232
  %call301 = call i64 @__roundup_pow_of_two(i64 %conv300) #10, !dbg !7232
  %and302 = and i64 %call301, 4194304, !dbg !7232
  %tobool303 = icmp ne i64 %and302, 0, !dbg !7232
  br i1 %tobool303, label %cond.true304, label %cond.false305, !dbg !7232

cond.true304:                                     ; preds = %cond.false299
  br label %cond.end461, !dbg !7232

cond.false305:                                    ; preds = %cond.false299
  %91 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv306 = sext i32 %91 to i64, !dbg !7232
  %call307 = call i64 @__roundup_pow_of_two(i64 %conv306) #10, !dbg !7232
  %and308 = and i64 %call307, 2097152, !dbg !7232
  %tobool309 = icmp ne i64 %and308, 0, !dbg !7232
  br i1 %tobool309, label %cond.true310, label %cond.false311, !dbg !7232

cond.true310:                                     ; preds = %cond.false305
  br label %cond.end459, !dbg !7232

cond.false311:                                    ; preds = %cond.false305
  %92 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv312 = sext i32 %92 to i64, !dbg !7232
  %call313 = call i64 @__roundup_pow_of_two(i64 %conv312) #10, !dbg !7232
  %and314 = and i64 %call313, 1048576, !dbg !7232
  %tobool315 = icmp ne i64 %and314, 0, !dbg !7232
  br i1 %tobool315, label %cond.true316, label %cond.false317, !dbg !7232

cond.true316:                                     ; preds = %cond.false311
  br label %cond.end457, !dbg !7232

cond.false317:                                    ; preds = %cond.false311
  %93 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv318 = sext i32 %93 to i64, !dbg !7232
  %call319 = call i64 @__roundup_pow_of_two(i64 %conv318) #10, !dbg !7232
  %and320 = and i64 %call319, 524288, !dbg !7232
  %tobool321 = icmp ne i64 %and320, 0, !dbg !7232
  br i1 %tobool321, label %cond.true322, label %cond.false323, !dbg !7232

cond.true322:                                     ; preds = %cond.false317
  br label %cond.end455, !dbg !7232

cond.false323:                                    ; preds = %cond.false317
  %94 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv324 = sext i32 %94 to i64, !dbg !7232
  %call325 = call i64 @__roundup_pow_of_two(i64 %conv324) #10, !dbg !7232
  %and326 = and i64 %call325, 262144, !dbg !7232
  %tobool327 = icmp ne i64 %and326, 0, !dbg !7232
  br i1 %tobool327, label %cond.true328, label %cond.false329, !dbg !7232

cond.true328:                                     ; preds = %cond.false323
  br label %cond.end453, !dbg !7232

cond.false329:                                    ; preds = %cond.false323
  %95 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv330 = sext i32 %95 to i64, !dbg !7232
  %call331 = call i64 @__roundup_pow_of_two(i64 %conv330) #10, !dbg !7232
  %and332 = and i64 %call331, 131072, !dbg !7232
  %tobool333 = icmp ne i64 %and332, 0, !dbg !7232
  br i1 %tobool333, label %cond.true334, label %cond.false335, !dbg !7232

cond.true334:                                     ; preds = %cond.false329
  br label %cond.end451, !dbg !7232

cond.false335:                                    ; preds = %cond.false329
  %96 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv336 = sext i32 %96 to i64, !dbg !7232
  %call337 = call i64 @__roundup_pow_of_two(i64 %conv336) #10, !dbg !7232
  %and338 = and i64 %call337, 65536, !dbg !7232
  %tobool339 = icmp ne i64 %and338, 0, !dbg !7232
  br i1 %tobool339, label %cond.true340, label %cond.false341, !dbg !7232

cond.true340:                                     ; preds = %cond.false335
  br label %cond.end449, !dbg !7232

cond.false341:                                    ; preds = %cond.false335
  %97 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv342 = sext i32 %97 to i64, !dbg !7232
  %call343 = call i64 @__roundup_pow_of_two(i64 %conv342) #10, !dbg !7232
  %and344 = and i64 %call343, 32768, !dbg !7232
  %tobool345 = icmp ne i64 %and344, 0, !dbg !7232
  br i1 %tobool345, label %cond.true346, label %cond.false347, !dbg !7232

cond.true346:                                     ; preds = %cond.false341
  br label %cond.end447, !dbg !7232

cond.false347:                                    ; preds = %cond.false341
  %98 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv348 = sext i32 %98 to i64, !dbg !7232
  %call349 = call i64 @__roundup_pow_of_two(i64 %conv348) #10, !dbg !7232
  %and350 = and i64 %call349, 16384, !dbg !7232
  %tobool351 = icmp ne i64 %and350, 0, !dbg !7232
  br i1 %tobool351, label %cond.true352, label %cond.false353, !dbg !7232

cond.true352:                                     ; preds = %cond.false347
  br label %cond.end445, !dbg !7232

cond.false353:                                    ; preds = %cond.false347
  %99 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv354 = sext i32 %99 to i64, !dbg !7232
  %call355 = call i64 @__roundup_pow_of_two(i64 %conv354) #10, !dbg !7232
  %and356 = and i64 %call355, 8192, !dbg !7232
  %tobool357 = icmp ne i64 %and356, 0, !dbg !7232
  br i1 %tobool357, label %cond.true358, label %cond.false359, !dbg !7232

cond.true358:                                     ; preds = %cond.false353
  br label %cond.end443, !dbg !7232

cond.false359:                                    ; preds = %cond.false353
  %100 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv360 = sext i32 %100 to i64, !dbg !7232
  %call361 = call i64 @__roundup_pow_of_two(i64 %conv360) #10, !dbg !7232
  %and362 = and i64 %call361, 4096, !dbg !7232
  %tobool363 = icmp ne i64 %and362, 0, !dbg !7232
  br i1 %tobool363, label %cond.true364, label %cond.false365, !dbg !7232

cond.true364:                                     ; preds = %cond.false359
  br label %cond.end441, !dbg !7232

cond.false365:                                    ; preds = %cond.false359
  %101 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv366 = sext i32 %101 to i64, !dbg !7232
  %call367 = call i64 @__roundup_pow_of_two(i64 %conv366) #10, !dbg !7232
  %and368 = and i64 %call367, 2048, !dbg !7232
  %tobool369 = icmp ne i64 %and368, 0, !dbg !7232
  br i1 %tobool369, label %cond.true370, label %cond.false371, !dbg !7232

cond.true370:                                     ; preds = %cond.false365
  br label %cond.end439, !dbg !7232

cond.false371:                                    ; preds = %cond.false365
  %102 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv372 = sext i32 %102 to i64, !dbg !7232
  %call373 = call i64 @__roundup_pow_of_two(i64 %conv372) #10, !dbg !7232
  %and374 = and i64 %call373, 1024, !dbg !7232
  %tobool375 = icmp ne i64 %and374, 0, !dbg !7232
  br i1 %tobool375, label %cond.true376, label %cond.false377, !dbg !7232

cond.true376:                                     ; preds = %cond.false371
  br label %cond.end437, !dbg !7232

cond.false377:                                    ; preds = %cond.false371
  %103 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv378 = sext i32 %103 to i64, !dbg !7232
  %call379 = call i64 @__roundup_pow_of_two(i64 %conv378) #10, !dbg !7232
  %and380 = and i64 %call379, 512, !dbg !7232
  %tobool381 = icmp ne i64 %and380, 0, !dbg !7232
  br i1 %tobool381, label %cond.true382, label %cond.false383, !dbg !7232

cond.true382:                                     ; preds = %cond.false377
  br label %cond.end435, !dbg !7232

cond.false383:                                    ; preds = %cond.false377
  %104 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv384 = sext i32 %104 to i64, !dbg !7232
  %call385 = call i64 @__roundup_pow_of_two(i64 %conv384) #10, !dbg !7232
  %and386 = and i64 %call385, 256, !dbg !7232
  %tobool387 = icmp ne i64 %and386, 0, !dbg !7232
  br i1 %tobool387, label %cond.true388, label %cond.false389, !dbg !7232

cond.true388:                                     ; preds = %cond.false383
  br label %cond.end433, !dbg !7232

cond.false389:                                    ; preds = %cond.false383
  %105 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv390 = sext i32 %105 to i64, !dbg !7232
  %call391 = call i64 @__roundup_pow_of_two(i64 %conv390) #10, !dbg !7232
  %and392 = and i64 %call391, 128, !dbg !7232
  %tobool393 = icmp ne i64 %and392, 0, !dbg !7232
  br i1 %tobool393, label %cond.true394, label %cond.false395, !dbg !7232

cond.true394:                                     ; preds = %cond.false389
  br label %cond.end431, !dbg !7232

cond.false395:                                    ; preds = %cond.false389
  %106 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv396 = sext i32 %106 to i64, !dbg !7232
  %call397 = call i64 @__roundup_pow_of_two(i64 %conv396) #10, !dbg !7232
  %and398 = and i64 %call397, 64, !dbg !7232
  %tobool399 = icmp ne i64 %and398, 0, !dbg !7232
  br i1 %tobool399, label %cond.true400, label %cond.false401, !dbg !7232

cond.true400:                                     ; preds = %cond.false395
  br label %cond.end429, !dbg !7232

cond.false401:                                    ; preds = %cond.false395
  %107 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv402 = sext i32 %107 to i64, !dbg !7232
  %call403 = call i64 @__roundup_pow_of_two(i64 %conv402) #10, !dbg !7232
  %and404 = and i64 %call403, 32, !dbg !7232
  %tobool405 = icmp ne i64 %and404, 0, !dbg !7232
  br i1 %tobool405, label %cond.true406, label %cond.false407, !dbg !7232

cond.true406:                                     ; preds = %cond.false401
  br label %cond.end427, !dbg !7232

cond.false407:                                    ; preds = %cond.false401
  %108 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv408 = sext i32 %108 to i64, !dbg !7232
  %call409 = call i64 @__roundup_pow_of_two(i64 %conv408) #10, !dbg !7232
  %and410 = and i64 %call409, 16, !dbg !7232
  %tobool411 = icmp ne i64 %and410, 0, !dbg !7232
  br i1 %tobool411, label %cond.true412, label %cond.false413, !dbg !7232

cond.true412:                                     ; preds = %cond.false407
  br label %cond.end425, !dbg !7232

cond.false413:                                    ; preds = %cond.false407
  %109 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv414 = sext i32 %109 to i64, !dbg !7232
  %call415 = call i64 @__roundup_pow_of_two(i64 %conv414) #10, !dbg !7232
  %and416 = and i64 %call415, 8, !dbg !7232
  %tobool417 = icmp ne i64 %and416, 0, !dbg !7232
  br i1 %tobool417, label %cond.true418, label %cond.false419, !dbg !7232

cond.true418:                                     ; preds = %cond.false413
  br label %cond.end, !dbg !7232

cond.false419:                                    ; preds = %cond.false413
  %110 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv420 = sext i32 %110 to i64, !dbg !7232
  %call421 = call i64 @__roundup_pow_of_two(i64 %conv420) #10, !dbg !7232
  %and422 = and i64 %call421, 4, !dbg !7232
  %tobool423 = icmp ne i64 %and422, 0, !dbg !7232
  %111 = zext i1 %tobool423 to i64, !dbg !7232
  %cond = select i1 %tobool423, i32 2, i32 1, !dbg !7232
  br label %cond.end, !dbg !7232

cond.end:                                         ; preds = %cond.false419, %cond.true418
  %cond424 = phi i32 [ 3, %cond.true418 ], [ %cond, %cond.false419 ], !dbg !7232
  br label %cond.end425, !dbg !7232

cond.end425:                                      ; preds = %cond.end, %cond.true412
  %cond426 = phi i32 [ 4, %cond.true412 ], [ %cond424, %cond.end ], !dbg !7232
  br label %cond.end427, !dbg !7232

cond.end427:                                      ; preds = %cond.end425, %cond.true406
  %cond428 = phi i32 [ 5, %cond.true406 ], [ %cond426, %cond.end425 ], !dbg !7232
  br label %cond.end429, !dbg !7232

cond.end429:                                      ; preds = %cond.end427, %cond.true400
  %cond430 = phi i32 [ 6, %cond.true400 ], [ %cond428, %cond.end427 ], !dbg !7232
  br label %cond.end431, !dbg !7232

cond.end431:                                      ; preds = %cond.end429, %cond.true394
  %cond432 = phi i32 [ 7, %cond.true394 ], [ %cond430, %cond.end429 ], !dbg !7232
  br label %cond.end433, !dbg !7232

cond.end433:                                      ; preds = %cond.end431, %cond.true388
  %cond434 = phi i32 [ 8, %cond.true388 ], [ %cond432, %cond.end431 ], !dbg !7232
  br label %cond.end435, !dbg !7232

cond.end435:                                      ; preds = %cond.end433, %cond.true382
  %cond436 = phi i32 [ 9, %cond.true382 ], [ %cond434, %cond.end433 ], !dbg !7232
  br label %cond.end437, !dbg !7232

cond.end437:                                      ; preds = %cond.end435, %cond.true376
  %cond438 = phi i32 [ 10, %cond.true376 ], [ %cond436, %cond.end435 ], !dbg !7232
  br label %cond.end439, !dbg !7232

cond.end439:                                      ; preds = %cond.end437, %cond.true370
  %cond440 = phi i32 [ 11, %cond.true370 ], [ %cond438, %cond.end437 ], !dbg !7232
  br label %cond.end441, !dbg !7232

cond.end441:                                      ; preds = %cond.end439, %cond.true364
  %cond442 = phi i32 [ 12, %cond.true364 ], [ %cond440, %cond.end439 ], !dbg !7232
  br label %cond.end443, !dbg !7232

cond.end443:                                      ; preds = %cond.end441, %cond.true358
  %cond444 = phi i32 [ 13, %cond.true358 ], [ %cond442, %cond.end441 ], !dbg !7232
  br label %cond.end445, !dbg !7232

cond.end445:                                      ; preds = %cond.end443, %cond.true352
  %cond446 = phi i32 [ 14, %cond.true352 ], [ %cond444, %cond.end443 ], !dbg !7232
  br label %cond.end447, !dbg !7232

cond.end447:                                      ; preds = %cond.end445, %cond.true346
  %cond448 = phi i32 [ 15, %cond.true346 ], [ %cond446, %cond.end445 ], !dbg !7232
  br label %cond.end449, !dbg !7232

cond.end449:                                      ; preds = %cond.end447, %cond.true340
  %cond450 = phi i32 [ 16, %cond.true340 ], [ %cond448, %cond.end447 ], !dbg !7232
  br label %cond.end451, !dbg !7232

cond.end451:                                      ; preds = %cond.end449, %cond.true334
  %cond452 = phi i32 [ 17, %cond.true334 ], [ %cond450, %cond.end449 ], !dbg !7232
  br label %cond.end453, !dbg !7232

cond.end453:                                      ; preds = %cond.end451, %cond.true328
  %cond454 = phi i32 [ 18, %cond.true328 ], [ %cond452, %cond.end451 ], !dbg !7232
  br label %cond.end455, !dbg !7232

cond.end455:                                      ; preds = %cond.end453, %cond.true322
  %cond456 = phi i32 [ 19, %cond.true322 ], [ %cond454, %cond.end453 ], !dbg !7232
  br label %cond.end457, !dbg !7232

cond.end457:                                      ; preds = %cond.end455, %cond.true316
  %cond458 = phi i32 [ 20, %cond.true316 ], [ %cond456, %cond.end455 ], !dbg !7232
  br label %cond.end459, !dbg !7232

cond.end459:                                      ; preds = %cond.end457, %cond.true310
  %cond460 = phi i32 [ 21, %cond.true310 ], [ %cond458, %cond.end457 ], !dbg !7232
  br label %cond.end461, !dbg !7232

cond.end461:                                      ; preds = %cond.end459, %cond.true304
  %cond462 = phi i32 [ 22, %cond.true304 ], [ %cond460, %cond.end459 ], !dbg !7232
  br label %cond.end463, !dbg !7232

cond.end463:                                      ; preds = %cond.end461, %cond.true298
  %cond464 = phi i32 [ 23, %cond.true298 ], [ %cond462, %cond.end461 ], !dbg !7232
  br label %cond.end465, !dbg !7232

cond.end465:                                      ; preds = %cond.end463, %cond.true292
  %cond466 = phi i32 [ 24, %cond.true292 ], [ %cond464, %cond.end463 ], !dbg !7232
  br label %cond.end467, !dbg !7232

cond.end467:                                      ; preds = %cond.end465, %cond.true286
  %cond468 = phi i32 [ 25, %cond.true286 ], [ %cond466, %cond.end465 ], !dbg !7232
  br label %cond.end469, !dbg !7232

cond.end469:                                      ; preds = %cond.end467, %cond.true280
  %cond470 = phi i32 [ 26, %cond.true280 ], [ %cond468, %cond.end467 ], !dbg !7232
  br label %cond.end471, !dbg !7232

cond.end471:                                      ; preds = %cond.end469, %cond.true274
  %cond472 = phi i32 [ 27, %cond.true274 ], [ %cond470, %cond.end469 ], !dbg !7232
  br label %cond.end473, !dbg !7232

cond.end473:                                      ; preds = %cond.end471, %cond.true268
  %cond474 = phi i32 [ 28, %cond.true268 ], [ %cond472, %cond.end471 ], !dbg !7232
  br label %cond.end475, !dbg !7232

cond.end475:                                      ; preds = %cond.end473, %cond.true262
  %cond476 = phi i32 [ 29, %cond.true262 ], [ %cond474, %cond.end473 ], !dbg !7232
  br label %cond.end477, !dbg !7232

cond.end477:                                      ; preds = %cond.end475, %cond.true256
  %cond478 = phi i32 [ 30, %cond.true256 ], [ %cond476, %cond.end475 ], !dbg !7232
  br label %cond.end479, !dbg !7232

cond.end479:                                      ; preds = %cond.end477, %cond.true250
  %cond480 = phi i32 [ 31, %cond.true250 ], [ %cond478, %cond.end477 ], !dbg !7232
  br label %cond.end481, !dbg !7232

cond.end481:                                      ; preds = %cond.end479, %cond.true244
  %cond482 = phi i32 [ 32, %cond.true244 ], [ %cond480, %cond.end479 ], !dbg !7232
  br label %cond.end483, !dbg !7232

cond.end483:                                      ; preds = %cond.end481, %cond.true238
  %cond484 = phi i32 [ 33, %cond.true238 ], [ %cond482, %cond.end481 ], !dbg !7232
  br label %cond.end485, !dbg !7232

cond.end485:                                      ; preds = %cond.end483, %cond.true232
  %cond486 = phi i32 [ 34, %cond.true232 ], [ %cond484, %cond.end483 ], !dbg !7232
  br label %cond.end487, !dbg !7232

cond.end487:                                      ; preds = %cond.end485, %cond.true226
  %cond488 = phi i32 [ 35, %cond.true226 ], [ %cond486, %cond.end485 ], !dbg !7232
  br label %cond.end489, !dbg !7232

cond.end489:                                      ; preds = %cond.end487, %cond.true220
  %cond490 = phi i32 [ 36, %cond.true220 ], [ %cond488, %cond.end487 ], !dbg !7232
  br label %cond.end491, !dbg !7232

cond.end491:                                      ; preds = %cond.end489, %cond.true214
  %cond492 = phi i32 [ 37, %cond.true214 ], [ %cond490, %cond.end489 ], !dbg !7232
  br label %cond.end493, !dbg !7232

cond.end493:                                      ; preds = %cond.end491, %cond.true208
  %cond494 = phi i32 [ 38, %cond.true208 ], [ %cond492, %cond.end491 ], !dbg !7232
  br label %cond.end495, !dbg !7232

cond.end495:                                      ; preds = %cond.end493, %cond.true202
  %cond496 = phi i32 [ 39, %cond.true202 ], [ %cond494, %cond.end493 ], !dbg !7232
  br label %cond.end497, !dbg !7232

cond.end497:                                      ; preds = %cond.end495, %cond.true196
  %cond498 = phi i32 [ 40, %cond.true196 ], [ %cond496, %cond.end495 ], !dbg !7232
  br label %cond.end499, !dbg !7232

cond.end499:                                      ; preds = %cond.end497, %cond.true190
  %cond500 = phi i32 [ 41, %cond.true190 ], [ %cond498, %cond.end497 ], !dbg !7232
  br label %cond.end501, !dbg !7232

cond.end501:                                      ; preds = %cond.end499, %cond.true184
  %cond502 = phi i32 [ 42, %cond.true184 ], [ %cond500, %cond.end499 ], !dbg !7232
  br label %cond.end503, !dbg !7232

cond.end503:                                      ; preds = %cond.end501, %cond.true178
  %cond504 = phi i32 [ 43, %cond.true178 ], [ %cond502, %cond.end501 ], !dbg !7232
  br label %cond.end505, !dbg !7232

cond.end505:                                      ; preds = %cond.end503, %cond.true172
  %cond506 = phi i32 [ 44, %cond.true172 ], [ %cond504, %cond.end503 ], !dbg !7232
  br label %cond.end507, !dbg !7232

cond.end507:                                      ; preds = %cond.end505, %cond.true166
  %cond508 = phi i32 [ 45, %cond.true166 ], [ %cond506, %cond.end505 ], !dbg !7232
  br label %cond.end509, !dbg !7232

cond.end509:                                      ; preds = %cond.end507, %cond.true160
  %cond510 = phi i32 [ 46, %cond.true160 ], [ %cond508, %cond.end507 ], !dbg !7232
  br label %cond.end511, !dbg !7232

cond.end511:                                      ; preds = %cond.end509, %cond.true154
  %cond512 = phi i32 [ 47, %cond.true154 ], [ %cond510, %cond.end509 ], !dbg !7232
  br label %cond.end513, !dbg !7232

cond.end513:                                      ; preds = %cond.end511, %cond.true148
  %cond514 = phi i32 [ 48, %cond.true148 ], [ %cond512, %cond.end511 ], !dbg !7232
  br label %cond.end515, !dbg !7232

cond.end515:                                      ; preds = %cond.end513, %cond.true142
  %cond516 = phi i32 [ 49, %cond.true142 ], [ %cond514, %cond.end513 ], !dbg !7232
  br label %cond.end517, !dbg !7232

cond.end517:                                      ; preds = %cond.end515, %cond.true136
  %cond518 = phi i32 [ 50, %cond.true136 ], [ %cond516, %cond.end515 ], !dbg !7232
  br label %cond.end519, !dbg !7232

cond.end519:                                      ; preds = %cond.end517, %cond.true130
  %cond520 = phi i32 [ 51, %cond.true130 ], [ %cond518, %cond.end517 ], !dbg !7232
  br label %cond.end521, !dbg !7232

cond.end521:                                      ; preds = %cond.end519, %cond.true124
  %cond522 = phi i32 [ 52, %cond.true124 ], [ %cond520, %cond.end519 ], !dbg !7232
  br label %cond.end523, !dbg !7232

cond.end523:                                      ; preds = %cond.end521, %cond.true118
  %cond524 = phi i32 [ 53, %cond.true118 ], [ %cond522, %cond.end521 ], !dbg !7232
  br label %cond.end525, !dbg !7232

cond.end525:                                      ; preds = %cond.end523, %cond.true112
  %cond526 = phi i32 [ 54, %cond.true112 ], [ %cond524, %cond.end523 ], !dbg !7232
  br label %cond.end527, !dbg !7232

cond.end527:                                      ; preds = %cond.end525, %cond.true106
  %cond528 = phi i32 [ 55, %cond.true106 ], [ %cond526, %cond.end525 ], !dbg !7232
  br label %cond.end529, !dbg !7232

cond.end529:                                      ; preds = %cond.end527, %cond.true100
  %cond530 = phi i32 [ 56, %cond.true100 ], [ %cond528, %cond.end527 ], !dbg !7232
  br label %cond.end531, !dbg !7232

cond.end531:                                      ; preds = %cond.end529, %cond.true94
  %cond532 = phi i32 [ 57, %cond.true94 ], [ %cond530, %cond.end529 ], !dbg !7232
  br label %cond.end533, !dbg !7232

cond.end533:                                      ; preds = %cond.end531, %cond.true88
  %cond534 = phi i32 [ 58, %cond.true88 ], [ %cond532, %cond.end531 ], !dbg !7232
  br label %cond.end535, !dbg !7232

cond.end535:                                      ; preds = %cond.end533, %cond.true82
  %cond536 = phi i32 [ 59, %cond.true82 ], [ %cond534, %cond.end533 ], !dbg !7232
  br label %cond.end537, !dbg !7232

cond.end537:                                      ; preds = %cond.end535, %cond.true76
  %cond538 = phi i32 [ 60, %cond.true76 ], [ %cond536, %cond.end535 ], !dbg !7232
  br label %cond.end539, !dbg !7232

cond.end539:                                      ; preds = %cond.end537, %cond.true70
  %cond540 = phi i32 [ 61, %cond.true70 ], [ %cond538, %cond.end537 ], !dbg !7232
  br label %cond.end541, !dbg !7232

cond.end541:                                      ; preds = %cond.end539, %cond.true64
  %cond542 = phi i32 [ 62, %cond.true64 ], [ %cond540, %cond.end539 ], !dbg !7232
  br label %cond.end543, !dbg !7232

cond.end543:                                      ; preds = %cond.end541, %cond.true58
  %cond544 = phi i32 [ 63, %cond.true58 ], [ %cond542, %cond.end541 ], !dbg !7232
  br label %cond.end545, !dbg !7232

cond.end545:                                      ; preds = %cond.end543, %cond.true53
  %cond546 = phi i32 [ 0, %cond.true53 ], [ %cond544, %cond.end543 ], !dbg !7232
  br label %cond.end548, !dbg !7232

cond.false547:                                    ; preds = %cond.true
  br label %cond.end548, !dbg !7232

cond.end548:                                      ; preds = %cond.false547, %cond.end545
  %cond549 = phi i32 [ %cond546, %cond.end545 ], [ -1, %cond.false547 ], !dbg !7232
  br label %cond.end554, !dbg !7232

cond.false550:                                    ; preds = %if.end6
  %112 = load i32, i32* %nvec.addr, align 4, !dbg !7232
  %conv551 = sext i32 %112 to i64, !dbg !7232
  %call552 = call i64 @__roundup_pow_of_two(i64 %conv551) #10, !dbg !7232
  %call553 = call i32 @__ilog2_u64(i64 %call552) #10, !dbg !7232
  br label %cond.end554, !dbg !7232

cond.end554:                                      ; preds = %cond.false550, %cond.end548
  %cond555 = phi i32 [ %cond549, %cond.end548 ], [ %call553, %cond.false550 ], !dbg !7232
  %conv556 = trunc i32 %cond555 to i8, !dbg !7232
  %113 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7233
  %114 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %113, i32 0, i32 8, !dbg !7234
  %115 = bitcast %union.anon.65* %114 to %struct.anon.66*, !dbg !7234
  %msi_attrib557 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %115, i32 0, i32 1, !dbg !7234
  %116 = bitcast %struct.anon.67* %msi_attrib557 to i16*, !dbg !7235
  %117 = zext i8 %conv556 to i16, !dbg !7236
  %bf.load558 = load i16, i16* %116, align 4, !dbg !7236
  %bf.value559 = and i16 %117, 7, !dbg !7236
  %bf.shl560 = shl i16 %bf.value559, 1, !dbg !7236
  %bf.clear561 = and i16 %bf.load558, -15, !dbg !7236
  %bf.set562 = or i16 %bf.clear561, %bf.shl560, !dbg !7236
  store i16 %bf.set562, i16* %116, align 4, !dbg !7236
  %bf.result.cast563 = trunc i16 %bf.value559 to i8, !dbg !7236
  %118 = load i16, i16* %control, align 2, !dbg !7237
  %conv564 = zext i16 %118 to i32, !dbg !7237
  %and565 = and i32 %conv564, 128, !dbg !7239
  %tobool566 = icmp ne i32 %and565, 0, !dbg !7239
  br i1 %tobool566, label %if.then567, label %if.else, !dbg !7240

if.then567:                                       ; preds = %cond.end554
  %119 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7241
  %msi_cap568 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %119, i32 0, i32 15, !dbg !7242
  %120 = load i8, i8* %msi_cap568, align 1, !dbg !7242
  %conv569 = zext i8 %120 to i32, !dbg !7241
  %add570 = add i32 %conv569, 16, !dbg !7243
  %conv571 = trunc i32 %add570 to i8, !dbg !7241
  %121 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7244
  %122 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %121, i32 0, i32 8, !dbg !7245
  %123 = bitcast %union.anon.65* %122 to %struct.anon.66*, !dbg !7245
  %124 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %123, i32 0, i32 2, !dbg !7245
  %mask_pos = bitcast %union.anon.68* %124 to i8*, !dbg !7245
  store i8 %conv571, i8* %mask_pos, align 8, !dbg !7246
  br label %if.end577, !dbg !7244

if.else:                                          ; preds = %cond.end554
  %125 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7247
  %msi_cap572 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %125, i32 0, i32 15, !dbg !7248
  %126 = load i8, i8* %msi_cap572, align 1, !dbg !7248
  %conv573 = zext i8 %126 to i32, !dbg !7247
  %add574 = add i32 %conv573, 12, !dbg !7249
  %conv575 = trunc i32 %add574 to i8, !dbg !7247
  %127 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7250
  %128 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %127, i32 0, i32 8, !dbg !7251
  %129 = bitcast %union.anon.65* %128 to %struct.anon.66*, !dbg !7251
  %130 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %129, i32 0, i32 2, !dbg !7251
  %mask_pos576 = bitcast %union.anon.68* %130 to i8*, !dbg !7251
  store i8 %conv575, i8* %mask_pos576, align 8, !dbg !7252
  br label %if.end577

if.end577:                                        ; preds = %if.else, %if.then567
  %131 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7253
  %132 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %131, i32 0, i32 8, !dbg !7255
  %133 = bitcast %union.anon.65* %132 to %struct.anon.66*, !dbg !7255
  %msi_attrib578 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %133, i32 0, i32 1, !dbg !7255
  %134 = bitcast %struct.anon.67* %msi_attrib578 to i16*, !dbg !7256
  %bf.load579 = load i16, i16* %134, align 4, !dbg !7256
  %bf.lshr = lshr i16 %bf.load579, 7, !dbg !7256
  %bf.clear580 = and i16 %bf.lshr, 1, !dbg !7256
  %bf.cast = trunc i16 %bf.clear580 to i8, !dbg !7256
  %tobool581 = icmp ne i8 %bf.cast, 0, !dbg !7253
  br i1 %tobool581, label %if.then582, label %if.end586, !dbg !7257

if.then582:                                       ; preds = %if.end577
  %135 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7258
  %136 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7259
  %137 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %136, i32 0, i32 8, !dbg !7260
  %138 = bitcast %union.anon.65* %137 to %struct.anon.66*, !dbg !7260
  %139 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %138, i32 0, i32 2, !dbg !7260
  %mask_pos583 = bitcast %union.anon.68* %139 to i8*, !dbg !7260
  %140 = load i8, i8* %mask_pos583, align 8, !dbg !7260
  %conv584 = zext i8 %140 to i32, !dbg !7259
  %141 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7261
  %142 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %141, i32 0, i32 8, !dbg !7262
  %143 = bitcast %union.anon.65* %142 to %struct.anon.66*, !dbg !7262
  %masked = getelementptr inbounds %struct.anon.66, %struct.anon.66* %143, i32 0, i32 0, !dbg !7262
  %call585 = call i32 @pci_read_config_dword(%struct.pci_dev* %135, i32 %conv584, i32* %masked) #8, !dbg !7263
  br label %if.end586, !dbg !7263

if.end586:                                        ; preds = %if.then582, %if.end577
  br label %out, !dbg !7256

out:                                              ; preds = %if.end586, %if.then5
  call void @llvm.dbg.label(metadata !7264), !dbg !7265
  %144 = load %struct.irq_affinity_desc*, %struct.irq_affinity_desc** %masks, align 8, !dbg !7266
  %145 = bitcast %struct.irq_affinity_desc* %144 to i8*, !dbg !7266
  call void @kfree(i8* %145) #8, !dbg !7267
  %146 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7268
  ret %struct.msi_desc* %146, !dbg !7269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !7270 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7271, metadata !DIExpression()), !dbg !7272
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7273, metadata !DIExpression()), !dbg !7274
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7275
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7276
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7277
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7277
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7278
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #8, !dbg !7279
  ret void, !dbg !7280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_msi_setup_msi_irqs(%struct.pci_dev* %dev, i32 %nvec, i32 %type) #0 !dbg !7281 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %nvec.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %domain = alloca %struct.irq_domain*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7284, metadata !DIExpression()), !dbg !7285
  store i32 %nvec, i32* %nvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nvec.addr, metadata !7286, metadata !DIExpression()), !dbg !7287
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7288, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %domain, metadata !7290, metadata !DIExpression()), !dbg !7291
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7292
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !7293
  %call = call %struct.irq_domain* @dev_get_msi_domain(%struct.device* %dev1) #8, !dbg !7294
  store %struct.irq_domain* %call, %struct.irq_domain** %domain, align 8, !dbg !7295
  %1 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !7296
  %tobool = icmp ne %struct.irq_domain* %1, null, !dbg !7296
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7298

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !7299
  %call2 = call zeroext i1 @irq_domain_is_hierarchy(%struct.irq_domain* %2) #8, !dbg !7300
  br i1 %call2, label %if.then, label %if.end, !dbg !7301

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.irq_domain*, %struct.irq_domain** %domain, align 8, !dbg !7302
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7303
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !7304
  %5 = load i32, i32* %nvec.addr, align 4, !dbg !7305
  %call4 = call i32 @msi_domain_alloc_irqs(%struct.irq_domain* %3, %struct.device* %dev3, i32 %5) #8, !dbg !7306
  store i32 %call4, i32* %retval, align 4, !dbg !7307
  br label %return, !dbg !7307

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7308
  %7 = load i32, i32* %nvec.addr, align 4, !dbg !7309
  %8 = load i32, i32* %type.addr, align 4, !dbg !7310
  %call5 = call i32 @arch_setup_msi_irqs(%struct.pci_dev* %6, i32 %7, i32 %8) #8, !dbg !7311
  store i32 %call5, i32* %retval, align 4, !dbg !7312
  br label %return, !dbg !7312

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7313
  ret i32 %9, !dbg !7313
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @msi_verify_entries(%struct.pci_dev* %dev) #0 !dbg !7314 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %entry1 = alloca %struct.msi_desc*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.msi_desc*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp12 = alloca %struct.msi_desc*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7315, metadata !DIExpression()), !dbg !7316
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !7317, metadata !DIExpression()), !dbg !7318
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7319, metadata !DIExpression()), !dbg !7322
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7322
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !7322
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 14, !dbg !7322
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list, i32 0, i32 0, !dbg !7322
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7322
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !7322
  store i8* %2, i8** %__mptr, align 8, !dbg !7322
  br label %do.body, !dbg !7322

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7323

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !7322
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !7322
  %4 = bitcast i8* %add.ptr to %struct.msi_desc*, !dbg !7322
  store %struct.msi_desc* %4, %struct.msi_desc** %tmp, align 8, !dbg !7323
  %5 = load %struct.msi_desc*, %struct.msi_desc** %tmp, align 8, !dbg !7322
  store %struct.msi_desc* %5, %struct.msi_desc** %entry1, align 8, !dbg !7325
  br label %for.cond, !dbg !7325

for.cond:                                         ; preds = %do.end11, %do.end
  %6 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7326
  %list = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %6, i32 0, i32 0, !dbg !7326
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7326
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !7326
  %msi_list4 = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 14, !dbg !7326
  %cmp = icmp eq %struct.list_head* %list, %msi_list4, !dbg !7326
  %lnot = xor i1 %cmp, true, !dbg !7326
  br i1 %lnot, label %for.body, label %for.end, !dbg !7325

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7328
  %no_64bit_msi = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 46, !dbg !7331
  %9 = bitcast [5 x i8]* %no_64bit_msi to i40*, !dbg !7331
  %bf.load = load i40, i40* %9, align 1, !dbg !7331
  %bf.lshr = lshr i40 %bf.load, 7, !dbg !7331
  %bf.clear = and i40 %bf.lshr, 1, !dbg !7331
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !7331
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7328
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7332

lor.lhs.false:                                    ; preds = %for.body
  %10 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7333
  %msg = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %10, i32 0, i32 4, !dbg !7334
  %address_hi = getelementptr inbounds %struct.msi_msg, %struct.msi_msg* %msg, i32 0, i32 1, !dbg !7335
  %11 = load i32, i32* %address_hi, align 4, !dbg !7335
  %tobool5 = icmp ne i32 %11, 0, !dbg !7333
  br i1 %tobool5, label %if.end, label %if.then, !dbg !7336

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !7337

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7338
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !7338
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev6, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0)) #11, !dbg !7338
  store i32 -5, i32* %retval, align 4, !dbg !7339
  br label %return, !dbg !7339

for.inc:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !7340, metadata !DIExpression()), !dbg !7342
  %13 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7342
  %list8 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %13, i32 0, i32 0, !dbg !7342
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %list8, i32 0, i32 0, !dbg !7342
  %14 = load %struct.list_head*, %struct.list_head** %next9, align 8, !dbg !7342
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !7342
  store i8* %15, i8** %__mptr7, align 8, !dbg !7342
  br label %do.body10, !dbg !7342

do.body10:                                        ; preds = %for.inc
  br label %do.end11, !dbg !7343

do.end11:                                         ; preds = %do.body10
  %16 = load i8*, i8** %__mptr7, align 8, !dbg !7342
  %add.ptr13 = getelementptr i8, i8* %16, i64 0, !dbg !7342
  %17 = bitcast i8* %add.ptr13 to %struct.msi_desc*, !dbg !7342
  store %struct.msi_desc* %17, %struct.msi_desc** %tmp12, align 8, !dbg !7343
  %18 = load %struct.msi_desc*, %struct.msi_desc** %tmp12, align 8, !dbg !7342
  store %struct.msi_desc* %18, %struct.msi_desc** %entry1, align 8, !dbg !7326
  br label %for.cond, !dbg !7326, !llvm.loop !7345

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7347
  br label %return, !dbg !7347

return:                                           ; preds = %for.end, %if.end
  %19 = load i32, i32* %retval, align 4, !dbg !7348
  ret i32 %19, !dbg !7348
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @populate_msi_sysfs(%struct.pci_dev* %pdev) #0 !dbg !7349 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %msi_attrs = alloca %struct.attribute**, align 8
  %msi_attr = alloca %struct.attribute*, align 8
  %msi_dev_attr = alloca %struct.device_attribute*, align 8
  %msi_irq_group = alloca %struct.attribute_group*, align 8
  %msi_irq_groups = alloca %struct.attribute_group**, align 8
  %entry1 = alloca %struct.msi_desc*, align 8
  %ret = alloca i32, align 4
  %num_msi = alloca i32, align 4
  %count = alloca i32, align 4
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.msi_desc*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp9 = alloca %struct.msi_desc*, align 8
  %__mptr15 = alloca i8*, align 8
  %tmp21 = alloca %struct.msi_desc*, align 8
  %__mptr55 = alloca i8*, align 8
  %tmp60 = alloca %struct.msi_desc*, align 8
  %__mptr82 = alloca i8*, align 8
  %tmp85 = alloca %struct.device_attribute*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7350, metadata !DIExpression()), !dbg !7351
  call void @llvm.dbg.declare(metadata %struct.attribute*** %msi_attrs, metadata !7352, metadata !DIExpression()), !dbg !7353
  call void @llvm.dbg.declare(metadata %struct.attribute** %msi_attr, metadata !7354, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %msi_dev_attr, metadata !7356, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.declare(metadata %struct.attribute_group** %msi_irq_group, metadata !7358, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.declare(metadata %struct.attribute_group*** %msi_irq_groups, metadata !7361, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !7363, metadata !DIExpression()), !dbg !7364
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7365, metadata !DIExpression()), !dbg !7366
  store i32 -12, i32* %ret, align 4, !dbg !7366
  call void @llvm.dbg.declare(metadata i32* %num_msi, metadata !7367, metadata !DIExpression()), !dbg !7368
  store i32 0, i32* %num_msi, align 4, !dbg !7368
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7369, metadata !DIExpression()), !dbg !7370
  store i32 0, i32* %count, align 4, !dbg !7370
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7371, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7373, metadata !DIExpression()), !dbg !7376
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7376
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !7376
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 14, !dbg !7376
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list, i32 0, i32 0, !dbg !7376
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7376
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !7376
  store i8* %2, i8** %__mptr, align 8, !dbg !7376
  br label %do.body, !dbg !7376

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7377

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !7376
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !7376
  %4 = bitcast i8* %add.ptr to %struct.msi_desc*, !dbg !7376
  store %struct.msi_desc* %4, %struct.msi_desc** %tmp, align 8, !dbg !7377
  %5 = load %struct.msi_desc*, %struct.msi_desc** %tmp, align 8, !dbg !7376
  store %struct.msi_desc* %5, %struct.msi_desc** %entry1, align 8, !dbg !7379
  br label %for.cond, !dbg !7379

for.cond:                                         ; preds = %do.end8, %do.end
  %6 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7380
  %list = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %6, i32 0, i32 0, !dbg !7380
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7380
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !7380
  %msi_list3 = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 14, !dbg !7380
  %cmp = icmp eq %struct.list_head* %list, %msi_list3, !dbg !7380
  %lnot = xor i1 %cmp, true, !dbg !7380
  br i1 %lnot, label %for.body, label %for.end, !dbg !7379

for.body:                                         ; preds = %for.cond
  %8 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7382
  %nvec_used = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %8, i32 0, i32 2, !dbg !7383
  %9 = load i32, i32* %nvec_used, align 4, !dbg !7383
  %10 = load i32, i32* %num_msi, align 4, !dbg !7384
  %add = add i32 %10, %9, !dbg !7384
  store i32 %add, i32* %num_msi, align 4, !dbg !7384
  br label %for.inc, !dbg !7385

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !7386, metadata !DIExpression()), !dbg !7388
  %11 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7388
  %list5 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %11, i32 0, i32 0, !dbg !7388
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %list5, i32 0, i32 0, !dbg !7388
  %12 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !7388
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !7388
  store i8* %13, i8** %__mptr4, align 8, !dbg !7388
  br label %do.body7, !dbg !7388

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !7389

do.end8:                                          ; preds = %do.body7
  %14 = load i8*, i8** %__mptr4, align 8, !dbg !7388
  %add.ptr10 = getelementptr i8, i8* %14, i64 0, !dbg !7388
  %15 = bitcast i8* %add.ptr10 to %struct.msi_desc*, !dbg !7388
  store %struct.msi_desc* %15, %struct.msi_desc** %tmp9, align 8, !dbg !7389
  %16 = load %struct.msi_desc*, %struct.msi_desc** %tmp9, align 8, !dbg !7388
  store %struct.msi_desc* %16, %struct.msi_desc** %entry1, align 8, !dbg !7380
  br label %for.cond, !dbg !7380, !llvm.loop !7391

for.end:                                          ; preds = %for.cond
  %17 = load i32, i32* %num_msi, align 4, !dbg !7393
  %tobool = icmp ne i32 %17, 0, !dbg !7393
  br i1 %tobool, label %if.end, label %if.then, !dbg !7395

if.then:                                          ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !7396
  br label %return, !dbg !7396

if.end:                                           ; preds = %for.end
  %18 = load i32, i32* %num_msi, align 4, !dbg !7397
  %add11 = add i32 %18, 1, !dbg !7398
  %conv = sext i32 %add11 to i64, !dbg !7397
  %call = call i8* @kcalloc(i64 %conv, i64 8, i32 3264) #8, !dbg !7399
  %19 = bitcast i8* %call to %struct.attribute**, !dbg !7399
  store %struct.attribute** %19, %struct.attribute*** %msi_attrs, align 8, !dbg !7400
  %20 = load %struct.attribute**, %struct.attribute*** %msi_attrs, align 8, !dbg !7401
  %tobool12 = icmp ne %struct.attribute** %20, null, !dbg !7401
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !7403

if.then13:                                        ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !7404
  br label %return, !dbg !7404

if.end14:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr15, metadata !7405, metadata !DIExpression()), !dbg !7408
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7408
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 41, !dbg !7408
  %msi_list17 = getelementptr inbounds %struct.device, %struct.device* %dev16, i32 0, i32 14, !dbg !7408
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list17, i32 0, i32 0, !dbg !7408
  %22 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !7408
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !7408
  store i8* %23, i8** %__mptr15, align 8, !dbg !7408
  br label %do.body19, !dbg !7408

do.body19:                                        ; preds = %if.end14
  br label %do.end20, !dbg !7409

do.end20:                                         ; preds = %do.body19
  %24 = load i8*, i8** %__mptr15, align 8, !dbg !7408
  %add.ptr22 = getelementptr i8, i8* %24, i64 0, !dbg !7408
  %25 = bitcast i8* %add.ptr22 to %struct.msi_desc*, !dbg !7408
  store %struct.msi_desc* %25, %struct.msi_desc** %tmp21, align 8, !dbg !7409
  %26 = load %struct.msi_desc*, %struct.msi_desc** %tmp21, align 8, !dbg !7408
  store %struct.msi_desc* %26, %struct.msi_desc** %entry1, align 8, !dbg !7411
  br label %for.cond23, !dbg !7411

for.cond23:                                       ; preds = %do.end59, %do.end20
  %27 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7412
  %list24 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %27, i32 0, i32 0, !dbg !7412
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7412
  %dev25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 41, !dbg !7412
  %msi_list26 = getelementptr inbounds %struct.device, %struct.device* %dev25, i32 0, i32 14, !dbg !7412
  %cmp27 = icmp eq %struct.list_head* %list24, %msi_list26, !dbg !7412
  %lnot29 = xor i1 %cmp27, true, !dbg !7412
  br i1 %lnot29, label %for.body30, label %for.end62, !dbg !7411

for.body30:                                       ; preds = %for.cond23
  store i32 0, i32* %i, align 4, !dbg !7414
  br label %for.cond31, !dbg !7417

for.cond31:                                       ; preds = %for.inc51, %for.body30
  %29 = load i32, i32* %i, align 4, !dbg !7418
  %30 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7420
  %nvec_used32 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %30, i32 0, i32 2, !dbg !7421
  %31 = load i32, i32* %nvec_used32, align 4, !dbg !7421
  %cmp33 = icmp ult i32 %29, %31, !dbg !7422
  br i1 %cmp33, label %for.body35, label %for.end53, !dbg !7423

for.body35:                                       ; preds = %for.cond31
  %call36 = call i8* @kzalloc(i64 32, i32 3264) #8, !dbg !7424
  %32 = bitcast i8* %call36 to %struct.device_attribute*, !dbg !7424
  store %struct.device_attribute* %32, %struct.device_attribute** %msi_dev_attr, align 8, !dbg !7426
  %33 = load %struct.device_attribute*, %struct.device_attribute** %msi_dev_attr, align 8, !dbg !7427
  %tobool37 = icmp ne %struct.device_attribute* %33, null, !dbg !7427
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !7429

if.then38:                                        ; preds = %for.body35
  br label %error_attrs, !dbg !7430

if.end39:                                         ; preds = %for.body35
  %34 = load %struct.device_attribute*, %struct.device_attribute** %msi_dev_attr, align 8, !dbg !7431
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %34, i32 0, i32 0, !dbg !7432
  %35 = load %struct.attribute**, %struct.attribute*** %msi_attrs, align 8, !dbg !7433
  %36 = load i32, i32* %count, align 4, !dbg !7434
  %idxprom = sext i32 %36 to i64, !dbg !7433
  %arrayidx = getelementptr %struct.attribute*, %struct.attribute** %35, i64 %idxprom, !dbg !7433
  store %struct.attribute* %attr, %struct.attribute** %arrayidx, align 8, !dbg !7435
  br label %do.body40, !dbg !7436

do.body40:                                        ; preds = %if.end39
  br label %do.end41, !dbg !7437

do.end41:                                         ; preds = %do.body40
  %37 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7439
  %irq = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %37, i32 0, i32 1, !dbg !7440
  %38 = load i32, i32* %irq, align 8, !dbg !7440
  %39 = load i32, i32* %i, align 4, !dbg !7441
  %add42 = add i32 %38, %39, !dbg !7442
  %call43 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32 %add42) #8, !dbg !7443
  %40 = load %struct.device_attribute*, %struct.device_attribute** %msi_dev_attr, align 8, !dbg !7444
  %attr44 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %40, i32 0, i32 0, !dbg !7445
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr44, i32 0, i32 0, !dbg !7446
  store i8* %call43, i8** %name, align 8, !dbg !7447
  %41 = load %struct.device_attribute*, %struct.device_attribute** %msi_dev_attr, align 8, !dbg !7448
  %attr45 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %41, i32 0, i32 0, !dbg !7450
  %name46 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr45, i32 0, i32 0, !dbg !7451
  %42 = load i8*, i8** %name46, align 8, !dbg !7451
  %tobool47 = icmp ne i8* %42, null, !dbg !7448
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !7452

if.then48:                                        ; preds = %do.end41
  br label %error_attrs, !dbg !7453

if.end49:                                         ; preds = %do.end41
  %43 = load %struct.device_attribute*, %struct.device_attribute** %msi_dev_attr, align 8, !dbg !7454
  %attr50 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %43, i32 0, i32 0, !dbg !7455
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr50, i32 0, i32 1, !dbg !7456
  store i16 292, i16* %mode, align 8, !dbg !7457
  %44 = load %struct.device_attribute*, %struct.device_attribute** %msi_dev_attr, align 8, !dbg !7458
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %44, i32 0, i32 1, !dbg !7459
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @msi_mode_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !7460
  %45 = load i32, i32* %count, align 4, !dbg !7461
  %inc = add i32 %45, 1, !dbg !7461
  store i32 %inc, i32* %count, align 4, !dbg !7461
  br label %for.inc51, !dbg !7462

for.inc51:                                        ; preds = %if.end49
  %46 = load i32, i32* %i, align 4, !dbg !7463
  %inc52 = add i32 %46, 1, !dbg !7463
  store i32 %inc52, i32* %i, align 4, !dbg !7463
  br label %for.cond31, !dbg !7464, !llvm.loop !7465

for.end53:                                        ; preds = %for.cond31
  br label %for.inc54, !dbg !7467

for.inc54:                                        ; preds = %for.end53
  call void @llvm.dbg.declare(metadata i8** %__mptr55, metadata !7468, metadata !DIExpression()), !dbg !7470
  %47 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7470
  %list56 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %47, i32 0, i32 0, !dbg !7470
  %next57 = getelementptr inbounds %struct.list_head, %struct.list_head* %list56, i32 0, i32 0, !dbg !7470
  %48 = load %struct.list_head*, %struct.list_head** %next57, align 8, !dbg !7470
  %49 = bitcast %struct.list_head* %48 to i8*, !dbg !7470
  store i8* %49, i8** %__mptr55, align 8, !dbg !7470
  br label %do.body58, !dbg !7470

do.body58:                                        ; preds = %for.inc54
  br label %do.end59, !dbg !7471

do.end59:                                         ; preds = %do.body58
  %50 = load i8*, i8** %__mptr55, align 8, !dbg !7470
  %add.ptr61 = getelementptr i8, i8* %50, i64 0, !dbg !7470
  %51 = bitcast i8* %add.ptr61 to %struct.msi_desc*, !dbg !7470
  store %struct.msi_desc* %51, %struct.msi_desc** %tmp60, align 8, !dbg !7471
  %52 = load %struct.msi_desc*, %struct.msi_desc** %tmp60, align 8, !dbg !7470
  store %struct.msi_desc* %52, %struct.msi_desc** %entry1, align 8, !dbg !7412
  br label %for.cond23, !dbg !7412, !llvm.loop !7473

for.end62:                                        ; preds = %for.cond23
  %call63 = call i8* @kzalloc(i64 40, i32 3264) #8, !dbg !7475
  %53 = bitcast i8* %call63 to %struct.attribute_group*, !dbg !7475
  store %struct.attribute_group* %53, %struct.attribute_group** %msi_irq_group, align 8, !dbg !7476
  %54 = load %struct.attribute_group*, %struct.attribute_group** %msi_irq_group, align 8, !dbg !7477
  %tobool64 = icmp ne %struct.attribute_group* %54, null, !dbg !7477
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !7479

if.then65:                                        ; preds = %for.end62
  br label %error_attrs, !dbg !7480

if.end66:                                         ; preds = %for.end62
  %55 = load %struct.attribute_group*, %struct.attribute_group** %msi_irq_group, align 8, !dbg !7481
  %name67 = getelementptr inbounds %struct.attribute_group, %struct.attribute_group* %55, i32 0, i32 0, !dbg !7482
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i8** %name67, align 8, !dbg !7483
  %56 = load %struct.attribute**, %struct.attribute*** %msi_attrs, align 8, !dbg !7484
  %57 = load %struct.attribute_group*, %struct.attribute_group** %msi_irq_group, align 8, !dbg !7485
  %attrs = getelementptr inbounds %struct.attribute_group, %struct.attribute_group* %57, i32 0, i32 3, !dbg !7486
  store %struct.attribute** %56, %struct.attribute*** %attrs, align 8, !dbg !7487
  %call68 = call i8* @kcalloc(i64 2, i64 8, i32 3264) #8, !dbg !7488
  %58 = bitcast i8* %call68 to %struct.attribute_group**, !dbg !7488
  store %struct.attribute_group** %58, %struct.attribute_group*** %msi_irq_groups, align 8, !dbg !7489
  %59 = load %struct.attribute_group**, %struct.attribute_group*** %msi_irq_groups, align 8, !dbg !7490
  %tobool69 = icmp ne %struct.attribute_group** %59, null, !dbg !7490
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !7492

if.then70:                                        ; preds = %if.end66
  br label %error_irq_group, !dbg !7493

if.end71:                                         ; preds = %if.end66
  %60 = load %struct.attribute_group*, %struct.attribute_group** %msi_irq_group, align 8, !dbg !7494
  %61 = load %struct.attribute_group**, %struct.attribute_group*** %msi_irq_groups, align 8, !dbg !7495
  %arrayidx72 = getelementptr %struct.attribute_group*, %struct.attribute_group** %61, i64 0, !dbg !7495
  store %struct.attribute_group* %60, %struct.attribute_group** %arrayidx72, align 8, !dbg !7496
  %62 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7497
  %dev73 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %62, i32 0, i32 41, !dbg !7498
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev73, i32 0, i32 0, !dbg !7499
  %63 = load %struct.attribute_group**, %struct.attribute_group*** %msi_irq_groups, align 8, !dbg !7500
  %call74 = call i32 @sysfs_create_groups(%struct.kobject* %kobj, %struct.attribute_group** %63) #8, !dbg !7501
  store i32 %call74, i32* %ret, align 4, !dbg !7502
  %64 = load i32, i32* %ret, align 4, !dbg !7503
  %tobool75 = icmp ne i32 %64, 0, !dbg !7503
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !7505

if.then76:                                        ; preds = %if.end71
  br label %error_irq_groups, !dbg !7506

if.end77:                                         ; preds = %if.end71
  %65 = load %struct.attribute_group**, %struct.attribute_group*** %msi_irq_groups, align 8, !dbg !7507
  %66 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7508
  %msi_irq_groups78 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %66, i32 0, i32 57, !dbg !7509
  store %struct.attribute_group** %65, %struct.attribute_group*** %msi_irq_groups78, align 8, !dbg !7510
  store i32 0, i32* %retval, align 4, !dbg !7511
  br label %return, !dbg !7511

error_irq_groups:                                 ; preds = %if.then76
  call void @llvm.dbg.label(metadata !7512), !dbg !7513
  %67 = load %struct.attribute_group**, %struct.attribute_group*** %msi_irq_groups, align 8, !dbg !7514
  %68 = bitcast %struct.attribute_group** %67 to i8*, !dbg !7514
  call void @kfree(i8* %68) #8, !dbg !7515
  br label %error_irq_group, !dbg !7515

error_irq_group:                                  ; preds = %error_irq_groups, %if.then70
  call void @llvm.dbg.label(metadata !7516), !dbg !7517
  %69 = load %struct.attribute_group*, %struct.attribute_group** %msi_irq_group, align 8, !dbg !7518
  %70 = bitcast %struct.attribute_group* %69 to i8*, !dbg !7518
  call void @kfree(i8* %70) #8, !dbg !7519
  br label %error_attrs, !dbg !7519

error_attrs:                                      ; preds = %error_irq_group, %if.then65, %if.then48, %if.then38
  call void @llvm.dbg.label(metadata !7520), !dbg !7521
  store i32 0, i32* %count, align 4, !dbg !7522
  %71 = load %struct.attribute**, %struct.attribute*** %msi_attrs, align 8, !dbg !7523
  %72 = load i32, i32* %count, align 4, !dbg !7524
  %idxprom79 = sext i32 %72 to i64, !dbg !7523
  %arrayidx80 = getelementptr %struct.attribute*, %struct.attribute** %71, i64 %idxprom79, !dbg !7523
  %73 = load %struct.attribute*, %struct.attribute** %arrayidx80, align 8, !dbg !7523
  store %struct.attribute* %73, %struct.attribute** %msi_attr, align 8, !dbg !7525
  br label %while.cond, !dbg !7526

while.cond:                                       ; preds = %do.end84, %error_attrs
  %74 = load %struct.attribute*, %struct.attribute** %msi_attr, align 8, !dbg !7527
  %tobool81 = icmp ne %struct.attribute* %74, null, !dbg !7526
  br i1 %tobool81, label %while.body, label %while.end, !dbg !7526

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr82, metadata !7528, metadata !DIExpression()), !dbg !7531
  %75 = load %struct.attribute*, %struct.attribute** %msi_attr, align 8, !dbg !7531
  %76 = bitcast %struct.attribute* %75 to i8*, !dbg !7531
  store i8* %76, i8** %__mptr82, align 8, !dbg !7531
  br label %do.body83, !dbg !7531

do.body83:                                        ; preds = %while.body
  br label %do.end84, !dbg !7532

do.end84:                                         ; preds = %do.body83
  %77 = load i8*, i8** %__mptr82, align 8, !dbg !7531
  %add.ptr86 = getelementptr i8, i8* %77, i64 0, !dbg !7531
  %78 = bitcast i8* %add.ptr86 to %struct.device_attribute*, !dbg !7531
  store %struct.device_attribute* %78, %struct.device_attribute** %tmp85, align 8, !dbg !7532
  %79 = load %struct.device_attribute*, %struct.device_attribute** %tmp85, align 8, !dbg !7531
  store %struct.device_attribute* %79, %struct.device_attribute** %msi_dev_attr, align 8, !dbg !7534
  %80 = load %struct.attribute*, %struct.attribute** %msi_attr, align 8, !dbg !7535
  %name87 = getelementptr inbounds %struct.attribute, %struct.attribute* %80, i32 0, i32 0, !dbg !7536
  %81 = load i8*, i8** %name87, align 8, !dbg !7536
  call void @kfree(i8* %81) #8, !dbg !7537
  %82 = load %struct.device_attribute*, %struct.device_attribute** %msi_dev_attr, align 8, !dbg !7538
  %83 = bitcast %struct.device_attribute* %82 to i8*, !dbg !7538
  call void @kfree(i8* %83) #8, !dbg !7539
  %84 = load i32, i32* %count, align 4, !dbg !7540
  %inc88 = add i32 %84, 1, !dbg !7540
  store i32 %inc88, i32* %count, align 4, !dbg !7540
  %85 = load %struct.attribute**, %struct.attribute*** %msi_attrs, align 8, !dbg !7541
  %86 = load i32, i32* %count, align 4, !dbg !7542
  %idxprom89 = sext i32 %86 to i64, !dbg !7541
  %arrayidx90 = getelementptr %struct.attribute*, %struct.attribute** %85, i64 %idxprom89, !dbg !7541
  %87 = load %struct.attribute*, %struct.attribute** %arrayidx90, align 8, !dbg !7541
  store %struct.attribute* %87, %struct.attribute** %msi_attr, align 8, !dbg !7543
  br label %while.cond, !dbg !7526, !llvm.loop !7544

while.end:                                        ; preds = %while.cond
  %88 = load %struct.attribute**, %struct.attribute*** %msi_attrs, align 8, !dbg !7546
  %89 = bitcast %struct.attribute** %88 to i8*, !dbg !7546
  call void @kfree(i8* %89) #8, !dbg !7547
  %90 = load i32, i32* %ret, align 4, !dbg !7548
  store i32 %90, i32* %retval, align 4, !dbg !7549
  br label %return, !dbg !7549

return:                                           ; preds = %while.end, %if.end77, %if.then13, %if.then
  %91 = load i32, i32* %retval, align 4, !dbg !7550
  ret i32 %91, !dbg !7550
}

; Function Attrs: noredzone
declare dso_local void @pcibios_free_irq(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local %struct.msi_desc* @alloc_msi_entry(%struct.device*, i32, %struct.irq_affinity_desc*) #2

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__roundup_pow_of_two(i64 %n) #4 !dbg !7551 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7555, metadata !DIExpression()), !dbg !7556
  %0 = load i64, i64* %n.addr, align 8, !dbg !7557
  %sub = sub i64 %0, 1, !dbg !7558
  %call = call i32 @fls_long(i64 %sub) #8, !dbg !7559
  %sh_prom = zext i32 %call to i64, !dbg !7560
  %shl = shl i64 1, %sh_prom, !dbg !7560
  ret i64 %shl, !dbg !7561
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #4 !dbg !7562 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7565, metadata !DIExpression()), !dbg !7570
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7572, metadata !DIExpression()), !dbg !7573
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7574, metadata !DIExpression()), !dbg !7575
  %0 = load i64, i64* %n.addr, align 8, !dbg !7576
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7573
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !7577
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !7578
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #12, !dbg !7577, !srcloc !7579
  store i32 %3, i32* %bitpos.i, align 4, !dbg !7577
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !7580
  %add.i = add i32 %4, 1, !dbg !7581
  %sub = sub i32 %add.i, 1, !dbg !7582
  ret i32 %sub, !dbg !7583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fls_long(i64 %l) #0 !dbg !7584 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7565, metadata !DIExpression()), !dbg !7588
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7572, metadata !DIExpression()), !dbg !7590
  %l.addr = alloca i64, align 8
  store i64 %l, i64* %l.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %l.addr, metadata !7591, metadata !DIExpression()), !dbg !7592
  %0 = load i64, i64* %l.addr, align 8, !dbg !7593
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7590
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !7594
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !7595
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #12, !dbg !7594, !srcloc !7579
  store i32 %3, i32* %bitpos.i, align 4, !dbg !7594
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !7596
  %add.i = add i32 %4, 1, !dbg !7597
  ret i32 %add.i, !dbg !7598
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7599 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7602, metadata !DIExpression()), !dbg !7603
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7604, metadata !DIExpression()), !dbg !7605
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7606, metadata !DIExpression()), !dbg !7607
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7608
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7610
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7611
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #8, !dbg !7612
  br i1 %call, label %if.end, label %if.then, !dbg !7613

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !7614

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7615
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7616
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !7617
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !7618
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7619
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7620
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !7621
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !7622
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7623
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7624
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !7625
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !7626
  br label %do.body, !dbg !7627

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !7628

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !7630

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !7628

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7632
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7632
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !7632
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !7632
  br label %do.end7, !dbg !7632

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !7628

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !7634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7635 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7638, metadata !DIExpression()), !dbg !7639
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7640, metadata !DIExpression()), !dbg !7641
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7642, metadata !DIExpression()), !dbg !7643
  ret i1 true, !dbg !7644
}

; Function Attrs: noredzone
declare dso_local i32 @msi_domain_alloc_irqs(%struct.irq_domain*, %struct.device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @arch_setup_msi_irqs(%struct.pci_dev* %dev, i32 %nvec, i32 %type) #0 !dbg !7645 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %nvec.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7646, metadata !DIExpression()), !dbg !7647
  store i32 %nvec, i32* %nvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nvec.addr, metadata !7648, metadata !DIExpression()), !dbg !7649
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7650, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7652, metadata !DIExpression()), !dbg !7654
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !7654
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !7655
  %tobool = icmp ne i32 %0, 0, !dbg !7655
  %lnot = xor i1 %tobool, true, !dbg !7655
  %lnot1 = xor i1 %lnot, true, !dbg !7655
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7655
  %conv = sext i32 %lnot.ext to i64, !dbg !7655
  %tobool2 = icmp ne i64 %conv, 0, !dbg !7655
  br i1 %tobool2, label %if.then, label %if.end, !dbg !7654

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7655

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !7657

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !7659

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !7657

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 213, i32 2307, i64 12) #9, !dbg !7661, !srcloc !7663
  br label %do.end5, !dbg !7661

do.end5:                                          ; preds = %do.body4
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 232) #9, !dbg !7664, !srcloc !7666
  br label %do.body6, !dbg !7657

do.body6:                                         ; preds = %do.end5
  br label %do.end7, !dbg !7667

do.end7:                                          ; preds = %do.body6
  br label %do.end8, !dbg !7657

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !7657

if.end:                                           ; preds = %do.end8, %entry
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !7654
  %tobool9 = icmp ne i32 %1, 0, !dbg !7654
  %lnot10 = xor i1 %tobool9, true, !dbg !7654
  %lnot12 = xor i1 %lnot10, true, !dbg !7654
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !7654
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !7654
  store i64 %conv14, i64* %tmp, align 8, !dbg !7655
  %2 = load i64, i64* %tmp, align 8, !dbg !7654
  ret i32 -19, !dbg !7669
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !7670 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7673, metadata !DIExpression()), !dbg !7674
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7675, metadata !DIExpression()), !dbg !7676
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7677, metadata !DIExpression()), !dbg !7678
  %0 = load i64, i64* %n.addr, align 8, !dbg !7679
  %1 = load i64, i64* %size.addr, align 8, !dbg !7680
  %2 = load i32, i32* %flags.addr, align 4, !dbg !7681
  %or = or i32 %2, 256, !dbg !7682
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #8, !dbg !7683
  ret i8* %call, !dbg !7684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !7685 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7688, metadata !DIExpression()), !dbg !7692
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7698, metadata !DIExpression()), !dbg !7699
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7700, metadata !DIExpression()), !dbg !7701
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7702, metadata !DIExpression()), !dbg !7703
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7704, metadata !DIExpression()), !dbg !7708
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7710, metadata !DIExpression()), !dbg !7714
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7716, metadata !DIExpression()), !dbg !7720
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7725, metadata !DIExpression()), !dbg !7726
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7727, metadata !DIExpression()), !dbg !7728
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7729, metadata !DIExpression()), !dbg !7730
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7731, metadata !DIExpression()), !dbg !7732
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7733, metadata !DIExpression()), !dbg !7734
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7735, metadata !DIExpression()), !dbg !7736
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7737, metadata !DIExpression()), !dbg !7738
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7739, metadata !DIExpression()), !dbg !7740
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7741, metadata !DIExpression()), !dbg !7742
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7743, metadata !DIExpression()), !dbg !7744
  %0 = load i64, i64* %size.addr, align 8, !dbg !7745
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7746
  %or = or i32 %1, 256, !dbg !7747
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7748
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #9, !dbg !7749
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !7750

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7751
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !7752
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7753

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !7754
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !7755
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7756
  %call.i.i = call i32 @get_order(i64 %7) #10, !dbg !7757
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7734
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7758
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7759
  %10 = load i32, i32* %order.i.i, align 4, !dbg !7760
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7761
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7762
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7763
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !7764
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7764
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7764
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7764
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !7764
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7765
  br label %kmalloc.exit, !dbg !7765

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !7766
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7767
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !7767
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7769

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7770
  br label %kmalloc_index.exit.i, !dbg !7770

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7771
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !7773
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7774

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7775
  br label %kmalloc_index.exit.i, !dbg !7775

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7776
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !7778
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7779

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7780
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !7781
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7782

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7783
  br label %kmalloc_index.exit.i, !dbg !7783

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7784
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !7786
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7787

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7788
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !7789
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7790

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7791
  br label %kmalloc_index.exit.i, !dbg !7791

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7792
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !7794
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7795

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7796
  br label %kmalloc_index.exit.i, !dbg !7796

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7797
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !7799
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7800

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7801
  br label %kmalloc_index.exit.i, !dbg !7801

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7802
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !7804
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7805

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7806
  br label %kmalloc_index.exit.i, !dbg !7806

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7807
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !7809
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7810

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7811
  br label %kmalloc_index.exit.i, !dbg !7811

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7812
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !7814
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7815

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7816
  br label %kmalloc_index.exit.i, !dbg !7816

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7817
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !7819
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7820

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7821
  br label %kmalloc_index.exit.i, !dbg !7821

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7822
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !7824
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7825

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7826
  br label %kmalloc_index.exit.i, !dbg !7826

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7827
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !7829
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7830

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7831
  br label %kmalloc_index.exit.i, !dbg !7831

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7832
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !7834
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7835

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7836
  br label %kmalloc_index.exit.i, !dbg !7836

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7837
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !7839
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7840

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7841
  br label %kmalloc_index.exit.i, !dbg !7841

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7842
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !7844
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7845

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7846
  br label %kmalloc_index.exit.i, !dbg !7846

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7847
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !7849
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7850

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7851
  br label %kmalloc_index.exit.i, !dbg !7851

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7852
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !7854
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7855

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7856
  br label %kmalloc_index.exit.i, !dbg !7856

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7857
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !7859
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7860

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7861
  br label %kmalloc_index.exit.i, !dbg !7861

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7862
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !7864
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7865

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7866
  br label %kmalloc_index.exit.i, !dbg !7866

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7867
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !7869
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7870

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7871
  br label %kmalloc_index.exit.i, !dbg !7871

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7872
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !7874
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7875

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7876
  br label %kmalloc_index.exit.i, !dbg !7876

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7877
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !7879
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7880

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7881
  br label %kmalloc_index.exit.i, !dbg !7881

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7882
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !7884
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7885

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7886
  br label %kmalloc_index.exit.i, !dbg !7886

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7887
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !7889
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7890

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7891
  br label %kmalloc_index.exit.i, !dbg !7891

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7892
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !7894
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7895

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7896
  br label %kmalloc_index.exit.i, !dbg !7896

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7897
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !7899
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7900

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7901
  br label %kmalloc_index.exit.i, !dbg !7901

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7902
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !7904
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7905

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7906
  br label %kmalloc_index.exit.i, !dbg !7906

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7907
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !7909
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7910

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7911
  br label %kmalloc_index.exit.i, !dbg !7911

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !7912, !srcloc !7915
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 214) #9, !dbg !7916, !srcloc !7919
  unreachable, !dbg !7920

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !7921
  store i32 %45, i32* %index.i, align 4, !dbg !7922
  %46 = load i32, i32* %index.i, align 4, !dbg !7923
  %tobool.i = icmp ne i32 %46, 0, !dbg !7923
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7925

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7926
  br label %kmalloc.exit, !dbg !7926

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !7927
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7928
  %and.i.i = and i32 %48, 17, !dbg !7928
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7928
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7928
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7928
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7928
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7930

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7931
  br label %kmalloc_type.exit.i, !dbg !7931

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7932
  %and2.i.i = and i32 %49, 1, !dbg !7933
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7932
  %50 = zext i1 %tobool3.i.i to i64, !dbg !7932
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7932
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7934
  br label %kmalloc_type.exit.i, !dbg !7934

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !7935
  %idxprom.i = zext i32 %51 to i64, !dbg !7936
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7936
  %52 = load i32, i32* %index.i, align 4, !dbg !7937
  %idxprom6.i = zext i32 %52 to i64, !dbg !7936
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7936
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7936
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !7938
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !7939
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7940
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7941
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !7942
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7942
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7942
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7942
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !7942
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7703
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7943
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !7944
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7945
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7946
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !7947
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7948
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !7949
  store i8* %62, i8** %retval.i, align 8, !dbg !7950
  br label %kmalloc.exit, !dbg !7950

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !7951
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !7952
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !7953
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7953
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7953
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7953
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !7953
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7954
  br label %kmalloc.exit, !dbg !7954

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !7955
  ret i8* %65, !dbg !7956
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kasprintf(i32, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @msi_mode_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !7957 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %entry1 = alloca %struct.msi_desc*, align 8
  %irq = alloca i64, align 8
  %retval2 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7958, metadata !DIExpression()), !dbg !7959
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7960, metadata !DIExpression()), !dbg !7961
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7962, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !7964, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.declare(metadata i64* %irq, metadata !7966, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !7968, metadata !DIExpression()), !dbg !7969
  %0 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !7970
  %attr3 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %0, i32 0, i32 0, !dbg !7971
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr3, i32 0, i32 0, !dbg !7972
  %1 = load i8*, i8** %name, align 8, !dbg !7972
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %irq) #8, !dbg !7973
  store i32 %call, i32* %retval2, align 4, !dbg !7974
  %2 = load i32, i32* %retval2, align 4, !dbg !7975
  %tobool = icmp ne i32 %2, 0, !dbg !7975
  br i1 %tobool, label %if.then, label %if.end, !dbg !7977

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %retval2, align 4, !dbg !7978
  %conv = sext i32 %3 to i64, !dbg !7978
  store i64 %conv, i64* %retval, align 8, !dbg !7979
  br label %return, !dbg !7979

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %irq, align 8, !dbg !7980
  %conv4 = trunc i64 %4 to i32, !dbg !7980
  %call5 = call %struct.msi_desc* @irq_get_msi_desc(i32 %conv4) #8, !dbg !7981
  store %struct.msi_desc* %call5, %struct.msi_desc** %entry1, align 8, !dbg !7982
  %5 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7983
  %tobool6 = icmp ne %struct.msi_desc* %5, null, !dbg !7983
  br i1 %tobool6, label %if.then7, label %if.end12, !dbg !7985

if.then7:                                         ; preds = %if.end
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !7986
  %7 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !7987
  %8 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %7, i32 0, i32 8, !dbg !7988
  %9 = bitcast %union.anon.65* %8 to %struct.anon.66*, !dbg !7988
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %9, i32 0, i32 1, !dbg !7988
  %10 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !7989
  %bf.load = load i16, i16* %10, align 4, !dbg !7989
  %bf.clear = and i16 %bf.load, 1, !dbg !7989
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !7989
  %conv8 = zext i8 %bf.cast to i32, !dbg !7987
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !7987
  %11 = zext i1 %tobool9 to i64, !dbg !7987
  %cond = select i1 %tobool9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), !dbg !7987
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8* %cond) #8, !dbg !7990
  %conv11 = sext i32 %call10 to i64, !dbg !7990
  store i64 %conv11, i64* %retval, align 8, !dbg !7991
  br label %return, !dbg !7991

if.end12:                                         ; preds = %if.end
  store i64 -19, i64* %retval, align 8, !dbg !7992
  br label %return, !dbg !7992

return:                                           ; preds = %if.end12, %if.then7, %if.then
  %12 = load i64, i64* %retval, align 8, !dbg !7993
  ret i64 %12, !dbg !7993
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_groups(%struct.kobject*, %struct.attribute_group**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !7994 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7688, metadata !DIExpression()), !dbg !7995
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7698, metadata !DIExpression()), !dbg !7999
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7700, metadata !DIExpression()), !dbg !8000
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7702, metadata !DIExpression()), !dbg !8001
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7704, metadata !DIExpression()), !dbg !8002
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7710, metadata !DIExpression()), !dbg !8004
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7716, metadata !DIExpression()), !dbg !8006
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7725, metadata !DIExpression()), !dbg !8009
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7727, metadata !DIExpression()), !dbg !8010
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7729, metadata !DIExpression()), !dbg !8011
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7731, metadata !DIExpression()), !dbg !8012
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7733, metadata !DIExpression()), !dbg !8013
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7735, metadata !DIExpression()), !dbg !8014
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7737, metadata !DIExpression()), !dbg !8015
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7739, metadata !DIExpression()), !dbg !8016
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8017, metadata !DIExpression()), !dbg !8018
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8019, metadata !DIExpression()), !dbg !8020
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8021, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !8023, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !8025, metadata !DIExpression()), !dbg !8028
  %0 = load i64, i64* %n.addr, align 8, !dbg !8028
  store i64 %0, i64* %__a, align 8, !dbg !8028
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !8029, metadata !DIExpression()), !dbg !8028
  %1 = load i64, i64* %size.addr, align 8, !dbg !8028
  store i64 %1, i64* %__b, align 8, !dbg !8028
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !8030, metadata !DIExpression()), !dbg !8028
  store i64* %bytes, i64** %__d, align 8, !dbg !8028
  %cmp = icmp eq i64* %__a, %__b, !dbg !8028
  %conv = zext i1 %cmp to i32, !dbg !8028
  %2 = load i64*, i64** %__d, align 8, !dbg !8028
  %cmp1 = icmp eq i64* %__a, %2, !dbg !8028
  %conv2 = zext i1 %cmp1 to i32, !dbg !8028
  %3 = load i64, i64* %__a, align 8, !dbg !8028
  %4 = load i64, i64* %__b, align 8, !dbg !8028
  %5 = load i64*, i64** %__d, align 8, !dbg !8028
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !8028
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !8028
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !8028
  store i64 %8, i64* %5, align 8, !dbg !8028
  %frombool = zext i1 %7 to i8, !dbg !8028
  store i8 %frombool, i8* %tmp, align 1, !dbg !8028
  %9 = load i8, i8* %tmp, align 1, !dbg !8028
  %tobool = trunc i8 %9 to i1, !dbg !8028
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #8, !dbg !8032
  %lnot = xor i1 %call, true, !dbg !8032
  %lnot3 = xor i1 %lnot, true, !dbg !8032
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !8032
  %conv4 = sext i32 %lnot.ext to i64, !dbg !8032
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !8032
  br i1 %tobool5, label %if.then, label %if.end, !dbg !8033

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !8034
  br label %return, !dbg !8034

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !8035
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !8036
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !8037

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !8038
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !8039
  br i1 %13, label %if.then6, label %if.end8, !dbg !8040

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !8041
  %15 = load i32, i32* %flags.addr, align 4, !dbg !8042
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !8043
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #9, !dbg !8044
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !8045

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !8046
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !8047
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8048

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !8049
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !8050
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !8051
  %call.i.i = call i32 @get_order(i64 %21) #10, !dbg !8052
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8013
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !8053
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8054
  %24 = load i32, i32* %order.i.i, align 4, !dbg !8055
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8056
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8057
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8058
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #13, !dbg !8059
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8059
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8059
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8059
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !8059
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8060
  br label %kmalloc.exit, !dbg !8060

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !8061
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8062
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !8062
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8063

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8064
  br label %kmalloc_index.exit.i, !dbg !8064

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8065
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !8066
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8067

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8068
  br label %kmalloc_index.exit.i, !dbg !8068

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8069
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !8070
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8071

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8072
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !8073
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8074

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8075
  br label %kmalloc_index.exit.i, !dbg !8075

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8076
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !8077
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8078

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8079
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !8080
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8081

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8082
  br label %kmalloc_index.exit.i, !dbg !8082

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8083
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !8084
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8085

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8086
  br label %kmalloc_index.exit.i, !dbg !8086

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8087
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !8088
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8089

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8090
  br label %kmalloc_index.exit.i, !dbg !8090

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8091
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !8092
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8093

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8094
  br label %kmalloc_index.exit.i, !dbg !8094

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8095
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !8096
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8097

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8098
  br label %kmalloc_index.exit.i, !dbg !8098

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8099
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !8100
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8101

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8102
  br label %kmalloc_index.exit.i, !dbg !8102

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8103
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !8104
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8105

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8106
  br label %kmalloc_index.exit.i, !dbg !8106

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8107
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !8108
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8109

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8110
  br label %kmalloc_index.exit.i, !dbg !8110

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8111
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !8112
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8113

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8114
  br label %kmalloc_index.exit.i, !dbg !8114

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8115
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !8116
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8117

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8118
  br label %kmalloc_index.exit.i, !dbg !8118

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8119
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !8120
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8121

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8122
  br label %kmalloc_index.exit.i, !dbg !8122

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8123
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !8124
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8125

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8126
  br label %kmalloc_index.exit.i, !dbg !8126

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8127
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !8128
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8129

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8130
  br label %kmalloc_index.exit.i, !dbg !8130

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8131
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !8132
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8133

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8134
  br label %kmalloc_index.exit.i, !dbg !8134

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8135
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !8136
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8137

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8138
  br label %kmalloc_index.exit.i, !dbg !8138

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8139
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !8140
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8141

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8142
  br label %kmalloc_index.exit.i, !dbg !8142

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8143
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !8144
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8145

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8146
  br label %kmalloc_index.exit.i, !dbg !8146

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8147
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !8148
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8149

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8150
  br label %kmalloc_index.exit.i, !dbg !8150

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8151
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !8152
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8153

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8154
  br label %kmalloc_index.exit.i, !dbg !8154

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8155
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !8156
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8157

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8158
  br label %kmalloc_index.exit.i, !dbg !8158

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8159
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !8160
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8161

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8162
  br label %kmalloc_index.exit.i, !dbg !8162

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8163
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !8164
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8165

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8166
  br label %kmalloc_index.exit.i, !dbg !8166

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8167
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !8168
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8169

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8170
  br label %kmalloc_index.exit.i, !dbg !8170

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8171
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !8172
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8173

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8174
  br label %kmalloc_index.exit.i, !dbg !8174

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8175
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !8176
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8177

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8178
  br label %kmalloc_index.exit.i, !dbg !8178

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !8179, !srcloc !7915
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 214) #9, !dbg !8180, !srcloc !7919
  unreachable, !dbg !8181

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !8182
  store i32 %59, i32* %index.i, align 4, !dbg !8183
  %60 = load i32, i32* %index.i, align 4, !dbg !8184
  %tobool.i = icmp ne i32 %60, 0, !dbg !8184
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8185

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8186
  br label %kmalloc.exit, !dbg !8186

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !8187
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8188
  %and.i.i = and i32 %62, 17, !dbg !8188
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8188
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8188
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8188
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8188
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8189

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8190
  br label %kmalloc_type.exit.i, !dbg !8190

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8191
  %and2.i.i = and i32 %63, 1, !dbg !8192
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8191
  %64 = zext i1 %tobool3.i.i to i64, !dbg !8191
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8191
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8193
  br label %kmalloc_type.exit.i, !dbg !8193

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !8194
  %idxprom.i = zext i32 %65 to i64, !dbg !8195
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8195
  %66 = load i32, i32* %index.i, align 4, !dbg !8196
  %idxprom6.i = zext i32 %66 to i64, !dbg !8195
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8195
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8195
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !8197
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !8198
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8199
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8200
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #13, !dbg !8201
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8201
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8201
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8201
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !8201
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8001
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8202
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !8203
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8204
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8205
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #13, !dbg !8206
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8207
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !8208
  store i8* %76, i8** %retval.i, align 8, !dbg !8209
  br label %kmalloc.exit, !dbg !8209

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !8210
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !8211
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #13, !dbg !8212
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8212
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8212
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8212
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !8212
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8213
  br label %kmalloc.exit, !dbg !8213

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !8214
  store i8* %79, i8** %retval, align 8, !dbg !8215
  br label %return, !dbg !8215

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !8216
  %81 = load i32, i32* %flags.addr, align 4, !dbg !8217
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #8, !dbg !8218
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !8218
  %maskedptr = and i64 %ptrint, 7, !dbg !8218
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !8218
  call void @llvm.assume(i1 %maskcond), !dbg !8218
  store i8* %call9, i8** %retval, align 8, !dbg !8219
  br label %return, !dbg !8219

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !8220
  ret i8* %82, !dbg !8220
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !8221 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !8225, metadata !DIExpression()), !dbg !8226
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !8227
  %tobool = trunc i8 %0 to i1, !dbg !8227
  %lnot = xor i1 %tobool, true, !dbg !8227
  %lnot1 = xor i1 %lnot, true, !dbg !8227
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8227
  %conv = sext i32 %lnot.ext to i64, !dbg !8227
  %tobool2 = icmp ne i64 %conv, 0, !dbg !8227
  ret i1 %tobool2, !dbg !8228
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #4 !dbg !8229 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7565, metadata !DIExpression()), !dbg !8233
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7572, metadata !DIExpression()), !dbg !8235
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8236, metadata !DIExpression()), !dbg !8237
  %0 = load i64, i64* %size.addr, align 8, !dbg !8238
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !8240
  br i1 %1, label %if.then, label %if.end447, !dbg !8241

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8242
  %tobool = icmp ne i64 %2, 0, !dbg !8242
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8245

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !8246
  br label %return, !dbg !8246

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !8247
  %cmp = icmp ult i64 %3, 4096, !dbg !8249
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8250

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8251
  br label %return, !dbg !8251

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub = sub i64 %4, 1, !dbg !8252
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !8252
  br i1 %5, label %cond.true, label %cond.false442, !dbg !8252

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub4 = sub i64 %6, 1, !dbg !8252
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !8252
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !8252

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub6 = sub i64 %8, 1, !dbg !8252
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !8252
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !8252

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !8252

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub9 = sub i64 %9, 1, !dbg !8252
  %and = and i64 %sub9, -9223372036854775808, !dbg !8252
  %tobool10 = icmp ne i64 %and, 0, !dbg !8252
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !8252

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !8252

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub13 = sub i64 %10, 1, !dbg !8252
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !8252
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8252
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !8252

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !8252

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub18 = sub i64 %11, 1, !dbg !8252
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !8252
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8252
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8252

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !8252

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub23 = sub i64 %12, 1, !dbg !8252
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !8252
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8252
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8252

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !8252

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub28 = sub i64 %13, 1, !dbg !8252
  %and29 = and i64 %sub28, 576460752303423488, !dbg !8252
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8252
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !8252

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !8252

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub33 = sub i64 %14, 1, !dbg !8252
  %and34 = and i64 %sub33, 288230376151711744, !dbg !8252
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8252
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !8252

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !8252

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub38 = sub i64 %15, 1, !dbg !8252
  %and39 = and i64 %sub38, 144115188075855872, !dbg !8252
  %tobool40 = icmp ne i64 %and39, 0, !dbg !8252
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !8252

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !8252

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub43 = sub i64 %16, 1, !dbg !8252
  %and44 = and i64 %sub43, 72057594037927936, !dbg !8252
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8252
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !8252

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !8252

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub48 = sub i64 %17, 1, !dbg !8252
  %and49 = and i64 %sub48, 36028797018963968, !dbg !8252
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8252
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !8252

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !8252

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub53 = sub i64 %18, 1, !dbg !8252
  %and54 = and i64 %sub53, 18014398509481984, !dbg !8252
  %tobool55 = icmp ne i64 %and54, 0, !dbg !8252
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8252

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !8252

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub58 = sub i64 %19, 1, !dbg !8252
  %and59 = and i64 %sub58, 9007199254740992, !dbg !8252
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8252
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8252

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !8252

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub63 = sub i64 %20, 1, !dbg !8252
  %and64 = and i64 %sub63, 4503599627370496, !dbg !8252
  %tobool65 = icmp ne i64 %and64, 0, !dbg !8252
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !8252

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !8252

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub68 = sub i64 %21, 1, !dbg !8252
  %and69 = and i64 %sub68, 2251799813685248, !dbg !8252
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8252
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !8252

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !8252

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub73 = sub i64 %22, 1, !dbg !8252
  %and74 = and i64 %sub73, 1125899906842624, !dbg !8252
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8252
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !8252

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !8252

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub78 = sub i64 %23, 1, !dbg !8252
  %and79 = and i64 %sub78, 562949953421312, !dbg !8252
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8252
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8252

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !8252

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub83 = sub i64 %24, 1, !dbg !8252
  %and84 = and i64 %sub83, 281474976710656, !dbg !8252
  %tobool85 = icmp ne i64 %and84, 0, !dbg !8252
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !8252

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !8252

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub88 = sub i64 %25, 1, !dbg !8252
  %and89 = and i64 %sub88, 140737488355328, !dbg !8252
  %tobool90 = icmp ne i64 %and89, 0, !dbg !8252
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !8252

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !8252

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub93 = sub i64 %26, 1, !dbg !8252
  %and94 = and i64 %sub93, 70368744177664, !dbg !8252
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8252
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !8252

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !8252

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub98 = sub i64 %27, 1, !dbg !8252
  %and99 = and i64 %sub98, 35184372088832, !dbg !8252
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8252
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8252

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !8252

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub103 = sub i64 %28, 1, !dbg !8252
  %and104 = and i64 %sub103, 17592186044416, !dbg !8252
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8252
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !8252

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !8252

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub108 = sub i64 %29, 1, !dbg !8252
  %and109 = and i64 %sub108, 8796093022208, !dbg !8252
  %tobool110 = icmp ne i64 %and109, 0, !dbg !8252
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !8252

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !8252

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub113 = sub i64 %30, 1, !dbg !8252
  %and114 = and i64 %sub113, 4398046511104, !dbg !8252
  %tobool115 = icmp ne i64 %and114, 0, !dbg !8252
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !8252

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !8252

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub118 = sub i64 %31, 1, !dbg !8252
  %and119 = and i64 %sub118, 2199023255552, !dbg !8252
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8252
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8252

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !8252

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub123 = sub i64 %32, 1, !dbg !8252
  %and124 = and i64 %sub123, 1099511627776, !dbg !8252
  %tobool125 = icmp ne i64 %and124, 0, !dbg !8252
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !8252

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !8252

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub128 = sub i64 %33, 1, !dbg !8252
  %and129 = and i64 %sub128, 549755813888, !dbg !8252
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8252
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !8252

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !8252

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub133 = sub i64 %34, 1, !dbg !8252
  %and134 = and i64 %sub133, 274877906944, !dbg !8252
  %tobool135 = icmp ne i64 %and134, 0, !dbg !8252
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !8252

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !8252

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub138 = sub i64 %35, 1, !dbg !8252
  %and139 = and i64 %sub138, 137438953472, !dbg !8252
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8252
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8252

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !8252

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub143 = sub i64 %36, 1, !dbg !8252
  %and144 = and i64 %sub143, 68719476736, !dbg !8252
  %tobool145 = icmp ne i64 %and144, 0, !dbg !8252
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !8252

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !8252

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub148 = sub i64 %37, 1, !dbg !8252
  %and149 = and i64 %sub148, 34359738368, !dbg !8252
  %tobool150 = icmp ne i64 %and149, 0, !dbg !8252
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !8252

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !8252

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub153 = sub i64 %38, 1, !dbg !8252
  %and154 = and i64 %sub153, 17179869184, !dbg !8252
  %tobool155 = icmp ne i64 %and154, 0, !dbg !8252
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !8252

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !8252

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub158 = sub i64 %39, 1, !dbg !8252
  %and159 = and i64 %sub158, 8589934592, !dbg !8252
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8252
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8252

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !8252

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub163 = sub i64 %40, 1, !dbg !8252
  %and164 = and i64 %sub163, 4294967296, !dbg !8252
  %tobool165 = icmp ne i64 %and164, 0, !dbg !8252
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !8252

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !8252

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub168 = sub i64 %41, 1, !dbg !8252
  %and169 = and i64 %sub168, 2147483648, !dbg !8252
  %tobool170 = icmp ne i64 %and169, 0, !dbg !8252
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !8252

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !8252

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub173 = sub i64 %42, 1, !dbg !8252
  %and174 = and i64 %sub173, 1073741824, !dbg !8252
  %tobool175 = icmp ne i64 %and174, 0, !dbg !8252
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !8252

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !8252

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub178 = sub i64 %43, 1, !dbg !8252
  %and179 = and i64 %sub178, 536870912, !dbg !8252
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8252
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8252

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !8252

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub183 = sub i64 %44, 1, !dbg !8252
  %and184 = and i64 %sub183, 268435456, !dbg !8252
  %tobool185 = icmp ne i64 %and184, 0, !dbg !8252
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !8252

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !8252

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub188 = sub i64 %45, 1, !dbg !8252
  %and189 = and i64 %sub188, 134217728, !dbg !8252
  %tobool190 = icmp ne i64 %and189, 0, !dbg !8252
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !8252

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !8252

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub193 = sub i64 %46, 1, !dbg !8252
  %and194 = and i64 %sub193, 67108864, !dbg !8252
  %tobool195 = icmp ne i64 %and194, 0, !dbg !8252
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !8252

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !8252

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub198 = sub i64 %47, 1, !dbg !8252
  %and199 = and i64 %sub198, 33554432, !dbg !8252
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8252
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8252

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !8252

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub203 = sub i64 %48, 1, !dbg !8252
  %and204 = and i64 %sub203, 16777216, !dbg !8252
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8252
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !8252

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !8252

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub208 = sub i64 %49, 1, !dbg !8252
  %and209 = and i64 %sub208, 8388608, !dbg !8252
  %tobool210 = icmp ne i64 %and209, 0, !dbg !8252
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !8252

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !8252

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub213 = sub i64 %50, 1, !dbg !8252
  %and214 = and i64 %sub213, 4194304, !dbg !8252
  %tobool215 = icmp ne i64 %and214, 0, !dbg !8252
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !8252

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !8252

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub218 = sub i64 %51, 1, !dbg !8252
  %and219 = and i64 %sub218, 2097152, !dbg !8252
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8252
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8252

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !8252

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub223 = sub i64 %52, 1, !dbg !8252
  %and224 = and i64 %sub223, 1048576, !dbg !8252
  %tobool225 = icmp ne i64 %and224, 0, !dbg !8252
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !8252

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !8252

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub228 = sub i64 %53, 1, !dbg !8252
  %and229 = and i64 %sub228, 524288, !dbg !8252
  %tobool230 = icmp ne i64 %and229, 0, !dbg !8252
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !8252

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !8252

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub233 = sub i64 %54, 1, !dbg !8252
  %and234 = and i64 %sub233, 262144, !dbg !8252
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8252
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !8252

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !8252

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub238 = sub i64 %55, 1, !dbg !8252
  %and239 = and i64 %sub238, 131072, !dbg !8252
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8252
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8252

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !8252

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub243 = sub i64 %56, 1, !dbg !8252
  %and244 = and i64 %sub243, 65536, !dbg !8252
  %tobool245 = icmp ne i64 %and244, 0, !dbg !8252
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !8252

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !8252

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub248 = sub i64 %57, 1, !dbg !8252
  %and249 = and i64 %sub248, 32768, !dbg !8252
  %tobool250 = icmp ne i64 %and249, 0, !dbg !8252
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !8252

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !8252

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub253 = sub i64 %58, 1, !dbg !8252
  %and254 = and i64 %sub253, 16384, !dbg !8252
  %tobool255 = icmp ne i64 %and254, 0, !dbg !8252
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !8252

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !8252

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub258 = sub i64 %59, 1, !dbg !8252
  %and259 = and i64 %sub258, 8192, !dbg !8252
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8252
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8252

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !8252

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub263 = sub i64 %60, 1, !dbg !8252
  %and264 = and i64 %sub263, 4096, !dbg !8252
  %tobool265 = icmp ne i64 %and264, 0, !dbg !8252
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !8252

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !8252

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub268 = sub i64 %61, 1, !dbg !8252
  %and269 = and i64 %sub268, 2048, !dbg !8252
  %tobool270 = icmp ne i64 %and269, 0, !dbg !8252
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !8252

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !8252

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub273 = sub i64 %62, 1, !dbg !8252
  %and274 = and i64 %sub273, 1024, !dbg !8252
  %tobool275 = icmp ne i64 %and274, 0, !dbg !8252
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !8252

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !8252

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub278 = sub i64 %63, 1, !dbg !8252
  %and279 = and i64 %sub278, 512, !dbg !8252
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8252
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8252

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !8252

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub283 = sub i64 %64, 1, !dbg !8252
  %and284 = and i64 %sub283, 256, !dbg !8252
  %tobool285 = icmp ne i64 %and284, 0, !dbg !8252
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !8252

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !8252

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub288 = sub i64 %65, 1, !dbg !8252
  %and289 = and i64 %sub288, 128, !dbg !8252
  %tobool290 = icmp ne i64 %and289, 0, !dbg !8252
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !8252

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !8252

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub293 = sub i64 %66, 1, !dbg !8252
  %and294 = and i64 %sub293, 64, !dbg !8252
  %tobool295 = icmp ne i64 %and294, 0, !dbg !8252
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !8252

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !8252

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub298 = sub i64 %67, 1, !dbg !8252
  %and299 = and i64 %sub298, 32, !dbg !8252
  %tobool300 = icmp ne i64 %and299, 0, !dbg !8252
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !8252

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !8252

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub303 = sub i64 %68, 1, !dbg !8252
  %and304 = and i64 %sub303, 16, !dbg !8252
  %tobool305 = icmp ne i64 %and304, 0, !dbg !8252
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !8252

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !8252

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub308 = sub i64 %69, 1, !dbg !8252
  %and309 = and i64 %sub308, 8, !dbg !8252
  %tobool310 = icmp ne i64 %and309, 0, !dbg !8252
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !8252

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !8252

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub313 = sub i64 %70, 1, !dbg !8252
  %and314 = and i64 %sub313, 4, !dbg !8252
  %tobool315 = icmp ne i64 %and314, 0, !dbg !8252
  %71 = zext i1 %tobool315 to i64, !dbg !8252
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !8252
  br label %cond.end, !dbg !8252

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !8252
  br label %cond.end317, !dbg !8252

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !8252
  br label %cond.end319, !dbg !8252

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !8252
  br label %cond.end321, !dbg !8252

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !8252
  br label %cond.end323, !dbg !8252

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !8252
  br label %cond.end325, !dbg !8252

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !8252
  br label %cond.end327, !dbg !8252

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !8252
  br label %cond.end329, !dbg !8252

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !8252
  br label %cond.end331, !dbg !8252

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !8252
  br label %cond.end333, !dbg !8252

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !8252
  br label %cond.end335, !dbg !8252

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !8252
  br label %cond.end337, !dbg !8252

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !8252
  br label %cond.end339, !dbg !8252

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !8252
  br label %cond.end341, !dbg !8252

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !8252
  br label %cond.end343, !dbg !8252

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !8252
  br label %cond.end345, !dbg !8252

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !8252
  br label %cond.end347, !dbg !8252

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !8252
  br label %cond.end349, !dbg !8252

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !8252
  br label %cond.end351, !dbg !8252

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !8252
  br label %cond.end353, !dbg !8252

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !8252
  br label %cond.end355, !dbg !8252

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !8252
  br label %cond.end357, !dbg !8252

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !8252
  br label %cond.end359, !dbg !8252

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !8252
  br label %cond.end361, !dbg !8252

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !8252
  br label %cond.end363, !dbg !8252

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !8252
  br label %cond.end365, !dbg !8252

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !8252
  br label %cond.end367, !dbg !8252

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !8252
  br label %cond.end369, !dbg !8252

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !8252
  br label %cond.end371, !dbg !8252

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !8252
  br label %cond.end373, !dbg !8252

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !8252
  br label %cond.end375, !dbg !8252

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !8252
  br label %cond.end377, !dbg !8252

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !8252
  br label %cond.end379, !dbg !8252

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !8252
  br label %cond.end381, !dbg !8252

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !8252
  br label %cond.end383, !dbg !8252

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !8252
  br label %cond.end385, !dbg !8252

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !8252
  br label %cond.end387, !dbg !8252

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !8252
  br label %cond.end389, !dbg !8252

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !8252
  br label %cond.end391, !dbg !8252

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !8252
  br label %cond.end393, !dbg !8252

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !8252
  br label %cond.end395, !dbg !8252

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !8252
  br label %cond.end397, !dbg !8252

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !8252
  br label %cond.end399, !dbg !8252

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !8252
  br label %cond.end401, !dbg !8252

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !8252
  br label %cond.end403, !dbg !8252

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !8252
  br label %cond.end405, !dbg !8252

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !8252
  br label %cond.end407, !dbg !8252

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !8252
  br label %cond.end409, !dbg !8252

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !8252
  br label %cond.end411, !dbg !8252

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !8252
  br label %cond.end413, !dbg !8252

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !8252
  br label %cond.end415, !dbg !8252

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !8252
  br label %cond.end417, !dbg !8252

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !8252
  br label %cond.end419, !dbg !8252

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !8252
  br label %cond.end421, !dbg !8252

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !8252
  br label %cond.end423, !dbg !8252

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !8252
  br label %cond.end425, !dbg !8252

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !8252
  br label %cond.end427, !dbg !8252

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !8252
  br label %cond.end429, !dbg !8252

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !8252
  br label %cond.end431, !dbg !8252

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !8252
  br label %cond.end433, !dbg !8252

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !8252
  br label %cond.end435, !dbg !8252

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !8252
  br label %cond.end437, !dbg !8252

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !8252
  br label %cond.end440, !dbg !8252

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !8252

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !8252
  br label %cond.end444, !dbg !8252

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !8252
  %sub443 = sub i64 %72, 1, !dbg !8252
  %call = call i32 @__ilog2_u64(i64 %sub443) #10, !dbg !8252
  br label %cond.end444, !dbg !8252

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !8252
  %sub446 = sub i32 %cond445, 12, !dbg !8253
  %add = add i32 %sub446, 1, !dbg !8254
  store i32 %add, i32* %retval, align 4, !dbg !8255
  br label %return, !dbg !8255

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !8256
  %dec = add i64 %73, -1, !dbg !8256
  store i64 %dec, i64* %size.addr, align 8, !dbg !8256
  %74 = load i64, i64* %size.addr, align 8, !dbg !8257
  %shr = lshr i64 %74, 12, !dbg !8257
  store i64 %shr, i64* %size.addr, align 8, !dbg !8257
  %75 = load i64, i64* %size.addr, align 8, !dbg !8258
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8235
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !8259
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !8260
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #12, !dbg !8259, !srcloc !7579
  store i32 %78, i32* %bitpos.i, align 4, !dbg !8259
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !8261
  %add.i = add i32 %79, 1, !dbg !8262
  store i32 %add.i, i32* %retval, align 4, !dbg !8263
  br label %return, !dbg !8263

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !8264
  ret i32 %80, !dbg !8264
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !8265 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8269, metadata !DIExpression()), !dbg !8270
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8271, metadata !DIExpression()), !dbg !8272
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8273, metadata !DIExpression()), !dbg !8274
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8275, metadata !DIExpression()), !dbg !8276
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8277
  ret i8* %0, !dbg !8278
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kstrtoul(i8* %s, i32 %base, i64* %res) #0 !dbg !8279 {
entry:
  %s.addr = alloca i8*, align 8
  %base.addr = alloca i32, align 4
  %res.addr = alloca i64*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !8285, metadata !DIExpression()), !dbg !8286
  store i64* %res, i64** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %res.addr, metadata !8287, metadata !DIExpression()), !dbg !8288
  %0 = load i8*, i8** %s.addr, align 8, !dbg !8289
  %1 = load i32, i32* %base.addr, align 4, !dbg !8291
  %2 = load i64*, i64** %res.addr, align 8, !dbg !8292
  %call = call i32 @kstrtoull(i8* %0, i32 %1, i64* %2) #8, !dbg !8293
  ret i32 %call, !dbg !8294
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @kstrtoull(i8*, i32, i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__pci_enable_msix(%struct.pci_dev* %dev, %struct.msix_entry* %entries, i32 %nvec, %struct.irq_affinity* %affd, i32 %flags) #0 !dbg !8295 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %entries.addr = alloca %struct.msix_entry*, align 8
  %nvec.addr = alloca i32, align 4
  %affd.addr = alloca %struct.irq_affinity*, align 8
  %flags.addr = alloca i32, align 4
  %nr_entries = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8298, metadata !DIExpression()), !dbg !8299
  store %struct.msix_entry* %entries, %struct.msix_entry** %entries.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msix_entry** %entries.addr, metadata !8300, metadata !DIExpression()), !dbg !8301
  store i32 %nvec, i32* %nvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nvec.addr, metadata !8302, metadata !DIExpression()), !dbg !8303
  store %struct.irq_affinity* %affd, %struct.irq_affinity** %affd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_affinity** %affd.addr, metadata !8304, metadata !DIExpression()), !dbg !8305
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8306, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.declare(metadata i32* %nr_entries, metadata !8308, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8310, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8312, metadata !DIExpression()), !dbg !8313
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8314
  %1 = load i32, i32* %nvec.addr, align 4, !dbg !8316
  %call = call i32 @pci_msi_supported(%struct.pci_dev* %0, i32 %1) #8, !dbg !8317
  %tobool = icmp ne i32 %call, 0, !dbg !8317
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8318

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8319
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 26, !dbg !8320
  %3 = load i32, i32* %current_state, align 8, !dbg !8320
  %cmp = icmp ne i32 %3, 0, !dbg !8321
  br i1 %cmp, label %if.then, label %if.end, !dbg !8322

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !8323
  br label %return, !dbg !8323

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8324
  %call1 = call i32 @pci_msix_vec_count(%struct.pci_dev* %4) #8, !dbg !8325
  store i32 %call1, i32* %nr_entries, align 4, !dbg !8326
  %5 = load i32, i32* %nr_entries, align 4, !dbg !8327
  %cmp2 = icmp slt i32 %5, 0, !dbg !8329
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8330

if.then3:                                         ; preds = %if.end
  %6 = load i32, i32* %nr_entries, align 4, !dbg !8331
  store i32 %6, i32* %retval, align 4, !dbg !8332
  br label %return, !dbg !8332

if.end4:                                          ; preds = %if.end
  %7 = load i32, i32* %nvec.addr, align 4, !dbg !8333
  %8 = load i32, i32* %nr_entries, align 4, !dbg !8335
  %cmp5 = icmp sgt i32 %7, %8, !dbg !8336
  br i1 %cmp5, label %land.lhs.true, label %if.end8, !dbg !8337

land.lhs.true:                                    ; preds = %if.end4
  %9 = load i32, i32* %flags.addr, align 4, !dbg !8338
  %and = and i32 %9, 16, !dbg !8339
  %tobool6 = icmp ne i32 %and, 0, !dbg !8339
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !8340

if.then7:                                         ; preds = %land.lhs.true
  %10 = load i32, i32* %nr_entries, align 4, !dbg !8341
  store i32 %10, i32* %retval, align 4, !dbg !8342
  br label %return, !dbg !8342

if.end8:                                          ; preds = %land.lhs.true, %if.end4
  %11 = load %struct.msix_entry*, %struct.msix_entry** %entries.addr, align 8, !dbg !8343
  %tobool9 = icmp ne %struct.msix_entry* %11, null, !dbg !8343
  br i1 %tobool9, label %if.then10, label %if.end36, !dbg !8345

if.then10:                                        ; preds = %if.end8
  store i32 0, i32* %i, align 4, !dbg !8346
  br label %for.cond, !dbg !8349

for.cond:                                         ; preds = %for.inc33, %if.then10
  %12 = load i32, i32* %i, align 4, !dbg !8350
  %13 = load i32, i32* %nvec.addr, align 4, !dbg !8352
  %cmp11 = icmp slt i32 %12, %13, !dbg !8353
  br i1 %cmp11, label %for.body, label %for.end35, !dbg !8354

for.body:                                         ; preds = %for.cond
  %14 = load %struct.msix_entry*, %struct.msix_entry** %entries.addr, align 8, !dbg !8355
  %15 = load i32, i32* %i, align 4, !dbg !8358
  %idxprom = sext i32 %15 to i64, !dbg !8355
  %arrayidx = getelementptr %struct.msix_entry, %struct.msix_entry* %14, i64 %idxprom, !dbg !8355
  %entry12 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx, i32 0, i32 1, !dbg !8359
  %16 = load i16, i16* %entry12, align 4, !dbg !8359
  %conv = zext i16 %16 to i32, !dbg !8355
  %17 = load i32, i32* %nr_entries, align 4, !dbg !8360
  %cmp13 = icmp sge i32 %conv, %17, !dbg !8361
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !8362

if.then15:                                        ; preds = %for.body
  store i32 -22, i32* %retval, align 4, !dbg !8363
  br label %return, !dbg !8363

if.end16:                                         ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !8364
  %add = add i32 %18, 1, !dbg !8366
  store i32 %add, i32* %j, align 4, !dbg !8367
  br label %for.cond17, !dbg !8368

for.cond17:                                       ; preds = %for.inc, %if.end16
  %19 = load i32, i32* %j, align 4, !dbg !8369
  %20 = load i32, i32* %nvec.addr, align 4, !dbg !8371
  %cmp18 = icmp slt i32 %19, %20, !dbg !8372
  br i1 %cmp18, label %for.body20, label %for.end, !dbg !8373

for.body20:                                       ; preds = %for.cond17
  %21 = load %struct.msix_entry*, %struct.msix_entry** %entries.addr, align 8, !dbg !8374
  %22 = load i32, i32* %i, align 4, !dbg !8377
  %idxprom21 = sext i32 %22 to i64, !dbg !8374
  %arrayidx22 = getelementptr %struct.msix_entry, %struct.msix_entry* %21, i64 %idxprom21, !dbg !8374
  %entry23 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx22, i32 0, i32 1, !dbg !8378
  %23 = load i16, i16* %entry23, align 4, !dbg !8378
  %conv24 = zext i16 %23 to i32, !dbg !8374
  %24 = load %struct.msix_entry*, %struct.msix_entry** %entries.addr, align 8, !dbg !8379
  %25 = load i32, i32* %j, align 4, !dbg !8380
  %idxprom25 = sext i32 %25 to i64, !dbg !8379
  %arrayidx26 = getelementptr %struct.msix_entry, %struct.msix_entry* %24, i64 %idxprom25, !dbg !8379
  %entry27 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx26, i32 0, i32 1, !dbg !8381
  %26 = load i16, i16* %entry27, align 4, !dbg !8381
  %conv28 = zext i16 %26 to i32, !dbg !8379
  %cmp29 = icmp eq i32 %conv24, %conv28, !dbg !8382
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !8383

if.then31:                                        ; preds = %for.body20
  store i32 -22, i32* %retval, align 4, !dbg !8384
  br label %return, !dbg !8384

if.end32:                                         ; preds = %for.body20
  br label %for.inc, !dbg !8385

for.inc:                                          ; preds = %if.end32
  %27 = load i32, i32* %j, align 4, !dbg !8386
  %inc = add i32 %27, 1, !dbg !8386
  store i32 %inc, i32* %j, align 4, !dbg !8386
  br label %for.cond17, !dbg !8387, !llvm.loop !8388

for.end:                                          ; preds = %for.cond17
  br label %for.inc33, !dbg !8390

for.inc33:                                        ; preds = %for.end
  %28 = load i32, i32* %i, align 4, !dbg !8391
  %inc34 = add i32 %28, 1, !dbg !8391
  store i32 %inc34, i32* %i, align 4, !dbg !8391
  br label %for.cond, !dbg !8392, !llvm.loop !8393

for.end35:                                        ; preds = %for.cond
  br label %if.end36, !dbg !8395

if.end36:                                         ; preds = %for.end35, %if.end8
  %29 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8396
  %msi_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 46, !dbg !8398
  %30 = bitcast [5 x i8]* %msi_enabled to i40*, !dbg !8398
  %bf.load = load i40, i40* %30, align 1, !dbg !8398
  %bf.lshr = lshr i40 %bf.load, 12, !dbg !8398
  %bf.clear = and i40 %bf.lshr, 1, !dbg !8398
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !8398
  %tobool37 = icmp ne i32 %bf.cast, 0, !dbg !8396
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !8399

if.then38:                                        ; preds = %if.end36
  %31 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8400
  %dev39 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 41, !dbg !8400
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev39, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i64 0, i64 0)) #11, !dbg !8400
  store i32 -22, i32* %retval, align 4, !dbg !8402
  br label %return, !dbg !8402

if.end40:                                         ; preds = %if.end36
  %32 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8403
  %33 = load %struct.msix_entry*, %struct.msix_entry** %entries.addr, align 8, !dbg !8404
  %34 = load i32, i32* %nvec.addr, align 4, !dbg !8405
  %35 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !8406
  %call41 = call i32 @msix_capability_init(%struct.pci_dev* %32, %struct.msix_entry* %33, i32 %34, %struct.irq_affinity* %35) #8, !dbg !8407
  store i32 %call41, i32* %retval, align 4, !dbg !8408
  br label %return, !dbg !8408

return:                                           ; preds = %if.end40, %if.then38, %if.then31, %if.then15, %if.then7, %if.then3, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !8409
  ret i32 %36, !dbg !8409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @msix_capability_init(%struct.pci_dev* %dev, %struct.msix_entry* %entries, i32 %nvec, %struct.irq_affinity* %affd) #0 !dbg !8410 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %entries.addr = alloca %struct.msix_entry*, align 8
  %nvec.addr = alloca i32, align 4
  %affd.addr = alloca %struct.irq_affinity*, align 8
  %ret = alloca i32, align 4
  %control = alloca i16, align 2
  %base = alloca i8*, align 8
  %entry22 = alloca %struct.msi_desc*, align 8
  %avail = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.msi_desc*, align 8
  %__mptr32 = alloca i8*, align 8
  %tmp37 = alloca %struct.msi_desc*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8413, metadata !DIExpression()), !dbg !8414
  store %struct.msix_entry* %entries, %struct.msix_entry** %entries.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msix_entry** %entries.addr, metadata !8415, metadata !DIExpression()), !dbg !8416
  store i32 %nvec, i32* %nvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nvec.addr, metadata !8417, metadata !DIExpression()), !dbg !8418
  store %struct.irq_affinity* %affd, %struct.irq_affinity** %affd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_affinity** %affd.addr, metadata !8419, metadata !DIExpression()), !dbg !8420
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8421, metadata !DIExpression()), !dbg !8422
  call void @llvm.dbg.declare(metadata i16* %control, metadata !8423, metadata !DIExpression()), !dbg !8424
  call void @llvm.dbg.declare(metadata i8** %base, metadata !8425, metadata !DIExpression()), !dbg !8426
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8427
  call void @pci_msix_clear_and_set_ctrl(%struct.pci_dev* %0, i16 zeroext -32768, i16 zeroext 0) #8, !dbg !8428
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8429
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8430
  %msix_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 16, !dbg !8431
  %3 = load i8, i8* %msix_cap, align 4, !dbg !8431
  %conv = zext i8 %3 to i32, !dbg !8430
  %add = add i32 %conv, 2, !dbg !8432
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %1, i32 %add, i16* %control) #8, !dbg !8433
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8434
  %5 = load i16, i16* %control, align 2, !dbg !8435
  %conv1 = zext i16 %5 to i32, !dbg !8435
  %and = and i32 %conv1, 2047, !dbg !8435
  %add2 = add i32 %and, 1, !dbg !8435
  %call3 = call i8* @msix_map_region(%struct.pci_dev* %4, i32 %add2) #8, !dbg !8436
  store i8* %call3, i8** %base, align 8, !dbg !8437
  %6 = load i8*, i8** %base, align 8, !dbg !8438
  %tobool = icmp ne i8* %6, null, !dbg !8438
  br i1 %tobool, label %if.end, label %if.then, !dbg !8440

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8441
  br label %return, !dbg !8441

if.end:                                           ; preds = %entry
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8442
  %8 = load i8*, i8** %base, align 8, !dbg !8443
  %9 = load %struct.msix_entry*, %struct.msix_entry** %entries.addr, align 8, !dbg !8444
  %10 = load i32, i32* %nvec.addr, align 4, !dbg !8445
  %11 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !8446
  %call4 = call i32 @msix_setup_entries(%struct.pci_dev* %7, i8* %8, %struct.msix_entry* %9, i32 %10, %struct.irq_affinity* %11) #8, !dbg !8447
  store i32 %call4, i32* %ret, align 4, !dbg !8448
  %12 = load i32, i32* %ret, align 4, !dbg !8449
  %tobool5 = icmp ne i32 %12, 0, !dbg !8449
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !8451

if.then6:                                         ; preds = %if.end
  %13 = load i32, i32* %ret, align 4, !dbg !8452
  store i32 %13, i32* %retval, align 4, !dbg !8453
  br label %return, !dbg !8453

if.end7:                                          ; preds = %if.end
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8454
  %15 = load i32, i32* %nvec.addr, align 4, !dbg !8455
  %call8 = call i32 @pci_msi_setup_msi_irqs(%struct.pci_dev* %14, i32 %15, i32 17) #8, !dbg !8456
  store i32 %call8, i32* %ret, align 4, !dbg !8457
  %16 = load i32, i32* %ret, align 4, !dbg !8458
  %tobool9 = icmp ne i32 %16, 0, !dbg !8458
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !8460

if.then10:                                        ; preds = %if.end7
  br label %out_avail, !dbg !8461

if.end11:                                         ; preds = %if.end7
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8462
  %call12 = call i32 @msi_verify_entries(%struct.pci_dev* %17) #8, !dbg !8463
  store i32 %call12, i32* %ret, align 4, !dbg !8464
  %18 = load i32, i32* %ret, align 4, !dbg !8465
  %tobool13 = icmp ne i32 %18, 0, !dbg !8465
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !8467

if.then14:                                        ; preds = %if.end11
  br label %out_free, !dbg !8468

if.end15:                                         ; preds = %if.end11
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8469
  call void @pci_msix_clear_and_set_ctrl(%struct.pci_dev* %19, i16 zeroext 0, i16 zeroext -16384) #8, !dbg !8470
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8471
  %21 = load %struct.msix_entry*, %struct.msix_entry** %entries.addr, align 8, !dbg !8472
  call void @msix_program_entries(%struct.pci_dev* %20, %struct.msix_entry* %21) #8, !dbg !8473
  %22 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8474
  %call16 = call i32 @populate_msi_sysfs(%struct.pci_dev* %22) #8, !dbg !8475
  store i32 %call16, i32* %ret, align 4, !dbg !8476
  %23 = load i32, i32* %ret, align 4, !dbg !8477
  %tobool17 = icmp ne i32 %23, 0, !dbg !8477
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !8479

if.then18:                                        ; preds = %if.end15
  br label %out_free, !dbg !8480

if.end19:                                         ; preds = %if.end15
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8481
  call void @pci_intx_for_msi(%struct.pci_dev* %24, i32 0) #8, !dbg !8482
  %25 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8483
  %msix_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 46, !dbg !8484
  %26 = bitcast [5 x i8]* %msix_enabled to i40*, !dbg !8484
  %bf.load = load i40, i40* %26, align 1, !dbg !8485
  %bf.clear = and i40 %bf.load, -8193, !dbg !8485
  %bf.set = or i40 %bf.clear, 8192, !dbg !8485
  store i40 %bf.set, i40* %26, align 1, !dbg !8485
  %27 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8486
  call void @pci_msix_clear_and_set_ctrl(%struct.pci_dev* %27, i16 zeroext 16384, i16 zeroext 0) #8, !dbg !8487
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8488
  call void @pcibios_free_irq(%struct.pci_dev* %28) #8, !dbg !8489
  store i32 0, i32* %retval, align 4, !dbg !8490
  br label %return, !dbg !8490

out_avail:                                        ; preds = %if.then10
  call void @llvm.dbg.label(metadata !8491), !dbg !8492
  %29 = load i32, i32* %ret, align 4, !dbg !8493
  %cmp = icmp slt i32 %29, 0, !dbg !8495
  br i1 %cmp, label %if.then21, label %if.end43, !dbg !8496

if.then21:                                        ; preds = %out_avail
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry22, metadata !8497, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.declare(metadata i32* %avail, metadata !8500, metadata !DIExpression()), !dbg !8501
  store i32 0, i32* %avail, align 4, !dbg !8501
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8502, metadata !DIExpression()), !dbg !8505
  %30 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8505
  %dev23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 41, !dbg !8505
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev23, i32 0, i32 14, !dbg !8505
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list, i32 0, i32 0, !dbg !8505
  %31 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8505
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !8505
  store i8* %32, i8** %__mptr, align 8, !dbg !8505
  br label %do.body, !dbg !8505

do.body:                                          ; preds = %if.then21
  br label %do.end, !dbg !8506

do.end:                                           ; preds = %do.body
  %33 = load i8*, i8** %__mptr, align 8, !dbg !8505
  %add.ptr = getelementptr i8, i8* %33, i64 0, !dbg !8505
  %34 = bitcast i8* %add.ptr to %struct.msi_desc*, !dbg !8505
  store %struct.msi_desc* %34, %struct.msi_desc** %tmp, align 8, !dbg !8506
  %35 = load %struct.msi_desc*, %struct.msi_desc** %tmp, align 8, !dbg !8505
  store %struct.msi_desc* %35, %struct.msi_desc** %entry22, align 8, !dbg !8508
  br label %for.cond, !dbg !8508

for.cond:                                         ; preds = %do.end36, %do.end
  %36 = load %struct.msi_desc*, %struct.msi_desc** %entry22, align 8, !dbg !8509
  %list = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %36, i32 0, i32 0, !dbg !8509
  %37 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8509
  %dev24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 41, !dbg !8509
  %msi_list25 = getelementptr inbounds %struct.device, %struct.device* %dev24, i32 0, i32 14, !dbg !8509
  %cmp26 = icmp eq %struct.list_head* %list, %msi_list25, !dbg !8509
  %lnot = xor i1 %cmp26, true, !dbg !8509
  br i1 %lnot, label %for.body, label %for.end, !dbg !8508

for.body:                                         ; preds = %for.cond
  %38 = load %struct.msi_desc*, %struct.msi_desc** %entry22, align 8, !dbg !8511
  %irq = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %38, i32 0, i32 1, !dbg !8514
  %39 = load i32, i32* %irq, align 8, !dbg !8514
  %cmp28 = icmp ne i32 %39, 0, !dbg !8515
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !8516

if.then30:                                        ; preds = %for.body
  %40 = load i32, i32* %avail, align 4, !dbg !8517
  %inc = add i32 %40, 1, !dbg !8517
  store i32 %inc, i32* %avail, align 4, !dbg !8517
  br label %if.end31, !dbg !8518

if.end31:                                         ; preds = %if.then30, %for.body
  br label %for.inc, !dbg !8519

for.inc:                                          ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i8** %__mptr32, metadata !8520, metadata !DIExpression()), !dbg !8522
  %41 = load %struct.msi_desc*, %struct.msi_desc** %entry22, align 8, !dbg !8522
  %list33 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %41, i32 0, i32 0, !dbg !8522
  %next34 = getelementptr inbounds %struct.list_head, %struct.list_head* %list33, i32 0, i32 0, !dbg !8522
  %42 = load %struct.list_head*, %struct.list_head** %next34, align 8, !dbg !8522
  %43 = bitcast %struct.list_head* %42 to i8*, !dbg !8522
  store i8* %43, i8** %__mptr32, align 8, !dbg !8522
  br label %do.body35, !dbg !8522

do.body35:                                        ; preds = %for.inc
  br label %do.end36, !dbg !8523

do.end36:                                         ; preds = %do.body35
  %44 = load i8*, i8** %__mptr32, align 8, !dbg !8522
  %add.ptr38 = getelementptr i8, i8* %44, i64 0, !dbg !8522
  %45 = bitcast i8* %add.ptr38 to %struct.msi_desc*, !dbg !8522
  store %struct.msi_desc* %45, %struct.msi_desc** %tmp37, align 8, !dbg !8523
  %46 = load %struct.msi_desc*, %struct.msi_desc** %tmp37, align 8, !dbg !8522
  store %struct.msi_desc* %46, %struct.msi_desc** %entry22, align 8, !dbg !8509
  br label %for.cond, !dbg !8509, !llvm.loop !8525

for.end:                                          ; preds = %for.cond
  %47 = load i32, i32* %avail, align 4, !dbg !8527
  %cmp39 = icmp ne i32 %47, 0, !dbg !8529
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !8530

if.then41:                                        ; preds = %for.end
  %48 = load i32, i32* %avail, align 4, !dbg !8531
  store i32 %48, i32* %ret, align 4, !dbg !8532
  br label %if.end42, !dbg !8533

if.end42:                                         ; preds = %if.then41, %for.end
  br label %if.end43, !dbg !8534

if.end43:                                         ; preds = %if.end42, %out_avail
  br label %out_free, !dbg !8535

out_free:                                         ; preds = %if.end43, %if.then18, %if.then14
  call void @llvm.dbg.label(metadata !8536), !dbg !8537
  %49 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8538
  call void @free_msi_irqs(%struct.pci_dev* %49) #8, !dbg !8539
  %50 = load i32, i32* %ret, align 4, !dbg !8540
  store i32 %50, i32* %retval, align 4, !dbg !8541
  br label %return, !dbg !8541

return:                                           ; preds = %out_free, %if.end19, %if.then6, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !8542
  ret i32 %51, !dbg !8542
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @msix_map_region(%struct.pci_dev* %dev, i32 %nr_entries) #0 !dbg !8543 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %nr_entries.addr = alloca i32, align 4
  %phys_addr = alloca i64, align 8
  %table_offset = alloca i32, align 4
  %flags = alloca i64, align 8
  %bir = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8546, metadata !DIExpression()), !dbg !8547
  store i32 %nr_entries, i32* %nr_entries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr_entries.addr, metadata !8548, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.declare(metadata i64* %phys_addr, metadata !8550, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.declare(metadata i32* %table_offset, metadata !8552, metadata !DIExpression()), !dbg !8553
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8554, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.declare(metadata i8* %bir, metadata !8556, metadata !DIExpression()), !dbg !8557
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8558
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8559
  %msix_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 16, !dbg !8560
  %2 = load i8, i8* %msix_cap, align 4, !dbg !8560
  %conv = zext i8 %2 to i32, !dbg !8559
  %add = add i32 %conv, 4, !dbg !8561
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %0, i32 %add, i32* %table_offset) #8, !dbg !8562
  %3 = load i32, i32* %table_offset, align 4, !dbg !8563
  %and = and i32 %3, 7, !dbg !8564
  %conv1 = trunc i32 %and to i8, !dbg !8565
  store i8 %conv1, i8* %bir, align 1, !dbg !8566
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8567
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 44, !dbg !8567
  %5 = load i8, i8* %bir, align 1, !dbg !8567
  %idxprom = zext i8 %5 to i64, !dbg !8567
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !8567
  %flags2 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 3, !dbg !8567
  %6 = load i64, i64* %flags2, align 8, !dbg !8567
  store i64 %6, i64* %flags, align 8, !dbg !8568
  %7 = load i64, i64* %flags, align 8, !dbg !8569
  %tobool = icmp ne i64 %7, 0, !dbg !8569
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8571

lor.lhs.false:                                    ; preds = %entry
  %8 = load i64, i64* %flags, align 8, !dbg !8572
  %and3 = and i64 %8, 536870912, !dbg !8573
  %tobool4 = icmp ne i64 %and3, 0, !dbg !8573
  br i1 %tobool4, label %if.then, label %if.end, !dbg !8574

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !8575
  br label %return, !dbg !8575

if.end:                                           ; preds = %lor.lhs.false
  %9 = load i32, i32* %table_offset, align 4, !dbg !8576
  %and5 = and i32 %9, -8, !dbg !8576
  store i32 %and5, i32* %table_offset, align 4, !dbg !8576
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8577
  %resource6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 44, !dbg !8577
  %11 = load i8, i8* %bir, align 1, !dbg !8577
  %idxprom7 = zext i8 %11 to i64, !dbg !8577
  %arrayidx8 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource6, i64 0, i64 %idxprom7, !dbg !8577
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx8, i32 0, i32 0, !dbg !8577
  %12 = load i64, i64* %start, align 8, !dbg !8577
  %13 = load i32, i32* %table_offset, align 4, !dbg !8578
  %conv9 = zext i32 %13 to i64, !dbg !8578
  %add10 = add i64 %12, %conv9, !dbg !8579
  store i64 %add10, i64* %phys_addr, align 8, !dbg !8580
  %14 = load i64, i64* %phys_addr, align 8, !dbg !8581
  %15 = load i32, i32* %nr_entries.addr, align 4, !dbg !8582
  %mul = mul i32 %15, 16, !dbg !8583
  %conv11 = zext i32 %mul to i64, !dbg !8582
  %call12 = call i8* @ioremap(i64 %14, i64 %conv11) #8, !dbg !8584
  store i8* %call12, i8** %retval, align 8, !dbg !8585
  br label %return, !dbg !8585

return:                                           ; preds = %if.end, %if.then
  %16 = load i8*, i8** %retval, align 8, !dbg !8586
  ret i8* %16, !dbg !8586
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @msix_setup_entries(%struct.pci_dev* %dev, i8* %base, %struct.msix_entry* %entries, i32 %nvec, %struct.irq_affinity* %affd) #0 !dbg !8587 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %base.addr = alloca i8*, align 8
  %entries.addr = alloca %struct.msix_entry*, align 8
  %nvec.addr = alloca i32, align 4
  %affd.addr = alloca %struct.irq_affinity*, align 8
  %curmsk = alloca %struct.irq_affinity_desc*, align 8
  %masks = alloca %struct.irq_affinity_desc*, align 8
  %entry1 = alloca %struct.msi_desc*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %vec_count = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8590, metadata !DIExpression()), !dbg !8591
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  store %struct.msix_entry* %entries, %struct.msix_entry** %entries.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msix_entry** %entries.addr, metadata !8594, metadata !DIExpression()), !dbg !8595
  store i32 %nvec, i32* %nvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nvec.addr, metadata !8596, metadata !DIExpression()), !dbg !8597
  store %struct.irq_affinity* %affd, %struct.irq_affinity** %affd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_affinity** %affd.addr, metadata !8598, metadata !DIExpression()), !dbg !8599
  call void @llvm.dbg.declare(metadata %struct.irq_affinity_desc** %curmsk, metadata !8600, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.declare(metadata %struct.irq_affinity_desc** %masks, metadata !8602, metadata !DIExpression()), !dbg !8603
  store %struct.irq_affinity_desc* null, %struct.irq_affinity_desc** %masks, align 8, !dbg !8603
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !8604, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8606, metadata !DIExpression()), !dbg !8607
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8608, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.declare(metadata i32* %vec_count, metadata !8610, metadata !DIExpression()), !dbg !8611
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8612
  %call = call i32 @pci_msix_vec_count(%struct.pci_dev* %0) #8, !dbg !8613
  store i32 %call, i32* %vec_count, align 4, !dbg !8611
  %1 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !8614
  %tobool = icmp ne %struct.irq_affinity* %1, null, !dbg !8614
  br i1 %tobool, label %if.then, label %if.end, !dbg !8616

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %nvec.addr, align 4, !dbg !8617
  %3 = load %struct.irq_affinity*, %struct.irq_affinity** %affd.addr, align 8, !dbg !8618
  %call2 = call %struct.irq_affinity_desc* @irq_create_affinity_masks(i32 %2, %struct.irq_affinity* %3) #8, !dbg !8619
  store %struct.irq_affinity_desc* %call2, %struct.irq_affinity_desc** %masks, align 8, !dbg !8620
  br label %if.end, !dbg !8621

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !8622
  %4 = load %struct.irq_affinity_desc*, %struct.irq_affinity_desc** %masks, align 8, !dbg !8624
  store %struct.irq_affinity_desc* %4, %struct.irq_affinity_desc** %curmsk, align 8, !dbg !8625
  br label %for.cond, !dbg !8626

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !8627
  %6 = load i32, i32* %nvec.addr, align 4, !dbg !8629
  %cmp = icmp slt i32 %5, %6, !dbg !8630
  br i1 %cmp, label %for.body, label %for.end, !dbg !8631

for.body:                                         ; preds = %for.cond
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8632
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !8634
  %8 = load %struct.irq_affinity_desc*, %struct.irq_affinity_desc** %curmsk, align 8, !dbg !8635
  %call4 = call %struct.msi_desc* @alloc_msi_entry(%struct.device* %dev3, i32 1, %struct.irq_affinity_desc* %8) #8, !dbg !8636
  store %struct.msi_desc* %call4, %struct.msi_desc** %entry1, align 8, !dbg !8637
  %9 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8638
  %tobool5 = icmp ne %struct.msi_desc* %9, null, !dbg !8638
  br i1 %tobool5, label %if.end10, label %if.then6, !dbg !8640

if.then6:                                         ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !8641
  %tobool7 = icmp ne i32 %10, 0, !dbg !8641
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !8644

if.then8:                                         ; preds = %if.then6
  %11 = load i8*, i8** %base.addr, align 8, !dbg !8645
  call void @iounmap(i8* %11) #8, !dbg !8646
  br label %if.end9, !dbg !8646

if.else:                                          ; preds = %if.then6
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8647
  call void @free_msi_irqs(%struct.pci_dev* %12) #8, !dbg !8648
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then8
  store i32 -12, i32* %ret, align 4, !dbg !8649
  br label %out, !dbg !8650

if.end10:                                         ; preds = %for.body
  %13 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8651
  %14 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %13, i32 0, i32 8, !dbg !8652
  %15 = bitcast %union.anon.65* %14 to %struct.anon.66*, !dbg !8652
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %15, i32 0, i32 1, !dbg !8652
  %16 = bitcast %struct.anon.67* %msi_attrib to i16*, !dbg !8653
  %bf.load = load i16, i16* %16, align 4, !dbg !8654
  %bf.clear = and i16 %bf.load, -2, !dbg !8654
  %bf.set = or i16 %bf.clear, 1, !dbg !8654
  store i16 %bf.set, i16* %16, align 4, !dbg !8654
  %17 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8655
  %18 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %17, i32 0, i32 8, !dbg !8656
  %19 = bitcast %union.anon.65* %18 to %struct.anon.66*, !dbg !8656
  %msi_attrib11 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %19, i32 0, i32 1, !dbg !8656
  %20 = bitcast %struct.anon.67* %msi_attrib11 to i16*, !dbg !8657
  %bf.load12 = load i16, i16* %20, align 4, !dbg !8658
  %bf.clear13 = and i16 %bf.load12, -257, !dbg !8658
  %bf.set14 = or i16 %bf.clear13, 256, !dbg !8658
  store i16 %bf.set14, i16* %20, align 4, !dbg !8658
  %21 = load %struct.msix_entry*, %struct.msix_entry** %entries.addr, align 8, !dbg !8659
  %tobool15 = icmp ne %struct.msix_entry* %21, null, !dbg !8659
  br i1 %tobool15, label %if.then16, label %if.else19, !dbg !8661

if.then16:                                        ; preds = %if.end10
  %22 = load %struct.msix_entry*, %struct.msix_entry** %entries.addr, align 8, !dbg !8662
  %23 = load i32, i32* %i, align 4, !dbg !8663
  %idxprom = sext i32 %23 to i64, !dbg !8662
  %arrayidx = getelementptr %struct.msix_entry, %struct.msix_entry* %22, i64 %idxprom, !dbg !8662
  %entry17 = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx, i32 0, i32 1, !dbg !8664
  %24 = load i16, i16* %entry17, align 4, !dbg !8664
  %25 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8665
  %26 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %25, i32 0, i32 8, !dbg !8666
  %27 = bitcast %union.anon.65* %26 to %struct.anon.66*, !dbg !8666
  %msi_attrib18 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %27, i32 0, i32 1, !dbg !8666
  %entry_nr = getelementptr inbounds %struct.anon.67, %struct.anon.67* %msi_attrib18, i32 0, i32 1, !dbg !8667
  store i16 %24, i16* %entry_nr, align 2, !dbg !8668
  br label %if.end22, !dbg !8665

if.else19:                                        ; preds = %if.end10
  %28 = load i32, i32* %i, align 4, !dbg !8669
  %conv = trunc i32 %28 to i16, !dbg !8669
  %29 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8670
  %30 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %29, i32 0, i32 8, !dbg !8671
  %31 = bitcast %union.anon.65* %30 to %struct.anon.66*, !dbg !8671
  %msi_attrib20 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %31, i32 0, i32 1, !dbg !8671
  %entry_nr21 = getelementptr inbounds %struct.anon.67, %struct.anon.67* %msi_attrib20, i32 0, i32 1, !dbg !8672
  store i16 %conv, i16* %entry_nr21, align 2, !dbg !8673
  br label %if.end22

if.end22:                                         ; preds = %if.else19, %if.then16
  %32 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8674
  %33 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %32, i32 0, i32 8, !dbg !8675
  %34 = bitcast %union.anon.65* %33 to %struct.anon.66*, !dbg !8675
  %msi_attrib23 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %34, i32 0, i32 1, !dbg !8675
  %entry_nr24 = getelementptr inbounds %struct.anon.67, %struct.anon.67* %msi_attrib23, i32 0, i32 1, !dbg !8676
  %35 = load i16, i16* %entry_nr24, align 2, !dbg !8676
  %conv25 = zext i16 %35 to i32, !dbg !8674
  %36 = load i32, i32* %vec_count, align 4, !dbg !8677
  %cmp26 = icmp sge i32 %conv25, %36, !dbg !8678
  %conv27 = zext i1 %cmp26 to i32, !dbg !8678
  %conv28 = trunc i32 %conv27 to i8, !dbg !8674
  %37 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8679
  %38 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %37, i32 0, i32 8, !dbg !8680
  %39 = bitcast %union.anon.65* %38 to %struct.anon.66*, !dbg !8680
  %msi_attrib29 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %39, i32 0, i32 1, !dbg !8680
  %40 = bitcast %struct.anon.67* %msi_attrib29 to i16*, !dbg !8681
  %41 = zext i8 %conv28 to i16, !dbg !8682
  %bf.load30 = load i16, i16* %40, align 4, !dbg !8682
  %bf.value = and i16 %41, 1, !dbg !8682
  %bf.shl = shl i16 %bf.value, 9, !dbg !8682
  %bf.clear31 = and i16 %bf.load30, -513, !dbg !8682
  %bf.set32 = or i16 %bf.clear31, %bf.shl, !dbg !8682
  store i16 %bf.set32, i16* %40, align 4, !dbg !8682
  %bf.result.cast = trunc i16 %bf.value to i8, !dbg !8682
  %42 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8683
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 43, !dbg !8684
  %43 = load i32, i32* %irq, align 4, !dbg !8684
  %44 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8685
  %45 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %44, i32 0, i32 8, !dbg !8686
  %46 = bitcast %union.anon.65* %45 to %struct.anon.66*, !dbg !8686
  %msi_attrib33 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %46, i32 0, i32 1, !dbg !8686
  %default_irq = getelementptr inbounds %struct.anon.67, %struct.anon.67* %msi_attrib33, i32 0, i32 2, !dbg !8687
  store i32 %43, i32* %default_irq, align 4, !dbg !8688
  %47 = load i8*, i8** %base.addr, align 8, !dbg !8689
  %48 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8690
  %49 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %48, i32 0, i32 8, !dbg !8691
  %50 = bitcast %union.anon.65* %49 to %struct.anon.66*, !dbg !8691
  %51 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %50, i32 0, i32 2, !dbg !8691
  %mask_base = bitcast %union.anon.68* %51 to i8**, !dbg !8691
  store i8* %47, i8** %mask_base, align 8, !dbg !8692
  %52 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8693
  %list = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %52, i32 0, i32 0, !dbg !8694
  %53 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8695
  %dev34 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %53, i32 0, i32 41, !dbg !8695
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev34, i32 0, i32 14, !dbg !8695
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %msi_list) #8, !dbg !8696
  %54 = load %struct.irq_affinity_desc*, %struct.irq_affinity_desc** %masks, align 8, !dbg !8697
  %tobool35 = icmp ne %struct.irq_affinity_desc* %54, null, !dbg !8697
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !8699

if.then36:                                        ; preds = %if.end22
  %55 = load %struct.irq_affinity_desc*, %struct.irq_affinity_desc** %curmsk, align 8, !dbg !8700
  %incdec.ptr = getelementptr %struct.irq_affinity_desc, %struct.irq_affinity_desc* %55, i32 1, !dbg !8700
  store %struct.irq_affinity_desc* %incdec.ptr, %struct.irq_affinity_desc** %curmsk, align 8, !dbg !8700
  br label %if.end37, !dbg !8701

if.end37:                                         ; preds = %if.then36, %if.end22
  br label %for.inc, !dbg !8702

for.inc:                                          ; preds = %if.end37
  %56 = load i32, i32* %i, align 4, !dbg !8703
  %inc = add i32 %56, 1, !dbg !8703
  store i32 %inc, i32* %i, align 4, !dbg !8703
  br label %for.cond, !dbg !8704, !llvm.loop !8705

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %ret, align 4, !dbg !8707
  br label %out, !dbg !8708

out:                                              ; preds = %for.end, %if.end9
  call void @llvm.dbg.label(metadata !8709), !dbg !8710
  %57 = load %struct.irq_affinity_desc*, %struct.irq_affinity_desc** %masks, align 8, !dbg !8711
  %58 = bitcast %struct.irq_affinity_desc* %57 to i8*, !dbg !8711
  call void @kfree(i8* %58) #8, !dbg !8712
  %59 = load i32, i32* %ret, align 4, !dbg !8713
  ret i32 %59, !dbg !8714
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msix_program_entries(%struct.pci_dev* %dev, %struct.msix_entry* %entries) #0 !dbg !8715 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %entries.addr = alloca %struct.msix_entry*, align 8
  %entry1 = alloca %struct.msi_desc*, align 8
  %i = alloca i32, align 4
  %desc_addr = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.msi_desc*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.msi_desc*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8718, metadata !DIExpression()), !dbg !8719
  store %struct.msix_entry* %entries, %struct.msix_entry** %entries.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msix_entry** %entries.addr, metadata !8720, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %entry1, metadata !8722, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8724, metadata !DIExpression()), !dbg !8725
  store i32 0, i32* %i, align 4, !dbg !8725
  call void @llvm.dbg.declare(metadata i8** %desc_addr, metadata !8726, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8728, metadata !DIExpression()), !dbg !8731
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8731
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !8731
  %msi_list = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 14, !dbg !8731
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %msi_list, i32 0, i32 0, !dbg !8731
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8731
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !8731
  store i8* %2, i8** %__mptr, align 8, !dbg !8731
  br label %do.body, !dbg !8731

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8732

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !8731
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !8731
  %4 = bitcast i8* %add.ptr to %struct.msi_desc*, !dbg !8731
  store %struct.msi_desc* %4, %struct.msi_desc** %tmp, align 8, !dbg !8732
  %5 = load %struct.msi_desc*, %struct.msi_desc** %tmp, align 8, !dbg !8731
  store %struct.msi_desc* %5, %struct.msi_desc** %entry1, align 8, !dbg !8734
  br label %for.cond, !dbg !8734

for.cond:                                         ; preds = %do.end15, %do.end
  %6 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8735
  %list = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %6, i32 0, i32 0, !dbg !8735
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8735
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !8735
  %msi_list4 = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 14, !dbg !8735
  %cmp = icmp eq %struct.list_head* %list, %msi_list4, !dbg !8735
  %lnot = xor i1 %cmp, true, !dbg !8735
  br i1 %lnot, label %for.body, label %for.end, !dbg !8734

for.body:                                         ; preds = %for.cond
  %8 = load %struct.msix_entry*, %struct.msix_entry** %entries.addr, align 8, !dbg !8737
  %tobool = icmp ne %struct.msix_entry* %8, null, !dbg !8737
  br i1 %tobool, label %if.then, label %if.end, !dbg !8740

if.then:                                          ; preds = %for.body
  %9 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8741
  %irq = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %9, i32 0, i32 1, !dbg !8742
  %10 = load i32, i32* %irq, align 8, !dbg !8742
  %11 = load %struct.msix_entry*, %struct.msix_entry** %entries.addr, align 8, !dbg !8743
  %12 = load i32, i32* %i, align 4, !dbg !8744
  %inc = add i32 %12, 1, !dbg !8744
  store i32 %inc, i32* %i, align 4, !dbg !8744
  %idxprom = sext i32 %12 to i64, !dbg !8743
  %arrayidx = getelementptr %struct.msix_entry, %struct.msix_entry* %11, i64 %idxprom, !dbg !8743
  %vector = getelementptr inbounds %struct.msix_entry, %struct.msix_entry* %arrayidx, i32 0, i32 0, !dbg !8745
  store i32 %10, i32* %vector, align 4, !dbg !8746
  br label %if.end, !dbg !8743

if.end:                                           ; preds = %if.then, %for.body
  %13 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8747
  %call = call i8* @pci_msix_desc_addr(%struct.msi_desc* %13) #8, !dbg !8748
  store i8* %call, i8** %desc_addr, align 8, !dbg !8749
  %14 = load i8*, i8** %desc_addr, align 8, !dbg !8750
  %tobool5 = icmp ne i8* %14, null, !dbg !8750
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !8752

if.then6:                                         ; preds = %if.end
  %15 = load i8*, i8** %desc_addr, align 8, !dbg !8753
  %add.ptr7 = getelementptr i8, i8* %15, i64 12, !dbg !8754
  %call8 = call i32 @readl(i8* %add.ptr7) #8, !dbg !8755
  %16 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8756
  %17 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %16, i32 0, i32 8, !dbg !8757
  %18 = bitcast %union.anon.65* %17 to %struct.anon.66*, !dbg !8757
  %masked = getelementptr inbounds %struct.anon.66, %struct.anon.66* %18, i32 0, i32 0, !dbg !8757
  store i32 %call8, i32* %masked, align 8, !dbg !8758
  br label %if.end10, !dbg !8756

if.else:                                          ; preds = %if.end
  %19 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8759
  %20 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %19, i32 0, i32 8, !dbg !8760
  %21 = bitcast %union.anon.65* %20 to %struct.anon.66*, !dbg !8760
  %masked9 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %21, i32 0, i32 0, !dbg !8760
  store i32 0, i32* %masked9, align 8, !dbg !8761
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then6
  %22 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8762
  call void @msix_mask_irq(%struct.msi_desc* %22, i32 1) #8, !dbg !8763
  br label %for.inc, !dbg !8764

for.inc:                                          ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !8765, metadata !DIExpression()), !dbg !8767
  %23 = load %struct.msi_desc*, %struct.msi_desc** %entry1, align 8, !dbg !8767
  %list12 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %23, i32 0, i32 0, !dbg !8767
  %next13 = getelementptr inbounds %struct.list_head, %struct.list_head* %list12, i32 0, i32 0, !dbg !8767
  %24 = load %struct.list_head*, %struct.list_head** %next13, align 8, !dbg !8767
  %25 = bitcast %struct.list_head* %24 to i8*, !dbg !8767
  store i8* %25, i8** %__mptr11, align 8, !dbg !8767
  br label %do.body14, !dbg !8767

do.body14:                                        ; preds = %for.inc
  br label %do.end15, !dbg !8768

do.end15:                                         ; preds = %do.body14
  %26 = load i8*, i8** %__mptr11, align 8, !dbg !8767
  %add.ptr17 = getelementptr i8, i8* %26, i64 0, !dbg !8767
  %27 = bitcast i8* %add.ptr17 to %struct.msi_desc*, !dbg !8767
  store %struct.msi_desc* %27, %struct.msi_desc** %tmp16, align 8, !dbg !8768
  %28 = load %struct.msi_desc*, %struct.msi_desc** %tmp16, align 8, !dbg !8767
  store %struct.msi_desc* %28, %struct.msi_desc** %entry1, align 8, !dbg !8735
  br label %for.cond, !dbg !8735, !llvm.loop !8770

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8772
}

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_msi_domain_set_desc(%struct.irq_alloc_info* %arg, %struct.msi_desc* %desc) #0 !dbg !8773 {
entry:
  %arg.addr = alloca %struct.irq_alloc_info*, align 8
  %desc.addr = alloca %struct.msi_desc*, align 8
  store %struct.irq_alloc_info* %arg, %struct.irq_alloc_info** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_alloc_info** %arg.addr, metadata !8774, metadata !DIExpression()), !dbg !8775
  store %struct.msi_desc* %desc, %struct.msi_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc.addr, metadata !8776, metadata !DIExpression()), !dbg !8777
  %0 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !8778
  %1 = load %struct.irq_alloc_info*, %struct.irq_alloc_info** %arg.addr, align 8, !dbg !8779
  %desc1 = getelementptr inbounds %struct.irq_alloc_info, %struct.irq_alloc_info* %1, i32 0, i32 5, !dbg !8780
  store %struct.msi_desc* %0, %struct.msi_desc** %desc1, align 8, !dbg !8781
  %2 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !8782
  %call = call i64 @pci_msi_domain_calc_hwirq(%struct.msi_desc* %2) #8, !dbg !8783
  %3 = load %struct.irq_alloc_info*, %struct.irq_alloc_info** %arg.addr, align 8, !dbg !8784
  %hwirq = getelementptr inbounds %struct.irq_alloc_info, %struct.irq_alloc_info* %3, i32 0, i32 3, !dbg !8785
  store i64 %call, i64* %hwirq, align 8, !dbg !8786
  ret void, !dbg !8787
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_msi_domain_handle_error(%struct.irq_domain* %domain, %struct.msi_desc* %desc, i32 %error) #0 !dbg !8788 {
entry:
  %retval = alloca i32, align 4
  %domain.addr = alloca %struct.irq_domain*, align 8
  %desc.addr = alloca %struct.msi_desc*, align 8
  %error.addr = alloca i32, align 4
  store %struct.irq_domain* %domain, %struct.irq_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_domain** %domain.addr, metadata !8789, metadata !DIExpression()), !dbg !8790
  store %struct.msi_desc* %desc, %struct.msi_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc.addr, metadata !8791, metadata !DIExpression()), !dbg !8792
  store i32 %error, i32* %error.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %error.addr, metadata !8793, metadata !DIExpression()), !dbg !8794
  %0 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !8795
  %call = call zeroext i1 @pci_msi_desc_is_multi_msi(%struct.msi_desc* %0) #8, !dbg !8797
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !8798

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %error.addr, align 4, !dbg !8799
  %cmp = icmp eq i32 %1, -28, !dbg !8800
  br i1 %cmp, label %if.then, label %if.end, !dbg !8801

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !8802
  br label %return, !dbg !8802

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* %error.addr, align 4, !dbg !8803
  store i32 %2, i32* %retval, align 4, !dbg !8804
  br label %return, !dbg !8804

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !8805
  ret i32 %3, !dbg !8805
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pci_msi_domain_calc_hwirq(%struct.msi_desc* %desc) #0 !dbg !8806 {
entry:
  %desc.addr = alloca %struct.msi_desc*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  store %struct.msi_desc* %desc, %struct.msi_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %desc.addr, metadata !8809, metadata !DIExpression()), !dbg !8810
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !8811, metadata !DIExpression()), !dbg !8812
  %0 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !8813
  %call = call %struct.pci_dev* @msi_desc_to_pci_dev(%struct.msi_desc* %0) #8, !dbg !8814
  store %struct.pci_dev* %call, %struct.pci_dev** %dev, align 8, !dbg !8812
  %1 = load %struct.msi_desc*, %struct.msi_desc** %desc.addr, align 8, !dbg !8815
  %2 = getelementptr inbounds %struct.msi_desc, %struct.msi_desc* %1, i32 0, i32 8, !dbg !8816
  %3 = bitcast %union.anon.65* %2 to %struct.anon.66*, !dbg !8816
  %msi_attrib = getelementptr inbounds %struct.anon.66, %struct.anon.66* %3, i32 0, i32 1, !dbg !8816
  %entry_nr = getelementptr inbounds %struct.anon.67, %struct.anon.67* %msi_attrib, i32 0, i32 1, !dbg !8817
  %4 = load i16, i16* %entry_nr, align 2, !dbg !8817
  %conv = zext i16 %4 to i64, !dbg !8818
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8819
  %call1 = call zeroext i16 @pci_dev_id(%struct.pci_dev* %5) #8, !dbg !8820
  %conv2 = zext i16 %call1 to i32, !dbg !8820
  %shl = shl i32 %conv2, 11, !dbg !8821
  %conv3 = sext i32 %shl to i64, !dbg !8820
  %or = or i64 %conv, %conv3, !dbg !8822
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8823
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 1, !dbg !8824
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8824
  %call4 = call i32 @pci_domain_nr(%struct.pci_bus* %7) #8, !dbg !8825
  %shl5 = shl i32 %call4, 27, !dbg !8826
  %conv6 = zext i32 %shl5 to i64, !dbg !8827
  %or7 = or i64 %or, %conv6, !dbg !8828
  ret i64 %or7, !dbg !8829
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_domain_nr(%struct.pci_bus* %bus) #0 !dbg !8830 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !8832, metadata !DIExpression()), !dbg !8833
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !8834
  %call = call %struct.pci_sysdata* @to_pci_sysdata(%struct.pci_bus* %0) #8, !dbg !8835
  %domain = getelementptr inbounds %struct.pci_sysdata, %struct.pci_sysdata* %call, i32 0, i32 0, !dbg !8836
  %1 = load i32, i32* %domain, align 8, !dbg !8836
  ret i32 %1, !dbg !8837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_sysdata* @to_pci_sysdata(%struct.pci_bus* %bus) #0 !dbg !8838 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !9132, metadata !DIExpression()), !dbg !9133
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9134
  %sysdata = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 11, !dbg !9135
  %1 = load i8*, i8** %sysdata, align 8, !dbg !9135
  %2 = bitcast i8* %1 to %struct.pci_sysdata*, !dbg !9134
  ret %struct.pci_sysdata* %2, !dbg !9136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_of_node(%struct.fwnode_handle* %fwnode) #0 !dbg !9137 {
entry:
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !9138, metadata !DIExpression()), !dbg !9139
  %0 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !9140
  %1 = bitcast %struct.fwnode_handle* %0 to i8*, !dbg !9140
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #8, !dbg !9141
  br i1 %call, label %land.end, label %land.rhs, !dbg !9142

land.rhs:                                         ; preds = %entry
  %2 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !9143
  %ops = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %2, i32 0, i32 1, !dbg !9144
  %3 = load %struct.fwnode_operations*, %struct.fwnode_operations** %ops, align 8, !dbg !9144
  %cmp = icmp eq %struct.fwnode_operations* %3, @of_fwnode_ops, !dbg !9145
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !9146
  ret i1 %4, !dbg !9147
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #0 !dbg !9148 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9152, metadata !DIExpression()), !dbg !9153
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9154
  %tobool = icmp ne i8* %0, null, !dbg !9154
  %lnot = xor i1 %tobool, true, !dbg !9154
  %lnot1 = xor i1 %lnot, true, !dbg !9154
  %lnot2 = xor i1 %lnot1, true, !dbg !9154
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9154
  %conv = sext i32 %lnot.ext to i64, !dbg !9154
  %tobool3 = icmp ne i64 %conv, 0, !dbg !9154
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !9155

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !9156
  %2 = ptrtoint i8* %1 to i64, !dbg !9156
  %3 = inttoptr i64 %2 to i8*, !dbg !9156
  %4 = ptrtoint i8* %3 to i64, !dbg !9156
  %cmp = icmp uge i64 %4, -4095, !dbg !9156
  %lnot5 = xor i1 %cmp, true, !dbg !9156
  %lnot7 = xor i1 %lnot5, true, !dbg !9156
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !9156
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !9156
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !9155
  br label %lor.end, !dbg !9155

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !9157
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noredzone }
attributes #9 = { nounwind }
attributes #10 = { noredzone nounwind readnone }
attributes #11 = { cold noredzone }
attributes #12 = { nounwind readonly }
attributes #13 = { noredzone nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4633, !4634, !4635, !4636}
!llvm.ident = !{!4637}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pci_msi_ignore_mask", scope: !2, file: !3, line: 30, type: !269, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !208, globals: !4541, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/pci/msi.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !107, !114, !122, !128, !139, !149, !161, !166, !172, !185, !195, !201}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !94, line: 76, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106}
!96 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!102 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!103 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!104 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!105 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!106 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqchip_irq_state", file: !108, line: 478, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112, !113}
!110 = !DIEnumerator(name: "IRQCHIP_STATE_PENDING", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "IRQCHIP_STATE_ACTIVE", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "IRQCHIP_STATE_MASKED", value: 2, isUnsigned: true)
!113 = !DIEnumerator(name: "IRQCHIP_STATE_LINE_LEVEL", value: 3, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_gc_flags", file: !115, line: 1084, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/irq.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120, !121}
!117 = !DIEnumerator(name: "IRQ_GC_INIT_MASK_CACHE", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "IRQ_GC_INIT_NESTED_LOCK", value: 2, isUnsigned: true)
!119 = !DIEnumerator(name: "IRQ_GC_MASK_CACHE_PER_TYPE", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "IRQ_GC_NO_MASK", value: 8, isUnsigned: true)
!121 = !DIEnumerator(name: "IRQ_GC_BE_IO", value: 16, isUnsigned: true)
!122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !123, line: 11, baseType: !7, size: 32, elements: !124)
!123 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!124 = !{!125, !126, !127}
!125 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!127 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_alloc_type", file: !129, line: 36, baseType: !7, size: 32, elements: !130)
!129 = !DIFile(filename: "./arch/x86/include/asm/hw_irq.h", directory: "/home/lizy2001/genbc/linux")
!130 = !{!131, !132, !133, !134, !135, !136, !137, !138}
!131 = !DIEnumerator(name: "X86_IRQ_ALLOC_TYPE_IOAPIC", value: 1, isUnsigned: true)
!132 = !DIEnumerator(name: "X86_IRQ_ALLOC_TYPE_HPET", value: 2, isUnsigned: true)
!133 = !DIEnumerator(name: "X86_IRQ_ALLOC_TYPE_PCI_MSI", value: 3, isUnsigned: true)
!134 = !DIEnumerator(name: "X86_IRQ_ALLOC_TYPE_PCI_MSIX", value: 4, isUnsigned: true)
!135 = !DIEnumerator(name: "X86_IRQ_ALLOC_TYPE_DMAR", value: 5, isUnsigned: true)
!136 = !DIEnumerator(name: "X86_IRQ_ALLOC_TYPE_UV", value: 6, isUnsigned: true)
!137 = !DIEnumerator(name: "X86_IRQ_ALLOC_TYPE_IOAPIC_GET_PARENT", value: 7, isUnsigned: true)
!138 = !DIEnumerator(name: "X86_IRQ_ALLOC_TYPE_HPET_GET_PARENT", value: 8, isUnsigned: true)
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !140, line: 343, baseType: !7, size: 32, elements: !141)
!140 = !DIFile(filename: "./include/linux/msi.h", directory: "/home/lizy2001/genbc/linux")
!141 = !{!142, !143, !144, !145, !146, !147, !148}
!142 = !DIEnumerator(name: "MSI_FLAG_USE_DEF_DOM_OPS", value: 1, isUnsigned: true)
!143 = !DIEnumerator(name: "MSI_FLAG_USE_DEF_CHIP_OPS", value: 2, isUnsigned: true)
!144 = !DIEnumerator(name: "MSI_FLAG_MULTI_PCI_MSI", value: 4, isUnsigned: true)
!145 = !DIEnumerator(name: "MSI_FLAG_PCI_MSIX", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "MSI_FLAG_ACTIVATE_EARLY", value: 16, isUnsigned: true)
!147 = !DIEnumerator(name: "MSI_FLAG_MUST_REACTIVATE", value: 32, isUnsigned: true)
!148 = !DIEnumerator(name: "MSI_FLAG_LEVEL_CAPABLE", value: 64, isUnsigned: true)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !115, line: 571, baseType: !7, size: 32, elements: !150)
!150 = !{!151, !152, !153, !154, !155, !156, !157, !158, !159, !160}
!151 = !DIEnumerator(name: "IRQCHIP_SET_TYPE_MASKED", value: 1, isUnsigned: true)
!152 = !DIEnumerator(name: "IRQCHIP_EOI_IF_HANDLED", value: 2, isUnsigned: true)
!153 = !DIEnumerator(name: "IRQCHIP_MASK_ON_SUSPEND", value: 4, isUnsigned: true)
!154 = !DIEnumerator(name: "IRQCHIP_ONOFFLINE_ENABLED", value: 8, isUnsigned: true)
!155 = !DIEnumerator(name: "IRQCHIP_SKIP_SET_WAKE", value: 16, isUnsigned: true)
!156 = !DIEnumerator(name: "IRQCHIP_ONESHOT_SAFE", value: 32, isUnsigned: true)
!157 = !DIEnumerator(name: "IRQCHIP_EOI_THREADED", value: 64, isUnsigned: true)
!158 = !DIEnumerator(name: "IRQCHIP_SUPPORTS_LEVEL_MSI", value: 128, isUnsigned: true)
!159 = !DIEnumerator(name: "IRQCHIP_SUPPORTS_NMI", value: 256, isUnsigned: true)
!160 = !DIEnumerator(name: "IRQCHIP_ENABLE_WAKEUP_ON_SUSPEND", value: 512, isUnsigned: true)
!161 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !162, line: 10, baseType: !7, size: 32, elements: !163)
!162 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!163 = !{!164, !165}
!164 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!165 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!166 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !167, line: 182, baseType: !7, size: 32, elements: !168)
!167 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!168 = !{!169, !170, !171}
!169 = !DIEnumerator(name: "pci_channel_io_normal", value: 1, isUnsigned: true)
!170 = !DIEnumerator(name: "pci_channel_io_frozen", value: 2, isUnsigned: true)
!171 = !DIEnumerator(name: "pci_channel_io_perm_failure", value: 3, isUnsigned: true)
!172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_dev_flags", file: !167, line: 207, baseType: !7, size: 32, elements: !173)
!173 = !{!174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184}
!174 = !DIEnumerator(name: "PCI_DEV_FLAGS_MSI_INTX_DISABLE_BUG", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_D3", value: 2, isUnsigned: true)
!176 = !DIEnumerator(name: "PCI_DEV_FLAGS_ASSIGNED", value: 4, isUnsigned: true)
!177 = !DIEnumerator(name: "PCI_DEV_FLAGS_ACS_ENABLED_QUIRK", value: 8, isUnsigned: true)
!178 = !DIEnumerator(name: "PCI_DEV_FLAG_PCIE_BRIDGE_ALIAS", value: 32, isUnsigned: true)
!179 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_BUS_RESET", value: 64, isUnsigned: true)
!180 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_PM_RESET", value: 128, isUnsigned: true)
!181 = !DIEnumerator(name: "PCI_DEV_FLAGS_VPD_REF_F0", value: 256, isUnsigned: true)
!182 = !DIEnumerator(name: "PCI_DEV_FLAGS_BRIDGE_XLATE_ROOT", value: 512, isUnsigned: true)
!183 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_FLR_RESET", value: 1024, isUnsigned: true)
!184 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_RELAXED_ORDERING", value: 2048, isUnsigned: true)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !94, line: 191, baseType: !7, size: 32, elements: !186)
!186 = !{!187, !188, !189, !190, !191, !192, !193, !194}
!187 = !DIEnumerator(name: "IRQ_DOMAIN_FLAG_HIERARCHY", value: 1, isUnsigned: true)
!188 = !DIEnumerator(name: "IRQ_DOMAIN_NAME_ALLOCATED", value: 2, isUnsigned: true)
!189 = !DIEnumerator(name: "IRQ_DOMAIN_FLAG_IPI_PER_CPU", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "IRQ_DOMAIN_FLAG_IPI_SINGLE", value: 8, isUnsigned: true)
!191 = !DIEnumerator(name: "IRQ_DOMAIN_FLAG_MSI", value: 16, isUnsigned: true)
!192 = !DIEnumerator(name: "IRQ_DOMAIN_FLAG_MSI_REMAP", value: 32, isUnsigned: true)
!193 = !DIEnumerator(name: "IRQ_DOMAIN_MSI_NOMASK_QUIRK", value: 64, isUnsigned: true)
!194 = !DIEnumerator(name: "IRQ_DOMAIN_FLAG_NONCORE", value: 65536, isUnsigned: true)
!195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_bus_flags", file: !167, line: 238, baseType: !7, size: 32, elements: !196)
!196 = !{!197, !198, !199, !200}
!197 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_MSI", value: 1, isUnsigned: true)
!198 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_MMRBC", value: 2, isUnsigned: true)
!199 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_AERSID", value: 4, isUnsigned: true)
!200 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_EXTCFG", value: 8, isUnsigned: true)
!201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !202, line: 305, baseType: !7, size: 32, elements: !203)
!202 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!203 = !{!204, !205, !206, !207}
!204 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!205 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!206 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!207 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!208 = !{!209, !210, !4207, !3875, !4208, !4522, !4524, !4527, !4539, !757, !4540, !1366, !3810, !873, !3681, !335}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !140, line: 85, size: 768, elements: !212)
!212 = !{!213, !220, !221, !222, !4157, !4158, !4164, !4168, !4169}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !211, file: !140, line: 87, baseType: !214, size: 128)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !215, line: 178, size: 128, elements: !216)
!215 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!216 = !{!217, !219}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !214, file: !215, line: 179, baseType: !218, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !214, file: !215, line: 179, baseType: !218, size: 64, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !211, file: !140, line: 88, baseType: !7, size: 32, offset: 128)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "nvec_used", scope: !211, file: !140, line: 89, baseType: !7, size: 32, offset: 160)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !211, file: !140, line: 90, baseType: !223, size: 64, offset: 192)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !225)
!225 = !{!226, !3388, !3389, !3392, !3393, !3444, !3535, !3536, !3537, !3538, !3539, !3548, !3653, !3666, !4084, !4085, !4089, !4091, !4092, !4093, !4097, !4103, !4104, !4107, !4108, !4109, !4110, !4111, !4112, !4113, !4145, !4146, !4147, !4150, !4153, !4154, !4155, !4156}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !224, file: !73, line: 462, baseType: !227, size: 512)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !228, line: 64, size: 512, elements: !229)
!228 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!229 = !{!230, !234, !235, !237, !298, !3238, !3378, !3383, !3384, !3385, !3386, !3387}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !227, file: !228, line: 65, baseType: !231, size: 64)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !233)
!233 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !227, file: !228, line: 66, baseType: !214, size: 128, offset: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !227, file: !228, line: 67, baseType: !236, size: 64, offset: 192)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !227, file: !228, line: 68, baseType: !238, size: 64, offset: 256)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !228, line: 192, size: 704, elements: !240)
!240 = !{!241, !242, !258, !259}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !239, file: !228, line: 193, baseType: !214, size: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !239, file: !228, line: 194, baseType: !243, offset: 128)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !244, line: 83, baseType: !245)
!244 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !244, line: 71, elements: !246)
!246 = !{!247}
!247 = !DIDerivedType(tag: DW_TAG_member, scope: !245, file: !244, line: 72, baseType: !248)
!248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !245, file: !244, line: 72, elements: !249)
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !248, file: !244, line: 73, baseType: !251)
!251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !244, line: 20, elements: !252)
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !251, file: !244, line: 21, baseType: !254)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !255, line: 25, baseType: !256)
!255 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !255, line: 25, elements: !257)
!257 = !{}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !239, file: !228, line: 195, baseType: !227, size: 512, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !239, file: !228, line: 196, baseType: !260, size: 64, offset: 640)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !228, line: 156, size: 192, elements: !263)
!263 = !{!264, !270, !275}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !262, file: !228, line: 157, baseType: !265, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!267 = !DISubroutineType(types: !268)
!268 = !{!269, !238, !236}
!269 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !262, file: !228, line: 158, baseType: !271, size: 64, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = !DISubroutineType(types: !274)
!274 = !{!231, !238, !236}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !262, file: !228, line: 159, baseType: !276, size: 64, offset: 128)
!276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !277)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DISubroutineType(types: !279)
!279 = !{!269, !238, !236, !280}
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !228, line: 148, size: 20736, elements: !282)
!282 = !{!283, !288, !292, !293, !297}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !281, file: !228, line: 149, baseType: !284, size: 192)
!284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 192, elements: !286)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!286 = !{!287}
!287 = !DISubrange(count: 3)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !281, file: !228, line: 150, baseType: !289, size: 4096, offset: 192)
!289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 4096, elements: !290)
!290 = !{!291}
!291 = !DISubrange(count: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !281, file: !228, line: 151, baseType: !269, size: 32, offset: 4288)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !281, file: !228, line: 152, baseType: !294, size: 16384, offset: 4320)
!294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 16384, elements: !295)
!295 = !{!296}
!296 = !DISubrange(count: 2048)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !281, file: !228, line: 153, baseType: !269, size: 32, offset: 20704)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !227, file: !228, line: 69, baseType: !299, size: 64, offset: 320)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !228, line: 138, size: 448, elements: !301)
!301 = !{!302, !306, !336, !338, !3200, !3228, !3232}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !300, file: !228, line: 139, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DISubroutineType(types: !305)
!305 = !{null, !236}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !300, file: !228, line: 140, baseType: !307, size: 64, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !309)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !310, line: 230, size: 128, elements: !311)
!310 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!311 = !{!312, !328}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !309, file: !310, line: 231, baseType: !313, size: 64)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = !DISubroutineType(types: !315)
!315 = !{!316, !236, !321, !285}
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !215, line: 60, baseType: !317)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !318, line: 73, baseType: !319)
!318 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !318, line: 15, baseType: !320)
!320 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !310, line: 30, size: 128, elements: !323)
!323 = !{!324, !325}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !322, file: !310, line: 31, baseType: !231, size: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !322, file: !310, line: 32, baseType: !326, size: 16, offset: 64)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !215, line: 19, baseType: !327)
!327 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !309, file: !310, line: 232, baseType: !329, size: 64, offset: 64)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = !DISubroutineType(types: !331)
!331 = !{!316, !236, !321, !231, !332}
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !215, line: 55, baseType: !333)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !318, line: 72, baseType: !334)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !318, line: 16, baseType: !335)
!335 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !300, file: !228, line: 141, baseType: !337, size: 64, offset: 128)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !300, file: !228, line: 142, baseType: !339, size: 64, offset: 192)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !310, line: 84, size: 320, elements: !343)
!343 = !{!344, !345, !349, !3197, !3198}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !342, file: !310, line: 85, baseType: !231, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !342, file: !310, line: 86, baseType: !346, size: 64, offset: 64)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DISubroutineType(types: !348)
!348 = !{!326, !236, !321, !269}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !342, file: !310, line: 88, baseType: !350, size: 64, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = !DISubroutineType(types: !352)
!352 = !{!326, !236, !353, !269}
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !310, line: 168, size: 448, elements: !355)
!355 = !{!356, !357, !358, !359, !3192, !3193}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !354, file: !310, line: 169, baseType: !322, size: 128)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !354, file: !310, line: 170, baseType: !332, size: 64, offset: 128)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !354, file: !310, line: 171, baseType: !209, size: 64, offset: 192)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !354, file: !310, line: 172, baseType: !360, size: 64, offset: 256)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DISubroutineType(types: !362)
!362 = !{!316, !363, !236, !353, !285, !542, !332}
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !365)
!365 = !{!366, !384, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3175, !3176, !3185, !3186, !3187, !3188, !3189, !3190, !3191}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !364, file: !44, line: 920, baseType: !367, size: 128)
!367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !364, file: !44, line: 917, size: 128, elements: !368)
!368 = !{!369, !375}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !367, file: !44, line: 918, baseType: !370, size: 64)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !371, line: 58, size: 64, elements: !372)
!371 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!372 = !{!373}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !370, file: !371, line: 59, baseType: !374, size: 64)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !367, file: !44, line: 919, baseType: !376, size: 128, align: 64)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !215, line: 216, size: 128, align: 64, elements: !377)
!377 = !{!378, !380}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !376, file: !215, line: 217, baseType: !379, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !376, file: !215, line: 218, baseType: !381, size: 64, offset: 64)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DISubroutineType(types: !383)
!383 = !{null, !379}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !364, file: !44, line: 921, baseType: !385, size: 128, offset: 128)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !386, line: 8, size: 128, elements: !387)
!386 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!387 = !{!388, !392}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !385, file: !386, line: 9, baseType: !389, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !391, line: 18, flags: DIFlagFwdDecl)
!391 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!392 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !385, file: !386, line: 10, baseType: !393, size: 64, offset: 64)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !391, line: 89, size: 1536, elements: !395)
!395 = !{!396, !397, !407, !415, !416, !439, !3125, !3127, !3139, !3140, !3141, !3142, !3143, !3149, !3150, !3151}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !394, file: !391, line: 91, baseType: !7, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !394, file: !391, line: 92, baseType: !398, size: 32, offset: 32)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !399, line: 277, baseType: !400)
!399 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !399, line: 277, size: 32, elements: !401)
!401 = !{!402}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !400, file: !399, line: 277, baseType: !403, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !399, line: 70, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !399, line: 65, size: 32, elements: !405)
!405 = !{!406}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !404, file: !399, line: 66, baseType: !7, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !394, file: !391, line: 93, baseType: !408, size: 128, offset: 64)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !409, line: 38, size: 128, elements: !410)
!409 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!410 = !{!411, !413}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !408, file: !409, line: 39, baseType: !412, size: 64)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !408, file: !409, line: 39, baseType: !414, size: 64, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !394, file: !391, line: 94, baseType: !393, size: 64, offset: 192)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !394, file: !391, line: 95, baseType: !417, size: 128, offset: 256)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !391, line: 47, size: 128, elements: !418)
!418 = !{!419, !435}
!419 = !DIDerivedType(tag: DW_TAG_member, scope: !417, file: !391, line: 48, baseType: !420, size: 64)
!420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !417, file: !391, line: 48, size: 64, elements: !421)
!421 = !{!422, !431}
!422 = !DIDerivedType(tag: DW_TAG_member, scope: !420, file: !391, line: 49, baseType: !423, size: 64)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !420, file: !391, line: 49, size: 64, elements: !424)
!424 = !{!425, !430}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !423, file: !391, line: 50, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !427, line: 21, baseType: !428)
!427 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !429, line: 27, baseType: !7)
!429 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!430 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !423, file: !391, line: 50, baseType: !426, size: 32, offset: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !420, file: !391, line: 52, baseType: !432, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !427, line: 23, baseType: !433)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !429, line: 31, baseType: !434)
!434 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !417, file: !391, line: 54, baseType: !436, size: 64, offset: 64)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !438)
!438 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !394, file: !391, line: 96, baseType: !440, size: 64, offset: 384)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !442)
!442 = !{!443, !444, !445, !453, !460, !461, !609, !2836, !2837, !2838, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !3101, !3109, !3110, !3111, !3121, !3122, !3123, !3124}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !441, file: !44, line: 611, baseType: !326, size: 16)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !441, file: !44, line: 612, baseType: !327, size: 16, offset: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !441, file: !44, line: 613, baseType: !446, size: 32, offset: 32)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !447, line: 23, baseType: !448)
!447 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !447, line: 21, size: 32, elements: !449)
!449 = !{!450}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !448, file: !447, line: 22, baseType: !451, size: 32)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !215, line: 32, baseType: !452)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !318, line: 49, baseType: !7)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !441, file: !44, line: 614, baseType: !454, size: 32, offset: 64)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !447, line: 28, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !447, line: 26, size: 32, elements: !456)
!456 = !{!457}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !455, file: !447, line: 27, baseType: !458, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !215, line: 33, baseType: !459)
!459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !318, line: 50, baseType: !7)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !441, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !441, file: !44, line: 622, baseType: !462, size: 64, offset: 128)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !464)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !465)
!465 = !{!466, !470, !483, !487, !493, !497, !503, !507, !511, !515, !519, !520, !526, !530, !556, !585, !589, !595, !600, !604, !605}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !464, file: !44, line: 1865, baseType: !467, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = !DISubroutineType(types: !469)
!469 = !{!393, !440, !393, !7}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !464, file: !44, line: 1866, baseType: !471, size: 64, offset: 64)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DISubroutineType(types: !473)
!473 = !{!231, !393, !440, !474}
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !476, line: 10, size: 128, elements: !477)
!476 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!477 = !{!478, !482}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !475, file: !476, line: 11, baseType: !479, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = !DISubroutineType(types: !481)
!481 = !{null, !209}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !475, file: !476, line: 12, baseType: !209, size: 64, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !464, file: !44, line: 1867, baseType: !484, size: 64, offset: 128)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DISubroutineType(types: !486)
!486 = !{!269, !440, !269}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !464, file: !44, line: 1868, baseType: !488, size: 64, offset: 192)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DISubroutineType(types: !490)
!490 = !{!491, !440, !269}
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !464, file: !44, line: 1870, baseType: !494, size: 64, offset: 256)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = !DISubroutineType(types: !496)
!496 = !{!269, !393, !285, !269}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !464, file: !44, line: 1872, baseType: !498, size: 64, offset: 320)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!499 = !DISubroutineType(types: !500)
!500 = !{!269, !440, !393, !326, !501}
!501 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !215, line: 30, baseType: !502)
!502 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !464, file: !44, line: 1873, baseType: !504, size: 64, offset: 384)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DISubroutineType(types: !506)
!506 = !{!269, !393, !440, !393}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !464, file: !44, line: 1874, baseType: !508, size: 64, offset: 448)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DISubroutineType(types: !510)
!510 = !{!269, !440, !393}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !464, file: !44, line: 1875, baseType: !512, size: 64, offset: 512)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = !DISubroutineType(types: !514)
!514 = !{!269, !440, !393, !231}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !464, file: !44, line: 1876, baseType: !516, size: 64, offset: 576)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DISubroutineType(types: !518)
!518 = !{!269, !440, !393, !326}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !464, file: !44, line: 1877, baseType: !508, size: 64, offset: 640)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !464, file: !44, line: 1878, baseType: !521, size: 64, offset: 704)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = !DISubroutineType(types: !523)
!523 = !{!269, !440, !393, !326, !524}
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !215, line: 16, baseType: !525)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !215, line: 13, baseType: !426)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !464, file: !44, line: 1879, baseType: !527, size: 64, offset: 768)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = !DISubroutineType(types: !529)
!529 = !{!269, !440, !393, !440, !393, !7}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !464, file: !44, line: 1881, baseType: !531, size: 64, offset: 832)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DISubroutineType(types: !533)
!533 = !{!269, !393, !534}
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !536)
!536 = !{!537, !538, !539, !540, !541, !545, !553, !554, !555}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !535, file: !44, line: 220, baseType: !7, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !535, file: !44, line: 221, baseType: !326, size: 16, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !535, file: !44, line: 222, baseType: !446, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !535, file: !44, line: 223, baseType: !454, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !535, file: !44, line: 224, baseType: !542, size: 64, offset: 128)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !215, line: 46, baseType: !543)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !318, line: 88, baseType: !544)
!544 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !535, file: !44, line: 225, baseType: !546, size: 128, offset: 192)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !547, line: 13, size: 128, elements: !548)
!547 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!548 = !{!549, !552}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !546, file: !547, line: 14, baseType: !550, size: 64)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !547, line: 8, baseType: !551)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !429, line: 30, baseType: !544)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !546, file: !547, line: 15, baseType: !320, size: 64, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !535, file: !44, line: 226, baseType: !546, size: 128, offset: 320)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !535, file: !44, line: 227, baseType: !546, size: 128, offset: 448)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !535, file: !44, line: 234, baseType: !363, size: 64, offset: 576)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !464, file: !44, line: 1882, baseType: !557, size: 64, offset: 896)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DISubroutineType(types: !559)
!559 = !{!269, !560, !562, !426, !7}
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !385)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !564, line: 22, size: 1152, elements: !565)
!564 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!565 = !{!566, !567, !568, !569, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !563, file: !564, line: 23, baseType: !426, size: 32)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !563, file: !564, line: 24, baseType: !326, size: 16, offset: 32)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !563, file: !564, line: 25, baseType: !7, size: 32, offset: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !563, file: !564, line: 26, baseType: !570, size: 32, offset: 96)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !215, line: 104, baseType: !426)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !563, file: !564, line: 27, baseType: !432, size: 64, offset: 128)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !563, file: !564, line: 28, baseType: !432, size: 64, offset: 192)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !563, file: !564, line: 37, baseType: !432, size: 64, offset: 256)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !563, file: !564, line: 38, baseType: !524, size: 32, offset: 320)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !563, file: !564, line: 39, baseType: !524, size: 32, offset: 352)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !563, file: !564, line: 40, baseType: !446, size: 32, offset: 384)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !563, file: !564, line: 41, baseType: !454, size: 32, offset: 416)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !563, file: !564, line: 42, baseType: !542, size: 64, offset: 448)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !563, file: !564, line: 43, baseType: !546, size: 128, offset: 512)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !563, file: !564, line: 44, baseType: !546, size: 128, offset: 640)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !563, file: !564, line: 45, baseType: !546, size: 128, offset: 768)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !563, file: !564, line: 46, baseType: !546, size: 128, offset: 896)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !563, file: !564, line: 47, baseType: !432, size: 64, offset: 1024)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !563, file: !564, line: 48, baseType: !432, size: 64, offset: 1088)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !464, file: !44, line: 1883, baseType: !586, size: 64, offset: 960)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DISubroutineType(types: !588)
!588 = !{!316, !393, !285, !332}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !464, file: !44, line: 1884, baseType: !590, size: 64, offset: 1024)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DISubroutineType(types: !592)
!592 = !{!269, !440, !593, !432, !432}
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !464, file: !44, line: 1886, baseType: !596, size: 64, offset: 1088)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DISubroutineType(types: !598)
!598 = !{!269, !440, !599, !269}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !464, file: !44, line: 1887, baseType: !601, size: 64, offset: 1152)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DISubroutineType(types: !603)
!603 = !{!269, !440, !393, !363, !7, !326}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !464, file: !44, line: 1890, baseType: !516, size: 64, offset: 1216)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !464, file: !44, line: 1891, baseType: !606, size: 64, offset: 1280)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DISubroutineType(types: !608)
!608 = !{!269, !440, !491, !269}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !441, file: !44, line: 623, baseType: !610, size: 64, offset: 192)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !612)
!612 = !{!613, !614, !615, !616, !617, !618, !667, !2443, !2525, !2608, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2624, !2628, !2629, !2632, !2633, !2636, !2637, !2638, !2679, !2706, !2707, !2708, !2709, !2710, !2711, !2714, !2716, !2723, !2724, !2726, !2727, !2728, !2787, !2788, !2803, !2804, !2805, !2806, !2807, !2810, !2811, !2812, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !611, file: !44, line: 1417, baseType: !214, size: 128)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !611, file: !44, line: 1418, baseType: !524, size: 32, offset: 128)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !611, file: !44, line: 1419, baseType: !438, size: 8, offset: 160)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !611, file: !44, line: 1420, baseType: !335, size: 64, offset: 192)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !611, file: !44, line: 1421, baseType: !542, size: 64, offset: 256)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !611, file: !44, line: 1422, baseType: !619, size: 64, offset: 320)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !621)
!621 = !{!622, !623, !624, !630, !634, !638, !642, !646, !647, !657, !660, !661, !662, !664, !665, !666}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !620, file: !44, line: 2229, baseType: !231, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !620, file: !44, line: 2230, baseType: !269, size: 32, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !620, file: !44, line: 2238, baseType: !625, size: 64, offset: 128)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DISubroutineType(types: !627)
!627 = !{!269, !628}
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !44, line: 69, flags: DIFlagFwdDecl)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !620, file: !44, line: 2239, baseType: !631, size: 64, offset: 192)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !633)
!633 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !620, file: !44, line: 2240, baseType: !635, size: 64, offset: 256)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DISubroutineType(types: !637)
!637 = !{!393, !619, !269, !231, !209}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !620, file: !44, line: 2242, baseType: !639, size: 64, offset: 320)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DISubroutineType(types: !641)
!641 = !{null, !610}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !620, file: !44, line: 2243, baseType: !643, size: 64, offset: 384)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !645, line: 76, flags: DIFlagFwdDecl)
!645 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!646 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !620, file: !44, line: 2244, baseType: !619, size: 64, offset: 448)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !620, file: !44, line: 2245, baseType: !648, size: 64, offset: 512)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !215, line: 182, size: 64, elements: !649)
!649 = !{!650}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !648, file: !215, line: 183, baseType: !651, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !215, line: 186, size: 128, elements: !653)
!653 = !{!654, !655}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !652, file: !215, line: 187, baseType: !651, size: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !652, file: !215, line: 187, baseType: !656, size: 64, offset: 64)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !620, file: !44, line: 2247, baseType: !658, offset: 576)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !659, line: 187, elements: !257)
!659 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!660 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !620, file: !44, line: 2248, baseType: !658, offset: 576)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !620, file: !44, line: 2249, baseType: !658, offset: 576)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !620, file: !44, line: 2250, baseType: !663, offset: 576)
!663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !658, elements: !286)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !620, file: !44, line: 2252, baseType: !658, offset: 576)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !620, file: !44, line: 2253, baseType: !658, offset: 576)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !620, file: !44, line: 2254, baseType: !658, offset: 576)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !611, file: !44, line: 1423, baseType: !668, size: 64, offset: 384)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !670)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !671)
!671 = !{!672, !676, !680, !681, !685, !691, !695, !696, !697, !701, !705, !706, !707, !708, !714, !719, !720, !727, !728, !729, !730, !2427, !2442}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !670, file: !44, line: 1936, baseType: !673, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DISubroutineType(types: !675)
!675 = !{!440, !610}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !670, file: !44, line: 1937, baseType: !677, size: 64, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{null, !440}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !670, file: !44, line: 1938, baseType: !677, size: 64, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !670, file: !44, line: 1940, baseType: !682, size: 64, offset: 192)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DISubroutineType(types: !684)
!684 = !{null, !440, !269}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !670, file: !44, line: 1941, baseType: !686, size: 64, offset: 256)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = !DISubroutineType(types: !688)
!688 = !{!269, !440, !689}
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !670, file: !44, line: 1942, baseType: !692, size: 64, offset: 320)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DISubroutineType(types: !694)
!694 = !{!269, !440}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !670, file: !44, line: 1943, baseType: !677, size: 64, offset: 384)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !670, file: !44, line: 1944, baseType: !639, size: 64, offset: 448)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !670, file: !44, line: 1945, baseType: !698, size: 64, offset: 512)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DISubroutineType(types: !700)
!700 = !{!269, !610, !269}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !670, file: !44, line: 1946, baseType: !702, size: 64, offset: 576)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = !DISubroutineType(types: !704)
!704 = !{!269, !610}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !670, file: !44, line: 1947, baseType: !702, size: 64, offset: 640)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !670, file: !44, line: 1948, baseType: !702, size: 64, offset: 704)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !670, file: !44, line: 1949, baseType: !702, size: 64, offset: 768)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !670, file: !44, line: 1950, baseType: !709, size: 64, offset: 832)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = !DISubroutineType(types: !711)
!711 = !{!269, !393, !712}
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !670, file: !44, line: 1951, baseType: !715, size: 64, offset: 896)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{!269, !610, !718, !285}
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !670, file: !44, line: 1952, baseType: !639, size: 64, offset: 960)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !670, file: !44, line: 1954, baseType: !721, size: 64, offset: 1024)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DISubroutineType(types: !723)
!723 = !{!269, !724, !393}
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !726, line: 539, flags: DIFlagFwdDecl)
!726 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!727 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !670, file: !44, line: 1955, baseType: !721, size: 64, offset: 1088)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !670, file: !44, line: 1956, baseType: !721, size: 64, offset: 1152)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !670, file: !44, line: 1957, baseType: !721, size: 64, offset: 1216)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !670, file: !44, line: 1963, baseType: !731, size: 64, offset: 1280)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DISubroutineType(types: !733)
!733 = !{!269, !610, !734, !757}
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !736, line: 68, size: 512, align: 128, elements: !737)
!736 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!737 = !{!738, !739, !2419, !2426}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !735, file: !736, line: 69, baseType: !335, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, scope: !735, file: !736, line: 77, baseType: !740, size: 320, offset: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !735, file: !736, line: 77, size: 320, elements: !741)
!741 = !{!742, !930, !935, !963, !971, !977, !2350, !2418}
!742 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 78, baseType: !743, size: 320)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 78, size: 320, elements: !744)
!744 = !{!745, !746, !928, !929}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !743, file: !736, line: 84, baseType: !214, size: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !743, file: !736, line: 86, baseType: !747, size: 64, offset: 128)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !749)
!749 = !{!750, !751, !759, !760, !765, !780, !796, !797, !798, !799, !921, !922, !925, !926, !927}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !748, file: !44, line: 452, baseType: !440, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !748, file: !44, line: 453, baseType: !752, size: 128, offset: 64)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !753, line: 292, size: 128, elements: !754)
!753 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!754 = !{!755, !756, !758}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !752, file: !753, line: 293, baseType: !243)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !752, file: !753, line: 295, baseType: !757, size: 32)
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !215, line: 148, baseType: !7)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !752, file: !753, line: 296, baseType: !209, size: 64, offset: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !748, file: !44, line: 454, baseType: !757, size: 32, offset: 192)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !748, file: !44, line: 455, baseType: !761, size: 32, offset: 224)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !215, line: 168, baseType: !762)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !215, line: 166, size: 32, elements: !763)
!763 = !{!764}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !762, file: !215, line: 167, baseType: !269, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !748, file: !44, line: 460, baseType: !766, size: 128, offset: 256)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !767, line: 125, size: 128, elements: !768)
!767 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!768 = !{!769, !779}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !766, file: !767, line: 126, baseType: !770, size: 64)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !767, line: 31, size: 64, elements: !771)
!771 = !{!772}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !770, file: !767, line: 32, baseType: !773, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !767, line: 24, size: 192, align: 64, elements: !775)
!775 = !{!776, !777, !778}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !774, file: !767, line: 25, baseType: !335, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !774, file: !767, line: 26, baseType: !773, size: 64, offset: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !774, file: !767, line: 27, baseType: !773, size: 64, offset: 128)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !766, file: !767, line: 127, baseType: !773, size: 64, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !748, file: !44, line: 461, baseType: !781, size: 256, offset: 384)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !782, line: 35, size: 256, elements: !783)
!782 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!783 = !{!784, !792, !793, !795}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !781, file: !782, line: 36, baseType: !785, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !786, line: 13, baseType: !787)
!786 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !215, line: 175, baseType: !788)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !215, line: 173, size: 64, elements: !789)
!789 = !{!790}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !788, file: !215, line: 174, baseType: !791, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !427, line: 22, baseType: !551)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !781, file: !782, line: 42, baseType: !785, size: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !781, file: !782, line: 46, baseType: !794, offset: 128)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !244, line: 29, baseType: !251)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !781, file: !782, line: 47, baseType: !214, size: 128, offset: 128)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !748, file: !44, line: 462, baseType: !335, size: 64, offset: 640)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !748, file: !44, line: 463, baseType: !335, size: 64, offset: 704)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !748, file: !44, line: 464, baseType: !335, size: 64, offset: 768)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !748, file: !44, line: 465, baseType: !800, size: 64, offset: 832)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !802)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !803)
!803 = !{!804, !808, !812, !816, !820, !824, !830, !836, !840, !845, !849, !853, !857, !885, !889, !895, !896, !897, !901, !906, !910, !917}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !802, file: !44, line: 368, baseType: !805, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DISubroutineType(types: !807)
!807 = !{!269, !734, !689}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !802, file: !44, line: 369, baseType: !809, size: 64, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!269, !363, !734}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !802, file: !44, line: 372, baseType: !813, size: 64, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DISubroutineType(types: !815)
!815 = !{!269, !747, !689}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !802, file: !44, line: 375, baseType: !817, size: 64, offset: 192)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DISubroutineType(types: !819)
!819 = !{!269, !734}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !802, file: !44, line: 381, baseType: !821, size: 64, offset: 256)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DISubroutineType(types: !823)
!823 = !{!269, !363, !747, !218, !7}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !802, file: !44, line: 383, baseType: !825, size: 64, offset: 320)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{null, !828}
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !802, file: !44, line: 385, baseType: !831, size: 64, offset: 384)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!269, !363, !747, !542, !7, !7, !834, !835}
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !802, file: !44, line: 388, baseType: !837, size: 64, offset: 448)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{!269, !363, !747, !542, !7, !7, !734, !209}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !802, file: !44, line: 393, baseType: !841, size: 64, offset: 512)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DISubroutineType(types: !843)
!843 = !{!844, !747, !844}
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !215, line: 125, baseType: !432)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !802, file: !44, line: 394, baseType: !846, size: 64, offset: 576)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DISubroutineType(types: !848)
!848 = !{null, !734, !7, !7}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !802, file: !44, line: 395, baseType: !850, size: 64, offset: 640)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!269, !734, !757}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !802, file: !44, line: 396, baseType: !854, size: 64, offset: 704)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{null, !734}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !802, file: !44, line: 397, baseType: !858, size: 64, offset: 768)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DISubroutineType(types: !860)
!860 = !{!316, !861, !883}
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !863)
!863 = !{!864, !865, !866, !870, !871, !872, !875, !876}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !862, file: !44, line: 321, baseType: !363, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !862, file: !44, line: 326, baseType: !542, size: 64, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !862, file: !44, line: 327, baseType: !867, size: 64, offset: 128)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{null, !861, !320, !320}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !862, file: !44, line: 328, baseType: !209, size: 64, offset: 192)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !862, file: !44, line: 329, baseType: !269, size: 32, offset: 256)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !862, file: !44, line: 330, baseType: !873, size: 16, offset: 288)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !427, line: 19, baseType: !874)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !429, line: 24, baseType: !327)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !862, file: !44, line: 331, baseType: !873, size: 16, offset: 304)
!876 = !DIDerivedType(tag: DW_TAG_member, scope: !862, file: !44, line: 332, baseType: !877, size: 64, offset: 320)
!877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !862, file: !44, line: 332, size: 64, elements: !878)
!878 = !{!879, !880}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !877, file: !44, line: 333, baseType: !7, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !877, file: !44, line: 334, baseType: !881, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !802, file: !44, line: 402, baseType: !886, size: 64, offset: 832)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!269, !747, !734, !734, !5}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !802, file: !44, line: 404, baseType: !890, size: 64, offset: 896)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DISubroutineType(types: !892)
!892 = !{!501, !734, !893}
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !894, line: 305, baseType: !7)
!894 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!895 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !802, file: !44, line: 405, baseType: !854, size: 64, offset: 960)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !802, file: !44, line: 406, baseType: !817, size: 64, offset: 1024)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !802, file: !44, line: 407, baseType: !898, size: 64, offset: 1088)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DISubroutineType(types: !900)
!900 = !{!269, !734, !335, !335}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !802, file: !44, line: 409, baseType: !902, size: 64, offset: 1152)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{null, !734, !905, !905}
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !802, file: !44, line: 410, baseType: !907, size: 64, offset: 1216)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{!269, !747, !734}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !802, file: !44, line: 413, baseType: !911, size: 64, offset: 1280)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!269, !914, !363, !916}
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !802, file: !44, line: 415, baseType: !918, size: 64, offset: 1344)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{null, !363}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !748, file: !44, line: 466, baseType: !335, size: 64, offset: 896)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !748, file: !44, line: 467, baseType: !923, size: 32, offset: 960)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !924, line: 8, baseType: !426)
!924 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!925 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !748, file: !44, line: 468, baseType: !243, offset: 992)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !748, file: !44, line: 469, baseType: !214, size: 128, offset: 1024)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !748, file: !44, line: 470, baseType: !209, size: 64, offset: 1152)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !743, file: !736, line: 87, baseType: !335, size: 64, offset: 192)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !743, file: !736, line: 94, baseType: !335, size: 64, offset: 256)
!930 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 96, baseType: !931, size: 64)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 96, size: 64, elements: !932)
!932 = !{!933}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !931, file: !736, line: 101, baseType: !934, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !215, line: 143, baseType: !432)
!935 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 103, baseType: !936, size: 320)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 103, size: 320, elements: !937)
!937 = !{!938, !948, !951, !952}
!938 = !DIDerivedType(tag: DW_TAG_member, scope: !936, file: !736, line: 104, baseType: !939, size: 128)
!939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !936, file: !736, line: 104, size: 128, elements: !940)
!940 = !{!941, !942}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !939, file: !736, line: 105, baseType: !214, size: 128)
!942 = !DIDerivedType(tag: DW_TAG_member, scope: !939, file: !736, line: 106, baseType: !943, size: 128)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !939, file: !736, line: 106, size: 128, elements: !944)
!944 = !{!945, !946, !947}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !943, file: !736, line: 107, baseType: !734, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !943, file: !736, line: 109, baseType: !269, size: 32, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !943, file: !736, line: 110, baseType: !269, size: 32, offset: 96)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !936, file: !736, line: 117, baseType: !949, size: 64, offset: 128)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !736, line: 117, flags: DIFlagFwdDecl)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !936, file: !736, line: 119, baseType: !209, size: 64, offset: 192)
!952 = !DIDerivedType(tag: DW_TAG_member, scope: !936, file: !736, line: 120, baseType: !953, size: 64, offset: 256)
!953 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !936, file: !736, line: 120, size: 64, elements: !954)
!954 = !{!955, !956, !957}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !953, file: !736, line: 121, baseType: !209, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !953, file: !736, line: 122, baseType: !335, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, scope: !953, file: !736, line: 123, baseType: !958, size: 32)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !953, file: !736, line: 123, size: 32, elements: !959)
!959 = !{!960, !961, !962}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !958, file: !736, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !958, file: !736, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !958, file: !736, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!963 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 130, baseType: !964, size: 192)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 130, size: 192, elements: !965)
!965 = !{!966, !967, !968, !969, !970}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !964, file: !736, line: 131, baseType: !335, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !964, file: !736, line: 134, baseType: !438, size: 8, offset: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !964, file: !736, line: 135, baseType: !438, size: 8, offset: 72)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !964, file: !736, line: 136, baseType: !761, size: 32, offset: 96)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !964, file: !736, line: 137, baseType: !7, size: 32, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 139, baseType: !972, size: 256)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 139, size: 256, elements: !973)
!973 = !{!974, !975, !976}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !972, file: !736, line: 140, baseType: !335, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !972, file: !736, line: 141, baseType: !761, size: 32, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !972, file: !736, line: 143, baseType: !214, size: 128, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 145, baseType: !978, size: 256)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 145, size: 256, elements: !979)
!979 = !{!980, !981, !983, !984, !2349}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !978, file: !736, line: 146, baseType: !335, size: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !978, file: !736, line: 147, baseType: !982, size: 64, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !726, line: 509, baseType: !734)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !978, file: !736, line: 148, baseType: !335, size: 64, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, scope: !978, file: !736, line: 149, baseType: !985, size: 64, offset: 192)
!985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !978, file: !736, line: 149, size: 64, elements: !986)
!986 = !{!987, !2348}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !985, file: !736, line: 150, baseType: !988, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !736, line: 388, size: 7296, elements: !990)
!990 = !{!991, !2344}
!991 = !DIDerivedType(tag: DW_TAG_member, scope: !989, file: !736, line: 389, baseType: !992, size: 7296)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !989, file: !736, line: 389, size: 7296, elements: !993)
!993 = !{!994, !1112, !1113, !1114, !1118, !1119, !1120, !1121, !1122, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1163, !1171, !1174, !1220, !1221, !2328, !2329, !2332, !2333, !2334, !2337, !2338, !2339, !2342, !2343}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !992, file: !736, line: 390, baseType: !995, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !736, line: 305, size: 1472, elements: !997)
!997 = !{!998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1012, !1013, !1018, !1019, !1022, !1106, !1107, !1108, !1109, !1110}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !996, file: !736, line: 308, baseType: !335, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !996, file: !736, line: 309, baseType: !335, size: 64, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !996, file: !736, line: 313, baseType: !995, size: 64, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !996, file: !736, line: 313, baseType: !995, size: 64, offset: 192)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !996, file: !736, line: 315, baseType: !774, size: 192, align: 64, offset: 256)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !996, file: !736, line: 323, baseType: !335, size: 64, offset: 448)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !996, file: !736, line: 327, baseType: !988, size: 64, offset: 512)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !996, file: !736, line: 333, baseType: !1006, size: 64, offset: 576)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !726, line: 284, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !726, line: 284, size: 64, elements: !1008)
!1008 = !{!1009}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1007, file: !726, line: 284, baseType: !1010, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1011, line: 19, baseType: !335)
!1011 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !996, file: !736, line: 334, baseType: !335, size: 64, offset: 640)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !996, file: !736, line: 343, baseType: !1014, size: 256, offset: 704)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !996, file: !736, line: 340, size: 256, elements: !1015)
!1015 = !{!1016, !1017}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1014, file: !736, line: 341, baseType: !774, size: 192, align: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1014, file: !736, line: 342, baseType: !335, size: 64, offset: 192)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !996, file: !736, line: 351, baseType: !214, size: 128, offset: 960)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !996, file: !736, line: 353, baseType: !1020, size: 64, offset: 1088)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !736, line: 353, flags: DIFlagFwdDecl)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !996, file: !736, line: 356, baseType: !1023, size: 64, offset: 1152)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1025)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1026)
!1026 = !{!1027, !1031, !1032, !1036, !1040, !1080, !1084, !1088, !1092, !1093, !1094, !1098, !1102}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1025, file: !14, line: 558, baseType: !1028, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{null, !995}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1025, file: !14, line: 559, baseType: !1028, size: 64, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1025, file: !14, line: 560, baseType: !1033, size: 64, offset: 128)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!269, !995, !335}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1025, file: !14, line: 561, baseType: !1037, size: 64, offset: 192)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!269, !995}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1025, file: !14, line: 562, baseType: !1041, size: 64, offset: 256)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{!1044, !1045}
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !736, line: 682, baseType: !7)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1047)
!1047 = !{!1048, !1049, !1050, !1051, !1052, !1053, !1060, !1067, !1073, !1074, !1075, !1077, !1079}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1046, file: !14, line: 509, baseType: !995, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1046, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1046, file: !14, line: 511, baseType: !757, size: 32, offset: 96)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1046, file: !14, line: 512, baseType: !335, size: 64, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1046, file: !14, line: 513, baseType: !335, size: 64, offset: 192)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1046, file: !14, line: 514, baseType: !1054, size: 64, offset: 256)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !726, line: 385, baseType: !1056)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !726, line: 385, size: 64, elements: !1057)
!1057 = !{!1058}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1056, file: !726, line: 385, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1011, line: 15, baseType: !335)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1046, file: !14, line: 516, baseType: !1061, size: 64, offset: 320)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !726, line: 359, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !726, line: 359, size: 64, elements: !1064)
!1064 = !{!1065}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1063, file: !726, line: 359, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1011, line: 16, baseType: !335)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1046, file: !14, line: 519, baseType: !1068, size: 64, offset: 384)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1011, line: 21, baseType: !1069)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1011, line: 21, size: 64, elements: !1070)
!1070 = !{!1071}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1069, file: !1011, line: 21, baseType: !1072, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1011, line: 14, baseType: !335)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1046, file: !14, line: 521, baseType: !734, size: 64, offset: 448)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1046, file: !14, line: 522, baseType: !734, size: 64, offset: 512)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1046, file: !14, line: 528, baseType: !1076, size: 64, offset: 576)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1046, file: !14, line: 532, baseType: !1078, size: 64, offset: 640)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1046, file: !14, line: 536, baseType: !982, size: 64, offset: 704)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1025, file: !14, line: 563, baseType: !1081, size: 64, offset: 320)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!1044, !1045, !13}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1025, file: !14, line: 565, baseType: !1085, size: 64, offset: 384)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{null, !1045, !335, !335}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1025, file: !14, line: 567, baseType: !1089, size: 64, offset: 448)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!335, !995}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1025, file: !14, line: 571, baseType: !1041, size: 64, offset: 512)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1025, file: !14, line: 574, baseType: !1041, size: 64, offset: 576)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1025, file: !14, line: 579, baseType: !1095, size: 64, offset: 640)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!269, !995, !335, !209, !269, !269}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1025, file: !14, line: 585, baseType: !1099, size: 64, offset: 704)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!231, !995}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1025, file: !14, line: 615, baseType: !1103, size: 64, offset: 768)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!734, !995, !335}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !996, file: !736, line: 359, baseType: !335, size: 64, offset: 1216)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !996, file: !736, line: 361, baseType: !363, size: 64, offset: 1280)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !996, file: !736, line: 362, baseType: !209, size: 64, offset: 1344)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !996, file: !736, line: 365, baseType: !785, size: 64, offset: 1408)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !996, file: !736, line: 373, baseType: !1111, offset: 1472)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !736, line: 296, elements: !257)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !992, file: !736, line: 391, baseType: !770, size: 64, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !992, file: !736, line: 392, baseType: !432, size: 64, offset: 128)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !992, file: !736, line: 394, baseType: !1115, size: 64, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!335, !363, !335, !335, !335, !335}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !992, file: !736, line: 398, baseType: !335, size: 64, offset: 256)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !992, file: !736, line: 399, baseType: !335, size: 64, offset: 320)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !992, file: !736, line: 405, baseType: !335, size: 64, offset: 384)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !992, file: !736, line: 406, baseType: !335, size: 64, offset: 448)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !992, file: !736, line: 407, baseType: !1123, size: 64, offset: 512)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !726, line: 286, baseType: !1125)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !726, line: 286, size: 64, elements: !1126)
!1126 = !{!1127}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1125, file: !726, line: 286, baseType: !1128, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1011, line: 18, baseType: !335)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !992, file: !736, line: 416, baseType: !761, size: 32, offset: 576)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !992, file: !736, line: 428, baseType: !761, size: 32, offset: 608)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !992, file: !736, line: 437, baseType: !761, size: 32, offset: 640)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !992, file: !736, line: 447, baseType: !761, size: 32, offset: 672)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !992, file: !736, line: 450, baseType: !785, size: 64, offset: 704)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !992, file: !736, line: 452, baseType: !269, size: 32, offset: 768)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !992, file: !736, line: 454, baseType: !243, offset: 800)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !992, file: !736, line: 457, baseType: !781, size: 256, offset: 832)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !992, file: !736, line: 459, baseType: !214, size: 128, offset: 1088)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !992, file: !736, line: 466, baseType: !335, size: 64, offset: 1216)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !992, file: !736, line: 467, baseType: !335, size: 64, offset: 1280)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !992, file: !736, line: 469, baseType: !335, size: 64, offset: 1344)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !992, file: !736, line: 470, baseType: !335, size: 64, offset: 1408)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !992, file: !736, line: 471, baseType: !787, size: 64, offset: 1472)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !992, file: !736, line: 472, baseType: !335, size: 64, offset: 1536)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !992, file: !736, line: 473, baseType: !335, size: 64, offset: 1600)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !992, file: !736, line: 474, baseType: !335, size: 64, offset: 1664)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !992, file: !736, line: 475, baseType: !335, size: 64, offset: 1728)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !992, file: !736, line: 477, baseType: !243, offset: 1792)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !992, file: !736, line: 478, baseType: !335, size: 64, offset: 1792)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !992, file: !736, line: 478, baseType: !335, size: 64, offset: 1856)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !992, file: !736, line: 478, baseType: !335, size: 64, offset: 1920)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !992, file: !736, line: 478, baseType: !335, size: 64, offset: 1984)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !992, file: !736, line: 479, baseType: !335, size: 64, offset: 2048)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !992, file: !736, line: 479, baseType: !335, size: 64, offset: 2112)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !992, file: !736, line: 479, baseType: !335, size: 64, offset: 2176)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !992, file: !736, line: 480, baseType: !335, size: 64, offset: 2240)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !992, file: !736, line: 480, baseType: !335, size: 64, offset: 2304)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !992, file: !736, line: 480, baseType: !335, size: 64, offset: 2368)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !992, file: !736, line: 480, baseType: !335, size: 64, offset: 2432)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !992, file: !736, line: 482, baseType: !1160, size: 2816, offset: 2496)
!1160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 2816, elements: !1161)
!1161 = !{!1162}
!1162 = !DISubrange(count: 44)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !992, file: !736, line: 488, baseType: !1164, size: 256, offset: 5312)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1165, line: 60, size: 256, elements: !1166)
!1165 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1166 = !{!1167}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1164, file: !1165, line: 61, baseType: !1168, size: 256)
!1168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !785, size: 256, elements: !1169)
!1169 = !{!1170}
!1170 = !DISubrange(count: 4)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !992, file: !736, line: 490, baseType: !1172, size: 64, offset: 5568)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !736, line: 490, flags: DIFlagFwdDecl)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !992, file: !736, line: 493, baseType: !1175, size: 896, offset: 5632)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1176, line: 53, baseType: !1177)
!1176 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1176, line: 13, size: 896, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1185, !1186, !1193, !1194, !1214, !1215, !1216}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1177, file: !1176, line: 18, baseType: !432, size: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1177, file: !1176, line: 28, baseType: !787, size: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1177, file: !1176, line: 31, baseType: !781, size: 256, offset: 128)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1177, file: !1176, line: 32, baseType: !1183, size: 64, offset: 384)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1176, line: 32, flags: DIFlagFwdDecl)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1177, file: !1176, line: 37, baseType: !327, size: 16, offset: 448)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1177, file: !1176, line: 40, baseType: !1187, size: 192, offset: 512)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1188, line: 53, size: 192, elements: !1189)
!1188 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1189 = !{!1190, !1191, !1192}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1187, file: !1188, line: 54, baseType: !785, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1187, file: !1188, line: 55, baseType: !243, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1187, file: !1188, line: 59, baseType: !214, size: 128, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1177, file: !1176, line: 41, baseType: !209, size: 64, offset: 704)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1177, file: !1176, line: 42, baseType: !1195, size: 64, offset: 768)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1198, line: 13, size: 896, elements: !1199)
!1198 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1199 = !{!1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1197, file: !1198, line: 14, baseType: !209, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1197, file: !1198, line: 15, baseType: !335, size: 64, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1197, file: !1198, line: 17, baseType: !335, size: 64, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1197, file: !1198, line: 17, baseType: !335, size: 64, offset: 192)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1197, file: !1198, line: 19, baseType: !320, size: 64, offset: 256)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1197, file: !1198, line: 21, baseType: !320, size: 64, offset: 320)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1197, file: !1198, line: 22, baseType: !320, size: 64, offset: 384)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1197, file: !1198, line: 23, baseType: !320, size: 64, offset: 448)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1197, file: !1198, line: 24, baseType: !320, size: 64, offset: 512)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1197, file: !1198, line: 25, baseType: !320, size: 64, offset: 576)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1197, file: !1198, line: 26, baseType: !320, size: 64, offset: 640)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1197, file: !1198, line: 27, baseType: !320, size: 64, offset: 704)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1197, file: !1198, line: 28, baseType: !320, size: 64, offset: 768)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1197, file: !1198, line: 29, baseType: !320, size: 64, offset: 832)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1177, file: !1176, line: 44, baseType: !761, size: 32, offset: 832)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1177, file: !1176, line: 50, baseType: !873, size: 16, offset: 864)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1177, file: !1176, line: 51, baseType: !1217, size: 16, offset: 880)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !427, line: 18, baseType: !1218)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !429, line: 23, baseType: !1219)
!1219 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !992, file: !736, line: 495, baseType: !335, size: 64, offset: 6528)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !992, file: !736, line: 497, baseType: !1222, size: 64, offset: 6592)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !736, line: 381, size: 384, elements: !1224)
!1224 = !{!1225, !1226, !2327}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1223, file: !736, line: 382, baseType: !761, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1223, file: !736, line: 383, baseType: !1227, size: 128, offset: 64)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !736, line: 376, size: 128, elements: !1228)
!1228 = !{!1229, !2325}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1227, file: !736, line: 377, baseType: !1230, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1232, line: 640, size: 48640, elements: !1233)
!1232 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1233 = !{!1234, !1240, !1242, !1243, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1260, !1278, !1289, !1374, !1375, !1376, !1387, !1388, !1390, !1391, !1392, !1393, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1472, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1510, !1512, !1513, !1514, !1526, !1527, !1528, !1529, !1530, !1531, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1555, !1560, !1744, !1745, !1746, !1747, !1751, !1754, !1757, !1760, !1763, !1766, !1867, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1913, !1914, !1915, !1916, !1917, !1922, !1923, !1924, !1927, !1928, !1931, !1934, !1937, !1940, !1983, !1986, !1987, !2066, !2067, !2070, !2071, !2074, !2075, !2076, !2080, !2081, !2082, !2095, !2096, !2097, !2107, !2112, !2115, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1231, file: !1232, line: 646, baseType: !1235, size: 128)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1236, line: 56, size: 128, elements: !1237)
!1236 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1235, file: !1236, line: 57, baseType: !335, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1235, file: !1236, line: 58, baseType: !426, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1231, file: !1232, line: 649, baseType: !1241, size: 64, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !320)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1231, file: !1232, line: 657, baseType: !209, size: 64, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1231, file: !1232, line: 658, baseType: !1244, size: 32, offset: 256)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1245, line: 113, baseType: !1246)
!1245 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1245, line: 111, size: 32, elements: !1247)
!1247 = !{!1248}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1246, file: !1245, line: 112, baseType: !761, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1231, file: !1232, line: 660, baseType: !7, size: 32, offset: 288)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1231, file: !1232, line: 661, baseType: !7, size: 32, offset: 320)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1231, file: !1232, line: 684, baseType: !269, size: 32, offset: 352)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1231, file: !1232, line: 686, baseType: !269, size: 32, offset: 384)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1231, file: !1232, line: 687, baseType: !269, size: 32, offset: 416)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1231, file: !1232, line: 688, baseType: !269, size: 32, offset: 448)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1231, file: !1232, line: 689, baseType: !7, size: 32, offset: 480)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1231, file: !1232, line: 691, baseType: !1257, size: 64, offset: 512)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1259)
!1259 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1232, line: 691, flags: DIFlagFwdDecl)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1231, file: !1232, line: 692, baseType: !1261, size: 832, offset: 576)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1232, line: 451, size: 832, elements: !1262)
!1262 = !{!1263, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1261, file: !1232, line: 453, baseType: !1264, size: 128)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1232, line: 325, size: 128, elements: !1265)
!1265 = !{!1266, !1267}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1264, file: !1232, line: 326, baseType: !335, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1264, file: !1232, line: 327, baseType: !426, size: 32, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1261, file: !1232, line: 454, baseType: !774, size: 192, align: 64, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1261, file: !1232, line: 455, baseType: !214, size: 128, offset: 320)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1261, file: !1232, line: 456, baseType: !7, size: 32, offset: 448)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1261, file: !1232, line: 458, baseType: !432, size: 64, offset: 512)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1261, file: !1232, line: 459, baseType: !432, size: 64, offset: 576)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1261, file: !1232, line: 460, baseType: !432, size: 64, offset: 640)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1261, file: !1232, line: 461, baseType: !432, size: 64, offset: 704)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1261, file: !1232, line: 463, baseType: !432, size: 64, offset: 768)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1261, file: !1232, line: 465, baseType: !1277, offset: 832)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1232, line: 415, elements: !257)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1231, file: !1232, line: 693, baseType: !1279, size: 384, offset: 1408)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1232, line: 489, size: 384, elements: !1280)
!1280 = !{!1281, !1282, !1283, !1284, !1285, !1286, !1287}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1279, file: !1232, line: 490, baseType: !214, size: 128)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1279, file: !1232, line: 491, baseType: !335, size: 64, offset: 128)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1279, file: !1232, line: 492, baseType: !335, size: 64, offset: 192)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1279, file: !1232, line: 493, baseType: !7, size: 32, offset: 256)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1279, file: !1232, line: 494, baseType: !327, size: 16, offset: 288)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1279, file: !1232, line: 495, baseType: !327, size: 16, offset: 304)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1279, file: !1232, line: 497, baseType: !1288, size: 64, offset: 320)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1231, file: !1232, line: 697, baseType: !1290, size: 1792, offset: 1792)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1232, line: 507, size: 1792, elements: !1291)
!1291 = !{!1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1371, !1372}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1290, file: !1232, line: 508, baseType: !774, size: 192, align: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1290, file: !1232, line: 515, baseType: !432, size: 64, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1290, file: !1232, line: 516, baseType: !432, size: 64, offset: 256)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1290, file: !1232, line: 517, baseType: !432, size: 64, offset: 320)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1290, file: !1232, line: 518, baseType: !432, size: 64, offset: 384)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1290, file: !1232, line: 519, baseType: !432, size: 64, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1290, file: !1232, line: 526, baseType: !791, size: 64, offset: 512)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1290, file: !1232, line: 527, baseType: !432, size: 64, offset: 576)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1290, file: !1232, line: 528, baseType: !7, size: 32, offset: 640)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1290, file: !1232, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1290, file: !1232, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1290, file: !1232, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1290, file: !1232, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1290, file: !1232, line: 563, baseType: !1306, size: 512, offset: 704)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1307)
!1307 = !{!1308, !1316, !1317, !1322, !1365, !1368, !1369, !1370}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1306, file: !20, line: 119, baseType: !1309, size: 256)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1310, line: 9, size: 256, elements: !1311)
!1310 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1311 = !{!1312, !1313}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1309, file: !1310, line: 10, baseType: !774, size: 192, align: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1309, file: !1310, line: 11, baseType: !1314, size: 64, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1315, line: 29, baseType: !791)
!1315 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1306, file: !20, line: 120, baseType: !1314, size: 64, offset: 256)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1306, file: !20, line: 121, baseType: !1318, size: 64, offset: 320)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!19, !1321}
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1306, file: !20, line: 122, baseType: !1323, size: 64, offset: 384)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1325)
!1325 = !{!1326, !1346, !1347, !1350, !1355, !1356, !1360, !1364}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1324, file: !20, line: 160, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1329)
!1329 = !{!1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1328, file: !20, line: 215, baseType: !794)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1328, file: !20, line: 216, baseType: !7, size: 32)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1328, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1328, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1328, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1328, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1328, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1328, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1328, file: !20, line: 233, baseType: !1314, size: 64, offset: 128)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1328, file: !20, line: 234, baseType: !1321, size: 64, offset: 192)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1328, file: !20, line: 235, baseType: !1314, size: 64, offset: 256)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1328, file: !20, line: 236, baseType: !1321, size: 64, offset: 320)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1328, file: !20, line: 237, baseType: !1343, size: 4096, offset: 512)
!1343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1324, size: 4096, elements: !1344)
!1344 = !{!1345}
!1345 = !DISubrange(count: 8)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1324, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1324, file: !20, line: 162, baseType: !1348, size: 32, offset: 96)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !215, line: 27, baseType: !1349)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !318, line: 96, baseType: !269)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1324, file: !20, line: 163, baseType: !1351, size: 32, offset: 128)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !399, line: 276, baseType: !1352)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !399, line: 276, size: 32, elements: !1353)
!1353 = !{!1354}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1352, file: !399, line: 276, baseType: !403, size: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1324, file: !20, line: 164, baseType: !1321, size: 64, offset: 192)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1324, file: !20, line: 165, baseType: !1357, size: 128, offset: 256)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1310, line: 14, size: 128, elements: !1358)
!1358 = !{!1359}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1357, file: !1310, line: 15, baseType: !766, size: 128)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1324, file: !20, line: 166, baseType: !1361, size: 64, offset: 384)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{!1314}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1324, file: !20, line: 167, baseType: !1314, size: 64, offset: 448)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1306, file: !20, line: 123, baseType: !1366, size: 8, offset: 448)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !427, line: 17, baseType: !1367)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !429, line: 21, baseType: !438)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1306, file: !20, line: 124, baseType: !1366, size: 8, offset: 456)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1306, file: !20, line: 125, baseType: !1366, size: 8, offset: 464)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1306, file: !20, line: 126, baseType: !1366, size: 8, offset: 472)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1290, file: !1232, line: 572, baseType: !1306, size: 512, offset: 1216)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1290, file: !1232, line: 580, baseType: !1373, size: 64, offset: 1728)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1231, file: !1232, line: 721, baseType: !7, size: 32, offset: 3584)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1231, file: !1232, line: 722, baseType: !269, size: 32, offset: 3616)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1231, file: !1232, line: 723, baseType: !1377, size: 64, offset: 3648)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1379)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1380, line: 17, baseType: !1381)
!1380 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1380, line: 17, size: 64, elements: !1382)
!1382 = !{!1383}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1381, file: !1380, line: 17, baseType: !1384, size: 64)
!1384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 64, elements: !1385)
!1385 = !{!1386}
!1386 = !DISubrange(count: 1)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1231, file: !1232, line: 724, baseType: !1379, size: 64, offset: 3712)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1231, file: !1232, line: 749, baseType: !1389, offset: 3776)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1232, line: 290, elements: !257)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1231, file: !1232, line: 751, baseType: !214, size: 128, offset: 3776)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1231, file: !1232, line: 757, baseType: !988, size: 64, offset: 3904)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1231, file: !1232, line: 758, baseType: !988, size: 64, offset: 3968)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1231, file: !1232, line: 761, baseType: !1394, size: 320, offset: 4032)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1165, line: 34, size: 320, elements: !1395)
!1395 = !{!1396, !1397}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1394, file: !1165, line: 35, baseType: !432, size: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1394, file: !1165, line: 36, baseType: !1398, size: 256, offset: 64)
!1398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !995, size: 256, elements: !1169)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1231, file: !1232, line: 766, baseType: !269, size: 32, offset: 4352)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1231, file: !1232, line: 767, baseType: !269, size: 32, offset: 4384)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1231, file: !1232, line: 768, baseType: !269, size: 32, offset: 4416)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1231, file: !1232, line: 770, baseType: !269, size: 32, offset: 4448)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1231, file: !1232, line: 772, baseType: !335, size: 64, offset: 4480)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1231, file: !1232, line: 775, baseType: !7, size: 32, offset: 4544)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1231, file: !1232, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1231, file: !1232, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1231, file: !1232, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1231, file: !1232, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1231, file: !1232, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1231, file: !1232, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1231, file: !1232, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1231, file: !1232, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1231, file: !1232, line: 831, baseType: !335, size: 64, offset: 4672)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1231, file: !1232, line: 833, baseType: !1415, size: 384, offset: 4736)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1416)
!1416 = !{!1417, !1422}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1415, file: !25, line: 26, baseType: !1418, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!320, !1421}
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, scope: !1415, file: !25, line: 27, baseType: !1423, size: 320, offset: 64)
!1423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1415, file: !25, line: 27, size: 320, elements: !1424)
!1424 = !{!1425, !1435, !1462}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1423, file: !25, line: 36, baseType: !1426, size: 320)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1423, file: !25, line: 29, size: 320, elements: !1427)
!1427 = !{!1428, !1430, !1431, !1432, !1433, !1434}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1426, file: !25, line: 30, baseType: !1429, size: 64)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1426, file: !25, line: 31, baseType: !426, size: 32, offset: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1426, file: !25, line: 32, baseType: !426, size: 32, offset: 96)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1426, file: !25, line: 33, baseType: !426, size: 32, offset: 128)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1426, file: !25, line: 34, baseType: !432, size: 64, offset: 192)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1426, file: !25, line: 35, baseType: !1429, size: 64, offset: 256)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1423, file: !25, line: 46, baseType: !1436, size: 192)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1423, file: !25, line: 38, size: 192, elements: !1437)
!1437 = !{!1438, !1439, !1440, !1461}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1436, file: !25, line: 39, baseType: !1348, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1436, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, scope: !1436, file: !25, line: 41, baseType: !1441, size: 64, offset: 64)
!1441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1436, file: !25, line: 41, size: 64, elements: !1442)
!1442 = !{!1443, !1451}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1441, file: !25, line: 42, baseType: !1444, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1446, line: 7, size: 128, elements: !1447)
!1446 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1447 = !{!1448, !1450}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1445, file: !1446, line: 8, baseType: !1449, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !318, line: 93, baseType: !544)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1445, file: !1446, line: 9, baseType: !544, size: 64, offset: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1441, file: !25, line: 43, baseType: !1452, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1454, line: 7, size: 64, elements: !1455)
!1454 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1455 = !{!1456, !1460}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1453, file: !1454, line: 8, baseType: !1457, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1454, line: 5, baseType: !1458)
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !427, line: 20, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !429, line: 26, baseType: !269)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1453, file: !1454, line: 9, baseType: !1458, size: 32, offset: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1436, file: !25, line: 45, baseType: !432, size: 64, offset: 128)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1423, file: !25, line: 54, baseType: !1463, size: 256)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1423, file: !25, line: 48, size: 256, elements: !1464)
!1464 = !{!1465, !1468, !1469, !1470, !1471}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1463, file: !25, line: 49, baseType: !1466, size: 64)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1463, file: !25, line: 50, baseType: !269, size: 32, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1463, file: !25, line: 51, baseType: !269, size: 32, offset: 96)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1463, file: !25, line: 52, baseType: !335, size: 64, offset: 128)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1463, file: !25, line: 53, baseType: !335, size: 64, offset: 192)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1231, file: !1232, line: 835, baseType: !1473, size: 32, offset: 5120)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !215, line: 22, baseType: !1474)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !318, line: 28, baseType: !269)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1231, file: !1232, line: 836, baseType: !1473, size: 32, offset: 5152)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1231, file: !1232, line: 840, baseType: !335, size: 64, offset: 5184)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1231, file: !1232, line: 849, baseType: !1230, size: 64, offset: 5248)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1231, file: !1232, line: 852, baseType: !1230, size: 64, offset: 5312)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1231, file: !1232, line: 857, baseType: !214, size: 128, offset: 5376)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1231, file: !1232, line: 858, baseType: !214, size: 128, offset: 5504)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1231, file: !1232, line: 859, baseType: !1230, size: 64, offset: 5632)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1231, file: !1232, line: 867, baseType: !214, size: 128, offset: 5696)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1231, file: !1232, line: 868, baseType: !214, size: 128, offset: 5824)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1231, file: !1232, line: 871, baseType: !1485, size: 64, offset: 5952)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1487)
!1487 = !{!1488, !1489, !1490, !1491, !1493, !1494, !1501, !1502}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1486, file: !53, line: 61, baseType: !1244, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1486, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1486, file: !53, line: 63, baseType: !243, offset: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1486, file: !53, line: 65, baseType: !1492, size: 256, offset: 64)
!1492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 256, elements: !1169)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1486, file: !53, line: 66, baseType: !648, size: 64, offset: 320)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1486, file: !53, line: 68, baseType: !1495, size: 128, offset: 384)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1496, line: 40, baseType: !1497)
!1496 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1496, line: 36, size: 128, elements: !1498)
!1498 = !{!1499, !1500}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1497, file: !1496, line: 37, baseType: !243)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1497, file: !1496, line: 38, baseType: !214, size: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1486, file: !53, line: 69, baseType: !376, size: 128, align: 64, offset: 512)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1486, file: !53, line: 70, baseType: !1503, size: 128, offset: 640)
!1503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1504, size: 128, elements: !1385)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1505)
!1505 = !{!1506, !1507}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1504, file: !53, line: 55, baseType: !269, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1504, file: !53, line: 56, baseType: !1508, size: 64, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1231, file: !1232, line: 872, baseType: !1511, size: 512, offset: 6016)
!1511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !652, size: 512, elements: !1169)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1231, file: !1232, line: 873, baseType: !214, size: 128, offset: 6528)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1231, file: !1232, line: 874, baseType: !214, size: 128, offset: 6656)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1231, file: !1232, line: 876, baseType: !1515, size: 64, offset: 6784)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1517, line: 26, size: 192, elements: !1518)
!1517 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1518 = !{!1519, !1520}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1516, file: !1517, line: 27, baseType: !7, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1516, file: !1517, line: 28, baseType: !1521, size: 128, offset: 64)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1522, line: 43, size: 128, elements: !1523)
!1522 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1523 = !{!1524, !1525}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1521, file: !1522, line: 44, baseType: !794)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1521, file: !1522, line: 45, baseType: !214, size: 128)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1231, file: !1232, line: 879, baseType: !718, size: 64, offset: 6848)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1231, file: !1232, line: 882, baseType: !718, size: 64, offset: 6912)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1231, file: !1232, line: 884, baseType: !432, size: 64, offset: 6976)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1231, file: !1232, line: 885, baseType: !432, size: 64, offset: 7040)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1231, file: !1232, line: 890, baseType: !432, size: 64, offset: 7104)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1231, file: !1232, line: 891, baseType: !1532, size: 128, offset: 7168)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1232, line: 242, size: 128, elements: !1533)
!1533 = !{!1534, !1535, !1536}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1532, file: !1232, line: 244, baseType: !432, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1532, file: !1232, line: 245, baseType: !432, size: 64, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1532, file: !1232, line: 246, baseType: !794, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1231, file: !1232, line: 900, baseType: !335, size: 64, offset: 7296)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1231, file: !1232, line: 901, baseType: !335, size: 64, offset: 7360)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1231, file: !1232, line: 904, baseType: !432, size: 64, offset: 7424)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1231, file: !1232, line: 907, baseType: !432, size: 64, offset: 7488)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1231, file: !1232, line: 910, baseType: !335, size: 64, offset: 7552)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1231, file: !1232, line: 911, baseType: !335, size: 64, offset: 7616)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1231, file: !1232, line: 914, baseType: !1544, size: 640, offset: 7680)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1545, line: 123, size: 640, elements: !1546)
!1545 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1546 = !{!1547, !1553, !1554}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1544, file: !1545, line: 124, baseType: !1548, size: 576)
!1548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1549, size: 576, elements: !286)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1545, line: 108, size: 192, elements: !1550)
!1550 = !{!1551, !1552}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1549, file: !1545, line: 109, baseType: !432, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1549, file: !1545, line: 110, baseType: !1357, size: 128, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1544, file: !1545, line: 125, baseType: !7, size: 32, offset: 576)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1544, file: !1545, line: 126, baseType: !7, size: 32, offset: 608)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1231, file: !1232, line: 917, baseType: !1556, size: 192, offset: 8320)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1545, line: 134, size: 192, elements: !1557)
!1557 = !{!1558, !1559}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1556, file: !1545, line: 135, baseType: !376, size: 128, align: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1556, file: !1545, line: 136, baseType: !7, size: 32, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1231, file: !1232, line: 923, baseType: !1561, size: 64, offset: 8512)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1563)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1564, line: 111, size: 1280, elements: !1565)
!1564 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1565 = !{!1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1585, !1586, !1587, !1588, !1589, !1590, !1697, !1698, !1699, !1700, !1726, !1729, !1739}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1563, file: !1564, line: 112, baseType: !761, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1563, file: !1564, line: 120, baseType: !446, size: 32, offset: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1563, file: !1564, line: 121, baseType: !454, size: 32, offset: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1563, file: !1564, line: 122, baseType: !446, size: 32, offset: 96)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1563, file: !1564, line: 123, baseType: !454, size: 32, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1563, file: !1564, line: 124, baseType: !446, size: 32, offset: 160)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1563, file: !1564, line: 125, baseType: !454, size: 32, offset: 192)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1563, file: !1564, line: 126, baseType: !446, size: 32, offset: 224)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1563, file: !1564, line: 127, baseType: !454, size: 32, offset: 256)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1563, file: !1564, line: 128, baseType: !7, size: 32, offset: 288)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1563, file: !1564, line: 129, baseType: !1577, size: 64, offset: 320)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1578, line: 26, baseType: !1579)
!1578 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1578, line: 24, size: 64, elements: !1580)
!1580 = !{!1581}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1579, file: !1578, line: 25, baseType: !1582, size: 64)
!1582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !428, size: 64, elements: !1583)
!1583 = !{!1584}
!1584 = !DISubrange(count: 2)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1563, file: !1564, line: 130, baseType: !1577, size: 64, offset: 384)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1563, file: !1564, line: 131, baseType: !1577, size: 64, offset: 448)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1563, file: !1564, line: 132, baseType: !1577, size: 64, offset: 512)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1563, file: !1564, line: 133, baseType: !1577, size: 64, offset: 576)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1563, file: !1564, line: 135, baseType: !438, size: 8, offset: 640)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1563, file: !1564, line: 137, baseType: !1591, size: 64, offset: 704)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1593, line: 189, size: 1664, elements: !1594)
!1593 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1594 = !{!1595, !1596, !1599, !1604, !1605, !1608, !1609, !1614, !1615, !1616, !1617, !1619, !1620, !1621, !1622, !1623, !1661, !1682}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1592, file: !1593, line: 190, baseType: !1244, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1592, file: !1593, line: 191, baseType: !1597, size: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1593, line: 28, baseType: !1598)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !215, line: 98, baseType: !1458)
!1599 = !DIDerivedType(tag: DW_TAG_member, scope: !1592, file: !1593, line: 192, baseType: !1600, size: 192, offset: 64)
!1600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1592, file: !1593, line: 192, size: 192, elements: !1601)
!1601 = !{!1602, !1603}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1600, file: !1593, line: 193, baseType: !214, size: 128)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1600, file: !1593, line: 194, baseType: !774, size: 192, align: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1592, file: !1593, line: 199, baseType: !781, size: 256, offset: 256)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1592, file: !1593, line: 200, baseType: !1606, size: 64, offset: 512)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!1607 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1593, line: 200, flags: DIFlagFwdDecl)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1592, file: !1593, line: 201, baseType: !209, size: 64, offset: 576)
!1609 = !DIDerivedType(tag: DW_TAG_member, scope: !1592, file: !1593, line: 202, baseType: !1610, size: 64, offset: 640)
!1610 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1592, file: !1593, line: 202, size: 64, elements: !1611)
!1611 = !{!1612, !1613}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1610, file: !1593, line: 203, baseType: !550, size: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1610, file: !1593, line: 204, baseType: !550, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1592, file: !1593, line: 206, baseType: !550, size: 64, offset: 704)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1592, file: !1593, line: 207, baseType: !446, size: 32, offset: 768)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1592, file: !1593, line: 208, baseType: !454, size: 32, offset: 800)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1592, file: !1593, line: 209, baseType: !1618, size: 32, offset: 832)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1593, line: 31, baseType: !570)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1592, file: !1593, line: 210, baseType: !327, size: 16, offset: 864)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1592, file: !1593, line: 211, baseType: !327, size: 16, offset: 880)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1592, file: !1593, line: 215, baseType: !1219, size: 16, offset: 896)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1592, file: !1593, line: 222, baseType: !335, size: 64, offset: 960)
!1623 = !DIDerivedType(tag: DW_TAG_member, scope: !1592, file: !1593, line: 239, baseType: !1624, size: 320, offset: 1024)
!1624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1592, file: !1593, line: 239, size: 320, elements: !1625)
!1625 = !{!1626, !1653}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1624, file: !1593, line: 240, baseType: !1627, size: 320)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1593, line: 108, size: 320, elements: !1628)
!1628 = !{!1629, !1630, !1642, !1645, !1652}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1627, file: !1593, line: 110, baseType: !335, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, scope: !1627, file: !1593, line: 111, baseType: !1631, size: 64, offset: 64)
!1631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1627, file: !1593, line: 111, size: 64, elements: !1632)
!1632 = !{!1633, !1641}
!1633 = !DIDerivedType(tag: DW_TAG_member, scope: !1631, file: !1593, line: 112, baseType: !1634, size: 64)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1631, file: !1593, line: 112, size: 64, elements: !1635)
!1635 = !{!1636, !1637}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1634, file: !1593, line: 114, baseType: !873, size: 16)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1634, file: !1593, line: 115, baseType: !1638, size: 48, offset: 16)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 48, elements: !1639)
!1639 = !{!1640}
!1640 = !DISubrange(count: 6)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1631, file: !1593, line: 121, baseType: !335, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1627, file: !1593, line: 123, baseType: !1643, size: 64, offset: 128)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1593, line: 96, flags: DIFlagFwdDecl)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1627, file: !1593, line: 124, baseType: !1646, size: 64, offset: 192)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1593, line: 102, size: 192, elements: !1648)
!1648 = !{!1649, !1650, !1651}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1647, file: !1593, line: 103, baseType: !376, size: 128, align: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1647, file: !1593, line: 104, baseType: !1244, size: 32, offset: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1647, file: !1593, line: 105, baseType: !501, size: 8, offset: 160)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1627, file: !1593, line: 125, baseType: !231, size: 64, offset: 256)
!1653 = !DIDerivedType(tag: DW_TAG_member, scope: !1624, file: !1593, line: 241, baseType: !1654, size: 320)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1624, file: !1593, line: 241, size: 320, elements: !1655)
!1655 = !{!1656, !1657, !1658, !1659, !1660}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1654, file: !1593, line: 242, baseType: !335, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1654, file: !1593, line: 243, baseType: !335, size: 64, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1654, file: !1593, line: 244, baseType: !1643, size: 64, offset: 128)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1654, file: !1593, line: 245, baseType: !1646, size: 64, offset: 192)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1654, file: !1593, line: 246, baseType: !285, size: 64, offset: 256)
!1661 = !DIDerivedType(tag: DW_TAG_member, scope: !1592, file: !1593, line: 254, baseType: !1662, size: 256, offset: 1344)
!1662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1592, file: !1593, line: 254, size: 256, elements: !1663)
!1663 = !{!1664, !1670}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1662, file: !1593, line: 255, baseType: !1665, size: 256)
!1665 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1593, line: 128, size: 256, elements: !1666)
!1666 = !{!1667, !1668}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1665, file: !1593, line: 129, baseType: !209, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1665, file: !1593, line: 130, baseType: !1669, size: 256)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 256, elements: !1169)
!1670 = !DIDerivedType(tag: DW_TAG_member, scope: !1662, file: !1593, line: 256, baseType: !1671, size: 256)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1662, file: !1593, line: 256, size: 256, elements: !1672)
!1672 = !{!1673, !1674}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1671, file: !1593, line: 258, baseType: !214, size: 128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1671, file: !1593, line: 259, baseType: !1675, size: 128, offset: 128)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1676, line: 22, size: 128, elements: !1677)
!1676 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1677 = !{!1678, !1681}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1675, file: !1676, line: 23, baseType: !1679, size: 64)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1680 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1676, line: 23, flags: DIFlagFwdDecl)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1675, file: !1676, line: 24, baseType: !335, size: 64, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1592, file: !1593, line: 274, baseType: !1683, size: 64, offset: 1600)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1593, line: 170, size: 192, elements: !1685)
!1685 = !{!1686, !1695, !1696}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1684, file: !1593, line: 171, baseType: !1687, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1593, line: 165, baseType: !1688)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{!269, !1591, !1691, !1693, !1591}
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1644)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1665)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1684, file: !1593, line: 172, baseType: !1591, size: 64, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1684, file: !1593, line: 173, baseType: !1643, size: 64, offset: 128)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1563, file: !1564, line: 138, baseType: !1591, size: 64, offset: 768)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1563, file: !1564, line: 139, baseType: !1591, size: 64, offset: 832)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1563, file: !1564, line: 140, baseType: !1591, size: 64, offset: 896)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1563, file: !1564, line: 145, baseType: !1701, size: 64, offset: 960)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1703, line: 13, size: 896, elements: !1704)
!1703 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1704 = !{!1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1702, file: !1703, line: 14, baseType: !1244, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1702, file: !1703, line: 15, baseType: !761, size: 32, offset: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1702, file: !1703, line: 16, baseType: !761, size: 32, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1702, file: !1703, line: 21, baseType: !785, size: 64, offset: 128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1702, file: !1703, line: 27, baseType: !335, size: 64, offset: 192)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1702, file: !1703, line: 28, baseType: !335, size: 64, offset: 256)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1702, file: !1703, line: 29, baseType: !785, size: 64, offset: 320)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1702, file: !1703, line: 32, baseType: !652, size: 128, offset: 384)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1702, file: !1703, line: 33, baseType: !446, size: 32, offset: 512)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1702, file: !1703, line: 37, baseType: !785, size: 64, offset: 576)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1702, file: !1703, line: 44, baseType: !1716, size: 256, offset: 640)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1717, line: 15, size: 256, elements: !1718)
!1717 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1718 = !{!1719, !1720, !1721, !1722, !1723, !1724, !1725}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1716, file: !1717, line: 16, baseType: !794)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1716, file: !1717, line: 18, baseType: !269, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1716, file: !1717, line: 19, baseType: !269, size: 32, offset: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1716, file: !1717, line: 20, baseType: !269, size: 32, offset: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1716, file: !1717, line: 21, baseType: !269, size: 32, offset: 96)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1716, file: !1717, line: 22, baseType: !335, size: 64, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1716, file: !1717, line: 23, baseType: !335, size: 64, offset: 192)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1563, file: !1564, line: 146, baseType: !1727, size: 64, offset: 1024)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !736, line: 516, flags: DIFlagFwdDecl)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1563, file: !1564, line: 147, baseType: !1730, size: 64, offset: 1088)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1564, line: 25, size: 64, elements: !1732)
!1732 = !{!1733, !1734, !1735}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1731, file: !1564, line: 26, baseType: !761, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1731, file: !1564, line: 27, baseType: !269, size: 32, offset: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1731, file: !1564, line: 28, baseType: !1736, offset: 64)
!1736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, elements: !1737)
!1737 = !{!1738}
!1738 = !DISubrange(count: 0)
!1739 = !DIDerivedType(tag: DW_TAG_member, scope: !1563, file: !1564, line: 149, baseType: !1740, size: 128, offset: 1152)
!1740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1563, file: !1564, line: 149, size: 128, elements: !1741)
!1741 = !{!1742, !1743}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1740, file: !1564, line: 150, baseType: !269, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1740, file: !1564, line: 151, baseType: !376, size: 128, align: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1231, file: !1232, line: 926, baseType: !1561, size: 64, offset: 8576)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1231, file: !1232, line: 929, baseType: !1561, size: 64, offset: 8640)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1231, file: !1232, line: 933, baseType: !1591, size: 64, offset: 8704)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1231, file: !1232, line: 943, baseType: !1748, size: 128, offset: 8768)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 128, elements: !1749)
!1749 = !{!1750}
!1750 = !DISubrange(count: 16)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1231, file: !1232, line: 945, baseType: !1752, size: 64, offset: 8896)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1232, line: 49, flags: DIFlagFwdDecl)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1231, file: !1232, line: 956, baseType: !1755, size: 64, offset: 8960)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1232, line: 45, flags: DIFlagFwdDecl)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1231, file: !1232, line: 959, baseType: !1758, size: 64, offset: 9024)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1232, line: 959, flags: DIFlagFwdDecl)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1231, file: !1232, line: 962, baseType: !1761, size: 64, offset: 9088)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1232, line: 66, flags: DIFlagFwdDecl)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1231, file: !1232, line: 966, baseType: !1764, size: 64, offset: 9152)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1232, line: 50, flags: DIFlagFwdDecl)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1231, file: !1232, line: 969, baseType: !1767, size: 64, offset: 9216)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1769, line: 82, size: 7296, elements: !1770)
!1769 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1770 = !{!1771, !1772, !1773, !1774, !1775, !1776, !1777, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1806, !1815, !1816, !1818, !1819, !1820, !1823, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1853, !1854, !1861, !1862, !1863, !1864, !1865, !1866}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1768, file: !1769, line: 83, baseType: !1244, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1768, file: !1769, line: 84, baseType: !761, size: 32, offset: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1768, file: !1769, line: 85, baseType: !269, size: 32, offset: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1768, file: !1769, line: 86, baseType: !214, size: 128, offset: 128)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1768, file: !1769, line: 88, baseType: !1495, size: 128, offset: 256)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1768, file: !1769, line: 91, baseType: !1230, size: 64, offset: 384)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1768, file: !1769, line: 94, baseType: !1778, size: 192, offset: 448)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1779, line: 30, size: 192, elements: !1780)
!1779 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1780 = !{!1781, !1782}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1778, file: !1779, line: 31, baseType: !214, size: 128)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1778, file: !1779, line: 32, baseType: !1783, size: 64, offset: 128)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1784, line: 25, baseType: !1785)
!1784 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1784, line: 23, size: 64, elements: !1786)
!1786 = !{!1787}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1785, file: !1784, line: 24, baseType: !1384, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1768, file: !1769, line: 97, baseType: !648, size: 64, offset: 640)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1768, file: !1769, line: 100, baseType: !269, size: 32, offset: 704)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1768, file: !1769, line: 106, baseType: !269, size: 32, offset: 736)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1768, file: !1769, line: 107, baseType: !1230, size: 64, offset: 768)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1768, file: !1769, line: 110, baseType: !269, size: 32, offset: 832)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1768, file: !1769, line: 111, baseType: !7, size: 32, offset: 864)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1768, file: !1769, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1768, file: !1769, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1768, file: !1769, line: 128, baseType: !269, size: 32, offset: 928)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1768, file: !1769, line: 129, baseType: !214, size: 128, offset: 960)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1768, file: !1769, line: 132, baseType: !1306, size: 512, offset: 1088)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1768, file: !1769, line: 133, baseType: !1314, size: 64, offset: 1600)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1768, file: !1769, line: 140, baseType: !1801, size: 256, offset: 1664)
!1801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1802, size: 256, elements: !1583)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1769, line: 38, size: 128, elements: !1803)
!1803 = !{!1804, !1805}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1802, file: !1769, line: 39, baseType: !432, size: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1802, file: !1769, line: 40, baseType: !432, size: 64, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1768, file: !1769, line: 146, baseType: !1807, size: 192, offset: 1920)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1769, line: 66, size: 192, elements: !1808)
!1808 = !{!1809}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1807, file: !1769, line: 67, baseType: !1810, size: 192)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1769, line: 47, size: 192, elements: !1811)
!1811 = !{!1812, !1813, !1814}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1810, file: !1769, line: 48, baseType: !787, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1810, file: !1769, line: 49, baseType: !787, size: 64, offset: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1810, file: !1769, line: 50, baseType: !787, size: 64, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1768, file: !1769, line: 150, baseType: !1544, size: 640, offset: 2112)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1768, file: !1769, line: 153, baseType: !1817, size: 256, offset: 2752)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1485, size: 256, elements: !1169)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1768, file: !1769, line: 159, baseType: !1485, size: 64, offset: 3008)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1768, file: !1769, line: 162, baseType: !269, size: 32, offset: 3072)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1768, file: !1769, line: 164, baseType: !1821, size: 64, offset: 3136)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1769, line: 164, flags: DIFlagFwdDecl)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1768, file: !1769, line: 175, baseType: !1824, size: 32, offset: 3200)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !399, line: 805, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !399, line: 798, size: 32, elements: !1826)
!1826 = !{!1827, !1828}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1825, file: !399, line: 803, baseType: !398, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1825, file: !399, line: 804, baseType: !243, offset: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1768, file: !1769, line: 176, baseType: !432, size: 64, offset: 3264)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1768, file: !1769, line: 176, baseType: !432, size: 64, offset: 3328)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1768, file: !1769, line: 176, baseType: !432, size: 64, offset: 3392)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1768, file: !1769, line: 176, baseType: !432, size: 64, offset: 3456)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1768, file: !1769, line: 177, baseType: !432, size: 64, offset: 3520)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1768, file: !1769, line: 178, baseType: !432, size: 64, offset: 3584)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1768, file: !1769, line: 179, baseType: !1532, size: 128, offset: 3648)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1768, file: !1769, line: 180, baseType: !335, size: 64, offset: 3776)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1768, file: !1769, line: 180, baseType: !335, size: 64, offset: 3840)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1768, file: !1769, line: 180, baseType: !335, size: 64, offset: 3904)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1768, file: !1769, line: 180, baseType: !335, size: 64, offset: 3968)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1768, file: !1769, line: 181, baseType: !335, size: 64, offset: 4032)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1768, file: !1769, line: 181, baseType: !335, size: 64, offset: 4096)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1768, file: !1769, line: 181, baseType: !335, size: 64, offset: 4160)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1768, file: !1769, line: 181, baseType: !335, size: 64, offset: 4224)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1768, file: !1769, line: 182, baseType: !335, size: 64, offset: 4288)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1768, file: !1769, line: 182, baseType: !335, size: 64, offset: 4352)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1768, file: !1769, line: 182, baseType: !335, size: 64, offset: 4416)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1768, file: !1769, line: 182, baseType: !335, size: 64, offset: 4480)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1768, file: !1769, line: 183, baseType: !335, size: 64, offset: 4544)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1768, file: !1769, line: 183, baseType: !335, size: 64, offset: 4608)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1768, file: !1769, line: 184, baseType: !1851, offset: 4672)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1852, line: 12, elements: !257)
!1852 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1768, file: !1769, line: 192, baseType: !434, size: 64, offset: 4672)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1768, file: !1769, line: 203, baseType: !1855, size: 2048, offset: 4736)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1856, size: 2048, elements: !1749)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1857, line: 43, size: 128, elements: !1858)
!1857 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1858 = !{!1859, !1860}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1856, file: !1857, line: 44, baseType: !334, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1856, file: !1857, line: 45, baseType: !334, size: 64, offset: 64)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1768, file: !1769, line: 220, baseType: !501, size: 8, offset: 6784)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1768, file: !1769, line: 221, baseType: !1219, size: 16, offset: 6800)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1768, file: !1769, line: 222, baseType: !1219, size: 16, offset: 6816)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1768, file: !1769, line: 224, baseType: !988, size: 64, offset: 6848)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1768, file: !1769, line: 227, baseType: !1187, size: 192, offset: 6912)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1768, file: !1769, line: 233, baseType: !1187, size: 192, offset: 7104)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1231, file: !1232, line: 970, baseType: !1868, size: 64, offset: 9280)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1769, line: 20, size: 16576, elements: !1870)
!1870 = !{!1871, !1872, !1873, !1874}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1869, file: !1769, line: 21, baseType: !243)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1869, file: !1769, line: 22, baseType: !1244, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1869, file: !1769, line: 23, baseType: !1495, size: 128, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1869, file: !1769, line: 24, baseType: !1875, size: 16384, offset: 192)
!1875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1876, size: 16384, elements: !290)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1779, line: 49, size: 256, elements: !1877)
!1877 = !{!1878}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1876, file: !1779, line: 50, baseType: !1879, size: 256)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1779, line: 35, size: 256, elements: !1880)
!1880 = !{!1881, !1888, !1889, !1895}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1879, file: !1779, line: 37, baseType: !1882, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1883, line: 19, baseType: !1884)
!1883 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1883, line: 18, baseType: !1886)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{null, !269}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1879, file: !1779, line: 38, baseType: !335, size: 64, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1879, file: !1779, line: 44, baseType: !1890, size: 64, offset: 128)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1883, line: 22, baseType: !1891)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1883, line: 21, baseType: !1893)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{null}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1879, file: !1779, line: 46, baseType: !1783, size: 64, offset: 192)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1231, file: !1232, line: 971, baseType: !1783, size: 64, offset: 9344)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1231, file: !1232, line: 972, baseType: !1783, size: 64, offset: 9408)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1231, file: !1232, line: 974, baseType: !1783, size: 64, offset: 9472)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1231, file: !1232, line: 975, baseType: !1778, size: 192, offset: 9536)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1231, file: !1232, line: 976, baseType: !335, size: 64, offset: 9728)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1231, file: !1232, line: 977, baseType: !332, size: 64, offset: 9792)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1231, file: !1232, line: 978, baseType: !7, size: 32, offset: 9856)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1231, file: !1232, line: 980, baseType: !379, size: 64, offset: 9920)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1231, file: !1232, line: 989, baseType: !1905, size: 128, offset: 9984)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1906, line: 35, size: 128, elements: !1907)
!1906 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1907 = !{!1908, !1909, !1910}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1905, file: !1906, line: 36, baseType: !269, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1905, file: !1906, line: 37, baseType: !761, size: 32, offset: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1905, file: !1906, line: 38, baseType: !1911, size: 64, offset: 64)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1906, line: 23, flags: DIFlagFwdDecl)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1231, file: !1232, line: 992, baseType: !432, size: 64, offset: 10112)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1231, file: !1232, line: 993, baseType: !432, size: 64, offset: 10176)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1231, file: !1232, line: 996, baseType: !243, offset: 10240)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1231, file: !1232, line: 999, baseType: !794, offset: 10240)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1231, file: !1232, line: 1001, baseType: !1918, size: 64, offset: 10240)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1232, line: 636, size: 64, elements: !1919)
!1919 = !{!1920}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1918, file: !1232, line: 637, baseType: !1921, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1231, file: !1232, line: 1005, baseType: !766, size: 128, offset: 10304)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1231, file: !1232, line: 1007, baseType: !1230, size: 64, offset: 10432)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1231, file: !1232, line: 1009, baseType: !1925, size: 64, offset: 10496)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1232, line: 1009, flags: DIFlagFwdDecl)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1231, file: !1232, line: 1043, baseType: !209, size: 64, offset: 10560)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1231, file: !1232, line: 1046, baseType: !1929, size: 64, offset: 10624)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1232, line: 41, flags: DIFlagFwdDecl)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1231, file: !1232, line: 1050, baseType: !1932, size: 64, offset: 10688)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1232, line: 42, flags: DIFlagFwdDecl)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1231, file: !1232, line: 1054, baseType: !1935, size: 64, offset: 10752)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64)
!1936 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1232, line: 55, flags: DIFlagFwdDecl)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1231, file: !1232, line: 1056, baseType: !1938, size: 64, offset: 10816)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1232, line: 40, flags: DIFlagFwdDecl)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1231, file: !1232, line: 1058, baseType: !1941, size: 64, offset: 10880)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1943, line: 99, size: 704, elements: !1944)
!1943 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1944 = !{!1945, !1946, !1947, !1948, !1949, !1950, !1951, !1970, !1971}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1942, file: !1943, line: 100, baseType: !785, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1942, file: !1943, line: 101, baseType: !761, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1942, file: !1943, line: 102, baseType: !761, size: 32, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1942, file: !1943, line: 105, baseType: !243, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1942, file: !1943, line: 107, baseType: !327, size: 16, offset: 128)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1942, file: !1943, line: 109, baseType: !752, size: 128, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1942, file: !1943, line: 110, baseType: !1952, size: 64, offset: 320)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1943, line: 73, size: 448, elements: !1954)
!1954 = !{!1955, !1958, !1959, !1964, !1969}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1953, file: !1943, line: 74, baseType: !1956, size: 64)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1943, line: 74, flags: DIFlagFwdDecl)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1953, file: !1943, line: 75, baseType: !1941, size: 64, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, scope: !1953, file: !1943, line: 83, baseType: !1960, size: 128, offset: 128)
!1960 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1953, file: !1943, line: 83, size: 128, elements: !1961)
!1961 = !{!1962, !1963}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1960, file: !1943, line: 84, baseType: !214, size: 128)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1960, file: !1943, line: 85, baseType: !949, size: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, scope: !1953, file: !1943, line: 87, baseType: !1965, size: 128, offset: 256)
!1965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1953, file: !1943, line: 87, size: 128, elements: !1966)
!1966 = !{!1967, !1968}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1965, file: !1943, line: 88, baseType: !652, size: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1965, file: !1943, line: 89, baseType: !376, size: 128, align: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1953, file: !1943, line: 92, baseType: !7, size: 32, offset: 384)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1942, file: !1943, line: 111, baseType: !648, size: 64, offset: 384)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1942, file: !1943, line: 113, baseType: !1972, size: 256, offset: 448)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1973, line: 102, size: 256, elements: !1974)
!1973 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1974 = !{!1975, !1976, !1977}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1972, file: !1973, line: 103, baseType: !785, size: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1972, file: !1973, line: 104, baseType: !214, size: 128, offset: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1972, file: !1973, line: 105, baseType: !1978, size: 64, offset: 192)
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1973, line: 21, baseType: !1979)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{null, !1982}
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1231, file: !1232, line: 1061, baseType: !1984, size: 64, offset: 10944)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1232, line: 43, flags: DIFlagFwdDecl)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1231, file: !1232, line: 1064, baseType: !335, size: 64, offset: 11008)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1231, file: !1232, line: 1065, baseType: !1988, size: 64, offset: 11072)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1779, line: 14, baseType: !1990)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1779, line: 12, size: 384, elements: !1991)
!1991 = !{!1992}
!1992 = !DIDerivedType(tag: DW_TAG_member, scope: !1990, file: !1779, line: 13, baseType: !1993, size: 384)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1990, file: !1779, line: 13, size: 384, elements: !1994)
!1994 = !{!1995, !1996, !1997, !1998}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1993, file: !1779, line: 13, baseType: !269, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1993, file: !1779, line: 13, baseType: !269, size: 32, offset: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1993, file: !1779, line: 13, baseType: !269, size: 32, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1993, file: !1779, line: 13, baseType: !1999, size: 256, offset: 128)
!1999 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2000, line: 32, size: 256, elements: !2001)
!2000 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2001 = !{!2002, !2007, !2020, !2026, !2035, !2055, !2060}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1999, file: !2000, line: 37, baseType: !2003, size: 64)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1999, file: !2000, line: 34, size: 64, elements: !2004)
!2004 = !{!2005, !2006}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2003, file: !2000, line: 35, baseType: !1474, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2003, file: !2000, line: 36, baseType: !452, size: 32, offset: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1999, file: !2000, line: 45, baseType: !2008, size: 192)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1999, file: !2000, line: 40, size: 192, elements: !2009)
!2009 = !{!2010, !2012, !2013, !2019}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2008, file: !2000, line: 41, baseType: !2011, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !318, line: 95, baseType: !269)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2008, file: !2000, line: 42, baseType: !269, size: 32, offset: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2008, file: !2000, line: 43, baseType: !2014, size: 64, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2000, line: 11, baseType: !2015)
!2015 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2000, line: 8, size: 64, elements: !2016)
!2016 = !{!2017, !2018}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2015, file: !2000, line: 9, baseType: !269, size: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2015, file: !2000, line: 10, baseType: !209, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2008, file: !2000, line: 44, baseType: !269, size: 32, offset: 128)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1999, file: !2000, line: 52, baseType: !2021, size: 128)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1999, file: !2000, line: 48, size: 128, elements: !2022)
!2022 = !{!2023, !2024, !2025}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2021, file: !2000, line: 49, baseType: !1474, size: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2021, file: !2000, line: 50, baseType: !452, size: 32, offset: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2021, file: !2000, line: 51, baseType: !2014, size: 64, offset: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1999, file: !2000, line: 61, baseType: !2027, size: 256)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1999, file: !2000, line: 55, size: 256, elements: !2028)
!2028 = !{!2029, !2030, !2031, !2032, !2034}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2027, file: !2000, line: 56, baseType: !1474, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2027, file: !2000, line: 57, baseType: !452, size: 32, offset: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2027, file: !2000, line: 58, baseType: !269, size: 32, offset: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2027, file: !2000, line: 59, baseType: !2033, size: 64, offset: 128)
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !318, line: 94, baseType: !319)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2027, file: !2000, line: 60, baseType: !2033, size: 64, offset: 192)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1999, file: !2000, line: 95, baseType: !2036, size: 256)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1999, file: !2000, line: 64, size: 256, elements: !2037)
!2037 = !{!2038, !2039}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2036, file: !2000, line: 65, baseType: !209, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, scope: !2036, file: !2000, line: 77, baseType: !2040, size: 192, offset: 64)
!2040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2036, file: !2000, line: 77, size: 192, elements: !2041)
!2041 = !{!2042, !2043, !2050}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2040, file: !2000, line: 82, baseType: !1219, size: 16)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2040, file: !2000, line: 88, baseType: !2044, size: 192)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2040, file: !2000, line: 84, size: 192, elements: !2045)
!2045 = !{!2046, !2048, !2049}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2044, file: !2000, line: 85, baseType: !2047, size: 64)
!2047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 64, elements: !1344)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2044, file: !2000, line: 86, baseType: !209, size: 64, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2044, file: !2000, line: 87, baseType: !209, size: 64, offset: 128)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2040, file: !2000, line: 93, baseType: !2051, size: 96)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2040, file: !2000, line: 90, size: 96, elements: !2052)
!2052 = !{!2053, !2054}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2051, file: !2000, line: 91, baseType: !2047, size: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2051, file: !2000, line: 92, baseType: !428, size: 32, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1999, file: !2000, line: 101, baseType: !2056, size: 128)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1999, file: !2000, line: 98, size: 128, elements: !2057)
!2057 = !{!2058, !2059}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2056, file: !2000, line: 99, baseType: !320, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2056, file: !2000, line: 100, baseType: !269, size: 32, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1999, file: !2000, line: 108, baseType: !2061, size: 128)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1999, file: !2000, line: 104, size: 128, elements: !2062)
!2062 = !{!2063, !2064, !2065}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2061, file: !2000, line: 105, baseType: !209, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2061, file: !2000, line: 106, baseType: !269, size: 32, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2061, file: !2000, line: 107, baseType: !7, size: 32, offset: 96)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1231, file: !1232, line: 1067, baseType: !1851, offset: 11136)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1231, file: !1232, line: 1099, baseType: !2068, size: 64, offset: 11136)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1232, line: 56, flags: DIFlagFwdDecl)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1231, file: !1232, line: 1103, baseType: !214, size: 128, offset: 11200)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1231, file: !1232, line: 1104, baseType: !2072, size: 64, offset: 11328)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2073 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1232, line: 46, flags: DIFlagFwdDecl)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1231, file: !1232, line: 1105, baseType: !1187, size: 192, offset: 11392)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1231, file: !1232, line: 1106, baseType: !7, size: 32, offset: 11584)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1231, file: !1232, line: 1109, baseType: !2077, size: 128, offset: 11648)
!2077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2078, size: 128, elements: !1583)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2079 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1232, line: 51, flags: DIFlagFwdDecl)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1231, file: !1232, line: 1110, baseType: !1187, size: 192, offset: 11776)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1231, file: !1232, line: 1111, baseType: !214, size: 128, offset: 11968)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1231, file: !1232, line: 1173, baseType: !2083, size: 64, offset: 12096)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2085, line: 62, size: 256, align: 256, elements: !2086)
!2085 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2086 = !{!2087, !2088, !2089, !2094}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2084, file: !2085, line: 75, baseType: !428, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2084, file: !2085, line: 90, baseType: !428, size: 32, offset: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2084, file: !2085, line: 124, baseType: !2090, size: 64, offset: 64)
!2090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2084, file: !2085, line: 109, size: 64, elements: !2091)
!2091 = !{!2092, !2093}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2090, file: !2085, line: 110, baseType: !433, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2090, file: !2085, line: 112, baseType: !433, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2084, file: !2085, line: 144, baseType: !428, size: 32, offset: 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1231, file: !1232, line: 1174, baseType: !426, size: 32, offset: 12160)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1231, file: !1232, line: 1179, baseType: !335, size: 64, offset: 12224)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1231, file: !1232, line: 1182, baseType: !2098, size: 128, offset: 12288)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1165, line: 76, size: 128, elements: !2099)
!2099 = !{!2100, !2105, !2106}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2098, file: !1165, line: 85, baseType: !2101, size: 64)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2102, line: 7, size: 64, elements: !2103)
!2102 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2103 = !{!2104}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2101, file: !2102, line: 12, baseType: !1381, size: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2098, file: !1165, line: 88, baseType: !501, size: 8, offset: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2098, file: !1165, line: 95, baseType: !501, size: 8, offset: 72)
!2107 = !DIDerivedType(tag: DW_TAG_member, scope: !1231, file: !1232, line: 1184, baseType: !2108, size: 128, offset: 12416)
!2108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1231, file: !1232, line: 1184, size: 128, elements: !2109)
!2109 = !{!2110, !2111}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2108, file: !1232, line: 1185, baseType: !1244, size: 32)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2108, file: !1232, line: 1186, baseType: !376, size: 128, align: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1231, file: !1232, line: 1190, baseType: !2113, size: 64, offset: 12544)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1232, line: 53, flags: DIFlagFwdDecl)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1231, file: !1232, line: 1192, baseType: !2116, size: 128, offset: 12608)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1165, line: 64, size: 128, elements: !2117)
!2117 = !{!2118, !2119, !2120}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2116, file: !1165, line: 65, baseType: !734, size: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2116, file: !1165, line: 67, baseType: !428, size: 32, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2116, file: !1165, line: 68, baseType: !428, size: 32, offset: 96)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1231, file: !1232, line: 1206, baseType: !269, size: 32, offset: 12736)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1231, file: !1232, line: 1207, baseType: !269, size: 32, offset: 12768)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1231, file: !1232, line: 1209, baseType: !335, size: 64, offset: 12800)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1231, file: !1232, line: 1219, baseType: !432, size: 64, offset: 12864)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1231, file: !1232, line: 1220, baseType: !432, size: 64, offset: 12928)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1231, file: !1232, line: 1317, baseType: !269, size: 32, offset: 12992)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1231, file: !1232, line: 1319, baseType: !1230, size: 64, offset: 13056)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1231, file: !1232, line: 1322, baseType: !2129, size: 64, offset: 13120)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2131, line: 56, size: 512, elements: !2132)
!2131 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2132 = !{!2133, !2134, !2135, !2136, !2137, !2138, !2139, !2141}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2130, file: !2131, line: 57, baseType: !2129, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2130, file: !2131, line: 58, baseType: !209, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2130, file: !2131, line: 59, baseType: !335, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2130, file: !2131, line: 60, baseType: !335, size: 64, offset: 192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2130, file: !2131, line: 61, baseType: !834, size: 64, offset: 256)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2130, file: !2131, line: 62, baseType: !7, size: 32, offset: 320)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2130, file: !2131, line: 63, baseType: !2140, size: 64, offset: 384)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !215, line: 153, baseType: !432)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2130, file: !2131, line: 64, baseType: !2142, size: 64, offset: 448)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1231, file: !1232, line: 1326, baseType: !1244, size: 32, offset: 13184)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1231, file: !1232, line: 1342, baseType: !209, size: 64, offset: 13248)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1231, file: !1232, line: 1343, baseType: !433, size: 64, offset: 13312)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1231, file: !1232, line: 1344, baseType: !432, size: 64, offset: 13376)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1231, file: !1232, line: 1345, baseType: !433, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1231, file: !1232, line: 1346, baseType: !433, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1231, file: !1232, line: 1347, baseType: !433, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1231, file: !1232, line: 1348, baseType: !376, size: 128, align: 64, offset: 13504)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1231, file: !1232, line: 1358, baseType: !2153, size: 34816, offset: 13824)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2154, line: 485, size: 34816, elements: !2155)
!2154 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2155 = !{!2156, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2185, !2186, !2187, !2188, !2189, !2190, !2193, !2194, !2195}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2153, file: !2154, line: 487, baseType: !2157, size: 192)
!2157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2158, size: 192, elements: !286)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2159, line: 16, size: 64, elements: !2160)
!2159 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2160 = !{!2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2158, file: !2159, line: 17, baseType: !873, size: 16)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2158, file: !2159, line: 18, baseType: !873, size: 16, offset: 16)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2158, file: !2159, line: 19, baseType: !873, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2158, file: !2159, line: 19, baseType: !873, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2158, file: !2159, line: 19, baseType: !873, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2158, file: !2159, line: 19, baseType: !873, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2158, file: !2159, line: 19, baseType: !873, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2158, file: !2159, line: 20, baseType: !873, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2158, file: !2159, line: 20, baseType: !873, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2158, file: !2159, line: 20, baseType: !873, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2158, file: !2159, line: 20, baseType: !873, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2158, file: !2159, line: 20, baseType: !873, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2158, file: !2159, line: 20, baseType: !873, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2153, file: !2154, line: 491, baseType: !335, size: 64, offset: 192)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2153, file: !2154, line: 495, baseType: !327, size: 16, offset: 256)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2153, file: !2154, line: 496, baseType: !327, size: 16, offset: 272)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2153, file: !2154, line: 497, baseType: !327, size: 16, offset: 288)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2153, file: !2154, line: 498, baseType: !327, size: 16, offset: 304)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2153, file: !2154, line: 502, baseType: !335, size: 64, offset: 320)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2153, file: !2154, line: 503, baseType: !335, size: 64, offset: 384)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2153, file: !2154, line: 514, baseType: !2182, size: 256, offset: 448)
!2182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2183, size: 256, elements: !1169)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2154, line: 483, flags: DIFlagFwdDecl)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2153, file: !2154, line: 516, baseType: !335, size: 64, offset: 704)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2153, file: !2154, line: 518, baseType: !335, size: 64, offset: 768)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2153, file: !2154, line: 520, baseType: !335, size: 64, offset: 832)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2153, file: !2154, line: 521, baseType: !335, size: 64, offset: 896)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2153, file: !2154, line: 522, baseType: !335, size: 64, offset: 960)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2153, file: !2154, line: 528, baseType: !2191, size: 64, offset: 1024)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2154, line: 10, flags: DIFlagFwdDecl)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2153, file: !2154, line: 535, baseType: !335, size: 64, offset: 1088)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2153, file: !2154, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2153, file: !2154, line: 540, baseType: !2196, size: 33280, offset: 1536)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2197, line: 317, size: 33280, elements: !2198)
!2197 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2198 = !{!2199, !2200, !2201}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2196, file: !2197, line: 330, baseType: !7, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2196, file: !2197, line: 337, baseType: !335, size: 64, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2196, file: !2197, line: 348, baseType: !2202, size: 32768, offset: 512)
!2202 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2197, line: 304, size: 32768, elements: !2203)
!2203 = !{!2204, !2219, !2258, !2308, !2321}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2202, file: !2197, line: 305, baseType: !2205, size: 896)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2197, line: 12, size: 896, elements: !2206)
!2206 = !{!2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2218}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2205, file: !2197, line: 13, baseType: !426, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2205, file: !2197, line: 14, baseType: !426, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2205, file: !2197, line: 15, baseType: !426, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2205, file: !2197, line: 16, baseType: !426, size: 32, offset: 96)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2205, file: !2197, line: 17, baseType: !426, size: 32, offset: 128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2205, file: !2197, line: 18, baseType: !426, size: 32, offset: 160)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2205, file: !2197, line: 19, baseType: !426, size: 32, offset: 192)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2205, file: !2197, line: 22, baseType: !2215, size: 640, offset: 224)
!2215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 640, elements: !2216)
!2216 = !{!2217}
!2217 = !DISubrange(count: 20)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2205, file: !2197, line: 25, baseType: !426, size: 32, offset: 864)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2202, file: !2197, line: 306, baseType: !2220, size: 4096, align: 128)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2197, line: 34, size: 4096, align: 128, elements: !2221)
!2221 = !{!2222, !2223, !2224, !2225, !2226, !2241, !2242, !2243, !2247, !2249, !2253}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2220, file: !2197, line: 35, baseType: !873, size: 16)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2220, file: !2197, line: 36, baseType: !873, size: 16, offset: 16)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2220, file: !2197, line: 37, baseType: !873, size: 16, offset: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2220, file: !2197, line: 38, baseType: !873, size: 16, offset: 48)
!2226 = !DIDerivedType(tag: DW_TAG_member, scope: !2220, file: !2197, line: 39, baseType: !2227, size: 128, offset: 64)
!2227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2220, file: !2197, line: 39, size: 128, elements: !2228)
!2228 = !{!2229, !2234}
!2229 = !DIDerivedType(tag: DW_TAG_member, scope: !2227, file: !2197, line: 40, baseType: !2230, size: 128)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !2197, line: 40, size: 128, elements: !2231)
!2231 = !{!2232, !2233}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2230, file: !2197, line: 41, baseType: !432, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2230, file: !2197, line: 42, baseType: !432, size: 64, offset: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, scope: !2227, file: !2197, line: 44, baseType: !2235, size: 128)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !2197, line: 44, size: 128, elements: !2236)
!2236 = !{!2237, !2238, !2239, !2240}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2235, file: !2197, line: 45, baseType: !426, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2235, file: !2197, line: 46, baseType: !426, size: 32, offset: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2235, file: !2197, line: 47, baseType: !426, size: 32, offset: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2235, file: !2197, line: 48, baseType: !426, size: 32, offset: 96)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2220, file: !2197, line: 51, baseType: !426, size: 32, offset: 192)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2220, file: !2197, line: 52, baseType: !426, size: 32, offset: 224)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2220, file: !2197, line: 55, baseType: !2244, size: 1024, offset: 256)
!2244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 1024, elements: !2245)
!2245 = !{!2246}
!2246 = !DISubrange(count: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2220, file: !2197, line: 58, baseType: !2248, size: 2048, offset: 1280)
!2248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 2048, elements: !290)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2220, file: !2197, line: 60, baseType: !2250, size: 384, offset: 3328)
!2250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 384, elements: !2251)
!2251 = !{!2252}
!2252 = !DISubrange(count: 12)
!2253 = !DIDerivedType(tag: DW_TAG_member, scope: !2220, file: !2197, line: 62, baseType: !2254, size: 384, offset: 3712)
!2254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2220, file: !2197, line: 62, size: 384, elements: !2255)
!2255 = !{!2256, !2257}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2254, file: !2197, line: 63, baseType: !2250, size: 384)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2254, file: !2197, line: 64, baseType: !2250, size: 384)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2202, file: !2197, line: 307, baseType: !2259, size: 1088)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2197, line: 79, size: 1088, elements: !2260)
!2260 = !{!2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2307}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2259, file: !2197, line: 80, baseType: !426, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2259, file: !2197, line: 81, baseType: !426, size: 32, offset: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2259, file: !2197, line: 82, baseType: !426, size: 32, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2259, file: !2197, line: 83, baseType: !426, size: 32, offset: 96)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2259, file: !2197, line: 84, baseType: !426, size: 32, offset: 128)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2259, file: !2197, line: 85, baseType: !426, size: 32, offset: 160)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2259, file: !2197, line: 86, baseType: !426, size: 32, offset: 192)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2259, file: !2197, line: 88, baseType: !2215, size: 640, offset: 224)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2259, file: !2197, line: 89, baseType: !1366, size: 8, offset: 864)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2259, file: !2197, line: 90, baseType: !1366, size: 8, offset: 872)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2259, file: !2197, line: 91, baseType: !1366, size: 8, offset: 880)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2259, file: !2197, line: 92, baseType: !1366, size: 8, offset: 888)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2259, file: !2197, line: 93, baseType: !1366, size: 8, offset: 896)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2259, file: !2197, line: 94, baseType: !1366, size: 8, offset: 904)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2259, file: !2197, line: 95, baseType: !2276, size: 64, offset: 960)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2278, line: 11, size: 128, elements: !2279)
!2278 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2279 = !{!2280, !2281}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2277, file: !2278, line: 12, baseType: !320, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2277, file: !2278, line: 13, baseType: !2282, size: 64, offset: 64)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2284, line: 56, size: 1344, elements: !2285)
!2284 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2285 = !{!2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2283, file: !2284, line: 61, baseType: !335, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2283, file: !2284, line: 62, baseType: !335, size: 64, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2283, file: !2284, line: 63, baseType: !335, size: 64, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2283, file: !2284, line: 64, baseType: !335, size: 64, offset: 192)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2283, file: !2284, line: 65, baseType: !335, size: 64, offset: 256)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2283, file: !2284, line: 66, baseType: !335, size: 64, offset: 320)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2283, file: !2284, line: 68, baseType: !335, size: 64, offset: 384)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2283, file: !2284, line: 69, baseType: !335, size: 64, offset: 448)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2283, file: !2284, line: 70, baseType: !335, size: 64, offset: 512)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2283, file: !2284, line: 71, baseType: !335, size: 64, offset: 576)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2283, file: !2284, line: 72, baseType: !335, size: 64, offset: 640)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2283, file: !2284, line: 73, baseType: !335, size: 64, offset: 704)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2283, file: !2284, line: 74, baseType: !335, size: 64, offset: 768)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2283, file: !2284, line: 75, baseType: !335, size: 64, offset: 832)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2283, file: !2284, line: 76, baseType: !335, size: 64, offset: 896)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2283, file: !2284, line: 81, baseType: !335, size: 64, offset: 960)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2283, file: !2284, line: 83, baseType: !335, size: 64, offset: 1024)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2283, file: !2284, line: 84, baseType: !335, size: 64, offset: 1088)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2283, file: !2284, line: 85, baseType: !335, size: 64, offset: 1152)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2283, file: !2284, line: 86, baseType: !335, size: 64, offset: 1216)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2283, file: !2284, line: 87, baseType: !335, size: 64, offset: 1280)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2259, file: !2197, line: 96, baseType: !426, size: 32, offset: 1024)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2202, file: !2197, line: 308, baseType: !2309, size: 4608, align: 512)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2197, line: 289, size: 4608, align: 512, elements: !2310)
!2310 = !{!2311, !2312, !2319}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2309, file: !2197, line: 290, baseType: !2220, size: 4096, align: 128)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2309, file: !2197, line: 291, baseType: !2313, size: 512, offset: 4096)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2197, line: 268, size: 512, elements: !2314)
!2314 = !{!2315, !2316, !2317}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2313, file: !2197, line: 269, baseType: !432, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2313, file: !2197, line: 270, baseType: !432, size: 64, offset: 64)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2313, file: !2197, line: 271, baseType: !2318, size: 384, offset: 128)
!2318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !432, size: 384, elements: !1639)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2309, file: !2197, line: 292, baseType: !2320, offset: 4608)
!2320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1366, elements: !1737)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2202, file: !2197, line: 309, baseType: !2322, size: 32768)
!2322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1366, size: 32768, elements: !2323)
!2323 = !{!2324}
!2324 = !DISubrange(count: 4096)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1227, file: !736, line: 378, baseType: !2326, size: 64, offset: 64)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1223, file: !736, line: 384, baseType: !1516, size: 192, offset: 192)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !992, file: !736, line: 500, baseType: !243, offset: 6656)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !992, file: !736, line: 501, baseType: !2330, size: 64, offset: 6656)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2331 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !736, line: 387, flags: DIFlagFwdDecl)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !992, file: !736, line: 516, baseType: !1727, size: 64, offset: 6720)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !992, file: !736, line: 519, baseType: !363, size: 64, offset: 6784)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !992, file: !736, line: 521, baseType: !2335, size: 64, offset: 6848)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64)
!2336 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !736, line: 521, flags: DIFlagFwdDecl)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !992, file: !736, line: 545, baseType: !761, size: 32, offset: 6912)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !992, file: !736, line: 548, baseType: !501, size: 8, offset: 6944)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !992, file: !736, line: 550, baseType: !2340, offset: 6952)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2341, line: 142, elements: !257)
!2341 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !992, file: !736, line: 554, baseType: !1972, size: 256, offset: 6976)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !992, file: !736, line: 557, baseType: !426, size: 32, offset: 7232)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !989, file: !736, line: 565, baseType: !2345, offset: 7296)
!2345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, elements: !2346)
!2346 = !{!2347}
!2347 = !DISubrange(count: -1)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !985, file: !736, line: 151, baseType: !761, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !978, file: !736, line: 156, baseType: !243, offset: 256)
!2350 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 159, baseType: !2351, size: 128)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 159, size: 128, elements: !2352)
!2352 = !{!2353, !2417}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2351, file: !736, line: 161, baseType: !2354, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2356)
!2356 = !{!2357, !2367, !2388, !2389, !2390, !2391, !2392, !2404, !2405, !2406}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2355, file: !31, line: 111, baseType: !2358, size: 384)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2359)
!2359 = !{!2360, !2362, !2363, !2364, !2365, !2366}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2358, file: !31, line: 20, baseType: !2361, size: 64)
!2361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2358, file: !31, line: 21, baseType: !2361, size: 64, offset: 64)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2358, file: !31, line: 22, baseType: !2361, size: 64, offset: 128)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2358, file: !31, line: 23, baseType: !335, size: 64, offset: 192)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2358, file: !31, line: 24, baseType: !335, size: 64, offset: 256)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2358, file: !31, line: 25, baseType: !335, size: 64, offset: 320)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2355, file: !31, line: 112, baseType: !2368, size: 64, offset: 384)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2370, line: 105, size: 128, elements: !2371)
!2370 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2371 = !{!2372, !2373}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2369, file: !2370, line: 110, baseType: !335, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2369, file: !2370, line: 118, baseType: !2374, size: 64, offset: 64)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2370, line: 95, size: 448, elements: !2376)
!2376 = !{!2377, !2378, !2383, !2384, !2385, !2386, !2387}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2375, file: !2370, line: 96, baseType: !785, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2375, file: !2370, line: 97, baseType: !2379, size: 64, offset: 64)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2370, line: 60, baseType: !2381)
!2381 = !DISubroutineType(types: !2382)
!2382 = !{null, !2368}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2375, file: !2370, line: 98, baseType: !2379, size: 64, offset: 128)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2375, file: !2370, line: 99, baseType: !501, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2375, file: !2370, line: 100, baseType: !501, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2375, file: !2370, line: 101, baseType: !376, size: 128, align: 64, offset: 256)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2375, file: !2370, line: 102, baseType: !2368, size: 64, offset: 384)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2355, file: !31, line: 113, baseType: !2369, size: 128, offset: 448)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2355, file: !31, line: 114, baseType: !1516, size: 192, offset: 576)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2355, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2355, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2355, file: !31, line: 117, baseType: !2393, size: 64, offset: 832)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!2394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2395)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2396)
!2396 = !{!2397, !2398, !2402, !2403}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2395, file: !31, line: 73, baseType: !854, size: 64)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2395, file: !31, line: 78, baseType: !2399, size: 64, offset: 64)
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 64)
!2400 = !DISubroutineType(types: !2401)
!2401 = !{null, !2354}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2395, file: !31, line: 83, baseType: !2399, size: 64, offset: 128)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2395, file: !31, line: 89, baseType: !1041, size: 64, offset: 192)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2355, file: !31, line: 118, baseType: !209, size: 64, offset: 896)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2355, file: !31, line: 119, baseType: !269, size: 32, offset: 960)
!2406 = !DIDerivedType(tag: DW_TAG_member, scope: !2355, file: !31, line: 120, baseType: !2407, size: 128, offset: 1024)
!2407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2355, file: !31, line: 120, size: 128, elements: !2408)
!2408 = !{!2409, !2415}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2407, file: !31, line: 121, baseType: !2410, size: 128)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2411, line: 6, size: 128, elements: !2412)
!2411 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2412 = !{!2413, !2414}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2410, file: !2411, line: 7, baseType: !432, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2410, file: !2411, line: 8, baseType: !432, size: 64, offset: 64)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2407, file: !31, line: 122, baseType: !2416)
!2416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2410, elements: !1737)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2351, file: !736, line: 162, baseType: !209, size: 64, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !740, file: !736, line: 176, baseType: !376, size: 128, align: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, scope: !735, file: !736, line: 179, baseType: !2420, size: 32, offset: 384)
!2420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !735, file: !736, line: 179, size: 32, elements: !2421)
!2421 = !{!2422, !2423, !2424, !2425}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2420, file: !736, line: 184, baseType: !761, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2420, file: !736, line: 192, baseType: !7, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2420, file: !736, line: 194, baseType: !7, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2420, file: !736, line: 195, baseType: !269, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !735, file: !736, line: 199, baseType: !761, size: 32, offset: 416)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !670, file: !44, line: 1964, baseType: !2428, size: 64, offset: 1344)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 64)
!2429 = !DISubroutineType(types: !2430)
!2430 = !{!320, !610, !2431}
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2433, line: 12, size: 256, elements: !2434)
!2433 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2434 = !{!2435, !2436, !2437, !2438, !2439}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2432, file: !2433, line: 13, baseType: !757, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2432, file: !2433, line: 16, baseType: !269, size: 32, offset: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2432, file: !2433, line: 23, baseType: !335, size: 64, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2432, file: !2433, line: 30, baseType: !335, size: 64, offset: 128)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2432, file: !2433, line: 33, baseType: !2440, size: 64, offset: 192)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !736, line: 27, flags: DIFlagFwdDecl)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !670, file: !44, line: 1966, baseType: !2428, size: 64, offset: 1408)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !611, file: !44, line: 1424, baseType: !2444, size: 64, offset: 448)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2446)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2447)
!2447 = !{!2448, !2494, !2498, !2502, !2503, !2504, !2505, !2506, !2511, !2516, !2520}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2446, file: !38, line: 323, baseType: !2449, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DISubroutineType(types: !2451)
!2451 = !{!269, !2452}
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 64)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2454)
!2454 = !{!2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2479, !2480, !2481}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2453, file: !38, line: 295, baseType: !652, size: 128)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2453, file: !38, line: 296, baseType: !214, size: 128, offset: 128)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2453, file: !38, line: 297, baseType: !214, size: 128, offset: 256)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2453, file: !38, line: 298, baseType: !214, size: 128, offset: 384)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2453, file: !38, line: 299, baseType: !1187, size: 192, offset: 512)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2453, file: !38, line: 300, baseType: !243, offset: 704)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2453, file: !38, line: 301, baseType: !761, size: 32, offset: 704)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2453, file: !38, line: 302, baseType: !610, size: 64, offset: 768)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2453, file: !38, line: 303, baseType: !2464, size: 64, offset: 832)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2465)
!2465 = !{!2466, !2478}
!2466 = !DIDerivedType(tag: DW_TAG_member, scope: !2464, file: !38, line: 69, baseType: !2467, size: 32)
!2467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2464, file: !38, line: 69, size: 32, elements: !2468)
!2468 = !{!2469, !2470, !2471}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2467, file: !38, line: 70, baseType: !446, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2467, file: !38, line: 71, baseType: !454, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2467, file: !38, line: 72, baseType: !2472, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2473, line: 24, baseType: !2474)
!2473 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2473, line: 22, size: 32, elements: !2475)
!2475 = !{!2476}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2474, file: !2473, line: 23, baseType: !2477, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2473, line: 20, baseType: !452)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2464, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2453, file: !38, line: 304, baseType: !542, size: 64, offset: 896)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2453, file: !38, line: 305, baseType: !335, size: 64, offset: 960)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2453, file: !38, line: 306, baseType: !2482, size: 576, offset: 1024)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2483)
!2483 = !{!2484, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2482, file: !38, line: 206, baseType: !2485, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !544)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2482, file: !38, line: 207, baseType: !2485, size: 64, offset: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2482, file: !38, line: 208, baseType: !2485, size: 64, offset: 128)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2482, file: !38, line: 209, baseType: !2485, size: 64, offset: 192)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2482, file: !38, line: 210, baseType: !2485, size: 64, offset: 256)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2482, file: !38, line: 211, baseType: !2485, size: 64, offset: 320)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2482, file: !38, line: 212, baseType: !2485, size: 64, offset: 384)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2482, file: !38, line: 213, baseType: !550, size: 64, offset: 448)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2482, file: !38, line: 214, baseType: !550, size: 64, offset: 512)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2446, file: !38, line: 324, baseType: !2495, size: 64, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = !DISubroutineType(types: !2497)
!2497 = !{!2452, !610, !269}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2446, file: !38, line: 325, baseType: !2499, size: 64, offset: 128)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{null, !2452}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2446, file: !38, line: 326, baseType: !2449, size: 64, offset: 192)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2446, file: !38, line: 327, baseType: !2449, size: 64, offset: 256)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2446, file: !38, line: 328, baseType: !2449, size: 64, offset: 320)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2446, file: !38, line: 329, baseType: !698, size: 64, offset: 384)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2446, file: !38, line: 332, baseType: !2507, size: 64, offset: 448)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{!2510, !440}
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2446, file: !38, line: 333, baseType: !2512, size: 64, offset: 512)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 64)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{!269, !440, !2515}
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2446, file: !38, line: 335, baseType: !2517, size: 64, offset: 576)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2518 = !DISubroutineType(types: !2519)
!2519 = !{!269, !440, !2510}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2446, file: !38, line: 337, baseType: !2521, size: 64, offset: 640)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = !DISubroutineType(types: !2523)
!2523 = !{!269, !610, !2524}
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !611, file: !44, line: 1425, baseType: !2526, size: 64, offset: 512)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 64)
!2527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2528)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2529)
!2529 = !{!2530, !2534, !2535, !2539, !2540, !2541, !2556, !2579, !2583, !2584, !2607}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2528, file: !38, line: 429, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{!269, !610, !269, !269, !560}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2528, file: !38, line: 430, baseType: !698, size: 64, offset: 64)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2528, file: !38, line: 431, baseType: !2536, size: 64, offset: 128)
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 64)
!2537 = !DISubroutineType(types: !2538)
!2538 = !{!269, !610, !7}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2528, file: !38, line: 432, baseType: !2536, size: 64, offset: 192)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2528, file: !38, line: 433, baseType: !698, size: 64, offset: 256)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2528, file: !38, line: 434, baseType: !2542, size: 64, offset: 320)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!269, !610, !269, !2545}
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 64)
!2546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2547)
!2547 = !{!2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2546, file: !38, line: 416, baseType: !269, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2546, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2546, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2546, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2546, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2546, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2546, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2546, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2528, file: !38, line: 435, baseType: !2557, size: 64, offset: 384)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!269, !610, !2464, !2560}
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2562)
!2562 = !{!2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2561, file: !38, line: 344, baseType: !269, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2561, file: !38, line: 345, baseType: !432, size: 64, offset: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2561, file: !38, line: 346, baseType: !432, size: 64, offset: 128)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2561, file: !38, line: 347, baseType: !432, size: 64, offset: 192)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2561, file: !38, line: 348, baseType: !432, size: 64, offset: 256)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2561, file: !38, line: 349, baseType: !432, size: 64, offset: 320)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2561, file: !38, line: 350, baseType: !432, size: 64, offset: 384)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2561, file: !38, line: 351, baseType: !791, size: 64, offset: 448)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2561, file: !38, line: 353, baseType: !791, size: 64, offset: 512)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2561, file: !38, line: 354, baseType: !269, size: 32, offset: 576)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2561, file: !38, line: 355, baseType: !269, size: 32, offset: 608)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2561, file: !38, line: 356, baseType: !432, size: 64, offset: 640)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2561, file: !38, line: 357, baseType: !432, size: 64, offset: 704)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2561, file: !38, line: 358, baseType: !432, size: 64, offset: 768)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2561, file: !38, line: 359, baseType: !791, size: 64, offset: 832)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2561, file: !38, line: 360, baseType: !269, size: 32, offset: 896)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2528, file: !38, line: 436, baseType: !2580, size: 64, offset: 448)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = !DISubroutineType(types: !2582)
!2582 = !{!269, !610, !2524, !2560}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2528, file: !38, line: 438, baseType: !2557, size: 64, offset: 512)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2528, file: !38, line: 439, baseType: !2585, size: 64, offset: 576)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2586 = !DISubroutineType(types: !2587)
!2587 = !{!269, !610, !2588}
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2590)
!2590 = !{!2591, !2592}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2589, file: !38, line: 410, baseType: !7, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2589, file: !38, line: 411, baseType: !2593, size: 1344, offset: 64)
!2593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2594, size: 1344, elements: !286)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2595)
!2595 = !{!2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2606}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2594, file: !38, line: 396, baseType: !7, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2594, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2594, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2594, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2594, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2594, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2594, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2594, file: !38, line: 404, baseType: !434, size: 64, offset: 256)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2594, file: !38, line: 405, baseType: !2605, size: 64, offset: 320)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !215, line: 126, baseType: !432)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2594, file: !38, line: 406, baseType: !2605, size: 64, offset: 384)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2528, file: !38, line: 440, baseType: !2536, size: 64, offset: 640)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !611, file: !44, line: 1426, baseType: !2609, size: 64, offset: 576)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2611)
!2611 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !611, file: !44, line: 1427, baseType: !335, size: 64, offset: 640)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !611, file: !44, line: 1428, baseType: !335, size: 64, offset: 704)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !611, file: !44, line: 1429, baseType: !335, size: 64, offset: 768)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !611, file: !44, line: 1430, baseType: !393, size: 64, offset: 832)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !611, file: !44, line: 1431, baseType: !781, size: 256, offset: 896)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !611, file: !44, line: 1432, baseType: !269, size: 32, offset: 1152)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !611, file: !44, line: 1433, baseType: !761, size: 32, offset: 1184)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !611, file: !44, line: 1437, baseType: !2620, size: 64, offset: 1216)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 64)
!2622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2623)
!2623 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !611, file: !44, line: 1449, baseType: !2625, size: 64, offset: 1280)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !409, line: 34, size: 64, elements: !2626)
!2626 = !{!2627}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2625, file: !409, line: 35, baseType: !412, size: 64)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !611, file: !44, line: 1450, baseType: !214, size: 128, offset: 1344)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !611, file: !44, line: 1451, baseType: !2630, size: 64, offset: 1472)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !611, file: !44, line: 1452, baseType: !1938, size: 64, offset: 1536)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !611, file: !44, line: 1453, baseType: !2634, size: 64, offset: 1600)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64)
!2635 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !611, file: !44, line: 1454, baseType: !652, size: 128, offset: 1664)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !611, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !611, file: !44, line: 1456, baseType: !2639, size: 2432, offset: 1856)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2640)
!2640 = !{!2641, !2642, !2643, !2645, !2677}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2639, file: !38, line: 519, baseType: !7, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2639, file: !38, line: 520, baseType: !781, size: 256, offset: 64)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2639, file: !38, line: 521, baseType: !2644, size: 192, offset: 320)
!2644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !440, size: 192, elements: !286)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2639, file: !38, line: 522, baseType: !2646, size: 1728, offset: 512)
!2646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2647, size: 1728, elements: !286)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2648)
!2648 = !{!2649, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2647, file: !38, line: 223, baseType: !2650, size: 64)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2652)
!2652 = !{!2653, !2654, !2667, !2668}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2651, file: !38, line: 444, baseType: !269, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2651, file: !38, line: 445, baseType: !2655, size: 64, offset: 64)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2657)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2658)
!2658 = !{!2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2657, file: !38, line: 311, baseType: !698, size: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2657, file: !38, line: 312, baseType: !698, size: 64, offset: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2657, file: !38, line: 313, baseType: !698, size: 64, offset: 128)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2657, file: !38, line: 314, baseType: !698, size: 64, offset: 192)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2657, file: !38, line: 315, baseType: !2449, size: 64, offset: 256)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2657, file: !38, line: 316, baseType: !2449, size: 64, offset: 320)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2657, file: !38, line: 317, baseType: !2449, size: 64, offset: 384)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2657, file: !38, line: 318, baseType: !2521, size: 64, offset: 448)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2651, file: !38, line: 446, baseType: !643, size: 64, offset: 128)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2651, file: !38, line: 447, baseType: !2650, size: 64, offset: 192)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2647, file: !38, line: 224, baseType: !269, size: 32, offset: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2647, file: !38, line: 226, baseType: !214, size: 128, offset: 128)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2647, file: !38, line: 227, baseType: !335, size: 64, offset: 256)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2647, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2647, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2647, file: !38, line: 230, baseType: !2485, size: 64, offset: 384)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2647, file: !38, line: 231, baseType: !2485, size: 64, offset: 448)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2647, file: !38, line: 232, baseType: !209, size: 64, offset: 512)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2639, file: !38, line: 523, baseType: !2678, size: 192, offset: 2240)
!2678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2655, size: 192, elements: !286)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !611, file: !44, line: 1458, baseType: !2680, size: 2112, offset: 4288)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2681)
!2681 = !{!2682, !2683, !2684}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2680, file: !44, line: 1411, baseType: !269, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2680, file: !44, line: 1412, baseType: !1495, size: 128, offset: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2680, file: !44, line: 1413, baseType: !2685, size: 1920, offset: 192)
!2685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2686, size: 1920, elements: !286)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2687, line: 12, size: 640, elements: !2688)
!2687 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2688 = !{!2689, !2697, !2699, !2704, !2705}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2686, file: !2687, line: 13, baseType: !2690, size: 320)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2691, line: 17, size: 320, elements: !2692)
!2691 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2692 = !{!2693, !2694, !2695, !2696}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2690, file: !2691, line: 18, baseType: !269, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2690, file: !2691, line: 19, baseType: !269, size: 32, offset: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2690, file: !2691, line: 20, baseType: !1495, size: 128, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2690, file: !2691, line: 22, baseType: !376, size: 128, align: 64, offset: 192)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2686, file: !2687, line: 14, baseType: !2698, size: 64, offset: 320)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2686, file: !2687, line: 15, baseType: !2700, size: 64, offset: 384)
!2700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2701, line: 16, size: 64, elements: !2702)
!2701 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2702 = !{!2703}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2700, file: !2701, line: 17, baseType: !1230, size: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2686, file: !2687, line: 16, baseType: !1495, size: 128, offset: 448)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2686, file: !2687, line: 17, baseType: !761, size: 32, offset: 576)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !611, file: !44, line: 1465, baseType: !209, size: 64, offset: 6400)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !611, file: !44, line: 1468, baseType: !426, size: 32, offset: 6464)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !611, file: !44, line: 1470, baseType: !550, size: 64, offset: 6528)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !611, file: !44, line: 1471, baseType: !550, size: 64, offset: 6592)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !611, file: !44, line: 1473, baseType: !428, size: 32, offset: 6656)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !611, file: !44, line: 1474, baseType: !2712, size: 64, offset: 6720)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !611, file: !44, line: 1477, baseType: !2715, size: 256, offset: 6784)
!2715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 256, elements: !2245)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !611, file: !44, line: 1478, baseType: !2717, size: 128, offset: 7040)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2718, line: 18, baseType: !2719)
!2718 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2718, line: 16, size: 128, elements: !2720)
!2720 = !{!2721}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2719, file: !2718, line: 17, baseType: !2722, size: 128)
!2722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1367, size: 128, elements: !1749)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !611, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !611, file: !44, line: 1481, baseType: !2725, size: 32, offset: 7200)
!2725 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !215, line: 150, baseType: !7)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !611, file: !44, line: 1487, baseType: !1187, size: 192, offset: 7232)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !611, file: !44, line: 1493, baseType: !231, size: 64, offset: 7424)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !611, file: !44, line: 1495, baseType: !2729, size: 64, offset: 7488)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2731)
!2731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !391, line: 135, size: 1024, align: 512, elements: !2732)
!2732 = !{!2733, !2737, !2738, !2745, !2751, !2755, !2759, !2763, !2764, !2768, !2772, !2777, !2781}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2731, file: !391, line: 136, baseType: !2734, size: 64)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{!269, !393, !7}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2731, file: !391, line: 137, baseType: !2734, size: 64, offset: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2731, file: !391, line: 138, baseType: !2739, size: 64, offset: 128)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{!269, !2742, !2744}
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !394)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2731, file: !391, line: 139, baseType: !2746, size: 64, offset: 192)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = !DISubroutineType(types: !2748)
!2748 = !{!269, !2742, !7, !231, !2749}
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !417)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2731, file: !391, line: 141, baseType: !2752, size: 64, offset: 256)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 64)
!2753 = !DISubroutineType(types: !2754)
!2754 = !{!269, !2742}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2731, file: !391, line: 142, baseType: !2756, size: 64, offset: 320)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DISubroutineType(types: !2758)
!2758 = !{!269, !393}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2731, file: !391, line: 143, baseType: !2760, size: 64, offset: 384)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = !DISubroutineType(types: !2762)
!2762 = !{null, !393}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2731, file: !391, line: 144, baseType: !2760, size: 64, offset: 448)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2731, file: !391, line: 145, baseType: !2765, size: 64, offset: 512)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DISubroutineType(types: !2767)
!2767 = !{null, !393, !440}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2731, file: !391, line: 146, baseType: !2769, size: 64, offset: 576)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!285, !393, !285, !269}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2731, file: !391, line: 147, baseType: !2773, size: 64, offset: 640)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 64)
!2774 = !DISubroutineType(types: !2775)
!2775 = !{!389, !2776}
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2731, file: !391, line: 148, baseType: !2778, size: 64, offset: 704)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 64)
!2779 = !DISubroutineType(types: !2780)
!2780 = !{!269, !560, !501}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2731, file: !391, line: 149, baseType: !2782, size: 64, offset: 768)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{!393, !393, !2785}
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 64)
!2786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !441)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !611, file: !44, line: 1500, baseType: !269, size: 32, offset: 7552)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !611, file: !44, line: 1502, baseType: !2789, size: 448, offset: 7616)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2433, line: 60, size: 448, elements: !2790)
!2790 = !{!2791, !2796, !2797, !2798, !2799, !2800, !2801}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2789, file: !2433, line: 61, baseType: !2792, size: 64)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{!335, !2795, !2431}
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2789, file: !2433, line: 63, baseType: !2792, size: 64, offset: 64)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2789, file: !2433, line: 66, baseType: !320, size: 64, offset: 128)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2789, file: !2433, line: 67, baseType: !269, size: 32, offset: 192)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2789, file: !2433, line: 68, baseType: !7, size: 32, offset: 224)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2789, file: !2433, line: 71, baseType: !214, size: 128, offset: 256)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2789, file: !2433, line: 77, baseType: !2802, size: 64, offset: 384)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !611, file: !44, line: 1505, baseType: !785, size: 64, offset: 8064)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !611, file: !44, line: 1508, baseType: !785, size: 64, offset: 8128)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !611, file: !44, line: 1511, baseType: !269, size: 32, offset: 8192)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !611, file: !44, line: 1514, baseType: !923, size: 32, offset: 8224)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !611, file: !44, line: 1517, baseType: !2808, size: 64, offset: 8256)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1973, line: 18, flags: DIFlagFwdDecl)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !611, file: !44, line: 1518, baseType: !648, size: 64, offset: 8320)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !611, file: !44, line: 1525, baseType: !1727, size: 64, offset: 8384)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !611, file: !44, line: 1532, baseType: !2813, size: 64, offset: 8448)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2814, line: 52, size: 64, elements: !2815)
!2814 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2815 = !{!2816}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2813, file: !2814, line: 53, baseType: !2817, size: 64)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 64)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2814, line: 40, size: 256, elements: !2819)
!2819 = !{!2820, !2821, !2826}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2818, file: !2814, line: 42, baseType: !243)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2818, file: !2814, line: 44, baseType: !2822, size: 192)
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2814, line: 28, size: 192, elements: !2823)
!2823 = !{!2824, !2825}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2822, file: !2814, line: 29, baseType: !214, size: 128)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2822, file: !2814, line: 31, baseType: !320, size: 64, offset: 128)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2818, file: !2814, line: 49, baseType: !320, size: 64, offset: 192)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !611, file: !44, line: 1533, baseType: !2813, size: 64, offset: 8512)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !611, file: !44, line: 1534, baseType: !376, size: 128, align: 64, offset: 8576)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !611, file: !44, line: 1535, baseType: !1972, size: 256, offset: 8704)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !611, file: !44, line: 1537, baseType: !1187, size: 192, offset: 8960)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !611, file: !44, line: 1542, baseType: !269, size: 32, offset: 9152)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !611, file: !44, line: 1545, baseType: !243, offset: 9184)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !611, file: !44, line: 1546, baseType: !214, size: 128, offset: 9216)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !611, file: !44, line: 1548, baseType: !243, offset: 9344)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !611, file: !44, line: 1549, baseType: !214, size: 128, offset: 9344)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !441, file: !44, line: 624, baseType: !747, size: 64, offset: 256)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !441, file: !44, line: 631, baseType: !335, size: 64, offset: 320)
!2838 = !DIDerivedType(tag: DW_TAG_member, scope: !441, file: !44, line: 639, baseType: !2839, size: 32, offset: 384)
!2839 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !441, file: !44, line: 639, size: 32, elements: !2840)
!2840 = !{!2841, !2843}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2839, file: !44, line: 640, baseType: !2842, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2839, file: !44, line: 641, baseType: !7, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !441, file: !44, line: 643, baseType: !524, size: 32, offset: 416)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !441, file: !44, line: 644, baseType: !542, size: 64, offset: 448)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !441, file: !44, line: 645, baseType: !546, size: 128, offset: 512)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !441, file: !44, line: 646, baseType: !546, size: 128, offset: 640)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !441, file: !44, line: 647, baseType: !546, size: 128, offset: 768)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !441, file: !44, line: 648, baseType: !243, offset: 896)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !441, file: !44, line: 649, baseType: !327, size: 16, offset: 896)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !441, file: !44, line: 650, baseType: !1366, size: 8, offset: 912)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !441, file: !44, line: 651, baseType: !1366, size: 8, offset: 920)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !441, file: !44, line: 652, baseType: !2605, size: 64, offset: 960)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !441, file: !44, line: 659, baseType: !335, size: 64, offset: 1024)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !441, file: !44, line: 660, baseType: !781, size: 256, offset: 1088)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !441, file: !44, line: 662, baseType: !335, size: 64, offset: 1344)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !441, file: !44, line: 663, baseType: !335, size: 64, offset: 1408)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !441, file: !44, line: 665, baseType: !652, size: 128, offset: 1472)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !441, file: !44, line: 666, baseType: !214, size: 128, offset: 1600)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !441, file: !44, line: 675, baseType: !214, size: 128, offset: 1728)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !441, file: !44, line: 676, baseType: !214, size: 128, offset: 1856)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !441, file: !44, line: 677, baseType: !214, size: 128, offset: 1984)
!2863 = !DIDerivedType(tag: DW_TAG_member, scope: !441, file: !44, line: 678, baseType: !2864, size: 128, offset: 2112)
!2864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !441, file: !44, line: 678, size: 128, elements: !2865)
!2865 = !{!2866, !2867}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2864, file: !44, line: 679, baseType: !648, size: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2864, file: !44, line: 680, baseType: !376, size: 128, align: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !441, file: !44, line: 682, baseType: !787, size: 64, offset: 2240)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !441, file: !44, line: 683, baseType: !787, size: 64, offset: 2304)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !441, file: !44, line: 684, baseType: !761, size: 32, offset: 2368)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !441, file: !44, line: 685, baseType: !761, size: 32, offset: 2400)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !441, file: !44, line: 686, baseType: !761, size: 32, offset: 2432)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !441, file: !44, line: 688, baseType: !761, size: 32, offset: 2464)
!2874 = !DIDerivedType(tag: DW_TAG_member, scope: !441, file: !44, line: 690, baseType: !2875, size: 64, offset: 2496)
!2875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !441, file: !44, line: 690, size: 64, elements: !2876)
!2876 = !{!2877, !3100}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2875, file: !44, line: 691, baseType: !2878, size: 64)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2880)
!2880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !2881)
!2881 = !{!2882, !2883, !2887, !2892, !2896, !2897, !2898, !2902, !2915, !2916, !2924, !2928, !2929, !2933, !2934, !2938, !2943, !2944, !2948, !2952, !3060, !3064, !3065, !3069, !3070, !3074, !3078, !3083, !3087, !3091, !3095, !3099}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2880, file: !44, line: 1823, baseType: !643, size: 64)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2880, file: !44, line: 1824, baseType: !2884, size: 64, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64)
!2885 = !DISubroutineType(types: !2886)
!2886 = !{!542, !363, !542, !269}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2880, file: !44, line: 1825, baseType: !2888, size: 64, offset: 128)
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2889 = !DISubroutineType(types: !2890)
!2890 = !{!316, !363, !285, !332, !2891}
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2880, file: !44, line: 1826, baseType: !2893, size: 64, offset: 192)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = !DISubroutineType(types: !2895)
!2895 = !{!316, !363, !231, !332, !2891}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2880, file: !44, line: 1827, baseType: !858, size: 64, offset: 256)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2880, file: !44, line: 1828, baseType: !858, size: 64, offset: 320)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2880, file: !44, line: 1829, baseType: !2899, size: 64, offset: 384)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!2900 = !DISubroutineType(types: !2901)
!2901 = !{!269, !861, !501}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2880, file: !44, line: 1830, baseType: !2903, size: 64, offset: 448)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{!269, !363, !2906}
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !2908)
!2908 = !{!2909, !2914}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2907, file: !44, line: 1777, baseType: !2910, size: 64)
!2910 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !2911)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 64)
!2912 = !DISubroutineType(types: !2913)
!2913 = !{!269, !2906, !231, !269, !542, !432, !7}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2907, file: !44, line: 1778, baseType: !542, size: 64, offset: 64)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2880, file: !44, line: 1831, baseType: !2903, size: 64, offset: 512)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2880, file: !44, line: 1832, baseType: !2917, size: 64, offset: 576)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{!2920, !363, !2922}
!2920 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2921, line: 52, baseType: !7)
!2921 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!2923 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !44, line: 56, flags: DIFlagFwdDecl)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2880, file: !44, line: 1833, baseType: !2925, size: 64, offset: 640)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DISubroutineType(types: !2927)
!2927 = !{!320, !363, !7, !335}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2880, file: !44, line: 1834, baseType: !2925, size: 64, offset: 704)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2880, file: !44, line: 1835, baseType: !2930, size: 64, offset: 768)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2931 = !DISubroutineType(types: !2932)
!2932 = !{!269, !363, !995}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2880, file: !44, line: 1836, baseType: !335, size: 64, offset: 832)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2880, file: !44, line: 1837, baseType: !2935, size: 64, offset: 896)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{!269, !440, !363}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2880, file: !44, line: 1838, baseType: !2939, size: 64, offset: 960)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!269, !363, !2942}
!2942 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !209)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2880, file: !44, line: 1839, baseType: !2935, size: 64, offset: 1024)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2880, file: !44, line: 1840, baseType: !2945, size: 64, offset: 1088)
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 64)
!2946 = !DISubroutineType(types: !2947)
!2947 = !{!269, !363, !542, !542, !269}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2880, file: !44, line: 1841, baseType: !2949, size: 64, offset: 1152)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{!269, !269, !363, !269}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2880, file: !44, line: 1842, baseType: !2953, size: 64, offset: 1216)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = !DISubroutineType(types: !2955)
!2955 = !{!269, !363, !269, !2956}
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !2958)
!2958 = !{!2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2990, !2991, !2992, !3005, !3036}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2957, file: !44, line: 1063, baseType: !2956, size: 64)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2957, file: !44, line: 1064, baseType: !214, size: 128, offset: 64)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2957, file: !44, line: 1065, baseType: !652, size: 128, offset: 192)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2957, file: !44, line: 1066, baseType: !214, size: 128, offset: 320)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2957, file: !44, line: 1069, baseType: !214, size: 128, offset: 448)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2957, file: !44, line: 1072, baseType: !2942, size: 64, offset: 576)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2957, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2957, file: !44, line: 1074, baseType: !438, size: 8, offset: 672)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2957, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2957, file: !44, line: 1076, baseType: !269, size: 32, offset: 736)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2957, file: !44, line: 1077, baseType: !1495, size: 128, offset: 768)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2957, file: !44, line: 1078, baseType: !363, size: 64, offset: 896)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2957, file: !44, line: 1079, baseType: !542, size: 64, offset: 960)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2957, file: !44, line: 1080, baseType: !542, size: 64, offset: 1024)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2957, file: !44, line: 1082, baseType: !2974, size: 64, offset: 1088)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !2976)
!2976 = !{!2977, !2985, !2986, !2987, !2988, !2989}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2975, file: !44, line: 1315, baseType: !2978)
!2978 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2979, line: 20, baseType: !2980)
!2979 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2979, line: 11, elements: !2981)
!2981 = !{!2982}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2980, file: !2979, line: 12, baseType: !2983)
!2983 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !255, line: 33, baseType: !2984)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !255, line: 31, elements: !257)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2975, file: !44, line: 1316, baseType: !269, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2975, file: !44, line: 1317, baseType: !269, size: 32, offset: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2975, file: !44, line: 1318, baseType: !2974, size: 64, offset: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2975, file: !44, line: 1319, baseType: !363, size: 64, offset: 128)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2975, file: !44, line: 1320, baseType: !376, size: 128, align: 64, offset: 192)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2957, file: !44, line: 1084, baseType: !335, size: 64, offset: 1152)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2957, file: !44, line: 1085, baseType: !335, size: 64, offset: 1216)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2957, file: !44, line: 1087, baseType: !2993, size: 64, offset: 1280)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2995)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !2996)
!2996 = !{!2997, !3001}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2995, file: !44, line: 1012, baseType: !2998, size: 64)
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 64)
!2999 = !DISubroutineType(types: !3000)
!3000 = !{null, !2956, !2956}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2995, file: !44, line: 1013, baseType: !3002, size: 64, offset: 64)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64)
!3003 = !DISubroutineType(types: !3004)
!3004 = !{null, !2956}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2957, file: !44, line: 1088, baseType: !3006, size: 64, offset: 1344)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3008)
!3008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3009)
!3009 = !{!3010, !3014, !3018, !3019, !3023, !3027, !3031, !3035}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3008, file: !44, line: 1017, baseType: !3011, size: 64)
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 64)
!3012 = !DISubroutineType(types: !3013)
!3013 = !{!2942, !2942}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3008, file: !44, line: 1018, baseType: !3015, size: 64, offset: 64)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{null, !2942}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3008, file: !44, line: 1019, baseType: !3002, size: 64, offset: 128)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3008, file: !44, line: 1020, baseType: !3020, size: 64, offset: 192)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = !DISubroutineType(types: !3022)
!3022 = !{!269, !2956, !269}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3008, file: !44, line: 1021, baseType: !3024, size: 64, offset: 256)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{!501, !2956}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3008, file: !44, line: 1022, baseType: !3028, size: 64, offset: 320)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DISubroutineType(types: !3030)
!3030 = !{!269, !2956, !269, !218}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3008, file: !44, line: 1023, baseType: !3032, size: 64, offset: 384)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{null, !2956, !835}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3008, file: !44, line: 1024, baseType: !3024, size: 64, offset: 448)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2957, file: !44, line: 1097, baseType: !3037, size: 256, offset: 1408)
!3037 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2957, file: !44, line: 1089, size: 256, elements: !3038)
!3038 = !{!3039, !3048, !3054}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3037, file: !44, line: 1090, baseType: !3040, size: 256)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3041, line: 10, size: 256, elements: !3042)
!3041 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3042 = !{!3043, !3044, !3047}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3040, file: !3041, line: 11, baseType: !426, size: 32)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3040, file: !3041, line: 12, baseType: !3045, size: 64, offset: 64)
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3046 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3041, line: 5, flags: DIFlagFwdDecl)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3040, file: !3041, line: 13, baseType: !214, size: 128, offset: 128)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3037, file: !44, line: 1091, baseType: !3049, size: 64)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3041, line: 17, size: 64, elements: !3050)
!3050 = !{!3051}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3049, file: !3041, line: 18, baseType: !3052, size: 64)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3041, line: 16, flags: DIFlagFwdDecl)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3037, file: !44, line: 1096, baseType: !3055, size: 192)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3037, file: !44, line: 1092, size: 192, elements: !3056)
!3056 = !{!3057, !3058, !3059}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3055, file: !44, line: 1093, baseType: !214, size: 128)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3055, file: !44, line: 1094, baseType: !269, size: 32, offset: 128)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3055, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2880, file: !44, line: 1843, baseType: !3061, size: 64, offset: 1280)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = !DISubroutineType(types: !3063)
!3063 = !{!316, !363, !734, !269, !332, !2891, !269}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2880, file: !44, line: 1844, baseType: !1115, size: 64, offset: 1344)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2880, file: !44, line: 1845, baseType: !3066, size: 64, offset: 1408)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!269, !269}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2880, file: !44, line: 1846, baseType: !2953, size: 64, offset: 1472)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2880, file: !44, line: 1847, baseType: !3071, size: 64, offset: 1536)
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3072, size: 64)
!3072 = !DISubroutineType(types: !3073)
!3073 = !{!316, !2113, !363, !2891, !332, !7}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2880, file: !44, line: 1848, baseType: !3075, size: 64, offset: 1600)
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 64)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{!316, !363, !2891, !2113, !332, !7}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2880, file: !44, line: 1849, baseType: !3079, size: 64, offset: 1664)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!269, !363, !320, !3082, !835}
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2880, file: !44, line: 1850, baseType: !3084, size: 64, offset: 1728)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = !DISubroutineType(types: !3086)
!3086 = !{!320, !363, !269, !542, !542}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2880, file: !44, line: 1852, baseType: !3088, size: 64, offset: 1792)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 64)
!3089 = !DISubroutineType(types: !3090)
!3090 = !{null, !724, !363}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2880, file: !44, line: 1856, baseType: !3092, size: 64, offset: 1856)
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 64)
!3093 = !DISubroutineType(types: !3094)
!3094 = !{!316, !363, !542, !363, !542, !332, !7}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2880, file: !44, line: 1858, baseType: !3096, size: 64, offset: 1920)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = !DISubroutineType(types: !3098)
!3098 = !{!542, !363, !542, !363, !542, !542, !7}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2880, file: !44, line: 1861, baseType: !2945, size: 64, offset: 1984)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2875, file: !44, line: 692, baseType: !677, size: 64)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !441, file: !44, line: 694, baseType: !3102, size: 64, offset: 2560)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3104)
!3104 = !{!3105, !3106, !3107, !3108}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3103, file: !44, line: 1101, baseType: !243)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3103, file: !44, line: 1102, baseType: !214, size: 128)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3103, file: !44, line: 1103, baseType: !214, size: 128, offset: 128)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3103, file: !44, line: 1104, baseType: !214, size: 128, offset: 256)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !441, file: !44, line: 695, baseType: !748, size: 1216, align: 64, offset: 2624)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !441, file: !44, line: 696, baseType: !214, size: 128, offset: 3840)
!3111 = !DIDerivedType(tag: DW_TAG_member, scope: !441, file: !44, line: 697, baseType: !3112, size: 64, offset: 3968)
!3112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !441, file: !44, line: 697, size: 64, elements: !3113)
!3113 = !{!3114, !3115, !3116, !3119, !3120}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3112, file: !44, line: 698, baseType: !2113, size: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3112, file: !44, line: 699, baseType: !2630, size: 64)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3112, file: !44, line: 700, baseType: !3117, size: 64)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !44, line: 700, flags: DIFlagFwdDecl)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3112, file: !44, line: 701, baseType: !285, size: 64)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3112, file: !44, line: 702, baseType: !7, size: 32)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !441, file: !44, line: 705, baseType: !428, size: 32, offset: 4032)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !441, file: !44, line: 708, baseType: !428, size: 32, offset: 4064)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !441, file: !44, line: 709, baseType: !2712, size: 64, offset: 4096)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !441, file: !44, line: 720, baseType: !209, size: 64, offset: 4160)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !394, file: !391, line: 98, baseType: !3126, size: 256, offset: 448)
!3126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 256, elements: !2245)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !394, file: !391, line: 101, baseType: !3128, size: 32, offset: 704)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3129, line: 25, size: 32, elements: !3130)
!3129 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3130 = !{!3131}
!3131 = !DIDerivedType(tag: DW_TAG_member, scope: !3128, file: !3129, line: 26, baseType: !3132, size: 32)
!3132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3128, file: !3129, line: 26, size: 32, elements: !3133)
!3133 = !{!3134}
!3134 = !DIDerivedType(tag: DW_TAG_member, scope: !3132, file: !3129, line: 30, baseType: !3135, size: 32)
!3135 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3132, file: !3129, line: 30, size: 32, elements: !3136)
!3136 = !{!3137, !3138}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3135, file: !3129, line: 31, baseType: !243)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3135, file: !3129, line: 32, baseType: !269, size: 32)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !394, file: !391, line: 102, baseType: !2729, size: 64, offset: 768)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !394, file: !391, line: 103, baseType: !610, size: 64, offset: 832)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !394, file: !391, line: 104, baseType: !335, size: 64, offset: 896)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !394, file: !391, line: 105, baseType: !209, size: 64, offset: 960)
!3143 = !DIDerivedType(tag: DW_TAG_member, scope: !394, file: !391, line: 107, baseType: !3144, size: 128, offset: 1024)
!3144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !394, file: !391, line: 107, size: 128, elements: !3145)
!3145 = !{!3146, !3147}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3144, file: !391, line: 108, baseType: !214, size: 128)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3144, file: !391, line: 109, baseType: !3148, size: 64)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !394, file: !391, line: 111, baseType: !214, size: 128, offset: 1152)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !394, file: !391, line: 112, baseType: !214, size: 128, offset: 1280)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !394, file: !391, line: 120, baseType: !3152, size: 128, offset: 1408)
!3152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !394, file: !391, line: 116, size: 128, elements: !3153)
!3153 = !{!3154, !3155, !3156}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3152, file: !391, line: 117, baseType: !652, size: 128)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3152, file: !391, line: 118, baseType: !408, size: 128)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3152, file: !391, line: 119, baseType: !376, size: 128, align: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !364, file: !44, line: 922, baseType: !440, size: 64, offset: 256)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !364, file: !44, line: 923, baseType: !2878, size: 64, offset: 320)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !364, file: !44, line: 929, baseType: !243, offset: 384)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !364, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !364, file: !44, line: 931, baseType: !785, size: 64, offset: 448)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !364, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !364, file: !44, line: 933, baseType: !2725, size: 32, offset: 544)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !364, file: !44, line: 934, baseType: !1187, size: 192, offset: 576)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !364, file: !44, line: 935, baseType: !542, size: 64, offset: 768)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !364, file: !44, line: 936, baseType: !3167, size: 192, offset: 832)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3168)
!3168 = !{!3169, !3170, !3171, !3172, !3173, !3174}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3167, file: !44, line: 886, baseType: !2978)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3167, file: !44, line: 887, baseType: !1485, size: 64)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3167, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3167, file: !44, line: 889, baseType: !446, size: 32, offset: 96)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3167, file: !44, line: 889, baseType: !446, size: 32, offset: 128)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3167, file: !44, line: 890, baseType: !269, size: 32, offset: 160)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !364, file: !44, line: 937, baseType: !1561, size: 64, offset: 1024)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !364, file: !44, line: 938, baseType: !3177, size: 256, offset: 1088)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3178)
!3178 = !{!3179, !3180, !3181, !3182, !3183, !3184}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3177, file: !44, line: 897, baseType: !335, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3177, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3177, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3177, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3177, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3177, file: !44, line: 904, baseType: !542, size: 64, offset: 192)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !364, file: !44, line: 940, baseType: !432, size: 64, offset: 1344)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !364, file: !44, line: 945, baseType: !209, size: 64, offset: 1408)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !364, file: !44, line: 949, baseType: !214, size: 128, offset: 1472)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !364, file: !44, line: 950, baseType: !214, size: 128, offset: 1600)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !364, file: !44, line: 952, baseType: !747, size: 64, offset: 1728)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !364, file: !44, line: 953, baseType: !923, size: 32, offset: 1792)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !364, file: !44, line: 954, baseType: !923, size: 32, offset: 1824)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !354, file: !310, line: 174, baseType: !360, size: 64, offset: 320)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !354, file: !310, line: 176, baseType: !3194, size: 64, offset: 384)
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!269, !363, !236, !353, !995}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !342, file: !310, line: 90, baseType: !337, size: 64, offset: 192)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !342, file: !310, line: 91, baseType: !3199, size: 64, offset: 256)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !300, file: !228, line: 143, baseType: !3201, size: 64, offset: 256)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DISubroutineType(types: !3203)
!3203 = !{!3204, !236}
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3205, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3206)
!3206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3207)
!3207 = !{!3208, !3209, !3213, !3217, !3223, !3227}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3206, file: !61, line: 40, baseType: !60, size: 32)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3206, file: !61, line: 41, baseType: !3210, size: 64, offset: 64)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{!501}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3206, file: !61, line: 42, baseType: !3214, size: 64, offset: 128)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = !DISubroutineType(types: !3216)
!3216 = !{!209}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3206, file: !61, line: 43, baseType: !3218, size: 64, offset: 192)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3219 = !DISubroutineType(types: !3220)
!3220 = !{!2142, !3221}
!3221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3222, size: 64)
!3222 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3206, file: !61, line: 44, baseType: !3224, size: 64, offset: 256)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3225 = !DISubroutineType(types: !3226)
!3226 = !{!2142}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3206, file: !61, line: 45, baseType: !479, size: 64, offset: 320)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !300, file: !228, line: 144, baseType: !3229, size: 64, offset: 320)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 64)
!3230 = !DISubroutineType(types: !3231)
!3231 = !{!2142, !236}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !300, file: !228, line: 145, baseType: !3233, size: 64, offset: 384)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = !DISubroutineType(types: !3235)
!3235 = !{null, !236, !3236, !3237}
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !227, file: !228, line: 70, baseType: !3239, size: 64, offset: 384)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 64)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !3241, line: 123, size: 1024, elements: !3242)
!3241 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!3242 = !{!3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3371, !3372, !3373, !3374, !3375}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3240, file: !3241, line: 124, baseType: !761, size: 32)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3240, file: !3241, line: 125, baseType: !761, size: 32, offset: 32)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3240, file: !3241, line: 135, baseType: !3239, size: 64, offset: 64)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3240, file: !3241, line: 136, baseType: !231, size: 64, offset: 128)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3240, file: !3241, line: 138, baseType: !774, size: 192, align: 64, offset: 192)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3240, file: !3241, line: 140, baseType: !2142, size: 64, offset: 384)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3240, file: !3241, line: 141, baseType: !7, size: 32, offset: 448)
!3250 = !DIDerivedType(tag: DW_TAG_member, scope: !3240, file: !3241, line: 142, baseType: !3251, size: 256, offset: 512)
!3251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3240, file: !3241, line: 142, size: 256, elements: !3252)
!3252 = !{!3253, !3299, !3303}
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3251, file: !3241, line: 143, baseType: !3254, size: 192)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !3241, line: 91, size: 192, elements: !3255)
!3255 = !{!3256, !3257, !3258}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3254, file: !3241, line: 92, baseType: !335, size: 64)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3254, file: !3241, line: 94, baseType: !770, size: 64, offset: 64)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3254, file: !3241, line: 100, baseType: !3259, size: 64, offset: 128)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !3241, line: 180, size: 704, elements: !3261)
!3261 = !{!3262, !3263, !3264, !3271, !3272, !3273, !3297, !3298}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3260, file: !3241, line: 182, baseType: !3239, size: 64)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3260, file: !3241, line: 183, baseType: !7, size: 32, offset: 64)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3260, file: !3241, line: 186, baseType: !3265, size: 192, offset: 128)
!3265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3266, line: 19, size: 192, elements: !3267)
!3266 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3267 = !{!3268, !3269, !3270}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3265, file: !3266, line: 20, baseType: !752, size: 128)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3265, file: !3266, line: 21, baseType: !7, size: 32, offset: 128)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3265, file: !3266, line: 22, baseType: !7, size: 32, offset: 160)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3260, file: !3241, line: 187, baseType: !426, size: 32, offset: 320)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3260, file: !3241, line: 188, baseType: !426, size: 32, offset: 352)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3260, file: !3241, line: 189, baseType: !3274, size: 64, offset: 384)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !3241, line: 168, size: 320, elements: !3276)
!3276 = !{!3277, !3281, !3285, !3289, !3293}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3275, file: !3241, line: 169, baseType: !3278, size: 64)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = !DISubroutineType(types: !3280)
!3280 = !{!269, !724, !3259}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3275, file: !3241, line: 171, baseType: !3282, size: 64, offset: 64)
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{!269, !3239, !231, !326}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3275, file: !3241, line: 173, baseType: !3286, size: 64, offset: 128)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!269, !3239}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3275, file: !3241, line: 174, baseType: !3290, size: 64, offset: 192)
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 64)
!3291 = !DISubroutineType(types: !3292)
!3292 = !{!269, !3239, !3239, !231}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3275, file: !3241, line: 176, baseType: !3294, size: 64, offset: 256)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 64)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{!269, !724, !3239, !3259}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3260, file: !3241, line: 192, baseType: !214, size: 128, offset: 448)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3260, file: !3241, line: 194, baseType: !1495, size: 128, offset: 576)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3251, file: !3241, line: 144, baseType: !3300, size: 64)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !3241, line: 103, size: 64, elements: !3301)
!3301 = !{!3302}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3300, file: !3241, line: 104, baseType: !3239, size: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3251, file: !3241, line: 145, baseType: !3304, size: 256)
!3304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !3241, line: 107, size: 256, elements: !3305)
!3305 = !{!3306, !3366, !3369, !3370}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3304, file: !3241, line: 108, baseType: !3307, size: 64)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3309)
!3309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !3241, line: 217, size: 768, elements: !3310)
!3310 = !{!3311, !3331, !3335, !3339, !3343, !3347, !3351, !3355, !3356, !3357, !3358, !3362}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3309, file: !3241, line: 222, baseType: !3312, size: 64)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!269, !3315}
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !3241, line: 197, size: 1088, elements: !3317)
!3317 = !{!3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3316, file: !3241, line: 199, baseType: !3239, size: 64)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3316, file: !3241, line: 200, baseType: !363, size: 64, offset: 64)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3316, file: !3241, line: 201, baseType: !724, size: 64, offset: 128)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3316, file: !3241, line: 202, baseType: !209, size: 64, offset: 192)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3316, file: !3241, line: 205, baseType: !1187, size: 192, offset: 256)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3316, file: !3241, line: 206, baseType: !1187, size: 192, offset: 448)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3316, file: !3241, line: 207, baseType: !269, size: 32, offset: 640)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3316, file: !3241, line: 208, baseType: !214, size: 128, offset: 704)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3316, file: !3241, line: 209, baseType: !285, size: 64, offset: 832)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3316, file: !3241, line: 211, baseType: !332, size: 64, offset: 896)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3316, file: !3241, line: 212, baseType: !501, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3316, file: !3241, line: 213, baseType: !501, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3316, file: !3241, line: 214, baseType: !1023, size: 64, offset: 1024)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3309, file: !3241, line: 223, baseType: !3332, size: 64, offset: 64)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = !DISubroutineType(types: !3334)
!3334 = !{null, !3315}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3309, file: !3241, line: 236, baseType: !3336, size: 64, offset: 128)
!3336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3337, size: 64)
!3337 = !DISubroutineType(types: !3338)
!3338 = !{!269, !724, !209}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3309, file: !3241, line: 238, baseType: !3340, size: 64, offset: 192)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 64)
!3341 = !DISubroutineType(types: !3342)
!3342 = !{!209, !724, !2891}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3309, file: !3241, line: 239, baseType: !3344, size: 64, offset: 256)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!209, !724, !209, !2891}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3309, file: !3241, line: 240, baseType: !3348, size: 64, offset: 320)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = !DISubroutineType(types: !3350)
!3350 = !{null, !724, !209}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3309, file: !3241, line: 242, baseType: !3352, size: 64, offset: 384)
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 64)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{!316, !3315, !285, !332, !542}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3309, file: !3241, line: 252, baseType: !332, size: 64, offset: 448)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3309, file: !3241, line: 259, baseType: !501, size: 8, offset: 512)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3309, file: !3241, line: 260, baseType: !3352, size: 64, offset: 576)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3309, file: !3241, line: 263, baseType: !3359, size: 64, offset: 640)
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3360, size: 64)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{!2920, !3315, !2922}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3309, file: !3241, line: 266, baseType: !3363, size: 64, offset: 704)
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3364, size: 64)
!3364 = !DISubroutineType(types: !3365)
!3365 = !{!269, !3315, !995}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3304, file: !3241, line: 109, baseType: !3367, size: 64, offset: 64)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !3241, line: 31, flags: DIFlagFwdDecl)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3304, file: !3241, line: 110, baseType: !542, size: 64, offset: 128)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3304, file: !3241, line: 111, baseType: !3239, size: 64, offset: 192)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3240, file: !3241, line: 148, baseType: !209, size: 64, offset: 768)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3240, file: !3241, line: 154, baseType: !432, size: 64, offset: 832)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3240, file: !3241, line: 156, baseType: !327, size: 16, offset: 896)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3240, file: !3241, line: 157, baseType: !326, size: 16, offset: 912)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3240, file: !3241, line: 158, baseType: !3376, size: 64, offset: 960)
!3376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3377, size: 64)
!3377 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !3241, line: 32, flags: DIFlagFwdDecl)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !227, file: !228, line: 71, baseType: !3379, size: 32, offset: 448)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3380, line: 19, size: 32, elements: !3381)
!3380 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3381 = !{!3382}
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3379, file: !3380, line: 20, baseType: !1244, size: 32)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !227, file: !228, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !227, file: !228, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !227, file: !228, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !227, file: !228, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !227, file: !228, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !224, file: !73, line: 463, baseType: !223, size: 64, offset: 512)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !224, file: !73, line: 465, baseType: !3390, size: 64, offset: 576)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !224, file: !73, line: 467, baseType: !231, size: 64, offset: 640)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !224, file: !73, line: 468, baseType: !3394, size: 64, offset: 704)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3396)
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3397)
!3397 = !{!3398, !3399, !3400, !3404, !3409, !3413}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3396, file: !73, line: 88, baseType: !231, size: 64)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3396, file: !73, line: 89, baseType: !339, size: 64, offset: 64)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3396, file: !73, line: 90, baseType: !3401, size: 64, offset: 128)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{!269, !223, !280}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3396, file: !73, line: 91, baseType: !3405, size: 64, offset: 192)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{!285, !223, !3408, !3236, !3237}
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3396, file: !73, line: 93, baseType: !3410, size: 64, offset: 256)
!3410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 64)
!3411 = !DISubroutineType(types: !3412)
!3412 = !{null, !223}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3396, file: !73, line: 95, baseType: !3414, size: 64, offset: 320)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3416)
!3416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3417)
!3417 = !{!3418, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3416, file: !80, line: 279, baseType: !3419, size: 64)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!269, !223}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3416, file: !80, line: 280, baseType: !3410, size: 64, offset: 64)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3416, file: !80, line: 281, baseType: !3419, size: 64, offset: 128)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3416, file: !80, line: 282, baseType: !3419, size: 64, offset: 192)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3416, file: !80, line: 283, baseType: !3419, size: 64, offset: 256)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3416, file: !80, line: 284, baseType: !3419, size: 64, offset: 320)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3416, file: !80, line: 285, baseType: !3419, size: 64, offset: 384)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3416, file: !80, line: 286, baseType: !3419, size: 64, offset: 448)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3416, file: !80, line: 287, baseType: !3419, size: 64, offset: 512)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3416, file: !80, line: 288, baseType: !3419, size: 64, offset: 576)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3416, file: !80, line: 289, baseType: !3419, size: 64, offset: 640)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3416, file: !80, line: 290, baseType: !3419, size: 64, offset: 704)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3416, file: !80, line: 291, baseType: !3419, size: 64, offset: 768)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3416, file: !80, line: 292, baseType: !3419, size: 64, offset: 832)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3416, file: !80, line: 293, baseType: !3419, size: 64, offset: 896)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3416, file: !80, line: 294, baseType: !3419, size: 64, offset: 960)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3416, file: !80, line: 295, baseType: !3419, size: 64, offset: 1024)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3416, file: !80, line: 296, baseType: !3419, size: 64, offset: 1088)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3416, file: !80, line: 297, baseType: !3419, size: 64, offset: 1152)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3416, file: !80, line: 298, baseType: !3419, size: 64, offset: 1216)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3416, file: !80, line: 299, baseType: !3419, size: 64, offset: 1280)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3416, file: !80, line: 300, baseType: !3419, size: 64, offset: 1344)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3416, file: !80, line: 301, baseType: !3419, size: 64, offset: 1408)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !224, file: !73, line: 470, baseType: !3445, size: 64, offset: 768)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3447, line: 82, size: 1408, elements: !3448)
!3447 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3448 = !{!3449, !3450, !3451, !3452, !3453, !3454, !3455, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3530, !3533, !3534}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3446, file: !3447, line: 83, baseType: !231, size: 64)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3446, file: !3447, line: 84, baseType: !231, size: 64, offset: 64)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3446, file: !3447, line: 85, baseType: !223, size: 64, offset: 128)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3446, file: !3447, line: 86, baseType: !339, size: 64, offset: 192)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3446, file: !3447, line: 87, baseType: !339, size: 64, offset: 256)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3446, file: !3447, line: 88, baseType: !339, size: 64, offset: 320)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3446, file: !3447, line: 90, baseType: !3456, size: 64, offset: 384)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{!269, !223, !3459}
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3461)
!3461 = !{!3462, !3463, !3464, !3465, !3466, !3467, !3468, !3481, !3494, !3495, !3496, !3497, !3498, !3506, !3507, !3508, !3509, !3510, !3511}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3460, file: !67, line: 96, baseType: !231, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3460, file: !67, line: 97, baseType: !3445, size: 64, offset: 64)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3460, file: !67, line: 99, baseType: !643, size: 64, offset: 128)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3460, file: !67, line: 100, baseType: !231, size: 64, offset: 192)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3460, file: !67, line: 102, baseType: !501, size: 8, offset: 256)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3460, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3460, file: !67, line: 105, baseType: !3469, size: 64, offset: 320)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3471)
!3471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3472, line: 262, size: 1600, elements: !3473)
!3472 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3473 = !{!3474, !3475, !3476, !3480}
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3471, file: !3472, line: 263, baseType: !2715, size: 256)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3471, file: !3472, line: 264, baseType: !2715, size: 256, offset: 256)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3471, file: !3472, line: 265, baseType: !3477, size: 1024, offset: 512)
!3477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 1024, elements: !3478)
!3478 = !{!3479}
!3479 = !DISubrange(count: 128)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3471, file: !3472, line: 266, baseType: !2142, size: 64, offset: 1536)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3460, file: !67, line: 106, baseType: !3482, size: 64, offset: 384)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3483, size: 64)
!3483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3484)
!3484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3472, line: 210, size: 256, elements: !3485)
!3485 = !{!3486, !3490, !3492, !3493}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3484, file: !3472, line: 211, baseType: !3487, size: 72)
!3487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1367, size: 72, elements: !3488)
!3488 = !{!3489}
!3489 = !DISubrange(count: 9)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3484, file: !3472, line: 212, baseType: !3491, size: 64, offset: 128)
!3491 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3472, line: 14, baseType: !335)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3484, file: !3472, line: 213, baseType: !428, size: 32, offset: 192)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3484, file: !3472, line: 214, baseType: !428, size: 32, offset: 224)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3460, file: !67, line: 108, baseType: !3419, size: 64, offset: 448)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3460, file: !67, line: 109, baseType: !3410, size: 64, offset: 512)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3460, file: !67, line: 110, baseType: !3419, size: 64, offset: 576)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3460, file: !67, line: 111, baseType: !3410, size: 64, offset: 640)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3460, file: !67, line: 112, baseType: !3499, size: 64, offset: 704)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{!269, !223, !3502}
!3502 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3503)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3504)
!3504 = !{!3505}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3503, file: !80, line: 51, baseType: !269, size: 32)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3460, file: !67, line: 113, baseType: !3419, size: 64, offset: 768)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3460, file: !67, line: 114, baseType: !339, size: 64, offset: 832)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3460, file: !67, line: 115, baseType: !339, size: 64, offset: 896)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3460, file: !67, line: 117, baseType: !3414, size: 64, offset: 960)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3460, file: !67, line: 118, baseType: !3410, size: 64, offset: 1024)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3460, file: !67, line: 120, baseType: !3512, size: 64, offset: 1088)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3446, file: !3447, line: 91, baseType: !3401, size: 64, offset: 448)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3446, file: !3447, line: 92, baseType: !3419, size: 64, offset: 512)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3446, file: !3447, line: 93, baseType: !3410, size: 64, offset: 576)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3446, file: !3447, line: 94, baseType: !3419, size: 64, offset: 640)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3446, file: !3447, line: 95, baseType: !3410, size: 64, offset: 704)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3446, file: !3447, line: 97, baseType: !3419, size: 64, offset: 768)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3446, file: !3447, line: 98, baseType: !3419, size: 64, offset: 832)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3446, file: !3447, line: 100, baseType: !3499, size: 64, offset: 896)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3446, file: !3447, line: 101, baseType: !3419, size: 64, offset: 960)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3446, file: !3447, line: 103, baseType: !3419, size: 64, offset: 1024)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3446, file: !3447, line: 105, baseType: !3419, size: 64, offset: 1088)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3446, file: !3447, line: 107, baseType: !3414, size: 64, offset: 1152)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3446, file: !3447, line: 109, baseType: !3527, size: 64, offset: 1216)
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3529)
!3529 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3447, line: 109, flags: DIFlagFwdDecl)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3446, file: !3447, line: 111, baseType: !3531, size: 64, offset: 1280)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3447, line: 111, flags: DIFlagFwdDecl)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3446, file: !3447, line: 112, baseType: !658, offset: 1344)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3446, file: !3447, line: 114, baseType: !501, size: 8, offset: 1344)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !224, file: !73, line: 471, baseType: !3459, size: 64, offset: 832)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !224, file: !73, line: 473, baseType: !209, size: 64, offset: 896)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !224, file: !73, line: 475, baseType: !209, size: 64, offset: 960)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !224, file: !73, line: 480, baseType: !1187, size: 192, offset: 1024)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !224, file: !73, line: 484, baseType: !3540, size: 576, offset: 1216)
!3540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3541)
!3541 = !{!3542, !3543, !3544, !3545, !3546, !3547}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3540, file: !73, line: 362, baseType: !214, size: 128)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3540, file: !73, line: 363, baseType: !214, size: 128, offset: 128)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3540, file: !73, line: 364, baseType: !214, size: 128, offset: 256)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3540, file: !73, line: 365, baseType: !214, size: 128, offset: 384)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3540, file: !73, line: 366, baseType: !501, size: 8, offset: 512)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3540, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !224, file: !73, line: 485, baseType: !3549, size: 2304, offset: 1792)
!3549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3550)
!3550 = !{!3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3646, !3650}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3549, file: !80, line: 566, baseType: !3502, size: 32)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3549, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3549, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3549, file: !80, line: 569, baseType: !501, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3549, file: !80, line: 570, baseType: !501, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3549, file: !80, line: 571, baseType: !501, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3549, file: !80, line: 572, baseType: !501, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3549, file: !80, line: 573, baseType: !501, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3549, file: !80, line: 574, baseType: !501, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3549, file: !80, line: 575, baseType: !501, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3549, file: !80, line: 576, baseType: !501, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3549, file: !80, line: 577, baseType: !426, size: 32, offset: 64)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3549, file: !80, line: 578, baseType: !243, offset: 96)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3549, file: !80, line: 580, baseType: !214, size: 128, offset: 128)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3549, file: !80, line: 581, baseType: !1516, size: 192, offset: 256)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3549, file: !80, line: 582, baseType: !3567, size: 64, offset: 448)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3569, line: 43, size: 1472, elements: !3570)
!3569 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3570 = !{!3571, !3572, !3573, !3574, !3575, !3578, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3568, file: !3569, line: 44, baseType: !231, size: 64)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3568, file: !3569, line: 45, baseType: !269, size: 32, offset: 64)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3568, file: !3569, line: 46, baseType: !214, size: 128, offset: 128)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3568, file: !3569, line: 47, baseType: !243, offset: 256)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3568, file: !3569, line: 48, baseType: !3576, size: 64, offset: 256)
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3577 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3568, file: !3569, line: 49, baseType: !3579, size: 320, offset: 320)
!3579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3580, line: 11, size: 320, elements: !3581)
!3580 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3581 = !{!3582, !3583, !3584, !3589}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3579, file: !3580, line: 16, baseType: !652, size: 128)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3579, file: !3580, line: 17, baseType: !335, size: 64, offset: 128)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3579, file: !3580, line: 18, baseType: !3585, size: 64, offset: 192)
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 64)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{null, !3588}
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3579, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3579, file: !3580, line: 19, baseType: !426, size: 32, offset: 256)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3568, file: !3569, line: 50, baseType: !335, size: 64, offset: 640)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3568, file: !3569, line: 51, baseType: !1314, size: 64, offset: 704)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3568, file: !3569, line: 52, baseType: !1314, size: 64, offset: 768)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3568, file: !3569, line: 53, baseType: !1314, size: 64, offset: 832)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3568, file: !3569, line: 54, baseType: !1314, size: 64, offset: 896)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3568, file: !3569, line: 55, baseType: !1314, size: 64, offset: 960)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3568, file: !3569, line: 56, baseType: !335, size: 64, offset: 1024)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3568, file: !3569, line: 57, baseType: !335, size: 64, offset: 1088)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3568, file: !3569, line: 58, baseType: !335, size: 64, offset: 1152)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3568, file: !3569, line: 59, baseType: !335, size: 64, offset: 1216)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3568, file: !3569, line: 60, baseType: !335, size: 64, offset: 1280)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3568, file: !3569, line: 61, baseType: !223, size: 64, offset: 1344)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3568, file: !3569, line: 62, baseType: !501, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3568, file: !3569, line: 63, baseType: !501, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3549, file: !80, line: 583, baseType: !501, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3549, file: !80, line: 584, baseType: !501, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3549, file: !80, line: 585, baseType: !501, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3549, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3549, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3549, file: !80, line: 592, baseType: !1306, size: 512, offset: 576)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3549, file: !80, line: 593, baseType: !432, size: 64, offset: 1088)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3549, file: !80, line: 594, baseType: !1972, size: 256, offset: 1152)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3549, file: !80, line: 595, baseType: !1495, size: 128, offset: 1408)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3549, file: !80, line: 596, baseType: !3576, size: 64, offset: 1536)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3549, file: !80, line: 597, baseType: !761, size: 32, offset: 1600)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3549, file: !80, line: 598, baseType: !761, size: 32, offset: 1632)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3549, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3549, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3549, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3549, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3549, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3549, file: !80, line: 604, baseType: !501, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3549, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3549, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3549, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3549, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3549, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3549, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3549, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3549, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3549, file: !80, line: 613, baseType: !269, size: 32, offset: 1792)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3549, file: !80, line: 614, baseType: !269, size: 32, offset: 1824)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3549, file: !80, line: 615, baseType: !432, size: 64, offset: 1856)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3549, file: !80, line: 616, baseType: !432, size: 64, offset: 1920)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3549, file: !80, line: 617, baseType: !432, size: 64, offset: 1984)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3549, file: !80, line: 618, baseType: !432, size: 64, offset: 2048)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3549, file: !80, line: 620, baseType: !3637, size: 64, offset: 2112)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3639)
!3639 = !{!3640, !3641, !3642, !3643}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3638, file: !80, line: 537, baseType: !243)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3638, file: !80, line: 538, baseType: !7, size: 32)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3638, file: !80, line: 540, baseType: !214, size: 128, offset: 64)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3638, file: !80, line: 543, baseType: !3644, size: 64, offset: 192)
!3644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3645, size: 64)
!3645 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3549, file: !80, line: 621, baseType: !3647, size: 64, offset: 2176)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{null, !223, !1458}
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3549, file: !80, line: 622, baseType: !3651, size: 64, offset: 2240)
!3651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3652, size: 64)
!3652 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !224, file: !73, line: 486, baseType: !3654, size: 64, offset: 4096)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3656)
!3656 = !{!3657, !3658, !3659, !3663, !3664, !3665}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3655, file: !80, line: 643, baseType: !3416, size: 1472)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3655, file: !80, line: 644, baseType: !3419, size: 64, offset: 1472)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3655, file: !80, line: 645, baseType: !3660, size: 64, offset: 1536)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3661, size: 64)
!3661 = !DISubroutineType(types: !3662)
!3662 = !{null, !223, !501}
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3655, file: !80, line: 646, baseType: !3419, size: 64, offset: 1600)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3655, file: !80, line: 647, baseType: !3410, size: 64, offset: 1664)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3655, file: !80, line: 648, baseType: !3410, size: 64, offset: 1728)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !224, file: !73, line: 493, baseType: !3667, size: 64, offset: 4160)
!3667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3668, size: 64)
!3668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !94, line: 162, size: 1088, elements: !3669)
!3669 = !{!3670, !3671, !3672, !3945, !3946, !3947, !3948, !3949, !3950, !4076, !4077, !4078, !4079, !4080, !4081, !4082}
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3668, file: !94, line: 163, baseType: !214, size: 128)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3668, file: !94, line: 164, baseType: !231, size: 64, offset: 128)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3668, file: !94, line: 165, baseType: !3673, size: 64, offset: 192)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3674, size: 64)
!3674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3675)
!3675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !94, line: 105, size: 640, elements: !3676)
!3676 = !{!3677, !3795, !3806, !3811, !3815, !3822, !3826, !3830, !3937, !3941}
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3675, file: !94, line: 106, baseType: !3678, size: 64)
!3678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3679, size: 64)
!3679 = !DISubroutineType(types: !3680)
!3680 = !{!269, !3667, !3681, !93}
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3683, line: 51, size: 1344, elements: !3684)
!3683 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3684 = !{!3685, !3686, !3688, !3689, !3779, !3788, !3789, !3790, !3791, !3792, !3793, !3794}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3682, file: !3683, line: 52, baseType: !231, size: 64)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3682, file: !3683, line: 53, baseType: !3687, size: 32, offset: 64)
!3687 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3683, line: 28, baseType: !426)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3682, file: !3683, line: 54, baseType: !231, size: 64, offset: 128)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3682, file: !3683, line: 55, baseType: !3690, size: 192, offset: 192)
!3690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3691, line: 17, size: 192, elements: !3692)
!3691 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3692 = !{!3693, !3695, !3778}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3690, file: !3691, line: 18, baseType: !3694, size: 64)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3690, size: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3690, file: !3691, line: 19, baseType: !3696, size: 64, offset: 64)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3698)
!3698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3691, line: 110, size: 1152, elements: !3699)
!3699 = !{!3700, !3704, !3708, !3714, !3720, !3724, !3728, !3733, !3737, !3738, !3742, !3746, !3750, !3761, !3762, !3763, !3764, !3774}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3698, file: !3691, line: 111, baseType: !3701, size: 64)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = !DISubroutineType(types: !3703)
!3703 = !{!3694, !3694}
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3698, file: !3691, line: 112, baseType: !3705, size: 64, offset: 64)
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 64)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{null, !3694}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3698, file: !3691, line: 113, baseType: !3709, size: 64, offset: 128)
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3710, size: 64)
!3710 = !DISubroutineType(types: !3711)
!3711 = !{!501, !3712}
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3713, size: 64)
!3713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3690)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3698, file: !3691, line: 114, baseType: !3715, size: 64, offset: 192)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 64)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!2142, !3712, !3718}
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !224)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3698, file: !3691, line: 116, baseType: !3721, size: 64, offset: 256)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{!501, !3712, !231}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3698, file: !3691, line: 118, baseType: !3725, size: 64, offset: 320)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!269, !3712, !231, !7, !209, !332}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3698, file: !3691, line: 123, baseType: !3729, size: 64, offset: 384)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{!269, !3712, !231, !3732, !332}
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3698, file: !3691, line: 126, baseType: !3734, size: 64, offset: 448)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = !DISubroutineType(types: !3736)
!3736 = !{!231, !3712}
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3698, file: !3691, line: 127, baseType: !3734, size: 64, offset: 512)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3698, file: !3691, line: 128, baseType: !3739, size: 64, offset: 576)
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3740, size: 64)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{!3694, !3712}
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3698, file: !3691, line: 130, baseType: !3743, size: 64, offset: 640)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{!3694, !3712, !3694}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3698, file: !3691, line: 133, baseType: !3747, size: 64, offset: 704)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!3694, !3712, !231}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3698, file: !3691, line: 135, baseType: !3751, size: 64, offset: 768)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!269, !3712, !231, !231, !7, !7, !3754}
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 64)
!3755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3691, line: 43, size: 640, elements: !3756)
!3756 = !{!3757, !3758, !3759}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3755, file: !3691, line: 44, baseType: !3694, size: 64)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3755, file: !3691, line: 45, baseType: !7, size: 32, offset: 64)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3755, file: !3691, line: 46, baseType: !3760, size: 512, offset: 128)
!3760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !432, size: 512, elements: !1344)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3698, file: !3691, line: 140, baseType: !3743, size: 64, offset: 832)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3698, file: !3691, line: 143, baseType: !3739, size: 64, offset: 896)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3698, file: !3691, line: 145, baseType: !3701, size: 64, offset: 960)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3698, file: !3691, line: 146, baseType: !3765, size: 64, offset: 1024)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = !DISubroutineType(types: !3767)
!3767 = !{!269, !3712, !3768}
!3768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3769, size: 64)
!3769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3691, line: 29, size: 128, elements: !3770)
!3770 = !{!3771, !3772, !3773}
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3769, file: !3691, line: 30, baseType: !7, size: 32)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3769, file: !3691, line: 31, baseType: !7, size: 32, offset: 32)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3769, file: !3691, line: 32, baseType: !3712, size: 64, offset: 64)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3698, file: !3691, line: 148, baseType: !3775, size: 64, offset: 1088)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{!269, !3712, !223}
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3690, file: !3691, line: 20, baseType: !223, size: 64, offset: 128)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3682, file: !3683, line: 57, baseType: !3780, size: 64, offset: 384)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3683, line: 31, size: 704, elements: !3782)
!3782 = !{!3783, !3784, !3785, !3786, !3787}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3781, file: !3683, line: 32, baseType: !285, size: 64)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3781, file: !3683, line: 33, baseType: !269, size: 32, offset: 64)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3781, file: !3683, line: 34, baseType: !209, size: 64, offset: 128)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3781, file: !3683, line: 35, baseType: !3780, size: 64, offset: 192)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3781, file: !3683, line: 43, baseType: !354, size: 448, offset: 256)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3682, file: !3683, line: 58, baseType: !3780, size: 64, offset: 448)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3682, file: !3683, line: 59, baseType: !3681, size: 64, offset: 512)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3682, file: !3683, line: 60, baseType: !3681, size: 64, offset: 576)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3682, file: !3683, line: 61, baseType: !3681, size: 64, offset: 640)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3682, file: !3683, line: 63, baseType: !227, size: 512, offset: 704)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3682, file: !3683, line: 65, baseType: !335, size: 64, offset: 1216)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3682, file: !3683, line: 66, baseType: !209, size: 64, offset: 1280)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3675, file: !94, line: 108, baseType: !3796, size: 64, offset: 64)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{!269, !3667, !3799, !93}
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !94, line: 63, size: 640, elements: !3801)
!3801 = !{!3802, !3803, !3804}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3800, file: !94, line: 64, baseType: !3694, size: 64)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3800, file: !94, line: 65, baseType: !269, size: 32, offset: 64)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3800, file: !94, line: 66, baseType: !3805, size: 512, offset: 96)
!3805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 512, elements: !1749)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3675, file: !94, line: 110, baseType: !3807, size: 64, offset: 128)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = !DISubroutineType(types: !3809)
!3809 = !{!269, !3667, !7, !3810}
!3810 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !215, line: 164, baseType: !335)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3675, file: !94, line: 111, baseType: !3812, size: 64, offset: 192)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{null, !3667, !7}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3675, file: !94, line: 112, baseType: !3816, size: 64, offset: 256)
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3817, size: 64)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{!269, !3667, !3681, !3819, !7, !3821, !2698}
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !426)
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3675, file: !94, line: 117, baseType: !3823, size: 64, offset: 320)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{!269, !3667, !7, !7, !209}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3675, file: !94, line: 119, baseType: !3827, size: 64, offset: 384)
!3827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3828, size: 64)
!3828 = !DISubroutineType(types: !3829)
!3829 = !{null, !3667, !7, !7}
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3675, file: !94, line: 121, baseType: !3831, size: 64, offset: 448)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = !DISubroutineType(types: !3833)
!3833 = !{!269, !3667, !3834, !501}
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !115, line: 175, size: 448, elements: !3836)
!3836 = !{!3837, !3838, !3839, !3840, !3850, !3934, !3935, !3936}
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3835, file: !115, line: 176, baseType: !426, size: 32)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3835, file: !115, line: 177, baseType: !7, size: 32, offset: 32)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !3835, file: !115, line: 178, baseType: !335, size: 64, offset: 64)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3835, file: !115, line: 179, baseType: !3841, size: 64, offset: 128)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_common_data", file: !115, line: 145, size: 256, elements: !3843)
!3843 = !{!3844, !3845, !3846, !3847}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "state_use_accessors", scope: !3842, file: !115, line: 146, baseType: !7, size: 32)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !3842, file: !115, line: 150, baseType: !209, size: 64, offset: 64)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !3842, file: !115, line: 151, baseType: !210, size: 64, offset: 128)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !3842, file: !115, line: 152, baseType: !3848, size: 64, offset: 192)
!3848 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1380, line: 756, baseType: !3849)
!3849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1381, size: 64, elements: !1385)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !3835, file: !115, line: 180, baseType: !3851, size: 64, offset: 192)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip", file: !115, line: 503, size: 2304, elements: !3853)
!3853 = !{!3854, !3855, !3856, !3860, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3877, !3881, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3898, !3899, !3900, !3910, !3911, !3915, !3919, !3923, !3927, !3931, !3932, !3933}
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "parent_device", scope: !3852, file: !115, line: 504, baseType: !223, size: 64)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3852, file: !115, line: 505, baseType: !231, size: 64, offset: 64)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "irq_startup", scope: !3852, file: !115, line: 506, baseType: !3857, size: 64, offset: 128)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{!7, !3834}
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "irq_shutdown", scope: !3852, file: !115, line: 507, baseType: !3861, size: 64, offset: 192)
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3862, size: 64)
!3862 = !DISubroutineType(types: !3863)
!3863 = !{null, !3834}
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !3852, file: !115, line: 508, baseType: !3861, size: 64, offset: 256)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !3852, file: !115, line: 509, baseType: !3861, size: 64, offset: 320)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ack", scope: !3852, file: !115, line: 511, baseType: !3861, size: 64, offset: 384)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !3852, file: !115, line: 512, baseType: !3861, size: 64, offset: 448)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_ack", scope: !3852, file: !115, line: 513, baseType: !3861, size: 64, offset: 512)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !3852, file: !115, line: 514, baseType: !3861, size: 64, offset: 576)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "irq_eoi", scope: !3852, file: !115, line: 515, baseType: !3861, size: 64, offset: 640)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_affinity", scope: !3852, file: !115, line: 517, baseType: !3872, size: 64, offset: 704)
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{!269, !3834, !3875, !501}
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "irq_retrigger", scope: !3852, file: !115, line: 518, baseType: !3878, size: 64, offset: 768)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = !DISubroutineType(types: !3880)
!3880 = !{!269, !3834}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_type", scope: !3852, file: !115, line: 519, baseType: !3882, size: 64, offset: 832)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!3883 = !DISubroutineType(types: !3884)
!3884 = !{!269, !3834, !7}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_wake", scope: !3852, file: !115, line: 520, baseType: !3882, size: 64, offset: 896)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_lock", scope: !3852, file: !115, line: 522, baseType: !3861, size: 64, offset: 960)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_sync_unlock", scope: !3852, file: !115, line: 523, baseType: !3861, size: 64, offset: 1024)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_online", scope: !3852, file: !115, line: 525, baseType: !3861, size: 64, offset: 1088)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_offline", scope: !3852, file: !115, line: 526, baseType: !3861, size: 64, offset: 1152)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "irq_suspend", scope: !3852, file: !115, line: 528, baseType: !3861, size: 64, offset: 1216)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "irq_resume", scope: !3852, file: !115, line: 529, baseType: !3861, size: 64, offset: 1280)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pm_shutdown", scope: !3852, file: !115, line: 530, baseType: !3861, size: 64, offset: 1344)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "irq_calc_mask", scope: !3852, file: !115, line: 532, baseType: !3861, size: 64, offset: 1408)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "irq_print_chip", scope: !3852, file: !115, line: 534, baseType: !3895, size: 64, offset: 1472)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{null, !3834, !724}
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "irq_request_resources", scope: !3852, file: !115, line: 535, baseType: !3878, size: 64, offset: 1536)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "irq_release_resources", scope: !3852, file: !115, line: 536, baseType: !3861, size: 64, offset: 1600)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "irq_compose_msi_msg", scope: !3852, file: !115, line: 538, baseType: !3901, size: 64, offset: 1664)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DISubroutineType(types: !3903)
!3903 = !{null, !3834, !3904}
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !140, line: 8, size: 96, elements: !3906)
!3906 = !{!3907, !3908, !3909}
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "address_lo", scope: !3905, file: !140, line: 9, baseType: !426, size: 32)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "address_hi", scope: !3905, file: !140, line: 10, baseType: !426, size: 32, offset: 32)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3905, file: !140, line: 11, baseType: !426, size: 32, offset: 64)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "irq_write_msi_msg", scope: !3852, file: !115, line: 539, baseType: !3901, size: 64, offset: 1728)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "irq_get_irqchip_state", scope: !3852, file: !115, line: 541, baseType: !3912, size: 64, offset: 1792)
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{!269, !3834, !107, !905}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_irqchip_state", scope: !3852, file: !115, line: 542, baseType: !3916, size: 64, offset: 1856)
!3916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3917, size: 64)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{!269, !3834, !107, !501}
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_vcpu_affinity", scope: !3852, file: !115, line: 544, baseType: !3920, size: 64, offset: 1920)
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DISubroutineType(types: !3922)
!3922 = !{!269, !3834, !209}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_single", scope: !3852, file: !115, line: 546, baseType: !3924, size: 64, offset: 1984)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3925 = !DISubroutineType(types: !3926)
!3926 = !{null, !3834, !7}
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_mask", scope: !3852, file: !115, line: 547, baseType: !3928, size: 64, offset: 2048)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{null, !3834, !3875}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_setup", scope: !3852, file: !115, line: 549, baseType: !3878, size: 64, offset: 2112)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_teardown", scope: !3852, file: !115, line: 550, baseType: !3861, size: 64, offset: 2176)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3852, file: !115, line: 552, baseType: !335, size: 64, offset: 2240)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !3835, file: !115, line: 181, baseType: !3667, size: 64, offset: 256)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !3835, file: !115, line: 183, baseType: !3834, size: 64, offset: 320)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !3835, file: !115, line: 185, baseType: !209, size: 64, offset: 384)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3675, file: !94, line: 122, baseType: !3938, size: 64, offset: 512)
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{null, !3667, !3834}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3675, file: !94, line: 123, baseType: !3942, size: 64, offset: 576)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!269, !3667, !3799, !3821, !2698}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3668, file: !94, line: 166, baseType: !209, size: 64, offset: 256)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3668, file: !94, line: 167, baseType: !7, size: 32, offset: 320)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3668, file: !94, line: 168, baseType: !7, size: 32, offset: 352)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3668, file: !94, line: 171, baseType: !3694, size: 64, offset: 384)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3668, file: !94, line: 172, baseType: !93, size: 32, offset: 448)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3668, file: !94, line: 173, baseType: !3951, size: 64, offset: 512)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 64)
!3952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !115, line: 1101, size: 192, elements: !3953)
!3953 = !{!3954, !3955, !3956, !3957, !3958, !3959}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_per_chip", scope: !3952, file: !115, line: 1102, baseType: !7, size: 32)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !3952, file: !115, line: 1103, baseType: !7, size: 32, offset: 32)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_clear", scope: !3952, file: !115, line: 1104, baseType: !7, size: 32, offset: 64)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_set", scope: !3952, file: !115, line: 1105, baseType: !7, size: 32, offset: 96)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "gc_flags", scope: !3952, file: !115, line: 1106, baseType: !114, size: 32, offset: 128)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3952, file: !115, line: 1107, baseType: !3960, offset: 192)
!3960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3961, elements: !2346)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3962, size: 64)
!3962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_generic", file: !115, line: 1051, size: 960, elements: !3963)
!3963 = !{!3964, !3965, !3966, !3970, !3974, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3962, file: !115, line: 1052, baseType: !794)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "reg_base", scope: !3962, file: !115, line: 1053, baseType: !209, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "reg_readl", scope: !3962, file: !115, line: 1054, baseType: !3967, size: 64, offset: 64)
!3967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 64)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{!426, !209}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "reg_writel", scope: !3962, file: !115, line: 1055, baseType: !3971, size: 64, offset: 128)
!3971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3972, size: 64)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{null, !426, !209}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3962, file: !115, line: 1056, baseType: !3975, size: 64, offset: 192)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3976 = !DISubroutineType(types: !3977)
!3977 = !{null, !3961}
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3962, file: !115, line: 1057, baseType: !3975, size: 64, offset: 256)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "irq_base", scope: !3962, file: !115, line: 1058, baseType: !7, size: 32, offset: 320)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cnt", scope: !3962, file: !115, line: 1059, baseType: !7, size: 32, offset: 352)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !3962, file: !115, line: 1060, baseType: !426, size: 32, offset: 384)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "type_cache", scope: !3962, file: !115, line: 1061, baseType: !426, size: 32, offset: 416)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "polarity_cache", scope: !3962, file: !115, line: 1062, baseType: !426, size: 32, offset: 448)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "wake_enabled", scope: !3962, file: !115, line: 1063, baseType: !426, size: 32, offset: 480)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "wake_active", scope: !3962, file: !115, line: 1064, baseType: !426, size: 32, offset: 512)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "num_ct", scope: !3962, file: !115, line: 1065, baseType: !7, size: 32, offset: 544)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3962, file: !115, line: 1066, baseType: !209, size: 64, offset: 576)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "installed", scope: !3962, file: !115, line: 1067, baseType: !335, size: 64, offset: 640)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !3962, file: !115, line: 1068, baseType: !335, size: 64, offset: 704)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !3962, file: !115, line: 1069, baseType: !3667, size: 64, offset: 768)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3962, file: !115, line: 1070, baseType: !214, size: 128, offset: 832)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "chip_types", scope: !3962, file: !115, line: 1071, baseType: !3993, offset: 960)
!3993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3994, elements: !2346)
!3994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_type", file: !115, line: 1009, size: 2944, elements: !3995)
!3995 = !{!3996, !3997, !4007, !4073, !4074, !4075}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !3994, file: !115, line: 1010, baseType: !3852, size: 2304)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3994, file: !115, line: 1011, baseType: !3998, size: 448, offset: 2304)
!3998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_regs", file: !115, line: 986, size: 448, elements: !3999)
!3999 = !{!4000, !4001, !4002, !4003, !4004, !4005, !4006}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !3998, file: !115, line: 987, baseType: !335, size: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !3998, file: !115, line: 988, baseType: !335, size: 64, offset: 64)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3998, file: !115, line: 989, baseType: !335, size: 64, offset: 128)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !3998, file: !115, line: 990, baseType: !335, size: 64, offset: 192)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "eoi", scope: !3998, file: !115, line: 991, baseType: !335, size: 64, offset: 256)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3998, file: !115, line: 992, baseType: !335, size: 64, offset: 320)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !3998, file: !115, line: 993, baseType: !335, size: 64, offset: 384)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3994, file: !115, line: 1012, baseType: !4008, size: 64, offset: 2752)
!4008 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_flow_handler_t", file: !4009, line: 12, baseType: !4010)
!4009 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{null, !4013}
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_desc", file: !4015, line: 55, size: 2880, elements: !4016)
!4015 = !DIFile(filename: "./include/linux/irqdesc.h", directory: "/home/lizy2001/genbc/linux")
!4016 = !{!4017, !4018, !4019, !4020, !4021, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "irq_common_data", scope: !4014, file: !4015, line: 56, baseType: !3842, size: 256)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "irq_data", scope: !4014, file: !4015, line: 57, baseType: !3835, size: 448, offset: 256)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "kstat_irqs", scope: !4014, file: !4015, line: 58, baseType: !2698, size: 64, offset: 704)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !4014, file: !4015, line: 59, baseType: !4008, size: 64, offset: 768)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4014, file: !4015, line: 60, baseType: !4022, size: 64, offset: 832)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irqaction", file: !108, line: 110, size: 768, elements: !4024)
!4024 = !{!4025, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4023, file: !108, line: 111, baseType: !4026, size: 64)
!4026 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !108, line: 92, baseType: !4027)
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4028, size: 64)
!4028 = !DISubroutineType(types: !4029)
!4029 = !{!4030, !269, !209}
!4030 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !123, line: 17, baseType: !122)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4023, file: !108, line: 112, baseType: !209, size: 64, offset: 64)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_dev_id", scope: !4023, file: !108, line: 113, baseType: !209, size: 64, offset: 128)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4023, file: !108, line: 114, baseType: !4022, size: 64, offset: 192)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "thread_fn", scope: !4023, file: !108, line: 115, baseType: !4026, size: 64, offset: 256)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !4023, file: !108, line: 116, baseType: !1230, size: 64, offset: 320)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4023, file: !108, line: 117, baseType: !4022, size: 64, offset: 384)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4023, file: !108, line: 118, baseType: !7, size: 32, offset: 448)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4023, file: !108, line: 119, baseType: !7, size: 32, offset: 480)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "thread_flags", scope: !4023, file: !108, line: 120, baseType: !335, size: 64, offset: 512)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "thread_mask", scope: !4023, file: !108, line: 121, baseType: !335, size: 64, offset: 576)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4023, file: !108, line: 122, baseType: !231, size: 64, offset: 640)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4023, file: !108, line: 123, baseType: !4043, size: 64, offset: 704)
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4044 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !4015, line: 14, flags: DIFlagFwdDecl)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "status_use_accessors", scope: !4014, file: !4015, line: 61, baseType: !7, size: 32, offset: 896)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "core_internal_state__do_not_mess_with_it", scope: !4014, file: !4015, line: 62, baseType: !7, size: 32, offset: 928)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4014, file: !4015, line: 63, baseType: !7, size: 32, offset: 960)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "wake_depth", scope: !4014, file: !4015, line: 64, baseType: !7, size: 32, offset: 992)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "tot_count", scope: !4014, file: !4015, line: 65, baseType: !7, size: 32, offset: 1024)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !4014, file: !4015, line: 66, baseType: !7, size: 32, offset: 1056)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "last_unhandled", scope: !4014, file: !4015, line: 67, baseType: !335, size: 64, offset: 1088)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_unhandled", scope: !4014, file: !4015, line: 68, baseType: !7, size: 32, offset: 1152)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled", scope: !4014, file: !4015, line: 69, baseType: !761, size: 32, offset: 1184)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled_last", scope: !4014, file: !4015, line: 70, baseType: !269, size: 32, offset: 1216)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4014, file: !4015, line: 71, baseType: !794, offset: 1248)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_enabled", scope: !4014, file: !4015, line: 72, baseType: !4057, size: 64, offset: 1280)
!4057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_affinity", scope: !4014, file: !4015, line: 73, baseType: !3875, size: 64, offset: 1344)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "threads_oneshot", scope: !4014, file: !4015, line: 81, baseType: !335, size: 64, offset: 1408)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "threads_active", scope: !4014, file: !4015, line: 82, baseType: !761, size: 32, offset: 1472)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "wait_for_threads", scope: !4014, file: !4015, line: 83, baseType: !1495, size: 128, offset: 1536)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "nr_actions", scope: !4014, file: !4015, line: 85, baseType: !7, size: 32, offset: 1664)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "no_suspend_depth", scope: !4014, file: !4015, line: 86, baseType: !7, size: 32, offset: 1696)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "cond_suspend_depth", scope: !4014, file: !4015, line: 87, baseType: !7, size: 32, offset: 1728)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "force_resume_depth", scope: !4014, file: !4015, line: 88, baseType: !7, size: 32, offset: 1760)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4014, file: !4015, line: 91, baseType: !4043, size: 64, offset: 1792)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4014, file: !4015, line: 98, baseType: !376, size: 128, align: 64, offset: 1856)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4014, file: !4015, line: 99, baseType: !227, size: 512, offset: 1984)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "request_mutex", scope: !4014, file: !4015, line: 101, baseType: !1187, size: 192, offset: 2496)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "parent_irq", scope: !4014, file: !4015, line: 102, baseType: !269, size: 32, offset: 2688)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4014, file: !4015, line: 103, baseType: !643, size: 64, offset: 2752)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4014, file: !4015, line: 104, baseType: !231, size: 64, offset: 2816)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3994, file: !115, line: 1013, baseType: !426, size: 32, offset: 2816)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache_priv", scope: !3994, file: !115, line: 1014, baseType: !426, size: 32, offset: 2848)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !3994, file: !115, line: 1015, baseType: !1429, size: 64, offset: 2880)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3668, file: !94, line: 175, baseType: !3667, size: 64, offset: 576)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3668, file: !94, line: 182, baseType: !3810, size: 64, offset: 640)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3668, file: !94, line: 183, baseType: !7, size: 32, offset: 704)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3668, file: !94, line: 184, baseType: !7, size: 32, offset: 736)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3668, file: !94, line: 185, baseType: !752, size: 128, offset: 768)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3668, file: !94, line: 186, baseType: !1187, size: 192, offset: 896)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3668, file: !94, line: 187, baseType: !4083, offset: 1088)
!4083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2346)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !224, file: !73, line: 499, baseType: !214, size: 128, offset: 4224)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !224, file: !73, line: 502, baseType: !4086, size: 64, offset: 4352)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4088)
!4088 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !224, file: !73, line: 504, baseType: !4090, size: 64, offset: 4416)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !224, file: !73, line: 505, baseType: !432, size: 64, offset: 4480)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !224, file: !73, line: 510, baseType: !432, size: 64, offset: 4544)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !224, file: !73, line: 511, baseType: !4094, size: 64, offset: 4608)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4096)
!4096 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !224, file: !73, line: 513, baseType: !4098, size: 64, offset: 4672)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!4099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !4100)
!4100 = !{!4101, !4102}
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4099, file: !73, line: 293, baseType: !7, size: 32)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4099, file: !73, line: 294, baseType: !335, size: 64, offset: 64)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !224, file: !73, line: 515, baseType: !214, size: 128, offset: 4736)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !224, file: !73, line: 526, baseType: !4105, offset: 4864)
!4105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4106, line: 5, elements: !257)
!4106 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !224, file: !73, line: 528, baseType: !3681, size: 64, offset: 4864)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !224, file: !73, line: 529, baseType: !3694, size: 64, offset: 4928)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !224, file: !73, line: 534, baseType: !524, size: 32, offset: 4992)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !224, file: !73, line: 535, baseType: !426, size: 32, offset: 5024)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !224, file: !73, line: 537, baseType: !243, offset: 5056)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !224, file: !73, line: 538, baseType: !214, size: 128, offset: 5056)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !224, file: !73, line: 540, baseType: !4114, size: 64, offset: 5184)
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!4115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4116, line: 54, size: 960, elements: !4117)
!4116 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4117 = !{!4118, !4119, !4120, !4121, !4122, !4123, !4124, !4128, !4132, !4133, !4134, !4135, !4139, !4143, !4144}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4115, file: !4116, line: 55, baseType: !231, size: 64)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4115, file: !4116, line: 56, baseType: !643, size: 64, offset: 64)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4115, file: !4116, line: 58, baseType: !339, size: 64, offset: 128)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4115, file: !4116, line: 59, baseType: !339, size: 64, offset: 192)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4115, file: !4116, line: 60, baseType: !236, size: 64, offset: 256)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4115, file: !4116, line: 62, baseType: !3401, size: 64, offset: 320)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4115, file: !4116, line: 63, baseType: !4125, size: 64, offset: 384)
!4125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4126, size: 64)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{!285, !223, !3408}
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4115, file: !4116, line: 65, baseType: !4129, size: 64, offset: 448)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{null, !4114}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4115, file: !4116, line: 66, baseType: !3410, size: 64, offset: 512)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4115, file: !4116, line: 68, baseType: !3419, size: 64, offset: 576)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4115, file: !4116, line: 70, baseType: !3204, size: 64, offset: 640)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4115, file: !4116, line: 71, baseType: !4136, size: 64, offset: 704)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{!2142, !223}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4115, file: !4116, line: 73, baseType: !4140, size: 64, offset: 768)
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 64)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{null, !223, !3236, !3237}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4115, file: !4116, line: 75, baseType: !3414, size: 64, offset: 832)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4115, file: !4116, line: 77, baseType: !3531, size: 64, offset: 896)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !224, file: !73, line: 541, baseType: !339, size: 64, offset: 5248)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !224, file: !73, line: 543, baseType: !3410, size: 64, offset: 5312)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !224, file: !73, line: 544, baseType: !4148, size: 64, offset: 5376)
!4148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4149, size: 64)
!4149 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !224, file: !73, line: 545, baseType: !4151, size: 64, offset: 5440)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !224, file: !73, line: 547, baseType: !501, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !224, file: !73, line: 548, baseType: !501, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !224, file: !73, line: 549, baseType: !501, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !224, file: !73, line: 550, baseType: !501, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !211, file: !140, line: 91, baseType: !3905, size: 96, offset: 256)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !211, file: !140, line: 92, baseType: !4159, size: 64, offset: 384)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_affinity_desc", file: !108, line: 308, size: 128, elements: !4161)
!4161 = !{!4162, !4163}
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4160, file: !108, line: 309, baseType: !1381, size: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4160, file: !108, line: 310, baseType: !7, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "write_msi_msg", scope: !211, file: !140, line: 97, baseType: !4165, size: 64, offset: 448)
!4165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4166, size: 64)
!4166 = !DISubroutineType(types: !4167)
!4167 = !{null, !210, !209}
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "write_msi_msg_data", scope: !211, file: !140, line: 98, baseType: !209, size: 64, offset: 512)
!4169 = !DIDerivedType(tag: DW_TAG_member, scope: !211, file: !140, line: 100, baseType: !4170, size: 192, offset: 576)
!4170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !211, file: !140, line: 100, size: 192, elements: !4171)
!4171 = !{!4172, !4192, !4199, !4203}
!4172 = !DIDerivedType(tag: DW_TAG_member, scope: !4170, file: !140, line: 102, baseType: !4173, size: 192)
!4173 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4170, file: !140, line: 102, size: 192, elements: !4174)
!4174 = !{!4175, !4176, !4187}
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "masked", scope: !4173, file: !140, line: 103, baseType: !426, size: 32)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "msi_attrib", scope: !4173, file: !140, line: 113, baseType: !4177, size: 64, offset: 32)
!4177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4173, file: !140, line: 104, size: 64, elements: !4178)
!4178 = !{!4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186}
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "is_msix", scope: !4177, file: !140, line: 105, baseType: !1366, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "multiple", scope: !4177, file: !140, line: 106, baseType: !1366, size: 3, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "multi_cap", scope: !4177, file: !140, line: 107, baseType: !1366, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "maskbit", scope: !4177, file: !140, line: 108, baseType: !1366, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "is_64", scope: !4177, file: !140, line: 109, baseType: !1366, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtual", scope: !4177, file: !140, line: 110, baseType: !1366, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "entry_nr", scope: !4177, file: !140, line: 111, baseType: !873, size: 16, offset: 16)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "default_irq", scope: !4177, file: !140, line: 112, baseType: !7, size: 32, offset: 32)
!4187 = !DIDerivedType(tag: DW_TAG_member, scope: !4173, file: !140, line: 114, baseType: !4188, size: 64, offset: 128)
!4188 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4173, file: !140, line: 114, size: 64, elements: !4189)
!4189 = !{!4190, !4191}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pos", scope: !4188, file: !140, line: 115, baseType: !1366, size: 8)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "mask_base", scope: !4188, file: !140, line: 116, baseType: !209, size: 64)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "platform", scope: !4170, file: !140, line: 127, baseType: !4193, size: 128)
!4193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_msi_desc", file: !140, line: 37, size: 128, elements: !4194)
!4194 = !{!4195, !4198}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "msi_priv_data", scope: !4193, file: !140, line: 38, baseType: !4196, size: 64)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = !DICompositeType(tag: DW_TAG_structure_type, name: "platform_msi_priv_data", file: !140, line: 19, flags: DIFlagFwdDecl)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "msi_index", scope: !4193, file: !140, line: 39, baseType: !873, size: 16, offset: 64)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "fsl_mc", scope: !4170, file: !140, line: 128, baseType: !4200, size: 16)
!4200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fsl_mc_msi_desc", file: !140, line: 46, size: 16, elements: !4201)
!4201 = !{!4202}
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "msi_index", scope: !4200, file: !140, line: 47, baseType: !873, size: 16)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "inta", scope: !4170, file: !140, line: 129, baseType: !4204, size: 16)
!4204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ti_sci_inta_msi_desc", file: !140, line: 54, size: 16, elements: !4205)
!4205 = !{!4206}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index", scope: !4204, file: !140, line: 55, baseType: !873, size: 16)
!4207 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !167, line: 155, baseType: !269)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !167, line: 309, size: 19264, elements: !4210)
!4210 = !{!4211, !4212, !4301, !4302, !4303, !4304, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330, !4331, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4432, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4471, !4472, !4473, !4474, !4475, !4476, !4478, !4479, !4480, !4483, !4515, !4516, !4517, !4518, !4519, !4520, !4521}
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !4209, file: !167, line: 310, baseType: !214, size: 128)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4209, file: !167, line: 311, baseType: !4213, size: 64, offset: 128)
!4213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4214, size: 64)
!4214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !167, line: 605, size: 8064, elements: !4215)
!4215 = !{!4216, !4217, !4218, !4219, !4220, !4221, !4222, !4237, !4238, !4239, !4263, !4283, !4284, !4285, !4286, !4287, !4288, !4289, !4293, !4294, !4296, !4297, !4298, !4299, !4300}
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4214, file: !167, line: 606, baseType: !214, size: 128)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4214, file: !167, line: 607, baseType: !4213, size: 64, offset: 128)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4214, file: !167, line: 608, baseType: !214, size: 128, offset: 192)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4214, file: !167, line: 609, baseType: !214, size: 128, offset: 320)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4214, file: !167, line: 610, baseType: !4208, size: 64, offset: 448)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !4214, file: !167, line: 611, baseType: !214, size: 128, offset: 512)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4214, file: !167, line: 613, baseType: !4223, size: 256, offset: 640)
!4223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4224, size: 256, elements: !1169)
!4224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4225, size: 64)
!4225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4226, line: 20, size: 512, elements: !4227)
!4226 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4227 = !{!4228, !4230, !4231, !4232, !4233, !4234, !4235, !4236}
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4225, file: !4226, line: 21, baseType: !4229, size: 64)
!4229 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !215, line: 158, baseType: !2140)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4225, file: !4226, line: 22, baseType: !4229, size: 64, offset: 64)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4225, file: !4226, line: 23, baseType: !231, size: 64, offset: 128)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4225, file: !4226, line: 24, baseType: !335, size: 64, offset: 192)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4225, file: !4226, line: 25, baseType: !335, size: 64, offset: 256)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4225, file: !4226, line: 26, baseType: !4224, size: 64, offset: 320)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4225, file: !4226, line: 26, baseType: !4224, size: 64, offset: 384)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4225, file: !4226, line: 26, baseType: !4224, size: 64, offset: 448)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4214, file: !167, line: 614, baseType: !214, size: 128, offset: 896)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !4214, file: !167, line: 615, baseType: !4225, size: 512, offset: 1024)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4214, file: !167, line: 617, baseType: !4240, size: 64, offset: 1536)
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4241, size: 64)
!4241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !167, line: 731, size: 320, elements: !4242)
!4242 = !{!4243, !4247, !4251, !4255, !4259}
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !4241, file: !167, line: 732, baseType: !4244, size: 64)
!4244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4245, size: 64)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{!269, !4213}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !4241, file: !167, line: 733, baseType: !4248, size: 64, offset: 64)
!4248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4249, size: 64)
!4249 = !DISubroutineType(types: !4250)
!4250 = !{null, !4213}
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !4241, file: !167, line: 734, baseType: !4252, size: 64, offset: 128)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{!209, !4213, !7, !269}
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4241, file: !167, line: 735, baseType: !4256, size: 64, offset: 192)
!4256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4257, size: 64)
!4257 = !DISubroutineType(types: !4258)
!4258 = !{!269, !4213, !7, !269, !269, !1429}
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4241, file: !167, line: 736, baseType: !4260, size: 64, offset: 256)
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64)
!4261 = !DISubroutineType(types: !4262)
!4262 = !{!269, !4213, !7, !269, !269, !426}
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !4214, file: !167, line: 618, baseType: !4264, size: 64, offset: 1600)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !140, line: 230, size: 512, elements: !4266)
!4266 = !{!4267, !4268, !4269, !4270, !4271, !4275, !4279}
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4265, file: !140, line: 231, baseType: !643, size: 64)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4265, file: !140, line: 232, baseType: !223, size: 64, offset: 64)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !4265, file: !140, line: 233, baseType: !3681, size: 64, offset: 128)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4265, file: !140, line: 234, baseType: !214, size: 128, offset: 192)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "setup_irq", scope: !4265, file: !140, line: 236, baseType: !4272, size: 64, offset: 320)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{!269, !4264, !4208, !210}
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "setup_irqs", scope: !4265, file: !140, line: 238, baseType: !4276, size: 64, offset: 384)
!4276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4277, size: 64)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{!269, !4264, !4208, !269, !269}
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "teardown_irq", scope: !4265, file: !140, line: 240, baseType: !4280, size: 64, offset: 448)
!4280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4281, size: 64)
!4281 = !DISubroutineType(types: !4282)
!4282 = !{null, !4264, !7}
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4214, file: !167, line: 619, baseType: !209, size: 64, offset: 1664)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !4214, file: !167, line: 620, baseType: !4043, size: 64, offset: 1728)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4214, file: !167, line: 622, baseType: !438, size: 8, offset: 1792)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !4214, file: !167, line: 623, baseType: !438, size: 8, offset: 1800)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !4214, file: !167, line: 624, baseType: !438, size: 8, offset: 1808)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !4214, file: !167, line: 625, baseType: !438, size: 8, offset: 1816)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4214, file: !167, line: 630, baseType: !4290, size: 384, offset: 1824)
!4290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 384, elements: !4291)
!4291 = !{!4292}
!4292 = !DISubrange(count: 48)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !4214, file: !167, line: 632, baseType: !327, size: 16, offset: 2208)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !4214, file: !167, line: 633, baseType: !4295, size: 16, offset: 2224)
!4295 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !167, line: 237, baseType: !327)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !4214, file: !167, line: 634, baseType: !223, size: 64, offset: 2240)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4214, file: !167, line: 635, baseType: !224, size: 5568, offset: 2304)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !4214, file: !167, line: 636, baseType: !353, size: 64, offset: 7872)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !4214, file: !167, line: 637, baseType: !353, size: 64, offset: 7936)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !4214, file: !167, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !4209, file: !167, line: 312, baseType: !4213, size: 64, offset: 192)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4209, file: !167, line: 314, baseType: !209, size: 64, offset: 256)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !4209, file: !167, line: 315, baseType: !4043, size: 64, offset: 320)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4209, file: !167, line: 316, baseType: !4305, size: 64, offset: 384)
!4305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4306, size: 64)
!4306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !167, line: 69, size: 832, elements: !4307)
!4307 = !{!4308, !4309, !4310, !4313, !4314}
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4306, file: !167, line: 70, baseType: !4213, size: 64)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4306, file: !167, line: 71, baseType: !214, size: 128, offset: 64)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4306, file: !167, line: 72, baseType: !4311, size: 64, offset: 192)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4312 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !167, line: 72, flags: DIFlagFwdDecl)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4306, file: !167, line: 73, baseType: !438, size: 8, offset: 256)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4306, file: !167, line: 74, baseType: !227, size: 512, offset: 320)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !4209, file: !167, line: 318, baseType: !7, size: 32, offset: 448)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4209, file: !167, line: 319, baseType: !327, size: 16, offset: 480)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4209, file: !167, line: 320, baseType: !327, size: 16, offset: 496)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4209, file: !167, line: 321, baseType: !327, size: 16, offset: 512)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4209, file: !167, line: 322, baseType: !327, size: 16, offset: 528)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4209, file: !167, line: 323, baseType: !7, size: 32, offset: 544)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !4209, file: !167, line: 324, baseType: !1366, size: 8, offset: 576)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4209, file: !167, line: 325, baseType: !1366, size: 8, offset: 584)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !4209, file: !167, line: 330, baseType: !1366, size: 8, offset: 592)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !4209, file: !167, line: 331, baseType: !1366, size: 8, offset: 600)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !4209, file: !167, line: 332, baseType: !1366, size: 8, offset: 608)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !4209, file: !167, line: 333, baseType: !1366, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !4209, file: !167, line: 334, baseType: !1366, size: 8, offset: 624)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4209, file: !167, line: 335, baseType: !1366, size: 8, offset: 632)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !4209, file: !167, line: 336, baseType: !873, size: 16, offset: 640)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !4209, file: !167, line: 337, baseType: !3821, size: 64, offset: 704)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4209, file: !167, line: 339, baseType: !4332, size: 64, offset: 768)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !167, line: 858, size: 2048, elements: !4334)
!4334 = !{!4335, !4336, !4337, !4349, !4353, !4357, !4361, !4365, !4366, !4370, !4389, !4390, !4391}
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4333, file: !167, line: 859, baseType: !214, size: 128)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4333, file: !167, line: 860, baseType: !231, size: 64, offset: 128)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4333, file: !167, line: 861, baseType: !4338, size: 64, offset: 192)
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4339, size: 64)
!4339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4340)
!4340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3472, line: 38, size: 256, elements: !4341)
!4341 = !{!4342, !4343, !4344, !4345, !4346, !4347, !4348}
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4340, file: !3472, line: 39, baseType: !428, size: 32)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4340, file: !3472, line: 39, baseType: !428, size: 32, offset: 32)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4340, file: !3472, line: 40, baseType: !428, size: 32, offset: 64)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4340, file: !3472, line: 40, baseType: !428, size: 32, offset: 96)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4340, file: !3472, line: 41, baseType: !428, size: 32, offset: 128)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4340, file: !3472, line: 41, baseType: !428, size: 32, offset: 160)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4340, file: !3472, line: 42, baseType: !3491, size: 64, offset: 192)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4333, file: !167, line: 862, baseType: !4350, size: 64, offset: 256)
!4350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4351, size: 64)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{!269, !4208, !4338}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4333, file: !167, line: 863, baseType: !4354, size: 64, offset: 320)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{null, !4208}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4333, file: !167, line: 864, baseType: !4358, size: 64, offset: 384)
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{!269, !4208, !3502}
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4333, file: !167, line: 865, baseType: !4362, size: 64, offset: 448)
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4363, size: 64)
!4363 = !DISubroutineType(types: !4364)
!4364 = !{!269, !4208}
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4333, file: !167, line: 866, baseType: !4354, size: 64, offset: 512)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4333, file: !167, line: 867, baseType: !4367, size: 64, offset: 576)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4368 = !DISubroutineType(types: !4369)
!4369 = !{!269, !4208, !269}
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4333, file: !167, line: 868, baseType: !4371, size: 64, offset: 640)
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4373)
!4373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !167, line: 795, size: 384, elements: !4374)
!4374 = !{!4375, !4381, !4385, !4386, !4387, !4388}
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4373, file: !167, line: 797, baseType: !4376, size: 64)
!4376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4377 = !DISubroutineType(types: !4378)
!4378 = !{!4379, !4208, !4380}
!4379 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !167, line: 772, baseType: !7)
!4380 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !167, line: 180, baseType: !7)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4373, file: !167, line: 801, baseType: !4382, size: 64, offset: 64)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 64)
!4383 = !DISubroutineType(types: !4384)
!4384 = !{!4379, !4208}
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4373, file: !167, line: 804, baseType: !4382, size: 64, offset: 128)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4373, file: !167, line: 807, baseType: !4354, size: 64, offset: 192)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4373, file: !167, line: 808, baseType: !4354, size: 64, offset: 256)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4373, file: !167, line: 811, baseType: !4354, size: 64, offset: 320)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4333, file: !167, line: 869, baseType: !339, size: 64, offset: 704)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4333, file: !167, line: 870, baseType: !3460, size: 1152, offset: 768)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4333, file: !167, line: 871, baseType: !4392, size: 128, offset: 1920)
!4392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !167, line: 759, size: 128, elements: !4393)
!4393 = !{!4394, !4395}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4392, file: !167, line: 760, baseType: !243)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4392, file: !167, line: 761, baseType: !214, size: 128)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4209, file: !167, line: 340, baseType: !432, size: 64, offset: 832)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4209, file: !167, line: 346, baseType: !4099, size: 128, offset: 896)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !4209, file: !167, line: 348, baseType: !4207, size: 32, offset: 1024)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !4209, file: !167, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !4209, file: !167, line: 352, baseType: !1366, size: 8, offset: 1064)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !4209, file: !167, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !4209, file: !167, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !4209, file: !167, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !4209, file: !167, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !4209, file: !167, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !4209, file: !167, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !4209, file: !167, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !4209, file: !167, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !4209, file: !167, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !4209, file: !167, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !4209, file: !167, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !4209, file: !167, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !4209, file: !167, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !4209, file: !167, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !4209, file: !167, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !4209, file: !167, line: 376, baseType: !7, size: 32, offset: 1120)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !4209, file: !167, line: 377, baseType: !7, size: 32, offset: 1152)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !4209, file: !167, line: 380, baseType: !4419, size: 64, offset: 1216)
!4419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4420, size: 64)
!4420 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !167, line: 303, flags: DIFlagFwdDecl)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !4209, file: !167, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !4209, file: !167, line: 383, baseType: !269, size: 32, offset: 1312)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !4209, file: !167, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !4209, file: !167, line: 387, baseType: !4380, size: 32, offset: 1376)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4209, file: !167, line: 388, baseType: !224, size: 5568, offset: 1408)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !4209, file: !167, line: 390, baseType: !269, size: 32, offset: 6976)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4209, file: !167, line: 396, baseType: !7, size: 32, offset: 7008)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4209, file: !167, line: 397, baseType: !4429, size: 8704, offset: 7040)
!4429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4225, size: 8704, elements: !4430)
!4430 = !{!4431}
!4431 = !DISubrange(count: 17)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4209, file: !167, line: 399, baseType: !501, size: 8, offset: 15744)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !4209, file: !167, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !4209, file: !167, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !4209, file: !167, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !4209, file: !167, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !4209, file: !167, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !4209, file: !167, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !4209, file: !167, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !4209, file: !167, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !4209, file: !167, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !4209, file: !167, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !4209, file: !167, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !4209, file: !167, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !4209, file: !167, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !4209, file: !167, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !4209, file: !167, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !4209, file: !167, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !4209, file: !167, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4209, file: !167, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !4209, file: !167, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !4209, file: !167, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !4209, file: !167, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !4209, file: !167, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !4209, file: !167, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !4209, file: !167, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !4209, file: !167, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !4209, file: !167, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !4209, file: !167, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !4209, file: !167, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !4209, file: !167, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !4209, file: !167, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !4209, file: !167, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !4209, file: !167, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !4209, file: !167, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !4209, file: !167, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !4209, file: !167, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !4209, file: !167, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !4209, file: !167, line: 450, baseType: !4470, size: 16, offset: 15792)
!4470 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !167, line: 206, baseType: !327)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !4209, file: !167, line: 451, baseType: !761, size: 32, offset: 15808)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !4209, file: !167, line: 453, baseType: !3805, size: 512, offset: 15840)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !4209, file: !167, line: 454, baseType: !648, size: 64, offset: 16384)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !4209, file: !167, line: 455, baseType: !353, size: 64, offset: 16448)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !4209, file: !167, line: 456, baseType: !269, size: 32, offset: 16512)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !4209, file: !167, line: 457, baseType: !4477, size: 1088, offset: 16576)
!4477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !353, size: 1088, elements: !4430)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !4209, file: !167, line: 458, baseType: !4477, size: 1088, offset: 17664)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !4209, file: !167, line: 469, baseType: !339, size: 64, offset: 18752)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !4209, file: !167, line: 471, baseType: !4481, size: 64, offset: 18816)
!4481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4482, size: 64)
!4482 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !167, line: 304, flags: DIFlagFwdDecl)
!4483 = !DIDerivedType(tag: DW_TAG_member, scope: !4209, file: !167, line: 478, baseType: !4484, size: 64, offset: 18880)
!4484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4209, file: !167, line: 478, size: 64, elements: !4485)
!4485 = !{!4486, !4514}
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4484, file: !167, line: 479, baseType: !4487, size: 64)
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4488, size: 64)
!4488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !4489, line: 323, size: 1024, elements: !4490)
!4489 = !DIFile(filename: "drivers/pci/pci.h", directory: "/home/lizy2001/genbc/linux")
!4490 = !{!4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4513}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4488, file: !4489, line: 324, baseType: !269, size: 32)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "nres", scope: !4488, file: !4489, line: 325, baseType: !269, size: 32, offset: 32)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !4488, file: !4489, line: 326, baseType: !426, size: 32, offset: 64)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !4488, file: !4489, line: 327, baseType: !873, size: 16, offset: 96)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "total_VFs", scope: !4488, file: !4489, line: 328, baseType: !873, size: 16, offset: 112)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "initial_VFs", scope: !4488, file: !4489, line: 329, baseType: !873, size: 16, offset: 128)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "num_VFs", scope: !4488, file: !4489, line: 330, baseType: !873, size: 16, offset: 144)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4488, file: !4489, line: 331, baseType: !873, size: 16, offset: 160)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !4488, file: !4489, line: 332, baseType: !873, size: 16, offset: 176)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "vf_device", scope: !4488, file: !4489, line: 333, baseType: !873, size: 16, offset: 192)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "pgsz", scope: !4488, file: !4489, line: 334, baseType: !426, size: 32, offset: 224)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4488, file: !4489, line: 335, baseType: !1366, size: 8, offset: 256)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "max_VF_buses", scope: !4488, file: !4489, line: 336, baseType: !1366, size: 8, offset: 264)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "driver_max_VFs", scope: !4488, file: !4489, line: 337, baseType: !873, size: 16, offset: 272)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4488, file: !4489, line: 338, baseType: !4208, size: 64, offset: 320)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4488, file: !4489, line: 339, baseType: !4208, size: 64, offset: 384)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4488, file: !4489, line: 340, baseType: !426, size: 32, offset: 448)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4488, file: !4489, line: 341, baseType: !1366, size: 8, offset: 480)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4488, file: !4489, line: 342, baseType: !873, size: 16, offset: 496)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4488, file: !4489, line: 343, baseType: !873, size: 16, offset: 512)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "barsz", scope: !4488, file: !4489, line: 344, baseType: !4512, size: 384, offset: 576)
!4512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4229, size: 384, elements: !1639)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_autoprobe", scope: !4488, file: !4489, line: 345, baseType: !501, size: 8, offset: 960)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4484, file: !167, line: 480, baseType: !4208, size: 64)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !4209, file: !167, line: 482, baseType: !873, size: 16, offset: 18944)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !4209, file: !167, line: 483, baseType: !1366, size: 8, offset: 18960)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !4209, file: !167, line: 497, baseType: !873, size: 16, offset: 18976)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !4209, file: !167, line: 498, baseType: !2140, size: 64, offset: 19008)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !4209, file: !167, line: 499, baseType: !332, size: 64, offset: 19072)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4209, file: !167, line: 500, baseType: !285, size: 64, offset: 19136)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !4209, file: !167, line: 502, baseType: !335, size: 64, offset: 19200)
!4522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 64)
!4523 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4525, size: 64)
!4525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4526)
!4526 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !218)
!4527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4528, size: 64)
!4528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !73, line: 99, size: 256, elements: !4529)
!4529 = !{!4530, !4531, !4535}
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4528, file: !73, line: 100, baseType: !322, size: 128)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4528, file: !73, line: 101, baseType: !4532, size: 64, offset: 128)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4533, size: 64)
!4533 = !DISubroutineType(types: !4534)
!4534 = !{!316, !223, !4527, !285}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4528, file: !73, line: 103, baseType: !4536, size: 64, offset: 192)
!4536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4537, size: 64)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{!316, !223, !4527, !231, !332}
!4539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4526, size: 64)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!4541 = !{!0, !4542, !4544}
!4542 = !DIGlobalVariableExpression(var: !4543, expr: !DIExpression())
!4543 = distinct !DIGlobalVariable(name: "pci_msi_enable", scope: !2, file: !3, line: 29, type: !269, isLocal: true, isDefinition: true)
!4544 = !DIGlobalVariableExpression(var: !4545, expr: !DIExpression())
!4545 = distinct !DIGlobalVariable(name: "pci_msi_domain_ops_default", scope: !2, file: !3, line: 1412, type: !4546, isLocal: true, isDefinition: true)
!4546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_domain_ops", file: !140, line: 293, size: 640, elements: !4547)
!4547 = !{!4548, !4597, !4601, !4605, !4609, !4613, !4617, !4621, !4625, !4629}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "get_hwirq", scope: !4546, file: !140, line: 294, baseType: !4549, size: 64)
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4550 = !DISubroutineType(types: !4551)
!4551 = !{!3810, !4552, !4564}
!4552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4553, size: 64)
!4553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_domain_info", file: !140, line: 331, size: 512, elements: !4554)
!4554 = !{!4555, !4556, !4558, !4559, !4560, !4561, !4562, !4563}
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4553, file: !140, line: 332, baseType: !426, size: 32)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4553, file: !140, line: 333, baseType: !4557, size: 64, offset: 64)
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4546, size: 64)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !4553, file: !140, line: 334, baseType: !3851, size: 64, offset: 128)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !4553, file: !140, line: 335, baseType: !209, size: 64, offset: 192)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4553, file: !140, line: 336, baseType: !4008, size: 64, offset: 256)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !4553, file: !140, line: 337, baseType: !209, size: 64, offset: 320)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "handler_name", scope: !4553, file: !140, line: 338, baseType: !231, size: 64, offset: 384)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4553, file: !140, line: 339, baseType: !209, size: 64, offset: 448)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = !DIDerivedType(tag: DW_TAG_typedef, name: "msi_alloc_info_t", file: !4566, line: 7, baseType: !4567)
!4566 = !DIFile(filename: "./arch/x86/include/asm/msi.h", directory: "/home/lizy2001/genbc/linux")
!4567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_alloc_info", file: !129, line: 77, size: 576, elements: !4568)
!4568 = !{!4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4567, file: !129, line: 78, baseType: !128, size: 32)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4567, file: !129, line: 79, baseType: !426, size: 32, offset: 32)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "devid", scope: !4567, file: !129, line: 80, baseType: !426, size: 32, offset: 64)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !4567, file: !129, line: 81, baseType: !3810, size: 64, offset: 128)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4567, file: !129, line: 82, baseType: !3875, size: 64, offset: 192)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4567, file: !129, line: 83, baseType: !210, size: 64, offset: 256)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4567, file: !129, line: 84, baseType: !209, size: 64, offset: 320)
!4576 = !DIDerivedType(tag: DW_TAG_member, scope: !4567, file: !129, line: 86, baseType: !4577, size: 192, offset: 384)
!4577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4567, file: !129, line: 86, size: 192, elements: !4578)
!4578 = !{!4579, !4590}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "ioapic", scope: !4577, file: !129, line: 87, baseType: !4580, size: 192)
!4580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ioapic_alloc_info", file: !129, line: 47, size: 192, elements: !4581)
!4581 = !{!4582, !4583, !4584, !4585, !4586, !4587}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4580, file: !129, line: 48, baseType: !269, size: 32)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4580, file: !129, line: 49, baseType: !269, size: 32, offset: 32)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "trigger", scope: !4580, file: !129, line: 50, baseType: !426, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !4580, file: !129, line: 51, baseType: !426, size: 1, offset: 65, flags: DIFlagBitField, extraData: i64 64)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4580, file: !129, line: 52, baseType: !426, size: 1, offset: 66, flags: DIFlagBitField, extraData: i64 64)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4580, file: !129, line: 53, baseType: !4588, size: 64, offset: 128)
!4588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4589, size: 64)
!4589 = !DICompositeType(tag: DW_TAG_structure_type, name: "IO_APIC_route_entry", file: !129, line: 53, flags: DIFlagFwdDecl)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !4577, file: !129, line: 88, baseType: !4591, size: 192)
!4591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uv_alloc_info", file: !129, line: 56, size: 192, elements: !4592)
!4592 = !{!4593, !4594, !4595, !4596}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !4591, file: !129, line: 57, baseType: !269, size: 32)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "blade", scope: !4591, file: !129, line: 58, baseType: !269, size: 32, offset: 32)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4591, file: !129, line: 59, baseType: !335, size: 64, offset: 64)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4591, file: !129, line: 60, baseType: !285, size: 64, offset: 128)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "msi_init", scope: !4546, file: !140, line: 296, baseType: !4598, size: 64, offset: 64)
!4598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4599, size: 64)
!4599 = !DISubroutineType(types: !4600)
!4600 = !{!269, !3667, !4552, !7, !3810, !4564}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "msi_free", scope: !4546, file: !140, line: 300, baseType: !4602, size: 64, offset: 128)
!4602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4603, size: 64)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{null, !3667, !4552, !7}
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "msi_check", scope: !4546, file: !140, line: 303, baseType: !4606, size: 64, offset: 192)
!4606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4607, size: 64)
!4607 = !DISubroutineType(types: !4608)
!4608 = !{!269, !3667, !4552, !223}
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "msi_prepare", scope: !4546, file: !140, line: 306, baseType: !4610, size: 64, offset: 256)
!4610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4611, size: 64)
!4611 = !DISubroutineType(types: !4612)
!4612 = !{!269, !3667, !223, !269, !4564}
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "msi_finish", scope: !4546, file: !140, line: 309, baseType: !4614, size: 64, offset: 320)
!4614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4615, size: 64)
!4615 = !DISubroutineType(types: !4616)
!4616 = !{null, !4564, !269}
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "set_desc", scope: !4546, file: !140, line: 310, baseType: !4618, size: 64, offset: 384)
!4618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4619, size: 64)
!4619 = !DISubroutineType(types: !4620)
!4620 = !{null, !4564, !210}
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "handle_error", scope: !4546, file: !140, line: 312, baseType: !4622, size: 64, offset: 448)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DISubroutineType(types: !4624)
!4624 = !{!269, !3667, !210, !269}
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "domain_alloc_irqs", scope: !4546, file: !140, line: 314, baseType: !4626, size: 64, offset: 512)
!4626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4627, size: 64)
!4627 = !DISubroutineType(types: !4628)
!4628 = !{!269, !3667, !223, !269}
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "domain_free_irqs", scope: !4546, file: !140, line: 316, baseType: !4630, size: 64, offset: 576)
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4631, size: 64)
!4631 = !DISubroutineType(types: !4632)
!4632 = !{null, !3667, !223}
!4633 = !{i32 7, !"Dwarf Version", i32 4}
!4634 = !{i32 2, !"Debug Info Version", i32 3}
!4635 = !{i32 1, !"wchar_size", i32 2}
!4636 = !{i32 1, !"Code Model", i32 2}
!4637 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4638 = distinct !DISubprogram(name: "arch_restore_msi_irqs", scope: !3, file: !3, line: 155, type: !4355, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!4639 = !DILocalVariable(name: "dev", arg: 1, scope: !4638, file: !3, line: 155, type: !4208)
!4640 = !DILocation(line: 155, column: 51, scope: !4638)
!4641 = !DILocation(line: 157, column: 34, scope: !4638)
!4642 = !DILocation(line: 157, column: 9, scope: !4638)
!4643 = !DILocation(line: 157, column: 2, scope: !4638)
!4644 = distinct !DISubprogram(name: "default_restore_msi_irqs", scope: !3, file: !3, line: 269, type: !4355, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!4645 = !DILocalVariable(name: "dev", arg: 1, scope: !4644, file: !3, line: 269, type: !4208)
!4646 = !DILocation(line: 269, column: 47, scope: !4644)
!4647 = !DILocalVariable(name: "entry", scope: !4644, file: !3, line: 271, type: !210)
!4648 = !DILocation(line: 271, column: 19, scope: !4644)
!4649 = !DILocalVariable(name: "__mptr", scope: !4650, file: !3, line: 273, type: !209)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 273, column: 2)
!4651 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 273, column: 2)
!4652 = !DILocation(line: 273, column: 2, scope: !4650)
!4653 = !DILocation(line: 273, column: 2, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 273, column: 2)
!4655 = !DILocation(line: 273, column: 2, scope: !4651)
!4656 = !DILocation(line: 273, column: 2, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 273, column: 2)
!4658 = !DILocation(line: 274, column: 27, scope: !4657)
!4659 = !DILocation(line: 274, column: 32, scope: !4657)
!4660 = !DILocation(line: 274, column: 39, scope: !4657)
!4661 = !DILocation(line: 274, column: 3, scope: !4657)
!4662 = !DILocalVariable(name: "__mptr", scope: !4663, file: !3, line: 273, type: !209)
!4663 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 273, column: 2)
!4664 = !DILocation(line: 273, column: 2, scope: !4663)
!4665 = !DILocation(line: 273, column: 2, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 273, column: 2)
!4667 = distinct !{!4667, !4655, !4668}
!4668 = !DILocation(line: 274, column: 42, scope: !4651)
!4669 = !DILocation(line: 275, column: 1, scope: !4644)
!4670 = distinct !DISubprogram(name: "__pci_msi_desc_mask_irq", scope: !3, file: !3, line: 174, type: !4671, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!4671 = !DISubroutineType(types: !4672)
!4672 = !{!426, !210, !426, !426}
!4673 = !DILocalVariable(name: "desc", arg: 1, scope: !4670, file: !3, line: 174, type: !210)
!4674 = !DILocation(line: 174, column: 46, scope: !4670)
!4675 = !DILocalVariable(name: "mask", arg: 2, scope: !4670, file: !3, line: 174, type: !426)
!4676 = !DILocation(line: 174, column: 56, scope: !4670)
!4677 = !DILocalVariable(name: "flag", arg: 3, scope: !4670, file: !3, line: 174, type: !426)
!4678 = !DILocation(line: 174, column: 66, scope: !4670)
!4679 = !DILocalVariable(name: "mask_bits", scope: !4670, file: !3, line: 176, type: !426)
!4680 = !DILocation(line: 176, column: 6, scope: !4670)
!4681 = !DILocation(line: 176, column: 18, scope: !4670)
!4682 = !DILocation(line: 176, column: 24, scope: !4670)
!4683 = !DILocation(line: 178, column: 6, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 178, column: 6)
!4685 = !DILocation(line: 178, column: 26, scope: !4684)
!4686 = !DILocation(line: 178, column: 30, scope: !4684)
!4687 = !DILocation(line: 178, column: 36, scope: !4684)
!4688 = !DILocation(line: 178, column: 47, scope: !4684)
!4689 = !DILocation(line: 178, column: 6, scope: !4670)
!4690 = !DILocation(line: 179, column: 3, scope: !4684)
!4691 = !DILocation(line: 181, column: 16, scope: !4670)
!4692 = !DILocation(line: 181, column: 15, scope: !4670)
!4693 = !DILocation(line: 181, column: 12, scope: !4670)
!4694 = !DILocation(line: 182, column: 15, scope: !4670)
!4695 = !DILocation(line: 182, column: 12, scope: !4670)
!4696 = !DILocation(line: 183, column: 45, scope: !4670)
!4697 = !DILocation(line: 183, column: 25, scope: !4670)
!4698 = !DILocation(line: 183, column: 52, scope: !4670)
!4699 = !DILocation(line: 183, column: 58, scope: !4670)
!4700 = !DILocation(line: 184, column: 11, scope: !4670)
!4701 = !DILocation(line: 183, column: 2, scope: !4670)
!4702 = !DILocation(line: 186, column: 9, scope: !4670)
!4703 = !DILocation(line: 186, column: 2, scope: !4670)
!4704 = !DILocation(line: 187, column: 1, scope: !4670)
!4705 = distinct !DISubprogram(name: "msi_desc_to_pci_dev", scope: !3, file: !3, line: 1316, type: !4706, scopeLine: 1317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!4706 = !DISubroutineType(types: !4707)
!4707 = !{!4208, !210}
!4708 = !DILocalVariable(name: "desc", arg: 1, scope: !4705, file: !3, line: 1316, type: !210)
!4709 = !DILocation(line: 1316, column: 54, scope: !4705)
!4710 = !DILocalVariable(name: "__mptr", scope: !4711, file: !3, line: 1318, type: !209)
!4711 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 1318, column: 9)
!4712 = !DILocation(line: 1318, column: 9, scope: !4711)
!4713 = !DILocation(line: 1318, column: 9, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 1318, column: 9)
!4715 = !DILocation(line: 1318, column: 2, scope: !4705)
!4716 = distinct !DISubprogram(name: "__pci_msix_desc_mask_irq", scope: !3, file: !3, line: 210, type: !4717, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!4717 = !DISubroutineType(types: !4718)
!4718 = !{!426, !210, !426}
!4719 = !DILocalVariable(name: "desc", arg: 1, scope: !4716, file: !3, line: 210, type: !210)
!4720 = !DILocation(line: 210, column: 47, scope: !4716)
!4721 = !DILocalVariable(name: "flag", arg: 2, scope: !4716, file: !3, line: 210, type: !426)
!4722 = !DILocation(line: 210, column: 57, scope: !4716)
!4723 = !DILocalVariable(name: "mask_bits", scope: !4716, file: !3, line: 212, type: !426)
!4724 = !DILocation(line: 212, column: 6, scope: !4716)
!4725 = !DILocation(line: 212, column: 18, scope: !4716)
!4726 = !DILocation(line: 212, column: 24, scope: !4716)
!4727 = !DILocalVariable(name: "desc_addr", scope: !4716, file: !3, line: 213, type: !209)
!4728 = !DILocation(line: 213, column: 16, scope: !4716)
!4729 = !DILocation(line: 215, column: 6, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 215, column: 6)
!4731 = !DILocation(line: 215, column: 6, scope: !4716)
!4732 = !DILocation(line: 216, column: 3, scope: !4730)
!4733 = !DILocation(line: 218, column: 33, scope: !4716)
!4734 = !DILocation(line: 218, column: 14, scope: !4716)
!4735 = !DILocation(line: 218, column: 12, scope: !4716)
!4736 = !DILocation(line: 219, column: 7, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 219, column: 6)
!4738 = !DILocation(line: 219, column: 6, scope: !4716)
!4739 = !DILocation(line: 220, column: 3, scope: !4737)
!4740 = !DILocation(line: 222, column: 12, scope: !4716)
!4741 = !DILocation(line: 223, column: 6, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 223, column: 6)
!4743 = !DILocation(line: 223, column: 11, scope: !4742)
!4744 = !DILocation(line: 223, column: 6, scope: !4716)
!4745 = !DILocation(line: 224, column: 13, scope: !4742)
!4746 = !DILocation(line: 224, column: 3, scope: !4742)
!4747 = !DILocation(line: 226, column: 9, scope: !4716)
!4748 = !DILocation(line: 226, column: 20, scope: !4716)
!4749 = !DILocation(line: 226, column: 30, scope: !4716)
!4750 = !DILocation(line: 226, column: 2, scope: !4716)
!4751 = !DILocation(line: 228, column: 9, scope: !4716)
!4752 = !DILocation(line: 228, column: 2, scope: !4716)
!4753 = !DILocation(line: 229, column: 1, scope: !4716)
!4754 = distinct !DISubprogram(name: "pci_msix_desc_addr", scope: !3, file: !3, line: 194, type: !4755, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{!209, !210}
!4757 = !DILocalVariable(name: "desc", arg: 1, scope: !4754, file: !3, line: 194, type: !210)
!4758 = !DILocation(line: 194, column: 58, scope: !4754)
!4759 = !DILocation(line: 196, column: 6, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 196, column: 6)
!4761 = !DILocation(line: 196, column: 12, scope: !4760)
!4762 = !DILocation(line: 196, column: 23, scope: !4760)
!4763 = !DILocation(line: 196, column: 6, scope: !4754)
!4764 = !DILocation(line: 197, column: 3, scope: !4760)
!4765 = !DILocation(line: 199, column: 9, scope: !4754)
!4766 = !DILocation(line: 199, column: 15, scope: !4754)
!4767 = !DILocation(line: 200, column: 3, scope: !4754)
!4768 = !DILocation(line: 200, column: 9, scope: !4754)
!4769 = !DILocation(line: 200, column: 20, scope: !4754)
!4770 = !DILocation(line: 200, column: 29, scope: !4754)
!4771 = !DILocation(line: 199, column: 25, scope: !4754)
!4772 = !DILocation(line: 199, column: 2, scope: !4754)
!4773 = !DILocation(line: 201, column: 1, scope: !4754)
!4774 = distinct !DISubprogram(name: "writel", scope: !4775, file: !4775, line: 67, type: !4776, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!4775 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!4776 = !DISubroutineType(types: !4777)
!4777 = !{null, !7, !4778}
!4778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4779, size: 64)
!4779 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4780 = !DILocalVariable(name: "val", arg: 1, scope: !4774, file: !4775, line: 67, type: !7)
!4781 = !DILocation(line: 67, column: 1, scope: !4774)
!4782 = !DILocalVariable(name: "addr", arg: 2, scope: !4774, file: !4775, line: 67, type: !4778)
!4783 = !{i32 -2142612568}
!4784 = distinct !DISubprogram(name: "pci_msi_mask_irq", scope: !3, file: !3, line: 253, type: !3862, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!4785 = !DILocalVariable(name: "data", arg: 1, scope: !4784, file: !3, line: 253, type: !3834)
!4786 = !DILocation(line: 253, column: 40, scope: !4784)
!4787 = !DILocation(line: 255, column: 19, scope: !4784)
!4788 = !DILocation(line: 255, column: 2, scope: !4784)
!4789 = !DILocation(line: 256, column: 1, scope: !4784)
!4790 = distinct !DISubprogram(name: "msi_set_mask_bit", scope: !3, file: !3, line: 236, type: !4791, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!4791 = !DISubroutineType(types: !4792)
!4792 = !{null, !3834, !426}
!4793 = !DILocalVariable(name: "data", arg: 1, scope: !4790, file: !3, line: 236, type: !3834)
!4794 = !DILocation(line: 236, column: 47, scope: !4790)
!4795 = !DILocalVariable(name: "flag", arg: 2, scope: !4790, file: !3, line: 236, type: !426)
!4796 = !DILocation(line: 236, column: 57, scope: !4790)
!4797 = !DILocalVariable(name: "desc", scope: !4790, file: !3, line: 238, type: !210)
!4798 = !DILocation(line: 238, column: 19, scope: !4790)
!4799 = !DILocation(line: 238, column: 48, scope: !4790)
!4800 = !DILocation(line: 238, column: 26, scope: !4790)
!4801 = !DILocation(line: 240, column: 6, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 240, column: 6)
!4803 = !DILocation(line: 240, column: 12, scope: !4802)
!4804 = !DILocation(line: 240, column: 23, scope: !4802)
!4805 = !DILocation(line: 240, column: 6, scope: !4790)
!4806 = !DILocation(line: 241, column: 17, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4802, file: !3, line: 240, column: 32)
!4808 = !DILocation(line: 241, column: 23, scope: !4807)
!4809 = !DILocation(line: 241, column: 3, scope: !4807)
!4810 = !DILocation(line: 242, column: 9, scope: !4807)
!4811 = !DILocation(line: 242, column: 15, scope: !4807)
!4812 = !DILocation(line: 242, column: 3, scope: !4807)
!4813 = !DILocation(line: 243, column: 2, scope: !4807)
!4814 = !DILocalVariable(name: "offset", scope: !4815, file: !3, line: 244, type: !7)
!4815 = distinct !DILexicalBlock(scope: !4802, file: !3, line: 243, column: 9)
!4816 = !DILocation(line: 244, column: 12, scope: !4815)
!4817 = !DILocation(line: 244, column: 21, scope: !4815)
!4818 = !DILocation(line: 244, column: 27, scope: !4815)
!4819 = !DILocation(line: 244, column: 33, scope: !4815)
!4820 = !DILocation(line: 244, column: 39, scope: !4815)
!4821 = !DILocation(line: 244, column: 31, scope: !4815)
!4822 = !DILocation(line: 245, column: 16, scope: !4815)
!4823 = !DILocation(line: 245, column: 27, scope: !4815)
!4824 = !DILocation(line: 245, column: 24, scope: !4815)
!4825 = !DILocation(line: 245, column: 35, scope: !4815)
!4826 = !DILocation(line: 245, column: 43, scope: !4815)
!4827 = !DILocation(line: 245, column: 40, scope: !4815)
!4828 = !DILocation(line: 245, column: 3, scope: !4815)
!4829 = !DILocation(line: 247, column: 1, scope: !4790)
!4830 = distinct !DISubprogram(name: "pci_msi_unmask_irq", scope: !3, file: !3, line: 263, type: !3862, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!4831 = !DILocalVariable(name: "data", arg: 1, scope: !4830, file: !3, line: 263, type: !3834)
!4832 = !DILocation(line: 263, column: 42, scope: !4830)
!4833 = !DILocation(line: 265, column: 19, scope: !4830)
!4834 = !DILocation(line: 265, column: 2, scope: !4830)
!4835 = !DILocation(line: 266, column: 1, scope: !4830)
!4836 = distinct !DISubprogram(name: "default_restore_msi_irq", scope: !3, file: !3, line: 137, type: !4837, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!4837 = !DISubroutineType(types: !4838)
!4838 = !{null, !4208, !269}
!4839 = !DILocalVariable(name: "dev", arg: 1, scope: !4836, file: !3, line: 137, type: !4208)
!4840 = !DILocation(line: 137, column: 53, scope: !4836)
!4841 = !DILocalVariable(name: "irq", arg: 2, scope: !4836, file: !3, line: 137, type: !269)
!4842 = !DILocation(line: 137, column: 62, scope: !4836)
!4843 = !DILocalVariable(name: "entry", scope: !4836, file: !3, line: 139, type: !210)
!4844 = !DILocation(line: 139, column: 19, scope: !4836)
!4845 = !DILocation(line: 141, column: 8, scope: !4836)
!4846 = !DILocation(line: 142, column: 6, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 142, column: 6)
!4848 = !DILocation(line: 142, column: 11, scope: !4847)
!4849 = !DILocation(line: 142, column: 6, scope: !4836)
!4850 = !DILocalVariable(name: "__mptr", scope: !4851, file: !3, line: 143, type: !209)
!4851 = distinct !DILexicalBlock(scope: !4852, file: !3, line: 143, column: 3)
!4852 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 143, column: 3)
!4853 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 142, column: 25)
!4854 = !DILocation(line: 143, column: 3, scope: !4851)
!4855 = !DILocation(line: 143, column: 3, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 143, column: 3)
!4857 = !DILocation(line: 143, column: 3, scope: !4852)
!4858 = !DILocation(line: 143, column: 3, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4852, file: !3, line: 143, column: 3)
!4860 = !DILocation(line: 144, column: 8, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 144, column: 8)
!4862 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 143, column: 38)
!4863 = !DILocation(line: 144, column: 15, scope: !4861)
!4864 = !DILocation(line: 144, column: 22, scope: !4861)
!4865 = !DILocation(line: 144, column: 12, scope: !4861)
!4866 = !DILocation(line: 144, column: 8, scope: !4862)
!4867 = !DILocation(line: 145, column: 5, scope: !4861)
!4868 = !DILocation(line: 146, column: 3, scope: !4862)
!4869 = !DILocalVariable(name: "__mptr", scope: !4870, file: !3, line: 143, type: !209)
!4870 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 143, column: 3)
!4871 = !DILocation(line: 143, column: 3, scope: !4870)
!4872 = !DILocation(line: 143, column: 3, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 143, column: 3)
!4874 = distinct !{!4874, !4857, !4875}
!4875 = !DILocation(line: 146, column: 3, scope: !4852)
!4876 = !DILocation(line: 147, column: 2, scope: !4853)
!4877 = !DILocation(line: 147, column: 13, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 147, column: 13)
!4879 = !DILocation(line: 147, column: 18, scope: !4878)
!4880 = !DILocation(line: 147, column: 13, scope: !4847)
!4881 = !DILocation(line: 148, column: 28, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 147, column: 32)
!4883 = !DILocation(line: 148, column: 11, scope: !4882)
!4884 = !DILocation(line: 148, column: 9, scope: !4882)
!4885 = !DILocation(line: 149, column: 2, scope: !4882)
!4886 = !DILocation(line: 151, column: 6, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 151, column: 6)
!4888 = !DILocation(line: 151, column: 6, scope: !4836)
!4889 = !DILocation(line: 152, column: 23, scope: !4887)
!4890 = !DILocation(line: 152, column: 31, scope: !4887)
!4891 = !DILocation(line: 152, column: 38, scope: !4887)
!4892 = !DILocation(line: 152, column: 3, scope: !4887)
!4893 = !DILocation(line: 153, column: 1, scope: !4836)
!4894 = distinct !DISubprogram(name: "__pci_read_msi_msg", scope: !3, file: !3, line: 277, type: !4895, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{null, !210, !3904}
!4897 = !DILocalVariable(name: "entry", arg: 1, scope: !4894, file: !3, line: 277, type: !210)
!4898 = !DILocation(line: 277, column: 42, scope: !4894)
!4899 = !DILocalVariable(name: "msg", arg: 2, scope: !4894, file: !3, line: 277, type: !3904)
!4900 = !DILocation(line: 277, column: 65, scope: !4894)
!4901 = !DILocalVariable(name: "dev", scope: !4894, file: !3, line: 279, type: !4208)
!4902 = !DILocation(line: 279, column: 18, scope: !4894)
!4903 = !DILocation(line: 279, column: 44, scope: !4894)
!4904 = !DILocation(line: 279, column: 24, scope: !4894)
!4905 = !DILocation(line: 281, column: 2, scope: !4894)
!4906 = !DILocation(line: 281, column: 2, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4908, file: !3, line: 281, column: 2)
!4908 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 281, column: 2)
!4909 = !DILocation(line: 281, column: 2, scope: !4908)
!4910 = !DILocation(line: 281, column: 2, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 281, column: 2)
!4912 = !DILocation(line: 281, column: 2, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 281, column: 2)
!4914 = !DILocation(line: 281, column: 2, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 281, column: 2)
!4916 = !{i32 -2140967967, i32 -2140967938, i32 -2140967892, i32 -2140967834, i32 -2140967780, i32 -2140967726, i32 -2140967671, i32 -2140967640}
!4917 = !DILocation(line: 281, column: 2, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 281, column: 2)
!4919 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 281, column: 2)
!4920 = !{i32 -2140967200, i32 -2140967193, i32 -2140967139, i32 -2140967108, i32 -2140967078}
!4921 = !DILocation(line: 281, column: 2, scope: !4919)
!4922 = !DILocation(line: 283, column: 6, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 283, column: 6)
!4924 = !DILocation(line: 283, column: 13, scope: !4923)
!4925 = !DILocation(line: 283, column: 24, scope: !4923)
!4926 = !DILocation(line: 283, column: 6, scope: !4894)
!4927 = !DILocalVariable(name: "base", scope: !4928, file: !3, line: 284, type: !209)
!4928 = distinct !DILexicalBlock(scope: !4923, file: !3, line: 283, column: 33)
!4929 = !DILocation(line: 284, column: 17, scope: !4928)
!4930 = !DILocation(line: 284, column: 43, scope: !4928)
!4931 = !DILocation(line: 284, column: 24, scope: !4928)
!4932 = !DILocation(line: 286, column: 8, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 286, column: 7)
!4934 = !DILocation(line: 286, column: 7, scope: !4928)
!4935 = !DILocalVariable(name: "__ret_warn_on", scope: !4936, file: !3, line: 287, type: !269)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 287, column: 4)
!4937 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 286, column: 14)
!4938 = !DILocation(line: 287, column: 4, scope: !4936)
!4939 = !DILocation(line: 287, column: 4, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 287, column: 4)
!4941 = !DILocation(line: 287, column: 4, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 287, column: 4)
!4943 = !DILocation(line: 287, column: 4, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 287, column: 4)
!4945 = !DILocation(line: 287, column: 4, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 287, column: 4)
!4947 = !{i32 -2140966562, i32 -2140966533, i32 -2140966487, i32 -2140966429, i32 -2140966375, i32 -2140966321, i32 -2140966266, i32 -2140966235}
!4948 = !DILocation(line: 287, column: 4, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 287, column: 4)
!4950 = !{i32 -2140965836, i32 -2140965829, i32 -2140965777, i32 -2140965746, i32 -2140965716}
!4951 = !DILocation(line: 287, column: 4, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 287, column: 4)
!4953 = !DILocation(line: 288, column: 4, scope: !4937)
!4954 = !DILocation(line: 291, column: 27, scope: !4928)
!4955 = !DILocation(line: 291, column: 32, scope: !4928)
!4956 = !DILocation(line: 291, column: 21, scope: !4928)
!4957 = !DILocation(line: 291, column: 3, scope: !4928)
!4958 = !DILocation(line: 291, column: 8, scope: !4928)
!4959 = !DILocation(line: 291, column: 19, scope: !4928)
!4960 = !DILocation(line: 292, column: 27, scope: !4928)
!4961 = !DILocation(line: 292, column: 32, scope: !4928)
!4962 = !DILocation(line: 292, column: 21, scope: !4928)
!4963 = !DILocation(line: 292, column: 3, scope: !4928)
!4964 = !DILocation(line: 292, column: 8, scope: !4928)
!4965 = !DILocation(line: 292, column: 19, scope: !4928)
!4966 = !DILocation(line: 293, column: 21, scope: !4928)
!4967 = !DILocation(line: 293, column: 26, scope: !4928)
!4968 = !DILocation(line: 293, column: 15, scope: !4928)
!4969 = !DILocation(line: 293, column: 3, scope: !4928)
!4970 = !DILocation(line: 293, column: 8, scope: !4928)
!4971 = !DILocation(line: 293, column: 13, scope: !4928)
!4972 = !DILocation(line: 294, column: 2, scope: !4928)
!4973 = !DILocalVariable(name: "pos", scope: !4974, file: !3, line: 295, type: !269)
!4974 = distinct !DILexicalBlock(scope: !4923, file: !3, line: 294, column: 9)
!4975 = !DILocation(line: 295, column: 7, scope: !4974)
!4976 = !DILocation(line: 295, column: 13, scope: !4974)
!4977 = !DILocation(line: 295, column: 18, scope: !4974)
!4978 = !DILocalVariable(name: "data", scope: !4974, file: !3, line: 296, type: !873)
!4979 = !DILocation(line: 296, column: 7, scope: !4974)
!4980 = !DILocation(line: 298, column: 25, scope: !4974)
!4981 = !DILocation(line: 298, column: 30, scope: !4974)
!4982 = !DILocation(line: 298, column: 34, scope: !4974)
!4983 = !DILocation(line: 299, column: 12, scope: !4974)
!4984 = !DILocation(line: 299, column: 17, scope: !4974)
!4985 = !DILocation(line: 298, column: 3, scope: !4974)
!4986 = !DILocation(line: 300, column: 7, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 300, column: 7)
!4988 = !DILocation(line: 300, column: 14, scope: !4987)
!4989 = !DILocation(line: 300, column: 25, scope: !4987)
!4990 = !DILocation(line: 300, column: 7, scope: !4974)
!4991 = !DILocation(line: 301, column: 26, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 300, column: 32)
!4993 = !DILocation(line: 301, column: 31, scope: !4992)
!4994 = !DILocation(line: 301, column: 35, scope: !4992)
!4995 = !DILocation(line: 302, column: 13, scope: !4992)
!4996 = !DILocation(line: 302, column: 18, scope: !4992)
!4997 = !DILocation(line: 301, column: 4, scope: !4992)
!4998 = !DILocation(line: 303, column: 25, scope: !4992)
!4999 = !DILocation(line: 303, column: 30, scope: !4992)
!5000 = !DILocation(line: 303, column: 34, scope: !4992)
!5001 = !DILocation(line: 303, column: 4, scope: !4992)
!5002 = !DILocation(line: 304, column: 3, scope: !4992)
!5003 = !DILocation(line: 305, column: 4, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 304, column: 10)
!5005 = !DILocation(line: 305, column: 9, scope: !5004)
!5006 = !DILocation(line: 305, column: 20, scope: !5004)
!5007 = !DILocation(line: 306, column: 25, scope: !5004)
!5008 = !DILocation(line: 306, column: 30, scope: !5004)
!5009 = !DILocation(line: 306, column: 34, scope: !5004)
!5010 = !DILocation(line: 306, column: 4, scope: !5004)
!5011 = !DILocation(line: 308, column: 15, scope: !4974)
!5012 = !DILocation(line: 308, column: 3, scope: !4974)
!5013 = !DILocation(line: 308, column: 8, scope: !4974)
!5014 = !DILocation(line: 308, column: 13, scope: !4974)
!5015 = !DILocation(line: 310, column: 1, scope: !4894)
!5016 = distinct !DISubprogram(name: "readl", scope: !4775, file: !4775, line: 59, type: !5017, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5017 = !DISubroutineType(types: !5018)
!5018 = !{!7, !5019}
!5019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5020, size: 64)
!5020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4779)
!5021 = !DILocalVariable(name: "addr", arg: 1, scope: !5016, file: !4775, line: 59, type: !5019)
!5022 = !DILocation(line: 59, column: 1, scope: !5016)
!5023 = !DILocalVariable(name: "ret", scope: !5016, file: !4775, line: 59, type: !7)
!5024 = !{i32 -2142614961}
!5025 = distinct !DISubprogram(name: "__pci_write_msi_msg", scope: !3, file: !3, line: 312, type: !4895, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5026 = !DILocalVariable(name: "entry", arg: 1, scope: !5025, file: !3, line: 312, type: !210)
!5027 = !DILocation(line: 312, column: 43, scope: !5025)
!5028 = !DILocalVariable(name: "msg", arg: 2, scope: !5025, file: !3, line: 312, type: !3904)
!5029 = !DILocation(line: 312, column: 66, scope: !5025)
!5030 = !DILocalVariable(name: "dev", scope: !5025, file: !3, line: 314, type: !4208)
!5031 = !DILocation(line: 314, column: 18, scope: !5025)
!5032 = !DILocation(line: 314, column: 44, scope: !5025)
!5033 = !DILocation(line: 314, column: 24, scope: !5025)
!5034 = !DILocation(line: 316, column: 6, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5025, file: !3, line: 316, column: 6)
!5036 = !DILocation(line: 316, column: 11, scope: !5035)
!5037 = !DILocation(line: 316, column: 25, scope: !5035)
!5038 = !DILocation(line: 316, column: 35, scope: !5035)
!5039 = !DILocation(line: 316, column: 62, scope: !5035)
!5040 = !DILocation(line: 316, column: 38, scope: !5035)
!5041 = !DILocation(line: 316, column: 6, scope: !5025)
!5042 = !DILocation(line: 318, column: 2, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 316, column: 68)
!5044 = !DILocation(line: 318, column: 13, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 318, column: 13)
!5046 = !DILocation(line: 318, column: 20, scope: !5045)
!5047 = !DILocation(line: 318, column: 31, scope: !5045)
!5048 = !DILocation(line: 318, column: 13, scope: !5035)
!5049 = !DILocalVariable(name: "base", scope: !5050, file: !3, line: 319, type: !209)
!5050 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 318, column: 40)
!5051 = !DILocation(line: 319, column: 17, scope: !5050)
!5052 = !DILocation(line: 319, column: 43, scope: !5050)
!5053 = !DILocation(line: 319, column: 24, scope: !5050)
!5054 = !DILocation(line: 321, column: 8, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5050, file: !3, line: 321, column: 7)
!5056 = !DILocation(line: 321, column: 7, scope: !5050)
!5057 = !DILocation(line: 322, column: 4, scope: !5055)
!5058 = !DILocation(line: 324, column: 10, scope: !5050)
!5059 = !DILocation(line: 324, column: 15, scope: !5050)
!5060 = !DILocation(line: 324, column: 27, scope: !5050)
!5061 = !DILocation(line: 324, column: 32, scope: !5050)
!5062 = !DILocation(line: 324, column: 3, scope: !5050)
!5063 = !DILocation(line: 325, column: 10, scope: !5050)
!5064 = !DILocation(line: 325, column: 15, scope: !5050)
!5065 = !DILocation(line: 325, column: 27, scope: !5050)
!5066 = !DILocation(line: 325, column: 32, scope: !5050)
!5067 = !DILocation(line: 325, column: 3, scope: !5050)
!5068 = !DILocation(line: 326, column: 10, scope: !5050)
!5069 = !DILocation(line: 326, column: 15, scope: !5050)
!5070 = !DILocation(line: 326, column: 21, scope: !5050)
!5071 = !DILocation(line: 326, column: 26, scope: !5050)
!5072 = !DILocation(line: 326, column: 3, scope: !5050)
!5073 = !DILocation(line: 327, column: 2, scope: !5050)
!5074 = !DILocalVariable(name: "pos", scope: !5075, file: !3, line: 328, type: !269)
!5075 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 327, column: 9)
!5076 = !DILocation(line: 328, column: 7, scope: !5075)
!5077 = !DILocation(line: 328, column: 13, scope: !5075)
!5078 = !DILocation(line: 328, column: 18, scope: !5075)
!5079 = !DILocalVariable(name: "msgctl", scope: !5075, file: !3, line: 329, type: !873)
!5080 = !DILocation(line: 329, column: 7, scope: !5075)
!5081 = !DILocation(line: 331, column: 24, scope: !5075)
!5082 = !DILocation(line: 331, column: 29, scope: !5075)
!5083 = !DILocation(line: 331, column: 33, scope: !5075)
!5084 = !DILocation(line: 331, column: 3, scope: !5075)
!5085 = !DILocation(line: 332, column: 10, scope: !5075)
!5086 = !DILocation(line: 333, column: 13, scope: !5075)
!5087 = !DILocation(line: 333, column: 20, scope: !5075)
!5088 = !DILocation(line: 333, column: 31, scope: !5075)
!5089 = !DILocation(line: 333, column: 40, scope: !5075)
!5090 = !DILocation(line: 333, column: 10, scope: !5075)
!5091 = !DILocation(line: 334, column: 25, scope: !5075)
!5092 = !DILocation(line: 334, column: 30, scope: !5075)
!5093 = !DILocation(line: 334, column: 34, scope: !5075)
!5094 = !DILocation(line: 334, column: 51, scope: !5075)
!5095 = !DILocation(line: 334, column: 3, scope: !5075)
!5096 = !DILocation(line: 336, column: 26, scope: !5075)
!5097 = !DILocation(line: 336, column: 31, scope: !5075)
!5098 = !DILocation(line: 336, column: 35, scope: !5075)
!5099 = !DILocation(line: 337, column: 12, scope: !5075)
!5100 = !DILocation(line: 337, column: 17, scope: !5075)
!5101 = !DILocation(line: 336, column: 3, scope: !5075)
!5102 = !DILocation(line: 338, column: 7, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 338, column: 7)
!5104 = !DILocation(line: 338, column: 14, scope: !5103)
!5105 = !DILocation(line: 338, column: 25, scope: !5103)
!5106 = !DILocation(line: 338, column: 7, scope: !5075)
!5107 = !DILocation(line: 339, column: 27, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 338, column: 32)
!5109 = !DILocation(line: 339, column: 32, scope: !5108)
!5110 = !DILocation(line: 339, column: 36, scope: !5108)
!5111 = !DILocation(line: 340, column: 13, scope: !5108)
!5112 = !DILocation(line: 340, column: 18, scope: !5108)
!5113 = !DILocation(line: 339, column: 4, scope: !5108)
!5114 = !DILocation(line: 341, column: 26, scope: !5108)
!5115 = !DILocation(line: 341, column: 31, scope: !5108)
!5116 = !DILocation(line: 341, column: 35, scope: !5108)
!5117 = !DILocation(line: 342, column: 12, scope: !5108)
!5118 = !DILocation(line: 342, column: 17, scope: !5108)
!5119 = !DILocation(line: 341, column: 4, scope: !5108)
!5120 = !DILocation(line: 343, column: 3, scope: !5108)
!5121 = !DILocation(line: 344, column: 26, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 343, column: 10)
!5123 = !DILocation(line: 344, column: 31, scope: !5122)
!5124 = !DILocation(line: 344, column: 35, scope: !5122)
!5125 = !DILocation(line: 345, column: 12, scope: !5122)
!5126 = !DILocation(line: 345, column: 17, scope: !5122)
!5127 = !DILocation(line: 344, column: 4, scope: !5122)
!5128 = !DILocation(line: 316, column: 65, scope: !5035)
!5129 = !DILabel(scope: !5025, name: "skip", file: !3, line: 349)
!5130 = !DILocation(line: 349, column: 1, scope: !5025)
!5131 = !DILocation(line: 350, column: 2, scope: !5025)
!5132 = !DILocation(line: 350, column: 9, scope: !5025)
!5133 = !DILocation(line: 350, column: 16, scope: !5025)
!5134 = !DILocation(line: 350, column: 15, scope: !5025)
!5135 = !DILocation(line: 352, column: 6, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5025, file: !3, line: 352, column: 6)
!5137 = !DILocation(line: 352, column: 13, scope: !5136)
!5138 = !DILocation(line: 352, column: 6, scope: !5025)
!5139 = !DILocation(line: 353, column: 3, scope: !5136)
!5140 = !DILocation(line: 353, column: 10, scope: !5136)
!5141 = !DILocation(line: 353, column: 24, scope: !5136)
!5142 = !DILocation(line: 353, column: 31, scope: !5136)
!5143 = !DILocation(line: 353, column: 38, scope: !5136)
!5144 = !DILocation(line: 355, column: 1, scope: !5025)
!5145 = distinct !DISubprogram(name: "pci_dev_is_disconnected", scope: !4489, file: !4489, line: 405, type: !5146, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5146 = !DISubroutineType(types: !5147)
!5147 = !{!501, !5148}
!5148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5149, size: 64)
!5149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4209)
!5150 = !DILocalVariable(name: "dev", arg: 1, scope: !5145, file: !4489, line: 405, type: !5148)
!5151 = !DILocation(line: 405, column: 66, scope: !5145)
!5152 = !DILocation(line: 407, column: 9, scope: !5145)
!5153 = !DILocation(line: 407, column: 14, scope: !5145)
!5154 = !DILocation(line: 407, column: 26, scope: !5145)
!5155 = !DILocation(line: 407, column: 2, scope: !5145)
!5156 = distinct !DISubprogram(name: "pci_write_msi_msg", scope: !3, file: !3, line: 357, type: !5157, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{null, !7, !3904}
!5159 = !DILocalVariable(name: "irq", arg: 1, scope: !5156, file: !3, line: 357, type: !7)
!5160 = !DILocation(line: 357, column: 37, scope: !5156)
!5161 = !DILocalVariable(name: "msg", arg: 2, scope: !5156, file: !3, line: 357, type: !3904)
!5162 = !DILocation(line: 357, column: 58, scope: !5156)
!5163 = !DILocalVariable(name: "entry", scope: !5156, file: !3, line: 359, type: !210)
!5164 = !DILocation(line: 359, column: 19, scope: !5156)
!5165 = !DILocation(line: 359, column: 44, scope: !5156)
!5166 = !DILocation(line: 359, column: 27, scope: !5156)
!5167 = !DILocation(line: 361, column: 22, scope: !5156)
!5168 = !DILocation(line: 361, column: 29, scope: !5156)
!5169 = !DILocation(line: 361, column: 2, scope: !5156)
!5170 = !DILocation(line: 362, column: 1, scope: !5156)
!5171 = distinct !DISubprogram(name: "irq_get_msi_desc", scope: !115, file: !115, line: 844, type: !5172, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5172 = !DISubroutineType(types: !5173)
!5173 = !{!210, !7}
!5174 = !DILocalVariable(name: "irq", arg: 1, scope: !5171, file: !115, line: 844, type: !7)
!5175 = !DILocation(line: 844, column: 62, scope: !5171)
!5176 = !DILocalVariable(name: "d", scope: !5171, file: !115, line: 846, type: !3834)
!5177 = !DILocation(line: 846, column: 19, scope: !5171)
!5178 = !DILocation(line: 846, column: 40, scope: !5171)
!5179 = !DILocation(line: 846, column: 23, scope: !5171)
!5180 = !DILocation(line: 847, column: 9, scope: !5171)
!5181 = !DILocation(line: 847, column: 13, scope: !5171)
!5182 = !DILocation(line: 847, column: 16, scope: !5171)
!5183 = !DILocation(line: 847, column: 24, scope: !5171)
!5184 = !DILocation(line: 847, column: 2, scope: !5171)
!5185 = distinct !DISubprogram(name: "pci_restore_msi_state", scope: !3, file: !3, line: 455, type: !4355, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5186 = !DILocalVariable(name: "dev", arg: 1, scope: !5185, file: !3, line: 455, type: !4208)
!5187 = !DILocation(line: 455, column: 44, scope: !5185)
!5188 = !DILocation(line: 457, column: 26, scope: !5185)
!5189 = !DILocation(line: 457, column: 2, scope: !5185)
!5190 = !DILocation(line: 458, column: 27, scope: !5185)
!5191 = !DILocation(line: 458, column: 2, scope: !5185)
!5192 = !DILocation(line: 459, column: 1, scope: !5185)
!5193 = distinct !DISubprogram(name: "__pci_restore_msi_state", scope: !3, file: !3, line: 413, type: !4355, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5194 = !DILocalVariable(name: "dev", arg: 1, scope: !5193, file: !3, line: 413, type: !4208)
!5195 = !DILocation(line: 413, column: 53, scope: !5193)
!5196 = !DILocalVariable(name: "control", scope: !5193, file: !3, line: 415, type: !873)
!5197 = !DILocation(line: 415, column: 6, scope: !5193)
!5198 = !DILocalVariable(name: "entry", scope: !5193, file: !3, line: 416, type: !210)
!5199 = !DILocation(line: 416, column: 19, scope: !5193)
!5200 = !DILocation(line: 418, column: 7, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 418, column: 6)
!5202 = !DILocation(line: 418, column: 12, scope: !5201)
!5203 = !DILocation(line: 418, column: 6, scope: !5193)
!5204 = !DILocation(line: 419, column: 3, scope: !5201)
!5205 = !DILocation(line: 421, column: 27, scope: !5193)
!5206 = !DILocation(line: 421, column: 32, scope: !5193)
!5207 = !DILocation(line: 421, column: 10, scope: !5193)
!5208 = !DILocation(line: 421, column: 8, scope: !5193)
!5209 = !DILocation(line: 423, column: 19, scope: !5193)
!5210 = !DILocation(line: 423, column: 2, scope: !5193)
!5211 = !DILocation(line: 424, column: 21, scope: !5193)
!5212 = !DILocation(line: 424, column: 2, scope: !5193)
!5213 = !DILocation(line: 425, column: 24, scope: !5193)
!5214 = !DILocation(line: 425, column: 2, scope: !5193)
!5215 = !DILocation(line: 427, column: 23, scope: !5193)
!5216 = !DILocation(line: 427, column: 28, scope: !5193)
!5217 = !DILocation(line: 427, column: 33, scope: !5193)
!5218 = !DILocation(line: 427, column: 41, scope: !5193)
!5219 = !DILocation(line: 427, column: 2, scope: !5193)
!5220 = !DILocation(line: 428, column: 15, scope: !5193)
!5221 = !DILocation(line: 428, column: 31, scope: !5193)
!5222 = !DILocation(line: 428, column: 38, scope: !5193)
!5223 = !DILocation(line: 428, column: 49, scope: !5193)
!5224 = !DILocation(line: 428, column: 22, scope: !5193)
!5225 = !DILocation(line: 429, column: 8, scope: !5193)
!5226 = !DILocation(line: 429, column: 15, scope: !5193)
!5227 = !DILocation(line: 428, column: 2, scope: !5193)
!5228 = !DILocation(line: 430, column: 10, scope: !5193)
!5229 = !DILocation(line: 431, column: 14, scope: !5193)
!5230 = !DILocation(line: 431, column: 21, scope: !5193)
!5231 = !DILocation(line: 431, column: 32, scope: !5193)
!5232 = !DILocation(line: 431, column: 41, scope: !5193)
!5233 = !DILocation(line: 431, column: 47, scope: !5193)
!5234 = !DILocation(line: 431, column: 10, scope: !5193)
!5235 = !DILocation(line: 432, column: 24, scope: !5193)
!5236 = !DILocation(line: 432, column: 29, scope: !5193)
!5237 = !DILocation(line: 432, column: 34, scope: !5193)
!5238 = !DILocation(line: 432, column: 42, scope: !5193)
!5239 = !DILocation(line: 432, column: 59, scope: !5193)
!5240 = !DILocation(line: 432, column: 2, scope: !5193)
!5241 = !DILocation(line: 433, column: 1, scope: !5193)
!5242 = distinct !DISubprogram(name: "__pci_restore_msix_state", scope: !3, file: !3, line: 435, type: !4355, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5243 = !DILocalVariable(name: "dev", arg: 1, scope: !5242, file: !3, line: 435, type: !4208)
!5244 = !DILocation(line: 435, column: 54, scope: !5242)
!5245 = !DILocalVariable(name: "entry", scope: !5242, file: !3, line: 437, type: !210)
!5246 = !DILocation(line: 437, column: 19, scope: !5242)
!5247 = !DILocation(line: 439, column: 7, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 439, column: 6)
!5249 = !DILocation(line: 439, column: 12, scope: !5248)
!5250 = !DILocation(line: 439, column: 6, scope: !5242)
!5251 = !DILocation(line: 440, column: 3, scope: !5248)
!5252 = !DILocation(line: 441, column: 2, scope: !5242)
!5253 = !DILocation(line: 441, column: 2, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 441, column: 2)
!5255 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 441, column: 2)
!5256 = !DILocation(line: 441, column: 2, scope: !5255)
!5257 = !DILocation(line: 441, column: 2, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5254, file: !3, line: 441, column: 2)
!5259 = !DILocation(line: 441, column: 2, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 441, column: 2)
!5261 = !DILocation(line: 441, column: 2, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 441, column: 2)
!5263 = !{i32 -2140951767, i32 -2140951738, i32 -2140951692, i32 -2140951634, i32 -2140951580, i32 -2140951526, i32 -2140951471, i32 -2140951440}
!5264 = !DILocation(line: 441, column: 2, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 441, column: 2)
!5266 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 441, column: 2)
!5267 = !{i32 -2140951000, i32 -2140950993, i32 -2140950939, i32 -2140950908, i32 -2140950878}
!5268 = !DILocation(line: 441, column: 2, scope: !5266)
!5269 = !DILocation(line: 444, column: 19, scope: !5242)
!5270 = !DILocation(line: 444, column: 2, scope: !5242)
!5271 = !DILocation(line: 445, column: 30, scope: !5242)
!5272 = !DILocation(line: 445, column: 2, scope: !5242)
!5273 = !DILocation(line: 448, column: 24, scope: !5242)
!5274 = !DILocation(line: 448, column: 2, scope: !5242)
!5275 = !DILocalVariable(name: "__mptr", scope: !5276, file: !3, line: 449, type: !209)
!5276 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 449, column: 2)
!5277 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 449, column: 2)
!5278 = !DILocation(line: 449, column: 2, scope: !5276)
!5279 = !DILocation(line: 449, column: 2, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 449, column: 2)
!5281 = !DILocation(line: 449, column: 2, scope: !5277)
!5282 = !DILocation(line: 449, column: 2, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 449, column: 2)
!5284 = !DILocation(line: 450, column: 17, scope: !5283)
!5285 = !DILocation(line: 450, column: 24, scope: !5283)
!5286 = !DILocation(line: 450, column: 31, scope: !5283)
!5287 = !DILocation(line: 450, column: 3, scope: !5283)
!5288 = !DILocalVariable(name: "__mptr", scope: !5289, file: !3, line: 449, type: !209)
!5289 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 449, column: 2)
!5290 = !DILocation(line: 449, column: 2, scope: !5289)
!5291 = !DILocation(line: 449, column: 2, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 449, column: 2)
!5293 = distinct !{!5293, !5281, !5294}
!5294 = !DILocation(line: 450, column: 37, scope: !5277)
!5295 = !DILocation(line: 452, column: 30, scope: !5242)
!5296 = !DILocation(line: 452, column: 2, scope: !5242)
!5297 = !DILocation(line: 453, column: 1, scope: !5242)
!5298 = distinct !DISubprogram(name: "pci_msi_vec_count", scope: !3, file: !3, line: 901, type: !4363, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5299 = !DILocalVariable(name: "dev", arg: 1, scope: !5298, file: !3, line: 901, type: !4208)
!5300 = !DILocation(line: 901, column: 39, scope: !5298)
!5301 = !DILocalVariable(name: "ret", scope: !5298, file: !3, line: 903, type: !269)
!5302 = !DILocation(line: 903, column: 6, scope: !5298)
!5303 = !DILocalVariable(name: "msgctl", scope: !5298, file: !3, line: 904, type: !873)
!5304 = !DILocation(line: 904, column: 6, scope: !5298)
!5305 = !DILocation(line: 906, column: 7, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5298, file: !3, line: 906, column: 6)
!5307 = !DILocation(line: 906, column: 12, scope: !5306)
!5308 = !DILocation(line: 906, column: 6, scope: !5298)
!5309 = !DILocation(line: 907, column: 3, scope: !5306)
!5310 = !DILocation(line: 909, column: 23, scope: !5298)
!5311 = !DILocation(line: 909, column: 28, scope: !5298)
!5312 = !DILocation(line: 909, column: 33, scope: !5298)
!5313 = !DILocation(line: 909, column: 41, scope: !5298)
!5314 = !DILocation(line: 909, column: 2, scope: !5298)
!5315 = !DILocation(line: 910, column: 15, scope: !5298)
!5316 = !DILocation(line: 910, column: 22, scope: !5298)
!5317 = !DILocation(line: 910, column: 45, scope: !5298)
!5318 = !DILocation(line: 910, column: 10, scope: !5298)
!5319 = !DILocation(line: 910, column: 6, scope: !5298)
!5320 = !DILocation(line: 912, column: 9, scope: !5298)
!5321 = !DILocation(line: 912, column: 2, scope: !5298)
!5322 = !DILocation(line: 913, column: 1, scope: !5298)
!5323 = distinct !DISubprogram(name: "pci_disable_msi", scope: !3, file: !3, line: 941, type: !4355, scopeLine: 942, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5324 = !DILocalVariable(name: "dev", arg: 1, scope: !5323, file: !3, line: 941, type: !4208)
!5325 = !DILocation(line: 941, column: 38, scope: !5323)
!5326 = !DILocation(line: 943, column: 7, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 943, column: 6)
!5328 = !DILocation(line: 943, column: 22, scope: !5327)
!5329 = !DILocation(line: 943, column: 26, scope: !5327)
!5330 = !DILocation(line: 943, column: 30, scope: !5327)
!5331 = !DILocation(line: 943, column: 34, scope: !5327)
!5332 = !DILocation(line: 943, column: 39, scope: !5327)
!5333 = !DILocation(line: 943, column: 6, scope: !5323)
!5334 = !DILocation(line: 944, column: 3, scope: !5327)
!5335 = !DILocation(line: 946, column: 19, scope: !5323)
!5336 = !DILocation(line: 946, column: 2, scope: !5323)
!5337 = !DILocation(line: 947, column: 16, scope: !5323)
!5338 = !DILocation(line: 947, column: 2, scope: !5323)
!5339 = !DILocation(line: 948, column: 1, scope: !5323)
!5340 = distinct !DISubprogram(name: "pci_msi_shutdown", scope: !3, file: !3, line: 916, type: !4355, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5341 = !DILocalVariable(name: "dev", arg: 1, scope: !5340, file: !3, line: 916, type: !4208)
!5342 = !DILocation(line: 916, column: 46, scope: !5340)
!5343 = !DILocalVariable(name: "desc", scope: !5340, file: !3, line: 918, type: !210)
!5344 = !DILocation(line: 918, column: 19, scope: !5340)
!5345 = !DILocalVariable(name: "mask", scope: !5340, file: !3, line: 919, type: !426)
!5346 = !DILocation(line: 919, column: 6, scope: !5340)
!5347 = !DILocation(line: 921, column: 7, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 921, column: 6)
!5349 = !DILocation(line: 921, column: 22, scope: !5348)
!5350 = !DILocation(line: 921, column: 26, scope: !5348)
!5351 = !DILocation(line: 921, column: 30, scope: !5348)
!5352 = !DILocation(line: 921, column: 34, scope: !5348)
!5353 = !DILocation(line: 921, column: 39, scope: !5348)
!5354 = !DILocation(line: 921, column: 6, scope: !5340)
!5355 = !DILocation(line: 922, column: 3, scope: !5348)
!5356 = !DILocation(line: 924, column: 2, scope: !5340)
!5357 = !DILocation(line: 924, column: 2, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 924, column: 2)
!5359 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 924, column: 2)
!5360 = !DILocation(line: 924, column: 2, scope: !5359)
!5361 = !DILocation(line: 924, column: 2, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 924, column: 2)
!5363 = !DILocation(line: 924, column: 2, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 924, column: 2)
!5365 = !DILocation(line: 924, column: 2, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 924, column: 2)
!5367 = !{i32 -2140914736, i32 -2140914707, i32 -2140914661, i32 -2140914603, i32 -2140914549, i32 -2140914495, i32 -2140914440, i32 -2140914409}
!5368 = !DILocation(line: 924, column: 2, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 924, column: 2)
!5370 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 924, column: 2)
!5371 = !{i32 -2140913969, i32 -2140913962, i32 -2140913908, i32 -2140913877, i32 -2140913847}
!5372 = !DILocation(line: 924, column: 2, scope: !5370)
!5373 = !DILocalVariable(name: "__mptr", scope: !5374, file: !3, line: 925, type: !209)
!5374 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 925, column: 9)
!5375 = !DILocation(line: 925, column: 9, scope: !5374)
!5376 = !DILocation(line: 925, column: 9, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 925, column: 9)
!5378 = !DILocation(line: 925, column: 7, scope: !5340)
!5379 = !DILocation(line: 927, column: 21, scope: !5340)
!5380 = !DILocation(line: 927, column: 2, scope: !5340)
!5381 = !DILocation(line: 928, column: 19, scope: !5340)
!5382 = !DILocation(line: 928, column: 2, scope: !5340)
!5383 = !DILocation(line: 929, column: 2, scope: !5340)
!5384 = !DILocation(line: 929, column: 7, scope: !5340)
!5385 = !DILocation(line: 929, column: 19, scope: !5340)
!5386 = !DILocation(line: 932, column: 18, scope: !5340)
!5387 = !DILocation(line: 932, column: 24, scope: !5340)
!5388 = !DILocation(line: 932, column: 35, scope: !5340)
!5389 = !DILocation(line: 932, column: 9, scope: !5340)
!5390 = !DILocation(line: 932, column: 7, scope: !5340)
!5391 = !DILocation(line: 934, column: 26, scope: !5340)
!5392 = !DILocation(line: 934, column: 32, scope: !5340)
!5393 = !DILocation(line: 934, column: 39, scope: !5340)
!5394 = !DILocation(line: 934, column: 38, scope: !5340)
!5395 = !DILocation(line: 934, column: 2, scope: !5340)
!5396 = !DILocation(line: 937, column: 13, scope: !5340)
!5397 = !DILocation(line: 937, column: 19, scope: !5340)
!5398 = !DILocation(line: 937, column: 30, scope: !5340)
!5399 = !DILocation(line: 937, column: 2, scope: !5340)
!5400 = !DILocation(line: 937, column: 7, scope: !5340)
!5401 = !DILocation(line: 937, column: 11, scope: !5340)
!5402 = !DILocation(line: 938, column: 20, scope: !5340)
!5403 = !DILocation(line: 938, column: 2, scope: !5340)
!5404 = !DILocation(line: 939, column: 1, scope: !5340)
!5405 = distinct !DISubprogram(name: "free_msi_irqs", scope: !3, file: !3, line: 365, type: !4355, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5406 = !DILocalVariable(name: "dev", arg: 1, scope: !5405, file: !3, line: 365, type: !4208)
!5407 = !DILocation(line: 365, column: 43, scope: !5405)
!5408 = !DILocalVariable(name: "msi_list", scope: !5405, file: !3, line: 367, type: !218)
!5409 = !DILocation(line: 367, column: 20, scope: !5405)
!5410 = !DILocation(line: 367, column: 31, scope: !5405)
!5411 = !DILocalVariable(name: "entry", scope: !5405, file: !3, line: 368, type: !210)
!5412 = !DILocation(line: 368, column: 19, scope: !5405)
!5413 = !DILocalVariable(name: "tmp", scope: !5405, file: !3, line: 368, type: !210)
!5414 = !DILocation(line: 368, column: 27, scope: !5405)
!5415 = !DILocalVariable(name: "msi_attrs", scope: !5405, file: !3, line: 369, type: !337)
!5416 = !DILocation(line: 369, column: 21, scope: !5405)
!5417 = !DILocalVariable(name: "dev_attr", scope: !5405, file: !3, line: 370, type: !4527)
!5418 = !DILocation(line: 370, column: 27, scope: !5405)
!5419 = !DILocalVariable(name: "i", scope: !5405, file: !3, line: 371, type: !269)
!5420 = !DILocation(line: 371, column: 6, scope: !5405)
!5421 = !DILocalVariable(name: "count", scope: !5405, file: !3, line: 371, type: !269)
!5422 = !DILocation(line: 371, column: 9, scope: !5405)
!5423 = !DILocalVariable(name: "__mptr", scope: !5424, file: !3, line: 373, type: !209)
!5424 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 373, column: 2)
!5425 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 373, column: 2)
!5426 = !DILocation(line: 373, column: 2, scope: !5424)
!5427 = !DILocation(line: 373, column: 2, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5424, file: !3, line: 373, column: 2)
!5429 = !DILocation(line: 373, column: 2, scope: !5425)
!5430 = !DILocation(line: 373, column: 2, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5425, file: !3, line: 373, column: 2)
!5432 = !DILocation(line: 374, column: 7, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 374, column: 7)
!5434 = !DILocation(line: 374, column: 14, scope: !5433)
!5435 = !DILocation(line: 374, column: 7, scope: !5431)
!5436 = !DILocation(line: 375, column: 11, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 375, column: 4)
!5438 = !DILocation(line: 375, column: 9, scope: !5437)
!5439 = !DILocation(line: 375, column: 16, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 375, column: 4)
!5441 = !DILocation(line: 375, column: 20, scope: !5440)
!5442 = !DILocation(line: 375, column: 27, scope: !5440)
!5443 = !DILocation(line: 375, column: 18, scope: !5440)
!5444 = !DILocation(line: 375, column: 4, scope: !5437)
!5445 = !DILocation(line: 376, column: 5, scope: !5440)
!5446 = !DILocation(line: 376, column: 5, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 376, column: 5)
!5448 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 376, column: 5)
!5449 = !DILocation(line: 376, column: 5, scope: !5448)
!5450 = !DILocation(line: 376, column: 5, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 376, column: 5)
!5452 = !DILocation(line: 376, column: 5, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 376, column: 5)
!5454 = !DILocation(line: 376, column: 5, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 376, column: 5)
!5456 = !{i32 -2140960359, i32 -2140960330, i32 -2140960284, i32 -2140960226, i32 -2140960172, i32 -2140960118, i32 -2140960063, i32 -2140960032}
!5457 = !DILocation(line: 376, column: 5, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 376, column: 5)
!5459 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 376, column: 5)
!5460 = !{i32 -2140959592, i32 -2140959585, i32 -2140959531, i32 -2140959500, i32 -2140959470}
!5461 = !DILocation(line: 376, column: 5, scope: !5459)
!5462 = !DILocation(line: 375, column: 39, scope: !5440)
!5463 = !DILocation(line: 375, column: 4, scope: !5440)
!5464 = distinct !{!5464, !5444, !5465}
!5465 = !DILocation(line: 376, column: 5, scope: !5437)
!5466 = !DILocalVariable(name: "__mptr", scope: !5467, file: !3, line: 373, type: !209)
!5467 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 373, column: 2)
!5468 = !DILocation(line: 373, column: 2, scope: !5467)
!5469 = !DILocation(line: 373, column: 2, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 373, column: 2)
!5471 = distinct !{!5471, !5429, !5472}
!5472 = !DILocation(line: 376, column: 5, scope: !5425)
!5473 = !DILocation(line: 378, column: 28, scope: !5405)
!5474 = !DILocation(line: 378, column: 2, scope: !5405)
!5475 = !DILocalVariable(name: "__mptr", scope: !5476, file: !3, line: 380, type: !209)
!5476 = distinct !DILexicalBlock(scope: !5477, file: !3, line: 380, column: 2)
!5477 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 380, column: 2)
!5478 = !DILocation(line: 380, column: 2, scope: !5476)
!5479 = !DILocation(line: 380, column: 2, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 380, column: 2)
!5481 = !DILocation(line: 380, column: 2, scope: !5477)
!5482 = !DILocalVariable(name: "__mptr", scope: !5483, file: !3, line: 380, type: !209)
!5483 = distinct !DILexicalBlock(scope: !5477, file: !3, line: 380, column: 2)
!5484 = !DILocation(line: 380, column: 2, scope: !5483)
!5485 = !DILocation(line: 380, column: 2, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 380, column: 2)
!5487 = !DILocation(line: 380, column: 2, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5477, file: !3, line: 380, column: 2)
!5489 = !DILocation(line: 381, column: 7, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 381, column: 7)
!5491 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 380, column: 55)
!5492 = !DILocation(line: 381, column: 14, scope: !5490)
!5493 = !DILocation(line: 381, column: 25, scope: !5490)
!5494 = !DILocation(line: 381, column: 7, scope: !5491)
!5495 = !DILocation(line: 382, column: 22, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 382, column: 8)
!5497 = distinct !DILexicalBlock(scope: !5490, file: !3, line: 381, column: 34)
!5498 = !DILocation(line: 382, column: 29, scope: !5496)
!5499 = !DILocation(line: 382, column: 35, scope: !5496)
!5500 = !DILocation(line: 382, column: 8, scope: !5496)
!5501 = !DILocation(line: 382, column: 8, scope: !5497)
!5502 = !DILocation(line: 383, column: 13, scope: !5496)
!5503 = !DILocation(line: 383, column: 20, scope: !5496)
!5504 = !DILocation(line: 383, column: 5, scope: !5496)
!5505 = !DILocation(line: 384, column: 3, scope: !5497)
!5506 = !DILocation(line: 386, column: 13, scope: !5491)
!5507 = !DILocation(line: 386, column: 20, scope: !5491)
!5508 = !DILocation(line: 386, column: 3, scope: !5491)
!5509 = !DILocation(line: 387, column: 18, scope: !5491)
!5510 = !DILocation(line: 387, column: 3, scope: !5491)
!5511 = !DILocation(line: 388, column: 2, scope: !5491)
!5512 = !DILocalVariable(name: "__mptr", scope: !5513, file: !3, line: 380, type: !209)
!5513 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 380, column: 2)
!5514 = !DILocation(line: 380, column: 2, scope: !5513)
!5515 = !DILocation(line: 380, column: 2, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 380, column: 2)
!5517 = distinct !{!5517, !5481, !5518}
!5518 = !DILocation(line: 388, column: 2, scope: !5477)
!5519 = !DILocation(line: 390, column: 6, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 390, column: 6)
!5521 = !DILocation(line: 390, column: 11, scope: !5520)
!5522 = !DILocation(line: 390, column: 6, scope: !5405)
!5523 = !DILocation(line: 391, column: 24, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 390, column: 27)
!5525 = !DILocation(line: 391, column: 29, scope: !5524)
!5526 = !DILocation(line: 391, column: 33, scope: !5524)
!5527 = !DILocation(line: 391, column: 39, scope: !5524)
!5528 = !DILocation(line: 391, column: 44, scope: !5524)
!5529 = !DILocation(line: 391, column: 3, scope: !5524)
!5530 = !DILocation(line: 392, column: 15, scope: !5524)
!5531 = !DILocation(line: 392, column: 20, scope: !5524)
!5532 = !DILocation(line: 392, column: 39, scope: !5524)
!5533 = !DILocation(line: 392, column: 13, scope: !5524)
!5534 = !DILocation(line: 393, column: 3, scope: !5524)
!5535 = !DILocation(line: 393, column: 10, scope: !5524)
!5536 = !DILocation(line: 393, column: 20, scope: !5524)
!5537 = !DILocalVariable(name: "__mptr", scope: !5538, file: !3, line: 394, type: !209)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 394, column: 15)
!5539 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 393, column: 28)
!5540 = !DILocation(line: 394, column: 15, scope: !5538)
!5541 = !DILocation(line: 394, column: 15, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 394, column: 15)
!5543 = !DILocation(line: 394, column: 13, scope: !5539)
!5544 = !DILocation(line: 396, column: 10, scope: !5539)
!5545 = !DILocation(line: 396, column: 20, scope: !5539)
!5546 = !DILocation(line: 396, column: 25, scope: !5539)
!5547 = !DILocation(line: 396, column: 4, scope: !5539)
!5548 = !DILocation(line: 397, column: 10, scope: !5539)
!5549 = !DILocation(line: 397, column: 4, scope: !5539)
!5550 = !DILocation(line: 398, column: 4, scope: !5539)
!5551 = distinct !{!5551, !5534, !5552}
!5552 = !DILocation(line: 399, column: 3, scope: !5524)
!5553 = !DILocation(line: 400, column: 9, scope: !5524)
!5554 = !DILocation(line: 400, column: 3, scope: !5524)
!5555 = !DILocation(line: 401, column: 9, scope: !5524)
!5556 = !DILocation(line: 401, column: 14, scope: !5524)
!5557 = !DILocation(line: 401, column: 3, scope: !5524)
!5558 = !DILocation(line: 402, column: 9, scope: !5524)
!5559 = !DILocation(line: 402, column: 14, scope: !5524)
!5560 = !DILocation(line: 402, column: 3, scope: !5524)
!5561 = !DILocation(line: 403, column: 3, scope: !5524)
!5562 = !DILocation(line: 403, column: 8, scope: !5524)
!5563 = !DILocation(line: 403, column: 23, scope: !5524)
!5564 = !DILocation(line: 404, column: 2, scope: !5524)
!5565 = !DILocation(line: 405, column: 1, scope: !5405)
!5566 = distinct !DISubprogram(name: "pci_msix_vec_count", scope: !3, file: !3, line: 959, type: !4363, scopeLine: 960, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5567 = !DILocalVariable(name: "dev", arg: 1, scope: !5566, file: !3, line: 959, type: !4208)
!5568 = !DILocation(line: 959, column: 40, scope: !5566)
!5569 = !DILocalVariable(name: "control", scope: !5566, file: !3, line: 961, type: !873)
!5570 = !DILocation(line: 961, column: 6, scope: !5566)
!5571 = !DILocation(line: 963, column: 7, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 963, column: 6)
!5573 = !DILocation(line: 963, column: 12, scope: !5572)
!5574 = !DILocation(line: 963, column: 6, scope: !5566)
!5575 = !DILocation(line: 964, column: 3, scope: !5572)
!5576 = !DILocation(line: 966, column: 23, scope: !5566)
!5577 = !DILocation(line: 966, column: 28, scope: !5566)
!5578 = !DILocation(line: 966, column: 33, scope: !5566)
!5579 = !DILocation(line: 966, column: 42, scope: !5566)
!5580 = !DILocation(line: 966, column: 2, scope: !5566)
!5581 = !DILocation(line: 967, column: 9, scope: !5566)
!5582 = !DILocation(line: 967, column: 2, scope: !5566)
!5583 = !DILocation(line: 968, column: 1, scope: !5566)
!5584 = distinct !DISubprogram(name: "pci_disable_msix", scope: !3, file: !3, line: 1030, type: !4355, scopeLine: 1031, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5585 = !DILocalVariable(name: "dev", arg: 1, scope: !5584, file: !3, line: 1030, type: !4208)
!5586 = !DILocation(line: 1030, column: 39, scope: !5584)
!5587 = !DILocation(line: 1032, column: 7, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 1032, column: 6)
!5589 = !DILocation(line: 1032, column: 22, scope: !5588)
!5590 = !DILocation(line: 1032, column: 26, scope: !5588)
!5591 = !DILocation(line: 1032, column: 30, scope: !5588)
!5592 = !DILocation(line: 1032, column: 34, scope: !5588)
!5593 = !DILocation(line: 1032, column: 39, scope: !5588)
!5594 = !DILocation(line: 1032, column: 6, scope: !5584)
!5595 = !DILocation(line: 1033, column: 3, scope: !5588)
!5596 = !DILocation(line: 1035, column: 20, scope: !5584)
!5597 = !DILocation(line: 1035, column: 2, scope: !5584)
!5598 = !DILocation(line: 1036, column: 16, scope: !5584)
!5599 = !DILocation(line: 1036, column: 2, scope: !5584)
!5600 = !DILocation(line: 1037, column: 1, scope: !5584)
!5601 = distinct !DISubprogram(name: "pci_msix_shutdown", scope: !3, file: !3, line: 1006, type: !4355, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5602 = !DILocalVariable(name: "dev", arg: 1, scope: !5601, file: !3, line: 1006, type: !4208)
!5603 = !DILocation(line: 1006, column: 47, scope: !5601)
!5604 = !DILocalVariable(name: "entry", scope: !5601, file: !3, line: 1008, type: !210)
!5605 = !DILocation(line: 1008, column: 19, scope: !5601)
!5606 = !DILocation(line: 1010, column: 7, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1010, column: 6)
!5608 = !DILocation(line: 1010, column: 22, scope: !5607)
!5609 = !DILocation(line: 1010, column: 26, scope: !5607)
!5610 = !DILocation(line: 1010, column: 30, scope: !5607)
!5611 = !DILocation(line: 1010, column: 34, scope: !5607)
!5612 = !DILocation(line: 1010, column: 39, scope: !5607)
!5613 = !DILocation(line: 1010, column: 6, scope: !5601)
!5614 = !DILocation(line: 1011, column: 3, scope: !5607)
!5615 = !DILocation(line: 1013, column: 30, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1013, column: 6)
!5617 = !DILocation(line: 1013, column: 6, scope: !5616)
!5618 = !DILocation(line: 1013, column: 6, scope: !5601)
!5619 = !DILocation(line: 1014, column: 3, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 1013, column: 36)
!5621 = !DILocation(line: 1014, column: 8, scope: !5620)
!5622 = !DILocation(line: 1014, column: 21, scope: !5620)
!5623 = !DILocation(line: 1015, column: 3, scope: !5620)
!5624 = !DILocalVariable(name: "__mptr", scope: !5625, file: !3, line: 1019, type: !209)
!5625 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 1019, column: 2)
!5626 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1019, column: 2)
!5627 = !DILocation(line: 1019, column: 2, scope: !5625)
!5628 = !DILocation(line: 1019, column: 2, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 1019, column: 2)
!5630 = !DILocation(line: 1019, column: 2, scope: !5626)
!5631 = !DILocation(line: 1019, column: 2, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 1019, column: 2)
!5633 = !DILocation(line: 1021, column: 28, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 1019, column: 37)
!5635 = !DILocation(line: 1021, column: 3, scope: !5634)
!5636 = !DILocation(line: 1022, column: 2, scope: !5634)
!5637 = !DILocalVariable(name: "__mptr", scope: !5638, file: !3, line: 1019, type: !209)
!5638 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 1019, column: 2)
!5639 = !DILocation(line: 1019, column: 2, scope: !5638)
!5640 = !DILocation(line: 1019, column: 2, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 1019, column: 2)
!5642 = distinct !{!5642, !5630, !5643}
!5643 = !DILocation(line: 1022, column: 2, scope: !5626)
!5644 = !DILocation(line: 1024, column: 30, scope: !5601)
!5645 = !DILocation(line: 1024, column: 2, scope: !5601)
!5646 = !DILocation(line: 1025, column: 19, scope: !5601)
!5647 = !DILocation(line: 1025, column: 2, scope: !5601)
!5648 = !DILocation(line: 1026, column: 2, scope: !5601)
!5649 = !DILocation(line: 1026, column: 7, scope: !5601)
!5650 = !DILocation(line: 1026, column: 20, scope: !5601)
!5651 = !DILocation(line: 1027, column: 20, scope: !5601)
!5652 = !DILocation(line: 1027, column: 2, scope: !5601)
!5653 = !DILocation(line: 1028, column: 1, scope: !5601)
!5654 = distinct !DISubprogram(name: "pci_no_msi", scope: !3, file: !3, line: 1040, type: !1893, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5655 = !DILocation(line: 1042, column: 17, scope: !5654)
!5656 = !DILocation(line: 1043, column: 1, scope: !5654)
!5657 = distinct !DISubprogram(name: "pci_msi_enabled", scope: !3, file: !3, line: 1051, type: !5658, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5658 = !DISubroutineType(types: !5659)
!5659 = !{!269}
!5660 = !DILocation(line: 1053, column: 9, scope: !5657)
!5661 = !DILocation(line: 1053, column: 2, scope: !5657)
!5662 = distinct !DISubprogram(name: "pci_enable_msi", scope: !3, file: !3, line: 1108, type: !4363, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5663 = !DILocalVariable(name: "dev", arg: 1, scope: !5662, file: !3, line: 1108, type: !4208)
!5664 = !DILocation(line: 1108, column: 36, scope: !5662)
!5665 = !DILocalVariable(name: "rc", scope: !5662, file: !3, line: 1110, type: !269)
!5666 = !DILocation(line: 1110, column: 6, scope: !5662)
!5667 = !DILocation(line: 1110, column: 34, scope: !5662)
!5668 = !DILocation(line: 1110, column: 11, scope: !5662)
!5669 = !DILocation(line: 1111, column: 6, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 1111, column: 6)
!5671 = !DILocation(line: 1111, column: 9, scope: !5670)
!5672 = !DILocation(line: 1111, column: 6, scope: !5662)
!5673 = !DILocation(line: 1112, column: 10, scope: !5670)
!5674 = !DILocation(line: 1112, column: 3, scope: !5670)
!5675 = !DILocation(line: 1113, column: 2, scope: !5662)
!5676 = !DILocation(line: 1114, column: 1, scope: !5662)
!5677 = distinct !DISubprogram(name: "__pci_enable_msi_range", scope: !3, file: !3, line: 1057, type: !5678, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5678 = !DISubroutineType(types: !5679)
!5679 = !{!269, !4208, !269, !269, !5680}
!5680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5681, size: 64)
!5681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_affinity", file: !108, line: 294, size: 384, elements: !5682)
!5682 = !{!5683, !5684, !5685, !5686, !5688, !5692}
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "pre_vectors", scope: !5681, file: !108, line: 295, baseType: !7, size: 32)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "post_vectors", scope: !5681, file: !108, line: 296, baseType: !7, size: 32, offset: 32)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sets", scope: !5681, file: !108, line: 297, baseType: !7, size: 32, offset: 64)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "set_size", scope: !5681, file: !108, line: 298, baseType: !5687, size: 128, offset: 96)
!5687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1169)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "calc_sets", scope: !5681, file: !108, line: 299, baseType: !5689, size: 64, offset: 256)
!5689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5690, size: 64)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{null, !5680, !7}
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5681, file: !108, line: 300, baseType: !209, size: 64, offset: 320)
!5693 = !DILocalVariable(name: "dev", arg: 1, scope: !5677, file: !3, line: 1057, type: !4208)
!5694 = !DILocation(line: 1057, column: 51, scope: !5677)
!5695 = !DILocalVariable(name: "minvec", arg: 2, scope: !5677, file: !3, line: 1057, type: !269)
!5696 = !DILocation(line: 1057, column: 60, scope: !5677)
!5697 = !DILocalVariable(name: "maxvec", arg: 3, scope: !5677, file: !3, line: 1057, type: !269)
!5698 = !DILocation(line: 1057, column: 72, scope: !5677)
!5699 = !DILocalVariable(name: "affd", arg: 4, scope: !5677, file: !3, line: 1058, type: !5680)
!5700 = !DILocation(line: 1058, column: 28, scope: !5677)
!5701 = !DILocalVariable(name: "nvec", scope: !5677, file: !3, line: 1060, type: !269)
!5702 = !DILocation(line: 1060, column: 6, scope: !5677)
!5703 = !DILocalVariable(name: "rc", scope: !5677, file: !3, line: 1061, type: !269)
!5704 = !DILocation(line: 1061, column: 6, scope: !5677)
!5705 = !DILocation(line: 1063, column: 25, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1063, column: 6)
!5707 = !DILocation(line: 1063, column: 30, scope: !5706)
!5708 = !DILocation(line: 1063, column: 7, scope: !5706)
!5709 = !DILocation(line: 1063, column: 38, scope: !5706)
!5710 = !DILocation(line: 1063, column: 41, scope: !5706)
!5711 = !DILocation(line: 1063, column: 46, scope: !5706)
!5712 = !DILocation(line: 1063, column: 60, scope: !5706)
!5713 = !DILocation(line: 1063, column: 6, scope: !5677)
!5714 = !DILocation(line: 1064, column: 3, scope: !5706)
!5715 = !DILocation(line: 1067, column: 6, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1067, column: 6)
!5717 = !DILocation(line: 1067, column: 11, scope: !5716)
!5718 = !DILocation(line: 1067, column: 6, scope: !5677)
!5719 = !DILocation(line: 1068, column: 3, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1067, column: 25)
!5721 = !DILocation(line: 1069, column: 3, scope: !5720)
!5722 = !DILocation(line: 1072, column: 6, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1072, column: 6)
!5724 = !DILocation(line: 1072, column: 15, scope: !5723)
!5725 = !DILocation(line: 1072, column: 13, scope: !5723)
!5726 = !DILocation(line: 1072, column: 6, scope: !5677)
!5727 = !DILocation(line: 1073, column: 3, scope: !5723)
!5728 = !DILocalVariable(name: "__ret_warn_on", scope: !5729, file: !3, line: 1075, type: !269)
!5729 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 1075, column: 6)
!5730 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1075, column: 6)
!5731 = !DILocation(line: 1075, column: 6, scope: !5729)
!5732 = !DILocation(line: 1075, column: 6, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 1075, column: 6)
!5734 = !DILocation(line: 1075, column: 6, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 1075, column: 6)
!5736 = !DILocation(line: 1075, column: 6, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 1075, column: 6)
!5738 = !DILocation(line: 1075, column: 6, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 1075, column: 6)
!5740 = !{i32 -2140905358, i32 -2140905329, i32 -2140905283, i32 -2140905225, i32 -2140905171, i32 -2140905117, i32 -2140905062, i32 -2140905031}
!5741 = !DILocation(line: 1075, column: 6, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 1075, column: 6)
!5743 = !{i32 -2140904620, i32 -2140904613, i32 -2140904561, i32 -2140904530, i32 -2140904500}
!5744 = !DILocation(line: 1075, column: 6, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 1075, column: 6)
!5746 = !DILocation(line: 1075, column: 6, scope: !5730)
!5747 = !DILocation(line: 1075, column: 6, scope: !5677)
!5748 = !DILocation(line: 1076, column: 3, scope: !5730)
!5749 = !DILocation(line: 1078, column: 27, scope: !5677)
!5750 = !DILocation(line: 1078, column: 9, scope: !5677)
!5751 = !DILocation(line: 1078, column: 7, scope: !5677)
!5752 = !DILocation(line: 1079, column: 6, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1079, column: 6)
!5754 = !DILocation(line: 1079, column: 11, scope: !5753)
!5755 = !DILocation(line: 1079, column: 6, scope: !5677)
!5756 = !DILocation(line: 1080, column: 10, scope: !5753)
!5757 = !DILocation(line: 1080, column: 3, scope: !5753)
!5758 = !DILocation(line: 1081, column: 6, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1081, column: 6)
!5760 = !DILocation(line: 1081, column: 13, scope: !5759)
!5761 = !DILocation(line: 1081, column: 11, scope: !5759)
!5762 = !DILocation(line: 1081, column: 6, scope: !5677)
!5763 = !DILocation(line: 1082, column: 3, scope: !5759)
!5764 = !DILocation(line: 1084, column: 6, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1084, column: 6)
!5766 = !DILocation(line: 1084, column: 13, scope: !5765)
!5767 = !DILocation(line: 1084, column: 11, scope: !5765)
!5768 = !DILocation(line: 1084, column: 6, scope: !5677)
!5769 = !DILocation(line: 1085, column: 10, scope: !5765)
!5770 = !DILocation(line: 1085, column: 8, scope: !5765)
!5771 = !DILocation(line: 1085, column: 3, scope: !5765)
!5772 = !DILocation(line: 1087, column: 2, scope: !5677)
!5773 = !DILocation(line: 1088, column: 7, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 1088, column: 7)
!5775 = distinct !DILexicalBlock(scope: !5776, file: !3, line: 1087, column: 11)
!5776 = distinct !DILexicalBlock(scope: !5777, file: !3, line: 1087, column: 2)
!5777 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1087, column: 2)
!5778 = !DILocation(line: 1088, column: 7, scope: !5775)
!5779 = !DILocation(line: 1089, column: 37, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 1088, column: 13)
!5781 = !DILocation(line: 1089, column: 45, scope: !5780)
!5782 = !DILocation(line: 1089, column: 51, scope: !5780)
!5783 = !DILocation(line: 1089, column: 11, scope: !5780)
!5784 = !DILocation(line: 1089, column: 9, scope: !5780)
!5785 = !DILocation(line: 1090, column: 8, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 1090, column: 8)
!5787 = !DILocation(line: 1090, column: 15, scope: !5786)
!5788 = !DILocation(line: 1090, column: 13, scope: !5786)
!5789 = !DILocation(line: 1090, column: 8, scope: !5780)
!5790 = !DILocation(line: 1091, column: 5, scope: !5786)
!5791 = !DILocation(line: 1092, column: 3, scope: !5780)
!5792 = !DILocation(line: 1094, column: 28, scope: !5775)
!5793 = !DILocation(line: 1094, column: 33, scope: !5775)
!5794 = !DILocation(line: 1094, column: 39, scope: !5775)
!5795 = !DILocation(line: 1094, column: 8, scope: !5775)
!5796 = !DILocation(line: 1094, column: 6, scope: !5775)
!5797 = !DILocation(line: 1095, column: 7, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 1095, column: 7)
!5799 = !DILocation(line: 1095, column: 10, scope: !5798)
!5800 = !DILocation(line: 1095, column: 7, scope: !5775)
!5801 = !DILocation(line: 1096, column: 11, scope: !5798)
!5802 = !DILocation(line: 1096, column: 4, scope: !5798)
!5803 = !DILocation(line: 1098, column: 7, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 1098, column: 7)
!5805 = !DILocation(line: 1098, column: 10, scope: !5804)
!5806 = !DILocation(line: 1098, column: 7, scope: !5775)
!5807 = !DILocation(line: 1099, column: 11, scope: !5804)
!5808 = !DILocation(line: 1099, column: 4, scope: !5804)
!5809 = !DILocation(line: 1100, column: 7, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 1100, column: 7)
!5811 = !DILocation(line: 1100, column: 12, scope: !5810)
!5812 = !DILocation(line: 1100, column: 10, scope: !5810)
!5813 = !DILocation(line: 1100, column: 7, scope: !5775)
!5814 = !DILocation(line: 1101, column: 4, scope: !5810)
!5815 = !DILocation(line: 1103, column: 10, scope: !5775)
!5816 = !DILocation(line: 1103, column: 8, scope: !5775)
!5817 = !DILocation(line: 1087, column: 2, scope: !5776)
!5818 = distinct !{!5818, !5819, !5820}
!5819 = !DILocation(line: 1087, column: 2, scope: !5777)
!5820 = !DILocation(line: 1104, column: 2, scope: !5777)
!5821 = !DILocation(line: 1105, column: 1, scope: !5677)
!5822 = distinct !DISubprogram(name: "pci_enable_msix_range", scope: !3, file: !3, line: 1165, type: !5823, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5823 = !DISubroutineType(types: !5824)
!5824 = !{!269, !4208, !5825, !269, !269}
!5825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5826, size: 64)
!5826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msix_entry", file: !167, line: 1453, size: 64, elements: !5827)
!5827 = !{!5828, !5829}
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !5826, file: !167, line: 1454, baseType: !426, size: 32)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5826, file: !167, line: 1455, baseType: !873, size: 16, offset: 32)
!5830 = !DILocalVariable(name: "dev", arg: 1, scope: !5822, file: !3, line: 1165, type: !4208)
!5831 = !DILocation(line: 1165, column: 43, scope: !5822)
!5832 = !DILocalVariable(name: "entries", arg: 2, scope: !5822, file: !3, line: 1165, type: !5825)
!5833 = !DILocation(line: 1165, column: 67, scope: !5822)
!5834 = !DILocalVariable(name: "minvec", arg: 3, scope: !5822, file: !3, line: 1166, type: !269)
!5835 = !DILocation(line: 1166, column: 7, scope: !5822)
!5836 = !DILocalVariable(name: "maxvec", arg: 4, scope: !5822, file: !3, line: 1166, type: !269)
!5837 = !DILocation(line: 1166, column: 19, scope: !5822)
!5838 = !DILocation(line: 1168, column: 33, scope: !5822)
!5839 = !DILocation(line: 1168, column: 38, scope: !5822)
!5840 = !DILocation(line: 1168, column: 47, scope: !5822)
!5841 = !DILocation(line: 1168, column: 55, scope: !5822)
!5842 = !DILocation(line: 1168, column: 9, scope: !5822)
!5843 = !DILocation(line: 1168, column: 2, scope: !5822)
!5844 = distinct !DISubprogram(name: "__pci_enable_msix_range", scope: !3, file: !3, line: 1117, type: !5845, scopeLine: 1121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5845 = !DISubroutineType(types: !5846)
!5846 = !{!269, !4208, !5825, !269, !269, !5680, !269}
!5847 = !DILocalVariable(name: "dev", arg: 1, scope: !5844, file: !3, line: 1117, type: !4208)
!5848 = !DILocation(line: 1117, column: 52, scope: !5844)
!5849 = !DILocalVariable(name: "entries", arg: 2, scope: !5844, file: !3, line: 1118, type: !5825)
!5850 = !DILocation(line: 1118, column: 27, scope: !5844)
!5851 = !DILocalVariable(name: "minvec", arg: 3, scope: !5844, file: !3, line: 1118, type: !269)
!5852 = !DILocation(line: 1118, column: 40, scope: !5844)
!5853 = !DILocalVariable(name: "maxvec", arg: 4, scope: !5844, file: !3, line: 1119, type: !269)
!5854 = !DILocation(line: 1119, column: 12, scope: !5844)
!5855 = !DILocalVariable(name: "affd", arg: 5, scope: !5844, file: !3, line: 1119, type: !5680)
!5856 = !DILocation(line: 1119, column: 41, scope: !5844)
!5857 = !DILocalVariable(name: "flags", arg: 6, scope: !5844, file: !3, line: 1120, type: !269)
!5858 = !DILocation(line: 1120, column: 12, scope: !5844)
!5859 = !DILocalVariable(name: "rc", scope: !5844, file: !3, line: 1122, type: !269)
!5860 = !DILocation(line: 1122, column: 6, scope: !5844)
!5861 = !DILocalVariable(name: "nvec", scope: !5844, file: !3, line: 1122, type: !269)
!5862 = !DILocation(line: 1122, column: 10, scope: !5844)
!5863 = !DILocation(line: 1122, column: 17, scope: !5844)
!5864 = !DILocation(line: 1124, column: 6, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1124, column: 6)
!5866 = !DILocation(line: 1124, column: 15, scope: !5865)
!5867 = !DILocation(line: 1124, column: 13, scope: !5865)
!5868 = !DILocation(line: 1124, column: 6, scope: !5844)
!5869 = !DILocation(line: 1125, column: 3, scope: !5865)
!5870 = !DILocalVariable(name: "__ret_warn_on", scope: !5871, file: !3, line: 1127, type: !269)
!5871 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 1127, column: 6)
!5872 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1127, column: 6)
!5873 = !DILocation(line: 1127, column: 6, scope: !5871)
!5874 = !DILocation(line: 1127, column: 6, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 1127, column: 6)
!5876 = !DILocation(line: 1127, column: 6, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 1127, column: 6)
!5878 = !DILocation(line: 1127, column: 6, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 1127, column: 6)
!5880 = !DILocation(line: 1127, column: 6, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 1127, column: 6)
!5882 = !{i32 -2140903769, i32 -2140903740, i32 -2140903694, i32 -2140903636, i32 -2140903582, i32 -2140903528, i32 -2140903473, i32 -2140903442}
!5883 = !DILocation(line: 1127, column: 6, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 1127, column: 6)
!5885 = !{i32 -2140903031, i32 -2140903024, i32 -2140902972, i32 -2140902941, i32 -2140902911}
!5886 = !DILocation(line: 1127, column: 6, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 1127, column: 6)
!5888 = !DILocation(line: 1127, column: 6, scope: !5872)
!5889 = !DILocation(line: 1127, column: 6, scope: !5844)
!5890 = !DILocation(line: 1128, column: 3, scope: !5872)
!5891 = !DILocation(line: 1130, column: 2, scope: !5844)
!5892 = !DILocation(line: 1131, column: 7, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 1131, column: 7)
!5894 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 1130, column: 11)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1130, column: 2)
!5896 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1130, column: 2)
!5897 = !DILocation(line: 1131, column: 7, scope: !5894)
!5898 = !DILocation(line: 1132, column: 37, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 1131, column: 13)
!5900 = !DILocation(line: 1132, column: 45, scope: !5899)
!5901 = !DILocation(line: 1132, column: 51, scope: !5899)
!5902 = !DILocation(line: 1132, column: 11, scope: !5899)
!5903 = !DILocation(line: 1132, column: 9, scope: !5899)
!5904 = !DILocation(line: 1133, column: 8, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5899, file: !3, line: 1133, column: 8)
!5906 = !DILocation(line: 1133, column: 15, scope: !5905)
!5907 = !DILocation(line: 1133, column: 13, scope: !5905)
!5908 = !DILocation(line: 1133, column: 8, scope: !5899)
!5909 = !DILocation(line: 1134, column: 5, scope: !5905)
!5910 = !DILocation(line: 1135, column: 3, scope: !5899)
!5911 = !DILocation(line: 1137, column: 26, scope: !5894)
!5912 = !DILocation(line: 1137, column: 31, scope: !5894)
!5913 = !DILocation(line: 1137, column: 40, scope: !5894)
!5914 = !DILocation(line: 1137, column: 46, scope: !5894)
!5915 = !DILocation(line: 1137, column: 52, scope: !5894)
!5916 = !DILocation(line: 1137, column: 8, scope: !5894)
!5917 = !DILocation(line: 1137, column: 6, scope: !5894)
!5918 = !DILocation(line: 1138, column: 7, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 1138, column: 7)
!5920 = !DILocation(line: 1138, column: 10, scope: !5919)
!5921 = !DILocation(line: 1138, column: 7, scope: !5894)
!5922 = !DILocation(line: 1139, column: 11, scope: !5919)
!5923 = !DILocation(line: 1139, column: 4, scope: !5919)
!5924 = !DILocation(line: 1141, column: 7, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 1141, column: 7)
!5926 = !DILocation(line: 1141, column: 10, scope: !5925)
!5927 = !DILocation(line: 1141, column: 7, scope: !5894)
!5928 = !DILocation(line: 1142, column: 11, scope: !5925)
!5929 = !DILocation(line: 1142, column: 4, scope: !5925)
!5930 = !DILocation(line: 1143, column: 7, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 1143, column: 7)
!5932 = !DILocation(line: 1143, column: 12, scope: !5931)
!5933 = !DILocation(line: 1143, column: 10, scope: !5931)
!5934 = !DILocation(line: 1143, column: 7, scope: !5894)
!5935 = !DILocation(line: 1144, column: 4, scope: !5931)
!5936 = !DILocation(line: 1146, column: 10, scope: !5894)
!5937 = !DILocation(line: 1146, column: 8, scope: !5894)
!5938 = !DILocation(line: 1130, column: 2, scope: !5895)
!5939 = distinct !{!5939, !5940, !5941}
!5940 = !DILocation(line: 1130, column: 2, scope: !5896)
!5941 = !DILocation(line: 1147, column: 2, scope: !5896)
!5942 = !DILocation(line: 1148, column: 1, scope: !5844)
!5943 = distinct !DISubprogram(name: "pci_alloc_irq_vectors_affinity", scope: !3, file: !3, line: 1190, type: !5944, scopeLine: 1193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!5944 = !DISubroutineType(types: !5945)
!5945 = !{!269, !4208, !7, !7, !7, !5680}
!5946 = !DILocalVariable(name: "dev", arg: 1, scope: !5943, file: !3, line: 1190, type: !4208)
!5947 = !DILocation(line: 1190, column: 52, scope: !5943)
!5948 = !DILocalVariable(name: "min_vecs", arg: 2, scope: !5943, file: !3, line: 1190, type: !7)
!5949 = !DILocation(line: 1190, column: 70, scope: !5943)
!5950 = !DILocalVariable(name: "max_vecs", arg: 3, scope: !5943, file: !3, line: 1191, type: !7)
!5951 = !DILocation(line: 1191, column: 21, scope: !5943)
!5952 = !DILocalVariable(name: "flags", arg: 4, scope: !5943, file: !3, line: 1191, type: !7)
!5953 = !DILocation(line: 1191, column: 44, scope: !5943)
!5954 = !DILocalVariable(name: "affd", arg: 5, scope: !5943, file: !3, line: 1192, type: !5680)
!5955 = !DILocation(line: 1192, column: 29, scope: !5943)
!5956 = !DILocalVariable(name: "msi_default_affd", scope: !5943, file: !3, line: 1194, type: !5681)
!5957 = !DILocation(line: 1194, column: 22, scope: !5943)
!5958 = !DILocalVariable(name: "nvecs", scope: !5943, file: !3, line: 1195, type: !269)
!5959 = !DILocation(line: 1195, column: 6, scope: !5943)
!5960 = !DILocation(line: 1197, column: 6, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 1197, column: 6)
!5962 = !DILocation(line: 1197, column: 12, scope: !5961)
!5963 = !DILocation(line: 1197, column: 6, scope: !5943)
!5964 = !DILocation(line: 1198, column: 8, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5966, file: !3, line: 1198, column: 7)
!5966 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 1197, column: 32)
!5967 = !DILocation(line: 1198, column: 7, scope: !5966)
!5968 = !DILocation(line: 1199, column: 9, scope: !5965)
!5969 = !DILocation(line: 1199, column: 4, scope: !5965)
!5970 = !DILocation(line: 1200, column: 2, scope: !5966)
!5971 = !DILocalVariable(name: "__ret_warn_on", scope: !5972, file: !3, line: 1201, type: !269)
!5972 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1201, column: 7)
!5973 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 1201, column: 7)
!5974 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 1200, column: 9)
!5975 = !DILocation(line: 1201, column: 7, scope: !5972)
!5976 = !DILocation(line: 1201, column: 7, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1201, column: 7)
!5978 = !DILocation(line: 1201, column: 7, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5977, file: !3, line: 1201, column: 7)
!5980 = !DILocation(line: 1201, column: 7, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 1201, column: 7)
!5982 = !DILocation(line: 1201, column: 7, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 1201, column: 7)
!5984 = !{i32 -2140902201, i32 -2140902172, i32 -2140902126, i32 -2140902068, i32 -2140902014, i32 -2140901960, i32 -2140901905, i32 -2140901874}
!5985 = !DILocation(line: 1201, column: 7, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 1201, column: 7)
!5987 = !{i32 -2140901474, i32 -2140901467, i32 -2140901415, i32 -2140901384, i32 -2140901354}
!5988 = !DILocation(line: 1201, column: 7, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 1201, column: 7)
!5990 = !DILocation(line: 1201, column: 7, scope: !5973)
!5991 = !DILocation(line: 1201, column: 7, scope: !5974)
!5992 = !DILocation(line: 1202, column: 9, scope: !5973)
!5993 = !DILocation(line: 1202, column: 4, scope: !5973)
!5994 = !DILocation(line: 1205, column: 6, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 1205, column: 6)
!5996 = !DILocation(line: 1205, column: 12, scope: !5995)
!5997 = !DILocation(line: 1205, column: 6, scope: !5943)
!5998 = !DILocation(line: 1206, column: 35, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 1205, column: 28)
!6000 = !DILocation(line: 1206, column: 46, scope: !5999)
!6001 = !DILocation(line: 1206, column: 56, scope: !5999)
!6002 = !DILocation(line: 1207, column: 7, scope: !5999)
!6003 = !DILocation(line: 1207, column: 13, scope: !5999)
!6004 = !DILocation(line: 1206, column: 11, scope: !5999)
!6005 = !DILocation(line: 1206, column: 9, scope: !5999)
!6006 = !DILocation(line: 1208, column: 7, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 1208, column: 7)
!6008 = !DILocation(line: 1208, column: 13, scope: !6007)
!6009 = !DILocation(line: 1208, column: 7, scope: !5999)
!6010 = !DILocation(line: 1209, column: 11, scope: !6007)
!6011 = !DILocation(line: 1209, column: 4, scope: !6007)
!6012 = !DILocation(line: 1210, column: 2, scope: !5999)
!6013 = !DILocation(line: 1212, column: 6, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 1212, column: 6)
!6015 = !DILocation(line: 1212, column: 12, scope: !6014)
!6016 = !DILocation(line: 1212, column: 6, scope: !5943)
!6017 = !DILocation(line: 1213, column: 34, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 1212, column: 27)
!6019 = !DILocation(line: 1213, column: 39, scope: !6018)
!6020 = !DILocation(line: 1213, column: 49, scope: !6018)
!6021 = !DILocation(line: 1213, column: 59, scope: !6018)
!6022 = !DILocation(line: 1213, column: 11, scope: !6018)
!6023 = !DILocation(line: 1213, column: 9, scope: !6018)
!6024 = !DILocation(line: 1214, column: 7, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 1214, column: 7)
!6026 = !DILocation(line: 1214, column: 13, scope: !6025)
!6027 = !DILocation(line: 1214, column: 7, scope: !6018)
!6028 = !DILocation(line: 1215, column: 11, scope: !6025)
!6029 = !DILocation(line: 1215, column: 4, scope: !6025)
!6030 = !DILocation(line: 1216, column: 2, scope: !6018)
!6031 = !DILocation(line: 1219, column: 6, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 1219, column: 6)
!6033 = !DILocation(line: 1219, column: 12, scope: !6032)
!6034 = !DILocation(line: 1219, column: 6, scope: !5943)
!6035 = !DILocation(line: 1220, column: 7, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 1220, column: 7)
!6037 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 1219, column: 30)
!6038 = !DILocation(line: 1220, column: 16, scope: !6036)
!6039 = !DILocation(line: 1220, column: 21, scope: !6036)
!6040 = !DILocation(line: 1220, column: 24, scope: !6036)
!6041 = !DILocation(line: 1220, column: 29, scope: !6036)
!6042 = !DILocation(line: 1220, column: 7, scope: !6037)
!6043 = !DILocation(line: 1226, column: 8, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 1226, column: 8)
!6045 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 1220, column: 34)
!6046 = !DILocation(line: 1226, column: 8, scope: !6045)
!6047 = !DILocation(line: 1227, column: 34, scope: !6044)
!6048 = !DILocation(line: 1227, column: 5, scope: !6044)
!6049 = !DILocation(line: 1228, column: 13, scope: !6045)
!6050 = !DILocation(line: 1228, column: 4, scope: !6045)
!6051 = !DILocation(line: 1229, column: 4, scope: !6045)
!6052 = !DILocation(line: 1231, column: 2, scope: !6037)
!6053 = !DILocation(line: 1233, column: 9, scope: !5943)
!6054 = !DILocation(line: 1233, column: 2, scope: !5943)
!6055 = !DILocation(line: 1234, column: 1, scope: !5943)
!6056 = distinct !DISubprogram(name: "irq_create_affinity_masks", scope: !108, file: !108, line: 397, type: !6057, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6057 = !DISubroutineType(types: !6058)
!6058 = !{!4159, !7, !5680}
!6059 = !DILocalVariable(name: "nvec", arg: 1, scope: !6056, file: !108, line: 397, type: !7)
!6060 = !DILocation(line: 397, column: 40, scope: !6056)
!6061 = !DILocalVariable(name: "affd", arg: 2, scope: !6056, file: !108, line: 397, type: !5680)
!6062 = !DILocation(line: 397, column: 67, scope: !6056)
!6063 = !DILocation(line: 399, column: 2, scope: !6056)
!6064 = distinct !DISubprogram(name: "pci_free_irq_vectors", scope: !3, file: !3, line: 1243, type: !4355, scopeLine: 1244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6065 = !DILocalVariable(name: "dev", arg: 1, scope: !6064, file: !3, line: 1243, type: !4208)
!6066 = !DILocation(line: 1243, column: 43, scope: !6064)
!6067 = !DILocation(line: 1245, column: 19, scope: !6064)
!6068 = !DILocation(line: 1245, column: 2, scope: !6064)
!6069 = !DILocation(line: 1246, column: 18, scope: !6064)
!6070 = !DILocation(line: 1246, column: 2, scope: !6064)
!6071 = !DILocation(line: 1247, column: 1, scope: !6064)
!6072 = distinct !DISubprogram(name: "pci_irq_vector", scope: !3, file: !3, line: 1255, type: !6073, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6073 = !DISubroutineType(types: !6074)
!6074 = !{!269, !4208, !7}
!6075 = !DILocalVariable(name: "dev", arg: 1, scope: !6072, file: !3, line: 1255, type: !4208)
!6076 = !DILocation(line: 1255, column: 36, scope: !6072)
!6077 = !DILocalVariable(name: "nr", arg: 2, scope: !6072, file: !3, line: 1255, type: !7)
!6078 = !DILocation(line: 1255, column: 54, scope: !6072)
!6079 = !DILocation(line: 1257, column: 6, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 1257, column: 6)
!6081 = !DILocation(line: 1257, column: 11, scope: !6080)
!6082 = !DILocation(line: 1257, column: 6, scope: !6072)
!6083 = !DILocalVariable(name: "entry", scope: !6084, file: !3, line: 1258, type: !210)
!6084 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 1257, column: 25)
!6085 = !DILocation(line: 1258, column: 20, scope: !6084)
!6086 = !DILocalVariable(name: "i", scope: !6084, file: !3, line: 1259, type: !269)
!6087 = !DILocation(line: 1259, column: 7, scope: !6084)
!6088 = !DILocalVariable(name: "__mptr", scope: !6089, file: !3, line: 1261, type: !209)
!6089 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 1261, column: 3)
!6090 = distinct !DILexicalBlock(scope: !6084, file: !3, line: 1261, column: 3)
!6091 = !DILocation(line: 1261, column: 3, scope: !6089)
!6092 = !DILocation(line: 1261, column: 3, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 1261, column: 3)
!6094 = !DILocation(line: 1261, column: 3, scope: !6090)
!6095 = !DILocation(line: 1261, column: 3, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 1261, column: 3)
!6097 = !DILocation(line: 1262, column: 8, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 1262, column: 8)
!6099 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 1261, column: 38)
!6100 = !DILocation(line: 1262, column: 13, scope: !6098)
!6101 = !DILocation(line: 1262, column: 10, scope: !6098)
!6102 = !DILocation(line: 1262, column: 8, scope: !6099)
!6103 = !DILocation(line: 1263, column: 12, scope: !6098)
!6104 = !DILocation(line: 1263, column: 19, scope: !6098)
!6105 = !DILocation(line: 1263, column: 5, scope: !6098)
!6106 = !DILocation(line: 1264, column: 5, scope: !6099)
!6107 = !DILocation(line: 1265, column: 3, scope: !6099)
!6108 = !DILocalVariable(name: "__mptr", scope: !6109, file: !3, line: 1261, type: !209)
!6109 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 1261, column: 3)
!6110 = !DILocation(line: 1261, column: 3, scope: !6109)
!6111 = !DILocation(line: 1261, column: 3, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 1261, column: 3)
!6113 = distinct !{!6113, !6094, !6114}
!6114 = !DILocation(line: 1265, column: 3, scope: !6090)
!6115 = !DILocalVariable(name: "__ret_warn_on", scope: !6116, file: !3, line: 1266, type: !269)
!6116 = distinct !DILexicalBlock(scope: !6084, file: !3, line: 1266, column: 3)
!6117 = !DILocation(line: 1266, column: 3, scope: !6116)
!6118 = !DILocation(line: 1266, column: 3, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 1266, column: 3)
!6120 = !DILocation(line: 1266, column: 3, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 1266, column: 3)
!6122 = !DILocation(line: 1266, column: 3, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 1266, column: 3)
!6124 = !DILocation(line: 1266, column: 3, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 1266, column: 3)
!6126 = !{i32 -2140895763, i32 -2140895734, i32 -2140895688, i32 -2140895630, i32 -2140895576, i32 -2140895522, i32 -2140895467, i32 -2140895436}
!6127 = !DILocation(line: 1266, column: 3, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 1266, column: 3)
!6129 = !{i32 -2140895025, i32 -2140895018, i32 -2140894966, i32 -2140894935, i32 -2140894905}
!6130 = !DILocation(line: 1266, column: 3, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6121, file: !3, line: 1266, column: 3)
!6132 = !DILocation(line: 1267, column: 3, scope: !6084)
!6133 = !DILocation(line: 1270, column: 6, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 1270, column: 6)
!6135 = !DILocation(line: 1270, column: 11, scope: !6134)
!6136 = !DILocation(line: 1270, column: 6, scope: !6072)
!6137 = !DILocalVariable(name: "entry", scope: !6138, file: !3, line: 1271, type: !210)
!6138 = distinct !DILexicalBlock(scope: !6134, file: !3, line: 1270, column: 24)
!6139 = !DILocation(line: 1271, column: 20, scope: !6138)
!6140 = !DILocalVariable(name: "__mptr", scope: !6141, file: !3, line: 1271, type: !209)
!6141 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 1271, column: 28)
!6142 = !DILocation(line: 1271, column: 28, scope: !6141)
!6143 = !DILocation(line: 1271, column: 28, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 1271, column: 28)
!6145 = !DILocalVariable(name: "__ret_warn_on", scope: !6146, file: !3, line: 1273, type: !269)
!6146 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 1273, column: 7)
!6147 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 1273, column: 7)
!6148 = !DILocation(line: 1273, column: 7, scope: !6146)
!6149 = !DILocation(line: 1273, column: 7, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1273, column: 7)
!6151 = !DILocation(line: 1273, column: 7, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 1273, column: 7)
!6153 = !DILocation(line: 1273, column: 7, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 1273, column: 7)
!6155 = !DILocation(line: 1273, column: 7, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 1273, column: 7)
!6157 = !{i32 -2140892068, i32 -2140892039, i32 -2140891993, i32 -2140891935, i32 -2140891881, i32 -2140891827, i32 -2140891772, i32 -2140891741}
!6158 = !DILocation(line: 1273, column: 7, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 1273, column: 7)
!6160 = !{i32 -2140891330, i32 -2140891323, i32 -2140891271, i32 -2140891240, i32 -2140891210}
!6161 = !DILocation(line: 1273, column: 7, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 1273, column: 7)
!6163 = !DILocation(line: 1273, column: 7, scope: !6147)
!6164 = !DILocation(line: 1273, column: 7, scope: !6138)
!6165 = !DILocation(line: 1274, column: 4, scope: !6147)
!6166 = !DILocation(line: 1275, column: 2, scope: !6138)
!6167 = !DILocalVariable(name: "__ret_warn_on", scope: !6168, file: !3, line: 1276, type: !269)
!6168 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 1276, column: 7)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 1276, column: 7)
!6170 = distinct !DILexicalBlock(scope: !6134, file: !3, line: 1275, column: 9)
!6171 = !DILocation(line: 1276, column: 7, scope: !6168)
!6172 = !DILocation(line: 1276, column: 7, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 1276, column: 7)
!6174 = !DILocation(line: 1276, column: 7, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 1276, column: 7)
!6176 = !DILocation(line: 1276, column: 7, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 1276, column: 7)
!6178 = !DILocation(line: 1276, column: 7, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 1276, column: 7)
!6180 = !{i32 -2140890601, i32 -2140890572, i32 -2140890526, i32 -2140890468, i32 -2140890414, i32 -2140890360, i32 -2140890305, i32 -2140890274}
!6181 = !DILocation(line: 1276, column: 7, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 1276, column: 7)
!6183 = !{i32 -2140889863, i32 -2140889856, i32 -2140889804, i32 -2140889773, i32 -2140889743}
!6184 = !DILocation(line: 1276, column: 7, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 1276, column: 7)
!6186 = !DILocation(line: 1276, column: 7, scope: !6169)
!6187 = !DILocation(line: 1276, column: 7, scope: !6170)
!6188 = !DILocation(line: 1277, column: 4, scope: !6169)
!6189 = !DILocation(line: 1280, column: 9, scope: !6072)
!6190 = !DILocation(line: 1280, column: 14, scope: !6072)
!6191 = !DILocation(line: 1280, column: 20, scope: !6072)
!6192 = !DILocation(line: 1280, column: 18, scope: !6072)
!6193 = !DILocation(line: 1280, column: 2, scope: !6072)
!6194 = !DILocation(line: 1281, column: 1, scope: !6072)
!6195 = distinct !DISubprogram(name: "pci_irq_get_affinity", scope: !3, file: !3, line: 1289, type: !6196, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6196 = !DISubroutineType(types: !6197)
!6197 = !{!3875, !4208, !269}
!6198 = !DILocalVariable(name: "dev", arg: 1, scope: !6195, file: !3, line: 1289, type: !4208)
!6199 = !DILocation(line: 1289, column: 60, scope: !6195)
!6200 = !DILocalVariable(name: "nr", arg: 2, scope: !6195, file: !3, line: 1289, type: !269)
!6201 = !DILocation(line: 1289, column: 69, scope: !6195)
!6202 = !DILocation(line: 1291, column: 6, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 1291, column: 6)
!6204 = !DILocation(line: 1291, column: 11, scope: !6203)
!6205 = !DILocation(line: 1291, column: 6, scope: !6195)
!6206 = !DILocalVariable(name: "entry", scope: !6207, file: !3, line: 1292, type: !210)
!6207 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 1291, column: 25)
!6208 = !DILocation(line: 1292, column: 20, scope: !6207)
!6209 = !DILocalVariable(name: "i", scope: !6207, file: !3, line: 1293, type: !269)
!6210 = !DILocation(line: 1293, column: 7, scope: !6207)
!6211 = !DILocalVariable(name: "__mptr", scope: !6212, file: !3, line: 1295, type: !209)
!6212 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 1295, column: 3)
!6213 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 1295, column: 3)
!6214 = !DILocation(line: 1295, column: 3, scope: !6212)
!6215 = !DILocation(line: 1295, column: 3, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 1295, column: 3)
!6217 = !DILocation(line: 1295, column: 3, scope: !6213)
!6218 = !DILocation(line: 1295, column: 3, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 1295, column: 3)
!6220 = !DILocation(line: 1296, column: 8, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 1296, column: 8)
!6222 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 1295, column: 38)
!6223 = !DILocation(line: 1296, column: 13, scope: !6221)
!6224 = !DILocation(line: 1296, column: 10, scope: !6221)
!6225 = !DILocation(line: 1296, column: 8, scope: !6222)
!6226 = !DILocation(line: 1297, column: 13, scope: !6221)
!6227 = !DILocation(line: 1297, column: 20, scope: !6221)
!6228 = !DILocation(line: 1297, column: 30, scope: !6221)
!6229 = !DILocation(line: 1297, column: 5, scope: !6221)
!6230 = !DILocation(line: 1298, column: 5, scope: !6222)
!6231 = !DILocation(line: 1299, column: 3, scope: !6222)
!6232 = !DILocalVariable(name: "__mptr", scope: !6233, file: !3, line: 1295, type: !209)
!6233 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 1295, column: 3)
!6234 = !DILocation(line: 1295, column: 3, scope: !6233)
!6235 = !DILocation(line: 1295, column: 3, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 1295, column: 3)
!6237 = distinct !{!6237, !6217, !6238}
!6238 = !DILocation(line: 1299, column: 3, scope: !6213)
!6239 = !DILocalVariable(name: "__ret_warn_on", scope: !6240, file: !3, line: 1300, type: !269)
!6240 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 1300, column: 3)
!6241 = !DILocation(line: 1300, column: 3, scope: !6240)
!6242 = !DILocation(line: 1300, column: 3, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 1300, column: 3)
!6244 = !DILocation(line: 1300, column: 3, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1300, column: 3)
!6246 = !DILocation(line: 1300, column: 3, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 1300, column: 3)
!6248 = !DILocation(line: 1300, column: 3, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 1300, column: 3)
!6250 = !{i32 -2140884331, i32 -2140884302, i32 -2140884256, i32 -2140884198, i32 -2140884144, i32 -2140884090, i32 -2140884035, i32 -2140884004}
!6251 = !DILocation(line: 1300, column: 3, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 1300, column: 3)
!6253 = !{i32 -2140883593, i32 -2140883586, i32 -2140883534, i32 -2140883503, i32 -2140883473}
!6254 = !DILocation(line: 1300, column: 3, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 1300, column: 3)
!6256 = !DILocation(line: 1301, column: 3, scope: !6207)
!6257 = !DILocation(line: 1302, column: 13, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 1302, column: 13)
!6259 = !DILocation(line: 1302, column: 18, scope: !6258)
!6260 = !DILocation(line: 1302, column: 13, scope: !6203)
!6261 = !DILocalVariable(name: "entry", scope: !6262, file: !3, line: 1303, type: !210)
!6262 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 1302, column: 31)
!6263 = !DILocation(line: 1303, column: 20, scope: !6262)
!6264 = !DILocalVariable(name: "__mptr", scope: !6265, file: !3, line: 1303, type: !209)
!6265 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 1303, column: 28)
!6266 = !DILocation(line: 1303, column: 28, scope: !6265)
!6267 = !DILocation(line: 1303, column: 28, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6265, file: !3, line: 1303, column: 28)
!6269 = !DILocalVariable(name: "__ret_warn_on", scope: !6270, file: !3, line: 1305, type: !269)
!6270 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 1305, column: 7)
!6271 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 1305, column: 7)
!6272 = !DILocation(line: 1305, column: 7, scope: !6270)
!6273 = !DILocation(line: 1305, column: 7, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 1305, column: 7)
!6275 = !DILocation(line: 1305, column: 7, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 1305, column: 7)
!6277 = !DILocation(line: 1305, column: 7, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 1305, column: 7)
!6279 = !DILocation(line: 1305, column: 7, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 1305, column: 7)
!6281 = !{i32 -2140880592, i32 -2140880563, i32 -2140880517, i32 -2140880459, i32 -2140880405, i32 -2140880351, i32 -2140880296, i32 -2140880265}
!6282 = !DILocation(line: 1305, column: 7, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 1305, column: 7)
!6284 = !{i32 -2140879854, i32 -2140879847, i32 -2140879795, i32 -2140879764, i32 -2140879734}
!6285 = !DILocation(line: 1305, column: 7, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 1305, column: 7)
!6287 = !DILocation(line: 1305, column: 7, scope: !6271)
!6288 = !DILocation(line: 1305, column: 7, scope: !6262)
!6289 = !DILocation(line: 1307, column: 4, scope: !6271)
!6290 = !DILocation(line: 1309, column: 11, scope: !6262)
!6291 = !DILocation(line: 1309, column: 18, scope: !6262)
!6292 = !DILocation(line: 1309, column: 27, scope: !6262)
!6293 = !DILocation(line: 1309, column: 31, scope: !6262)
!6294 = !DILocation(line: 1309, column: 3, scope: !6262)
!6295 = !DILocation(line: 1311, column: 3, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 1310, column: 9)
!6297 = !DILocation(line: 1313, column: 1, scope: !6195)
!6298 = distinct !DISubprogram(name: "msi_desc_to_pci_sysdata", scope: !3, file: !3, line: 1322, type: !4755, scopeLine: 1323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6299 = !DILocalVariable(name: "desc", arg: 1, scope: !6298, file: !3, line: 1322, type: !210)
!6300 = !DILocation(line: 1322, column: 48, scope: !6298)
!6301 = !DILocalVariable(name: "dev", scope: !6298, file: !3, line: 1324, type: !4208)
!6302 = !DILocation(line: 1324, column: 18, scope: !6298)
!6303 = !DILocation(line: 1324, column: 44, scope: !6298)
!6304 = !DILocation(line: 1324, column: 24, scope: !6298)
!6305 = !DILocation(line: 1326, column: 9, scope: !6298)
!6306 = !DILocation(line: 1326, column: 14, scope: !6298)
!6307 = !DILocation(line: 1326, column: 19, scope: !6298)
!6308 = !DILocation(line: 1326, column: 2, scope: !6298)
!6309 = distinct !DISubprogram(name: "pci_msi_domain_write_msg", scope: !3, file: !3, line: 1336, type: !3902, scopeLine: 1337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6310 = !DILocalVariable(name: "irq_data", arg: 1, scope: !6309, file: !3, line: 1336, type: !3834)
!6311 = !DILocation(line: 1336, column: 48, scope: !6309)
!6312 = !DILocalVariable(name: "msg", arg: 2, scope: !6309, file: !3, line: 1336, type: !3904)
!6313 = !DILocation(line: 1336, column: 74, scope: !6309)
!6314 = !DILocalVariable(name: "desc", scope: !6309, file: !3, line: 1338, type: !210)
!6315 = !DILocation(line: 1338, column: 19, scope: !6309)
!6316 = !DILocation(line: 1338, column: 48, scope: !6309)
!6317 = !DILocation(line: 1338, column: 26, scope: !6309)
!6318 = !DILocation(line: 1344, column: 6, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 1344, column: 6)
!6320 = !DILocation(line: 1344, column: 12, scope: !6319)
!6321 = !DILocation(line: 1344, column: 19, scope: !6319)
!6322 = !DILocation(line: 1344, column: 29, scope: !6319)
!6323 = !DILocation(line: 1344, column: 16, scope: !6319)
!6324 = !DILocation(line: 1344, column: 6, scope: !6309)
!6325 = !DILocation(line: 1345, column: 23, scope: !6319)
!6326 = !DILocation(line: 1345, column: 29, scope: !6319)
!6327 = !DILocation(line: 1345, column: 3, scope: !6319)
!6328 = !DILocation(line: 1346, column: 1, scope: !6309)
!6329 = distinct !DISubprogram(name: "irq_data_get_msi_desc", scope: !115, file: !115, line: 850, type: !6330, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6330 = !DISubroutineType(types: !6331)
!6331 = !{!210, !3834}
!6332 = !DILocalVariable(name: "d", arg: 1, scope: !6329, file: !115, line: 850, type: !3834)
!6333 = !DILocation(line: 850, column: 71, scope: !6329)
!6334 = !DILocation(line: 852, column: 9, scope: !6329)
!6335 = !DILocation(line: 852, column: 12, scope: !6329)
!6336 = !DILocation(line: 852, column: 20, scope: !6329)
!6337 = !DILocation(line: 852, column: 2, scope: !6329)
!6338 = distinct !DISubprogram(name: "pci_msi_domain_check_cap", scope: !3, file: !3, line: 1380, type: !4607, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6339 = !DILocalVariable(name: "domain", arg: 1, scope: !6338, file: !3, line: 1380, type: !3667)
!6340 = !DILocation(line: 1380, column: 49, scope: !6338)
!6341 = !DILocalVariable(name: "info", arg: 2, scope: !6338, file: !3, line: 1381, type: !4552)
!6342 = !DILocation(line: 1381, column: 33, scope: !6338)
!6343 = !DILocalVariable(name: "dev", arg: 3, scope: !6338, file: !3, line: 1381, type: !223)
!6344 = !DILocation(line: 1381, column: 54, scope: !6338)
!6345 = !DILocalVariable(name: "desc", scope: !6338, file: !3, line: 1383, type: !210)
!6346 = !DILocation(line: 1383, column: 19, scope: !6338)
!6347 = !DILocalVariable(name: "__mptr", scope: !6348, file: !3, line: 1383, type: !209)
!6348 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 1383, column: 26)
!6349 = !DILocation(line: 1383, column: 26, scope: !6348)
!6350 = !DILocalVariable(name: "__mptr", scope: !6351, file: !3, line: 1383, type: !209)
!6351 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 1383, column: 26)
!6352 = !DILocation(line: 1383, column: 26, scope: !6351)
!6353 = !DILocation(line: 1383, column: 26, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 1383, column: 26)
!6355 = !DILocation(line: 1383, column: 26, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 1383, column: 26)
!6357 = !DILocation(line: 1386, column: 32, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 1386, column: 6)
!6359 = !DILocation(line: 1386, column: 6, scope: !6358)
!6360 = !DILocation(line: 1386, column: 38, scope: !6358)
!6361 = !DILocation(line: 1387, column: 8, scope: !6358)
!6362 = !DILocation(line: 1387, column: 14, scope: !6358)
!6363 = !DILocation(line: 1387, column: 20, scope: !6358)
!6364 = !DILocation(line: 1386, column: 6, scope: !6338)
!6365 = !DILocation(line: 1388, column: 3, scope: !6358)
!6366 = !DILocation(line: 1389, column: 11, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 1389, column: 11)
!6368 = !DILocation(line: 1389, column: 17, scope: !6367)
!6369 = !DILocation(line: 1389, column: 28, scope: !6367)
!6370 = !DILocation(line: 1389, column: 36, scope: !6367)
!6371 = !DILocation(line: 1389, column: 41, scope: !6367)
!6372 = !DILocation(line: 1389, column: 47, scope: !6367)
!6373 = !DILocation(line: 1389, column: 53, scope: !6367)
!6374 = !DILocation(line: 1389, column: 11, scope: !6358)
!6375 = !DILocation(line: 1390, column: 3, scope: !6367)
!6376 = !DILocation(line: 1392, column: 2, scope: !6338)
!6377 = !DILocation(line: 1393, column: 1, scope: !6338)
!6378 = distinct !DISubprogram(name: "pci_msi_desc_is_multi_msi", scope: !3, file: !3, line: 1363, type: !6379, scopeLine: 1364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6379 = !DISubroutineType(types: !6380)
!6380 = !{!501, !210}
!6381 = !DILocalVariable(name: "desc", arg: 1, scope: !6378, file: !3, line: 1363, type: !210)
!6382 = !DILocation(line: 1363, column: 63, scope: !6378)
!6383 = !DILocation(line: 1365, column: 10, scope: !6378)
!6384 = !DILocation(line: 1365, column: 16, scope: !6378)
!6385 = !DILocation(line: 1365, column: 27, scope: !6378)
!6386 = !DILocation(line: 1365, column: 35, scope: !6378)
!6387 = !DILocation(line: 1365, column: 38, scope: !6378)
!6388 = !DILocation(line: 1365, column: 44, scope: !6378)
!6389 = !DILocation(line: 1365, column: 54, scope: !6378)
!6390 = !DILocation(line: 0, scope: !6378)
!6391 = !DILocation(line: 1365, column: 2, scope: !6378)
!6392 = distinct !DISubprogram(name: "pci_msi_create_irq_domain", scope: !3, file: !3, line: 1458, type: !6393, scopeLine: 1461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6393 = !DISubroutineType(types: !6394)
!6394 = !{!3667, !3694, !4552, !3667}
!6395 = !DILocalVariable(name: "fwnode", arg: 1, scope: !6392, file: !3, line: 1458, type: !3694)
!6396 = !DILocation(line: 1458, column: 68, scope: !6392)
!6397 = !DILocalVariable(name: "info", arg: 2, scope: !6392, file: !3, line: 1459, type: !4552)
!6398 = !DILocation(line: 1459, column: 35, scope: !6392)
!6399 = !DILocalVariable(name: "parent", arg: 3, scope: !6392, file: !3, line: 1460, type: !3667)
!6400 = !DILocation(line: 1460, column: 30, scope: !6392)
!6401 = !DILocalVariable(name: "domain", scope: !6392, file: !3, line: 1462, type: !3667)
!6402 = !DILocation(line: 1462, column: 21, scope: !6392)
!6403 = !DILocalVariable(name: "__ret_warn_on", scope: !6404, file: !3, line: 1464, type: !269)
!6404 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 1464, column: 6)
!6405 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 1464, column: 6)
!6406 = !DILocation(line: 1464, column: 6, scope: !6404)
!6407 = !DILocation(line: 1464, column: 6, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 1464, column: 6)
!6409 = !DILocation(line: 1464, column: 6, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 1464, column: 6)
!6411 = !DILocation(line: 1464, column: 6, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1464, column: 6)
!6413 = !DILocation(line: 1464, column: 6, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1464, column: 6)
!6415 = !{i32 -2140869959, i32 -2140869930, i32 -2140869884, i32 -2140869826, i32 -2140869772, i32 -2140869718, i32 -2140869663, i32 -2140869632}
!6416 = !DILocation(line: 1464, column: 6, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1464, column: 6)
!6418 = !{i32 -2140869232, i32 -2140869225, i32 -2140869173, i32 -2140869142, i32 -2140869112}
!6419 = !DILocation(line: 1464, column: 6, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1464, column: 6)
!6421 = !DILocation(line: 1464, column: 6, scope: !6405)
!6422 = !DILocation(line: 1464, column: 6, scope: !6392)
!6423 = !DILocation(line: 1465, column: 3, scope: !6405)
!6424 = !DILocation(line: 1465, column: 9, scope: !6405)
!6425 = !DILocation(line: 1465, column: 15, scope: !6405)
!6426 = !DILocation(line: 1467, column: 6, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 1467, column: 6)
!6428 = !DILocation(line: 1467, column: 12, scope: !6427)
!6429 = !DILocation(line: 1467, column: 18, scope: !6427)
!6430 = !DILocation(line: 1467, column: 6, scope: !6392)
!6431 = !DILocation(line: 1468, column: 33, scope: !6427)
!6432 = !DILocation(line: 1468, column: 3, scope: !6427)
!6433 = !DILocation(line: 1469, column: 6, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 1469, column: 6)
!6435 = !DILocation(line: 1469, column: 12, scope: !6434)
!6436 = !DILocation(line: 1469, column: 18, scope: !6434)
!6437 = !DILocation(line: 1469, column: 6, scope: !6392)
!6438 = !DILocation(line: 1470, column: 34, scope: !6434)
!6439 = !DILocation(line: 1470, column: 3, scope: !6434)
!6440 = !DILocation(line: 1472, column: 2, scope: !6392)
!6441 = !DILocation(line: 1472, column: 8, scope: !6392)
!6442 = !DILocation(line: 1472, column: 14, scope: !6392)
!6443 = !DILocation(line: 1474, column: 3, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 1473, column: 6)
!6445 = !DILocation(line: 1474, column: 9, scope: !6444)
!6446 = !DILocation(line: 1474, column: 15, scope: !6444)
!6447 = !DILocation(line: 1477, column: 2, scope: !6392)
!6448 = !DILocation(line: 1477, column: 8, scope: !6392)
!6449 = !DILocation(line: 1477, column: 14, scope: !6392)
!6450 = !DILocation(line: 1477, column: 20, scope: !6392)
!6451 = !DILocation(line: 1479, column: 33, scope: !6392)
!6452 = !DILocation(line: 1479, column: 41, scope: !6392)
!6453 = !DILocation(line: 1479, column: 47, scope: !6392)
!6454 = !DILocation(line: 1479, column: 11, scope: !6392)
!6455 = !DILocation(line: 1479, column: 9, scope: !6392)
!6456 = !DILocation(line: 1480, column: 7, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 1480, column: 6)
!6458 = !DILocation(line: 1480, column: 6, scope: !6392)
!6459 = !DILocation(line: 1481, column: 3, scope: !6457)
!6460 = !DILocation(line: 1483, column: 30, scope: !6392)
!6461 = !DILocation(line: 1483, column: 2, scope: !6392)
!6462 = !DILocation(line: 1484, column: 9, scope: !6392)
!6463 = !DILocation(line: 1484, column: 2, scope: !6392)
!6464 = !DILocation(line: 1485, column: 1, scope: !6392)
!6465 = distinct !DISubprogram(name: "pci_msi_domain_update_dom_ops", scope: !3, file: !3, line: 1418, type: !6466, scopeLine: 1419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6466 = !DISubroutineType(types: !6467)
!6467 = !{null, !4552}
!6468 = !DILocalVariable(name: "info", arg: 1, scope: !6465, file: !3, line: 1418, type: !4552)
!6469 = !DILocation(line: 1418, column: 67, scope: !6465)
!6470 = !DILocalVariable(name: "ops", scope: !6465, file: !3, line: 1420, type: !4557)
!6471 = !DILocation(line: 1420, column: 25, scope: !6465)
!6472 = !DILocation(line: 1420, column: 31, scope: !6465)
!6473 = !DILocation(line: 1420, column: 37, scope: !6465)
!6474 = !DILocation(line: 1422, column: 6, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 1422, column: 6)
!6476 = !DILocation(line: 1422, column: 10, scope: !6475)
!6477 = !DILocation(line: 1422, column: 6, scope: !6465)
!6478 = !DILocation(line: 1423, column: 3, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 1422, column: 19)
!6480 = !DILocation(line: 1423, column: 9, scope: !6479)
!6481 = !DILocation(line: 1423, column: 13, scope: !6479)
!6482 = !DILocation(line: 1424, column: 2, scope: !6479)
!6483 = !DILocation(line: 1425, column: 7, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1425, column: 7)
!6485 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 1424, column: 9)
!6486 = !DILocation(line: 1425, column: 12, scope: !6484)
!6487 = !DILocation(line: 1425, column: 21, scope: !6484)
!6488 = !DILocation(line: 1425, column: 7, scope: !6485)
!6489 = !DILocation(line: 1426, column: 4, scope: !6484)
!6490 = !DILocation(line: 1426, column: 9, scope: !6484)
!6491 = !DILocation(line: 1426, column: 18, scope: !6484)
!6492 = !DILocation(line: 1427, column: 7, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1427, column: 7)
!6494 = !DILocation(line: 1427, column: 12, scope: !6493)
!6495 = !DILocation(line: 1427, column: 22, scope: !6493)
!6496 = !DILocation(line: 1427, column: 7, scope: !6485)
!6497 = !DILocation(line: 1428, column: 4, scope: !6493)
!6498 = !DILocation(line: 1428, column: 9, scope: !6493)
!6499 = !DILocation(line: 1428, column: 19, scope: !6493)
!6500 = !DILocation(line: 1429, column: 7, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1429, column: 7)
!6502 = !DILocation(line: 1429, column: 12, scope: !6501)
!6503 = !DILocation(line: 1429, column: 25, scope: !6501)
!6504 = !DILocation(line: 1429, column: 7, scope: !6485)
!6505 = !DILocation(line: 1430, column: 4, scope: !6501)
!6506 = !DILocation(line: 1430, column: 9, scope: !6501)
!6507 = !DILocation(line: 1430, column: 22, scope: !6501)
!6508 = !DILocation(line: 1432, column: 1, scope: !6465)
!6509 = distinct !DISubprogram(name: "pci_msi_domain_update_chip_ops", scope: !3, file: !3, line: 1434, type: !6466, scopeLine: 1435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6510 = !DILocalVariable(name: "info", arg: 1, scope: !6509, file: !3, line: 1434, type: !4552)
!6511 = !DILocation(line: 1434, column: 68, scope: !6509)
!6512 = !DILocalVariable(name: "chip", scope: !6509, file: !3, line: 1436, type: !3851)
!6513 = !DILocation(line: 1436, column: 19, scope: !6509)
!6514 = !DILocation(line: 1436, column: 26, scope: !6509)
!6515 = !DILocation(line: 1436, column: 32, scope: !6509)
!6516 = !DILocation(line: 1438, column: 2, scope: !6509)
!6517 = !DILocation(line: 1438, column: 2, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 1438, column: 2)
!6519 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 1438, column: 2)
!6520 = !DILocation(line: 1438, column: 2, scope: !6519)
!6521 = !DILocation(line: 1438, column: 2, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 1438, column: 2)
!6523 = !DILocation(line: 1438, column: 2, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 1438, column: 2)
!6525 = !DILocation(line: 1438, column: 2, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 1438, column: 2)
!6527 = !{i32 -2140871400, i32 -2140871371, i32 -2140871325, i32 -2140871267, i32 -2140871213, i32 -2140871159, i32 -2140871104, i32 -2140871073}
!6528 = !DILocation(line: 1438, column: 2, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1438, column: 2)
!6530 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 1438, column: 2)
!6531 = !{i32 -2140870632, i32 -2140870625, i32 -2140870571, i32 -2140870540, i32 -2140870510}
!6532 = !DILocation(line: 1438, column: 2, scope: !6530)
!6533 = !DILocation(line: 1439, column: 7, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 1439, column: 6)
!6535 = !DILocation(line: 1439, column: 13, scope: !6534)
!6536 = !DILocation(line: 1439, column: 6, scope: !6509)
!6537 = !DILocation(line: 1440, column: 3, scope: !6534)
!6538 = !DILocation(line: 1440, column: 9, scope: !6534)
!6539 = !DILocation(line: 1440, column: 27, scope: !6534)
!6540 = !DILocation(line: 1441, column: 7, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 1441, column: 6)
!6542 = !DILocation(line: 1441, column: 13, scope: !6541)
!6543 = !DILocation(line: 1441, column: 6, scope: !6509)
!6544 = !DILocation(line: 1442, column: 3, scope: !6541)
!6545 = !DILocation(line: 1442, column: 9, scope: !6541)
!6546 = !DILocation(line: 1442, column: 18, scope: !6541)
!6547 = !DILocation(line: 1443, column: 7, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 1443, column: 6)
!6549 = !DILocation(line: 1443, column: 13, scope: !6548)
!6550 = !DILocation(line: 1443, column: 6, scope: !6509)
!6551 = !DILocation(line: 1444, column: 3, scope: !6548)
!6552 = !DILocation(line: 1444, column: 9, scope: !6548)
!6553 = !DILocation(line: 1444, column: 20, scope: !6548)
!6554 = !DILocation(line: 1445, column: 1, scope: !6509)
!6555 = distinct !DISubprogram(name: "pci_msi_domain_get_msi_rid", scope: !3, file: !3, line: 1522, type: !6556, scopeLine: 1523, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6556 = !DISubroutineType(types: !6557)
!6557 = !{!426, !3667, !4208}
!6558 = !DILocalVariable(name: "domain", arg: 1, scope: !6555, file: !3, line: 1522, type: !3667)
!6559 = !DILocation(line: 1522, column: 51, scope: !6555)
!6560 = !DILocalVariable(name: "pdev", arg: 2, scope: !6555, file: !3, line: 1522, type: !4208)
!6561 = !DILocation(line: 1522, column: 75, scope: !6555)
!6562 = !DILocalVariable(name: "of_node", scope: !6555, file: !3, line: 1524, type: !3681)
!6563 = !DILocation(line: 1524, column: 22, scope: !6555)
!6564 = !DILocalVariable(name: "rid", scope: !6555, file: !3, line: 1525, type: !426)
!6565 = !DILocation(line: 1525, column: 6, scope: !6555)
!6566 = !DILocation(line: 1525, column: 23, scope: !6555)
!6567 = !DILocation(line: 1525, column: 12, scope: !6555)
!6568 = !DILocation(line: 1527, column: 25, scope: !6555)
!6569 = !DILocation(line: 1527, column: 46, scope: !6555)
!6570 = !DILocation(line: 1527, column: 2, scope: !6555)
!6571 = !DILocation(line: 1529, column: 35, scope: !6555)
!6572 = !DILocation(line: 1529, column: 12, scope: !6555)
!6573 = !DILocation(line: 1529, column: 10, scope: !6555)
!6574 = !DILocation(line: 1530, column: 8, scope: !6555)
!6575 = !DILocation(line: 1530, column: 33, scope: !6555)
!6576 = !DILocation(line: 1530, column: 39, scope: !6555)
!6577 = !DILocation(line: 1530, column: 44, scope: !6555)
!6578 = !DILocation(line: 1530, column: 53, scope: !6555)
!6579 = !DILocation(line: 1530, column: 18, scope: !6555)
!6580 = !DILocation(line: 1531, column: 21, scope: !6555)
!6581 = !DILocation(line: 1531, column: 27, scope: !6555)
!6582 = !DILocation(line: 1531, column: 32, scope: !6555)
!6583 = !DILocation(line: 1531, column: 4, scope: !6555)
!6584 = !DILocation(line: 1530, column: 6, scope: !6555)
!6585 = !DILocation(line: 1533, column: 9, scope: !6555)
!6586 = !DILocation(line: 1533, column: 2, scope: !6555)
!6587 = distinct !DISubprogram(name: "pci_dev_id", scope: !167, file: !167, line: 643, type: !6588, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6588 = !DISubroutineType(types: !6589)
!6589 = !{!873, !4208}
!6590 = !DILocalVariable(name: "dev", arg: 1, scope: !6587, file: !167, line: 643, type: !4208)
!6591 = !DILocation(line: 643, column: 46, scope: !6587)
!6592 = !DILocation(line: 645, column: 9, scope: !6587)
!6593 = !DILocation(line: 645, column: 2, scope: !6587)
!6594 = distinct !DISubprogram(name: "get_msi_id_cb", scope: !3, file: !3, line: 1501, type: !6595, scopeLine: 1502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6595 = !DISubroutineType(types: !6596)
!6596 = !{!269, !4208, !873, !209}
!6597 = !DILocalVariable(name: "pdev", arg: 1, scope: !6594, file: !3, line: 1501, type: !4208)
!6598 = !DILocation(line: 1501, column: 42, scope: !6594)
!6599 = !DILocalVariable(name: "alias", arg: 2, scope: !6594, file: !3, line: 1501, type: !873)
!6600 = !DILocation(line: 1501, column: 52, scope: !6594)
!6601 = !DILocalVariable(name: "data", arg: 3, scope: !6594, file: !3, line: 1501, type: !209)
!6602 = !DILocation(line: 1501, column: 65, scope: !6594)
!6603 = !DILocalVariable(name: "pa", scope: !6594, file: !3, line: 1503, type: !1429)
!6604 = !DILocation(line: 1503, column: 7, scope: !6594)
!6605 = !DILocation(line: 1503, column: 12, scope: !6594)
!6606 = !DILocalVariable(name: "bus", scope: !6594, file: !3, line: 1504, type: !1366)
!6607 = !DILocation(line: 1504, column: 5, scope: !6594)
!6608 = !DILocation(line: 1504, column: 11, scope: !6594)
!6609 = !DILocation(line: 1506, column: 6, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 1506, column: 6)
!6611 = !DILocation(line: 1506, column: 12, scope: !6610)
!6612 = !DILocation(line: 1506, column: 17, scope: !6610)
!6613 = !DILocation(line: 1506, column: 27, scope: !6610)
!6614 = !DILocation(line: 1506, column: 24, scope: !6610)
!6615 = !DILocation(line: 1506, column: 31, scope: !6610)
!6616 = !DILocation(line: 1506, column: 34, scope: !6610)
!6617 = !DILocation(line: 1506, column: 56, scope: !6610)
!6618 = !DILocation(line: 1506, column: 53, scope: !6610)
!6619 = !DILocation(line: 1506, column: 6, scope: !6594)
!6620 = !DILocation(line: 1507, column: 9, scope: !6610)
!6621 = !DILocation(line: 1507, column: 4, scope: !6610)
!6622 = !DILocation(line: 1507, column: 7, scope: !6610)
!6623 = !DILocation(line: 1507, column: 3, scope: !6610)
!6624 = !DILocation(line: 1509, column: 2, scope: !6594)
!6625 = distinct !DISubprogram(name: "irq_domain_get_of_node", scope: !94, file: !94, line: 225, type: !6626, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6626 = !DISubroutineType(types: !6627)
!6627 = !{!3681, !3667}
!6628 = !DILocalVariable(name: "d", arg: 1, scope: !6625, file: !94, line: 225, type: !3667)
!6629 = !DILocation(line: 225, column: 77, scope: !6625)
!6630 = !DILocalVariable(name: "__to_of_node_fwnode", scope: !6631, file: !94, line: 227, type: !3694)
!6631 = distinct !DILexicalBlock(scope: !6625, file: !94, line: 227, column: 9)
!6632 = !DILocation(line: 227, column: 9, scope: !6631)
!6633 = !DILocalVariable(name: "__mptr", scope: !6634, file: !94, line: 227, type: !209)
!6634 = distinct !DILexicalBlock(scope: !6631, file: !94, line: 227, column: 9)
!6635 = !DILocation(line: 227, column: 9, scope: !6634)
!6636 = !DILocation(line: 227, column: 9, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6634, file: !94, line: 227, column: 9)
!6638 = !DILocation(line: 227, column: 2, scope: !6625)
!6639 = distinct !DISubprogram(name: "iort_msi_map_id", scope: !6640, file: !6640, line: 43, type: !6641, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6640 = !DIFile(filename: "./include/linux/acpi_iort.h", directory: "/home/lizy2001/genbc/linux")
!6641 = !DISubroutineType(types: !6642)
!6642 = !{!426, !223, !426}
!6643 = !DILocalVariable(name: "dev", arg: 1, scope: !6639, file: !6640, line: 43, type: !223)
!6644 = !DILocation(line: 43, column: 50, scope: !6639)
!6645 = !DILocalVariable(name: "id", arg: 2, scope: !6639, file: !6640, line: 43, type: !426)
!6646 = !DILocation(line: 43, column: 59, scope: !6639)
!6647 = !DILocation(line: 44, column: 10, scope: !6639)
!6648 = !DILocation(line: 44, column: 3, scope: !6639)
!6649 = distinct !DISubprogram(name: "pci_msi_get_device_domain", scope: !3, file: !3, line: 1545, type: !6650, scopeLine: 1546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6650 = !DISubroutineType(types: !6651)
!6651 = !{!3667, !4208}
!6652 = !DILocalVariable(name: "pdev", arg: 1, scope: !6649, file: !3, line: 1545, type: !4208)
!6653 = !DILocation(line: 1545, column: 62, scope: !6649)
!6654 = !DILocalVariable(name: "dom", scope: !6649, file: !3, line: 1547, type: !3667)
!6655 = !DILocation(line: 1547, column: 21, scope: !6649)
!6656 = !DILocalVariable(name: "rid", scope: !6649, file: !3, line: 1548, type: !426)
!6657 = !DILocation(line: 1548, column: 6, scope: !6649)
!6658 = !DILocation(line: 1548, column: 23, scope: !6649)
!6659 = !DILocation(line: 1548, column: 12, scope: !6649)
!6660 = !DILocation(line: 1550, column: 25, scope: !6649)
!6661 = !DILocation(line: 1550, column: 46, scope: !6649)
!6662 = !DILocation(line: 1550, column: 2, scope: !6649)
!6663 = !DILocation(line: 1551, column: 38, scope: !6649)
!6664 = !DILocation(line: 1551, column: 44, scope: !6649)
!6665 = !DILocation(line: 1551, column: 49, scope: !6649)
!6666 = !DILocation(line: 1551, column: 8, scope: !6649)
!6667 = !DILocation(line: 1551, column: 6, scope: !6649)
!6668 = !DILocation(line: 1552, column: 7, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 1552, column: 6)
!6670 = !DILocation(line: 1552, column: 6, scope: !6649)
!6671 = !DILocation(line: 1553, column: 33, scope: !6669)
!6672 = !DILocation(line: 1553, column: 39, scope: !6669)
!6673 = !DILocation(line: 1553, column: 44, scope: !6669)
!6674 = !DILocation(line: 1553, column: 9, scope: !6669)
!6675 = !DILocation(line: 1553, column: 7, scope: !6669)
!6676 = !DILocation(line: 1553, column: 3, scope: !6669)
!6677 = !DILocation(line: 1555, column: 9, scope: !6649)
!6678 = !DILocation(line: 1555, column: 2, scope: !6649)
!6679 = distinct !DISubprogram(name: "iort_get_device_domain", scope: !6640, file: !6640, line: 45, type: !6680, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6680 = !DISubroutineType(types: !6681)
!6681 = !{!3667, !223, !426, !93}
!6682 = !DILocalVariable(name: "dev", arg: 1, scope: !6679, file: !6640, line: 46, type: !223)
!6683 = !DILocation(line: 46, column: 17, scope: !6679)
!6684 = !DILocalVariable(name: "id", arg: 2, scope: !6679, file: !6640, line: 46, type: !426)
!6685 = !DILocation(line: 46, column: 26, scope: !6679)
!6686 = !DILocalVariable(name: "bus_token", arg: 3, scope: !6679, file: !6640, line: 46, type: !93)
!6687 = !DILocation(line: 46, column: 56, scope: !6679)
!6688 = !DILocation(line: 47, column: 3, scope: !6679)
!6689 = distinct !DISubprogram(name: "pci_dev_has_special_msi_domain", scope: !3, file: !3, line: 1566, type: !6690, scopeLine: 1567, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6690 = !DISubroutineType(types: !6691)
!6691 = !{!501, !4208}
!6692 = !DILocalVariable(name: "pdev", arg: 1, scope: !6689, file: !3, line: 1566, type: !4208)
!6693 = !DILocation(line: 1566, column: 53, scope: !6689)
!6694 = !DILocalVariable(name: "dom", scope: !6689, file: !3, line: 1568, type: !3667)
!6695 = !DILocation(line: 1568, column: 21, scope: !6689)
!6696 = !DILocation(line: 1568, column: 47, scope: !6689)
!6697 = !DILocation(line: 1568, column: 53, scope: !6689)
!6698 = !DILocation(line: 1568, column: 27, scope: !6689)
!6699 = !DILocation(line: 1570, column: 7, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1570, column: 6)
!6701 = !DILocation(line: 1570, column: 6, scope: !6689)
!6702 = !DILocation(line: 1571, column: 29, scope: !6700)
!6703 = !DILocation(line: 1571, column: 35, scope: !6700)
!6704 = !DILocation(line: 1571, column: 40, scope: !6700)
!6705 = !DILocation(line: 1571, column: 9, scope: !6700)
!6706 = !DILocation(line: 1571, column: 7, scope: !6700)
!6707 = !DILocation(line: 1571, column: 3, scope: !6700)
!6708 = !DILocation(line: 1573, column: 7, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1573, column: 6)
!6710 = !DILocation(line: 1573, column: 6, scope: !6689)
!6711 = !DILocation(line: 1574, column: 3, scope: !6709)
!6712 = !DILocation(line: 1576, column: 9, scope: !6689)
!6713 = !DILocation(line: 1576, column: 14, scope: !6689)
!6714 = !DILocation(line: 1576, column: 24, scope: !6689)
!6715 = !DILocation(line: 1576, column: 2, scope: !6689)
!6716 = !DILocation(line: 1577, column: 1, scope: !6689)
!6717 = distinct !DISubprogram(name: "dev_get_msi_domain", scope: !73, file: !73, line: 639, type: !6718, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6718 = !DISubroutineType(types: !6719)
!6719 = !{!3667, !3718}
!6720 = !DILocalVariable(name: "dev", arg: 1, scope: !6717, file: !73, line: 639, type: !3718)
!6721 = !DILocation(line: 639, column: 74, scope: !6717)
!6722 = !DILocation(line: 642, column: 9, scope: !6717)
!6723 = !DILocation(line: 642, column: 14, scope: !6717)
!6724 = !DILocation(line: 642, column: 2, scope: !6717)
!6725 = distinct !DISubprogram(name: "msix_mask_irq", scope: !3, file: !3, line: 231, type: !6726, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6726 = !DISubroutineType(types: !6727)
!6727 = !{null, !210, !426}
!6728 = !DILocalVariable(name: "desc", arg: 1, scope: !6725, file: !3, line: 231, type: !210)
!6729 = !DILocation(line: 231, column: 44, scope: !6725)
!6730 = !DILocalVariable(name: "flag", arg: 2, scope: !6725, file: !3, line: 231, type: !426)
!6731 = !DILocation(line: 231, column: 54, scope: !6725)
!6732 = !DILocation(line: 233, column: 42, scope: !6725)
!6733 = !DILocation(line: 233, column: 48, scope: !6725)
!6734 = !DILocation(line: 233, column: 17, scope: !6725)
!6735 = !DILocation(line: 233, column: 2, scope: !6725)
!6736 = !DILocation(line: 233, column: 8, scope: !6725)
!6737 = !DILocation(line: 233, column: 15, scope: !6725)
!6738 = !DILocation(line: 234, column: 1, scope: !6725)
!6739 = distinct !DISubprogram(name: "msi_mask_irq", scope: !3, file: !3, line: 189, type: !6740, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6740 = !DISubroutineType(types: !6741)
!6741 = !{null, !210, !426, !426}
!6742 = !DILocalVariable(name: "desc", arg: 1, scope: !6739, file: !3, line: 189, type: !210)
!6743 = !DILocation(line: 189, column: 43, scope: !6739)
!6744 = !DILocalVariable(name: "mask", arg: 2, scope: !6739, file: !3, line: 189, type: !426)
!6745 = !DILocation(line: 189, column: 53, scope: !6739)
!6746 = !DILocalVariable(name: "flag", arg: 3, scope: !6739, file: !3, line: 189, type: !426)
!6747 = !DILocation(line: 189, column: 63, scope: !6739)
!6748 = !DILocation(line: 191, column: 41, scope: !6739)
!6749 = !DILocation(line: 191, column: 47, scope: !6739)
!6750 = !DILocation(line: 191, column: 53, scope: !6739)
!6751 = !DILocation(line: 191, column: 17, scope: !6739)
!6752 = !DILocation(line: 191, column: 2, scope: !6739)
!6753 = !DILocation(line: 191, column: 8, scope: !6739)
!6754 = !DILocation(line: 191, column: 15, scope: !6739)
!6755 = !DILocation(line: 192, column: 1, scope: !6739)
!6756 = distinct !DISubprogram(name: "pci_intx_for_msi", scope: !3, file: !3, line: 407, type: !4837, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6757 = !DILocalVariable(name: "dev", arg: 1, scope: !6756, file: !3, line: 407, type: !4208)
!6758 = !DILocation(line: 407, column: 46, scope: !6756)
!6759 = !DILocalVariable(name: "enable", arg: 2, scope: !6756, file: !3, line: 407, type: !269)
!6760 = !DILocation(line: 407, column: 55, scope: !6756)
!6761 = !DILocation(line: 409, column: 8, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 409, column: 6)
!6763 = !DILocation(line: 409, column: 13, scope: !6762)
!6764 = !DILocation(line: 409, column: 23, scope: !6762)
!6765 = !DILocation(line: 409, column: 6, scope: !6756)
!6766 = !DILocation(line: 410, column: 12, scope: !6762)
!6767 = !DILocation(line: 410, column: 17, scope: !6762)
!6768 = !DILocation(line: 410, column: 3, scope: !6762)
!6769 = !DILocation(line: 411, column: 1, scope: !6756)
!6770 = distinct !DISubprogram(name: "pci_msi_set_enable", scope: !4489, file: !4489, line: 188, type: !4837, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6771 = !DILocalVariable(name: "dev", arg: 1, scope: !6770, file: !4489, line: 188, type: !4208)
!6772 = !DILocation(line: 188, column: 55, scope: !6770)
!6773 = !DILocalVariable(name: "enable", arg: 2, scope: !6770, file: !4489, line: 188, type: !269)
!6774 = !DILocation(line: 188, column: 64, scope: !6770)
!6775 = !DILocalVariable(name: "control", scope: !6770, file: !4489, line: 190, type: !873)
!6776 = !DILocation(line: 190, column: 6, scope: !6770)
!6777 = !DILocation(line: 192, column: 23, scope: !6770)
!6778 = !DILocation(line: 192, column: 28, scope: !6770)
!6779 = !DILocation(line: 192, column: 33, scope: !6770)
!6780 = !DILocation(line: 192, column: 41, scope: !6770)
!6781 = !DILocation(line: 192, column: 2, scope: !6770)
!6782 = !DILocation(line: 193, column: 10, scope: !6770)
!6783 = !DILocation(line: 194, column: 6, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6770, file: !4489, line: 194, column: 6)
!6785 = !DILocation(line: 194, column: 6, scope: !6770)
!6786 = !DILocation(line: 195, column: 11, scope: !6784)
!6787 = !DILocation(line: 195, column: 3, scope: !6784)
!6788 = !DILocation(line: 196, column: 24, scope: !6770)
!6789 = !DILocation(line: 196, column: 29, scope: !6770)
!6790 = !DILocation(line: 196, column: 34, scope: !6770)
!6791 = !DILocation(line: 196, column: 42, scope: !6770)
!6792 = !DILocation(line: 196, column: 59, scope: !6770)
!6793 = !DILocation(line: 196, column: 2, scope: !6770)
!6794 = !DILocation(line: 197, column: 1, scope: !6770)
!6795 = distinct !DISubprogram(name: "msi_mask", scope: !3, file: !3, line: 160, type: !6796, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6796 = !DISubroutineType(types: !6797)
!6797 = !{!426, !7}
!6798 = !DILocalVariable(name: "x", arg: 1, scope: !6795, file: !3, line: 160, type: !7)
!6799 = !DILocation(line: 160, column: 57, scope: !6795)
!6800 = !DILocation(line: 163, column: 6, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 163, column: 6)
!6802 = !DILocation(line: 163, column: 8, scope: !6801)
!6803 = !DILocation(line: 163, column: 6, scope: !6795)
!6804 = !DILocation(line: 164, column: 3, scope: !6801)
!6805 = !DILocation(line: 165, column: 21, scope: !6795)
!6806 = !DILocation(line: 165, column: 18, scope: !6795)
!6807 = !DILocation(line: 165, column: 12, scope: !6795)
!6808 = !DILocation(line: 165, column: 25, scope: !6795)
!6809 = !DILocation(line: 165, column: 2, scope: !6795)
!6810 = !DILocation(line: 166, column: 1, scope: !6795)
!6811 = distinct !DISubprogram(name: "list_empty", scope: !6812, file: !6812, line: 280, type: !6813, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6812 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!6813 = !DISubroutineType(types: !6814)
!6814 = !{!269, !6815}
!6815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6816, size: 64)
!6816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !214)
!6817 = !DILocalVariable(name: "head", arg: 1, scope: !6811, file: !6812, line: 280, type: !6815)
!6818 = !DILocation(line: 280, column: 54, scope: !6811)
!6819 = !DILocation(line: 282, column: 9, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6811, file: !6812, line: 282, column: 9)
!6821 = !DILocation(line: 282, column: 9, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6820, file: !6812, line: 282, column: 9)
!6823 = !DILocation(line: 282, column: 34, scope: !6811)
!6824 = !DILocation(line: 282, column: 31, scope: !6811)
!6825 = !DILocation(line: 282, column: 2, scope: !6811)
!6826 = distinct !DISubprogram(name: "pci_msix_clear_and_set_ctrl", scope: !4489, file: !4489, line: 199, type: !6827, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6827 = !DISubroutineType(types: !6828)
!6828 = !{null, !4208, !873, !873}
!6829 = !DILocalVariable(name: "dev", arg: 1, scope: !6826, file: !4489, line: 199, type: !4208)
!6830 = !DILocation(line: 199, column: 64, scope: !6826)
!6831 = !DILocalVariable(name: "clear", arg: 2, scope: !6826, file: !4489, line: 199, type: !873)
!6832 = !DILocation(line: 199, column: 73, scope: !6826)
!6833 = !DILocalVariable(name: "set", arg: 3, scope: !6826, file: !4489, line: 199, type: !873)
!6834 = !DILocation(line: 199, column: 84, scope: !6826)
!6835 = !DILocalVariable(name: "ctrl", scope: !6826, file: !4489, line: 201, type: !873)
!6836 = !DILocation(line: 201, column: 6, scope: !6826)
!6837 = !DILocation(line: 203, column: 23, scope: !6826)
!6838 = !DILocation(line: 203, column: 28, scope: !6826)
!6839 = !DILocation(line: 203, column: 33, scope: !6826)
!6840 = !DILocation(line: 203, column: 42, scope: !6826)
!6841 = !DILocation(line: 203, column: 2, scope: !6826)
!6842 = !DILocation(line: 204, column: 11, scope: !6826)
!6843 = !DILocation(line: 204, column: 10, scope: !6826)
!6844 = !DILocation(line: 204, column: 7, scope: !6826)
!6845 = !DILocation(line: 205, column: 10, scope: !6826)
!6846 = !DILocation(line: 205, column: 7, scope: !6826)
!6847 = !DILocation(line: 206, column: 24, scope: !6826)
!6848 = !DILocation(line: 206, column: 29, scope: !6826)
!6849 = !DILocation(line: 206, column: 34, scope: !6826)
!6850 = !DILocation(line: 206, column: 43, scope: !6826)
!6851 = !DILocation(line: 206, column: 61, scope: !6826)
!6852 = !DILocation(line: 206, column: 2, scope: !6826)
!6853 = !DILocation(line: 207, column: 1, scope: !6826)
!6854 = distinct !DISubprogram(name: "irq_has_action", scope: !4015, file: !4015, line: 185, type: !6855, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6855 = !DISubroutineType(types: !6856)
!6856 = !{!269, !7}
!6857 = !DILocalVariable(name: "irq", arg: 1, scope: !6854, file: !4015, line: 185, type: !7)
!6858 = !DILocation(line: 185, column: 47, scope: !6854)
!6859 = !DILocation(line: 187, column: 41, scope: !6854)
!6860 = !DILocation(line: 187, column: 29, scope: !6854)
!6861 = !DILocation(line: 187, column: 9, scope: !6854)
!6862 = !DILocation(line: 187, column: 2, scope: !6854)
!6863 = distinct !DISubprogram(name: "pci_msi_teardown_msi_irqs", scope: !3, file: !3, line: 46, type: !4355, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6864 = !DILocalVariable(name: "dev", arg: 1, scope: !6863, file: !3, line: 46, type: !4208)
!6865 = !DILocation(line: 46, column: 55, scope: !6863)
!6866 = !DILocalVariable(name: "domain", scope: !6863, file: !3, line: 48, type: !3667)
!6867 = !DILocation(line: 48, column: 21, scope: !6863)
!6868 = !DILocation(line: 50, column: 31, scope: !6863)
!6869 = !DILocation(line: 50, column: 36, scope: !6863)
!6870 = !DILocation(line: 50, column: 11, scope: !6863)
!6871 = !DILocation(line: 50, column: 9, scope: !6863)
!6872 = !DILocation(line: 51, column: 6, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6863, file: !3, line: 51, column: 6)
!6874 = !DILocation(line: 51, column: 13, scope: !6873)
!6875 = !DILocation(line: 51, column: 40, scope: !6873)
!6876 = !DILocation(line: 51, column: 16, scope: !6873)
!6877 = !DILocation(line: 51, column: 6, scope: !6863)
!6878 = !DILocation(line: 52, column: 24, scope: !6873)
!6879 = !DILocation(line: 52, column: 33, scope: !6873)
!6880 = !DILocation(line: 52, column: 38, scope: !6873)
!6881 = !DILocation(line: 52, column: 3, scope: !6873)
!6882 = !DILocation(line: 54, column: 26, scope: !6873)
!6883 = !DILocation(line: 54, column: 3, scope: !6873)
!6884 = !DILocation(line: 55, column: 1, scope: !6863)
!6885 = distinct !DISubprogram(name: "list_is_last", scope: !6812, file: !6812, line: 270, type: !6886, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6886 = !DISubroutineType(types: !6887)
!6887 = !{!269, !6815, !6815}
!6888 = !DILocalVariable(name: "list", arg: 1, scope: !6885, file: !6812, line: 270, type: !6815)
!6889 = !DILocation(line: 270, column: 56, scope: !6885)
!6890 = !DILocalVariable(name: "head", arg: 2, scope: !6885, file: !6812, line: 271, type: !6815)
!6891 = !DILocation(line: 271, column: 29, scope: !6885)
!6892 = !DILocation(line: 273, column: 9, scope: !6885)
!6893 = !DILocation(line: 273, column: 15, scope: !6885)
!6894 = !DILocation(line: 273, column: 23, scope: !6885)
!6895 = !DILocation(line: 273, column: 20, scope: !6885)
!6896 = !DILocation(line: 273, column: 2, scope: !6885)
!6897 = distinct !DISubprogram(name: "list_del", scope: !6812, file: !6812, line: 144, type: !6898, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6898 = !DISubroutineType(types: !6899)
!6899 = !{null, !218}
!6900 = !DILocalVariable(name: "entry", arg: 1, scope: !6897, file: !6812, line: 144, type: !218)
!6901 = !DILocation(line: 144, column: 47, scope: !6897)
!6902 = !DILocation(line: 146, column: 19, scope: !6897)
!6903 = !DILocation(line: 146, column: 2, scope: !6897)
!6904 = !DILocation(line: 147, column: 2, scope: !6897)
!6905 = !DILocation(line: 147, column: 9, scope: !6897)
!6906 = !DILocation(line: 147, column: 14, scope: !6897)
!6907 = !DILocation(line: 148, column: 2, scope: !6897)
!6908 = !DILocation(line: 148, column: 9, scope: !6897)
!6909 = !DILocation(line: 148, column: 14, scope: !6897)
!6910 = !DILocation(line: 149, column: 1, scope: !6897)
!6911 = distinct !DISubprogram(name: "irq_desc_has_action", scope: !4015, file: !4015, line: 180, type: !6912, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6912 = !DISubroutineType(types: !6913)
!6913 = !{!269, !4013}
!6914 = !DILocalVariable(name: "desc", arg: 1, scope: !6911, file: !4015, line: 180, type: !4013)
!6915 = !DILocation(line: 180, column: 56, scope: !6911)
!6916 = !DILocation(line: 182, column: 9, scope: !6911)
!6917 = !DILocation(line: 182, column: 15, scope: !6911)
!6918 = !DILocation(line: 182, column: 22, scope: !6911)
!6919 = !DILocation(line: 182, column: 2, scope: !6911)
!6920 = distinct !DISubprogram(name: "irq_domain_is_hierarchy", scope: !94, file: !94, line: 524, type: !6921, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6921 = !DISubroutineType(types: !6922)
!6922 = !{!501, !3667}
!6923 = !DILocalVariable(name: "domain", arg: 1, scope: !6920, file: !94, line: 524, type: !3667)
!6924 = !DILocation(line: 524, column: 63, scope: !6920)
!6925 = !DILocation(line: 526, column: 9, scope: !6920)
!6926 = !DILocation(line: 526, column: 17, scope: !6920)
!6927 = !DILocation(line: 526, column: 23, scope: !6920)
!6928 = !DILocation(line: 526, column: 2, scope: !6920)
!6929 = distinct !DISubprogram(name: "arch_teardown_msi_irqs", scope: !140, file: !140, line: 217, type: !4355, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6930 = !DILocalVariable(name: "dev", arg: 1, scope: !6929, file: !140, line: 217, type: !4208)
!6931 = !DILocation(line: 217, column: 59, scope: !6929)
!6932 = !DILocalVariable(name: "__ret_warn_on", scope: !6933, file: !140, line: 219, type: !269)
!6933 = distinct !DILexicalBlock(scope: !6929, file: !140, line: 219, column: 2)
!6934 = !DILocation(line: 219, column: 2, scope: !6933)
!6935 = !DILocation(line: 219, column: 2, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6933, file: !140, line: 219, column: 2)
!6937 = !DILocation(line: 219, column: 2, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6936, file: !140, line: 219, column: 2)
!6939 = !DILocation(line: 219, column: 2, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6938, file: !140, line: 219, column: 2)
!6941 = !DILocation(line: 219, column: 2, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6938, file: !140, line: 219, column: 2)
!6943 = !{i32 -2141724739, i32 -2141724710, i32 -2141724664, i32 -2141724606, i32 -2141724552, i32 -2141724498, i32 -2141724443, i32 -2141724412}
!6944 = !DILocation(line: 219, column: 2, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6938, file: !140, line: 219, column: 2)
!6946 = !{i32 -2141724000, i32 -2141723993, i32 -2141723941, i32 -2141723910, i32 -2141723880}
!6947 = !DILocation(line: 219, column: 2, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6938, file: !140, line: 219, column: 2)
!6949 = !DILocation(line: 220, column: 1, scope: !6929)
!6950 = distinct !DISubprogram(name: "__list_del_entry", scope: !6812, file: !6812, line: 130, type: !6898, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6951 = !DILocalVariable(name: "entry", arg: 1, scope: !6950, file: !6812, line: 130, type: !218)
!6952 = !DILocation(line: 130, column: 55, scope: !6950)
!6953 = !DILocation(line: 132, column: 30, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6950, file: !6812, line: 132, column: 6)
!6955 = !DILocation(line: 132, column: 7, scope: !6954)
!6956 = !DILocation(line: 132, column: 6, scope: !6950)
!6957 = !DILocation(line: 133, column: 3, scope: !6954)
!6958 = !DILocation(line: 135, column: 13, scope: !6950)
!6959 = !DILocation(line: 135, column: 20, scope: !6950)
!6960 = !DILocation(line: 135, column: 26, scope: !6950)
!6961 = !DILocation(line: 135, column: 33, scope: !6950)
!6962 = !DILocation(line: 135, column: 2, scope: !6950)
!6963 = !DILocation(line: 136, column: 1, scope: !6950)
!6964 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !6812, file: !6812, line: 51, type: !6965, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6965 = !DISubroutineType(types: !6966)
!6966 = !{!501, !218}
!6967 = !DILocalVariable(name: "entry", arg: 1, scope: !6964, file: !6812, line: 51, type: !218)
!6968 = !DILocation(line: 51, column: 61, scope: !6964)
!6969 = !DILocation(line: 53, column: 2, scope: !6964)
!6970 = distinct !DISubprogram(name: "__list_del", scope: !6812, file: !6812, line: 110, type: !6971, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6971 = !DISubroutineType(types: !6972)
!6972 = !{null, !218, !218}
!6973 = !DILocalVariable(name: "prev", arg: 1, scope: !6970, file: !6812, line: 110, type: !218)
!6974 = !DILocation(line: 110, column: 50, scope: !6970)
!6975 = !DILocalVariable(name: "next", arg: 2, scope: !6970, file: !6812, line: 110, type: !218)
!6976 = !DILocation(line: 110, column: 75, scope: !6970)
!6977 = !DILocation(line: 112, column: 15, scope: !6970)
!6978 = !DILocation(line: 112, column: 2, scope: !6970)
!6979 = !DILocation(line: 112, column: 8, scope: !6970)
!6980 = !DILocation(line: 112, column: 13, scope: !6970)
!6981 = !DILocation(line: 113, column: 2, scope: !6970)
!6982 = !DILocation(line: 113, column: 2, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6970, file: !6812, line: 113, column: 2)
!6984 = !DILocation(line: 113, column: 2, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6983, file: !6812, line: 113, column: 2)
!6986 = !DILocation(line: 113, column: 2, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6983, file: !6812, line: 113, column: 2)
!6988 = !DILocation(line: 114, column: 1, scope: !6970)
!6989 = distinct !DISubprogram(name: "pci_msi_supported", scope: !3, file: !3, line: 858, type: !4368, scopeLine: 859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!6990 = !DILocalVariable(name: "dev", arg: 1, scope: !6989, file: !3, line: 858, type: !4208)
!6991 = !DILocation(line: 858, column: 46, scope: !6989)
!6992 = !DILocalVariable(name: "nvec", arg: 2, scope: !6989, file: !3, line: 858, type: !269)
!6993 = !DILocation(line: 858, column: 55, scope: !6989)
!6994 = !DILocalVariable(name: "bus", scope: !6989, file: !3, line: 860, type: !4213)
!6995 = !DILocation(line: 860, column: 18, scope: !6989)
!6996 = !DILocation(line: 863, column: 7, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 863, column: 6)
!6998 = !DILocation(line: 863, column: 6, scope: !6989)
!6999 = !DILocation(line: 864, column: 3, scope: !6997)
!7000 = !DILocation(line: 866, column: 7, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 866, column: 6)
!7002 = !DILocation(line: 866, column: 11, scope: !7001)
!7003 = !DILocation(line: 866, column: 14, scope: !7001)
!7004 = !DILocation(line: 866, column: 19, scope: !7001)
!7005 = !DILocation(line: 866, column: 6, scope: !6989)
!7006 = !DILocation(line: 867, column: 3, scope: !7001)
!7007 = !DILocation(line: 874, column: 6, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 874, column: 6)
!7009 = !DILocation(line: 874, column: 11, scope: !7008)
!7010 = !DILocation(line: 874, column: 6, scope: !6989)
!7011 = !DILocation(line: 875, column: 3, scope: !7008)
!7012 = !DILocation(line: 884, column: 13, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 884, column: 2)
!7014 = !DILocation(line: 884, column: 18, scope: !7013)
!7015 = !DILocation(line: 884, column: 11, scope: !7013)
!7016 = !DILocation(line: 884, column: 7, scope: !7013)
!7017 = !DILocation(line: 884, column: 23, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 884, column: 2)
!7019 = !DILocation(line: 884, column: 2, scope: !7013)
!7020 = !DILocation(line: 885, column: 7, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 885, column: 7)
!7022 = !DILocation(line: 885, column: 12, scope: !7021)
!7023 = !DILocation(line: 885, column: 22, scope: !7021)
!7024 = !DILocation(line: 885, column: 7, scope: !7018)
!7025 = !DILocation(line: 886, column: 4, scope: !7021)
!7026 = !DILocation(line: 885, column: 24, scope: !7021)
!7027 = !DILocation(line: 884, column: 34, scope: !7018)
!7028 = !DILocation(line: 884, column: 39, scope: !7018)
!7029 = !DILocation(line: 884, column: 32, scope: !7018)
!7030 = !DILocation(line: 884, column: 2, scope: !7018)
!7031 = distinct !{!7031, !7019, !7032}
!7032 = !DILocation(line: 886, column: 11, scope: !7013)
!7033 = !DILocation(line: 888, column: 2, scope: !6989)
!7034 = !DILocation(line: 889, column: 1, scope: !6989)
!7035 = distinct !DISubprogram(name: "irq_calc_affinity_vectors", scope: !108, file: !108, line: 403, type: !7036, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7036 = !DISubroutineType(types: !7037)
!7037 = !{!7, !7, !7, !7038}
!7038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7039, size: 64)
!7039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5681)
!7040 = !DILocalVariable(name: "minvec", arg: 1, scope: !7035, file: !108, line: 403, type: !7)
!7041 = !DILocation(line: 403, column: 40, scope: !7035)
!7042 = !DILocalVariable(name: "maxvec", arg: 2, scope: !7035, file: !108, line: 403, type: !7)
!7043 = !DILocation(line: 403, column: 61, scope: !7035)
!7044 = !DILocalVariable(name: "affd", arg: 3, scope: !7035, file: !108, line: 404, type: !7038)
!7045 = !DILocation(line: 404, column: 33, scope: !7035)
!7046 = !DILocation(line: 406, column: 9, scope: !7035)
!7047 = !DILocation(line: 406, column: 2, scope: !7035)
!7048 = distinct !DISubprogram(name: "msi_capability_init", scope: !3, file: !3, line: 624, type: !7049, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7049 = !DISubroutineType(types: !7050)
!7050 = !{!269, !4208, !269, !5680}
!7051 = !DILocalVariable(name: "dev", arg: 1, scope: !7048, file: !3, line: 624, type: !4208)
!7052 = !DILocation(line: 624, column: 48, scope: !7048)
!7053 = !DILocalVariable(name: "nvec", arg: 2, scope: !7048, file: !3, line: 624, type: !269)
!7054 = !DILocation(line: 624, column: 57, scope: !7048)
!7055 = !DILocalVariable(name: "affd", arg: 3, scope: !7048, file: !3, line: 625, type: !5680)
!7056 = !DILocation(line: 625, column: 32, scope: !7048)
!7057 = !DILocalVariable(name: "entry", scope: !7048, file: !3, line: 627, type: !210)
!7058 = !DILocation(line: 627, column: 19, scope: !7048)
!7059 = !DILocalVariable(name: "ret", scope: !7048, file: !3, line: 628, type: !269)
!7060 = !DILocation(line: 628, column: 6, scope: !7048)
!7061 = !DILocalVariable(name: "mask", scope: !7048, file: !3, line: 629, type: !7)
!7062 = !DILocation(line: 629, column: 11, scope: !7048)
!7063 = !DILocation(line: 631, column: 21, scope: !7048)
!7064 = !DILocation(line: 631, column: 2, scope: !7048)
!7065 = !DILocation(line: 633, column: 26, scope: !7048)
!7066 = !DILocation(line: 633, column: 31, scope: !7048)
!7067 = !DILocation(line: 633, column: 37, scope: !7048)
!7068 = !DILocation(line: 633, column: 10, scope: !7048)
!7069 = !DILocation(line: 633, column: 8, scope: !7048)
!7070 = !DILocation(line: 634, column: 7, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 634, column: 6)
!7072 = !DILocation(line: 634, column: 6, scope: !7048)
!7073 = !DILocation(line: 635, column: 3, scope: !7071)
!7074 = !DILocation(line: 638, column: 18, scope: !7048)
!7075 = !DILocation(line: 638, column: 25, scope: !7048)
!7076 = !DILocation(line: 638, column: 36, scope: !7048)
!7077 = !DILocation(line: 638, column: 9, scope: !7048)
!7078 = !DILocation(line: 638, column: 7, scope: !7048)
!7079 = !DILocation(line: 639, column: 15, scope: !7048)
!7080 = !DILocation(line: 639, column: 22, scope: !7048)
!7081 = !DILocation(line: 639, column: 28, scope: !7048)
!7082 = !DILocation(line: 639, column: 2, scope: !7048)
!7083 = !DILocation(line: 641, column: 17, scope: !7048)
!7084 = !DILocation(line: 641, column: 24, scope: !7048)
!7085 = !DILocation(line: 641, column: 30, scope: !7048)
!7086 = !DILocation(line: 641, column: 2, scope: !7048)
!7087 = !DILocation(line: 644, column: 31, scope: !7048)
!7088 = !DILocation(line: 644, column: 36, scope: !7048)
!7089 = !DILocation(line: 644, column: 8, scope: !7048)
!7090 = !DILocation(line: 644, column: 6, scope: !7048)
!7091 = !DILocation(line: 645, column: 6, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 645, column: 6)
!7093 = !DILocation(line: 645, column: 6, scope: !7048)
!7094 = !DILocation(line: 646, column: 16, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 645, column: 11)
!7096 = !DILocation(line: 646, column: 23, scope: !7095)
!7097 = !DILocation(line: 646, column: 30, scope: !7095)
!7098 = !DILocation(line: 646, column: 29, scope: !7095)
!7099 = !DILocation(line: 646, column: 3, scope: !7095)
!7100 = !DILocation(line: 647, column: 17, scope: !7095)
!7101 = !DILocation(line: 647, column: 3, scope: !7095)
!7102 = !DILocation(line: 648, column: 10, scope: !7095)
!7103 = !DILocation(line: 648, column: 3, scope: !7095)
!7104 = !DILocation(line: 651, column: 27, scope: !7048)
!7105 = !DILocation(line: 651, column: 8, scope: !7048)
!7106 = !DILocation(line: 651, column: 6, scope: !7048)
!7107 = !DILocation(line: 652, column: 6, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 652, column: 6)
!7109 = !DILocation(line: 652, column: 6, scope: !7048)
!7110 = !DILocation(line: 653, column: 16, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 652, column: 11)
!7112 = !DILocation(line: 653, column: 23, scope: !7111)
!7113 = !DILocation(line: 653, column: 30, scope: !7111)
!7114 = !DILocation(line: 653, column: 29, scope: !7111)
!7115 = !DILocation(line: 653, column: 3, scope: !7111)
!7116 = !DILocation(line: 654, column: 17, scope: !7111)
!7117 = !DILocation(line: 654, column: 3, scope: !7111)
!7118 = !DILocation(line: 655, column: 10, scope: !7111)
!7119 = !DILocation(line: 655, column: 3, scope: !7111)
!7120 = !DILocation(line: 658, column: 27, scope: !7048)
!7121 = !DILocation(line: 658, column: 8, scope: !7048)
!7122 = !DILocation(line: 658, column: 6, scope: !7048)
!7123 = !DILocation(line: 659, column: 6, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 659, column: 6)
!7125 = !DILocation(line: 659, column: 6, scope: !7048)
!7126 = !DILocation(line: 660, column: 16, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 659, column: 11)
!7128 = !DILocation(line: 660, column: 23, scope: !7127)
!7129 = !DILocation(line: 660, column: 30, scope: !7127)
!7130 = !DILocation(line: 660, column: 29, scope: !7127)
!7131 = !DILocation(line: 660, column: 3, scope: !7127)
!7132 = !DILocation(line: 661, column: 17, scope: !7127)
!7133 = !DILocation(line: 661, column: 3, scope: !7127)
!7134 = !DILocation(line: 662, column: 10, scope: !7127)
!7135 = !DILocation(line: 662, column: 3, scope: !7127)
!7136 = !DILocation(line: 666, column: 19, scope: !7048)
!7137 = !DILocation(line: 666, column: 2, scope: !7048)
!7138 = !DILocation(line: 667, column: 21, scope: !7048)
!7139 = !DILocation(line: 667, column: 2, scope: !7048)
!7140 = !DILocation(line: 668, column: 2, scope: !7048)
!7141 = !DILocation(line: 668, column: 7, scope: !7048)
!7142 = !DILocation(line: 668, column: 19, scope: !7048)
!7143 = !DILocation(line: 670, column: 19, scope: !7048)
!7144 = !DILocation(line: 670, column: 2, scope: !7048)
!7145 = !DILocation(line: 671, column: 13, scope: !7048)
!7146 = !DILocation(line: 671, column: 20, scope: !7048)
!7147 = !DILocation(line: 671, column: 2, scope: !7048)
!7148 = !DILocation(line: 671, column: 7, scope: !7048)
!7149 = !DILocation(line: 671, column: 11, scope: !7048)
!7150 = !DILocation(line: 672, column: 2, scope: !7048)
!7151 = !DILocation(line: 673, column: 1, scope: !7048)
!7152 = distinct !DISubprogram(name: "msi_setup_entry", scope: !3, file: !3, line: 559, type: !7153, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7153 = !DISubroutineType(types: !7154)
!7154 = !{!210, !4208, !269, !5680}
!7155 = !DILocalVariable(name: "dev", arg: 1, scope: !7152, file: !3, line: 559, type: !4208)
!7156 = !DILocation(line: 559, column: 33, scope: !7152)
!7157 = !DILocalVariable(name: "nvec", arg: 2, scope: !7152, file: !3, line: 559, type: !269)
!7158 = !DILocation(line: 559, column: 42, scope: !7152)
!7159 = !DILocalVariable(name: "affd", arg: 3, scope: !7152, file: !3, line: 559, type: !5680)
!7160 = !DILocation(line: 559, column: 69, scope: !7152)
!7161 = !DILocalVariable(name: "masks", scope: !7152, file: !3, line: 561, type: !4159)
!7162 = !DILocation(line: 561, column: 28, scope: !7152)
!7163 = !DILocalVariable(name: "entry", scope: !7152, file: !3, line: 562, type: !210)
!7164 = !DILocation(line: 562, column: 19, scope: !7152)
!7165 = !DILocalVariable(name: "control", scope: !7152, file: !3, line: 563, type: !873)
!7166 = !DILocation(line: 563, column: 6, scope: !7152)
!7167 = !DILocation(line: 565, column: 6, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 565, column: 6)
!7169 = !DILocation(line: 565, column: 6, scope: !7152)
!7170 = !DILocation(line: 566, column: 37, scope: !7168)
!7171 = !DILocation(line: 566, column: 43, scope: !7168)
!7172 = !DILocation(line: 566, column: 11, scope: !7168)
!7173 = !DILocation(line: 566, column: 9, scope: !7168)
!7174 = !DILocation(line: 566, column: 3, scope: !7168)
!7175 = !DILocation(line: 569, column: 27, scope: !7152)
!7176 = !DILocation(line: 569, column: 32, scope: !7152)
!7177 = !DILocation(line: 569, column: 37, scope: !7152)
!7178 = !DILocation(line: 569, column: 43, scope: !7152)
!7179 = !DILocation(line: 569, column: 10, scope: !7152)
!7180 = !DILocation(line: 569, column: 8, scope: !7152)
!7181 = !DILocation(line: 570, column: 7, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 570, column: 6)
!7183 = !DILocation(line: 570, column: 6, scope: !7152)
!7184 = !DILocation(line: 571, column: 3, scope: !7182)
!7185 = !DILocation(line: 573, column: 23, scope: !7152)
!7186 = !DILocation(line: 573, column: 28, scope: !7152)
!7187 = !DILocation(line: 573, column: 33, scope: !7152)
!7188 = !DILocation(line: 573, column: 41, scope: !7152)
!7189 = !DILocation(line: 573, column: 2, scope: !7152)
!7190 = !DILocation(line: 575, column: 2, scope: !7152)
!7191 = !DILocation(line: 575, column: 9, scope: !7152)
!7192 = !DILocation(line: 575, column: 20, scope: !7152)
!7193 = !DILocation(line: 575, column: 28, scope: !7152)
!7194 = !DILocation(line: 576, column: 32, scope: !7152)
!7195 = !DILocation(line: 576, column: 40, scope: !7152)
!7196 = !DILocation(line: 576, column: 30, scope: !7152)
!7197 = !DILocation(line: 576, column: 29, scope: !7152)
!7198 = !DILocation(line: 576, column: 2, scope: !7152)
!7199 = !DILocation(line: 576, column: 9, scope: !7152)
!7200 = !DILocation(line: 576, column: 20, scope: !7152)
!7201 = !DILocation(line: 576, column: 27, scope: !7152)
!7202 = !DILocation(line: 577, column: 2, scope: !7152)
!7203 = !DILocation(line: 577, column: 9, scope: !7152)
!7204 = !DILocation(line: 577, column: 20, scope: !7152)
!7205 = !DILocation(line: 577, column: 34, scope: !7152)
!7206 = !DILocation(line: 578, column: 2, scope: !7152)
!7207 = !DILocation(line: 578, column: 9, scope: !7152)
!7208 = !DILocation(line: 578, column: 20, scope: !7152)
!7209 = !DILocation(line: 578, column: 29, scope: !7152)
!7210 = !DILocation(line: 579, column: 33, scope: !7152)
!7211 = !DILocation(line: 579, column: 41, scope: !7152)
!7212 = !DILocation(line: 579, column: 31, scope: !7152)
!7213 = !DILocation(line: 579, column: 30, scope: !7152)
!7214 = !DILocation(line: 579, column: 2, scope: !7152)
!7215 = !DILocation(line: 579, column: 9, scope: !7152)
!7216 = !DILocation(line: 579, column: 20, scope: !7152)
!7217 = !DILocation(line: 579, column: 28, scope: !7152)
!7218 = !DILocation(line: 580, column: 34, scope: !7152)
!7219 = !DILocation(line: 580, column: 39, scope: !7152)
!7220 = !DILocation(line: 580, column: 2, scope: !7152)
!7221 = !DILocation(line: 580, column: 9, scope: !7152)
!7222 = !DILocation(line: 580, column: 20, scope: !7152)
!7223 = !DILocation(line: 580, column: 32, scope: !7152)
!7224 = !DILocation(line: 581, column: 33, scope: !7152)
!7225 = !DILocation(line: 581, column: 41, scope: !7152)
!7226 = !DILocation(line: 581, column: 64, scope: !7152)
!7227 = !DILocation(line: 581, column: 32, scope: !7152)
!7228 = !DILocation(line: 581, column: 2, scope: !7152)
!7229 = !DILocation(line: 581, column: 9, scope: !7152)
!7230 = !DILocation(line: 581, column: 20, scope: !7152)
!7231 = !DILocation(line: 581, column: 30, scope: !7152)
!7232 = !DILocation(line: 582, column: 31, scope: !7152)
!7233 = !DILocation(line: 582, column: 2, scope: !7152)
!7234 = !DILocation(line: 582, column: 9, scope: !7152)
!7235 = !DILocation(line: 582, column: 20, scope: !7152)
!7236 = !DILocation(line: 582, column: 29, scope: !7152)
!7237 = !DILocation(line: 584, column: 6, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 584, column: 6)
!7239 = !DILocation(line: 584, column: 14, scope: !7238)
!7240 = !DILocation(line: 584, column: 6, scope: !7152)
!7241 = !DILocation(line: 585, column: 21, scope: !7238)
!7242 = !DILocation(line: 585, column: 26, scope: !7238)
!7243 = !DILocation(line: 585, column: 34, scope: !7238)
!7244 = !DILocation(line: 585, column: 3, scope: !7238)
!7245 = !DILocation(line: 585, column: 10, scope: !7238)
!7246 = !DILocation(line: 585, column: 19, scope: !7238)
!7247 = !DILocation(line: 587, column: 21, scope: !7238)
!7248 = !DILocation(line: 587, column: 26, scope: !7238)
!7249 = !DILocation(line: 587, column: 34, scope: !7238)
!7250 = !DILocation(line: 587, column: 3, scope: !7238)
!7251 = !DILocation(line: 587, column: 10, scope: !7238)
!7252 = !DILocation(line: 587, column: 19, scope: !7238)
!7253 = !DILocation(line: 590, column: 6, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 590, column: 6)
!7255 = !DILocation(line: 590, column: 13, scope: !7254)
!7256 = !DILocation(line: 590, column: 24, scope: !7254)
!7257 = !DILocation(line: 590, column: 6, scope: !7152)
!7258 = !DILocation(line: 591, column: 25, scope: !7254)
!7259 = !DILocation(line: 591, column: 30, scope: !7254)
!7260 = !DILocation(line: 591, column: 37, scope: !7254)
!7261 = !DILocation(line: 591, column: 48, scope: !7254)
!7262 = !DILocation(line: 591, column: 55, scope: !7254)
!7263 = !DILocation(line: 591, column: 3, scope: !7254)
!7264 = !DILabel(scope: !7152, name: "out", file: !3, line: 593)
!7265 = !DILocation(line: 593, column: 1, scope: !7152)
!7266 = !DILocation(line: 594, column: 8, scope: !7152)
!7267 = !DILocation(line: 594, column: 2, scope: !7152)
!7268 = !DILocation(line: 595, column: 9, scope: !7152)
!7269 = !DILocation(line: 595, column: 2, scope: !7152)
!7270 = distinct !DISubprogram(name: "list_add_tail", scope: !6812, file: !6812, line: 98, type: !6971, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7271 = !DILocalVariable(name: "new", arg: 1, scope: !7270, file: !6812, line: 98, type: !218)
!7272 = !DILocation(line: 98, column: 52, scope: !7270)
!7273 = !DILocalVariable(name: "head", arg: 2, scope: !7270, file: !6812, line: 98, type: !218)
!7274 = !DILocation(line: 98, column: 75, scope: !7270)
!7275 = !DILocation(line: 100, column: 13, scope: !7270)
!7276 = !DILocation(line: 100, column: 18, scope: !7270)
!7277 = !DILocation(line: 100, column: 24, scope: !7270)
!7278 = !DILocation(line: 100, column: 30, scope: !7270)
!7279 = !DILocation(line: 100, column: 2, scope: !7270)
!7280 = !DILocation(line: 101, column: 1, scope: !7270)
!7281 = distinct !DISubprogram(name: "pci_msi_setup_msi_irqs", scope: !3, file: !3, line: 35, type: !7282, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7282 = !DISubroutineType(types: !7283)
!7283 = !{!269, !4208, !269, !269}
!7284 = !DILocalVariable(name: "dev", arg: 1, scope: !7281, file: !3, line: 35, type: !4208)
!7285 = !DILocation(line: 35, column: 51, scope: !7281)
!7286 = !DILocalVariable(name: "nvec", arg: 2, scope: !7281, file: !3, line: 35, type: !269)
!7287 = !DILocation(line: 35, column: 60, scope: !7281)
!7288 = !DILocalVariable(name: "type", arg: 3, scope: !7281, file: !3, line: 35, type: !269)
!7289 = !DILocation(line: 35, column: 70, scope: !7281)
!7290 = !DILocalVariable(name: "domain", scope: !7281, file: !3, line: 37, type: !3667)
!7291 = !DILocation(line: 37, column: 21, scope: !7281)
!7292 = !DILocation(line: 39, column: 31, scope: !7281)
!7293 = !DILocation(line: 39, column: 36, scope: !7281)
!7294 = !DILocation(line: 39, column: 11, scope: !7281)
!7295 = !DILocation(line: 39, column: 9, scope: !7281)
!7296 = !DILocation(line: 40, column: 6, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 40, column: 6)
!7298 = !DILocation(line: 40, column: 13, scope: !7297)
!7299 = !DILocation(line: 40, column: 40, scope: !7297)
!7300 = !DILocation(line: 40, column: 16, scope: !7297)
!7301 = !DILocation(line: 40, column: 6, scope: !7281)
!7302 = !DILocation(line: 41, column: 32, scope: !7297)
!7303 = !DILocation(line: 41, column: 41, scope: !7297)
!7304 = !DILocation(line: 41, column: 46, scope: !7297)
!7305 = !DILocation(line: 41, column: 51, scope: !7297)
!7306 = !DILocation(line: 41, column: 10, scope: !7297)
!7307 = !DILocation(line: 41, column: 3, scope: !7297)
!7308 = !DILocation(line: 43, column: 29, scope: !7281)
!7309 = !DILocation(line: 43, column: 34, scope: !7281)
!7310 = !DILocation(line: 43, column: 40, scope: !7281)
!7311 = !DILocation(line: 43, column: 9, scope: !7281)
!7312 = !DILocation(line: 43, column: 2, scope: !7281)
!7313 = !DILocation(line: 44, column: 1, scope: !7281)
!7314 = distinct !DISubprogram(name: "msi_verify_entries", scope: !3, file: !3, line: 598, type: !4363, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7315 = !DILocalVariable(name: "dev", arg: 1, scope: !7314, file: !3, line: 598, type: !4208)
!7316 = !DILocation(line: 598, column: 47, scope: !7314)
!7317 = !DILocalVariable(name: "entry", scope: !7314, file: !3, line: 600, type: !210)
!7318 = !DILocation(line: 600, column: 19, scope: !7314)
!7319 = !DILocalVariable(name: "__mptr", scope: !7320, file: !3, line: 602, type: !209)
!7320 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 602, column: 2)
!7321 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 602, column: 2)
!7322 = !DILocation(line: 602, column: 2, scope: !7320)
!7323 = !DILocation(line: 602, column: 2, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7320, file: !3, line: 602, column: 2)
!7325 = !DILocation(line: 602, column: 2, scope: !7321)
!7326 = !DILocation(line: 602, column: 2, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 602, column: 2)
!7328 = !DILocation(line: 603, column: 8, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 603, column: 7)
!7330 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 602, column: 37)
!7331 = !DILocation(line: 603, column: 13, scope: !7329)
!7332 = !DILocation(line: 603, column: 26, scope: !7329)
!7333 = !DILocation(line: 603, column: 30, scope: !7329)
!7334 = !DILocation(line: 603, column: 37, scope: !7329)
!7335 = !DILocation(line: 603, column: 41, scope: !7329)
!7336 = !DILocation(line: 603, column: 7, scope: !7330)
!7337 = !DILocation(line: 604, column: 4, scope: !7329)
!7338 = !DILocation(line: 605, column: 3, scope: !7330)
!7339 = !DILocation(line: 607, column: 3, scope: !7330)
!7340 = !DILocalVariable(name: "__mptr", scope: !7341, file: !3, line: 602, type: !209)
!7341 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 602, column: 2)
!7342 = !DILocation(line: 602, column: 2, scope: !7341)
!7343 = !DILocation(line: 602, column: 2, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 602, column: 2)
!7345 = distinct !{!7345, !7325, !7346}
!7346 = !DILocation(line: 608, column: 2, scope: !7321)
!7347 = !DILocation(line: 609, column: 2, scope: !7314)
!7348 = !DILocation(line: 610, column: 1, scope: !7314)
!7349 = distinct !DISubprogram(name: "populate_msi_sysfs", scope: !3, file: !3, line: 481, type: !4363, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7350 = !DILocalVariable(name: "pdev", arg: 1, scope: !7349, file: !3, line: 481, type: !4208)
!7351 = !DILocation(line: 481, column: 47, scope: !7349)
!7352 = !DILocalVariable(name: "msi_attrs", scope: !7349, file: !3, line: 483, type: !337)
!7353 = !DILocation(line: 483, column: 21, scope: !7349)
!7354 = !DILocalVariable(name: "msi_attr", scope: !7349, file: !3, line: 484, type: !321)
!7355 = !DILocation(line: 484, column: 20, scope: !7349)
!7356 = !DILocalVariable(name: "msi_dev_attr", scope: !7349, file: !3, line: 485, type: !4527)
!7357 = !DILocation(line: 485, column: 27, scope: !7349)
!7358 = !DILocalVariable(name: "msi_irq_group", scope: !7349, file: !3, line: 486, type: !7359)
!7359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!7360 = !DILocation(line: 486, column: 26, scope: !7349)
!7361 = !DILocalVariable(name: "msi_irq_groups", scope: !7349, file: !3, line: 487, type: !339)
!7362 = !DILocation(line: 487, column: 33, scope: !7349)
!7363 = !DILocalVariable(name: "entry", scope: !7349, file: !3, line: 488, type: !210)
!7364 = !DILocation(line: 488, column: 19, scope: !7349)
!7365 = !DILocalVariable(name: "ret", scope: !7349, file: !3, line: 489, type: !269)
!7366 = !DILocation(line: 489, column: 6, scope: !7349)
!7367 = !DILocalVariable(name: "num_msi", scope: !7349, file: !3, line: 490, type: !269)
!7368 = !DILocation(line: 490, column: 6, scope: !7349)
!7369 = !DILocalVariable(name: "count", scope: !7349, file: !3, line: 491, type: !269)
!7370 = !DILocation(line: 491, column: 6, scope: !7349)
!7371 = !DILocalVariable(name: "i", scope: !7349, file: !3, line: 492, type: !269)
!7372 = !DILocation(line: 492, column: 6, scope: !7349)
!7373 = !DILocalVariable(name: "__mptr", scope: !7374, file: !3, line: 495, type: !209)
!7374 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 495, column: 2)
!7375 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 495, column: 2)
!7376 = !DILocation(line: 495, column: 2, scope: !7374)
!7377 = !DILocation(line: 495, column: 2, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 495, column: 2)
!7379 = !DILocation(line: 495, column: 2, scope: !7375)
!7380 = !DILocation(line: 495, column: 2, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 495, column: 2)
!7382 = !DILocation(line: 496, column: 14, scope: !7381)
!7383 = !DILocation(line: 496, column: 21, scope: !7381)
!7384 = !DILocation(line: 496, column: 11, scope: !7381)
!7385 = !DILocation(line: 496, column: 3, scope: !7381)
!7386 = !DILocalVariable(name: "__mptr", scope: !7387, file: !3, line: 495, type: !209)
!7387 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 495, column: 2)
!7388 = !DILocation(line: 495, column: 2, scope: !7387)
!7389 = !DILocation(line: 495, column: 2, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7387, file: !3, line: 495, column: 2)
!7391 = distinct !{!7391, !7379, !7392}
!7392 = !DILocation(line: 496, column: 21, scope: !7375)
!7393 = !DILocation(line: 497, column: 7, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 497, column: 6)
!7395 = !DILocation(line: 497, column: 6, scope: !7349)
!7396 = !DILocation(line: 498, column: 3, scope: !7394)
!7397 = !DILocation(line: 501, column: 22, scope: !7349)
!7398 = !DILocation(line: 501, column: 30, scope: !7349)
!7399 = !DILocation(line: 501, column: 14, scope: !7349)
!7400 = !DILocation(line: 501, column: 12, scope: !7349)
!7401 = !DILocation(line: 502, column: 7, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 502, column: 6)
!7403 = !DILocation(line: 502, column: 6, scope: !7349)
!7404 = !DILocation(line: 503, column: 3, scope: !7402)
!7405 = !DILocalVariable(name: "__mptr", scope: !7406, file: !3, line: 504, type: !209)
!7406 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 504, column: 2)
!7407 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 504, column: 2)
!7408 = !DILocation(line: 504, column: 2, scope: !7406)
!7409 = !DILocation(line: 504, column: 2, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 504, column: 2)
!7411 = !DILocation(line: 504, column: 2, scope: !7407)
!7412 = !DILocation(line: 504, column: 2, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 504, column: 2)
!7414 = !DILocation(line: 505, column: 10, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 505, column: 3)
!7416 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 504, column: 38)
!7417 = !DILocation(line: 505, column: 8, scope: !7415)
!7418 = !DILocation(line: 505, column: 15, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7415, file: !3, line: 505, column: 3)
!7420 = !DILocation(line: 505, column: 19, scope: !7419)
!7421 = !DILocation(line: 505, column: 26, scope: !7419)
!7422 = !DILocation(line: 505, column: 17, scope: !7419)
!7423 = !DILocation(line: 505, column: 3, scope: !7415)
!7424 = !DILocation(line: 506, column: 19, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7419, file: !3, line: 505, column: 42)
!7426 = !DILocation(line: 506, column: 17, scope: !7425)
!7427 = !DILocation(line: 507, column: 9, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 507, column: 8)
!7429 = !DILocation(line: 507, column: 8, scope: !7425)
!7430 = !DILocation(line: 508, column: 5, scope: !7428)
!7431 = !DILocation(line: 509, column: 24, scope: !7425)
!7432 = !DILocation(line: 509, column: 38, scope: !7425)
!7433 = !DILocation(line: 509, column: 4, scope: !7425)
!7434 = !DILocation(line: 509, column: 14, scope: !7425)
!7435 = !DILocation(line: 509, column: 21, scope: !7425)
!7436 = !DILocation(line: 511, column: 4, scope: !7425)
!7437 = !DILocation(line: 511, column: 4, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 511, column: 4)
!7439 = !DILocation(line: 513, column: 12, scope: !7425)
!7440 = !DILocation(line: 513, column: 19, scope: !7425)
!7441 = !DILocation(line: 513, column: 25, scope: !7425)
!7442 = !DILocation(line: 513, column: 23, scope: !7425)
!7443 = !DILocation(line: 512, column: 30, scope: !7425)
!7444 = !DILocation(line: 512, column: 4, scope: !7425)
!7445 = !DILocation(line: 512, column: 18, scope: !7425)
!7446 = !DILocation(line: 512, column: 23, scope: !7425)
!7447 = !DILocation(line: 512, column: 28, scope: !7425)
!7448 = !DILocation(line: 514, column: 9, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 514, column: 8)
!7450 = !DILocation(line: 514, column: 23, scope: !7449)
!7451 = !DILocation(line: 514, column: 28, scope: !7449)
!7452 = !DILocation(line: 514, column: 8, scope: !7425)
!7453 = !DILocation(line: 515, column: 5, scope: !7449)
!7454 = !DILocation(line: 516, column: 4, scope: !7425)
!7455 = !DILocation(line: 516, column: 18, scope: !7425)
!7456 = !DILocation(line: 516, column: 23, scope: !7425)
!7457 = !DILocation(line: 516, column: 28, scope: !7425)
!7458 = !DILocation(line: 517, column: 4, scope: !7425)
!7459 = !DILocation(line: 517, column: 18, scope: !7425)
!7460 = !DILocation(line: 517, column: 23, scope: !7425)
!7461 = !DILocation(line: 518, column: 4, scope: !7425)
!7462 = !DILocation(line: 519, column: 3, scope: !7425)
!7463 = !DILocation(line: 505, column: 38, scope: !7419)
!7464 = !DILocation(line: 505, column: 3, scope: !7419)
!7465 = distinct !{!7465, !7423, !7466}
!7466 = !DILocation(line: 519, column: 3, scope: !7415)
!7467 = !DILocation(line: 520, column: 2, scope: !7416)
!7468 = !DILocalVariable(name: "__mptr", scope: !7469, file: !3, line: 504, type: !209)
!7469 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 504, column: 2)
!7470 = !DILocation(line: 504, column: 2, scope: !7469)
!7471 = !DILocation(line: 504, column: 2, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7469, file: !3, line: 504, column: 2)
!7473 = distinct !{!7473, !7411, !7474}
!7474 = !DILocation(line: 520, column: 2, scope: !7407)
!7475 = !DILocation(line: 522, column: 18, scope: !7349)
!7476 = !DILocation(line: 522, column: 16, scope: !7349)
!7477 = !DILocation(line: 523, column: 7, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 523, column: 6)
!7479 = !DILocation(line: 523, column: 6, scope: !7349)
!7480 = !DILocation(line: 524, column: 3, scope: !7478)
!7481 = !DILocation(line: 525, column: 2, scope: !7349)
!7482 = !DILocation(line: 525, column: 17, scope: !7349)
!7483 = !DILocation(line: 525, column: 22, scope: !7349)
!7484 = !DILocation(line: 526, column: 25, scope: !7349)
!7485 = !DILocation(line: 526, column: 2, scope: !7349)
!7486 = !DILocation(line: 526, column: 17, scope: !7349)
!7487 = !DILocation(line: 526, column: 23, scope: !7349)
!7488 = !DILocation(line: 528, column: 19, scope: !7349)
!7489 = !DILocation(line: 528, column: 17, scope: !7349)
!7490 = !DILocation(line: 529, column: 7, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 529, column: 6)
!7492 = !DILocation(line: 529, column: 6, scope: !7349)
!7493 = !DILocation(line: 530, column: 3, scope: !7491)
!7494 = !DILocation(line: 531, column: 22, scope: !7349)
!7495 = !DILocation(line: 531, column: 2, scope: !7349)
!7496 = !DILocation(line: 531, column: 20, scope: !7349)
!7497 = !DILocation(line: 533, column: 29, scope: !7349)
!7498 = !DILocation(line: 533, column: 35, scope: !7349)
!7499 = !DILocation(line: 533, column: 39, scope: !7349)
!7500 = !DILocation(line: 533, column: 45, scope: !7349)
!7501 = !DILocation(line: 533, column: 8, scope: !7349)
!7502 = !DILocation(line: 533, column: 6, scope: !7349)
!7503 = !DILocation(line: 534, column: 6, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 534, column: 6)
!7505 = !DILocation(line: 534, column: 6, scope: !7349)
!7506 = !DILocation(line: 535, column: 3, scope: !7504)
!7507 = !DILocation(line: 536, column: 25, scope: !7349)
!7508 = !DILocation(line: 536, column: 2, scope: !7349)
!7509 = !DILocation(line: 536, column: 8, scope: !7349)
!7510 = !DILocation(line: 536, column: 23, scope: !7349)
!7511 = !DILocation(line: 538, column: 2, scope: !7349)
!7512 = !DILabel(scope: !7349, name: "error_irq_groups", file: !3, line: 540)
!7513 = !DILocation(line: 540, column: 1, scope: !7349)
!7514 = !DILocation(line: 541, column: 8, scope: !7349)
!7515 = !DILocation(line: 541, column: 2, scope: !7349)
!7516 = !DILabel(scope: !7349, name: "error_irq_group", file: !3, line: 542)
!7517 = !DILocation(line: 542, column: 1, scope: !7349)
!7518 = !DILocation(line: 543, column: 8, scope: !7349)
!7519 = !DILocation(line: 543, column: 2, scope: !7349)
!7520 = !DILabel(scope: !7349, name: "error_attrs", file: !3, line: 544)
!7521 = !DILocation(line: 544, column: 1, scope: !7349)
!7522 = !DILocation(line: 545, column: 8, scope: !7349)
!7523 = !DILocation(line: 546, column: 13, scope: !7349)
!7524 = !DILocation(line: 546, column: 23, scope: !7349)
!7525 = !DILocation(line: 546, column: 11, scope: !7349)
!7526 = !DILocation(line: 547, column: 2, scope: !7349)
!7527 = !DILocation(line: 547, column: 9, scope: !7349)
!7528 = !DILocalVariable(name: "__mptr", scope: !7529, file: !3, line: 548, type: !209)
!7529 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 548, column: 18)
!7530 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 547, column: 19)
!7531 = !DILocation(line: 548, column: 18, scope: !7529)
!7532 = !DILocation(line: 548, column: 18, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 548, column: 18)
!7534 = !DILocation(line: 548, column: 16, scope: !7530)
!7535 = !DILocation(line: 549, column: 9, scope: !7530)
!7536 = !DILocation(line: 549, column: 19, scope: !7530)
!7537 = !DILocation(line: 549, column: 3, scope: !7530)
!7538 = !DILocation(line: 550, column: 9, scope: !7530)
!7539 = !DILocation(line: 550, column: 3, scope: !7530)
!7540 = !DILocation(line: 551, column: 3, scope: !7530)
!7541 = !DILocation(line: 552, column: 14, scope: !7530)
!7542 = !DILocation(line: 552, column: 24, scope: !7530)
!7543 = !DILocation(line: 552, column: 12, scope: !7530)
!7544 = distinct !{!7544, !7526, !7545}
!7545 = !DILocation(line: 553, column: 2, scope: !7349)
!7546 = !DILocation(line: 554, column: 8, scope: !7349)
!7547 = !DILocation(line: 554, column: 2, scope: !7349)
!7548 = !DILocation(line: 555, column: 9, scope: !7349)
!7549 = !DILocation(line: 555, column: 2, scope: !7349)
!7550 = !DILocation(line: 556, column: 1, scope: !7349)
!7551 = distinct !DISubprogram(name: "__roundup_pow_of_two", scope: !7552, file: !7552, line: 55, type: !7553, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7552 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!7553 = !DISubroutineType(types: !7554)
!7554 = !{!335, !335}
!7555 = !DILocalVariable(name: "n", arg: 1, scope: !7551, file: !7552, line: 55, type: !335)
!7556 = !DILocation(line: 55, column: 50, scope: !7551)
!7557 = !DILocation(line: 57, column: 25, scope: !7551)
!7558 = !DILocation(line: 57, column: 27, scope: !7551)
!7559 = !DILocation(line: 57, column: 16, scope: !7551)
!7560 = !DILocation(line: 57, column: 13, scope: !7551)
!7561 = !DILocation(line: 57, column: 2, scope: !7551)
!7562 = distinct !DISubprogram(name: "__ilog2_u64", scope: !7552, file: !7552, line: 30, type: !7563, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{!269, !432}
!7565 = !DILocalVariable(name: "x", arg: 1, scope: !7566, file: !7567, line: 366, type: !433)
!7566 = distinct !DISubprogram(name: "fls64", scope: !7567, file: !7567, line: 366, type: !7568, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7567 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7568 = !DISubroutineType(types: !7569)
!7569 = !{!269, !433}
!7570 = !DILocation(line: 366, column: 40, scope: !7566, inlinedAt: !7571)
!7571 = distinct !DILocation(line: 32, column: 9, scope: !7562)
!7572 = !DILocalVariable(name: "bitpos", scope: !7566, file: !7567, line: 368, type: !269)
!7573 = !DILocation(line: 368, column: 6, scope: !7566, inlinedAt: !7571)
!7574 = !DILocalVariable(name: "n", arg: 1, scope: !7562, file: !7552, line: 30, type: !432)
!7575 = !DILocation(line: 30, column: 21, scope: !7562)
!7576 = !DILocation(line: 32, column: 15, scope: !7562)
!7577 = !DILocation(line: 374, column: 2, scope: !7566, inlinedAt: !7571)
!7578 = !DILocation(line: 376, column: 14, scope: !7566, inlinedAt: !7571)
!7579 = !{i32 408322}
!7580 = !DILocation(line: 377, column: 9, scope: !7566, inlinedAt: !7571)
!7581 = !DILocation(line: 377, column: 16, scope: !7566, inlinedAt: !7571)
!7582 = !DILocation(line: 32, column: 18, scope: !7562)
!7583 = !DILocation(line: 32, column: 2, scope: !7562)
!7584 = distinct !DISubprogram(name: "fls_long", scope: !7585, file: !7585, line: 182, type: !7586, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7585 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7586 = !DISubroutineType(types: !7587)
!7587 = !{!7, !335}
!7588 = !DILocation(line: 366, column: 40, scope: !7566, inlinedAt: !7589)
!7589 = distinct !DILocation(line: 186, column: 9, scope: !7584)
!7590 = !DILocation(line: 368, column: 6, scope: !7566, inlinedAt: !7589)
!7591 = !DILocalVariable(name: "l", arg: 1, scope: !7584, file: !7585, line: 182, type: !335)
!7592 = !DILocation(line: 182, column: 47, scope: !7584)
!7593 = !DILocation(line: 186, column: 15, scope: !7584)
!7594 = !DILocation(line: 374, column: 2, scope: !7566, inlinedAt: !7589)
!7595 = !DILocation(line: 376, column: 14, scope: !7566, inlinedAt: !7589)
!7596 = !DILocation(line: 377, column: 9, scope: !7566, inlinedAt: !7589)
!7597 = !DILocation(line: 377, column: 16, scope: !7566, inlinedAt: !7589)
!7598 = !DILocation(line: 186, column: 2, scope: !7584)
!7599 = distinct !DISubprogram(name: "__list_add", scope: !6812, file: !6812, line: 63, type: !7600, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7600 = !DISubroutineType(types: !7601)
!7601 = !{null, !218, !218, !218}
!7602 = !DILocalVariable(name: "new", arg: 1, scope: !7599, file: !6812, line: 63, type: !218)
!7603 = !DILocation(line: 63, column: 49, scope: !7599)
!7604 = !DILocalVariable(name: "prev", arg: 2, scope: !7599, file: !6812, line: 64, type: !218)
!7605 = !DILocation(line: 64, column: 28, scope: !7599)
!7606 = !DILocalVariable(name: "next", arg: 3, scope: !7599, file: !6812, line: 65, type: !218)
!7607 = !DILocation(line: 65, column: 28, scope: !7599)
!7608 = !DILocation(line: 67, column: 24, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7599, file: !6812, line: 67, column: 6)
!7610 = !DILocation(line: 67, column: 29, scope: !7609)
!7611 = !DILocation(line: 67, column: 35, scope: !7609)
!7612 = !DILocation(line: 67, column: 7, scope: !7609)
!7613 = !DILocation(line: 67, column: 6, scope: !7599)
!7614 = !DILocation(line: 68, column: 3, scope: !7609)
!7615 = !DILocation(line: 70, column: 15, scope: !7599)
!7616 = !DILocation(line: 70, column: 2, scope: !7599)
!7617 = !DILocation(line: 70, column: 8, scope: !7599)
!7618 = !DILocation(line: 70, column: 13, scope: !7599)
!7619 = !DILocation(line: 71, column: 14, scope: !7599)
!7620 = !DILocation(line: 71, column: 2, scope: !7599)
!7621 = !DILocation(line: 71, column: 7, scope: !7599)
!7622 = !DILocation(line: 71, column: 12, scope: !7599)
!7623 = !DILocation(line: 72, column: 14, scope: !7599)
!7624 = !DILocation(line: 72, column: 2, scope: !7599)
!7625 = !DILocation(line: 72, column: 7, scope: !7599)
!7626 = !DILocation(line: 72, column: 12, scope: !7599)
!7627 = !DILocation(line: 73, column: 2, scope: !7599)
!7628 = !DILocation(line: 73, column: 2, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7599, file: !6812, line: 73, column: 2)
!7630 = !DILocation(line: 73, column: 2, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7629, file: !6812, line: 73, column: 2)
!7632 = !DILocation(line: 73, column: 2, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7629, file: !6812, line: 73, column: 2)
!7634 = !DILocation(line: 74, column: 1, scope: !7599)
!7635 = distinct !DISubprogram(name: "__list_add_valid", scope: !6812, file: !6812, line: 45, type: !7636, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7636 = !DISubroutineType(types: !7637)
!7637 = !{!501, !218, !218, !218}
!7638 = !DILocalVariable(name: "new", arg: 1, scope: !7635, file: !6812, line: 45, type: !218)
!7639 = !DILocation(line: 45, column: 55, scope: !7635)
!7640 = !DILocalVariable(name: "prev", arg: 2, scope: !7635, file: !6812, line: 46, type: !218)
!7641 = !DILocation(line: 46, column: 23, scope: !7635)
!7642 = !DILocalVariable(name: "next", arg: 3, scope: !7635, file: !6812, line: 47, type: !218)
!7643 = !DILocation(line: 47, column: 23, scope: !7635)
!7644 = !DILocation(line: 49, column: 2, scope: !7635)
!7645 = distinct !DISubprogram(name: "arch_setup_msi_irqs", scope: !140, file: !140, line: 211, type: !7282, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7646 = !DILocalVariable(name: "dev", arg: 1, scope: !7645, file: !140, line: 211, type: !4208)
!7647 = !DILocation(line: 211, column: 55, scope: !7645)
!7648 = !DILocalVariable(name: "nvec", arg: 2, scope: !7645, file: !140, line: 211, type: !269)
!7649 = !DILocation(line: 211, column: 64, scope: !7645)
!7650 = !DILocalVariable(name: "type", arg: 3, scope: !7645, file: !140, line: 211, type: !269)
!7651 = !DILocation(line: 211, column: 74, scope: !7645)
!7652 = !DILocalVariable(name: "__ret_warn_on", scope: !7653, file: !140, line: 213, type: !269)
!7653 = distinct !DILexicalBlock(scope: !7645, file: !140, line: 213, column: 2)
!7654 = !DILocation(line: 213, column: 2, scope: !7653)
!7655 = !DILocation(line: 213, column: 2, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7653, file: !140, line: 213, column: 2)
!7657 = !DILocation(line: 213, column: 2, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7656, file: !140, line: 213, column: 2)
!7659 = !DILocation(line: 213, column: 2, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7658, file: !140, line: 213, column: 2)
!7661 = !DILocation(line: 213, column: 2, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7658, file: !140, line: 213, column: 2)
!7663 = !{i32 -2141726367, i32 -2141726338, i32 -2141726292, i32 -2141726234, i32 -2141726180, i32 -2141726126, i32 -2141726071, i32 -2141726040}
!7664 = !DILocation(line: 213, column: 2, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7658, file: !140, line: 213, column: 2)
!7666 = !{i32 -2141725628, i32 -2141725621, i32 -2141725569, i32 -2141725538, i32 -2141725508}
!7667 = !DILocation(line: 213, column: 2, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7658, file: !140, line: 213, column: 2)
!7669 = !DILocation(line: 214, column: 2, scope: !7645)
!7670 = distinct !DISubprogram(name: "kcalloc", scope: !202, file: !202, line: 601, type: !7671, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7671 = !DISubroutineType(types: !7672)
!7672 = !{!209, !332, !332, !757}
!7673 = !DILocalVariable(name: "n", arg: 1, scope: !7670, file: !202, line: 601, type: !332)
!7674 = !DILocation(line: 601, column: 36, scope: !7670)
!7675 = !DILocalVariable(name: "size", arg: 2, scope: !7670, file: !202, line: 601, type: !332)
!7676 = !DILocation(line: 601, column: 46, scope: !7670)
!7677 = !DILocalVariable(name: "flags", arg: 3, scope: !7670, file: !202, line: 601, type: !757)
!7678 = !DILocation(line: 601, column: 58, scope: !7670)
!7679 = !DILocation(line: 603, column: 23, scope: !7670)
!7680 = !DILocation(line: 603, column: 26, scope: !7670)
!7681 = !DILocation(line: 603, column: 32, scope: !7670)
!7682 = !DILocation(line: 603, column: 38, scope: !7670)
!7683 = !DILocation(line: 603, column: 9, scope: !7670)
!7684 = !DILocation(line: 603, column: 2, scope: !7670)
!7685 = distinct !DISubprogram(name: "kzalloc", scope: !202, file: !202, line: 662, type: !7686, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7686 = !DISubroutineType(types: !7687)
!7687 = !{!209, !332, !757}
!7688 = !DILocalVariable(name: "s", arg: 1, scope: !7689, file: !202, line: 445, type: !949)
!7689 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !202, file: !202, line: 445, type: !7690, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7690 = !DISubroutineType(types: !7691)
!7691 = !{!209, !949, !757, !332}
!7692 = !DILocation(line: 445, column: 72, scope: !7689, inlinedAt: !7693)
!7693 = distinct !DILocation(line: 552, column: 10, scope: !7694, inlinedAt: !7697)
!7694 = distinct !DILexicalBlock(scope: !7695, file: !202, line: 540, column: 34)
!7695 = distinct !DILexicalBlock(scope: !7696, file: !202, line: 540, column: 6)
!7696 = distinct !DISubprogram(name: "kmalloc", scope: !202, file: !202, line: 538, type: !7686, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7697 = distinct !DILocation(line: 664, column: 9, scope: !7685)
!7698 = !DILocalVariable(name: "flags", arg: 2, scope: !7689, file: !202, line: 446, type: !757)
!7699 = !DILocation(line: 446, column: 9, scope: !7689, inlinedAt: !7693)
!7700 = !DILocalVariable(name: "size", arg: 3, scope: !7689, file: !202, line: 446, type: !332)
!7701 = !DILocation(line: 446, column: 23, scope: !7689, inlinedAt: !7693)
!7702 = !DILocalVariable(name: "ret", scope: !7689, file: !202, line: 448, type: !209)
!7703 = !DILocation(line: 448, column: 8, scope: !7689, inlinedAt: !7693)
!7704 = !DILocalVariable(name: "flags", arg: 1, scope: !7705, file: !202, line: 318, type: !757)
!7705 = distinct !DISubprogram(name: "kmalloc_type", scope: !202, file: !202, line: 318, type: !7706, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7706 = !DISubroutineType(types: !7707)
!7707 = !{!201, !757}
!7708 = !DILocation(line: 318, column: 67, scope: !7705, inlinedAt: !7709)
!7709 = distinct !DILocation(line: 553, column: 20, scope: !7694, inlinedAt: !7697)
!7710 = !DILocalVariable(name: "size", arg: 1, scope: !7711, file: !202, line: 346, type: !332)
!7711 = distinct !DISubprogram(name: "kmalloc_index", scope: !202, file: !202, line: 346, type: !7712, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7712 = !DISubroutineType(types: !7713)
!7713 = !{!7, !332}
!7714 = !DILocation(line: 346, column: 58, scope: !7711, inlinedAt: !7715)
!7715 = distinct !DILocation(line: 547, column: 11, scope: !7694, inlinedAt: !7697)
!7716 = !DILocalVariable(name: "size", arg: 1, scope: !7717, file: !202, line: 472, type: !332)
!7717 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !202, file: !202, line: 472, type: !7718, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7718 = !DISubroutineType(types: !7719)
!7719 = !{!209, !332, !757, !7}
!7720 = !DILocation(line: 472, column: 28, scope: !7717, inlinedAt: !7721)
!7721 = distinct !DILocation(line: 481, column: 9, scope: !7722, inlinedAt: !7723)
!7722 = distinct !DISubprogram(name: "kmalloc_large", scope: !202, file: !202, line: 478, type: !7686, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7723 = distinct !DILocation(line: 545, column: 11, scope: !7724, inlinedAt: !7697)
!7724 = distinct !DILexicalBlock(scope: !7694, file: !202, line: 544, column: 7)
!7725 = !DILocalVariable(name: "flags", arg: 2, scope: !7717, file: !202, line: 472, type: !757)
!7726 = !DILocation(line: 472, column: 40, scope: !7717, inlinedAt: !7721)
!7727 = !DILocalVariable(name: "order", arg: 3, scope: !7717, file: !202, line: 472, type: !7)
!7728 = !DILocation(line: 472, column: 60, scope: !7717, inlinedAt: !7721)
!7729 = !DILocalVariable(name: "size", arg: 1, scope: !7722, file: !202, line: 478, type: !332)
!7730 = !DILocation(line: 478, column: 51, scope: !7722, inlinedAt: !7723)
!7731 = !DILocalVariable(name: "flags", arg: 2, scope: !7722, file: !202, line: 478, type: !757)
!7732 = !DILocation(line: 478, column: 63, scope: !7722, inlinedAt: !7723)
!7733 = !DILocalVariable(name: "order", scope: !7722, file: !202, line: 480, type: !7)
!7734 = !DILocation(line: 480, column: 15, scope: !7722, inlinedAt: !7723)
!7735 = !DILocalVariable(name: "size", arg: 1, scope: !7696, file: !202, line: 538, type: !332)
!7736 = !DILocation(line: 538, column: 45, scope: !7696, inlinedAt: !7697)
!7737 = !DILocalVariable(name: "flags", arg: 2, scope: !7696, file: !202, line: 538, type: !757)
!7738 = !DILocation(line: 538, column: 57, scope: !7696, inlinedAt: !7697)
!7739 = !DILocalVariable(name: "index", scope: !7694, file: !202, line: 542, type: !7)
!7740 = !DILocation(line: 542, column: 16, scope: !7694, inlinedAt: !7697)
!7741 = !DILocalVariable(name: "size", arg: 1, scope: !7685, file: !202, line: 662, type: !332)
!7742 = !DILocation(line: 662, column: 36, scope: !7685)
!7743 = !DILocalVariable(name: "flags", arg: 2, scope: !7685, file: !202, line: 662, type: !757)
!7744 = !DILocation(line: 662, column: 48, scope: !7685)
!7745 = !DILocation(line: 664, column: 17, scope: !7685)
!7746 = !DILocation(line: 664, column: 23, scope: !7685)
!7747 = !DILocation(line: 664, column: 29, scope: !7685)
!7748 = !DILocation(line: 540, column: 27, scope: !7695, inlinedAt: !7697)
!7749 = !DILocation(line: 540, column: 6, scope: !7695, inlinedAt: !7697)
!7750 = !DILocation(line: 540, column: 6, scope: !7696, inlinedAt: !7697)
!7751 = !DILocation(line: 544, column: 7, scope: !7724, inlinedAt: !7697)
!7752 = !DILocation(line: 544, column: 12, scope: !7724, inlinedAt: !7697)
!7753 = !DILocation(line: 544, column: 7, scope: !7694, inlinedAt: !7697)
!7754 = !DILocation(line: 545, column: 25, scope: !7724, inlinedAt: !7697)
!7755 = !DILocation(line: 545, column: 31, scope: !7724, inlinedAt: !7697)
!7756 = !DILocation(line: 480, column: 33, scope: !7722, inlinedAt: !7723)
!7757 = !DILocation(line: 480, column: 23, scope: !7722, inlinedAt: !7723)
!7758 = !DILocation(line: 481, column: 29, scope: !7722, inlinedAt: !7723)
!7759 = !DILocation(line: 481, column: 35, scope: !7722, inlinedAt: !7723)
!7760 = !DILocation(line: 481, column: 42, scope: !7722, inlinedAt: !7723)
!7761 = !DILocation(line: 474, column: 23, scope: !7717, inlinedAt: !7721)
!7762 = !DILocation(line: 474, column: 29, scope: !7717, inlinedAt: !7721)
!7763 = !DILocation(line: 474, column: 36, scope: !7717, inlinedAt: !7721)
!7764 = !DILocation(line: 474, column: 9, scope: !7717, inlinedAt: !7721)
!7765 = !DILocation(line: 545, column: 4, scope: !7724, inlinedAt: !7697)
!7766 = !DILocation(line: 547, column: 25, scope: !7694, inlinedAt: !7697)
!7767 = !DILocation(line: 348, column: 7, scope: !7768, inlinedAt: !7715)
!7768 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 348, column: 6)
!7769 = !DILocation(line: 348, column: 6, scope: !7711, inlinedAt: !7715)
!7770 = !DILocation(line: 349, column: 3, scope: !7768, inlinedAt: !7715)
!7771 = !DILocation(line: 351, column: 6, scope: !7772, inlinedAt: !7715)
!7772 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 351, column: 6)
!7773 = !DILocation(line: 351, column: 11, scope: !7772, inlinedAt: !7715)
!7774 = !DILocation(line: 351, column: 6, scope: !7711, inlinedAt: !7715)
!7775 = !DILocation(line: 352, column: 3, scope: !7772, inlinedAt: !7715)
!7776 = !DILocation(line: 354, column: 32, scope: !7777, inlinedAt: !7715)
!7777 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 354, column: 6)
!7778 = !DILocation(line: 354, column: 37, scope: !7777, inlinedAt: !7715)
!7779 = !DILocation(line: 354, column: 42, scope: !7777, inlinedAt: !7715)
!7780 = !DILocation(line: 354, column: 45, scope: !7777, inlinedAt: !7715)
!7781 = !DILocation(line: 354, column: 50, scope: !7777, inlinedAt: !7715)
!7782 = !DILocation(line: 354, column: 6, scope: !7711, inlinedAt: !7715)
!7783 = !DILocation(line: 355, column: 3, scope: !7777, inlinedAt: !7715)
!7784 = !DILocation(line: 356, column: 32, scope: !7785, inlinedAt: !7715)
!7785 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 356, column: 6)
!7786 = !DILocation(line: 356, column: 37, scope: !7785, inlinedAt: !7715)
!7787 = !DILocation(line: 356, column: 43, scope: !7785, inlinedAt: !7715)
!7788 = !DILocation(line: 356, column: 46, scope: !7785, inlinedAt: !7715)
!7789 = !DILocation(line: 356, column: 51, scope: !7785, inlinedAt: !7715)
!7790 = !DILocation(line: 356, column: 6, scope: !7711, inlinedAt: !7715)
!7791 = !DILocation(line: 357, column: 3, scope: !7785, inlinedAt: !7715)
!7792 = !DILocation(line: 358, column: 6, scope: !7793, inlinedAt: !7715)
!7793 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 358, column: 6)
!7794 = !DILocation(line: 358, column: 11, scope: !7793, inlinedAt: !7715)
!7795 = !DILocation(line: 358, column: 6, scope: !7711, inlinedAt: !7715)
!7796 = !DILocation(line: 358, column: 26, scope: !7793, inlinedAt: !7715)
!7797 = !DILocation(line: 359, column: 6, scope: !7798, inlinedAt: !7715)
!7798 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 359, column: 6)
!7799 = !DILocation(line: 359, column: 11, scope: !7798, inlinedAt: !7715)
!7800 = !DILocation(line: 359, column: 6, scope: !7711, inlinedAt: !7715)
!7801 = !DILocation(line: 359, column: 26, scope: !7798, inlinedAt: !7715)
!7802 = !DILocation(line: 360, column: 6, scope: !7803, inlinedAt: !7715)
!7803 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 360, column: 6)
!7804 = !DILocation(line: 360, column: 11, scope: !7803, inlinedAt: !7715)
!7805 = !DILocation(line: 360, column: 6, scope: !7711, inlinedAt: !7715)
!7806 = !DILocation(line: 360, column: 26, scope: !7803, inlinedAt: !7715)
!7807 = !DILocation(line: 361, column: 6, scope: !7808, inlinedAt: !7715)
!7808 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 361, column: 6)
!7809 = !DILocation(line: 361, column: 11, scope: !7808, inlinedAt: !7715)
!7810 = !DILocation(line: 361, column: 6, scope: !7711, inlinedAt: !7715)
!7811 = !DILocation(line: 361, column: 26, scope: !7808, inlinedAt: !7715)
!7812 = !DILocation(line: 362, column: 6, scope: !7813, inlinedAt: !7715)
!7813 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 362, column: 6)
!7814 = !DILocation(line: 362, column: 11, scope: !7813, inlinedAt: !7715)
!7815 = !DILocation(line: 362, column: 6, scope: !7711, inlinedAt: !7715)
!7816 = !DILocation(line: 362, column: 26, scope: !7813, inlinedAt: !7715)
!7817 = !DILocation(line: 363, column: 6, scope: !7818, inlinedAt: !7715)
!7818 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 363, column: 6)
!7819 = !DILocation(line: 363, column: 11, scope: !7818, inlinedAt: !7715)
!7820 = !DILocation(line: 363, column: 6, scope: !7711, inlinedAt: !7715)
!7821 = !DILocation(line: 363, column: 26, scope: !7818, inlinedAt: !7715)
!7822 = !DILocation(line: 364, column: 6, scope: !7823, inlinedAt: !7715)
!7823 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 364, column: 6)
!7824 = !DILocation(line: 364, column: 11, scope: !7823, inlinedAt: !7715)
!7825 = !DILocation(line: 364, column: 6, scope: !7711, inlinedAt: !7715)
!7826 = !DILocation(line: 364, column: 26, scope: !7823, inlinedAt: !7715)
!7827 = !DILocation(line: 365, column: 6, scope: !7828, inlinedAt: !7715)
!7828 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 365, column: 6)
!7829 = !DILocation(line: 365, column: 11, scope: !7828, inlinedAt: !7715)
!7830 = !DILocation(line: 365, column: 6, scope: !7711, inlinedAt: !7715)
!7831 = !DILocation(line: 365, column: 26, scope: !7828, inlinedAt: !7715)
!7832 = !DILocation(line: 366, column: 6, scope: !7833, inlinedAt: !7715)
!7833 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 366, column: 6)
!7834 = !DILocation(line: 366, column: 11, scope: !7833, inlinedAt: !7715)
!7835 = !DILocation(line: 366, column: 6, scope: !7711, inlinedAt: !7715)
!7836 = !DILocation(line: 366, column: 26, scope: !7833, inlinedAt: !7715)
!7837 = !DILocation(line: 367, column: 6, scope: !7838, inlinedAt: !7715)
!7838 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 367, column: 6)
!7839 = !DILocation(line: 367, column: 11, scope: !7838, inlinedAt: !7715)
!7840 = !DILocation(line: 367, column: 6, scope: !7711, inlinedAt: !7715)
!7841 = !DILocation(line: 367, column: 26, scope: !7838, inlinedAt: !7715)
!7842 = !DILocation(line: 368, column: 6, scope: !7843, inlinedAt: !7715)
!7843 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 368, column: 6)
!7844 = !DILocation(line: 368, column: 11, scope: !7843, inlinedAt: !7715)
!7845 = !DILocation(line: 368, column: 6, scope: !7711, inlinedAt: !7715)
!7846 = !DILocation(line: 368, column: 26, scope: !7843, inlinedAt: !7715)
!7847 = !DILocation(line: 369, column: 6, scope: !7848, inlinedAt: !7715)
!7848 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 369, column: 6)
!7849 = !DILocation(line: 369, column: 11, scope: !7848, inlinedAt: !7715)
!7850 = !DILocation(line: 369, column: 6, scope: !7711, inlinedAt: !7715)
!7851 = !DILocation(line: 369, column: 26, scope: !7848, inlinedAt: !7715)
!7852 = !DILocation(line: 370, column: 6, scope: !7853, inlinedAt: !7715)
!7853 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 370, column: 6)
!7854 = !DILocation(line: 370, column: 11, scope: !7853, inlinedAt: !7715)
!7855 = !DILocation(line: 370, column: 6, scope: !7711, inlinedAt: !7715)
!7856 = !DILocation(line: 370, column: 26, scope: !7853, inlinedAt: !7715)
!7857 = !DILocation(line: 371, column: 6, scope: !7858, inlinedAt: !7715)
!7858 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 371, column: 6)
!7859 = !DILocation(line: 371, column: 11, scope: !7858, inlinedAt: !7715)
!7860 = !DILocation(line: 371, column: 6, scope: !7711, inlinedAt: !7715)
!7861 = !DILocation(line: 371, column: 26, scope: !7858, inlinedAt: !7715)
!7862 = !DILocation(line: 372, column: 6, scope: !7863, inlinedAt: !7715)
!7863 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 372, column: 6)
!7864 = !DILocation(line: 372, column: 11, scope: !7863, inlinedAt: !7715)
!7865 = !DILocation(line: 372, column: 6, scope: !7711, inlinedAt: !7715)
!7866 = !DILocation(line: 372, column: 26, scope: !7863, inlinedAt: !7715)
!7867 = !DILocation(line: 373, column: 6, scope: !7868, inlinedAt: !7715)
!7868 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 373, column: 6)
!7869 = !DILocation(line: 373, column: 11, scope: !7868, inlinedAt: !7715)
!7870 = !DILocation(line: 373, column: 6, scope: !7711, inlinedAt: !7715)
!7871 = !DILocation(line: 373, column: 26, scope: !7868, inlinedAt: !7715)
!7872 = !DILocation(line: 374, column: 6, scope: !7873, inlinedAt: !7715)
!7873 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 374, column: 6)
!7874 = !DILocation(line: 374, column: 11, scope: !7873, inlinedAt: !7715)
!7875 = !DILocation(line: 374, column: 6, scope: !7711, inlinedAt: !7715)
!7876 = !DILocation(line: 374, column: 26, scope: !7873, inlinedAt: !7715)
!7877 = !DILocation(line: 375, column: 6, scope: !7878, inlinedAt: !7715)
!7878 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 375, column: 6)
!7879 = !DILocation(line: 375, column: 11, scope: !7878, inlinedAt: !7715)
!7880 = !DILocation(line: 375, column: 6, scope: !7711, inlinedAt: !7715)
!7881 = !DILocation(line: 375, column: 27, scope: !7878, inlinedAt: !7715)
!7882 = !DILocation(line: 376, column: 6, scope: !7883, inlinedAt: !7715)
!7883 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 376, column: 6)
!7884 = !DILocation(line: 376, column: 11, scope: !7883, inlinedAt: !7715)
!7885 = !DILocation(line: 376, column: 6, scope: !7711, inlinedAt: !7715)
!7886 = !DILocation(line: 376, column: 32, scope: !7883, inlinedAt: !7715)
!7887 = !DILocation(line: 377, column: 6, scope: !7888, inlinedAt: !7715)
!7888 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 377, column: 6)
!7889 = !DILocation(line: 377, column: 11, scope: !7888, inlinedAt: !7715)
!7890 = !DILocation(line: 377, column: 6, scope: !7711, inlinedAt: !7715)
!7891 = !DILocation(line: 377, column: 32, scope: !7888, inlinedAt: !7715)
!7892 = !DILocation(line: 378, column: 6, scope: !7893, inlinedAt: !7715)
!7893 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 378, column: 6)
!7894 = !DILocation(line: 378, column: 11, scope: !7893, inlinedAt: !7715)
!7895 = !DILocation(line: 378, column: 6, scope: !7711, inlinedAt: !7715)
!7896 = !DILocation(line: 378, column: 32, scope: !7893, inlinedAt: !7715)
!7897 = !DILocation(line: 379, column: 6, scope: !7898, inlinedAt: !7715)
!7898 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 379, column: 6)
!7899 = !DILocation(line: 379, column: 11, scope: !7898, inlinedAt: !7715)
!7900 = !DILocation(line: 379, column: 6, scope: !7711, inlinedAt: !7715)
!7901 = !DILocation(line: 379, column: 33, scope: !7898, inlinedAt: !7715)
!7902 = !DILocation(line: 380, column: 6, scope: !7903, inlinedAt: !7715)
!7903 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 380, column: 6)
!7904 = !DILocation(line: 380, column: 11, scope: !7903, inlinedAt: !7715)
!7905 = !DILocation(line: 380, column: 6, scope: !7711, inlinedAt: !7715)
!7906 = !DILocation(line: 380, column: 33, scope: !7903, inlinedAt: !7715)
!7907 = !DILocation(line: 381, column: 6, scope: !7908, inlinedAt: !7715)
!7908 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 381, column: 6)
!7909 = !DILocation(line: 381, column: 11, scope: !7908, inlinedAt: !7715)
!7910 = !DILocation(line: 381, column: 6, scope: !7711, inlinedAt: !7715)
!7911 = !DILocation(line: 381, column: 33, scope: !7908, inlinedAt: !7715)
!7912 = !DILocation(line: 382, column: 2, scope: !7913, inlinedAt: !7715)
!7913 = distinct !DILexicalBlock(scope: !7914, file: !202, line: 382, column: 2)
!7914 = distinct !DILexicalBlock(scope: !7711, file: !202, line: 382, column: 2)
!7915 = !{i32 -2142513090, i32 -2142513061, i32 -2142513015, i32 -2142512957, i32 -2142512903, i32 -2142512849, i32 -2142512794, i32 -2142512763}
!7916 = !DILocation(line: 382, column: 2, scope: !7917, inlinedAt: !7715)
!7917 = distinct !DILexicalBlock(scope: !7918, file: !202, line: 382, column: 2)
!7918 = distinct !DILexicalBlock(scope: !7914, file: !202, line: 382, column: 2)
!7919 = !{i32 -2142512320, i32 -2142512313, i32 -2142512259, i32 -2142512228, i32 -2142512198}
!7920 = !DILocation(line: 382, column: 2, scope: !7918, inlinedAt: !7715)
!7921 = !DILocation(line: 386, column: 1, scope: !7711, inlinedAt: !7715)
!7922 = !DILocation(line: 547, column: 9, scope: !7694, inlinedAt: !7697)
!7923 = !DILocation(line: 549, column: 8, scope: !7924, inlinedAt: !7697)
!7924 = distinct !DILexicalBlock(scope: !7694, file: !202, line: 549, column: 7)
!7925 = !DILocation(line: 549, column: 7, scope: !7694, inlinedAt: !7697)
!7926 = !DILocation(line: 550, column: 4, scope: !7924, inlinedAt: !7697)
!7927 = !DILocation(line: 553, column: 33, scope: !7694, inlinedAt: !7697)
!7928 = !DILocation(line: 325, column: 6, scope: !7929, inlinedAt: !7709)
!7929 = distinct !DILexicalBlock(scope: !7705, file: !202, line: 325, column: 6)
!7930 = !DILocation(line: 325, column: 6, scope: !7705, inlinedAt: !7709)
!7931 = !DILocation(line: 326, column: 3, scope: !7929, inlinedAt: !7709)
!7932 = !DILocation(line: 332, column: 9, scope: !7705, inlinedAt: !7709)
!7933 = !DILocation(line: 332, column: 15, scope: !7705, inlinedAt: !7709)
!7934 = !DILocation(line: 332, column: 2, scope: !7705, inlinedAt: !7709)
!7935 = !DILocation(line: 336, column: 1, scope: !7705, inlinedAt: !7709)
!7936 = !DILocation(line: 553, column: 5, scope: !7694, inlinedAt: !7697)
!7937 = !DILocation(line: 553, column: 41, scope: !7694, inlinedAt: !7697)
!7938 = !DILocation(line: 554, column: 5, scope: !7694, inlinedAt: !7697)
!7939 = !DILocation(line: 554, column: 12, scope: !7694, inlinedAt: !7697)
!7940 = !DILocation(line: 448, column: 31, scope: !7689, inlinedAt: !7693)
!7941 = !DILocation(line: 448, column: 34, scope: !7689, inlinedAt: !7693)
!7942 = !DILocation(line: 448, column: 14, scope: !7689, inlinedAt: !7693)
!7943 = !DILocation(line: 450, column: 22, scope: !7689, inlinedAt: !7693)
!7944 = !DILocation(line: 450, column: 25, scope: !7689, inlinedAt: !7693)
!7945 = !DILocation(line: 450, column: 30, scope: !7689, inlinedAt: !7693)
!7946 = !DILocation(line: 450, column: 36, scope: !7689, inlinedAt: !7693)
!7947 = !DILocation(line: 450, column: 8, scope: !7689, inlinedAt: !7693)
!7948 = !DILocation(line: 450, column: 6, scope: !7689, inlinedAt: !7693)
!7949 = !DILocation(line: 451, column: 9, scope: !7689, inlinedAt: !7693)
!7950 = !DILocation(line: 552, column: 3, scope: !7694, inlinedAt: !7697)
!7951 = !DILocation(line: 557, column: 19, scope: !7696, inlinedAt: !7697)
!7952 = !DILocation(line: 557, column: 25, scope: !7696, inlinedAt: !7697)
!7953 = !DILocation(line: 557, column: 9, scope: !7696, inlinedAt: !7697)
!7954 = !DILocation(line: 557, column: 2, scope: !7696, inlinedAt: !7697)
!7955 = !DILocation(line: 558, column: 1, scope: !7696, inlinedAt: !7697)
!7956 = !DILocation(line: 664, column: 2, scope: !7685)
!7957 = distinct !DISubprogram(name: "msi_mode_show", scope: !3, file: !3, line: 462, type: !4533, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7958 = !DILocalVariable(name: "dev", arg: 1, scope: !7957, file: !3, line: 462, type: !223)
!7959 = !DILocation(line: 462, column: 45, scope: !7957)
!7960 = !DILocalVariable(name: "attr", arg: 2, scope: !7957, file: !3, line: 462, type: !4527)
!7961 = !DILocation(line: 462, column: 75, scope: !7957)
!7962 = !DILocalVariable(name: "buf", arg: 3, scope: !7957, file: !3, line: 463, type: !285)
!7963 = !DILocation(line: 463, column: 15, scope: !7957)
!7964 = !DILocalVariable(name: "entry", scope: !7957, file: !3, line: 465, type: !210)
!7965 = !DILocation(line: 465, column: 19, scope: !7957)
!7966 = !DILocalVariable(name: "irq", scope: !7957, file: !3, line: 466, type: !335)
!7967 = !DILocation(line: 466, column: 16, scope: !7957)
!7968 = !DILocalVariable(name: "retval", scope: !7957, file: !3, line: 467, type: !269)
!7969 = !DILocation(line: 467, column: 6, scope: !7957)
!7970 = !DILocation(line: 469, column: 20, scope: !7957)
!7971 = !DILocation(line: 469, column: 26, scope: !7957)
!7972 = !DILocation(line: 469, column: 31, scope: !7957)
!7973 = !DILocation(line: 469, column: 11, scope: !7957)
!7974 = !DILocation(line: 469, column: 9, scope: !7957)
!7975 = !DILocation(line: 470, column: 6, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 470, column: 6)
!7977 = !DILocation(line: 470, column: 6, scope: !7957)
!7978 = !DILocation(line: 471, column: 10, scope: !7976)
!7979 = !DILocation(line: 471, column: 3, scope: !7976)
!7980 = !DILocation(line: 473, column: 27, scope: !7957)
!7981 = !DILocation(line: 473, column: 10, scope: !7957)
!7982 = !DILocation(line: 473, column: 8, scope: !7957)
!7983 = !DILocation(line: 474, column: 6, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 474, column: 6)
!7985 = !DILocation(line: 474, column: 6, scope: !7957)
!7986 = !DILocation(line: 475, column: 18, scope: !7984)
!7987 = !DILocation(line: 476, column: 5, scope: !7984)
!7988 = !DILocation(line: 476, column: 12, scope: !7984)
!7989 = !DILocation(line: 476, column: 23, scope: !7984)
!7990 = !DILocation(line: 475, column: 10, scope: !7984)
!7991 = !DILocation(line: 475, column: 3, scope: !7984)
!7992 = !DILocation(line: 478, column: 2, scope: !7957)
!7993 = !DILocation(line: 479, column: 1, scope: !7957)
!7994 = distinct !DISubprogram(name: "kmalloc_array", scope: !202, file: !202, line: 584, type: !7671, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!7995 = !DILocation(line: 445, column: 72, scope: !7689, inlinedAt: !7996)
!7996 = distinct !DILocation(line: 552, column: 10, scope: !7694, inlinedAt: !7997)
!7997 = distinct !DILocation(line: 591, column: 10, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7994, file: !202, line: 590, column: 6)
!7999 = !DILocation(line: 446, column: 9, scope: !7689, inlinedAt: !7996)
!8000 = !DILocation(line: 446, column: 23, scope: !7689, inlinedAt: !7996)
!8001 = !DILocation(line: 448, column: 8, scope: !7689, inlinedAt: !7996)
!8002 = !DILocation(line: 318, column: 67, scope: !7705, inlinedAt: !8003)
!8003 = distinct !DILocation(line: 553, column: 20, scope: !7694, inlinedAt: !7997)
!8004 = !DILocation(line: 346, column: 58, scope: !7711, inlinedAt: !8005)
!8005 = distinct !DILocation(line: 547, column: 11, scope: !7694, inlinedAt: !7997)
!8006 = !DILocation(line: 472, column: 28, scope: !7717, inlinedAt: !8007)
!8007 = distinct !DILocation(line: 481, column: 9, scope: !7722, inlinedAt: !8008)
!8008 = distinct !DILocation(line: 545, column: 11, scope: !7724, inlinedAt: !7997)
!8009 = !DILocation(line: 472, column: 40, scope: !7717, inlinedAt: !8007)
!8010 = !DILocation(line: 472, column: 60, scope: !7717, inlinedAt: !8007)
!8011 = !DILocation(line: 478, column: 51, scope: !7722, inlinedAt: !8008)
!8012 = !DILocation(line: 478, column: 63, scope: !7722, inlinedAt: !8008)
!8013 = !DILocation(line: 480, column: 15, scope: !7722, inlinedAt: !8008)
!8014 = !DILocation(line: 538, column: 45, scope: !7696, inlinedAt: !7997)
!8015 = !DILocation(line: 538, column: 57, scope: !7696, inlinedAt: !7997)
!8016 = !DILocation(line: 542, column: 16, scope: !7694, inlinedAt: !7997)
!8017 = !DILocalVariable(name: "n", arg: 1, scope: !7994, file: !202, line: 584, type: !332)
!8018 = !DILocation(line: 584, column: 42, scope: !7994)
!8019 = !DILocalVariable(name: "size", arg: 2, scope: !7994, file: !202, line: 584, type: !332)
!8020 = !DILocation(line: 584, column: 52, scope: !7994)
!8021 = !DILocalVariable(name: "flags", arg: 3, scope: !7994, file: !202, line: 584, type: !757)
!8022 = !DILocation(line: 584, column: 64, scope: !7994)
!8023 = !DILocalVariable(name: "bytes", scope: !7994, file: !202, line: 586, type: !332)
!8024 = !DILocation(line: 586, column: 9, scope: !7994)
!8025 = !DILocalVariable(name: "__a", scope: !8026, file: !202, line: 588, type: !332)
!8026 = distinct !DILexicalBlock(scope: !8027, file: !202, line: 588, column: 6)
!8027 = distinct !DILexicalBlock(scope: !7994, file: !202, line: 588, column: 6)
!8028 = !DILocation(line: 588, column: 6, scope: !8026)
!8029 = !DILocalVariable(name: "__b", scope: !8026, file: !202, line: 588, type: !332)
!8030 = !DILocalVariable(name: "__d", scope: !8026, file: !202, line: 588, type: !8031)
!8031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!8032 = !DILocation(line: 588, column: 6, scope: !8027)
!8033 = !DILocation(line: 588, column: 6, scope: !7994)
!8034 = !DILocation(line: 589, column: 3, scope: !8027)
!8035 = !DILocation(line: 590, column: 27, scope: !7998)
!8036 = !DILocation(line: 590, column: 6, scope: !7998)
!8037 = !DILocation(line: 590, column: 30, scope: !7998)
!8038 = !DILocation(line: 590, column: 54, scope: !7998)
!8039 = !DILocation(line: 590, column: 33, scope: !7998)
!8040 = !DILocation(line: 590, column: 6, scope: !7994)
!8041 = !DILocation(line: 591, column: 18, scope: !7998)
!8042 = !DILocation(line: 591, column: 25, scope: !7998)
!8043 = !DILocation(line: 540, column: 27, scope: !7695, inlinedAt: !7997)
!8044 = !DILocation(line: 540, column: 6, scope: !7695, inlinedAt: !7997)
!8045 = !DILocation(line: 540, column: 6, scope: !7696, inlinedAt: !7997)
!8046 = !DILocation(line: 544, column: 7, scope: !7724, inlinedAt: !7997)
!8047 = !DILocation(line: 544, column: 12, scope: !7724, inlinedAt: !7997)
!8048 = !DILocation(line: 544, column: 7, scope: !7694, inlinedAt: !7997)
!8049 = !DILocation(line: 545, column: 25, scope: !7724, inlinedAt: !7997)
!8050 = !DILocation(line: 545, column: 31, scope: !7724, inlinedAt: !7997)
!8051 = !DILocation(line: 480, column: 33, scope: !7722, inlinedAt: !8008)
!8052 = !DILocation(line: 480, column: 23, scope: !7722, inlinedAt: !8008)
!8053 = !DILocation(line: 481, column: 29, scope: !7722, inlinedAt: !8008)
!8054 = !DILocation(line: 481, column: 35, scope: !7722, inlinedAt: !8008)
!8055 = !DILocation(line: 481, column: 42, scope: !7722, inlinedAt: !8008)
!8056 = !DILocation(line: 474, column: 23, scope: !7717, inlinedAt: !8007)
!8057 = !DILocation(line: 474, column: 29, scope: !7717, inlinedAt: !8007)
!8058 = !DILocation(line: 474, column: 36, scope: !7717, inlinedAt: !8007)
!8059 = !DILocation(line: 474, column: 9, scope: !7717, inlinedAt: !8007)
!8060 = !DILocation(line: 545, column: 4, scope: !7724, inlinedAt: !7997)
!8061 = !DILocation(line: 547, column: 25, scope: !7694, inlinedAt: !7997)
!8062 = !DILocation(line: 348, column: 7, scope: !7768, inlinedAt: !8005)
!8063 = !DILocation(line: 348, column: 6, scope: !7711, inlinedAt: !8005)
!8064 = !DILocation(line: 349, column: 3, scope: !7768, inlinedAt: !8005)
!8065 = !DILocation(line: 351, column: 6, scope: !7772, inlinedAt: !8005)
!8066 = !DILocation(line: 351, column: 11, scope: !7772, inlinedAt: !8005)
!8067 = !DILocation(line: 351, column: 6, scope: !7711, inlinedAt: !8005)
!8068 = !DILocation(line: 352, column: 3, scope: !7772, inlinedAt: !8005)
!8069 = !DILocation(line: 354, column: 32, scope: !7777, inlinedAt: !8005)
!8070 = !DILocation(line: 354, column: 37, scope: !7777, inlinedAt: !8005)
!8071 = !DILocation(line: 354, column: 42, scope: !7777, inlinedAt: !8005)
!8072 = !DILocation(line: 354, column: 45, scope: !7777, inlinedAt: !8005)
!8073 = !DILocation(line: 354, column: 50, scope: !7777, inlinedAt: !8005)
!8074 = !DILocation(line: 354, column: 6, scope: !7711, inlinedAt: !8005)
!8075 = !DILocation(line: 355, column: 3, scope: !7777, inlinedAt: !8005)
!8076 = !DILocation(line: 356, column: 32, scope: !7785, inlinedAt: !8005)
!8077 = !DILocation(line: 356, column: 37, scope: !7785, inlinedAt: !8005)
!8078 = !DILocation(line: 356, column: 43, scope: !7785, inlinedAt: !8005)
!8079 = !DILocation(line: 356, column: 46, scope: !7785, inlinedAt: !8005)
!8080 = !DILocation(line: 356, column: 51, scope: !7785, inlinedAt: !8005)
!8081 = !DILocation(line: 356, column: 6, scope: !7711, inlinedAt: !8005)
!8082 = !DILocation(line: 357, column: 3, scope: !7785, inlinedAt: !8005)
!8083 = !DILocation(line: 358, column: 6, scope: !7793, inlinedAt: !8005)
!8084 = !DILocation(line: 358, column: 11, scope: !7793, inlinedAt: !8005)
!8085 = !DILocation(line: 358, column: 6, scope: !7711, inlinedAt: !8005)
!8086 = !DILocation(line: 358, column: 26, scope: !7793, inlinedAt: !8005)
!8087 = !DILocation(line: 359, column: 6, scope: !7798, inlinedAt: !8005)
!8088 = !DILocation(line: 359, column: 11, scope: !7798, inlinedAt: !8005)
!8089 = !DILocation(line: 359, column: 6, scope: !7711, inlinedAt: !8005)
!8090 = !DILocation(line: 359, column: 26, scope: !7798, inlinedAt: !8005)
!8091 = !DILocation(line: 360, column: 6, scope: !7803, inlinedAt: !8005)
!8092 = !DILocation(line: 360, column: 11, scope: !7803, inlinedAt: !8005)
!8093 = !DILocation(line: 360, column: 6, scope: !7711, inlinedAt: !8005)
!8094 = !DILocation(line: 360, column: 26, scope: !7803, inlinedAt: !8005)
!8095 = !DILocation(line: 361, column: 6, scope: !7808, inlinedAt: !8005)
!8096 = !DILocation(line: 361, column: 11, scope: !7808, inlinedAt: !8005)
!8097 = !DILocation(line: 361, column: 6, scope: !7711, inlinedAt: !8005)
!8098 = !DILocation(line: 361, column: 26, scope: !7808, inlinedAt: !8005)
!8099 = !DILocation(line: 362, column: 6, scope: !7813, inlinedAt: !8005)
!8100 = !DILocation(line: 362, column: 11, scope: !7813, inlinedAt: !8005)
!8101 = !DILocation(line: 362, column: 6, scope: !7711, inlinedAt: !8005)
!8102 = !DILocation(line: 362, column: 26, scope: !7813, inlinedAt: !8005)
!8103 = !DILocation(line: 363, column: 6, scope: !7818, inlinedAt: !8005)
!8104 = !DILocation(line: 363, column: 11, scope: !7818, inlinedAt: !8005)
!8105 = !DILocation(line: 363, column: 6, scope: !7711, inlinedAt: !8005)
!8106 = !DILocation(line: 363, column: 26, scope: !7818, inlinedAt: !8005)
!8107 = !DILocation(line: 364, column: 6, scope: !7823, inlinedAt: !8005)
!8108 = !DILocation(line: 364, column: 11, scope: !7823, inlinedAt: !8005)
!8109 = !DILocation(line: 364, column: 6, scope: !7711, inlinedAt: !8005)
!8110 = !DILocation(line: 364, column: 26, scope: !7823, inlinedAt: !8005)
!8111 = !DILocation(line: 365, column: 6, scope: !7828, inlinedAt: !8005)
!8112 = !DILocation(line: 365, column: 11, scope: !7828, inlinedAt: !8005)
!8113 = !DILocation(line: 365, column: 6, scope: !7711, inlinedAt: !8005)
!8114 = !DILocation(line: 365, column: 26, scope: !7828, inlinedAt: !8005)
!8115 = !DILocation(line: 366, column: 6, scope: !7833, inlinedAt: !8005)
!8116 = !DILocation(line: 366, column: 11, scope: !7833, inlinedAt: !8005)
!8117 = !DILocation(line: 366, column: 6, scope: !7711, inlinedAt: !8005)
!8118 = !DILocation(line: 366, column: 26, scope: !7833, inlinedAt: !8005)
!8119 = !DILocation(line: 367, column: 6, scope: !7838, inlinedAt: !8005)
!8120 = !DILocation(line: 367, column: 11, scope: !7838, inlinedAt: !8005)
!8121 = !DILocation(line: 367, column: 6, scope: !7711, inlinedAt: !8005)
!8122 = !DILocation(line: 367, column: 26, scope: !7838, inlinedAt: !8005)
!8123 = !DILocation(line: 368, column: 6, scope: !7843, inlinedAt: !8005)
!8124 = !DILocation(line: 368, column: 11, scope: !7843, inlinedAt: !8005)
!8125 = !DILocation(line: 368, column: 6, scope: !7711, inlinedAt: !8005)
!8126 = !DILocation(line: 368, column: 26, scope: !7843, inlinedAt: !8005)
!8127 = !DILocation(line: 369, column: 6, scope: !7848, inlinedAt: !8005)
!8128 = !DILocation(line: 369, column: 11, scope: !7848, inlinedAt: !8005)
!8129 = !DILocation(line: 369, column: 6, scope: !7711, inlinedAt: !8005)
!8130 = !DILocation(line: 369, column: 26, scope: !7848, inlinedAt: !8005)
!8131 = !DILocation(line: 370, column: 6, scope: !7853, inlinedAt: !8005)
!8132 = !DILocation(line: 370, column: 11, scope: !7853, inlinedAt: !8005)
!8133 = !DILocation(line: 370, column: 6, scope: !7711, inlinedAt: !8005)
!8134 = !DILocation(line: 370, column: 26, scope: !7853, inlinedAt: !8005)
!8135 = !DILocation(line: 371, column: 6, scope: !7858, inlinedAt: !8005)
!8136 = !DILocation(line: 371, column: 11, scope: !7858, inlinedAt: !8005)
!8137 = !DILocation(line: 371, column: 6, scope: !7711, inlinedAt: !8005)
!8138 = !DILocation(line: 371, column: 26, scope: !7858, inlinedAt: !8005)
!8139 = !DILocation(line: 372, column: 6, scope: !7863, inlinedAt: !8005)
!8140 = !DILocation(line: 372, column: 11, scope: !7863, inlinedAt: !8005)
!8141 = !DILocation(line: 372, column: 6, scope: !7711, inlinedAt: !8005)
!8142 = !DILocation(line: 372, column: 26, scope: !7863, inlinedAt: !8005)
!8143 = !DILocation(line: 373, column: 6, scope: !7868, inlinedAt: !8005)
!8144 = !DILocation(line: 373, column: 11, scope: !7868, inlinedAt: !8005)
!8145 = !DILocation(line: 373, column: 6, scope: !7711, inlinedAt: !8005)
!8146 = !DILocation(line: 373, column: 26, scope: !7868, inlinedAt: !8005)
!8147 = !DILocation(line: 374, column: 6, scope: !7873, inlinedAt: !8005)
!8148 = !DILocation(line: 374, column: 11, scope: !7873, inlinedAt: !8005)
!8149 = !DILocation(line: 374, column: 6, scope: !7711, inlinedAt: !8005)
!8150 = !DILocation(line: 374, column: 26, scope: !7873, inlinedAt: !8005)
!8151 = !DILocation(line: 375, column: 6, scope: !7878, inlinedAt: !8005)
!8152 = !DILocation(line: 375, column: 11, scope: !7878, inlinedAt: !8005)
!8153 = !DILocation(line: 375, column: 6, scope: !7711, inlinedAt: !8005)
!8154 = !DILocation(line: 375, column: 27, scope: !7878, inlinedAt: !8005)
!8155 = !DILocation(line: 376, column: 6, scope: !7883, inlinedAt: !8005)
!8156 = !DILocation(line: 376, column: 11, scope: !7883, inlinedAt: !8005)
!8157 = !DILocation(line: 376, column: 6, scope: !7711, inlinedAt: !8005)
!8158 = !DILocation(line: 376, column: 32, scope: !7883, inlinedAt: !8005)
!8159 = !DILocation(line: 377, column: 6, scope: !7888, inlinedAt: !8005)
!8160 = !DILocation(line: 377, column: 11, scope: !7888, inlinedAt: !8005)
!8161 = !DILocation(line: 377, column: 6, scope: !7711, inlinedAt: !8005)
!8162 = !DILocation(line: 377, column: 32, scope: !7888, inlinedAt: !8005)
!8163 = !DILocation(line: 378, column: 6, scope: !7893, inlinedAt: !8005)
!8164 = !DILocation(line: 378, column: 11, scope: !7893, inlinedAt: !8005)
!8165 = !DILocation(line: 378, column: 6, scope: !7711, inlinedAt: !8005)
!8166 = !DILocation(line: 378, column: 32, scope: !7893, inlinedAt: !8005)
!8167 = !DILocation(line: 379, column: 6, scope: !7898, inlinedAt: !8005)
!8168 = !DILocation(line: 379, column: 11, scope: !7898, inlinedAt: !8005)
!8169 = !DILocation(line: 379, column: 6, scope: !7711, inlinedAt: !8005)
!8170 = !DILocation(line: 379, column: 33, scope: !7898, inlinedAt: !8005)
!8171 = !DILocation(line: 380, column: 6, scope: !7903, inlinedAt: !8005)
!8172 = !DILocation(line: 380, column: 11, scope: !7903, inlinedAt: !8005)
!8173 = !DILocation(line: 380, column: 6, scope: !7711, inlinedAt: !8005)
!8174 = !DILocation(line: 380, column: 33, scope: !7903, inlinedAt: !8005)
!8175 = !DILocation(line: 381, column: 6, scope: !7908, inlinedAt: !8005)
!8176 = !DILocation(line: 381, column: 11, scope: !7908, inlinedAt: !8005)
!8177 = !DILocation(line: 381, column: 6, scope: !7711, inlinedAt: !8005)
!8178 = !DILocation(line: 381, column: 33, scope: !7908, inlinedAt: !8005)
!8179 = !DILocation(line: 382, column: 2, scope: !7913, inlinedAt: !8005)
!8180 = !DILocation(line: 382, column: 2, scope: !7917, inlinedAt: !8005)
!8181 = !DILocation(line: 382, column: 2, scope: !7918, inlinedAt: !8005)
!8182 = !DILocation(line: 386, column: 1, scope: !7711, inlinedAt: !8005)
!8183 = !DILocation(line: 547, column: 9, scope: !7694, inlinedAt: !7997)
!8184 = !DILocation(line: 549, column: 8, scope: !7924, inlinedAt: !7997)
!8185 = !DILocation(line: 549, column: 7, scope: !7694, inlinedAt: !7997)
!8186 = !DILocation(line: 550, column: 4, scope: !7924, inlinedAt: !7997)
!8187 = !DILocation(line: 553, column: 33, scope: !7694, inlinedAt: !7997)
!8188 = !DILocation(line: 325, column: 6, scope: !7929, inlinedAt: !8003)
!8189 = !DILocation(line: 325, column: 6, scope: !7705, inlinedAt: !8003)
!8190 = !DILocation(line: 326, column: 3, scope: !7929, inlinedAt: !8003)
!8191 = !DILocation(line: 332, column: 9, scope: !7705, inlinedAt: !8003)
!8192 = !DILocation(line: 332, column: 15, scope: !7705, inlinedAt: !8003)
!8193 = !DILocation(line: 332, column: 2, scope: !7705, inlinedAt: !8003)
!8194 = !DILocation(line: 336, column: 1, scope: !7705, inlinedAt: !8003)
!8195 = !DILocation(line: 553, column: 5, scope: !7694, inlinedAt: !7997)
!8196 = !DILocation(line: 553, column: 41, scope: !7694, inlinedAt: !7997)
!8197 = !DILocation(line: 554, column: 5, scope: !7694, inlinedAt: !7997)
!8198 = !DILocation(line: 554, column: 12, scope: !7694, inlinedAt: !7997)
!8199 = !DILocation(line: 448, column: 31, scope: !7689, inlinedAt: !7996)
!8200 = !DILocation(line: 448, column: 34, scope: !7689, inlinedAt: !7996)
!8201 = !DILocation(line: 448, column: 14, scope: !7689, inlinedAt: !7996)
!8202 = !DILocation(line: 450, column: 22, scope: !7689, inlinedAt: !7996)
!8203 = !DILocation(line: 450, column: 25, scope: !7689, inlinedAt: !7996)
!8204 = !DILocation(line: 450, column: 30, scope: !7689, inlinedAt: !7996)
!8205 = !DILocation(line: 450, column: 36, scope: !7689, inlinedAt: !7996)
!8206 = !DILocation(line: 450, column: 8, scope: !7689, inlinedAt: !7996)
!8207 = !DILocation(line: 450, column: 6, scope: !7689, inlinedAt: !7996)
!8208 = !DILocation(line: 451, column: 9, scope: !7689, inlinedAt: !7996)
!8209 = !DILocation(line: 552, column: 3, scope: !7694, inlinedAt: !7997)
!8210 = !DILocation(line: 557, column: 19, scope: !7696, inlinedAt: !7997)
!8211 = !DILocation(line: 557, column: 25, scope: !7696, inlinedAt: !7997)
!8212 = !DILocation(line: 557, column: 9, scope: !7696, inlinedAt: !7997)
!8213 = !DILocation(line: 557, column: 2, scope: !7696, inlinedAt: !7997)
!8214 = !DILocation(line: 558, column: 1, scope: !7696, inlinedAt: !7997)
!8215 = !DILocation(line: 591, column: 3, scope: !7998)
!8216 = !DILocation(line: 592, column: 19, scope: !7994)
!8217 = !DILocation(line: 592, column: 26, scope: !7994)
!8218 = !DILocation(line: 592, column: 9, scope: !7994)
!8219 = !DILocation(line: 592, column: 2, scope: !7994)
!8220 = !DILocation(line: 593, column: 1, scope: !7994)
!8221 = distinct !DISubprogram(name: "__must_check_overflow", scope: !8222, file: !8222, line: 52, type: !8223, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8222 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!8223 = !DISubroutineType(types: !8224)
!8224 = !{!501, !501}
!8225 = !DILocalVariable(name: "overflow", arg: 1, scope: !8221, file: !8222, line: 52, type: !501)
!8226 = !DILocation(line: 52, column: 60, scope: !8221)
!8227 = !DILocation(line: 54, column: 9, scope: !8221)
!8228 = !DILocation(line: 54, column: 2, scope: !8221)
!8229 = distinct !DISubprogram(name: "get_order", scope: !8230, file: !8230, line: 29, type: !8231, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8230 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!8231 = !DISubroutineType(types: !8232)
!8232 = !{!269, !335}
!8233 = !DILocation(line: 366, column: 40, scope: !7566, inlinedAt: !8234)
!8234 = distinct !DILocation(line: 46, column: 9, scope: !8229)
!8235 = !DILocation(line: 368, column: 6, scope: !7566, inlinedAt: !8234)
!8236 = !DILocalVariable(name: "size", arg: 1, scope: !8229, file: !8230, line: 29, type: !335)
!8237 = !DILocation(line: 29, column: 63, scope: !8229)
!8238 = !DILocation(line: 31, column: 27, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8229, file: !8230, line: 31, column: 6)
!8240 = !DILocation(line: 31, column: 6, scope: !8239)
!8241 = !DILocation(line: 31, column: 6, scope: !8229)
!8242 = !DILocation(line: 32, column: 8, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8244, file: !8230, line: 32, column: 7)
!8244 = distinct !DILexicalBlock(scope: !8239, file: !8230, line: 31, column: 34)
!8245 = !DILocation(line: 32, column: 7, scope: !8244)
!8246 = !DILocation(line: 33, column: 4, scope: !8243)
!8247 = !DILocation(line: 35, column: 7, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8244, file: !8230, line: 35, column: 7)
!8249 = !DILocation(line: 35, column: 12, scope: !8248)
!8250 = !DILocation(line: 35, column: 7, scope: !8244)
!8251 = !DILocation(line: 36, column: 4, scope: !8248)
!8252 = !DILocation(line: 38, column: 10, scope: !8244)
!8253 = !DILocation(line: 38, column: 28, scope: !8244)
!8254 = !DILocation(line: 38, column: 41, scope: !8244)
!8255 = !DILocation(line: 38, column: 3, scope: !8244)
!8256 = !DILocation(line: 41, column: 6, scope: !8229)
!8257 = !DILocation(line: 42, column: 7, scope: !8229)
!8258 = !DILocation(line: 46, column: 15, scope: !8229)
!8259 = !DILocation(line: 374, column: 2, scope: !7566, inlinedAt: !8234)
!8260 = !DILocation(line: 376, column: 14, scope: !7566, inlinedAt: !8234)
!8261 = !DILocation(line: 377, column: 9, scope: !7566, inlinedAt: !8234)
!8262 = !DILocation(line: 377, column: 16, scope: !7566, inlinedAt: !8234)
!8263 = !DILocation(line: 46, column: 2, scope: !8229)
!8264 = !DILocation(line: 48, column: 1, scope: !8229)
!8265 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8266, file: !8266, line: 137, type: !8267, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8266 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8267 = !DISubroutineType(types: !8268)
!8268 = !{!209, !949, !2142, !332, !757}
!8269 = !DILocalVariable(name: "s", arg: 1, scope: !8265, file: !8266, line: 137, type: !949)
!8270 = !DILocation(line: 137, column: 54, scope: !8265)
!8271 = !DILocalVariable(name: "object", arg: 2, scope: !8265, file: !8266, line: 137, type: !2142)
!8272 = !DILocation(line: 137, column: 69, scope: !8265)
!8273 = !DILocalVariable(name: "size", arg: 3, scope: !8265, file: !8266, line: 138, type: !332)
!8274 = !DILocation(line: 138, column: 12, scope: !8265)
!8275 = !DILocalVariable(name: "flags", arg: 4, scope: !8265, file: !8266, line: 138, type: !757)
!8276 = !DILocation(line: 138, column: 24, scope: !8265)
!8277 = !DILocation(line: 140, column: 17, scope: !8265)
!8278 = !DILocation(line: 140, column: 2, scope: !8265)
!8279 = distinct !DISubprogram(name: "kstrtoul", scope: !8280, file: !8280, line: 351, type: !8281, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8280 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!8281 = !DISubroutineType(types: !8282)
!8282 = !{!269, !231, !7, !3821}
!8283 = !DILocalVariable(name: "s", arg: 1, scope: !8279, file: !8280, line: 351, type: !231)
!8284 = !DILocation(line: 351, column: 53, scope: !8279)
!8285 = !DILocalVariable(name: "base", arg: 2, scope: !8279, file: !8280, line: 351, type: !7)
!8286 = !DILocation(line: 351, column: 69, scope: !8279)
!8287 = !DILocalVariable(name: "res", arg: 3, scope: !8279, file: !8280, line: 351, type: !3821)
!8288 = !DILocation(line: 351, column: 90, scope: !8279)
!8289 = !DILocation(line: 359, column: 20, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8279, file: !8280, line: 357, column: 6)
!8291 = !DILocation(line: 359, column: 23, scope: !8290)
!8292 = !DILocation(line: 359, column: 51, scope: !8290)
!8293 = !DILocation(line: 359, column: 10, scope: !8290)
!8294 = !DILocation(line: 359, column: 3, scope: !8290)
!8295 = distinct !DISubprogram(name: "__pci_enable_msix", scope: !3, file: !3, line: 971, type: !8296, scopeLine: 973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8296 = !DISubroutineType(types: !8297)
!8297 = !{!269, !4208, !5825, !269, !5680, !269}
!8298 = !DILocalVariable(name: "dev", arg: 1, scope: !8295, file: !3, line: 971, type: !4208)
!8299 = !DILocation(line: 971, column: 46, scope: !8295)
!8300 = !DILocalVariable(name: "entries", arg: 2, scope: !8295, file: !3, line: 971, type: !5825)
!8301 = !DILocation(line: 971, column: 70, scope: !8295)
!8302 = !DILocalVariable(name: "nvec", arg: 3, scope: !8295, file: !3, line: 972, type: !269)
!8303 = !DILocation(line: 972, column: 13, scope: !8295)
!8304 = !DILocalVariable(name: "affd", arg: 4, scope: !8295, file: !3, line: 972, type: !5680)
!8305 = !DILocation(line: 972, column: 40, scope: !8295)
!8306 = !DILocalVariable(name: "flags", arg: 5, scope: !8295, file: !3, line: 972, type: !269)
!8307 = !DILocation(line: 972, column: 50, scope: !8295)
!8308 = !DILocalVariable(name: "nr_entries", scope: !8295, file: !3, line: 974, type: !269)
!8309 = !DILocation(line: 974, column: 6, scope: !8295)
!8310 = !DILocalVariable(name: "i", scope: !8295, file: !3, line: 975, type: !269)
!8311 = !DILocation(line: 975, column: 6, scope: !8295)
!8312 = !DILocalVariable(name: "j", scope: !8295, file: !3, line: 975, type: !269)
!8313 = !DILocation(line: 975, column: 9, scope: !8295)
!8314 = !DILocation(line: 977, column: 25, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 977, column: 6)
!8316 = !DILocation(line: 977, column: 30, scope: !8315)
!8317 = !DILocation(line: 977, column: 7, scope: !8315)
!8318 = !DILocation(line: 977, column: 36, scope: !8315)
!8319 = !DILocation(line: 977, column: 39, scope: !8315)
!8320 = !DILocation(line: 977, column: 44, scope: !8315)
!8321 = !DILocation(line: 977, column: 58, scope: !8315)
!8322 = !DILocation(line: 977, column: 6, scope: !8295)
!8323 = !DILocation(line: 978, column: 3, scope: !8315)
!8324 = !DILocation(line: 980, column: 34, scope: !8295)
!8325 = !DILocation(line: 980, column: 15, scope: !8295)
!8326 = !DILocation(line: 980, column: 13, scope: !8295)
!8327 = !DILocation(line: 981, column: 6, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 981, column: 6)
!8329 = !DILocation(line: 981, column: 17, scope: !8328)
!8330 = !DILocation(line: 981, column: 6, scope: !8295)
!8331 = !DILocation(line: 982, column: 10, scope: !8328)
!8332 = !DILocation(line: 982, column: 3, scope: !8328)
!8333 = !DILocation(line: 983, column: 6, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 983, column: 6)
!8335 = !DILocation(line: 983, column: 13, scope: !8334)
!8336 = !DILocation(line: 983, column: 11, scope: !8334)
!8337 = !DILocation(line: 983, column: 24, scope: !8334)
!8338 = !DILocation(line: 983, column: 29, scope: !8334)
!8339 = !DILocation(line: 983, column: 35, scope: !8334)
!8340 = !DILocation(line: 983, column: 6, scope: !8295)
!8341 = !DILocation(line: 984, column: 10, scope: !8334)
!8342 = !DILocation(line: 984, column: 3, scope: !8334)
!8343 = !DILocation(line: 986, column: 6, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 986, column: 6)
!8345 = !DILocation(line: 986, column: 6, scope: !8295)
!8346 = !DILocation(line: 988, column: 10, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8348, file: !3, line: 988, column: 3)
!8348 = distinct !DILexicalBlock(scope: !8344, file: !3, line: 986, column: 15)
!8349 = !DILocation(line: 988, column: 8, scope: !8347)
!8350 = !DILocation(line: 988, column: 15, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 988, column: 3)
!8352 = !DILocation(line: 988, column: 19, scope: !8351)
!8353 = !DILocation(line: 988, column: 17, scope: !8351)
!8354 = !DILocation(line: 988, column: 3, scope: !8347)
!8355 = !DILocation(line: 989, column: 8, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 989, column: 8)
!8357 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 988, column: 30)
!8358 = !DILocation(line: 989, column: 16, scope: !8356)
!8359 = !DILocation(line: 989, column: 19, scope: !8356)
!8360 = !DILocation(line: 989, column: 28, scope: !8356)
!8361 = !DILocation(line: 989, column: 25, scope: !8356)
!8362 = !DILocation(line: 989, column: 8, scope: !8357)
!8363 = !DILocation(line: 990, column: 5, scope: !8356)
!8364 = !DILocation(line: 991, column: 13, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 991, column: 4)
!8366 = !DILocation(line: 991, column: 15, scope: !8365)
!8367 = !DILocation(line: 991, column: 11, scope: !8365)
!8368 = !DILocation(line: 991, column: 9, scope: !8365)
!8369 = !DILocation(line: 991, column: 20, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8365, file: !3, line: 991, column: 4)
!8371 = !DILocation(line: 991, column: 24, scope: !8370)
!8372 = !DILocation(line: 991, column: 22, scope: !8370)
!8373 = !DILocation(line: 991, column: 4, scope: !8365)
!8374 = !DILocation(line: 992, column: 9, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8376, file: !3, line: 992, column: 9)
!8376 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 991, column: 35)
!8377 = !DILocation(line: 992, column: 17, scope: !8375)
!8378 = !DILocation(line: 992, column: 20, scope: !8375)
!8379 = !DILocation(line: 992, column: 29, scope: !8375)
!8380 = !DILocation(line: 992, column: 37, scope: !8375)
!8381 = !DILocation(line: 992, column: 40, scope: !8375)
!8382 = !DILocation(line: 992, column: 26, scope: !8375)
!8383 = !DILocation(line: 992, column: 9, scope: !8376)
!8384 = !DILocation(line: 993, column: 6, scope: !8375)
!8385 = !DILocation(line: 994, column: 4, scope: !8376)
!8386 = !DILocation(line: 991, column: 31, scope: !8370)
!8387 = !DILocation(line: 991, column: 4, scope: !8370)
!8388 = distinct !{!8388, !8373, !8389}
!8389 = !DILocation(line: 994, column: 4, scope: !8365)
!8390 = !DILocation(line: 995, column: 3, scope: !8357)
!8391 = !DILocation(line: 988, column: 26, scope: !8351)
!8392 = !DILocation(line: 988, column: 3, scope: !8351)
!8393 = distinct !{!8393, !8354, !8394}
!8394 = !DILocation(line: 995, column: 3, scope: !8347)
!8395 = !DILocation(line: 996, column: 2, scope: !8348)
!8396 = !DILocation(line: 999, column: 6, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 999, column: 6)
!8398 = !DILocation(line: 999, column: 11, scope: !8397)
!8399 = !DILocation(line: 999, column: 6, scope: !8295)
!8400 = !DILocation(line: 1000, column: 3, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 999, column: 24)
!8402 = !DILocation(line: 1001, column: 3, scope: !8401)
!8403 = !DILocation(line: 1003, column: 30, scope: !8295)
!8404 = !DILocation(line: 1003, column: 35, scope: !8295)
!8405 = !DILocation(line: 1003, column: 44, scope: !8295)
!8406 = !DILocation(line: 1003, column: 50, scope: !8295)
!8407 = !DILocation(line: 1003, column: 9, scope: !8295)
!8408 = !DILocation(line: 1003, column: 2, scope: !8295)
!8409 = !DILocation(line: 1004, column: 1, scope: !8295)
!8410 = distinct !DISubprogram(name: "msix_capability_init", scope: !3, file: !3, line: 775, type: !8411, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8411 = !DISubroutineType(types: !8412)
!8412 = !{!269, !4208, !5825, !269, !5680}
!8413 = !DILocalVariable(name: "dev", arg: 1, scope: !8410, file: !3, line: 775, type: !4208)
!8414 = !DILocation(line: 775, column: 49, scope: !8410)
!8415 = !DILocalVariable(name: "entries", arg: 2, scope: !8410, file: !3, line: 775, type: !5825)
!8416 = !DILocation(line: 775, column: 73, scope: !8410)
!8417 = !DILocalVariable(name: "nvec", arg: 3, scope: !8410, file: !3, line: 776, type: !269)
!8418 = !DILocation(line: 776, column: 9, scope: !8410)
!8419 = !DILocalVariable(name: "affd", arg: 4, scope: !8410, file: !3, line: 776, type: !5680)
!8420 = !DILocation(line: 776, column: 36, scope: !8410)
!8421 = !DILocalVariable(name: "ret", scope: !8410, file: !3, line: 778, type: !269)
!8422 = !DILocation(line: 778, column: 6, scope: !8410)
!8423 = !DILocalVariable(name: "control", scope: !8410, file: !3, line: 779, type: !873)
!8424 = !DILocation(line: 779, column: 6, scope: !8410)
!8425 = !DILocalVariable(name: "base", scope: !8410, file: !3, line: 780, type: !209)
!8426 = !DILocation(line: 780, column: 16, scope: !8410)
!8427 = !DILocation(line: 783, column: 30, scope: !8410)
!8428 = !DILocation(line: 783, column: 2, scope: !8410)
!8429 = !DILocation(line: 785, column: 23, scope: !8410)
!8430 = !DILocation(line: 785, column: 28, scope: !8410)
!8431 = !DILocation(line: 785, column: 33, scope: !8410)
!8432 = !DILocation(line: 785, column: 42, scope: !8410)
!8433 = !DILocation(line: 785, column: 2, scope: !8410)
!8434 = !DILocation(line: 787, column: 25, scope: !8410)
!8435 = !DILocation(line: 787, column: 30, scope: !8410)
!8436 = !DILocation(line: 787, column: 9, scope: !8410)
!8437 = !DILocation(line: 787, column: 7, scope: !8410)
!8438 = !DILocation(line: 788, column: 7, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 788, column: 6)
!8440 = !DILocation(line: 788, column: 6, scope: !8410)
!8441 = !DILocation(line: 789, column: 3, scope: !8439)
!8442 = !DILocation(line: 791, column: 27, scope: !8410)
!8443 = !DILocation(line: 791, column: 32, scope: !8410)
!8444 = !DILocation(line: 791, column: 38, scope: !8410)
!8445 = !DILocation(line: 791, column: 47, scope: !8410)
!8446 = !DILocation(line: 791, column: 53, scope: !8410)
!8447 = !DILocation(line: 791, column: 8, scope: !8410)
!8448 = !DILocation(line: 791, column: 6, scope: !8410)
!8449 = !DILocation(line: 792, column: 6, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 792, column: 6)
!8451 = !DILocation(line: 792, column: 6, scope: !8410)
!8452 = !DILocation(line: 793, column: 10, scope: !8450)
!8453 = !DILocation(line: 793, column: 3, scope: !8450)
!8454 = !DILocation(line: 795, column: 31, scope: !8410)
!8455 = !DILocation(line: 795, column: 36, scope: !8410)
!8456 = !DILocation(line: 795, column: 8, scope: !8410)
!8457 = !DILocation(line: 795, column: 6, scope: !8410)
!8458 = !DILocation(line: 796, column: 6, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 796, column: 6)
!8460 = !DILocation(line: 796, column: 6, scope: !8410)
!8461 = !DILocation(line: 797, column: 3, scope: !8459)
!8462 = !DILocation(line: 800, column: 27, scope: !8410)
!8463 = !DILocation(line: 800, column: 8, scope: !8410)
!8464 = !DILocation(line: 800, column: 6, scope: !8410)
!8465 = !DILocation(line: 801, column: 6, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 801, column: 6)
!8467 = !DILocation(line: 801, column: 6, scope: !8410)
!8468 = !DILocation(line: 802, column: 3, scope: !8466)
!8469 = !DILocation(line: 809, column: 30, scope: !8410)
!8470 = !DILocation(line: 809, column: 2, scope: !8410)
!8471 = !DILocation(line: 812, column: 23, scope: !8410)
!8472 = !DILocation(line: 812, column: 28, scope: !8410)
!8473 = !DILocation(line: 812, column: 2, scope: !8410)
!8474 = !DILocation(line: 814, column: 27, scope: !8410)
!8475 = !DILocation(line: 814, column: 8, scope: !8410)
!8476 = !DILocation(line: 814, column: 6, scope: !8410)
!8477 = !DILocation(line: 815, column: 6, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 815, column: 6)
!8479 = !DILocation(line: 815, column: 6, scope: !8410)
!8480 = !DILocation(line: 816, column: 3, scope: !8478)
!8481 = !DILocation(line: 819, column: 19, scope: !8410)
!8482 = !DILocation(line: 819, column: 2, scope: !8410)
!8483 = !DILocation(line: 820, column: 2, scope: !8410)
!8484 = !DILocation(line: 820, column: 7, scope: !8410)
!8485 = !DILocation(line: 820, column: 20, scope: !8410)
!8486 = !DILocation(line: 821, column: 30, scope: !8410)
!8487 = !DILocation(line: 821, column: 2, scope: !8410)
!8488 = !DILocation(line: 823, column: 19, scope: !8410)
!8489 = !DILocation(line: 823, column: 2, scope: !8410)
!8490 = !DILocation(line: 824, column: 2, scope: !8410)
!8491 = !DILabel(scope: !8410, name: "out_avail", file: !3, line: 826)
!8492 = !DILocation(line: 826, column: 1, scope: !8410)
!8493 = !DILocation(line: 827, column: 6, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 827, column: 6)
!8495 = !DILocation(line: 827, column: 10, scope: !8494)
!8496 = !DILocation(line: 827, column: 6, scope: !8410)
!8497 = !DILocalVariable(name: "entry", scope: !8498, file: !3, line: 832, type: !210)
!8498 = distinct !DILexicalBlock(scope: !8494, file: !3, line: 827, column: 15)
!8499 = !DILocation(line: 832, column: 20, scope: !8498)
!8500 = !DILocalVariable(name: "avail", scope: !8498, file: !3, line: 833, type: !269)
!8501 = !DILocation(line: 833, column: 7, scope: !8498)
!8502 = !DILocalVariable(name: "__mptr", scope: !8503, file: !3, line: 835, type: !209)
!8503 = distinct !DILexicalBlock(scope: !8504, file: !3, line: 835, column: 3)
!8504 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 835, column: 3)
!8505 = !DILocation(line: 835, column: 3, scope: !8503)
!8506 = !DILocation(line: 835, column: 3, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8503, file: !3, line: 835, column: 3)
!8508 = !DILocation(line: 835, column: 3, scope: !8504)
!8509 = !DILocation(line: 835, column: 3, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8504, file: !3, line: 835, column: 3)
!8511 = !DILocation(line: 836, column: 8, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8513, file: !3, line: 836, column: 8)
!8513 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 835, column: 38)
!8514 = !DILocation(line: 836, column: 15, scope: !8512)
!8515 = !DILocation(line: 836, column: 19, scope: !8512)
!8516 = !DILocation(line: 836, column: 8, scope: !8513)
!8517 = !DILocation(line: 837, column: 10, scope: !8512)
!8518 = !DILocation(line: 837, column: 5, scope: !8512)
!8519 = !DILocation(line: 838, column: 3, scope: !8513)
!8520 = !DILocalVariable(name: "__mptr", scope: !8521, file: !3, line: 835, type: !209)
!8521 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 835, column: 3)
!8522 = !DILocation(line: 835, column: 3, scope: !8521)
!8523 = !DILocation(line: 835, column: 3, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8521, file: !3, line: 835, column: 3)
!8525 = distinct !{!8525, !8508, !8526}
!8526 = !DILocation(line: 838, column: 3, scope: !8504)
!8527 = !DILocation(line: 839, column: 7, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 839, column: 7)
!8529 = !DILocation(line: 839, column: 13, scope: !8528)
!8530 = !DILocation(line: 839, column: 7, scope: !8498)
!8531 = !DILocation(line: 840, column: 10, scope: !8528)
!8532 = !DILocation(line: 840, column: 8, scope: !8528)
!8533 = !DILocation(line: 840, column: 4, scope: !8528)
!8534 = !DILocation(line: 841, column: 2, scope: !8498)
!8535 = !DILocation(line: 827, column: 12, scope: !8494)
!8536 = !DILabel(scope: !8410, name: "out_free", file: !3, line: 843)
!8537 = !DILocation(line: 843, column: 1, scope: !8410)
!8538 = !DILocation(line: 844, column: 16, scope: !8410)
!8539 = !DILocation(line: 844, column: 2, scope: !8410)
!8540 = !DILocation(line: 846, column: 9, scope: !8410)
!8541 = !DILocation(line: 846, column: 2, scope: !8410)
!8542 = !DILocation(line: 847, column: 1, scope: !8410)
!8543 = distinct !DISubprogram(name: "msix_map_region", scope: !3, file: !3, line: 675, type: !8544, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8544 = !DISubroutineType(types: !8545)
!8545 = !{!209, !4208, !7}
!8546 = !DILocalVariable(name: "dev", arg: 1, scope: !8543, file: !3, line: 675, type: !4208)
!8547 = !DILocation(line: 675, column: 54, scope: !8543)
!8548 = !DILocalVariable(name: "nr_entries", arg: 2, scope: !8543, file: !3, line: 675, type: !7)
!8549 = !DILocation(line: 675, column: 68, scope: !8543)
!8550 = !DILocalVariable(name: "phys_addr", scope: !8543, file: !3, line: 677, type: !4229)
!8551 = !DILocation(line: 677, column: 18, scope: !8543)
!8552 = !DILocalVariable(name: "table_offset", scope: !8543, file: !3, line: 678, type: !426)
!8553 = !DILocation(line: 678, column: 6, scope: !8543)
!8554 = !DILocalVariable(name: "flags", scope: !8543, file: !3, line: 679, type: !335)
!8555 = !DILocation(line: 679, column: 16, scope: !8543)
!8556 = !DILocalVariable(name: "bir", scope: !8543, file: !3, line: 680, type: !1366)
!8557 = !DILocation(line: 680, column: 5, scope: !8543)
!8558 = !DILocation(line: 682, column: 24, scope: !8543)
!8559 = !DILocation(line: 682, column: 29, scope: !8543)
!8560 = !DILocation(line: 682, column: 34, scope: !8543)
!8561 = !DILocation(line: 682, column: 43, scope: !8543)
!8562 = !DILocation(line: 682, column: 2, scope: !8543)
!8563 = !DILocation(line: 684, column: 13, scope: !8543)
!8564 = !DILocation(line: 684, column: 26, scope: !8543)
!8565 = !DILocation(line: 684, column: 8, scope: !8543)
!8566 = !DILocation(line: 684, column: 6, scope: !8543)
!8567 = !DILocation(line: 685, column: 10, scope: !8543)
!8568 = !DILocation(line: 685, column: 8, scope: !8543)
!8569 = !DILocation(line: 686, column: 7, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 686, column: 6)
!8571 = !DILocation(line: 686, column: 13, scope: !8570)
!8572 = !DILocation(line: 686, column: 17, scope: !8570)
!8573 = !DILocation(line: 686, column: 23, scope: !8570)
!8574 = !DILocation(line: 686, column: 6, scope: !8543)
!8575 = !DILocation(line: 687, column: 3, scope: !8570)
!8576 = !DILocation(line: 689, column: 15, scope: !8543)
!8577 = !DILocation(line: 690, column: 14, scope: !8543)
!8578 = !DILocation(line: 690, column: 45, scope: !8543)
!8579 = !DILocation(line: 690, column: 43, scope: !8543)
!8580 = !DILocation(line: 690, column: 12, scope: !8543)
!8581 = !DILocation(line: 692, column: 17, scope: !8543)
!8582 = !DILocation(line: 692, column: 28, scope: !8543)
!8583 = !DILocation(line: 692, column: 39, scope: !8543)
!8584 = !DILocation(line: 692, column: 9, scope: !8543)
!8585 = !DILocation(line: 692, column: 2, scope: !8543)
!8586 = !DILocation(line: 693, column: 1, scope: !8543)
!8587 = distinct !DISubprogram(name: "msix_setup_entries", scope: !3, file: !3, line: 695, type: !8588, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8588 = !DISubroutineType(types: !8589)
!8589 = !{!269, !4208, !209, !5825, !269, !5680}
!8590 = !DILocalVariable(name: "dev", arg: 1, scope: !8587, file: !3, line: 695, type: !4208)
!8591 = !DILocation(line: 695, column: 47, scope: !8587)
!8592 = !DILocalVariable(name: "base", arg: 2, scope: !8587, file: !3, line: 695, type: !209)
!8593 = !DILocation(line: 695, column: 66, scope: !8587)
!8594 = !DILocalVariable(name: "entries", arg: 3, scope: !8587, file: !3, line: 696, type: !5825)
!8595 = !DILocation(line: 696, column: 29, scope: !8587)
!8596 = !DILocalVariable(name: "nvec", arg: 4, scope: !8587, file: !3, line: 696, type: !269)
!8597 = !DILocation(line: 696, column: 42, scope: !8587)
!8598 = !DILocalVariable(name: "affd", arg: 5, scope: !8587, file: !3, line: 697, type: !5680)
!8599 = !DILocation(line: 697, column: 31, scope: !8587)
!8600 = !DILocalVariable(name: "curmsk", scope: !8587, file: !3, line: 699, type: !4159)
!8601 = !DILocation(line: 699, column: 28, scope: !8587)
!8602 = !DILocalVariable(name: "masks", scope: !8587, file: !3, line: 699, type: !4159)
!8603 = !DILocation(line: 699, column: 37, scope: !8587)
!8604 = !DILocalVariable(name: "entry", scope: !8587, file: !3, line: 700, type: !210)
!8605 = !DILocation(line: 700, column: 19, scope: !8587)
!8606 = !DILocalVariable(name: "ret", scope: !8587, file: !3, line: 701, type: !269)
!8607 = !DILocation(line: 701, column: 6, scope: !8587)
!8608 = !DILocalVariable(name: "i", scope: !8587, file: !3, line: 701, type: !269)
!8609 = !DILocation(line: 701, column: 11, scope: !8587)
!8610 = !DILocalVariable(name: "vec_count", scope: !8587, file: !3, line: 702, type: !269)
!8611 = !DILocation(line: 702, column: 6, scope: !8587)
!8612 = !DILocation(line: 702, column: 37, scope: !8587)
!8613 = !DILocation(line: 702, column: 18, scope: !8587)
!8614 = !DILocation(line: 704, column: 6, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 704, column: 6)
!8616 = !DILocation(line: 704, column: 6, scope: !8587)
!8617 = !DILocation(line: 705, column: 37, scope: !8615)
!8618 = !DILocation(line: 705, column: 43, scope: !8615)
!8619 = !DILocation(line: 705, column: 11, scope: !8615)
!8620 = !DILocation(line: 705, column: 9, scope: !8615)
!8621 = !DILocation(line: 705, column: 3, scope: !8615)
!8622 = !DILocation(line: 707, column: 9, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 707, column: 2)
!8624 = !DILocation(line: 707, column: 23, scope: !8623)
!8625 = !DILocation(line: 707, column: 21, scope: !8623)
!8626 = !DILocation(line: 707, column: 7, scope: !8623)
!8627 = !DILocation(line: 707, column: 30, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 707, column: 2)
!8629 = !DILocation(line: 707, column: 34, scope: !8628)
!8630 = !DILocation(line: 707, column: 32, scope: !8628)
!8631 = !DILocation(line: 707, column: 2, scope: !8623)
!8632 = !DILocation(line: 708, column: 28, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 707, column: 45)
!8634 = !DILocation(line: 708, column: 33, scope: !8633)
!8635 = !DILocation(line: 708, column: 41, scope: !8633)
!8636 = !DILocation(line: 708, column: 11, scope: !8633)
!8637 = !DILocation(line: 708, column: 9, scope: !8633)
!8638 = !DILocation(line: 709, column: 8, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 709, column: 7)
!8640 = !DILocation(line: 709, column: 7, scope: !8633)
!8641 = !DILocation(line: 710, column: 9, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 710, column: 8)
!8643 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 709, column: 15)
!8644 = !DILocation(line: 710, column: 8, scope: !8643)
!8645 = !DILocation(line: 711, column: 13, scope: !8642)
!8646 = !DILocation(line: 711, column: 5, scope: !8642)
!8647 = !DILocation(line: 713, column: 19, scope: !8642)
!8648 = !DILocation(line: 713, column: 5, scope: !8642)
!8649 = !DILocation(line: 715, column: 8, scope: !8643)
!8650 = !DILocation(line: 716, column: 4, scope: !8643)
!8651 = !DILocation(line: 719, column: 3, scope: !8633)
!8652 = !DILocation(line: 719, column: 10, scope: !8633)
!8653 = !DILocation(line: 719, column: 21, scope: !8633)
!8654 = !DILocation(line: 719, column: 29, scope: !8633)
!8655 = !DILocation(line: 720, column: 3, scope: !8633)
!8656 = !DILocation(line: 720, column: 10, scope: !8633)
!8657 = !DILocation(line: 720, column: 21, scope: !8633)
!8658 = !DILocation(line: 720, column: 28, scope: !8633)
!8659 = !DILocation(line: 721, column: 7, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 721, column: 7)
!8661 = !DILocation(line: 721, column: 7, scope: !8633)
!8662 = !DILocation(line: 722, column: 33, scope: !8660)
!8663 = !DILocation(line: 722, column: 41, scope: !8660)
!8664 = !DILocation(line: 722, column: 44, scope: !8660)
!8665 = !DILocation(line: 722, column: 4, scope: !8660)
!8666 = !DILocation(line: 722, column: 11, scope: !8660)
!8667 = !DILocation(line: 722, column: 22, scope: !8660)
!8668 = !DILocation(line: 722, column: 31, scope: !8660)
!8669 = !DILocation(line: 724, column: 33, scope: !8660)
!8670 = !DILocation(line: 724, column: 4, scope: !8660)
!8671 = !DILocation(line: 724, column: 11, scope: !8660)
!8672 = !DILocation(line: 724, column: 22, scope: !8660)
!8673 = !DILocation(line: 724, column: 31, scope: !8660)
!8674 = !DILocation(line: 727, column: 4, scope: !8633)
!8675 = !DILocation(line: 727, column: 11, scope: !8633)
!8676 = !DILocation(line: 727, column: 22, scope: !8633)
!8677 = !DILocation(line: 727, column: 34, scope: !8633)
!8678 = !DILocation(line: 727, column: 31, scope: !8633)
!8679 = !DILocation(line: 726, column: 3, scope: !8633)
!8680 = !DILocation(line: 726, column: 10, scope: !8633)
!8681 = !DILocation(line: 726, column: 21, scope: !8633)
!8682 = !DILocation(line: 726, column: 32, scope: !8633)
!8683 = !DILocation(line: 729, column: 35, scope: !8633)
!8684 = !DILocation(line: 729, column: 40, scope: !8633)
!8685 = !DILocation(line: 729, column: 3, scope: !8633)
!8686 = !DILocation(line: 729, column: 10, scope: !8633)
!8687 = !DILocation(line: 729, column: 21, scope: !8633)
!8688 = !DILocation(line: 729, column: 33, scope: !8633)
!8689 = !DILocation(line: 730, column: 23, scope: !8633)
!8690 = !DILocation(line: 730, column: 3, scope: !8633)
!8691 = !DILocation(line: 730, column: 10, scope: !8633)
!8692 = !DILocation(line: 730, column: 21, scope: !8633)
!8693 = !DILocation(line: 732, column: 18, scope: !8633)
!8694 = !DILocation(line: 732, column: 25, scope: !8633)
!8695 = !DILocation(line: 732, column: 31, scope: !8633)
!8696 = !DILocation(line: 732, column: 3, scope: !8633)
!8697 = !DILocation(line: 733, column: 7, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 733, column: 7)
!8699 = !DILocation(line: 733, column: 7, scope: !8633)
!8700 = !DILocation(line: 734, column: 10, scope: !8698)
!8701 = !DILocation(line: 734, column: 4, scope: !8698)
!8702 = !DILocation(line: 735, column: 2, scope: !8633)
!8703 = !DILocation(line: 707, column: 41, scope: !8628)
!8704 = !DILocation(line: 707, column: 2, scope: !8628)
!8705 = distinct !{!8705, !8631, !8706}
!8706 = !DILocation(line: 735, column: 2, scope: !8623)
!8707 = !DILocation(line: 736, column: 6, scope: !8587)
!8708 = !DILocation(line: 736, column: 2, scope: !8587)
!8709 = !DILabel(scope: !8587, name: "out", file: !3, line: 737)
!8710 = !DILocation(line: 737, column: 1, scope: !8587)
!8711 = !DILocation(line: 738, column: 8, scope: !8587)
!8712 = !DILocation(line: 738, column: 2, scope: !8587)
!8713 = !DILocation(line: 739, column: 9, scope: !8587)
!8714 = !DILocation(line: 739, column: 2, scope: !8587)
!8715 = distinct !DISubprogram(name: "msix_program_entries", scope: !3, file: !3, line: 742, type: !8716, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8716 = !DISubroutineType(types: !8717)
!8717 = !{null, !4208, !5825}
!8718 = !DILocalVariable(name: "dev", arg: 1, scope: !8715, file: !3, line: 742, type: !4208)
!8719 = !DILocation(line: 742, column: 50, scope: !8715)
!8720 = !DILocalVariable(name: "entries", arg: 2, scope: !8715, file: !3, line: 743, type: !5825)
!8721 = !DILocation(line: 743, column: 25, scope: !8715)
!8722 = !DILocalVariable(name: "entry", scope: !8715, file: !3, line: 745, type: !210)
!8723 = !DILocation(line: 745, column: 19, scope: !8715)
!8724 = !DILocalVariable(name: "i", scope: !8715, file: !3, line: 746, type: !269)
!8725 = !DILocation(line: 746, column: 6, scope: !8715)
!8726 = !DILocalVariable(name: "desc_addr", scope: !8715, file: !3, line: 747, type: !209)
!8727 = !DILocation(line: 747, column: 16, scope: !8715)
!8728 = !DILocalVariable(name: "__mptr", scope: !8729, file: !3, line: 749, type: !209)
!8729 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 749, column: 2)
!8730 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 749, column: 2)
!8731 = !DILocation(line: 749, column: 2, scope: !8729)
!8732 = !DILocation(line: 749, column: 2, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8729, file: !3, line: 749, column: 2)
!8734 = !DILocation(line: 749, column: 2, scope: !8730)
!8735 = !DILocation(line: 749, column: 2, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 749, column: 2)
!8737 = !DILocation(line: 750, column: 7, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8739, file: !3, line: 750, column: 7)
!8739 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 749, column: 37)
!8740 = !DILocation(line: 750, column: 7, scope: !8739)
!8741 = !DILocation(line: 751, column: 26, scope: !8738)
!8742 = !DILocation(line: 751, column: 33, scope: !8738)
!8743 = !DILocation(line: 751, column: 4, scope: !8738)
!8744 = !DILocation(line: 751, column: 13, scope: !8738)
!8745 = !DILocation(line: 751, column: 17, scope: !8738)
!8746 = !DILocation(line: 751, column: 24, scope: !8738)
!8747 = !DILocation(line: 753, column: 34, scope: !8739)
!8748 = !DILocation(line: 753, column: 15, scope: !8739)
!8749 = !DILocation(line: 753, column: 13, scope: !8739)
!8750 = !DILocation(line: 754, column: 7, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8739, file: !3, line: 754, column: 7)
!8752 = !DILocation(line: 754, column: 7, scope: !8739)
!8753 = !DILocation(line: 755, column: 26, scope: !8751)
!8754 = !DILocation(line: 755, column: 36, scope: !8751)
!8755 = !DILocation(line: 755, column: 20, scope: !8751)
!8756 = !DILocation(line: 755, column: 4, scope: !8751)
!8757 = !DILocation(line: 755, column: 11, scope: !8751)
!8758 = !DILocation(line: 755, column: 18, scope: !8751)
!8759 = !DILocation(line: 758, column: 4, scope: !8751)
!8760 = !DILocation(line: 758, column: 11, scope: !8751)
!8761 = !DILocation(line: 758, column: 18, scope: !8751)
!8762 = !DILocation(line: 760, column: 17, scope: !8739)
!8763 = !DILocation(line: 760, column: 3, scope: !8739)
!8764 = !DILocation(line: 761, column: 2, scope: !8739)
!8765 = !DILocalVariable(name: "__mptr", scope: !8766, file: !3, line: 749, type: !209)
!8766 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 749, column: 2)
!8767 = !DILocation(line: 749, column: 2, scope: !8766)
!8768 = !DILocation(line: 749, column: 2, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 749, column: 2)
!8770 = distinct !{!8770, !8734, !8771}
!8771 = !DILocation(line: 761, column: 2, scope: !8730)
!8772 = !DILocation(line: 762, column: 1, scope: !8715)
!8773 = distinct !DISubprogram(name: "pci_msi_domain_set_desc", scope: !3, file: !3, line: 1405, type: !4619, scopeLine: 1407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8774 = !DILocalVariable(name: "arg", arg: 1, scope: !8773, file: !3, line: 1405, type: !4564)
!8775 = !DILocation(line: 1405, column: 55, scope: !8773)
!8776 = !DILocalVariable(name: "desc", arg: 2, scope: !8773, file: !3, line: 1406, type: !210)
!8777 = !DILocation(line: 1406, column: 26, scope: !8773)
!8778 = !DILocation(line: 1408, column: 14, scope: !8773)
!8779 = !DILocation(line: 1408, column: 2, scope: !8773)
!8780 = !DILocation(line: 1408, column: 7, scope: !8773)
!8781 = !DILocation(line: 1408, column: 12, scope: !8773)
!8782 = !DILocation(line: 1409, column: 41, scope: !8773)
!8783 = !DILocation(line: 1409, column: 15, scope: !8773)
!8784 = !DILocation(line: 1409, column: 2, scope: !8773)
!8785 = !DILocation(line: 1409, column: 7, scope: !8773)
!8786 = !DILocation(line: 1409, column: 13, scope: !8773)
!8787 = !DILocation(line: 1410, column: 1, scope: !8773)
!8788 = distinct !DISubprogram(name: "pci_msi_domain_handle_error", scope: !3, file: !3, line: 1395, type: !4623, scopeLine: 1397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8789 = !DILocalVariable(name: "domain", arg: 1, scope: !8788, file: !3, line: 1395, type: !3667)
!8790 = !DILocation(line: 1395, column: 59, scope: !8788)
!8791 = !DILocalVariable(name: "desc", arg: 2, scope: !8788, file: !3, line: 1396, type: !210)
!8792 = !DILocation(line: 1396, column: 29, scope: !8788)
!8793 = !DILocalVariable(name: "error", arg: 3, scope: !8788, file: !3, line: 1396, type: !269)
!8794 = !DILocation(line: 1396, column: 39, scope: !8788)
!8795 = !DILocation(line: 1399, column: 32, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8788, file: !3, line: 1399, column: 6)
!8797 = !DILocation(line: 1399, column: 6, scope: !8796)
!8798 = !DILocation(line: 1399, column: 38, scope: !8796)
!8799 = !DILocation(line: 1399, column: 41, scope: !8796)
!8800 = !DILocation(line: 1399, column: 47, scope: !8796)
!8801 = !DILocation(line: 1399, column: 6, scope: !8788)
!8802 = !DILocation(line: 1400, column: 3, scope: !8796)
!8803 = !DILocation(line: 1402, column: 9, scope: !8788)
!8804 = !DILocation(line: 1402, column: 2, scope: !8788)
!8805 = !DILocation(line: 1403, column: 1, scope: !8788)
!8806 = distinct !DISubprogram(name: "pci_msi_domain_calc_hwirq", scope: !3, file: !3, line: 1354, type: !8807, scopeLine: 1355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8807 = !DISubroutineType(types: !8808)
!8808 = !{!3810, !210}
!8809 = !DILocalVariable(name: "desc", arg: 1, scope: !8806, file: !3, line: 1354, type: !210)
!8810 = !DILocation(line: 1354, column: 67, scope: !8806)
!8811 = !DILocalVariable(name: "dev", scope: !8806, file: !3, line: 1356, type: !4208)
!8812 = !DILocation(line: 1356, column: 18, scope: !8806)
!8813 = !DILocation(line: 1356, column: 44, scope: !8806)
!8814 = !DILocation(line: 1356, column: 24, scope: !8806)
!8815 = !DILocation(line: 1358, column: 26, scope: !8806)
!8816 = !DILocation(line: 1358, column: 32, scope: !8806)
!8817 = !DILocation(line: 1358, column: 43, scope: !8806)
!8818 = !DILocation(line: 1358, column: 9, scope: !8806)
!8819 = !DILocation(line: 1359, column: 14, scope: !8806)
!8820 = !DILocation(line: 1359, column: 3, scope: !8806)
!8821 = !DILocation(line: 1359, column: 19, scope: !8806)
!8822 = !DILocation(line: 1358, column: 52, scope: !8806)
!8823 = !DILocation(line: 1360, column: 18, scope: !8806)
!8824 = !DILocation(line: 1360, column: 23, scope: !8806)
!8825 = !DILocation(line: 1360, column: 4, scope: !8806)
!8826 = !DILocation(line: 1360, column: 42, scope: !8806)
!8827 = !DILocation(line: 1360, column: 3, scope: !8806)
!8828 = !DILocation(line: 1359, column: 25, scope: !8806)
!8829 = !DILocation(line: 1358, column: 2, scope: !8806)
!8830 = distinct !DISubprogram(name: "pci_domain_nr", scope: !8831, file: !8831, line: 44, type: !4245, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8831 = !DIFile(filename: "./arch/x86/include/asm/pci.h", directory: "/home/lizy2001/genbc/linux")
!8832 = !DILocalVariable(name: "bus", arg: 1, scope: !8830, file: !8831, line: 44, type: !4213)
!8833 = !DILocation(line: 44, column: 49, scope: !8830)
!8834 = !DILocation(line: 46, column: 24, scope: !8830)
!8835 = !DILocation(line: 46, column: 9, scope: !8830)
!8836 = !DILocation(line: 46, column: 30, scope: !8830)
!8837 = !DILocation(line: 46, column: 2, scope: !8830)
!8838 = distinct !DISubprogram(name: "to_pci_sysdata", scope: !8831, file: !8831, line: 36, type: !8839, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!8839 = !DISubroutineType(types: !8840)
!8840 = !{!8841, !9130}
!8841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8842, size: 64)
!8842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sysdata", file: !8831, line: 15, size: 320, elements: !8843)
!8843 = !{!8844, !8845, !8846, !9127, !9128, !9129}
!8844 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !8842, file: !8831, line: 16, baseType: !269, size: 32)
!8845 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8842, file: !8831, line: 17, baseType: !269, size: 32, offset: 32)
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "companion", scope: !8842, file: !8831, line: 19, baseType: !8847, size: 64, offset: 64)
!8847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8848, size: 64)
!8848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device", file: !8849, line: 351, size: 10880, elements: !8850)
!8849 = !DIFile(filename: "./include/acpi/acpi_bus.h", directory: "/home/lizy2001/genbc/linux")
!8850 = !{!8851, !8852, !8855, !8856, !8857, !8858, !8859, !8860, !8861, !8870, !8887, !8961, !8990, !9014, !9035, !9039, !9048, !9080, !9094, !9116, !9120, !9121, !9122, !9123, !9124, !9125, !9126}
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !8848, file: !8849, line: 352, baseType: !269, size: 32)
!8852 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !8848, file: !8849, line: 353, baseType: !8853, size: 64, offset: 64)
!8853 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !8854, line: 424, baseType: !209)
!8854 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!8855 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !8848, file: !8849, line: 354, baseType: !3690, size: 192, offset: 128)
!8856 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8848, file: !8849, line: 355, baseType: !8847, size: 64, offset: 320)
!8857 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8848, file: !8849, line: 356, baseType: !214, size: 128, offset: 384)
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8848, file: !8849, line: 357, baseType: !214, size: 128, offset: 512)
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_list", scope: !8848, file: !8849, line: 358, baseType: !214, size: 128, offset: 640)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "del_list", scope: !8848, file: !8849, line: 359, baseType: !214, size: 128, offset: 768)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !8848, file: !8849, line: 360, baseType: !8862, size: 32, offset: 896)
!8862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_status", file: !8849, line: 179, size: 32, elements: !8863)
!8863 = !{!8864, !8865, !8866, !8867, !8868, !8869}
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !8862, file: !8849, line: 180, baseType: !426, size: 1, flags: DIFlagBitField, extraData: i64 0)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !8862, file: !8849, line: 181, baseType: !426, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "show_in_ui", scope: !8862, file: !8849, line: 182, baseType: !426, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!8867 = !DIDerivedType(tag: DW_TAG_member, name: "functional", scope: !8862, file: !8849, line: 183, baseType: !426, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "battery_present", scope: !8862, file: !8849, line: 184, baseType: !426, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!8869 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8862, file: !8849, line: 185, baseType: !426, size: 27, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!8870 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8848, file: !8849, line: 361, baseType: !8871, size: 32, offset: 928)
!8871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_flags", file: !8849, line: 190, size: 32, elements: !8872)
!8872 = !{!8873, !8874, !8875, !8876, !8877, !8878, !8879, !8880, !8881, !8882, !8883, !8884, !8885, !8886}
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_status", scope: !8871, file: !8849, line: 191, baseType: !426, size: 1, flags: DIFlagBitField, extraData: i64 0)
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !8871, file: !8849, line: 192, baseType: !426, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!8875 = !DIDerivedType(tag: DW_TAG_member, name: "ejectable", scope: !8871, file: !8849, line: 193, baseType: !426, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!8876 = !DIDerivedType(tag: DW_TAG_member, name: "power_manageable", scope: !8871, file: !8849, line: 194, baseType: !426, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!8877 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !8871, file: !8849, line: 195, baseType: !426, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!8878 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !8871, file: !8849, line: 196, baseType: !426, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!8879 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !8871, file: !8849, line: 197, baseType: !426, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!8880 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_notify", scope: !8871, file: !8849, line: 198, baseType: !426, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!8881 = !DIDerivedType(tag: DW_TAG_member, name: "is_dock_station", scope: !8871, file: !8849, line: 199, baseType: !426, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!8882 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible_ok", scope: !8871, file: !8849, line: 200, baseType: !426, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma", scope: !8871, file: !8849, line: 201, baseType: !426, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "cca_seen", scope: !8871, file: !8849, line: 202, baseType: !426, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "enumeration_by_parent", scope: !8871, file: !8849, line: 203, baseType: !426, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8871, file: !8849, line: 204, baseType: !426, size: 19, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "pnp", scope: !8848, file: !8849, line: 362, baseType: !8888, size: 960, offset: 960)
!8888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_pnp", file: !8849, line: 234, size: 960, elements: !8889)
!8889 = !{!8890, !8892, !8899, !8901, !8902, !8903, !8908, !8911}
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "bus_id", scope: !8888, file: !8849, line: 235, baseType: !8891, size: 64)
!8891 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_id", file: !8849, line: 217, baseType: !2047)
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8888, file: !8849, line: 236, baseType: !8893, size: 32, offset: 64)
!8893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_type", file: !8849, line: 227, size: 32, elements: !8894)
!8894 = !{!8895, !8896, !8897, !8898}
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_id", scope: !8893, file: !8849, line: 228, baseType: !426, size: 1, flags: DIFlagBitField, extraData: i64 0)
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !8893, file: !8849, line: 229, baseType: !426, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "platform_id", scope: !8893, file: !8849, line: 230, baseType: !426, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8893, file: !8849, line: 231, baseType: !426, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !8888, file: !8849, line: 237, baseType: !8900, size: 64, offset: 128)
!8900 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_address", file: !8849, line: 218, baseType: !432)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !8888, file: !8849, line: 238, baseType: !285, size: 64, offset: 192)
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !8888, file: !8849, line: 239, baseType: !214, size: 128, offset: 256)
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !8888, file: !8849, line: 240, baseType: !8904, size: 320, offset: 384)
!8904 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_name", file: !8849, line: 219, baseType: !8905)
!8905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 320, elements: !8906)
!8906 = !{!8907}
!8907 = !DISubrange(count: 40)
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "device_class", scope: !8888, file: !8849, line: 241, baseType: !8909, size: 160, offset: 704)
!8909 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_class", file: !8849, line: 220, baseType: !8910)
!8910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 160, elements: !2216)
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "str_obj", scope: !8888, file: !8849, line: 242, baseType: !8912, size: 64, offset: 896)
!8912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8913, size: 64)
!8913 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !8854, line: 899, size: 192, elements: !8914)
!8914 = !{!8915, !8917, !8922, !8928, !8935, !8941, !8947, !8955}
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8913, file: !8854, line: 900, baseType: !8916, size: 32)
!8916 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !8854, line: 635, baseType: !426)
!8917 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !8913, file: !8854, line: 904, baseType: !8918, size: 128)
!8918 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8913, file: !8854, line: 901, size: 128, elements: !8919)
!8919 = !{!8920, !8921}
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8918, file: !8854, line: 902, baseType: !8916, size: 32)
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8918, file: !8854, line: 903, baseType: !432, size: 64, offset: 64)
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !8913, file: !8854, line: 910, baseType: !8923, size: 128)
!8923 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8913, file: !8854, line: 906, size: 128, elements: !8924)
!8924 = !{!8925, !8926, !8927}
!8925 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8923, file: !8854, line: 907, baseType: !8916, size: 32)
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8923, file: !8854, line: 908, baseType: !426, size: 32, offset: 32)
!8927 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !8923, file: !8854, line: 909, baseType: !285, size: 64, offset: 64)
!8928 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !8913, file: !8854, line: 916, baseType: !8929, size: 128)
!8929 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8913, file: !8854, line: 912, size: 128, elements: !8930)
!8930 = !{!8931, !8932, !8933}
!8931 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8929, file: !8854, line: 913, baseType: !8916, size: 32)
!8932 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8929, file: !8854, line: 914, baseType: !426, size: 32, offset: 32)
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !8929, file: !8854, line: 915, baseType: !8934, size: 64, offset: 64)
!8934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!8935 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !8913, file: !8854, line: 922, baseType: !8936, size: 128)
!8936 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8913, file: !8854, line: 918, size: 128, elements: !8937)
!8937 = !{!8938, !8939, !8940}
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8936, file: !8854, line: 919, baseType: !8916, size: 32)
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8936, file: !8854, line: 920, baseType: !426, size: 32, offset: 32)
!8940 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !8936, file: !8854, line: 921, baseType: !8912, size: 64, offset: 64)
!8941 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !8913, file: !8854, line: 928, baseType: !8942, size: 128)
!8942 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8913, file: !8854, line: 924, size: 128, elements: !8943)
!8943 = !{!8944, !8945, !8946}
!8944 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8942, file: !8854, line: 925, baseType: !8916, size: 32)
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !8942, file: !8854, line: 926, baseType: !8916, size: 32, offset: 32)
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !8942, file: !8854, line: 927, baseType: !8853, size: 64, offset: 64)
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !8913, file: !8854, line: 935, baseType: !8948, size: 192)
!8948 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8913, file: !8854, line: 930, size: 192, elements: !8949)
!8949 = !{!8950, !8951, !8952, !8954}
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8948, file: !8854, line: 931, baseType: !8916, size: 32)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !8948, file: !8854, line: 932, baseType: !426, size: 32, offset: 32)
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !8948, file: !8854, line: 933, baseType: !8953, size: 64, offset: 64)
!8953 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !8854, line: 128, baseType: !432)
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !8948, file: !8854, line: 934, baseType: !426, size: 32, offset: 128)
!8955 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !8913, file: !8854, line: 941, baseType: !8956, size: 96)
!8956 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8913, file: !8854, line: 937, size: 96, elements: !8957)
!8957 = !{!8958, !8959, !8960}
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8956, file: !8854, line: 938, baseType: !8916, size: 32)
!8959 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !8956, file: !8854, line: 939, baseType: !426, size: 32, offset: 32)
!8960 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !8956, file: !8854, line: 940, baseType: !426, size: 32, offset: 64)
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !8848, file: !8849, line: 363, baseType: !8962, size: 1344, offset: 1920)
!8962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power", file: !8849, line: 275, size: 1344, elements: !8963)
!8963 = !{!8964, !8965, !8975}
!8964 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8962, file: !8849, line: 276, baseType: !269, size: 32)
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8962, file: !8849, line: 277, baseType: !8966, size: 32, offset: 32)
!8966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_flags", file: !8849, line: 254, size: 32, elements: !8967)
!8967 = !{!8968, !8969, !8970, !8971, !8972, !8973, !8974}
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_get", scope: !8966, file: !8849, line: 255, baseType: !426, size: 1, flags: DIFlagBitField, extraData: i64 0)
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "power_resources", scope: !8966, file: !8849, line: 256, baseType: !426, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "inrush_current", scope: !8966, file: !8849, line: 257, baseType: !426, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!8971 = !DIDerivedType(tag: DW_TAG_member, name: "power_removed", scope: !8966, file: !8849, line: 258, baseType: !426, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_parent", scope: !8966, file: !8849, line: 259, baseType: !426, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!8973 = !DIDerivedType(tag: DW_TAG_member, name: "dsw_present", scope: !8966, file: !8849, line: 260, baseType: !426, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8966, file: !8849, line: 261, baseType: !426, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !8962, file: !8849, line: 278, baseType: !8976, size: 1280, offset: 64)
!8976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8977, size: 1280, elements: !8988)
!8977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_state", file: !8849, line: 264, size: 256, elements: !8978)
!8978 = !{!8979, !8985, !8986, !8987}
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8977, file: !8849, line: 269, baseType: !8980, size: 8)
!8980 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8977, file: !8849, line: 265, size: 8, elements: !8981)
!8981 = !{!8982, !8983, !8984}
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !8980, file: !8849, line: 266, baseType: !1366, size: 1, flags: DIFlagBitField, extraData: i64 0)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_set", scope: !8980, file: !8849, line: 267, baseType: !1366, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8980, file: !8849, line: 268, baseType: !1366, size: 6, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !8977, file: !8849, line: 270, baseType: !269, size: 32, offset: 32)
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !8977, file: !8849, line: 271, baseType: !269, size: 32, offset: 64)
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !8977, file: !8849, line: 272, baseType: !214, size: 128, offset: 128)
!8988 = !{!8989}
!8989 = !DISubrange(count: 5)
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !8848, file: !8849, line: 364, baseType: !8991, size: 640, offset: 3264)
!8991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup", file: !8849, line: 315, size: 640, elements: !8992)
!8992 = !{!8993, !8994, !8995, !8996, !8997, !9002, !9011, !9012, !9013}
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_device", scope: !8991, file: !8849, line: 316, baseType: !8853, size: 64)
!8994 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_number", scope: !8991, file: !8849, line: 317, baseType: !432, size: 64, offset: 64)
!8995 = !DIDerivedType(tag: DW_TAG_member, name: "sleep_state", scope: !8991, file: !8849, line: 318, baseType: !432, size: 64, offset: 128)
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !8991, file: !8849, line: 319, baseType: !214, size: 128, offset: 192)
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8991, file: !8849, line: 320, baseType: !8998, size: 8, offset: 320)
!8998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_flags", file: !8849, line: 305, size: 8, elements: !8999)
!8999 = !{!9000, !9001}
!9000 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !8998, file: !8849, line: 306, baseType: !1366, size: 1, flags: DIFlagBitField, extraData: i64 0)
!9001 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_present", scope: !8998, file: !8849, line: 307, baseType: !1366, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !8991, file: !8849, line: 321, baseType: !9003, size: 128, offset: 384)
!9003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_context", file: !8849, line: 310, size: 128, elements: !9004)
!9004 = !{!9005, !9010}
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !9003, file: !8849, line: 311, baseType: !9006, size: 64)
!9006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9007, size: 64)
!9007 = !DISubroutineType(types: !9008)
!9008 = !{null, !9009}
!9009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9003, size: 64)
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9003, file: !8849, line: 312, baseType: !223, size: 64, offset: 64)
!9011 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !8991, file: !8849, line: 322, baseType: !3567, size: 64, offset: 512)
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_count", scope: !8991, file: !8849, line: 323, baseType: !269, size: 32, offset: 576)
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "enable_count", scope: !8991, file: !8849, line: 324, baseType: !269, size: 32, offset: 608)
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !8848, file: !8849, line: 365, baseType: !9015, size: 192, offset: 3904)
!9015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf", file: !8849, line: 297, size: 192, elements: !9016)
!9016 = !{!9017, !9018, !9022, !9023}
!9017 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9015, file: !8849, line: 298, baseType: !269, size: 32)
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9015, file: !8849, line: 299, baseType: !9019, size: 8, offset: 32)
!9019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_flags", file: !8849, line: 283, size: 8, elements: !9020)
!9020 = !{!9021}
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9019, file: !8849, line: 284, baseType: !1366, size: 8, flags: DIFlagBitField, extraData: i64 0)
!9022 = !DIDerivedType(tag: DW_TAG_member, name: "state_count", scope: !9015, file: !8849, line: 300, baseType: !269, size: 32, offset: 64)
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9015, file: !8849, line: 301, baseType: !9024, size: 64, offset: 128)
!9024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9025, size: 64)
!9025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_state", file: !8849, line: 287, size: 64, elements: !9026)
!9026 = !{!9027, !9032, !9033, !9034}
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9025, file: !8849, line: 291, baseType: !9028, size: 8)
!9028 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9025, file: !8849, line: 288, size: 8, elements: !9029)
!9029 = !{!9030, !9031}
!9030 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !9028, file: !8849, line: 289, baseType: !1366, size: 1, flags: DIFlagBitField, extraData: i64 0)
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9028, file: !8849, line: 290, baseType: !1366, size: 7, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !9025, file: !8849, line: 292, baseType: !1366, size: 8, offset: 8)
!9033 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !9025, file: !8849, line: 293, baseType: !1366, size: 8, offset: 16)
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !9025, file: !8849, line: 294, baseType: !269, size: 32, offset: 32)
!9035 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !8848, file: !8849, line: 366, baseType: !9036, size: 64, offset: 4096)
!9036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_dir", file: !8849, line: 209, size: 64, elements: !9037)
!9037 = !{!9038}
!9038 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !9036, file: !8849, line: 210, baseType: !4043, size: 64)
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8848, file: !8849, line: 367, baseType: !9040, size: 384, offset: 4160)
!9040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_data", file: !8849, line: 341, size: 384, elements: !9041)
!9041 = !{!9042, !9045, !9046, !9047}
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !9040, file: !8849, line: 342, baseType: !9043, size: 64)
!9043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9044, size: 64)
!9044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8913)
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !9040, file: !8849, line: 343, baseType: !214, size: 128, offset: 64)
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible", scope: !9040, file: !8849, line: 344, baseType: !9043, size: 64, offset: 192)
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "subnodes", scope: !9040, file: !8849, line: 345, baseType: !214, size: 128, offset: 256)
!9048 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !8848, file: !8849, line: 368, baseType: !9049, size: 64, offset: 4544)
!9049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9050, size: 64)
!9050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_scan_handler", file: !8849, line: 122, size: 1216, elements: !9051)
!9051 = !{!9052, !9053, !9054, !9059, !9063, !9067, !9068, !9069}
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !9050, file: !8849, line: 123, baseType: !3482, size: 64)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !9050, file: !8849, line: 124, baseType: !214, size: 128, offset: 64)
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !9050, file: !8849, line: 125, baseType: !9055, size: 64, offset: 192)
!9055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9056, size: 64)
!9056 = !DISubroutineType(types: !9057)
!9057 = !{!501, !231, !9058}
!9058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !9050, file: !8849, line: 126, baseType: !9060, size: 64, offset: 256)
!9060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9061, size: 64)
!9061 = !DISubroutineType(types: !9062)
!9062 = !{!269, !8847, !3482}
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !9050, file: !8849, line: 127, baseType: !9064, size: 64, offset: 320)
!9064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9065, size: 64)
!9065 = !DISubroutineType(types: !9066)
!9066 = !{null, !8847}
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !9050, file: !8849, line: 128, baseType: !3410, size: 64, offset: 384)
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !9050, file: !8849, line: 129, baseType: !3410, size: 64, offset: 448)
!9069 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !9050, file: !8849, line: 130, baseType: !9070, size: 704, offset: 512)
!9070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_profile", file: !8849, line: 108, size: 704, elements: !9071)
!9071 = !{!9072, !9073, !9077, !9078, !9079}
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9070, file: !8849, line: 109, baseType: !227, size: 512)
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "scan_dependent", scope: !9070, file: !8849, line: 110, baseType: !9074, size: 64, offset: 512)
!9074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9075, size: 64)
!9075 = !DISubroutineType(types: !9076)
!9076 = !{!269, !8847}
!9077 = !DIDerivedType(tag: DW_TAG_member, name: "notify_online", scope: !9070, file: !8849, line: 111, baseType: !9064, size: 64, offset: 576)
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9070, file: !8849, line: 112, baseType: !501, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "demand_offline", scope: !9070, file: !8849, line: 113, baseType: !501, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "hp", scope: !8848, file: !8849, line: 369, baseType: !9081, size: 64, offset: 4608)
!9081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9082, size: 64)
!9082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_context", file: !8849, line: 138, size: 256, elements: !9083)
!9083 = !{!9084, !9085, !9089, !9093}
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !9082, file: !8849, line: 139, baseType: !8847, size: 64)
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !9082, file: !8849, line: 140, baseType: !9086, size: 64, offset: 64)
!9086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9087, size: 64)
!9087 = !DISubroutineType(types: !9088)
!9088 = !{!269, !8847, !426}
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !9082, file: !8849, line: 141, baseType: !9090, size: 64, offset: 128)
!9090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9091, size: 64)
!9091 = !DISubroutineType(types: !9092)
!9092 = !{null, !8847, !426}
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !9082, file: !8849, line: 142, baseType: !9064, size: 64, offset: 192)
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !8848, file: !8849, line: 370, baseType: !9095, size: 64, offset: 4672)
!9095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9096, size: 64)
!9096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_driver", file: !8849, line: 162, size: 2816, elements: !9097)
!9097 = !{!9098, !9102, !9103, !9104, !9105, !9114, !9115}
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9096, file: !8849, line: 163, baseType: !9099, size: 640)
!9099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 640, elements: !9100)
!9100 = !{!9101}
!9101 = !DISubrange(count: 80)
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !9096, file: !8849, line: 164, baseType: !9099, size: 640, offset: 640)
!9103 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !9096, file: !8849, line: 165, baseType: !3482, size: 64, offset: 1280)
!9104 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9096, file: !8849, line: 166, baseType: !7, size: 32, offset: 1344)
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9096, file: !8849, line: 167, baseType: !9106, size: 192, offset: 1408)
!9106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_ops", file: !8849, line: 154, size: 192, elements: !9107)
!9107 = !{!9108, !9110, !9112}
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !9106, file: !8849, line: 155, baseType: !9109, size: 64)
!9109 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_add", file: !8849, line: 150, baseType: !9074)
!9110 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !9106, file: !8849, line: 156, baseType: !9111, size: 64, offset: 64)
!9111 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_remove", file: !8849, line: 151, baseType: !9074)
!9112 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !9106, file: !8849, line: 157, baseType: !9113, size: 64, offset: 128)
!9113 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_notify", file: !8849, line: 152, baseType: !9090)
!9114 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !9096, file: !8849, line: 168, baseType: !3460, size: 1152, offset: 1600)
!9115 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9096, file: !8849, line: 169, baseType: !643, size: 64, offset: 2752)
!9116 = !DIDerivedType(tag: DW_TAG_member, name: "driver_gpios", scope: !8848, file: !8849, line: 371, baseType: !9117, size: 64, offset: 4736)
!9117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9118, size: 64)
!9118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9119)
!9119 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_mapping", file: !8849, line: 348, flags: DIFlagFwdDecl)
!9120 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !8848, file: !8849, line: 372, baseType: !209, size: 64, offset: 4800)
!9121 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8848, file: !8849, line: 373, baseType: !224, size: 5568, offset: 4864)
!9122 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_count", scope: !8848, file: !8849, line: 374, baseType: !7, size: 32, offset: 10432)
!9123 = !DIDerivedType(tag: DW_TAG_member, name: "dep_unmet", scope: !8848, file: !8849, line: 375, baseType: !7, size: 32, offset: 10464)
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_list", scope: !8848, file: !8849, line: 376, baseType: !214, size: 128, offset: 10496)
!9125 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_lock", scope: !8848, file: !8849, line: 377, baseType: !1187, size: 192, offset: 10624)
!9126 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !8848, file: !8849, line: 378, baseType: !9064, size: 64, offset: 10816)
!9127 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !8842, file: !8831, line: 22, baseType: !209, size: 64, offset: 128)
!9128 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !8842, file: !8831, line: 25, baseType: !209, size: 64, offset: 192)
!9129 = !DIDerivedType(tag: DW_TAG_member, name: "vmd_dev", scope: !8842, file: !8831, line: 28, baseType: !4208, size: 64, offset: 256)
!9130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9131, size: 64)
!9131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4214)
!9132 = !DILocalVariable(name: "bus", arg: 1, scope: !8838, file: !8831, line: 36, type: !9130)
!9133 = !DILocation(line: 36, column: 72, scope: !8838)
!9134 = !DILocation(line: 38, column: 9, scope: !8838)
!9135 = !DILocation(line: 38, column: 14, scope: !8838)
!9136 = !DILocation(line: 38, column: 2, scope: !8838)
!9137 = distinct !DISubprogram(name: "is_of_node", scope: !3683, file: !3683, line: 155, type: !3710, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9138 = !DILocalVariable(name: "fwnode", arg: 1, scope: !9137, file: !3683, line: 155, type: !3712)
!9139 = !DILocation(line: 155, column: 59, scope: !9137)
!9140 = !DILocation(line: 157, column: 25, scope: !9137)
!9141 = !DILocation(line: 157, column: 10, scope: !9137)
!9142 = !DILocation(line: 157, column: 33, scope: !9137)
!9143 = !DILocation(line: 157, column: 36, scope: !9137)
!9144 = !DILocation(line: 157, column: 44, scope: !9137)
!9145 = !DILocation(line: 157, column: 48, scope: !9137)
!9146 = !DILocation(line: 0, scope: !9137)
!9147 = !DILocation(line: 157, column: 2, scope: !9137)
!9148 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !9149, file: !9149, line: 39, type: !9150, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !257)
!9149 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!9150 = !DISubroutineType(types: !9151)
!9151 = !{!501, !2142}
!9152 = !DILocalVariable(name: "ptr", arg: 1, scope: !9148, file: !9149, line: 39, type: !2142)
!9153 = !DILocation(line: 39, column: 68, scope: !9148)
!9154 = !DILocation(line: 41, column: 9, scope: !9148)
!9155 = !DILocation(line: 41, column: 24, scope: !9148)
!9156 = !DILocation(line: 41, column: 27, scope: !9148)
!9157 = !DILocation(line: 41, column: 2, scope: !9148)
