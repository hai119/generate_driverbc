; ModuleID = '../bcout/drivers/pci/setup-bus.llvm.bc'
source_filename = "drivers/pci/setup-bus.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.kmem_cache = type opaque
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.65, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.pci_vpd = type opaque
%union.anon.65 = type { %struct.pci_sriov* }
%struct.pci_sriov = type { i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i32, i8, i8, i16, %struct.pci_dev*, %struct.pci_dev*, i32, i8, i16, i16, [6 x i64], i8 }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, {}*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.pci_bus_region = type { i64, i64 }
%struct.pci_host_bridge = type { %struct.device, %struct.pci_bus*, %struct.pci_ops*, %struct.pci_ops*, i8*, i32, %struct.list_head, %struct.list_head, i8 (%struct.pci_dev*, i8*)*, i32 (%struct.pci_dev*, i8, i8)*, void (%struct.pci_host_bridge*)*, i8*, %struct.msi_controller*, i16, i64 (%struct.pci_dev*, %struct.resource*, i64, i64, i64)*, [8 x i8], [0 x i64] }
%struct.pci_sysdata = type { i32, i32, %struct.acpi_device*, i8*, i8*, %struct.pci_dev* }
%struct.acpi_device = type { i32, i8*, %struct.fwnode_handle, %struct.acpi_device*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.acpi_device_status, %struct.acpi_device_flags, %struct.acpi_device_pnp, %struct.acpi_device_power, %struct.acpi_device_wakeup, %struct.acpi_device_perf, %struct.acpi_device_dir, %struct.acpi_device_data, %struct.acpi_scan_handler*, %struct.acpi_hotplug_context*, %struct.acpi_driver*, %struct.acpi_gpio_mapping*, i8*, %struct.device, i32, i32, %struct.list_head, %struct.mutex, void (%struct.acpi_device*)* }
%struct.acpi_device_status = type { i32 }
%struct.acpi_device_flags = type { i32 }
%struct.acpi_device_pnp = type { [8 x i8], %struct.acpi_pnp_type, i64, i8*, %struct.list_head, [40 x i8], [20 x i8], %union.acpi_object* }
%struct.acpi_pnp_type = type { i32 }
%union.acpi_object = type { %struct.anon.71 }
%struct.anon.71 = type { i32, i32, i64, i32 }
%struct.acpi_device_power = type { i32, %struct.acpi_device_power_flags, [5 x %struct.acpi_device_power_state] }
%struct.acpi_device_power_flags = type { i32 }
%struct.acpi_device_power_state = type { %struct.anon.73, i32, i32, %struct.list_head }
%struct.anon.73 = type { i8 }
%struct.acpi_device_wakeup = type { i8*, i64, i64, %struct.list_head, %struct.acpi_device_wakeup_flags, %struct.acpi_device_wakeup_context, %struct.wakeup_source*, i32, i32 }
%struct.acpi_device_wakeup_flags = type { i8 }
%struct.acpi_device_wakeup_context = type { void (%struct.acpi_device_wakeup_context*)*, %struct.device* }
%struct.acpi_device_perf = type { i32, %struct.acpi_device_perf_flags, i32, %struct.acpi_device_perf_state* }
%struct.acpi_device_perf_flags = type { i8 }
%struct.acpi_device_perf_state = type { %struct.anon.74, i8, i8, i32 }
%struct.anon.74 = type { i8 }
%struct.acpi_device_dir = type { %struct.proc_dir_entry* }
%struct.acpi_device_data = type { %union.acpi_object*, %struct.list_head, %union.acpi_object*, %struct.list_head }
%struct.acpi_scan_handler = type { %struct.acpi_device_id*, %struct.list_head, i1 (i8*, %struct.acpi_device_id**)*, i32 (%struct.acpi_device*, %struct.acpi_device_id*)*, void (%struct.acpi_device*)*, void (%struct.device*)*, void (%struct.device*)*, %struct.acpi_hotplug_profile }
%struct.acpi_hotplug_profile = type { %struct.kobject, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*)*, i8 }
%struct.acpi_hotplug_context = type { %struct.acpi_device*, i32 (%struct.acpi_device*, i32)*, void (%struct.acpi_device*, i32)*, void (%struct.acpi_device*)* }
%struct.acpi_driver = type { [80 x i8], [80 x i8], %struct.acpi_device_id*, i32, %struct.acpi_device_ops, %struct.device_driver, %struct.module* }
%struct.acpi_device_ops = type { i32 (%struct.acpi_device*)*, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*, i32)* }
%struct.acpi_gpio_mapping = type opaque
%struct.pci_dev_resource = type { %struct.list_head, %struct.resource*, %struct.pci_dev*, i64, i64, i64, i64, i64 }

@.str = private unnamed_addr constant [23 x i8] c"CardBus bridge to %pR\0A\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"  bridge window %pR\0A\00", align 1
@pci_cardbus_io_size = external dso_local global i64, align 8
@pci_cardbus_mem_size = external dso_local global i64, align 8
@pci_hotplug_io_size = external dso_local global i64, align 8
@pci_hotplug_mmio_size = external dso_local global i64, align 8
@pci_hotplug_mmio_pref_size = external dso_local global i64, align 8
@.str.2 = private unnamed_addr constant [41 x i8] c"not setting up bridge for bus %04x:%02x\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@pci_realloc_enable = internal global i32 -1, align 4, !dbg !0
@.str.4 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.5 = private unnamed_addr constant [35 x i8] c"max bus depth: %d pci_try_num: %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"drivers/pci/setup-bus.c\00", align 1
@.str.7 = private unnamed_addr constant [72 x i8] c"Some PCI device resources are unassigned, try booting with pci=realloc\0A\00", align 1
@.str.8 = private unnamed_addr constant [90 x i8] c"Automatically enabled pci realloc, if you have problem, try booting with pci=realloc=off\0A\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"No. %d try to assign unassigned res\0A\00", align 1
@pci_root_buses = external dso_local global %struct.list_head, align 8
@.str.10 = private unnamed_addr constant [44 x i8] c"\017PCI: No. %d try to assign unassigned res\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"Error reenabling bridge (%d)\0A\00", align 1
@pci_bus_sem = external dso_local global %struct.rw_semaphore, align 8
@.str.12 = private unnamed_addr constant [23 x i8] c"BAR %d: releasing %pR\0A\00", align 1
@pci_flags = dso_local global i32 0, align 4, !dbg !4506
@.str.13 = private unnamed_addr constant [19 x i8] c"PCI bridge to %pR\0A\00", align 1
@.str.14 = private unnamed_addr constant [45 x i8] c"disabling bridge window %pR to %pR (unused)\0A\00", align 1
@.str.15 = private unnamed_addr constant [40 x i8] c"bridge window %pR to %pR add_size %llx\0A\00", align 1
@ioport_resource = external dso_local global %struct.resource, align 8
@iomem_resource = external dso_local global %struct.resource, align 8
@.str.16 = private unnamed_addr constant [45 x i8] c"disabling BAR %d: %pR (bad alignment %#llx)\0A\00", align 1
@.str.17 = private unnamed_addr constant [55 x i8] c"bridge window %pR to %pR add_size %llx add_align %llx\0A\00", align 1
@.str.18 = private unnamed_addr constant [33 x i8] c"BAR %d: %pR has bogus alignment\0A\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"%s: kzalloc() failed!\0A\00", align 1
@__func__.pdev_sort_resources = private unnamed_addr constant [20 x i8] c"pdev_sort_resources\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.20 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"failed to add %llx res[%d]=%pR\0A\00", align 1
@.str.22 = private unnamed_addr constant [26 x i8] c"resource %d %pR released\0A\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"resource %d %pR\0A\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_setup_cardbus(%struct.pci_bus* %bus) #0 !dbg !4513 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %res = alloca %struct.resource*, align 8
  %region = alloca %struct.pci_bus_region, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !4514, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !4516, metadata !DIExpression()), !dbg !4517
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4518
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !4519
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !4519
  store %struct.pci_dev* %1, %struct.pci_dev** %bridge, align 8, !dbg !4517
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !4520, metadata !DIExpression()), !dbg !4521
  call void @llvm.dbg.declare(metadata %struct.pci_bus_region* %region, metadata !4522, metadata !DIExpression()), !dbg !4528
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4529
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !4529
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4529
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %3, i32 0, i32 8, !dbg !4529
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), %struct.resource* %busn_res) #10, !dbg !4529
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4530
  %resource = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 6, !dbg !4531
  %arrayidx = getelementptr [4 x %struct.resource*], [4 x %struct.resource*]* %resource, i64 0, i64 0, !dbg !4530
  %5 = load %struct.resource*, %struct.resource** %arrayidx, align 8, !dbg !4530
  store %struct.resource* %5, %struct.resource** %res, align 8, !dbg !4532
  %6 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4533
  %bus1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 1, !dbg !4534
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !4534
  %8 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4535
  call void @pcibios_resource_to_bus(%struct.pci_bus* %7, %struct.pci_bus_region* %region, %struct.resource* %8) #11, !dbg !4536
  %9 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4537
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %9, i32 0, i32 3, !dbg !4539
  %10 = load i64, i64* %flags, align 8, !dbg !4539
  %and = and i64 %10, 256, !dbg !4540
  %tobool = icmp ne i64 %and, 0, !dbg !4540
  br i1 %tobool, label %if.then, label %if.end, !dbg !4541

if.then:                                          ; preds = %entry
  %11 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4542
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !4542
  %12 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4542
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), %struct.resource* %12) #10, !dbg !4542
  %13 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4544
  %start = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !4545
  %14 = load i64, i64* %start, align 8, !dbg !4545
  %conv = trunc i64 %14 to i32, !dbg !4546
  %call = call i32 @pci_write_config_dword(%struct.pci_dev* %13, i32 44, i32 %conv) #11, !dbg !4547
  %15 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4548
  %end = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !4549
  %16 = load i64, i64* %end, align 8, !dbg !4549
  %conv3 = trunc i64 %16 to i32, !dbg !4550
  %call4 = call i32 @pci_write_config_dword(%struct.pci_dev* %15, i32 48, i32 %conv3) #11, !dbg !4551
  br label %if.end, !dbg !4552

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4553
  %resource5 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %17, i32 0, i32 6, !dbg !4554
  %arrayidx6 = getelementptr [4 x %struct.resource*], [4 x %struct.resource*]* %resource5, i64 0, i64 1, !dbg !4553
  %18 = load %struct.resource*, %struct.resource** %arrayidx6, align 8, !dbg !4553
  store %struct.resource* %18, %struct.resource** %res, align 8, !dbg !4555
  %19 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4556
  %bus7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 1, !dbg !4557
  %20 = load %struct.pci_bus*, %struct.pci_bus** %bus7, align 8, !dbg !4557
  %21 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4558
  call void @pcibios_resource_to_bus(%struct.pci_bus* %20, %struct.pci_bus_region* %region, %struct.resource* %21) #11, !dbg !4559
  %22 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4560
  %flags8 = getelementptr inbounds %struct.resource, %struct.resource* %22, i32 0, i32 3, !dbg !4562
  %23 = load i64, i64* %flags8, align 8, !dbg !4562
  %and9 = and i64 %23, 256, !dbg !4563
  %tobool10 = icmp ne i64 %and9, 0, !dbg !4563
  br i1 %tobool10, label %if.then11, label %if.end19, !dbg !4564

if.then11:                                        ; preds = %if.end
  %24 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4565
  %dev12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 41, !dbg !4565
  %25 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4565
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), %struct.resource* %25) #10, !dbg !4565
  %26 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4567
  %start13 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !4568
  %27 = load i64, i64* %start13, align 8, !dbg !4568
  %conv14 = trunc i64 %27 to i32, !dbg !4569
  %call15 = call i32 @pci_write_config_dword(%struct.pci_dev* %26, i32 52, i32 %conv14) #11, !dbg !4570
  %28 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4571
  %end16 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !4572
  %29 = load i64, i64* %end16, align 8, !dbg !4572
  %conv17 = trunc i64 %29 to i32, !dbg !4573
  %call18 = call i32 @pci_write_config_dword(%struct.pci_dev* %28, i32 56, i32 %conv17) #11, !dbg !4574
  br label %if.end19, !dbg !4575

if.end19:                                         ; preds = %if.then11, %if.end
  %30 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4576
  %resource20 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %30, i32 0, i32 6, !dbg !4577
  %arrayidx21 = getelementptr [4 x %struct.resource*], [4 x %struct.resource*]* %resource20, i64 0, i64 2, !dbg !4576
  %31 = load %struct.resource*, %struct.resource** %arrayidx21, align 8, !dbg !4576
  store %struct.resource* %31, %struct.resource** %res, align 8, !dbg !4578
  %32 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4579
  %bus22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 1, !dbg !4580
  %33 = load %struct.pci_bus*, %struct.pci_bus** %bus22, align 8, !dbg !4580
  %34 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4581
  call void @pcibios_resource_to_bus(%struct.pci_bus* %33, %struct.pci_bus_region* %region, %struct.resource* %34) #11, !dbg !4582
  %35 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4583
  %flags23 = getelementptr inbounds %struct.resource, %struct.resource* %35, i32 0, i32 3, !dbg !4585
  %36 = load i64, i64* %flags23, align 8, !dbg !4585
  %and24 = and i64 %36, 512, !dbg !4586
  %tobool25 = icmp ne i64 %and24, 0, !dbg !4586
  br i1 %tobool25, label %if.then26, label %if.end34, !dbg !4587

if.then26:                                        ; preds = %if.end19
  %37 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4588
  %dev27 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 41, !dbg !4588
  %38 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4588
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev27, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), %struct.resource* %38) #10, !dbg !4588
  %39 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4590
  %start28 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !4591
  %40 = load i64, i64* %start28, align 8, !dbg !4591
  %conv29 = trunc i64 %40 to i32, !dbg !4592
  %call30 = call i32 @pci_write_config_dword(%struct.pci_dev* %39, i32 28, i32 %conv29) #11, !dbg !4593
  %41 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4594
  %end31 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !4595
  %42 = load i64, i64* %end31, align 8, !dbg !4595
  %conv32 = trunc i64 %42 to i32, !dbg !4596
  %call33 = call i32 @pci_write_config_dword(%struct.pci_dev* %41, i32 32, i32 %conv32) #11, !dbg !4597
  br label %if.end34, !dbg !4598

if.end34:                                         ; preds = %if.then26, %if.end19
  %43 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4599
  %resource35 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %43, i32 0, i32 6, !dbg !4600
  %arrayidx36 = getelementptr [4 x %struct.resource*], [4 x %struct.resource*]* %resource35, i64 0, i64 3, !dbg !4599
  %44 = load %struct.resource*, %struct.resource** %arrayidx36, align 8, !dbg !4599
  store %struct.resource* %44, %struct.resource** %res, align 8, !dbg !4601
  %45 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4602
  %bus37 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %45, i32 0, i32 1, !dbg !4603
  %46 = load %struct.pci_bus*, %struct.pci_bus** %bus37, align 8, !dbg !4603
  %47 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4604
  call void @pcibios_resource_to_bus(%struct.pci_bus* %46, %struct.pci_bus_region* %region, %struct.resource* %47) #11, !dbg !4605
  %48 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4606
  %flags38 = getelementptr inbounds %struct.resource, %struct.resource* %48, i32 0, i32 3, !dbg !4608
  %49 = load i64, i64* %flags38, align 8, !dbg !4608
  %and39 = and i64 %49, 512, !dbg !4609
  %tobool40 = icmp ne i64 %and39, 0, !dbg !4609
  br i1 %tobool40, label %if.then41, label %if.end49, !dbg !4610

if.then41:                                        ; preds = %if.end34
  %50 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4611
  %dev42 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %50, i32 0, i32 41, !dbg !4611
  %51 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4611
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev42, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), %struct.resource* %51) #10, !dbg !4611
  %52 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4613
  %start43 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !4614
  %53 = load i64, i64* %start43, align 8, !dbg !4614
  %conv44 = trunc i64 %53 to i32, !dbg !4615
  %call45 = call i32 @pci_write_config_dword(%struct.pci_dev* %52, i32 36, i32 %conv44) #11, !dbg !4616
  %54 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4617
  %end46 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !4618
  %55 = load i64, i64* %end46, align 8, !dbg !4618
  %conv47 = trunc i64 %55 to i32, !dbg !4619
  %call48 = call i32 @pci_write_config_dword(%struct.pci_dev* %54, i32 40, i32 %conv47) #11, !dbg !4620
  br label %if.end49, !dbg !4621

if.end49:                                         ; preds = %if.then41, %if.end34
  ret void, !dbg !4622
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @pcibios_resource_to_bus(%struct.pci_bus*, %struct.pci_bus_region*, %struct.resource*) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_dword(%struct.pci_dev*, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local void @pcibios_setup_bridge(%struct.pci_bus* %bus, i64 %type) #0 !dbg !4623 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %type.addr = alloca i64, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !4626, metadata !DIExpression()), !dbg !4627
  store i64 %type, i64* %type.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type.addr, metadata !4628, metadata !DIExpression()), !dbg !4629
  ret void, !dbg !4630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_setup_bridge(%struct.pci_bus* %bus) #0 !dbg !4631 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %type = alloca i64, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !4632, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.declare(metadata i64* %type, metadata !4634, metadata !DIExpression()), !dbg !4635
  store i64 8960, i64* %type, align 8, !dbg !4635
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4636
  %1 = load i64, i64* %type, align 8, !dbg !4637
  call void @pcibios_setup_bridge(%struct.pci_bus* %0, i64 %1) #11, !dbg !4638
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4639
  %3 = load i64, i64* %type, align 8, !dbg !4640
  call void @__pci_setup_bridge(%struct.pci_bus* %2, i64 %3) #11, !dbg !4641
  ret void, !dbg !4642
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__pci_setup_bridge(%struct.pci_bus* %bus, i64 %type) #0 !dbg !4643 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %type.addr = alloca i64, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !4644, metadata !DIExpression()), !dbg !4645
  store i64 %type, i64* %type.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type.addr, metadata !4646, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !4648, metadata !DIExpression()), !dbg !4649
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4650
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !4651
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !4651
  store %struct.pci_dev* %1, %struct.pci_dev** %bridge, align 8, !dbg !4649
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4652
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !4652
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4652
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %3, i32 0, i32 8, !dbg !4652
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), %struct.resource* %busn_res) #10, !dbg !4652
  %4 = load i64, i64* %type.addr, align 8, !dbg !4653
  %and = and i64 %4, 256, !dbg !4655
  %tobool = icmp ne i64 %and, 0, !dbg !4655
  br i1 %tobool, label %if.then, label %if.end, !dbg !4656

if.then:                                          ; preds = %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4657
  call void @pci_setup_bridge_io(%struct.pci_dev* %5) #11, !dbg !4658
  br label %if.end, !dbg !4658

if.end:                                           ; preds = %if.then, %entry
  %6 = load i64, i64* %type.addr, align 8, !dbg !4659
  %and1 = and i64 %6, 512, !dbg !4661
  %tobool2 = icmp ne i64 %and1, 0, !dbg !4661
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !4662

if.then3:                                         ; preds = %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4663
  call void @pci_setup_bridge_mmio(%struct.pci_dev* %7) #11, !dbg !4664
  br label %if.end4, !dbg !4664

if.end4:                                          ; preds = %if.then3, %if.end
  %8 = load i64, i64* %type.addr, align 8, !dbg !4665
  %and5 = and i64 %8, 8192, !dbg !4667
  %tobool6 = icmp ne i64 %and5, 0, !dbg !4667
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !4668

if.then7:                                         ; preds = %if.end4
  %9 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4669
  call void @pci_setup_bridge_mmio_pref(%struct.pci_dev* %9) #11, !dbg !4670
  br label %if.end8, !dbg !4670

if.end8:                                          ; preds = %if.then7, %if.end4
  %10 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !4671
  %11 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4672
  %bridge_ctl = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %11, i32 0, i32 18, !dbg !4673
  %12 = load i16, i16* %bridge_ctl, align 4, !dbg !4673
  %call = call i32 @pci_write_config_word(%struct.pci_dev* %10, i32 62, i16 zeroext %12) #11, !dbg !4674
  ret void, !dbg !4675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_claim_bridge_resource(%struct.pci_dev* %bridge, i32 %i) #0 !dbg !4676 {
entry:
  %retval = alloca i32, align 4
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %i.addr = alloca i32, align 4
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !4677, metadata !DIExpression()), !dbg !4678
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !4679, metadata !DIExpression()), !dbg !4680
  %0 = load i32, i32* %i.addr, align 4, !dbg !4681
  %cmp = icmp slt i32 %0, 13, !dbg !4683
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4684

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %i.addr, align 4, !dbg !4685
  %cmp1 = icmp sgt i32 %1, 16, !dbg !4686
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4687

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !4688
  br label %return, !dbg !4688

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4689
  %3 = load i32, i32* %i.addr, align 4, !dbg !4691
  %call = call i32 @pci_claim_resource(%struct.pci_dev* %2, i32 %3) #11, !dbg !4692
  %cmp2 = icmp eq i32 %call, 0, !dbg !4693
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4694

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4695
  br label %return, !dbg !4695

if.end4:                                          ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4696
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 11, !dbg !4698
  %5 = load i32, i32* %class, align 4, !dbg !4698
  %shr = lshr i32 %5, 8, !dbg !4699
  %cmp5 = icmp ne i32 %shr, 1540, !dbg !4700
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4701

if.then6:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !4702
  br label %return, !dbg !4702

if.end7:                                          ; preds = %if.end4
  %6 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4703
  %7 = load i32, i32* %i.addr, align 4, !dbg !4705
  %call8 = call zeroext i1 @pci_bus_clip_resource(%struct.pci_dev* %6, i32 %7) #11, !dbg !4706
  br i1 %call8, label %if.end10, label %if.then9, !dbg !4707

if.then9:                                         ; preds = %if.end7
  store i32 -22, i32* %retval, align 4, !dbg !4708
  br label %return, !dbg !4708

if.end10:                                         ; preds = %if.end7
  %8 = load i32, i32* %i.addr, align 4, !dbg !4709
  switch i32 %8, label %sw.default [
    i32 13, label %sw.bb
    i32 14, label %sw.bb11
    i32 15, label %sw.bb12
  ], !dbg !4710

sw.bb:                                            ; preds = %if.end10
  %9 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4711
  call void @pci_setup_bridge_io(%struct.pci_dev* %9) #11, !dbg !4713
  br label %sw.epilog, !dbg !4714

sw.bb11:                                          ; preds = %if.end10
  %10 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4715
  call void @pci_setup_bridge_mmio(%struct.pci_dev* %10) #11, !dbg !4716
  br label %sw.epilog, !dbg !4717

sw.bb12:                                          ; preds = %if.end10
  %11 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4718
  call void @pci_setup_bridge_mmio_pref(%struct.pci_dev* %11) #11, !dbg !4719
  br label %sw.epilog, !dbg !4720

sw.default:                                       ; preds = %if.end10
  store i32 -22, i32* %retval, align 4, !dbg !4721
  br label %return, !dbg !4721

sw.epilog:                                        ; preds = %sw.bb12, %sw.bb11, %sw.bb
  %12 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4722
  %13 = load i32, i32* %i.addr, align 4, !dbg !4724
  %call13 = call i32 @pci_claim_resource(%struct.pci_dev* %12, i32 %13) #11, !dbg !4725
  %cmp14 = icmp eq i32 %call13, 0, !dbg !4726
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !4727

if.then15:                                        ; preds = %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !4728
  br label %return, !dbg !4728

if.end16:                                         ; preds = %sw.epilog
  store i32 -22, i32* %retval, align 4, !dbg !4729
  br label %return, !dbg !4729

return:                                           ; preds = %if.end16, %if.then15, %sw.default, %if.then9, %if.then6, %if.then3, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !4730
  ret i32 %14, !dbg !4730
}

; Function Attrs: noredzone
declare dso_local i32 @pci_claim_resource(%struct.pci_dev*, i32) #3

; Function Attrs: noredzone
declare dso_local zeroext i1 @pci_bus_clip_resource(%struct.pci_dev*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_setup_bridge_io(%struct.pci_dev* %bridge) #0 !dbg !4731 {
entry:
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %res = alloca %struct.resource*, align 8
  %region = alloca %struct.pci_bus_region, align 8
  %io_mask = alloca i64, align 8
  %io_base_lo = alloca i8, align 1
  %io_limit_lo = alloca i8, align 1
  %l = alloca i16, align 2
  %io_upper16 = alloca i32, align 4
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !4732, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !4734, metadata !DIExpression()), !dbg !4735
  call void @llvm.dbg.declare(metadata %struct.pci_bus_region* %region, metadata !4736, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.declare(metadata i64* %io_mask, metadata !4738, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.declare(metadata i8* %io_base_lo, metadata !4740, metadata !DIExpression()), !dbg !4741
  call void @llvm.dbg.declare(metadata i8* %io_limit_lo, metadata !4742, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.declare(metadata i16* %l, metadata !4744, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.declare(metadata i32* %io_upper16, metadata !4746, metadata !DIExpression()), !dbg !4747
  store i64 -16, i64* %io_mask, align 8, !dbg !4748
  %0 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4749
  %io_window_1k = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !4751
  %1 = bitcast [5 x i8]* %io_window_1k to i40*, !dbg !4751
  %bf.load = load i40, i40* %1, align 1, !dbg !4751
  %bf.lshr = lshr i40 %bf.load, 30, !dbg !4751
  %bf.clear = and i40 %bf.lshr, 1, !dbg !4751
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !4751
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !4749
  br i1 %tobool, label %if.then, label %if.end, !dbg !4752

if.then:                                          ; preds = %entry
  store i64 -4, i64* %io_mask, align 8, !dbg !4753
  br label %if.end, !dbg !4754

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4755
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 44, !dbg !4756
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 13, !dbg !4755
  store %struct.resource* %arrayidx, %struct.resource** %res, align 8, !dbg !4757
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4758
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 1, !dbg !4759
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !4759
  %5 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4760
  call void @pcibios_resource_to_bus(%struct.pci_bus* %4, %struct.pci_bus_region* %region, %struct.resource* %5) #11, !dbg !4761
  %6 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4762
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %6, i32 0, i32 3, !dbg !4764
  %7 = load i64, i64* %flags, align 8, !dbg !4764
  %and = and i64 %7, 256, !dbg !4765
  %tobool1 = icmp ne i64 %and, 0, !dbg !4765
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !4766

if.then2:                                         ; preds = %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4767
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %8, i32 28, i16* %l) #11, !dbg !4769
  %start = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !4770
  %9 = load i64, i64* %start, align 8, !dbg !4770
  %shr = lshr i64 %9, 8, !dbg !4771
  %10 = load i64, i64* %io_mask, align 8, !dbg !4772
  %and3 = and i64 %shr, %10, !dbg !4773
  %conv = trunc i64 %and3 to i8, !dbg !4774
  store i8 %conv, i8* %io_base_lo, align 1, !dbg !4775
  %end = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !4776
  %11 = load i64, i64* %end, align 8, !dbg !4776
  %shr4 = lshr i64 %11, 8, !dbg !4777
  %12 = load i64, i64* %io_mask, align 8, !dbg !4778
  %and5 = and i64 %shr4, %12, !dbg !4779
  %conv6 = trunc i64 %and5 to i8, !dbg !4780
  store i8 %conv6, i8* %io_limit_lo, align 1, !dbg !4781
  %13 = load i8, i8* %io_limit_lo, align 1, !dbg !4782
  %conv7 = zext i8 %13 to i16, !dbg !4783
  %conv8 = zext i16 %conv7 to i32, !dbg !4783
  %shl = shl i32 %conv8, 8, !dbg !4784
  %14 = load i8, i8* %io_base_lo, align 1, !dbg !4785
  %conv9 = zext i8 %14 to i32, !dbg !4785
  %or = or i32 %shl, %conv9, !dbg !4786
  %conv10 = trunc i32 %or to i16, !dbg !4787
  store i16 %conv10, i16* %l, align 2, !dbg !4788
  %end11 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !4789
  %15 = load i64, i64* %end11, align 8, !dbg !4789
  %and12 = and i64 %15, 4294901760, !dbg !4790
  %start13 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !4791
  %16 = load i64, i64* %start13, align 8, !dbg !4791
  %shr14 = lshr i64 %16, 16, !dbg !4792
  %or15 = or i64 %and12, %shr14, !dbg !4793
  %conv16 = trunc i64 %or15 to i32, !dbg !4794
  store i32 %conv16, i32* %io_upper16, align 4, !dbg !4795
  %17 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4796
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 41, !dbg !4796
  %18 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4796
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), %struct.resource* %18) #10, !dbg !4796
  br label %if.end17, !dbg !4797

if.else:                                          ; preds = %if.end
  store i32 0, i32* %io_upper16, align 4, !dbg !4798
  store i16 240, i16* %l, align 2, !dbg !4800
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then2
  %19 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4801
  %call18 = call i32 @pci_write_config_dword(%struct.pci_dev* %19, i32 48, i32 65535) #11, !dbg !4802
  %20 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4803
  %21 = load i16, i16* %l, align 2, !dbg !4804
  %call19 = call i32 @pci_write_config_word(%struct.pci_dev* %20, i32 28, i16 zeroext %21) #11, !dbg !4805
  %22 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4806
  %23 = load i32, i32* %io_upper16, align 4, !dbg !4807
  %call20 = call i32 @pci_write_config_dword(%struct.pci_dev* %22, i32 48, i32 %23) #11, !dbg !4808
  ret void, !dbg !4809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_setup_bridge_mmio(%struct.pci_dev* %bridge) #0 !dbg !4810 {
entry:
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %res = alloca %struct.resource*, align 8
  %region = alloca %struct.pci_bus_region, align 8
  %l = alloca i32, align 4
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !4811, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !4813, metadata !DIExpression()), !dbg !4814
  call void @llvm.dbg.declare(metadata %struct.pci_bus_region* %region, metadata !4815, metadata !DIExpression()), !dbg !4816
  call void @llvm.dbg.declare(metadata i32* %l, metadata !4817, metadata !DIExpression()), !dbg !4818
  %0 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4819
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 44, !dbg !4820
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 14, !dbg !4819
  store %struct.resource* %arrayidx, %struct.resource** %res, align 8, !dbg !4821
  %1 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4822
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 1, !dbg !4823
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !4823
  %3 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4824
  call void @pcibios_resource_to_bus(%struct.pci_bus* %2, %struct.pci_bus_region* %region, %struct.resource* %3) #11, !dbg !4825
  %4 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4826
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %4, i32 0, i32 3, !dbg !4828
  %5 = load i64, i64* %flags, align 8, !dbg !4828
  %and = and i64 %5, 512, !dbg !4829
  %tobool = icmp ne i64 %and, 0, !dbg !4829
  br i1 %tobool, label %if.then, label %if.else, !dbg !4830

if.then:                                          ; preds = %entry
  %start = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !4831
  %6 = load i64, i64* %start, align 8, !dbg !4831
  %shr = lshr i64 %6, 16, !dbg !4833
  %and1 = and i64 %shr, 65520, !dbg !4834
  %conv = trunc i64 %and1 to i32, !dbg !4835
  store i32 %conv, i32* %l, align 4, !dbg !4836
  %end = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !4837
  %7 = load i64, i64* %end, align 8, !dbg !4837
  %and2 = and i64 %7, 4293918720, !dbg !4838
  %8 = load i32, i32* %l, align 4, !dbg !4839
  %conv3 = zext i32 %8 to i64, !dbg !4839
  %or = or i64 %conv3, %and2, !dbg !4839
  %conv4 = trunc i64 %or to i32, !dbg !4839
  store i32 %conv4, i32* %l, align 4, !dbg !4839
  %9 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4840
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !4840
  %10 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4840
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), %struct.resource* %10) #10, !dbg !4840
  br label %if.end, !dbg !4841

if.else:                                          ; preds = %entry
  store i32 65520, i32* %l, align 4, !dbg !4842
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4844
  %12 = load i32, i32* %l, align 4, !dbg !4845
  %call = call i32 @pci_write_config_dword(%struct.pci_dev* %11, i32 32, i32 %12) #11, !dbg !4846
  ret void, !dbg !4847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_setup_bridge_mmio_pref(%struct.pci_dev* %bridge) #0 !dbg !4848 {
entry:
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %res = alloca %struct.resource*, align 8
  %region = alloca %struct.pci_bus_region, align 8
  %l = alloca i32, align 4
  %bu = alloca i32, align 4
  %lu = alloca i32, align 4
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !4849, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !4851, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.declare(metadata %struct.pci_bus_region* %region, metadata !4853, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.declare(metadata i32* %l, metadata !4855, metadata !DIExpression()), !dbg !4856
  call void @llvm.dbg.declare(metadata i32* %bu, metadata !4857, metadata !DIExpression()), !dbg !4858
  call void @llvm.dbg.declare(metadata i32* %lu, metadata !4859, metadata !DIExpression()), !dbg !4860
  %0 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4861
  %call = call i32 @pci_write_config_dword(%struct.pci_dev* %0, i32 44, i32 0) #11, !dbg !4862
  store i32 0, i32* %lu, align 4, !dbg !4863
  store i32 0, i32* %bu, align 4, !dbg !4864
  %1 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4865
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 44, !dbg !4866
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 15, !dbg !4865
  store %struct.resource* %arrayidx, %struct.resource** %res, align 8, !dbg !4867
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4868
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 1, !dbg !4869
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !4869
  %4 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4870
  call void @pcibios_resource_to_bus(%struct.pci_bus* %3, %struct.pci_bus_region* %region, %struct.resource* %4) #11, !dbg !4871
  %5 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4872
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %5, i32 0, i32 3, !dbg !4874
  %6 = load i64, i64* %flags, align 8, !dbg !4874
  %and = and i64 %6, 8192, !dbg !4875
  %tobool = icmp ne i64 %and, 0, !dbg !4875
  br i1 %tobool, label %if.then, label %if.else, !dbg !4876

if.then:                                          ; preds = %entry
  %start = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !4877
  %7 = load i64, i64* %start, align 8, !dbg !4877
  %shr = lshr i64 %7, 16, !dbg !4879
  %and1 = and i64 %shr, 65520, !dbg !4880
  %conv = trunc i64 %and1 to i32, !dbg !4881
  store i32 %conv, i32* %l, align 4, !dbg !4882
  %end = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !4883
  %8 = load i64, i64* %end, align 8, !dbg !4883
  %and2 = and i64 %8, 4293918720, !dbg !4884
  %9 = load i32, i32* %l, align 4, !dbg !4885
  %conv3 = zext i32 %9 to i64, !dbg !4885
  %or = or i64 %conv3, %and2, !dbg !4885
  %conv4 = trunc i64 %or to i32, !dbg !4885
  store i32 %conv4, i32* %l, align 4, !dbg !4885
  %10 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4886
  %flags5 = getelementptr inbounds %struct.resource, %struct.resource* %10, i32 0, i32 3, !dbg !4888
  %11 = load i64, i64* %flags5, align 8, !dbg !4888
  %and6 = and i64 %11, 1048576, !dbg !4889
  %tobool7 = icmp ne i64 %and6, 0, !dbg !4889
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !4890

if.then8:                                         ; preds = %if.then
  %start9 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !4891
  %12 = load i64, i64* %start9, align 8, !dbg !4891
  %shr10 = lshr i64 %12, 16, !dbg !4891
  %shr11 = lshr i64 %shr10, 16, !dbg !4891
  %conv12 = trunc i64 %shr11 to i32, !dbg !4891
  store i32 %conv12, i32* %bu, align 4, !dbg !4893
  %end13 = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 1, !dbg !4894
  %13 = load i64, i64* %end13, align 8, !dbg !4894
  %shr14 = lshr i64 %13, 16, !dbg !4894
  %shr15 = lshr i64 %shr14, 16, !dbg !4894
  %conv16 = trunc i64 %shr15 to i32, !dbg !4894
  store i32 %conv16, i32* %lu, align 4, !dbg !4895
  br label %if.end, !dbg !4896

if.end:                                           ; preds = %if.then8, %if.then
  %14 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4897
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !4897
  %15 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4897
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), %struct.resource* %15) #10, !dbg !4897
  br label %if.end17, !dbg !4898

if.else:                                          ; preds = %entry
  store i32 65520, i32* %l, align 4, !dbg !4899
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end
  %16 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4901
  %17 = load i32, i32* %l, align 4, !dbg !4902
  %call18 = call i32 @pci_write_config_dword(%struct.pci_dev* %16, i32 36, i32 %17) #11, !dbg !4903
  %18 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4904
  %19 = load i32, i32* %bu, align 4, !dbg !4905
  %call19 = call i32 @pci_write_config_dword(%struct.pci_dev* %18, i32 40, i32 %19) #11, !dbg !4906
  %20 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !4907
  %21 = load i32, i32* %lu, align 4, !dbg !4908
  %call20 = call i32 @pci_write_config_dword(%struct.pci_dev* %20, i32 44, i32 %21) #11, !dbg !4909
  ret void, !dbg !4910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local i64 @pcibios_window_alignment(%struct.pci_bus* %bus, i64 %type) #0 !dbg !4911 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %type.addr = alloca i64, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !4914, metadata !DIExpression()), !dbg !4915
  store i64 %type, i64* %type.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type.addr, metadata !4916, metadata !DIExpression()), !dbg !4917
  ret i64 1, !dbg !4918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @pci_cardbus_resource_alignment(%struct.resource* %res) #0 !dbg !4919 {
entry:
  %retval = alloca i64, align 8
  %res.addr = alloca %struct.resource*, align 8
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !4922, metadata !DIExpression()), !dbg !4923
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4924
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %0, i32 0, i32 3, !dbg !4926
  %1 = load i64, i64* %flags, align 8, !dbg !4926
  %and = and i64 %1, 256, !dbg !4927
  %tobool = icmp ne i64 %and, 0, !dbg !4927
  br i1 %tobool, label %if.then, label %if.end, !dbg !4928

if.then:                                          ; preds = %entry
  %2 = load i64, i64* @pci_cardbus_io_size, align 8, !dbg !4929
  store i64 %2, i64* %retval, align 8, !dbg !4930
  br label %return, !dbg !4930

if.end:                                           ; preds = %entry
  %3 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !4931
  %flags1 = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 3, !dbg !4933
  %4 = load i64, i64* %flags1, align 8, !dbg !4933
  %and2 = and i64 %4, 512, !dbg !4934
  %tobool3 = icmp ne i64 %and2, 0, !dbg !4934
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !4935

if.then4:                                         ; preds = %if.end
  %5 = load i64, i64* @pci_cardbus_mem_size, align 8, !dbg !4936
  store i64 %5, i64* %retval, align 8, !dbg !4937
  br label %return, !dbg !4937

if.end5:                                          ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !4938
  br label %return, !dbg !4938

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %6 = load i64, i64* %retval, align 8, !dbg !4939
  ret i64 %6, !dbg !4939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @__pci_bus_size_bridges(%struct.pci_bus* %bus, %struct.list_head* %realloc_head) #0 !dbg !4940 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %realloc_head.addr = alloca %struct.list_head*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %mask = alloca i64, align 8
  %prefmask = alloca i64, align 8
  %type2 = alloca i64, align 8
  %type3 = alloca i64, align 8
  %additional_io_size = alloca i64, align 8
  %additional_mmio_size = alloca i64, align 8
  %additional_mmio_pref_size = alloca i64, align 8
  %pref = alloca %struct.resource*, align 8
  %host = alloca %struct.pci_host_bridge*, align 8
  %hdr_type = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %b = alloca %struct.pci_bus*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp9 = alloca %struct.pci_dev*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp15 = alloca %struct.pci_host_bridge*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !4943, metadata !DIExpression()), !dbg !4944
  store %struct.list_head* %realloc_head, %struct.list_head** %realloc_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %realloc_head.addr, metadata !4945, metadata !DIExpression()), !dbg !4946
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !4947, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !4949, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.declare(metadata i64* %prefmask, metadata !4951, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.declare(metadata i64* %type2, metadata !4953, metadata !DIExpression()), !dbg !4954
  store i64 0, i64* %type2, align 8, !dbg !4954
  call void @llvm.dbg.declare(metadata i64* %type3, metadata !4955, metadata !DIExpression()), !dbg !4956
  store i64 0, i64* %type3, align 8, !dbg !4956
  call void @llvm.dbg.declare(metadata i64* %additional_io_size, metadata !4957, metadata !DIExpression()), !dbg !4958
  store i64 0, i64* %additional_io_size, align 8, !dbg !4958
  call void @llvm.dbg.declare(metadata i64* %additional_mmio_size, metadata !4959, metadata !DIExpression()), !dbg !4960
  store i64 0, i64* %additional_mmio_size, align 8, !dbg !4960
  call void @llvm.dbg.declare(metadata i64* %additional_mmio_pref_size, metadata !4961, metadata !DIExpression()), !dbg !4962
  store i64 0, i64* %additional_mmio_pref_size, align 8, !dbg !4962
  call void @llvm.dbg.declare(metadata %struct.resource** %pref, metadata !4963, metadata !DIExpression()), !dbg !4964
  call void @llvm.dbg.declare(metadata %struct.pci_host_bridge** %host, metadata !4965, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.declare(metadata i32* %hdr_type, metadata !4967, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4969, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4971, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4973, metadata !DIExpression()), !dbg !4976
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4976
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 3, !dbg !4976
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !4976
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4976
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !4976
  store i8* %2, i8** %__mptr, align 8, !dbg !4976
  br label %do.body, !dbg !4976

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4977

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !4976
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !4976
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !4976
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !4977
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !4976
  store %struct.pci_dev* %5, %struct.pci_dev** %dev, align 8, !dbg !4979
  br label %for.cond, !dbg !4979

for.cond:                                         ; preds = %do.end8, %do.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4980
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 0, !dbg !4980
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4980
  %devices1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 3, !dbg !4980
  %cmp = icmp eq %struct.list_head* %bus_list, %devices1, !dbg !4980
  %lnot = xor i1 %cmp, true, !dbg !4980
  br i1 %lnot, label %for.body, label %for.end, !dbg !4979

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b, metadata !4982, metadata !DIExpression()), !dbg !4984
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4985
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 2, !dbg !4986
  %9 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !4986
  store %struct.pci_bus* %9, %struct.pci_bus** %b, align 8, !dbg !4984
  %10 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !4987
  %tobool = icmp ne %struct.pci_bus* %10, null, !dbg !4987
  br i1 %tobool, label %if.end, label %if.then, !dbg !4989

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !4990

if.end:                                           ; preds = %for.body
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !4991
  %hdr_type2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 13, !dbg !4992
  %12 = load i8, i8* %hdr_type2, align 1, !dbg !4992
  %conv = zext i8 %12 to i32, !dbg !4991
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb3
  ], !dbg !4993

sw.bb:                                            ; preds = %if.end
  %13 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !4994
  %14 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !4996
  call void @pci_bus_size_cardbus(%struct.pci_bus* %13, %struct.list_head* %14) #11, !dbg !4997
  br label %sw.epilog, !dbg !4998

sw.bb3:                                           ; preds = %if.end
  br label %sw.default, !dbg !4998

sw.default:                                       ; preds = %if.end, %sw.bb3
  %15 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !4999
  %16 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5000
  call void @__pci_bus_size_bridges(%struct.pci_bus* %15, %struct.list_head* %16) #11, !dbg !5001
  br label %sw.epilog, !dbg !5002

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %for.inc, !dbg !5003

for.inc:                                          ; preds = %sw.epilog, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !5004, metadata !DIExpression()), !dbg !5006
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5006
  %bus_list5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 0, !dbg !5006
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list5, i32 0, i32 0, !dbg !5006
  %18 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !5006
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !5006
  store i8* %19, i8** %__mptr4, align 8, !dbg !5006
  br label %do.body7, !dbg !5006

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !5007

do.end8:                                          ; preds = %do.body7
  %20 = load i8*, i8** %__mptr4, align 8, !dbg !5006
  %add.ptr10 = getelementptr i8, i8* %20, i64 0, !dbg !5006
  %21 = bitcast i8* %add.ptr10 to %struct.pci_dev*, !dbg !5006
  store %struct.pci_dev* %21, %struct.pci_dev** %tmp9, align 8, !dbg !5007
  %22 = load %struct.pci_dev*, %struct.pci_dev** %tmp9, align 8, !dbg !5006
  store %struct.pci_dev* %22, %struct.pci_dev** %dev, align 8, !dbg !4980
  br label %for.cond, !dbg !4980, !llvm.loop !5009

for.end:                                          ; preds = %for.cond
  %23 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5011
  %call = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %23) #11, !dbg !5013
  br i1 %call, label %if.then11, label %if.else, !dbg !5014

if.then11:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !5015, metadata !DIExpression()), !dbg !5018
  %24 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5018
  %bridge = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %24, i32 0, i32 20, !dbg !5018
  %25 = load %struct.device*, %struct.device** %bridge, align 8, !dbg !5018
  %26 = bitcast %struct.device* %25 to i8*, !dbg !5018
  store i8* %26, i8** %__mptr12, align 8, !dbg !5018
  br label %do.body13, !dbg !5018

do.body13:                                        ; preds = %if.then11
  br label %do.end14, !dbg !5019

do.end14:                                         ; preds = %do.body13
  %27 = load i8*, i8** %__mptr12, align 8, !dbg !5018
  %add.ptr16 = getelementptr i8, i8* %27, i64 0, !dbg !5018
  %28 = bitcast i8* %add.ptr16 to %struct.pci_host_bridge*, !dbg !5018
  store %struct.pci_host_bridge* %28, %struct.pci_host_bridge** %tmp15, align 8, !dbg !5019
  %29 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %tmp15, align 8, !dbg !5018
  store %struct.pci_host_bridge* %29, %struct.pci_host_bridge** %host, align 8, !dbg !5021
  %30 = load %struct.pci_host_bridge*, %struct.pci_host_bridge** %host, align 8, !dbg !5022
  %size_windows = getelementptr inbounds %struct.pci_host_bridge, %struct.pci_host_bridge* %30, i32 0, i32 13, !dbg !5024
  %bf.load = load i16, i16* %size_windows, align 8, !dbg !5024
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !5024
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5024
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5024
  %tobool17 = icmp ne i32 %bf.cast, 0, !dbg !5022
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !5025

if.then18:                                        ; preds = %do.end14
  br label %sw.epilog88, !dbg !5026

if.end19:                                         ; preds = %do.end14
  store i32 0, i32* %i, align 4, !dbg !5027
  br label %for.cond20, !dbg !5027

for.cond20:                                       ; preds = %for.inc30, %if.end19
  %31 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5029
  %32 = load i32, i32* %i, align 4, !dbg !5029
  %call21 = call %struct.resource* @pci_bus_resource_n(%struct.pci_bus* %31, i32 %32) #11, !dbg !5029
  store %struct.resource* %call21, %struct.resource** %pref, align 8, !dbg !5029
  %tobool22 = icmp ne %struct.resource* %call21, null, !dbg !5029
  br i1 %tobool22, label %lor.end, label %lor.rhs, !dbg !5029

lor.rhs:                                          ; preds = %for.cond20
  %33 = load i32, i32* %i, align 4, !dbg !5029
  %cmp23 = icmp slt i32 %33, 4, !dbg !5029
  br label %lor.end, !dbg !5029

lor.end:                                          ; preds = %lor.rhs, %for.cond20
  %34 = phi i1 [ true, %for.cond20 ], [ %cmp23, %lor.rhs ]
  br i1 %34, label %for.body25, label %for.end31, !dbg !5027

for.body25:                                       ; preds = %lor.end
  %35 = load %struct.resource*, %struct.resource** %pref, align 8, !dbg !5031
  %tobool26 = icmp ne %struct.resource* %35, null, !dbg !5031
  br i1 %tobool26, label %land.lhs.true, label %if.end29, !dbg !5033

land.lhs.true:                                    ; preds = %for.body25
  %36 = load %struct.resource*, %struct.resource** %pref, align 8, !dbg !5034
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %36, i32 0, i32 3, !dbg !5035
  %37 = load i64, i64* %flags, align 8, !dbg !5035
  %and = and i64 %37, 8192, !dbg !5036
  %tobool27 = icmp ne i64 %and, 0, !dbg !5036
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !5037

if.then28:                                        ; preds = %land.lhs.true
  br label %for.end31, !dbg !5038

if.end29:                                         ; preds = %land.lhs.true, %for.body25
  br label %for.inc30, !dbg !5039

for.inc30:                                        ; preds = %if.end29
  %38 = load i32, i32* %i, align 4, !dbg !5029
  %inc = add i32 %38, 1, !dbg !5029
  store i32 %inc, i32* %i, align 4, !dbg !5029
  br label %for.cond20, !dbg !5029, !llvm.loop !5040

for.end31:                                        ; preds = %if.then28, %lor.end
  store i32 -1, i32* %hdr_type, align 4, !dbg !5042
  br label %if.end35, !dbg !5043

if.else:                                          ; preds = %for.end
  %39 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5044
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %39, i32 0, i32 4, !dbg !5046
  %40 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !5046
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 44, !dbg !5047
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 15, !dbg !5044
  store %struct.resource* %arrayidx, %struct.resource** %pref, align 8, !dbg !5048
  %41 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5049
  %self32 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %41, i32 0, i32 4, !dbg !5050
  %42 = load %struct.pci_dev*, %struct.pci_dev** %self32, align 8, !dbg !5050
  %hdr_type33 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 13, !dbg !5051
  %43 = load i8, i8* %hdr_type33, align 1, !dbg !5051
  %conv34 = zext i8 %43 to i32, !dbg !5049
  store i32 %conv34, i32* %hdr_type, align 4, !dbg !5052
  br label %if.end35

if.end35:                                         ; preds = %if.else, %for.end31
  %44 = load i32, i32* %hdr_type, align 4, !dbg !5053
  switch i32 %44, label %sw.default46 [
    i32 2, label %sw.bb36
    i32 1, label %sw.bb37
  ], !dbg !5054

sw.bb36:                                          ; preds = %if.end35
  br label %sw.epilog88, !dbg !5055

sw.bb37:                                          ; preds = %if.end35
  %45 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5057
  call void @pci_bridge_check_ranges(%struct.pci_bus* %45) #11, !dbg !5058
  %46 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5059
  %self38 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %46, i32 0, i32 4, !dbg !5061
  %47 = load %struct.pci_dev*, %struct.pci_dev** %self38, align 8, !dbg !5061
  %is_hotplug_bridge = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %47, i32 0, i32 46, !dbg !5062
  %48 = bitcast [5 x i8]* %is_hotplug_bridge to i40*, !dbg !5062
  %bf.load39 = load i40, i40* %48, align 1, !dbg !5062
  %bf.lshr40 = lshr i40 %bf.load39, 24, !dbg !5062
  %bf.clear41 = and i40 %bf.lshr40, 1, !dbg !5062
  %bf.cast42 = trunc i40 %bf.clear41 to i32, !dbg !5062
  %tobool43 = icmp ne i32 %bf.cast42, 0, !dbg !5059
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !5063

if.then44:                                        ; preds = %sw.bb37
  %49 = load i64, i64* @pci_hotplug_io_size, align 8, !dbg !5064
  store i64 %49, i64* %additional_io_size, align 8, !dbg !5066
  %50 = load i64, i64* @pci_hotplug_mmio_size, align 8, !dbg !5067
  store i64 %50, i64* %additional_mmio_size, align 8, !dbg !5068
  %51 = load i64, i64* @pci_hotplug_mmio_pref_size, align 8, !dbg !5069
  store i64 %51, i64* %additional_mmio_pref_size, align 8, !dbg !5070
  br label %if.end45, !dbg !5071

if.end45:                                         ; preds = %if.then44, %sw.bb37
  br label %sw.default46, !dbg !5062

sw.default46:                                     ; preds = %if.end35, %if.end45
  %52 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5072
  %53 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5073
  %tobool47 = icmp ne %struct.list_head* %53, null, !dbg !5073
  br i1 %tobool47, label %cond.true, label %cond.false, !dbg !5073

cond.true:                                        ; preds = %sw.default46
  br label %cond.end, !dbg !5073

cond.false:                                       ; preds = %sw.default46
  %54 = load i64, i64* %additional_io_size, align 8, !dbg !5074
  br label %cond.end, !dbg !5073

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %54, %cond.false ], !dbg !5073
  %55 = load i64, i64* %additional_io_size, align 8, !dbg !5075
  %56 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5076
  call void @pbus_size_io(%struct.pci_bus* %52, i64 %cond, i64 %55, %struct.list_head* %56) #11, !dbg !5077
  store i64 512, i64* %mask, align 8, !dbg !5078
  store i64 8704, i64* %prefmask, align 8, !dbg !5079
  %57 = load %struct.resource*, %struct.resource** %pref, align 8, !dbg !5080
  %tobool48 = icmp ne %struct.resource* %57, null, !dbg !5080
  br i1 %tobool48, label %land.lhs.true49, label %if.end66, !dbg !5082

land.lhs.true49:                                  ; preds = %cond.end
  %58 = load %struct.resource*, %struct.resource** %pref, align 8, !dbg !5083
  %flags50 = getelementptr inbounds %struct.resource, %struct.resource* %58, i32 0, i32 3, !dbg !5084
  %59 = load i64, i64* %flags50, align 8, !dbg !5084
  %and51 = and i64 %59, 1048576, !dbg !5085
  %tobool52 = icmp ne i64 %and51, 0, !dbg !5085
  br i1 %tobool52, label %if.then53, label %if.end66, !dbg !5086

if.then53:                                        ; preds = %land.lhs.true49
  %60 = load i64, i64* %prefmask, align 8, !dbg !5087
  %or = or i64 %60, 1048576, !dbg !5087
  store i64 %or, i64* %prefmask, align 8, !dbg !5087
  %61 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5089
  %62 = load i64, i64* %prefmask, align 8, !dbg !5090
  %63 = load i64, i64* %prefmask, align 8, !dbg !5091
  %64 = load i64, i64* %prefmask, align 8, !dbg !5092
  %65 = load i64, i64* %prefmask, align 8, !dbg !5093
  %66 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5094
  %tobool54 = icmp ne %struct.list_head* %66, null, !dbg !5094
  br i1 %tobool54, label %cond.true55, label %cond.false56, !dbg !5094

cond.true55:                                      ; preds = %if.then53
  br label %cond.end57, !dbg !5094

cond.false56:                                     ; preds = %if.then53
  %67 = load i64, i64* %additional_mmio_pref_size, align 8, !dbg !5095
  br label %cond.end57, !dbg !5094

cond.end57:                                       ; preds = %cond.false56, %cond.true55
  %cond58 = phi i64 [ 0, %cond.true55 ], [ %67, %cond.false56 ], !dbg !5094
  %68 = load i64, i64* %additional_mmio_pref_size, align 8, !dbg !5096
  %69 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5097
  %call59 = call i32 @pbus_size_mem(%struct.pci_bus* %61, i64 %62, i64 %63, i64 %64, i64 %65, i64 %cond58, i64 %68, %struct.list_head* %69) #11, !dbg !5098
  store i32 %call59, i32* %ret, align 4, !dbg !5099
  %70 = load i32, i32* %ret, align 4, !dbg !5100
  %cmp60 = icmp eq i32 %70, 0, !dbg !5102
  br i1 %cmp60, label %if.then62, label %if.end65, !dbg !5103

if.then62:                                        ; preds = %cond.end57
  %71 = load i64, i64* %prefmask, align 8, !dbg !5104
  store i64 %71, i64* %mask, align 8, !dbg !5106
  %72 = load i64, i64* %prefmask, align 8, !dbg !5107
  %and63 = and i64 %72, -1048577, !dbg !5108
  store i64 %and63, i64* %type2, align 8, !dbg !5109
  %73 = load i64, i64* %prefmask, align 8, !dbg !5110
  %and64 = and i64 %73, -8193, !dbg !5111
  store i64 %and64, i64* %type3, align 8, !dbg !5112
  br label %if.end65, !dbg !5113

if.end65:                                         ; preds = %if.then62, %cond.end57
  br label %if.end66, !dbg !5114

if.end66:                                         ; preds = %if.end65, %land.lhs.true49, %cond.end
  %74 = load i64, i64* %type2, align 8, !dbg !5115
  %tobool67 = icmp ne i64 %74, 0, !dbg !5115
  br i1 %tobool67, label %if.end81, label %if.then68, !dbg !5117

if.then68:                                        ; preds = %if.end66
  %75 = load i64, i64* %prefmask, align 8, !dbg !5118
  %and69 = and i64 %75, -1048577, !dbg !5118
  store i64 %and69, i64* %prefmask, align 8, !dbg !5118
  %76 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5120
  %77 = load i64, i64* %prefmask, align 8, !dbg !5121
  %78 = load i64, i64* %prefmask, align 8, !dbg !5122
  %79 = load i64, i64* %prefmask, align 8, !dbg !5123
  %80 = load i64, i64* %prefmask, align 8, !dbg !5124
  %81 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5125
  %tobool70 = icmp ne %struct.list_head* %81, null, !dbg !5125
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !5125

cond.true71:                                      ; preds = %if.then68
  br label %cond.end73, !dbg !5125

cond.false72:                                     ; preds = %if.then68
  %82 = load i64, i64* %additional_mmio_pref_size, align 8, !dbg !5126
  br label %cond.end73, !dbg !5125

cond.end73:                                       ; preds = %cond.false72, %cond.true71
  %cond74 = phi i64 [ 0, %cond.true71 ], [ %82, %cond.false72 ], !dbg !5125
  %83 = load i64, i64* %additional_mmio_pref_size, align 8, !dbg !5127
  %84 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5128
  %call75 = call i32 @pbus_size_mem(%struct.pci_bus* %76, i64 %77, i64 %78, i64 %79, i64 %80, i64 %cond74, i64 %83, %struct.list_head* %84) #11, !dbg !5129
  store i32 %call75, i32* %ret, align 4, !dbg !5130
  %85 = load i32, i32* %ret, align 4, !dbg !5131
  %cmp76 = icmp eq i32 %85, 0, !dbg !5133
  br i1 %cmp76, label %if.then78, label %if.else79, !dbg !5134

if.then78:                                        ; preds = %cond.end73
  %86 = load i64, i64* %prefmask, align 8, !dbg !5135
  store i64 %86, i64* %mask, align 8, !dbg !5136
  br label %if.end80, !dbg !5137

if.else79:                                        ; preds = %cond.end73
  %87 = load i64, i64* %additional_mmio_pref_size, align 8, !dbg !5138
  %88 = load i64, i64* %additional_mmio_size, align 8, !dbg !5139
  %add = add i64 %88, %87, !dbg !5139
  store i64 %add, i64* %additional_mmio_size, align 8, !dbg !5139
  br label %if.end80

if.end80:                                         ; preds = %if.else79, %if.then78
  store i64 512, i64* %type3, align 8, !dbg !5140
  store i64 512, i64* %type2, align 8, !dbg !5141
  br label %if.end81, !dbg !5142

if.end81:                                         ; preds = %if.end80, %if.end66
  %89 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5143
  %90 = load i64, i64* %mask, align 8, !dbg !5144
  %91 = load i64, i64* %type2, align 8, !dbg !5145
  %92 = load i64, i64* %type3, align 8, !dbg !5146
  %93 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5147
  %tobool82 = icmp ne %struct.list_head* %93, null, !dbg !5147
  br i1 %tobool82, label %cond.true83, label %cond.false84, !dbg !5147

cond.true83:                                      ; preds = %if.end81
  br label %cond.end85, !dbg !5147

cond.false84:                                     ; preds = %if.end81
  %94 = load i64, i64* %additional_mmio_size, align 8, !dbg !5148
  br label %cond.end85, !dbg !5147

cond.end85:                                       ; preds = %cond.false84, %cond.true83
  %cond86 = phi i64 [ 0, %cond.true83 ], [ %94, %cond.false84 ], !dbg !5147
  %95 = load i64, i64* %additional_mmio_size, align 8, !dbg !5149
  %96 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5150
  %call87 = call i32 @pbus_size_mem(%struct.pci_bus* %89, i64 %90, i64 512, i64 %91, i64 %92, i64 %cond86, i64 %95, %struct.list_head* %96) #11, !dbg !5151
  br label %sw.epilog88, !dbg !5152

sw.epilog88:                                      ; preds = %if.then18, %cond.end85, %sw.bb36
  ret void, !dbg !5153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bus_size_cardbus(%struct.pci_bus* %bus, %struct.list_head* %realloc_head) #0 !dbg !5154 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %realloc_head.addr = alloca %struct.list_head*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %b_res = alloca %struct.resource*, align 8
  %b_res_3_size = alloca i64, align 8
  %ctrl = alloca i16, align 2
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5155, metadata !DIExpression()), !dbg !5156
  store %struct.list_head* %realloc_head, %struct.list_head** %realloc_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %realloc_head.addr, metadata !5157, metadata !DIExpression()), !dbg !5158
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !5159, metadata !DIExpression()), !dbg !5160
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5161
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !5162
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !5162
  store %struct.pci_dev* %1, %struct.pci_dev** %bridge, align 8, !dbg !5160
  call void @llvm.dbg.declare(metadata %struct.resource** %b_res, metadata !5163, metadata !DIExpression()), !dbg !5164
  call void @llvm.dbg.declare(metadata i64* %b_res_3_size, metadata !5165, metadata !DIExpression()), !dbg !5166
  %2 = load i64, i64* @pci_cardbus_mem_size, align 8, !dbg !5167
  %mul = mul i64 %2, 2, !dbg !5168
  store i64 %mul, i64* %b_res_3_size, align 8, !dbg !5166
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !5169, metadata !DIExpression()), !dbg !5170
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5171
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 44, !dbg !5172
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 13, !dbg !5171
  store %struct.resource* %arrayidx, %struct.resource** %b_res, align 8, !dbg !5173
  %4 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5174
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %4, i32 0, i32 5, !dbg !5176
  %5 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !5176
  %tobool = icmp ne %struct.resource* %5, null, !dbg !5174
  br i1 %tobool, label %if.then, label %if.end, !dbg !5177

if.then:                                          ; preds = %entry
  br label %handle_b_res_1, !dbg !5178

if.end:                                           ; preds = %entry
  %6 = load i64, i64* @pci_cardbus_io_size, align 8, !dbg !5179
  %7 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5180
  %start = getelementptr inbounds %struct.resource, %struct.resource* %7, i32 0, i32 0, !dbg !5181
  store i64 %6, i64* %start, align 8, !dbg !5182
  %8 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5183
  %start1 = getelementptr inbounds %struct.resource, %struct.resource* %8, i32 0, i32 0, !dbg !5184
  %9 = load i64, i64* %start1, align 8, !dbg !5184
  %10 = load i64, i64* @pci_cardbus_io_size, align 8, !dbg !5185
  %add = add i64 %9, %10, !dbg !5186
  %sub = sub i64 %add, 1, !dbg !5187
  %11 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5188
  %end = getelementptr inbounds %struct.resource, %struct.resource* %11, i32 0, i32 1, !dbg !5189
  store i64 %sub, i64* %end, align 8, !dbg !5190
  %12 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5191
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %12, i32 0, i32 3, !dbg !5192
  %13 = load i64, i64* %flags, align 8, !dbg !5193
  %or = or i64 %13, 524544, !dbg !5193
  store i64 %or, i64* %flags, align 8, !dbg !5193
  %14 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5194
  %tobool2 = icmp ne %struct.list_head* %14, null, !dbg !5194
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !5196

if.then3:                                         ; preds = %if.end
  %15 = load i64, i64* @pci_cardbus_io_size, align 8, !dbg !5197
  %16 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5199
  %end4 = getelementptr inbounds %struct.resource, %struct.resource* %16, i32 0, i32 1, !dbg !5200
  %17 = load i64, i64* %end4, align 8, !dbg !5201
  %sub5 = sub i64 %17, %15, !dbg !5201
  store i64 %sub5, i64* %end4, align 8, !dbg !5201
  %18 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5202
  %19 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5203
  %20 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5204
  %21 = load i64, i64* @pci_cardbus_io_size, align 8, !dbg !5205
  %22 = load i64, i64* @pci_cardbus_io_size, align 8, !dbg !5206
  %call = call i32 @add_to_list(%struct.list_head* %18, %struct.pci_dev* %19, %struct.resource* %20, i64 %21, i64 %22) #11, !dbg !5207
  br label %if.end6, !dbg !5208

if.end6:                                          ; preds = %if.then3, %if.end
  br label %handle_b_res_1, !dbg !5194

handle_b_res_1:                                   ; preds = %if.end6, %if.then
  call void @llvm.dbg.label(metadata !5209), !dbg !5210
  %23 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5211
  %resource7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 44, !dbg !5212
  %arrayidx8 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource7, i64 0, i64 14, !dbg !5211
  store %struct.resource* %arrayidx8, %struct.resource** %b_res, align 8, !dbg !5213
  %24 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5214
  %parent9 = getelementptr inbounds %struct.resource, %struct.resource* %24, i32 0, i32 5, !dbg !5216
  %25 = load %struct.resource*, %struct.resource** %parent9, align 8, !dbg !5216
  %tobool10 = icmp ne %struct.resource* %25, null, !dbg !5214
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5217

if.then11:                                        ; preds = %handle_b_res_1
  br label %handle_b_res_2, !dbg !5218

if.end12:                                         ; preds = %handle_b_res_1
  %26 = load i64, i64* @pci_cardbus_io_size, align 8, !dbg !5219
  %27 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5220
  %start13 = getelementptr inbounds %struct.resource, %struct.resource* %27, i32 0, i32 0, !dbg !5221
  store i64 %26, i64* %start13, align 8, !dbg !5222
  %28 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5223
  %start14 = getelementptr inbounds %struct.resource, %struct.resource* %28, i32 0, i32 0, !dbg !5224
  %29 = load i64, i64* %start14, align 8, !dbg !5224
  %30 = load i64, i64* @pci_cardbus_io_size, align 8, !dbg !5225
  %add15 = add i64 %29, %30, !dbg !5226
  %sub16 = sub i64 %add15, 1, !dbg !5227
  %31 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5228
  %end17 = getelementptr inbounds %struct.resource, %struct.resource* %31, i32 0, i32 1, !dbg !5229
  store i64 %sub16, i64* %end17, align 8, !dbg !5230
  %32 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5231
  %flags18 = getelementptr inbounds %struct.resource, %struct.resource* %32, i32 0, i32 3, !dbg !5232
  %33 = load i64, i64* %flags18, align 8, !dbg !5233
  %or19 = or i64 %33, 524544, !dbg !5233
  store i64 %or19, i64* %flags18, align 8, !dbg !5233
  %34 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5234
  %tobool20 = icmp ne %struct.list_head* %34, null, !dbg !5234
  br i1 %tobool20, label %if.then21, label %if.end25, !dbg !5236

if.then21:                                        ; preds = %if.end12
  %35 = load i64, i64* @pci_cardbus_io_size, align 8, !dbg !5237
  %36 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5239
  %end22 = getelementptr inbounds %struct.resource, %struct.resource* %36, i32 0, i32 1, !dbg !5240
  %37 = load i64, i64* %end22, align 8, !dbg !5241
  %sub23 = sub i64 %37, %35, !dbg !5241
  store i64 %sub23, i64* %end22, align 8, !dbg !5241
  %38 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5242
  %39 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5243
  %40 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5244
  %41 = load i64, i64* @pci_cardbus_io_size, align 8, !dbg !5245
  %42 = load i64, i64* @pci_cardbus_io_size, align 8, !dbg !5246
  %call24 = call i32 @add_to_list(%struct.list_head* %38, %struct.pci_dev* %39, %struct.resource* %40, i64 %41, i64 %42) #11, !dbg !5247
  br label %if.end25, !dbg !5248

if.end25:                                         ; preds = %if.then21, %if.end12
  br label %handle_b_res_2, !dbg !5234

handle_b_res_2:                                   ; preds = %if.end25, %if.then11
  call void @llvm.dbg.label(metadata !5249), !dbg !5250
  %43 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5251
  %call26 = call i32 @pci_read_config_word(%struct.pci_dev* %43, i32 62, i16* %ctrl) #11, !dbg !5252
  %44 = load i16, i16* %ctrl, align 2, !dbg !5253
  %conv = zext i16 %44 to i32, !dbg !5253
  %and = and i32 %conv, 512, !dbg !5255
  %tobool27 = icmp ne i32 %and, 0, !dbg !5255
  br i1 %tobool27, label %if.then28, label %if.end34, !dbg !5256

if.then28:                                        ; preds = %handle_b_res_2
  %45 = load i16, i16* %ctrl, align 2, !dbg !5257
  %conv29 = zext i16 %45 to i32, !dbg !5257
  %and30 = and i32 %conv29, -513, !dbg !5257
  %conv31 = trunc i32 %and30 to i16, !dbg !5257
  store i16 %conv31, i16* %ctrl, align 2, !dbg !5257
  %46 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5259
  %47 = load i16, i16* %ctrl, align 2, !dbg !5260
  %call32 = call i32 @pci_write_config_word(%struct.pci_dev* %46, i32 62, i16 zeroext %47) #11, !dbg !5261
  %48 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5262
  %call33 = call i32 @pci_read_config_word(%struct.pci_dev* %48, i32 62, i16* %ctrl) #11, !dbg !5263
  br label %if.end34, !dbg !5264

if.end34:                                         ; preds = %if.then28, %handle_b_res_2
  %49 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5265
  %call35 = call i32 @pci_read_config_word(%struct.pci_dev* %49, i32 62, i16* %ctrl) #11, !dbg !5266
  %50 = load i16, i16* %ctrl, align 2, !dbg !5267
  %conv36 = zext i16 %50 to i32, !dbg !5267
  %and37 = and i32 %conv36, 256, !dbg !5269
  %tobool38 = icmp ne i32 %and37, 0, !dbg !5269
  br i1 %tobool38, label %if.end45, label %if.then39, !dbg !5270

if.then39:                                        ; preds = %if.end34
  %51 = load i16, i16* %ctrl, align 2, !dbg !5271
  %conv40 = zext i16 %51 to i32, !dbg !5271
  %or41 = or i32 %conv40, 256, !dbg !5271
  %conv42 = trunc i32 %or41 to i16, !dbg !5271
  store i16 %conv42, i16* %ctrl, align 2, !dbg !5271
  %52 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5273
  %53 = load i16, i16* %ctrl, align 2, !dbg !5274
  %call43 = call i32 @pci_write_config_word(%struct.pci_dev* %52, i32 62, i16 zeroext %53) #11, !dbg !5275
  %54 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5276
  %call44 = call i32 @pci_read_config_word(%struct.pci_dev* %54, i32 62, i16* %ctrl) #11, !dbg !5277
  br label %if.end45, !dbg !5278

if.end45:                                         ; preds = %if.then39, %if.end34
  %55 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5279
  %resource46 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %55, i32 0, i32 44, !dbg !5280
  %arrayidx47 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource46, i64 0, i64 15, !dbg !5279
  store %struct.resource* %arrayidx47, %struct.resource** %b_res, align 8, !dbg !5281
  %56 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5282
  %parent48 = getelementptr inbounds %struct.resource, %struct.resource* %56, i32 0, i32 5, !dbg !5284
  %57 = load %struct.resource*, %struct.resource** %parent48, align 8, !dbg !5284
  %tobool49 = icmp ne %struct.resource* %57, null, !dbg !5282
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !5285

if.then50:                                        ; preds = %if.end45
  br label %handle_b_res_3, !dbg !5286

if.end51:                                         ; preds = %if.end45
  %58 = load i16, i16* %ctrl, align 2, !dbg !5287
  %conv52 = zext i16 %58 to i32, !dbg !5287
  %and53 = and i32 %conv52, 256, !dbg !5289
  %tobool54 = icmp ne i32 %and53, 0, !dbg !5289
  br i1 %tobool54, label %if.then55, label %if.end69, !dbg !5290

if.then55:                                        ; preds = %if.end51
  %59 = load i64, i64* @pci_cardbus_mem_size, align 8, !dbg !5291
  %60 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5293
  %start56 = getelementptr inbounds %struct.resource, %struct.resource* %60, i32 0, i32 0, !dbg !5294
  store i64 %59, i64* %start56, align 8, !dbg !5295
  %61 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5296
  %start57 = getelementptr inbounds %struct.resource, %struct.resource* %61, i32 0, i32 0, !dbg !5297
  %62 = load i64, i64* %start57, align 8, !dbg !5297
  %63 = load i64, i64* @pci_cardbus_mem_size, align 8, !dbg !5298
  %add58 = add i64 %62, %63, !dbg !5299
  %sub59 = sub i64 %add58, 1, !dbg !5300
  %64 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5301
  %end60 = getelementptr inbounds %struct.resource, %struct.resource* %64, i32 0, i32 1, !dbg !5302
  store i64 %sub59, i64* %end60, align 8, !dbg !5303
  %65 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5304
  %flags61 = getelementptr inbounds %struct.resource, %struct.resource* %65, i32 0, i32 3, !dbg !5305
  %66 = load i64, i64* %flags61, align 8, !dbg !5306
  %or62 = or i64 %66, 532992, !dbg !5306
  store i64 %or62, i64* %flags61, align 8, !dbg !5306
  %67 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5307
  %tobool63 = icmp ne %struct.list_head* %67, null, !dbg !5307
  br i1 %tobool63, label %if.then64, label %if.end68, !dbg !5309

if.then64:                                        ; preds = %if.then55
  %68 = load i64, i64* @pci_cardbus_mem_size, align 8, !dbg !5310
  %69 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5312
  %end65 = getelementptr inbounds %struct.resource, %struct.resource* %69, i32 0, i32 1, !dbg !5313
  %70 = load i64, i64* %end65, align 8, !dbg !5314
  %sub66 = sub i64 %70, %68, !dbg !5314
  store i64 %sub66, i64* %end65, align 8, !dbg !5314
  %71 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5315
  %72 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5316
  %73 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5317
  %74 = load i64, i64* @pci_cardbus_mem_size, align 8, !dbg !5318
  %75 = load i64, i64* @pci_cardbus_mem_size, align 8, !dbg !5319
  %call67 = call i32 @add_to_list(%struct.list_head* %71, %struct.pci_dev* %72, %struct.resource* %73, i64 %74, i64 %75) #11, !dbg !5320
  br label %if.end68, !dbg !5321

if.end68:                                         ; preds = %if.then64, %if.then55
  %76 = load i64, i64* @pci_cardbus_mem_size, align 8, !dbg !5322
  store i64 %76, i64* %b_res_3_size, align 8, !dbg !5323
  br label %if.end69, !dbg !5324

if.end69:                                         ; preds = %if.end68, %if.end51
  br label %handle_b_res_3, !dbg !5325

handle_b_res_3:                                   ; preds = %if.end69, %if.then50
  call void @llvm.dbg.label(metadata !5326), !dbg !5327
  %77 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5328
  %resource70 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %77, i32 0, i32 44, !dbg !5329
  %arrayidx71 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource70, i64 0, i64 16, !dbg !5328
  store %struct.resource* %arrayidx71, %struct.resource** %b_res, align 8, !dbg !5330
  %78 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5331
  %parent72 = getelementptr inbounds %struct.resource, %struct.resource* %78, i32 0, i32 5, !dbg !5333
  %79 = load %struct.resource*, %struct.resource** %parent72, align 8, !dbg !5333
  %tobool73 = icmp ne %struct.resource* %79, null, !dbg !5331
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !5334

if.then74:                                        ; preds = %handle_b_res_3
  br label %handle_done, !dbg !5335

if.end75:                                         ; preds = %handle_b_res_3
  %80 = load i64, i64* @pci_cardbus_mem_size, align 8, !dbg !5336
  %81 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5337
  %start76 = getelementptr inbounds %struct.resource, %struct.resource* %81, i32 0, i32 0, !dbg !5338
  store i64 %80, i64* %start76, align 8, !dbg !5339
  %82 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5340
  %start77 = getelementptr inbounds %struct.resource, %struct.resource* %82, i32 0, i32 0, !dbg !5341
  %83 = load i64, i64* %start77, align 8, !dbg !5341
  %84 = load i64, i64* %b_res_3_size, align 8, !dbg !5342
  %add78 = add i64 %83, %84, !dbg !5343
  %sub79 = sub i64 %add78, 1, !dbg !5344
  %85 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5345
  %end80 = getelementptr inbounds %struct.resource, %struct.resource* %85, i32 0, i32 1, !dbg !5346
  store i64 %sub79, i64* %end80, align 8, !dbg !5347
  %86 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5348
  %flags81 = getelementptr inbounds %struct.resource, %struct.resource* %86, i32 0, i32 3, !dbg !5349
  %87 = load i64, i64* %flags81, align 8, !dbg !5350
  %or82 = or i64 %87, 524800, !dbg !5350
  store i64 %or82, i64* %flags81, align 8, !dbg !5350
  %88 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5351
  %tobool83 = icmp ne %struct.list_head* %88, null, !dbg !5351
  br i1 %tobool83, label %if.then84, label %if.end88, !dbg !5353

if.then84:                                        ; preds = %if.end75
  %89 = load i64, i64* %b_res_3_size, align 8, !dbg !5354
  %90 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5356
  %end85 = getelementptr inbounds %struct.resource, %struct.resource* %90, i32 0, i32 1, !dbg !5357
  %91 = load i64, i64* %end85, align 8, !dbg !5358
  %sub86 = sub i64 %91, %89, !dbg !5358
  store i64 %sub86, i64* %end85, align 8, !dbg !5358
  %92 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5359
  %93 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5360
  %94 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5361
  %95 = load i64, i64* %b_res_3_size, align 8, !dbg !5362
  %96 = load i64, i64* @pci_cardbus_mem_size, align 8, !dbg !5363
  %call87 = call i32 @add_to_list(%struct.list_head* %92, %struct.pci_dev* %93, %struct.resource* %94, i64 %95, i64 %96) #11, !dbg !5364
  br label %if.end88, !dbg !5365

if.end88:                                         ; preds = %if.then84, %if.end75
  br label %handle_done, !dbg !5351

handle_done:                                      ; preds = %if.end88, %if.then74
  call void @llvm.dbg.label(metadata !5366), !dbg !5367
  ret void, !dbg !5368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_is_root_bus(%struct.pci_bus* %pbus) #0 !dbg !5369 {
entry:
  %pbus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %pbus, %struct.pci_bus** %pbus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %pbus.addr, metadata !5372, metadata !DIExpression()), !dbg !5373
  %0 = load %struct.pci_bus*, %struct.pci_bus** %pbus.addr, align 8, !dbg !5374
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 1, !dbg !5375
  %1 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !5375
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !5376
  %lnot = xor i1 %tobool, true, !dbg !5376
  ret i1 %lnot, !dbg !5377
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @pci_bus_resource_n(%struct.pci_bus*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bridge_check_ranges(%struct.pci_bus* %bus) #0 !dbg !5378 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %b_res = alloca %struct.resource*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5379, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !5381, metadata !DIExpression()), !dbg !5382
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5383
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !5384
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !5384
  store %struct.pci_dev* %1, %struct.pci_dev** %bridge, align 8, !dbg !5382
  call void @llvm.dbg.declare(metadata %struct.resource** %b_res, metadata !5385, metadata !DIExpression()), !dbg !5386
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5387
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 44, !dbg !5388
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 14, !dbg !5387
  store %struct.resource* %arrayidx, %struct.resource** %b_res, align 8, !dbg !5389
  %3 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5390
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 3, !dbg !5391
  %4 = load i64, i64* %flags, align 8, !dbg !5392
  %or = or i64 %4, 512, !dbg !5392
  store i64 %or, i64* %flags, align 8, !dbg !5392
  %5 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5393
  %io_window = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 46, !dbg !5395
  %6 = bitcast [5 x i8]* %io_window to i40*, !dbg !5395
  %bf.load = load i40, i40* %6, align 1, !dbg !5395
  %bf.lshr = lshr i40 %bf.load, 1, !dbg !5395
  %bf.clear = and i40 %bf.lshr, 1, !dbg !5395
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !5395
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5393
  br i1 %tobool, label %if.then, label %if.end, !dbg !5396

if.then:                                          ; preds = %entry
  %7 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5397
  %resource1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 44, !dbg !5399
  %arrayidx2 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource1, i64 0, i64 13, !dbg !5397
  store %struct.resource* %arrayidx2, %struct.resource** %b_res, align 8, !dbg !5400
  %8 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5401
  %flags3 = getelementptr inbounds %struct.resource, %struct.resource* %8, i32 0, i32 3, !dbg !5402
  %9 = load i64, i64* %flags3, align 8, !dbg !5403
  %or4 = or i64 %9, 256, !dbg !5403
  store i64 %or4, i64* %flags3, align 8, !dbg !5403
  br label %if.end, !dbg !5404

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5405
  %pref_window = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 46, !dbg !5407
  %11 = bitcast [5 x i8]* %pref_window to i40*, !dbg !5407
  %bf.load5 = load i40, i40* %11, align 1, !dbg !5407
  %bf.lshr6 = lshr i40 %bf.load5, 2, !dbg !5407
  %bf.clear7 = and i40 %bf.lshr6, 1, !dbg !5407
  %bf.cast8 = trunc i40 %bf.clear7 to i32, !dbg !5407
  %tobool9 = icmp ne i32 %bf.cast8, 0, !dbg !5405
  br i1 %tobool9, label %if.then10, label %if.end24, !dbg !5408

if.then10:                                        ; preds = %if.end
  %12 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5409
  %resource11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 44, !dbg !5411
  %arrayidx12 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource11, i64 0, i64 15, !dbg !5409
  store %struct.resource* %arrayidx12, %struct.resource** %b_res, align 8, !dbg !5412
  %13 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5413
  %flags13 = getelementptr inbounds %struct.resource, %struct.resource* %13, i32 0, i32 3, !dbg !5414
  %14 = load i64, i64* %flags13, align 8, !dbg !5415
  %or14 = or i64 %14, 8704, !dbg !5415
  store i64 %or14, i64* %flags13, align 8, !dbg !5415
  %15 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !5416
  %pref_64_window = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 46, !dbg !5418
  %16 = bitcast [5 x i8]* %pref_64_window to i40*, !dbg !5418
  %bf.load15 = load i40, i40* %16, align 1, !dbg !5418
  %bf.lshr16 = lshr i40 %bf.load15, 3, !dbg !5418
  %bf.clear17 = and i40 %bf.lshr16, 1, !dbg !5418
  %bf.cast18 = trunc i40 %bf.clear17 to i32, !dbg !5418
  %tobool19 = icmp ne i32 %bf.cast18, 0, !dbg !5416
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !5419

if.then20:                                        ; preds = %if.then10
  %17 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5420
  %flags21 = getelementptr inbounds %struct.resource, %struct.resource* %17, i32 0, i32 3, !dbg !5422
  %18 = load i64, i64* %flags21, align 8, !dbg !5423
  %or22 = or i64 %18, 1048577, !dbg !5423
  store i64 %or22, i64* %flags21, align 8, !dbg !5423
  br label %if.end23, !dbg !5424

if.end23:                                         ; preds = %if.then20, %if.then10
  br label %if.end24, !dbg !5425

if.end24:                                         ; preds = %if.end23, %if.end
  ret void, !dbg !5426
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pbus_size_io(%struct.pci_bus* %bus, i64 %min_size, i64 %add_size, %struct.list_head* %realloc_head) #0 !dbg !5427 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %min_size.addr = alloca i64, align 8
  %add_size.addr = alloca i64, align 8
  %realloc_head.addr = alloca %struct.list_head*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %b_res = alloca %struct.resource*, align 8
  %size = alloca i64, align 8
  %size0 = alloca i64, align 8
  %size1 = alloca i64, align 8
  %children_add_size = alloca i64, align 8
  %min_align = alloca i64, align 8
  %align = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  %r = alloca %struct.resource*, align 8
  %r_size = alloca i64, align 8
  %__mptr29 = alloca i8*, align 8
  %tmp34 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5430, metadata !DIExpression()), !dbg !5431
  store i64 %min_size, i64* %min_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min_size.addr, metadata !5432, metadata !DIExpression()), !dbg !5433
  store i64 %add_size, i64* %add_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %add_size.addr, metadata !5434, metadata !DIExpression()), !dbg !5435
  store %struct.list_head* %realloc_head, %struct.list_head** %realloc_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %realloc_head.addr, metadata !5436, metadata !DIExpression()), !dbg !5437
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !5438, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.declare(metadata %struct.resource** %b_res, metadata !5440, metadata !DIExpression()), !dbg !5441
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5442
  %call = call %struct.resource* @find_bus_resource_of_type(%struct.pci_bus* %0, i64 256, i64 256) #11, !dbg !5443
  store %struct.resource* %call, %struct.resource** %b_res, align 8, !dbg !5441
  call void @llvm.dbg.declare(metadata i64* %size, metadata !5444, metadata !DIExpression()), !dbg !5445
  store i64 0, i64* %size, align 8, !dbg !5445
  call void @llvm.dbg.declare(metadata i64* %size0, metadata !5446, metadata !DIExpression()), !dbg !5447
  store i64 0, i64* %size0, align 8, !dbg !5447
  call void @llvm.dbg.declare(metadata i64* %size1, metadata !5448, metadata !DIExpression()), !dbg !5449
  store i64 0, i64* %size1, align 8, !dbg !5449
  call void @llvm.dbg.declare(metadata i64* %children_add_size, metadata !5450, metadata !DIExpression()), !dbg !5451
  store i64 0, i64* %children_add_size, align 8, !dbg !5451
  call void @llvm.dbg.declare(metadata i64* %min_align, metadata !5452, metadata !DIExpression()), !dbg !5453
  call void @llvm.dbg.declare(metadata i64* %align, metadata !5454, metadata !DIExpression()), !dbg !5455
  %1 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5456
  %tobool = icmp ne %struct.resource* %1, null, !dbg !5456
  br i1 %tobool, label %if.end, label %if.then, !dbg !5458

if.then:                                          ; preds = %entry
  br label %if.end81, !dbg !5459

if.end:                                           ; preds = %entry
  %2 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5460
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %2, i32 0, i32 5, !dbg !5462
  %3 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !5462
  %tobool1 = icmp ne %struct.resource* %3, null, !dbg !5460
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !5463

if.then2:                                         ; preds = %if.end
  br label %if.end81, !dbg !5464

if.end3:                                          ; preds = %if.end
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5465
  %call4 = call i64 @window_alignment(%struct.pci_bus* %4, i64 256) #11, !dbg !5466
  store i64 %call4, i64* %min_align, align 8, !dbg !5467
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5468, metadata !DIExpression()), !dbg !5471
  %5 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5471
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 3, !dbg !5471
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !5471
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5471
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !5471
  store i8* %7, i8** %__mptr, align 8, !dbg !5471
  br label %do.body, !dbg !5471

do.body:                                          ; preds = %if.end3
  br label %do.end, !dbg !5472

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !5471
  %add.ptr = getelementptr i8, i8* %8, i64 0, !dbg !5471
  %9 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !5471
  store %struct.pci_dev* %9, %struct.pci_dev** %tmp, align 8, !dbg !5472
  %10 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !5471
  store %struct.pci_dev* %10, %struct.pci_dev** %dev, align 8, !dbg !5474
  br label %for.cond, !dbg !5474

for.cond:                                         ; preds = %do.end33, %do.end
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5475
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 0, !dbg !5475
  %12 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5475
  %devices5 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %12, i32 0, i32 3, !dbg !5475
  %cmp = icmp eq %struct.list_head* %bus_list, %devices5, !dbg !5475
  %lnot = xor i1 %cmp, true, !dbg !5475
  br i1 %lnot, label %for.body, label %for.end36, !dbg !5474

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5477, metadata !DIExpression()), !dbg !5479
  store i32 0, i32* %i, align 4, !dbg !5480
  br label %for.cond6, !dbg !5482

for.cond6:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %i, align 4, !dbg !5483
  %cmp7 = icmp slt i32 %13, 17, !dbg !5485
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !5486

for.body8:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !5487, metadata !DIExpression()), !dbg !5489
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5490
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 44, !dbg !5491
  %15 = load i32, i32* %i, align 4, !dbg !5492
  %idxprom = sext i32 %15 to i64, !dbg !5490
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !5490
  store %struct.resource* %arrayidx, %struct.resource** %r, align 8, !dbg !5489
  call void @llvm.dbg.declare(metadata i64* %r_size, metadata !5493, metadata !DIExpression()), !dbg !5494
  %16 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5495
  %parent9 = getelementptr inbounds %struct.resource, %struct.resource* %16, i32 0, i32 5, !dbg !5497
  %17 = load %struct.resource*, %struct.resource** %parent9, align 8, !dbg !5497
  %tobool10 = icmp ne %struct.resource* %17, null, !dbg !5495
  br i1 %tobool10, label %if.then12, label %lor.lhs.false, !dbg !5498

lor.lhs.false:                                    ; preds = %for.body8
  %18 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5499
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %18, i32 0, i32 3, !dbg !5500
  %19 = load i64, i64* %flags, align 8, !dbg !5500
  %and = and i64 %19, 256, !dbg !5501
  %tobool11 = icmp ne i64 %and, 0, !dbg !5501
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !5502

if.then12:                                        ; preds = %lor.lhs.false, %for.body8
  br label %for.inc, !dbg !5503

if.end13:                                         ; preds = %lor.lhs.false
  %20 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5504
  %call14 = call i64 @resource_size(%struct.resource* %20) #11, !dbg !5505
  store i64 %call14, i64* %r_size, align 8, !dbg !5506
  %21 = load i64, i64* %r_size, align 8, !dbg !5507
  %cmp15 = icmp ult i64 %21, 1024, !dbg !5509
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !5510

if.then16:                                        ; preds = %if.end13
  %22 = load i64, i64* %r_size, align 8, !dbg !5511
  %23 = load i64, i64* %size, align 8, !dbg !5512
  %add = add i64 %23, %22, !dbg !5512
  store i64 %add, i64* %size, align 8, !dbg !5512
  br label %if.end18, !dbg !5513

if.else:                                          ; preds = %if.end13
  %24 = load i64, i64* %r_size, align 8, !dbg !5514
  %25 = load i64, i64* %size1, align 8, !dbg !5515
  %add17 = add i64 %25, %24, !dbg !5515
  store i64 %add17, i64* %size1, align 8, !dbg !5515
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then16
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5516
  %27 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5517
  %call19 = call i64 @pci_resource_alignment(%struct.pci_dev* %26, %struct.resource* %27) #11, !dbg !5518
  store i64 %call19, i64* %align, align 8, !dbg !5519
  %28 = load i64, i64* %align, align 8, !dbg !5520
  %29 = load i64, i64* %min_align, align 8, !dbg !5522
  %cmp20 = icmp ugt i64 %28, %29, !dbg !5523
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !5524

if.then21:                                        ; preds = %if.end18
  %30 = load i64, i64* %align, align 8, !dbg !5525
  store i64 %30, i64* %min_align, align 8, !dbg !5526
  br label %if.end22, !dbg !5527

if.end22:                                         ; preds = %if.then21, %if.end18
  %31 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5528
  %tobool23 = icmp ne %struct.list_head* %31, null, !dbg !5528
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !5530

if.then24:                                        ; preds = %if.end22
  %32 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5531
  %33 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5532
  %call25 = call i64 @get_res_add_size(%struct.list_head* %32, %struct.resource* %33) #11, !dbg !5533
  %34 = load i64, i64* %children_add_size, align 8, !dbg !5534
  %add26 = add i64 %34, %call25, !dbg !5534
  store i64 %add26, i64* %children_add_size, align 8, !dbg !5534
  br label %if.end27, !dbg !5535

if.end27:                                         ; preds = %if.then24, %if.end22
  br label %for.inc, !dbg !5536

for.inc:                                          ; preds = %if.end27, %if.then12
  %35 = load i32, i32* %i, align 4, !dbg !5537
  %inc = add i32 %35, 1, !dbg !5537
  store i32 %inc, i32* %i, align 4, !dbg !5537
  br label %for.cond6, !dbg !5538, !llvm.loop !5539

for.end:                                          ; preds = %for.cond6
  br label %for.inc28, !dbg !5541

for.inc28:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr29, metadata !5542, metadata !DIExpression()), !dbg !5544
  %36 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5544
  %bus_list30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 0, !dbg !5544
  %next31 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list30, i32 0, i32 0, !dbg !5544
  %37 = load %struct.list_head*, %struct.list_head** %next31, align 8, !dbg !5544
  %38 = bitcast %struct.list_head* %37 to i8*, !dbg !5544
  store i8* %38, i8** %__mptr29, align 8, !dbg !5544
  br label %do.body32, !dbg !5544

do.body32:                                        ; preds = %for.inc28
  br label %do.end33, !dbg !5545

do.end33:                                         ; preds = %do.body32
  %39 = load i8*, i8** %__mptr29, align 8, !dbg !5544
  %add.ptr35 = getelementptr i8, i8* %39, i64 0, !dbg !5544
  %40 = bitcast i8* %add.ptr35 to %struct.pci_dev*, !dbg !5544
  store %struct.pci_dev* %40, %struct.pci_dev** %tmp34, align 8, !dbg !5545
  %41 = load %struct.pci_dev*, %struct.pci_dev** %tmp34, align 8, !dbg !5544
  store %struct.pci_dev* %41, %struct.pci_dev** %dev, align 8, !dbg !5475
  br label %for.cond, !dbg !5475, !llvm.loop !5547

for.end36:                                        ; preds = %for.cond
  %42 = load i64, i64* %size, align 8, !dbg !5549
  %43 = load i64, i64* %min_size.addr, align 8, !dbg !5550
  %44 = load i64, i64* %size1, align 8, !dbg !5551
  %45 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5552
  %call37 = call i64 @resource_size(%struct.resource* %45) #11, !dbg !5553
  %46 = load i64, i64* %min_align, align 8, !dbg !5554
  %call38 = call i64 @calculate_iosize(i64 %42, i64 %43, i64 %44, i64 0, i64 0, i64 %call37, i64 %46) #11, !dbg !5555
  store i64 %call38, i64* %size0, align 8, !dbg !5556
  %47 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5557
  %tobool39 = icmp ne %struct.list_head* %47, null, !dbg !5557
  br i1 %tobool39, label %lor.lhs.false40, label %cond.true, !dbg !5558

lor.lhs.false40:                                  ; preds = %for.end36
  %48 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5559
  %tobool41 = icmp ne %struct.list_head* %48, null, !dbg !5559
  br i1 %tobool41, label %land.lhs.true, label %cond.false, !dbg !5560

land.lhs.true:                                    ; preds = %lor.lhs.false40
  %49 = load i64, i64* %add_size.addr, align 8, !dbg !5561
  %tobool42 = icmp ne i64 %49, 0, !dbg !5561
  br i1 %tobool42, label %cond.false, label %land.lhs.true43, !dbg !5562

land.lhs.true43:                                  ; preds = %land.lhs.true
  %50 = load i64, i64* %children_add_size, align 8, !dbg !5563
  %tobool44 = icmp ne i64 %50, 0, !dbg !5563
  br i1 %tobool44, label %cond.false, label %cond.true, !dbg !5564

cond.true:                                        ; preds = %land.lhs.true43, %for.end36
  %51 = load i64, i64* %size0, align 8, !dbg !5565
  br label %cond.end, !dbg !5564

cond.false:                                       ; preds = %land.lhs.true43, %land.lhs.true, %lor.lhs.false40
  %52 = load i64, i64* %size, align 8, !dbg !5566
  %53 = load i64, i64* %min_size.addr, align 8, !dbg !5567
  %54 = load i64, i64* %size1, align 8, !dbg !5568
  %55 = load i64, i64* %add_size.addr, align 8, !dbg !5569
  %56 = load i64, i64* %children_add_size, align 8, !dbg !5570
  %57 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5571
  %call45 = call i64 @resource_size(%struct.resource* %57) #11, !dbg !5572
  %58 = load i64, i64* %min_align, align 8, !dbg !5573
  %call46 = call i64 @calculate_iosize(i64 %52, i64 %53, i64 %54, i64 %55, i64 %56, i64 %call45, i64 %58) #11, !dbg !5574
  br label %cond.end, !dbg !5564

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %51, %cond.true ], [ %call46, %cond.false ], !dbg !5564
  store i64 %cond, i64* %size1, align 8, !dbg !5575
  %59 = load i64, i64* %size0, align 8, !dbg !5576
  %tobool47 = icmp ne i64 %59, 0, !dbg !5576
  br i1 %tobool47, label %if.end61, label %land.lhs.true48, !dbg !5578

land.lhs.true48:                                  ; preds = %cond.end
  %60 = load i64, i64* %size1, align 8, !dbg !5579
  %tobool49 = icmp ne i64 %60, 0, !dbg !5579
  br i1 %tobool49, label %if.end61, label %if.then50, !dbg !5580

if.then50:                                        ; preds = %land.lhs.true48
  %61 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5581
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %61, i32 0, i32 4, !dbg !5584
  %62 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !5584
  %tobool51 = icmp ne %struct.pci_dev* %62, null, !dbg !5581
  br i1 %tobool51, label %land.lhs.true52, label %if.end59, !dbg !5585

land.lhs.true52:                                  ; preds = %if.then50
  %63 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5586
  %start = getelementptr inbounds %struct.resource, %struct.resource* %63, i32 0, i32 0, !dbg !5587
  %64 = load i64, i64* %start, align 8, !dbg !5587
  %tobool53 = icmp ne i64 %64, 0, !dbg !5586
  br i1 %tobool53, label %if.then56, label %lor.lhs.false54, !dbg !5588

lor.lhs.false54:                                  ; preds = %land.lhs.true52
  %65 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5589
  %end = getelementptr inbounds %struct.resource, %struct.resource* %65, i32 0, i32 1, !dbg !5590
  %66 = load i64, i64* %end, align 8, !dbg !5590
  %tobool55 = icmp ne i64 %66, 0, !dbg !5589
  br i1 %tobool55, label %if.then56, label %if.end59, !dbg !5591

if.then56:                                        ; preds = %lor.lhs.false54, %land.lhs.true52
  %67 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5592
  %self57 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %67, i32 0, i32 4, !dbg !5592
  %68 = load %struct.pci_dev*, %struct.pci_dev** %self57, align 8, !dbg !5592
  %dev58 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %68, i32 0, i32 41, !dbg !5592
  %69 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5592
  %70 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5592
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %70, i32 0, i32 8, !dbg !5592
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev58, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.14, i64 0, i64 0), %struct.resource* %69, %struct.resource* %busn_res) #10, !dbg !5592
  br label %if.end59, !dbg !5592

if.end59:                                         ; preds = %if.then56, %lor.lhs.false54, %if.then50
  %71 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5593
  %flags60 = getelementptr inbounds %struct.resource, %struct.resource* %71, i32 0, i32 3, !dbg !5594
  store i64 0, i64* %flags60, align 8, !dbg !5595
  br label %if.end81, !dbg !5596

if.end61:                                         ; preds = %land.lhs.true48, %cond.end
  %72 = load i64, i64* %min_align, align 8, !dbg !5597
  %73 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5598
  %start62 = getelementptr inbounds %struct.resource, %struct.resource* %73, i32 0, i32 0, !dbg !5599
  store i64 %72, i64* %start62, align 8, !dbg !5600
  %74 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5601
  %start63 = getelementptr inbounds %struct.resource, %struct.resource* %74, i32 0, i32 0, !dbg !5602
  %75 = load i64, i64* %start63, align 8, !dbg !5602
  %76 = load i64, i64* %size0, align 8, !dbg !5603
  %add64 = add i64 %75, %76, !dbg !5604
  %sub = sub i64 %add64, 1, !dbg !5605
  %77 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5606
  %end65 = getelementptr inbounds %struct.resource, %struct.resource* %77, i32 0, i32 1, !dbg !5607
  store i64 %sub, i64* %end65, align 8, !dbg !5608
  %78 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5609
  %flags66 = getelementptr inbounds %struct.resource, %struct.resource* %78, i32 0, i32 3, !dbg !5610
  %79 = load i64, i64* %flags66, align 8, !dbg !5611
  %or = or i64 %79, 524288, !dbg !5611
  store i64 %or, i64* %flags66, align 8, !dbg !5611
  %80 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5612
  %self67 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %80, i32 0, i32 4, !dbg !5614
  %81 = load %struct.pci_dev*, %struct.pci_dev** %self67, align 8, !dbg !5614
  %tobool68 = icmp ne %struct.pci_dev* %81, null, !dbg !5612
  br i1 %tobool68, label %land.lhs.true69, label %if.end81, !dbg !5615

land.lhs.true69:                                  ; preds = %if.end61
  %82 = load i64, i64* %size1, align 8, !dbg !5616
  %83 = load i64, i64* %size0, align 8, !dbg !5617
  %cmp70 = icmp ugt i64 %82, %83, !dbg !5618
  br i1 %cmp70, label %land.lhs.true71, label %if.end81, !dbg !5619

land.lhs.true71:                                  ; preds = %land.lhs.true69
  %84 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5620
  %tobool72 = icmp ne %struct.list_head* %84, null, !dbg !5620
  br i1 %tobool72, label %if.then73, label %if.end81, !dbg !5621

if.then73:                                        ; preds = %land.lhs.true71
  %85 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5622
  %86 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5624
  %self74 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %86, i32 0, i32 4, !dbg !5625
  %87 = load %struct.pci_dev*, %struct.pci_dev** %self74, align 8, !dbg !5625
  %88 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5626
  %89 = load i64, i64* %size1, align 8, !dbg !5627
  %90 = load i64, i64* %size0, align 8, !dbg !5628
  %sub75 = sub i64 %89, %90, !dbg !5629
  %91 = load i64, i64* %min_align, align 8, !dbg !5630
  %call76 = call i32 @add_to_list(%struct.list_head* %85, %struct.pci_dev* %87, %struct.resource* %88, i64 %sub75, i64 %91) #11, !dbg !5631
  %92 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5632
  %self77 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %92, i32 0, i32 4, !dbg !5632
  %93 = load %struct.pci_dev*, %struct.pci_dev** %self77, align 8, !dbg !5632
  %dev78 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %93, i32 0, i32 41, !dbg !5632
  %94 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5632
  %95 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5632
  %busn_res79 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %95, i32 0, i32 8, !dbg !5632
  %96 = load i64, i64* %size1, align 8, !dbg !5632
  %97 = load i64, i64* %size0, align 8, !dbg !5632
  %sub80 = sub i64 %96, %97, !dbg !5632
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev78, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15, i64 0, i64 0), %struct.resource* %94, %struct.resource* %busn_res79, i64 %sub80) #10, !dbg !5632
  br label %if.end81, !dbg !5633

if.end81:                                         ; preds = %if.then, %if.then2, %if.end59, %if.then73, %land.lhs.true71, %land.lhs.true69, %if.end61
  ret void, !dbg !5634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pbus_size_mem(%struct.pci_bus* %bus, i64 %mask, i64 %type, i64 %type2, i64 %type3, i64 %min_size, i64 %add_size, %struct.list_head* %realloc_head) #0 !dbg !5635 {
entry:
  %word.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %word.addr.i, metadata !5638, metadata !DIExpression()), !dbg !5643
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.pci_bus*, align 8
  %mask.addr = alloca i64, align 8
  %type.addr = alloca i64, align 8
  %type2.addr = alloca i64, align 8
  %type3.addr = alloca i64, align 8
  %min_size.addr = alloca i64, align 8
  %add_size.addr = alloca i64, align 8
  %realloc_head.addr = alloca %struct.list_head*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %min_align = alloca i64, align 8
  %align = alloca i64, align 8
  %size = alloca i64, align 8
  %size0 = alloca i64, align 8
  %size1 = alloca i64, align 8
  %aligns = alloca [18 x i64], align 16
  %order = alloca i32, align 4
  %max_order = alloca i32, align 4
  %b_res = alloca %struct.resource*, align 8
  %children_add_size = alloca i64, align 8
  %children_add_align = alloca i64, align 8
  %add_align = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  %r = alloca %struct.resource*, align 8
  %r_size = alloca i64, align 8
  %__UNIQUE_ID___x285 = alloca i64, align 8
  %__UNIQUE_ID___y286 = alloca i64, align 8
  %tmp32 = alloca i64, align 8
  %__UNIQUE_ID___x287 = alloca i64, align 8
  %__UNIQUE_ID___y288 = alloca i64, align 8
  %tmp50 = alloca i64, align 8
  %__UNIQUE_ID___x289 = alloca i64, align 8
  %__UNIQUE_ID___y290 = alloca i64, align 8
  %tmp74 = alloca i64, align 8
  %__mptr83 = alloca i8*, align 8
  %tmp88 = alloca %struct.pci_dev*, align 8
  %__UNIQUE_ID___x291 = alloca i64, align 8
  %__UNIQUE_ID___y292 = alloca i64, align 8
  %tmp95 = alloca i64, align 8
  %__UNIQUE_ID___x293 = alloca i64, align 8
  %__UNIQUE_ID___y294 = alloca i64, align 8
  %tmp104 = alloca i64, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5651, metadata !DIExpression()), !dbg !5652
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !5653, metadata !DIExpression()), !dbg !5654
  store i64 %type, i64* %type.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type.addr, metadata !5655, metadata !DIExpression()), !dbg !5656
  store i64 %type2, i64* %type2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type2.addr, metadata !5657, metadata !DIExpression()), !dbg !5658
  store i64 %type3, i64* %type3.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type3.addr, metadata !5659, metadata !DIExpression()), !dbg !5660
  store i64 %min_size, i64* %min_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min_size.addr, metadata !5661, metadata !DIExpression()), !dbg !5662
  store i64 %add_size, i64* %add_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %add_size.addr, metadata !5663, metadata !DIExpression()), !dbg !5664
  store %struct.list_head* %realloc_head, %struct.list_head** %realloc_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %realloc_head.addr, metadata !5665, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !5667, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.declare(metadata i64* %min_align, metadata !5669, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.declare(metadata i64* %align, metadata !5671, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.declare(metadata i64* %size, metadata !5673, metadata !DIExpression()), !dbg !5674
  call void @llvm.dbg.declare(metadata i64* %size0, metadata !5675, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.declare(metadata i64* %size1, metadata !5677, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.declare(metadata [18 x i64]* %aligns, metadata !5679, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.declare(metadata i32* %order, metadata !5684, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.declare(metadata i32* %max_order, metadata !5686, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.declare(metadata %struct.resource** %b_res, metadata !5688, metadata !DIExpression()), !dbg !5689
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5690
  %1 = load i64, i64* %mask.addr, align 8, !dbg !5691
  %or = or i64 %1, 8192, !dbg !5692
  %2 = load i64, i64* %type.addr, align 8, !dbg !5693
  %call = call %struct.resource* @find_bus_resource_of_type(%struct.pci_bus* %0, i64 %or, i64 %2) #11, !dbg !5694
  store %struct.resource* %call, %struct.resource** %b_res, align 8, !dbg !5689
  call void @llvm.dbg.declare(metadata i64* %children_add_size, metadata !5695, metadata !DIExpression()), !dbg !5696
  store i64 0, i64* %children_add_size, align 8, !dbg !5696
  call void @llvm.dbg.declare(metadata i64* %children_add_align, metadata !5697, metadata !DIExpression()), !dbg !5698
  store i64 0, i64* %children_add_align, align 8, !dbg !5698
  call void @llvm.dbg.declare(metadata i64* %add_align, metadata !5699, metadata !DIExpression()), !dbg !5700
  store i64 0, i64* %add_align, align 8, !dbg !5700
  %3 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5701
  %tobool = icmp ne %struct.resource* %3, null, !dbg !5701
  br i1 %tobool, label %if.end, label %if.then, !dbg !5703

if.then:                                          ; preds = %entry
  store i32 -28, i32* %retval, align 4, !dbg !5704
  br label %return, !dbg !5704

if.end:                                           ; preds = %entry
  %4 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5705
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %4, i32 0, i32 5, !dbg !5707
  %5 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !5707
  %tobool1 = icmp ne %struct.resource* %5, null, !dbg !5705
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !5708

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5709
  br label %return, !dbg !5709

if.end3:                                          ; preds = %if.end
  %arraydecay = getelementptr inbounds [18 x i64], [18 x i64]* %aligns, i64 0, i64 0, !dbg !5710
  %6 = bitcast i64* %arraydecay to i8*, !dbg !5710
  call void @llvm.memset.p0i8.i64(i8* align 16 %6, i8 0, i64 144, i1 false), !dbg !5710
  store i32 0, i32* %max_order, align 4, !dbg !5711
  store i64 0, i64* %size, align 8, !dbg !5712
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5713, metadata !DIExpression()), !dbg !5715
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5715
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 3, !dbg !5715
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !5715
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5715
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !5715
  store i8* %9, i8** %__mptr, align 8, !dbg !5715
  br label %do.body, !dbg !5715

do.body:                                          ; preds = %if.end3
  br label %do.end, !dbg !5716

do.end:                                           ; preds = %do.body
  %10 = load i8*, i8** %__mptr, align 8, !dbg !5715
  %add.ptr = getelementptr i8, i8* %10, i64 0, !dbg !5715
  %11 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !5715
  store %struct.pci_dev* %11, %struct.pci_dev** %tmp, align 8, !dbg !5716
  %12 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !5715
  store %struct.pci_dev* %12, %struct.pci_dev** %dev, align 8, !dbg !5718
  br label %for.cond, !dbg !5718

for.cond:                                         ; preds = %do.end87, %do.end
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5719
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 0, !dbg !5719
  %14 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5719
  %devices4 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %14, i32 0, i32 3, !dbg !5719
  %cmp = icmp eq %struct.list_head* %bus_list, %devices4, !dbg !5719
  %lnot = xor i1 %cmp, true, !dbg !5719
  br i1 %lnot, label %for.body, label %for.end90, !dbg !5718

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5720, metadata !DIExpression()), !dbg !5721
  store i32 0, i32* %i, align 4, !dbg !5722
  br label %for.cond5, !dbg !5723

for.cond5:                                        ; preds = %for.inc, %for.body
  %15 = load i32, i32* %i, align 4, !dbg !5724
  %cmp6 = icmp slt i32 %15, 17, !dbg !5725
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !5726

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !5727, metadata !DIExpression()), !dbg !5728
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5729
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 44, !dbg !5730
  %17 = load i32, i32* %i, align 4, !dbg !5731
  %idxprom = sext i32 %17 to i64, !dbg !5729
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !5729
  store %struct.resource* %arrayidx, %struct.resource** %r, align 8, !dbg !5728
  call void @llvm.dbg.declare(metadata i64* %r_size, metadata !5732, metadata !DIExpression()), !dbg !5733
  %18 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5734
  %parent8 = getelementptr inbounds %struct.resource, %struct.resource* %18, i32 0, i32 5, !dbg !5736
  %19 = load %struct.resource*, %struct.resource** %parent8, align 8, !dbg !5736
  %tobool9 = icmp ne %struct.resource* %19, null, !dbg !5734
  br i1 %tobool9, label %if.then22, label %lor.lhs.false, !dbg !5737

lor.lhs.false:                                    ; preds = %for.body7
  %20 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5738
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %20, i32 0, i32 3, !dbg !5739
  %21 = load i64, i64* %flags, align 8, !dbg !5739
  %and = and i64 %21, 16, !dbg !5740
  %tobool10 = icmp ne i64 %and, 0, !dbg !5740
  br i1 %tobool10, label %if.then22, label %lor.lhs.false11, !dbg !5741

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %22 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5742
  %flags12 = getelementptr inbounds %struct.resource, %struct.resource* %22, i32 0, i32 3, !dbg !5743
  %23 = load i64, i64* %flags12, align 8, !dbg !5743
  %24 = load i64, i64* %mask.addr, align 8, !dbg !5744
  %and13 = and i64 %23, %24, !dbg !5745
  %25 = load i64, i64* %type.addr, align 8, !dbg !5746
  %cmp14 = icmp ne i64 %and13, %25, !dbg !5747
  br i1 %cmp14, label %land.lhs.true, label %if.end23, !dbg !5748

land.lhs.true:                                    ; preds = %lor.lhs.false11
  %26 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5749
  %flags15 = getelementptr inbounds %struct.resource, %struct.resource* %26, i32 0, i32 3, !dbg !5750
  %27 = load i64, i64* %flags15, align 8, !dbg !5750
  %28 = load i64, i64* %mask.addr, align 8, !dbg !5751
  %and16 = and i64 %27, %28, !dbg !5752
  %29 = load i64, i64* %type2.addr, align 8, !dbg !5753
  %cmp17 = icmp ne i64 %and16, %29, !dbg !5754
  br i1 %cmp17, label %land.lhs.true18, label %if.end23, !dbg !5755

land.lhs.true18:                                  ; preds = %land.lhs.true
  %30 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5756
  %flags19 = getelementptr inbounds %struct.resource, %struct.resource* %30, i32 0, i32 3, !dbg !5757
  %31 = load i64, i64* %flags19, align 8, !dbg !5757
  %32 = load i64, i64* %mask.addr, align 8, !dbg !5758
  %and20 = and i64 %31, %32, !dbg !5759
  %33 = load i64, i64* %type3.addr, align 8, !dbg !5760
  %cmp21 = icmp ne i64 %and20, %33, !dbg !5761
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !5762

if.then22:                                        ; preds = %land.lhs.true18, %lor.lhs.false, %for.body7
  br label %for.inc, !dbg !5763

if.end23:                                         ; preds = %land.lhs.true18, %land.lhs.true, %lor.lhs.false11
  %34 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5764
  %call24 = call i64 @resource_size(%struct.resource* %34) #11, !dbg !5765
  store i64 %call24, i64* %r_size, align 8, !dbg !5766
  %35 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5767
  %tobool25 = icmp ne %struct.list_head* %35, null, !dbg !5767
  br i1 %tobool25, label %land.lhs.true26, label %if.end35, !dbg !5769

land.lhs.true26:                                  ; preds = %if.end23
  %36 = load i32, i32* %i, align 4, !dbg !5770
  %cmp27 = icmp sge i32 %36, 7, !dbg !5771
  br i1 %cmp27, label %land.lhs.true28, label %if.end35, !dbg !5772

land.lhs.true28:                                  ; preds = %land.lhs.true26
  %37 = load i32, i32* %i, align 4, !dbg !5773
  %cmp29 = icmp sle i32 %37, 12, !dbg !5774
  br i1 %cmp29, label %if.then30, label %if.end35, !dbg !5775

if.then30:                                        ; preds = %land.lhs.true28
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x285, metadata !5776, metadata !DIExpression()), !dbg !5779
  %38 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5779
  %39 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5779
  %call31 = call i64 @pci_resource_alignment(%struct.pci_dev* %38, %struct.resource* %39) #11, !dbg !5779
  store i64 %call31, i64* %__UNIQUE_ID___x285, align 8, !dbg !5779
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y286, metadata !5780, metadata !DIExpression()), !dbg !5779
  %40 = load i64, i64* %add_align, align 8, !dbg !5779
  store i64 %40, i64* %__UNIQUE_ID___y286, align 8, !dbg !5779
  %41 = load i64, i64* %__UNIQUE_ID___x285, align 8, !dbg !5779
  %42 = load i64, i64* %__UNIQUE_ID___y286, align 8, !dbg !5779
  %cmp33 = icmp ugt i64 %41, %42, !dbg !5779
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !5779

cond.true:                                        ; preds = %if.then30
  %43 = load i64, i64* %__UNIQUE_ID___x285, align 8, !dbg !5779
  br label %cond.end, !dbg !5779

cond.false:                                       ; preds = %if.then30
  %44 = load i64, i64* %__UNIQUE_ID___y286, align 8, !dbg !5779
  br label %cond.end, !dbg !5779

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %43, %cond.true ], [ %44, %cond.false ], !dbg !5779
  store i64 %cond, i64* %tmp32, align 8, !dbg !5779
  %45 = load i64, i64* %tmp32, align 8, !dbg !5779
  store i64 %45, i64* %add_align, align 8, !dbg !5781
  %46 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5782
  %start = getelementptr inbounds %struct.resource, %struct.resource* %46, i32 0, i32 0, !dbg !5783
  %47 = load i64, i64* %start, align 8, !dbg !5783
  %sub = sub i64 %47, 1, !dbg !5784
  %48 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5785
  %end = getelementptr inbounds %struct.resource, %struct.resource* %48, i32 0, i32 1, !dbg !5786
  store i64 %sub, i64* %end, align 8, !dbg !5787
  %49 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5788
  %50 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5789
  %51 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5790
  %52 = load i64, i64* %r_size, align 8, !dbg !5791
  %call34 = call i32 @add_to_list(%struct.list_head* %49, %struct.pci_dev* %50, %struct.resource* %51, i64 %52, i64 0) #11, !dbg !5792
  %53 = load i64, i64* %r_size, align 8, !dbg !5793
  %54 = load i64, i64* %children_add_size, align 8, !dbg !5794
  %add = add i64 %54, %53, !dbg !5794
  store i64 %add, i64* %children_add_size, align 8, !dbg !5794
  br label %for.inc, !dbg !5795

if.end35:                                         ; preds = %land.lhs.true28, %land.lhs.true26, %if.end23
  %55 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5796
  %56 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5797
  %call36 = call i64 @pci_resource_alignment(%struct.pci_dev* %55, %struct.resource* %56) #11, !dbg !5798
  store i64 %call36, i64* %align, align 8, !dbg !5799
  %57 = load i64, i64* %align, align 8, !dbg !5800
  store i64 %57, i64* %word.addr.i, align 8
  %58 = load i64, i64* %word.addr.i, align 8, !dbg !5801
  %59 = call i64 asm "rep; bsf $1,$0", "=r,rm,~{dirflag},~{fpsr},~{flags}"(i64 %58) #12, !dbg !5802, !srcloc !5803
  store i64 %59, i64* %word.addr.i, align 8, !dbg !5802
  %60 = load i64, i64* %word.addr.i, align 8, !dbg !5804
  %sub38 = sub i64 %60, 20, !dbg !5805
  %conv = trunc i64 %sub38 to i32, !dbg !5806
  store i32 %conv, i32* %order, align 4, !dbg !5807
  %61 = load i32, i32* %order, align 4, !dbg !5808
  %cmp39 = icmp slt i32 %61, 0, !dbg !5810
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !5811

if.then41:                                        ; preds = %if.end35
  store i32 0, i32* %order, align 4, !dbg !5812
  br label %if.end42, !dbg !5813

if.end42:                                         ; preds = %if.then41, %if.end35
  %62 = load i32, i32* %order, align 4, !dbg !5814
  %conv43 = sext i32 %62 to i64, !dbg !5814
  %cmp44 = icmp uge i64 %conv43, 18, !dbg !5816
  br i1 %cmp44, label %if.then46, label %if.end49, !dbg !5817

if.then46:                                        ; preds = %if.end42
  %63 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5818
  %dev47 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %63, i32 0, i32 41, !dbg !5818
  %64 = load i32, i32* %i, align 4, !dbg !5818
  %65 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5818
  %66 = load i64, i64* %align, align 8, !dbg !5818
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev47, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.16, i64 0, i64 0), i32 %64, %struct.resource* %65, i64 %66) #10, !dbg !5818
  %67 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5820
  %flags48 = getelementptr inbounds %struct.resource, %struct.resource* %67, i32 0, i32 3, !dbg !5821
  store i64 0, i64* %flags48, align 8, !dbg !5822
  br label %for.inc, !dbg !5823

if.end49:                                         ; preds = %if.end42
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x287, metadata !5824, metadata !DIExpression()), !dbg !5826
  %68 = load i64, i64* %r_size, align 8, !dbg !5826
  store i64 %68, i64* %__UNIQUE_ID___x287, align 8, !dbg !5826
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y288, metadata !5827, metadata !DIExpression()), !dbg !5826
  %69 = load i64, i64* %align, align 8, !dbg !5826
  store i64 %69, i64* %__UNIQUE_ID___y288, align 8, !dbg !5826
  %70 = load i64, i64* %__UNIQUE_ID___x287, align 8, !dbg !5826
  %71 = load i64, i64* %__UNIQUE_ID___y288, align 8, !dbg !5826
  %cmp51 = icmp ugt i64 %70, %71, !dbg !5826
  br i1 %cmp51, label %cond.true53, label %cond.false54, !dbg !5826

cond.true53:                                      ; preds = %if.end49
  %72 = load i64, i64* %__UNIQUE_ID___x287, align 8, !dbg !5826
  br label %cond.end55, !dbg !5826

cond.false54:                                     ; preds = %if.end49
  %73 = load i64, i64* %__UNIQUE_ID___y288, align 8, !dbg !5826
  br label %cond.end55, !dbg !5826

cond.end55:                                       ; preds = %cond.false54, %cond.true53
  %cond56 = phi i64 [ %72, %cond.true53 ], [ %73, %cond.false54 ], !dbg !5826
  store i64 %cond56, i64* %tmp50, align 8, !dbg !5826
  %74 = load i64, i64* %tmp50, align 8, !dbg !5826
  %75 = load i64, i64* %size, align 8, !dbg !5828
  %add57 = add i64 %75, %74, !dbg !5828
  store i64 %add57, i64* %size, align 8, !dbg !5828
  %76 = load i64, i64* %r_size, align 8, !dbg !5829
  %77 = load i64, i64* %align, align 8, !dbg !5831
  %cmp58 = icmp ule i64 %76, %77, !dbg !5832
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !5833

if.then60:                                        ; preds = %cond.end55
  %78 = load i64, i64* %align, align 8, !dbg !5834
  %79 = load i32, i32* %order, align 4, !dbg !5835
  %idxprom61 = sext i32 %79 to i64, !dbg !5836
  %arrayidx62 = getelementptr [18 x i64], [18 x i64]* %aligns, i64 0, i64 %idxprom61, !dbg !5836
  %80 = load i64, i64* %arrayidx62, align 8, !dbg !5837
  %add63 = add i64 %80, %78, !dbg !5837
  store i64 %add63, i64* %arrayidx62, align 8, !dbg !5837
  br label %if.end64, !dbg !5836

if.end64:                                         ; preds = %if.then60, %cond.end55
  %81 = load i32, i32* %order, align 4, !dbg !5838
  %82 = load i32, i32* %max_order, align 4, !dbg !5840
  %cmp65 = icmp sgt i32 %81, %82, !dbg !5841
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !5842

if.then67:                                        ; preds = %if.end64
  %83 = load i32, i32* %order, align 4, !dbg !5843
  store i32 %83, i32* %max_order, align 4, !dbg !5844
  br label %if.end68, !dbg !5845

if.end68:                                         ; preds = %if.then67, %if.end64
  %84 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5846
  %tobool69 = icmp ne %struct.list_head* %84, null, !dbg !5846
  br i1 %tobool69, label %if.then70, label %if.end81, !dbg !5848

if.then70:                                        ; preds = %if.end68
  %85 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5849
  %86 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5851
  %call71 = call i64 @get_res_add_size(%struct.list_head* %85, %struct.resource* %86) #11, !dbg !5852
  %87 = load i64, i64* %children_add_size, align 8, !dbg !5853
  %add72 = add i64 %87, %call71, !dbg !5853
  store i64 %add72, i64* %children_add_size, align 8, !dbg !5853
  %88 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5854
  %89 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5855
  %call73 = call i64 @get_res_add_align(%struct.list_head* %88, %struct.resource* %89) #11, !dbg !5856
  store i64 %call73, i64* %children_add_align, align 8, !dbg !5857
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x289, metadata !5858, metadata !DIExpression()), !dbg !5860
  %90 = load i64, i64* %add_align, align 8, !dbg !5860
  store i64 %90, i64* %__UNIQUE_ID___x289, align 8, !dbg !5860
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y290, metadata !5861, metadata !DIExpression()), !dbg !5860
  %91 = load i64, i64* %children_add_align, align 8, !dbg !5860
  store i64 %91, i64* %__UNIQUE_ID___y290, align 8, !dbg !5860
  %92 = load i64, i64* %__UNIQUE_ID___x289, align 8, !dbg !5860
  %93 = load i64, i64* %__UNIQUE_ID___y290, align 8, !dbg !5860
  %cmp75 = icmp ugt i64 %92, %93, !dbg !5860
  br i1 %cmp75, label %cond.true77, label %cond.false78, !dbg !5860

cond.true77:                                      ; preds = %if.then70
  %94 = load i64, i64* %__UNIQUE_ID___x289, align 8, !dbg !5860
  br label %cond.end79, !dbg !5860

cond.false78:                                     ; preds = %if.then70
  %95 = load i64, i64* %__UNIQUE_ID___y290, align 8, !dbg !5860
  br label %cond.end79, !dbg !5860

cond.end79:                                       ; preds = %cond.false78, %cond.true77
  %cond80 = phi i64 [ %94, %cond.true77 ], [ %95, %cond.false78 ], !dbg !5860
  store i64 %cond80, i64* %tmp74, align 8, !dbg !5860
  %96 = load i64, i64* %tmp74, align 8, !dbg !5860
  store i64 %96, i64* %add_align, align 8, !dbg !5862
  br label %if.end81, !dbg !5863

if.end81:                                         ; preds = %cond.end79, %if.end68
  br label %for.inc, !dbg !5864

for.inc:                                          ; preds = %if.end81, %if.then46, %cond.end, %if.then22
  %97 = load i32, i32* %i, align 4, !dbg !5865
  %inc = add i32 %97, 1, !dbg !5865
  store i32 %inc, i32* %i, align 4, !dbg !5865
  br label %for.cond5, !dbg !5866, !llvm.loop !5867

for.end:                                          ; preds = %for.cond5
  br label %for.inc82, !dbg !5869

for.inc82:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr83, metadata !5870, metadata !DIExpression()), !dbg !5872
  %98 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5872
  %bus_list84 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %98, i32 0, i32 0, !dbg !5872
  %next85 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list84, i32 0, i32 0, !dbg !5872
  %99 = load %struct.list_head*, %struct.list_head** %next85, align 8, !dbg !5872
  %100 = bitcast %struct.list_head* %99 to i8*, !dbg !5872
  store i8* %100, i8** %__mptr83, align 8, !dbg !5872
  br label %do.body86, !dbg !5872

do.body86:                                        ; preds = %for.inc82
  br label %do.end87, !dbg !5873

do.end87:                                         ; preds = %do.body86
  %101 = load i8*, i8** %__mptr83, align 8, !dbg !5872
  %add.ptr89 = getelementptr i8, i8* %101, i64 0, !dbg !5872
  %102 = bitcast i8* %add.ptr89 to %struct.pci_dev*, !dbg !5872
  store %struct.pci_dev* %102, %struct.pci_dev** %tmp88, align 8, !dbg !5873
  %103 = load %struct.pci_dev*, %struct.pci_dev** %tmp88, align 8, !dbg !5872
  store %struct.pci_dev* %103, %struct.pci_dev** %dev, align 8, !dbg !5719
  br label %for.cond, !dbg !5719, !llvm.loop !5875

for.end90:                                        ; preds = %for.cond
  %arraydecay91 = getelementptr inbounds [18 x i64], [18 x i64]* %aligns, i64 0, i64 0, !dbg !5877
  %104 = load i32, i32* %max_order, align 4, !dbg !5878
  %call92 = call i64 @calculate_mem_align(i64* %arraydecay91, i32 %104) #11, !dbg !5879
  store i64 %call92, i64* %min_align, align 8, !dbg !5880
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x291, metadata !5881, metadata !DIExpression()), !dbg !5883
  %105 = load i64, i64* %min_align, align 8, !dbg !5883
  store i64 %105, i64* %__UNIQUE_ID___x291, align 8, !dbg !5883
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y292, metadata !5884, metadata !DIExpression()), !dbg !5883
  %106 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5883
  %107 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5883
  %flags93 = getelementptr inbounds %struct.resource, %struct.resource* %107, i32 0, i32 3, !dbg !5883
  %108 = load i64, i64* %flags93, align 8, !dbg !5883
  %call94 = call i64 @window_alignment(%struct.pci_bus* %106, i64 %108) #11, !dbg !5883
  store i64 %call94, i64* %__UNIQUE_ID___y292, align 8, !dbg !5883
  %109 = load i64, i64* %__UNIQUE_ID___x291, align 8, !dbg !5883
  %110 = load i64, i64* %__UNIQUE_ID___y292, align 8, !dbg !5883
  %cmp96 = icmp ugt i64 %109, %110, !dbg !5883
  br i1 %cmp96, label %cond.true98, label %cond.false99, !dbg !5883

cond.true98:                                      ; preds = %for.end90
  %111 = load i64, i64* %__UNIQUE_ID___x291, align 8, !dbg !5883
  br label %cond.end100, !dbg !5883

cond.false99:                                     ; preds = %for.end90
  %112 = load i64, i64* %__UNIQUE_ID___y292, align 8, !dbg !5883
  br label %cond.end100, !dbg !5883

cond.end100:                                      ; preds = %cond.false99, %cond.true98
  %cond101 = phi i64 [ %111, %cond.true98 ], [ %112, %cond.false99 ], !dbg !5883
  store i64 %cond101, i64* %tmp95, align 8, !dbg !5883
  %113 = load i64, i64* %tmp95, align 8, !dbg !5883
  store i64 %113, i64* %min_align, align 8, !dbg !5885
  %114 = load i64, i64* %size, align 8, !dbg !5886
  %115 = load i64, i64* %min_size.addr, align 8, !dbg !5887
  %116 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5888
  %call102 = call i64 @resource_size(%struct.resource* %116) #11, !dbg !5889
  %117 = load i64, i64* %min_align, align 8, !dbg !5890
  %call103 = call i64 @calculate_memsize(i64 %114, i64 %115, i64 0, i64 0, i64 %call102, i64 %117) #11, !dbg !5891
  store i64 %call103, i64* %size0, align 8, !dbg !5892
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x293, metadata !5893, metadata !DIExpression()), !dbg !5895
  %118 = load i64, i64* %min_align, align 8, !dbg !5895
  store i64 %118, i64* %__UNIQUE_ID___x293, align 8, !dbg !5895
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y294, metadata !5896, metadata !DIExpression()), !dbg !5895
  %119 = load i64, i64* %add_align, align 8, !dbg !5895
  store i64 %119, i64* %__UNIQUE_ID___y294, align 8, !dbg !5895
  %120 = load i64, i64* %__UNIQUE_ID___x293, align 8, !dbg !5895
  %121 = load i64, i64* %__UNIQUE_ID___y294, align 8, !dbg !5895
  %cmp105 = icmp ugt i64 %120, %121, !dbg !5895
  br i1 %cmp105, label %cond.true107, label %cond.false108, !dbg !5895

cond.true107:                                     ; preds = %cond.end100
  %122 = load i64, i64* %__UNIQUE_ID___x293, align 8, !dbg !5895
  br label %cond.end109, !dbg !5895

cond.false108:                                    ; preds = %cond.end100
  %123 = load i64, i64* %__UNIQUE_ID___y294, align 8, !dbg !5895
  br label %cond.end109, !dbg !5895

cond.end109:                                      ; preds = %cond.false108, %cond.true107
  %cond110 = phi i64 [ %122, %cond.true107 ], [ %123, %cond.false108 ], !dbg !5895
  store i64 %cond110, i64* %tmp104, align 8, !dbg !5895
  %124 = load i64, i64* %tmp104, align 8, !dbg !5895
  store i64 %124, i64* %add_align, align 8, !dbg !5897
  %125 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5898
  %tobool111 = icmp ne %struct.list_head* %125, null, !dbg !5898
  br i1 %tobool111, label %lor.lhs.false112, label %cond.true118, !dbg !5899

lor.lhs.false112:                                 ; preds = %cond.end109
  %126 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5900
  %tobool113 = icmp ne %struct.list_head* %126, null, !dbg !5900
  br i1 %tobool113, label %land.lhs.true114, label %cond.false119, !dbg !5901

land.lhs.true114:                                 ; preds = %lor.lhs.false112
  %127 = load i64, i64* %add_size.addr, align 8, !dbg !5902
  %tobool115 = icmp ne i64 %127, 0, !dbg !5902
  br i1 %tobool115, label %cond.false119, label %land.lhs.true116, !dbg !5903

land.lhs.true116:                                 ; preds = %land.lhs.true114
  %128 = load i64, i64* %children_add_size, align 8, !dbg !5904
  %tobool117 = icmp ne i64 %128, 0, !dbg !5904
  br i1 %tobool117, label %cond.false119, label %cond.true118, !dbg !5905

cond.true118:                                     ; preds = %land.lhs.true116, %cond.end109
  %129 = load i64, i64* %size0, align 8, !dbg !5906
  br label %cond.end122, !dbg !5905

cond.false119:                                    ; preds = %land.lhs.true116, %land.lhs.true114, %lor.lhs.false112
  %130 = load i64, i64* %size, align 8, !dbg !5907
  %131 = load i64, i64* %min_size.addr, align 8, !dbg !5908
  %132 = load i64, i64* %add_size.addr, align 8, !dbg !5909
  %133 = load i64, i64* %children_add_size, align 8, !dbg !5910
  %134 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5911
  %call120 = call i64 @resource_size(%struct.resource* %134) #11, !dbg !5912
  %135 = load i64, i64* %add_align, align 8, !dbg !5913
  %call121 = call i64 @calculate_memsize(i64 %130, i64 %131, i64 %132, i64 %133, i64 %call120, i64 %135) #11, !dbg !5914
  br label %cond.end122, !dbg !5905

cond.end122:                                      ; preds = %cond.false119, %cond.true118
  %cond123 = phi i64 [ %129, %cond.true118 ], [ %call121, %cond.false119 ], !dbg !5905
  store i64 %cond123, i64* %size1, align 8, !dbg !5915
  %136 = load i64, i64* %size0, align 8, !dbg !5916
  %tobool124 = icmp ne i64 %136, 0, !dbg !5916
  br i1 %tobool124, label %if.end140, label %land.lhs.true125, !dbg !5918

land.lhs.true125:                                 ; preds = %cond.end122
  %137 = load i64, i64* %size1, align 8, !dbg !5919
  %tobool126 = icmp ne i64 %137, 0, !dbg !5919
  br i1 %tobool126, label %if.end140, label %if.then127, !dbg !5920

if.then127:                                       ; preds = %land.lhs.true125
  %138 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5921
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %138, i32 0, i32 4, !dbg !5924
  %139 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !5924
  %tobool128 = icmp ne %struct.pci_dev* %139, null, !dbg !5921
  br i1 %tobool128, label %land.lhs.true129, label %if.end138, !dbg !5925

land.lhs.true129:                                 ; preds = %if.then127
  %140 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5926
  %start130 = getelementptr inbounds %struct.resource, %struct.resource* %140, i32 0, i32 0, !dbg !5927
  %141 = load i64, i64* %start130, align 8, !dbg !5927
  %tobool131 = icmp ne i64 %141, 0, !dbg !5926
  br i1 %tobool131, label %if.then135, label %lor.lhs.false132, !dbg !5928

lor.lhs.false132:                                 ; preds = %land.lhs.true129
  %142 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5929
  %end133 = getelementptr inbounds %struct.resource, %struct.resource* %142, i32 0, i32 1, !dbg !5930
  %143 = load i64, i64* %end133, align 8, !dbg !5930
  %tobool134 = icmp ne i64 %143, 0, !dbg !5929
  br i1 %tobool134, label %if.then135, label %if.end138, !dbg !5931

if.then135:                                       ; preds = %lor.lhs.false132, %land.lhs.true129
  %144 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5932
  %self136 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %144, i32 0, i32 4, !dbg !5932
  %145 = load %struct.pci_dev*, %struct.pci_dev** %self136, align 8, !dbg !5932
  %dev137 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %145, i32 0, i32 41, !dbg !5932
  %146 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5932
  %147 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5932
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %147, i32 0, i32 8, !dbg !5932
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev137, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.14, i64 0, i64 0), %struct.resource* %146, %struct.resource* %busn_res) #10, !dbg !5932
  br label %if.end138, !dbg !5932

if.end138:                                        ; preds = %if.then135, %lor.lhs.false132, %if.then127
  %148 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5933
  %flags139 = getelementptr inbounds %struct.resource, %struct.resource* %148, i32 0, i32 3, !dbg !5934
  store i64 0, i64* %flags139, align 8, !dbg !5935
  store i32 0, i32* %retval, align 4, !dbg !5936
  br label %return, !dbg !5936

if.end140:                                        ; preds = %land.lhs.true125, %cond.end122
  %149 = load i64, i64* %min_align, align 8, !dbg !5937
  %150 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5938
  %start141 = getelementptr inbounds %struct.resource, %struct.resource* %150, i32 0, i32 0, !dbg !5939
  store i64 %149, i64* %start141, align 8, !dbg !5940
  %151 = load i64, i64* %size0, align 8, !dbg !5941
  %152 = load i64, i64* %min_align, align 8, !dbg !5942
  %add142 = add i64 %151, %152, !dbg !5943
  %sub143 = sub i64 %add142, 1, !dbg !5944
  %153 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5945
  %end144 = getelementptr inbounds %struct.resource, %struct.resource* %153, i32 0, i32 1, !dbg !5946
  store i64 %sub143, i64* %end144, align 8, !dbg !5947
  %154 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5948
  %flags145 = getelementptr inbounds %struct.resource, %struct.resource* %154, i32 0, i32 3, !dbg !5949
  %155 = load i64, i64* %flags145, align 8, !dbg !5950
  %or146 = or i64 %155, 524288, !dbg !5950
  store i64 %or146, i64* %flags145, align 8, !dbg !5950
  %156 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5951
  %self147 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %156, i32 0, i32 4, !dbg !5953
  %157 = load %struct.pci_dev*, %struct.pci_dev** %self147, align 8, !dbg !5953
  %tobool148 = icmp ne %struct.pci_dev* %157, null, !dbg !5951
  br i1 %tobool148, label %land.lhs.true149, label %if.end162, !dbg !5954

land.lhs.true149:                                 ; preds = %if.end140
  %158 = load i64, i64* %size1, align 8, !dbg !5955
  %159 = load i64, i64* %size0, align 8, !dbg !5956
  %cmp150 = icmp ugt i64 %158, %159, !dbg !5957
  br i1 %cmp150, label %land.lhs.true152, label %if.end162, !dbg !5958

land.lhs.true152:                                 ; preds = %land.lhs.true149
  %160 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5959
  %tobool153 = icmp ne %struct.list_head* %160, null, !dbg !5959
  br i1 %tobool153, label %if.then154, label %if.end162, !dbg !5960

if.then154:                                       ; preds = %land.lhs.true152
  %161 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5961
  %162 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5963
  %self155 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %162, i32 0, i32 4, !dbg !5964
  %163 = load %struct.pci_dev*, %struct.pci_dev** %self155, align 8, !dbg !5964
  %164 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5965
  %165 = load i64, i64* %size1, align 8, !dbg !5966
  %166 = load i64, i64* %size0, align 8, !dbg !5967
  %sub156 = sub i64 %165, %166, !dbg !5968
  %167 = load i64, i64* %add_align, align 8, !dbg !5969
  %call157 = call i32 @add_to_list(%struct.list_head* %161, %struct.pci_dev* %163, %struct.resource* %164, i64 %sub156, i64 %167) #11, !dbg !5970
  %168 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5971
  %self158 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %168, i32 0, i32 4, !dbg !5971
  %169 = load %struct.pci_dev*, %struct.pci_dev** %self158, align 8, !dbg !5971
  %dev159 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %169, i32 0, i32 41, !dbg !5971
  %170 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !5971
  %171 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5971
  %busn_res160 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %171, i32 0, i32 8, !dbg !5971
  %172 = load i64, i64* %size1, align 8, !dbg !5971
  %173 = load i64, i64* %size0, align 8, !dbg !5971
  %sub161 = sub i64 %172, %173, !dbg !5971
  %174 = load i64, i64* %add_align, align 8, !dbg !5971
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev159, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i64 0, i64 0), %struct.resource* %170, %struct.resource* %busn_res160, i64 %sub161, i64 %174) #10, !dbg !5971
  br label %if.end162, !dbg !5972

if.end162:                                        ; preds = %if.then154, %land.lhs.true152, %land.lhs.true149, %if.end140
  store i32 0, i32* %retval, align 4, !dbg !5973
  br label %return, !dbg !5973

return:                                           ; preds = %if.end162, %if.end138, %if.then2, %if.then
  %175 = load i32, i32* %retval, align 4, !dbg !5974
  ret i32 %175, !dbg !5974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_bus_size_bridges(%struct.pci_bus* %bus) #0 !dbg !5975 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5976, metadata !DIExpression()), !dbg !5977
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5978
  call void @__pci_bus_size_bridges(%struct.pci_bus* %0, %struct.list_head* null) #11, !dbg !5979
  ret void, !dbg !5980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @__pci_bus_assign_resources(%struct.pci_bus* %bus, %struct.list_head* %realloc_head, %struct.list_head* %fail_head) #0 !dbg !5981 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %realloc_head.addr = alloca %struct.list_head*, align 8
  %fail_head.addr = alloca %struct.list_head*, align 8
  %b = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp14 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5986, metadata !DIExpression()), !dbg !5987
  store %struct.list_head* %realloc_head, %struct.list_head** %realloc_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %realloc_head.addr, metadata !5988, metadata !DIExpression()), !dbg !5989
  store %struct.list_head* %fail_head, %struct.list_head** %fail_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %fail_head.addr, metadata !5990, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b, metadata !5992, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !5994, metadata !DIExpression()), !dbg !5995
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5996
  %1 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !5997
  %2 = load %struct.list_head*, %struct.list_head** %fail_head.addr, align 8, !dbg !5998
  call void @pbus_assign_resources_sorted(%struct.pci_bus* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !5999
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6000, metadata !DIExpression()), !dbg !6003
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6003
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %3, i32 0, i32 3, !dbg !6003
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !6003
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6003
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !6003
  store i8* %5, i8** %__mptr, align 8, !dbg !6003
  br label %do.body, !dbg !6003

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6004

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !6003
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !6003
  %7 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !6003
  store %struct.pci_dev* %7, %struct.pci_dev** %tmp, align 8, !dbg !6004
  %8 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6003
  store %struct.pci_dev* %8, %struct.pci_dev** %dev, align 8, !dbg !6006
  br label %for.cond, !dbg !6006

for.cond:                                         ; preds = %do.end13, %do.end
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6007
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 0, !dbg !6007
  %10 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6007
  %devices1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %10, i32 0, i32 3, !dbg !6007
  %cmp = icmp eq %struct.list_head* %bus_list, %devices1, !dbg !6007
  %lnot = xor i1 %cmp, true, !dbg !6007
  br i1 %lnot, label %for.body, label %for.end, !dbg !6006

for.body:                                         ; preds = %for.cond
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6009
  call void @pdev_assign_fixed_resources(%struct.pci_dev* %11) #11, !dbg !6011
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6012
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 2, !dbg !6013
  %13 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !6013
  store %struct.pci_bus* %13, %struct.pci_bus** %b, align 8, !dbg !6014
  %14 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6015
  %tobool = icmp ne %struct.pci_bus* %14, null, !dbg !6015
  br i1 %tobool, label %if.end, label %if.then, !dbg !6017

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !6018

if.end:                                           ; preds = %for.body
  %15 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6019
  %16 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !6020
  %17 = load %struct.list_head*, %struct.list_head** %fail_head.addr, align 8, !dbg !6021
  call void @__pci_bus_assign_resources(%struct.pci_bus* %15, %struct.list_head* %16, %struct.list_head* %17) #11, !dbg !6022
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6023
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 13, !dbg !6024
  %19 = load i8, i8* %hdr_type, align 1, !dbg !6024
  %conv = zext i8 %19 to i32, !dbg !6023
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb5
  ], !dbg !6025

sw.bb:                                            ; preds = %if.end
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6026
  %call = call i32 @pci_is_enabled(%struct.pci_dev* %20) #11, !dbg !6029
  %tobool2 = icmp ne i32 %call, 0, !dbg !6029
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6030

if.then3:                                         ; preds = %sw.bb
  %21 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6031
  call void @pci_setup_bridge(%struct.pci_bus* %21) #11, !dbg !6032
  br label %if.end4, !dbg !6032

if.end4:                                          ; preds = %if.then3, %sw.bb
  br label %sw.epilog, !dbg !6033

sw.bb5:                                           ; preds = %if.end
  %22 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6034
  call void @pci_setup_cardbus(%struct.pci_bus* %22) #11, !dbg !6035
  br label %sw.epilog, !dbg !6036

sw.default:                                       ; preds = %if.end
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6037
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 41, !dbg !6037
  %24 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6037
  %call7 = call i32 @pci_domain_nr(%struct.pci_bus* %24) #11, !dbg !6037
  %25 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6037
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %25, i32 0, i32 13, !dbg !6037
  %26 = load i8, i8* %number, align 8, !dbg !6037
  %conv8 = zext i8 %26 to i32, !dbg !6037
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev6, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i32 %call7, i32 %conv8) #10, !dbg !6037
  br label %sw.epilog, !dbg !6038

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %if.end4
  br label %for.inc, !dbg !6039

for.inc:                                          ; preds = %sw.epilog, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !6040, metadata !DIExpression()), !dbg !6042
  %27 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6042
  %bus_list10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 0, !dbg !6042
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list10, i32 0, i32 0, !dbg !6042
  %28 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !6042
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !6042
  store i8* %29, i8** %__mptr9, align 8, !dbg !6042
  br label %do.body12, !dbg !6042

do.body12:                                        ; preds = %for.inc
  br label %do.end13, !dbg !6043

do.end13:                                         ; preds = %do.body12
  %30 = load i8*, i8** %__mptr9, align 8, !dbg !6042
  %add.ptr15 = getelementptr i8, i8* %30, i64 0, !dbg !6042
  %31 = bitcast i8* %add.ptr15 to %struct.pci_dev*, !dbg !6042
  store %struct.pci_dev* %31, %struct.pci_dev** %tmp14, align 8, !dbg !6043
  %32 = load %struct.pci_dev*, %struct.pci_dev** %tmp14, align 8, !dbg !6042
  store %struct.pci_dev* %32, %struct.pci_dev** %dev, align 8, !dbg !6007
  br label %for.cond, !dbg !6007, !llvm.loop !6045

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pbus_assign_resources_sorted(%struct.pci_bus* %bus, %struct.list_head* %realloc_head, %struct.list_head* %fail_head) #0 !dbg !6048 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %realloc_head.addr = alloca %struct.list_head*, align 8
  %fail_head.addr = alloca %struct.list_head*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %head = alloca %struct.list_head, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !6049, metadata !DIExpression()), !dbg !6050
  store %struct.list_head* %realloc_head, %struct.list_head** %realloc_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %realloc_head.addr, metadata !6051, metadata !DIExpression()), !dbg !6052
  store %struct.list_head* %fail_head, %struct.list_head** %fail_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %fail_head.addr, metadata !6053, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !6055, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.declare(metadata %struct.list_head* %head, metadata !6057, metadata !DIExpression()), !dbg !6058
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0, !dbg !6058
  store %struct.list_head* %head, %struct.list_head** %next, align 8, !dbg !6058
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1, !dbg !6058
  store %struct.list_head* %head, %struct.list_head** %prev, align 8, !dbg !6058
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6059, metadata !DIExpression()), !dbg !6062
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6062
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 3, !dbg !6062
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !6062
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !6062
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !6062
  store i8* %2, i8** %__mptr, align 8, !dbg !6062
  br label %do.body, !dbg !6062

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6063

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !6062
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !6062
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !6062
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !6063
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6062
  store %struct.pci_dev* %5, %struct.pci_dev** %dev, align 8, !dbg !6065
  br label %for.cond, !dbg !6065

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6066
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 0, !dbg !6066
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6066
  %devices2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 3, !dbg !6066
  %cmp = icmp eq %struct.list_head* %bus_list, %devices2, !dbg !6066
  %lnot = xor i1 %cmp, true, !dbg !6066
  br i1 %lnot, label %for.body, label %for.end, !dbg !6065

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6068
  call void @__dev_sort_resources(%struct.pci_dev* %8, %struct.list_head* %head) #11, !dbg !6069
  br label %for.inc, !dbg !6069

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !6070, metadata !DIExpression()), !dbg !6072
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6072
  %bus_list4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 0, !dbg !6072
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list4, i32 0, i32 0, !dbg !6072
  %10 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !6072
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !6072
  store i8* %11, i8** %__mptr3, align 8, !dbg !6072
  br label %do.body6, !dbg !6072

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !6073

do.end7:                                          ; preds = %do.body6
  %12 = load i8*, i8** %__mptr3, align 8, !dbg !6072
  %add.ptr9 = getelementptr i8, i8* %12, i64 0, !dbg !6072
  %13 = bitcast i8* %add.ptr9 to %struct.pci_dev*, !dbg !6072
  store %struct.pci_dev* %13, %struct.pci_dev** %tmp8, align 8, !dbg !6073
  %14 = load %struct.pci_dev*, %struct.pci_dev** %tmp8, align 8, !dbg !6072
  store %struct.pci_dev* %14, %struct.pci_dev** %dev, align 8, !dbg !6066
  br label %for.cond, !dbg !6066, !llvm.loop !6075

for.end:                                          ; preds = %for.cond
  %15 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !6077
  %16 = load %struct.list_head*, %struct.list_head** %fail_head.addr, align 8, !dbg !6078
  call void @__assign_resources_sorted(%struct.list_head* %head, %struct.list_head* %15, %struct.list_head* %16) #11, !dbg !6079
  ret void, !dbg !6080
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pdev_assign_fixed_resources(%struct.pci_dev* %dev) #0 !dbg !6081 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  %b = alloca %struct.pci_bus*, align 8
  %r = alloca %struct.resource*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6082, metadata !DIExpression()), !dbg !6083
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6084, metadata !DIExpression()), !dbg !6085
  store i32 0, i32* %i, align 4, !dbg !6086
  br label %for.cond, !dbg !6088

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6089
  %cmp = icmp slt i32 %0, 17, !dbg !6091
  br i1 %cmp, label %for.body, label %for.end, !dbg !6092

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b, metadata !6093, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !6096, metadata !DIExpression()), !dbg !6097
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6098
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 44, !dbg !6099
  %2 = load i32, i32* %i, align 4, !dbg !6100
  %idxprom = sext i32 %2 to i64, !dbg !6098
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !6098
  store %struct.resource* %arrayidx, %struct.resource** %r, align 8, !dbg !6097
  %3 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6101
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 5, !dbg !6103
  %4 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !6103
  %tobool = icmp ne %struct.resource* %4, null, !dbg !6101
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6104

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6105
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %5, i32 0, i32 3, !dbg !6106
  %6 = load i64, i64* %flags, align 8, !dbg !6106
  %and = and i64 %6, 16, !dbg !6107
  %tobool1 = icmp ne i64 %and, 0, !dbg !6107
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !6108

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %7 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6109
  %flags3 = getelementptr inbounds %struct.resource, %struct.resource* %7, i32 0, i32 3, !dbg !6110
  %8 = load i64, i64* %flags3, align 8, !dbg !6110
  %and4 = and i64 %8, 768, !dbg !6111
  %tobool5 = icmp ne i64 %and4, 0, !dbg !6111
  br i1 %tobool5, label %if.end, label %if.then, !dbg !6112

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !6113

if.end:                                           ; preds = %lor.lhs.false2
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6114
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 1, !dbg !6115
  %10 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6115
  store %struct.pci_bus* %10, %struct.pci_bus** %b, align 8, !dbg !6116
  br label %while.cond, !dbg !6117

while.cond:                                       ; preds = %while.body, %if.end
  %11 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6118
  %tobool6 = icmp ne %struct.pci_bus* %11, null, !dbg !6118
  br i1 %tobool6, label %land.rhs, label %land.end, !dbg !6119

land.rhs:                                         ; preds = %while.cond
  %12 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6120
  %parent7 = getelementptr inbounds %struct.resource, %struct.resource* %12, i32 0, i32 5, !dbg !6121
  %13 = load %struct.resource*, %struct.resource** %parent7, align 8, !dbg !6121
  %tobool8 = icmp ne %struct.resource* %13, null, !dbg !6122
  %lnot = xor i1 %tobool8, true, !dbg !6122
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !6123
  br i1 %14, label %while.body, label %while.end, !dbg !6117

while.body:                                       ; preds = %land.end
  %15 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6124
  %16 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !6126
  call void @assign_fixed_resource_on_bus(%struct.pci_bus* %15, %struct.resource* %16) #11, !dbg !6127
  %17 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6128
  %parent9 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %17, i32 0, i32 1, !dbg !6129
  %18 = load %struct.pci_bus*, %struct.pci_bus** %parent9, align 8, !dbg !6129
  store %struct.pci_bus* %18, %struct.pci_bus** %b, align 8, !dbg !6130
  br label %while.cond, !dbg !6117, !llvm.loop !6131

while.end:                                        ; preds = %land.end
  br label %for.inc, !dbg !6133

for.inc:                                          ; preds = %while.end, %if.then
  %19 = load i32, i32* %i, align 4, !dbg !6134
  %inc = add i32 %19, 1, !dbg !6134
  store i32 %inc, i32* %i, align 4, !dbg !6134
  br label %for.cond, !dbg !6135, !llvm.loop !6136

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_is_enabled(%struct.pci_dev* %pdev) #0 !dbg !6139 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6140, metadata !DIExpression()), !dbg !6147
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6152, metadata !DIExpression()), !dbg !6160
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6162, metadata !DIExpression()), !dbg !6163
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6164, metadata !DIExpression()), !dbg !6165
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6166, metadata !DIExpression()), !dbg !6167
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6168
  %enable_cnt = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 48, !dbg !6169
  store %struct.atomic_t* %enable_cnt, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6170
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !6170
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6171
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !6172
  %conv.i.i = trunc i64 %4 to i32, !dbg !6172
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #13, !dbg !6173
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6174
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !6174
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #13, !dbg !6174
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6175
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6176
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !6176
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !6176
  %cmp = icmp sgt i32 %9, 0, !dbg !6177
  %conv = zext i1 %cmp to i32, !dbg !6177
  ret i32 %conv, !dbg !6178
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_domain_nr(%struct.pci_bus* %bus) #0 !dbg !6179 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !6181, metadata !DIExpression()), !dbg !6182
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6183
  %call = call %struct.pci_sysdata* @to_pci_sysdata(%struct.pci_bus* %0) #11, !dbg !6184
  %domain = getelementptr inbounds %struct.pci_sysdata, %struct.pci_sysdata* %call, i32 0, i32 0, !dbg !6185
  %1 = load i32, i32* %domain, align 8, !dbg !6185
  ret i32 %1, !dbg !6186
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_bus_assign_resources(%struct.pci_bus* %bus) #0 !dbg !6187 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !6190, metadata !DIExpression()), !dbg !6191
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6192
  call void @__pci_bus_assign_resources(%struct.pci_bus* %0, %struct.list_head* null, %struct.list_head* null) #11, !dbg !6193
  ret void, !dbg !6194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_bus_claim_resources(%struct.pci_bus* %b) #0 !dbg !6195 {
entry:
  %b.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %b, %struct.pci_bus** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b.addr, metadata !6196, metadata !DIExpression()), !dbg !6197
  %0 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !6198
  call void @pci_bus_allocate_resources(%struct.pci_bus* %0) #11, !dbg !6199
  %1 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !6200
  call void @pci_bus_allocate_dev_resources(%struct.pci_bus* %1) #11, !dbg !6201
  ret void, !dbg !6202
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bus_allocate_resources(%struct.pci_bus* %b) #0 !dbg !6203 {
entry:
  %b.addr = alloca %struct.pci_bus*, align 8
  %child = alloca %struct.pci_bus*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_bus*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %b, %struct.pci_bus** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b.addr, metadata !6204, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %child, metadata !6206, metadata !DIExpression()), !dbg !6207
  %0 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !6208
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !6210
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !6210
  %tobool = icmp ne %struct.pci_dev* %1, null, !dbg !6208
  br i1 %tobool, label %if.then, label %if.end, !dbg !6211

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !6212
  call void @pci_read_bridge_bases(%struct.pci_bus* %2) #11, !dbg !6214
  %3 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !6215
  %self1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %3, i32 0, i32 4, !dbg !6216
  %4 = load %struct.pci_dev*, %struct.pci_dev** %self1, align 8, !dbg !6216
  call void @pci_claim_bridge_resources(%struct.pci_dev* %4) #11, !dbg !6217
  br label %if.end, !dbg !6218

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6219, metadata !DIExpression()), !dbg !6222
  %5 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !6222
  %children = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 2, !dbg !6222
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %children, i32 0, i32 0, !dbg !6222
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6222
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !6222
  store i8* %7, i8** %__mptr, align 8, !dbg !6222
  br label %do.body, !dbg !6222

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !6223

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !6222
  %add.ptr = getelementptr i8, i8* %8, i64 0, !dbg !6222
  %9 = bitcast i8* %add.ptr to %struct.pci_bus*, !dbg !6222
  store %struct.pci_bus* %9, %struct.pci_bus** %tmp, align 8, !dbg !6223
  %10 = load %struct.pci_bus*, %struct.pci_bus** %tmp, align 8, !dbg !6222
  store %struct.pci_bus* %10, %struct.pci_bus** %child, align 8, !dbg !6225
  br label %for.cond, !dbg !6225

for.cond:                                         ; preds = %do.end7, %do.end
  %11 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6226
  %node = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %11, i32 0, i32 0, !dbg !6226
  %12 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !6226
  %children2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %12, i32 0, i32 2, !dbg !6226
  %cmp = icmp eq %struct.list_head* %node, %children2, !dbg !6226
  %lnot = xor i1 %cmp, true, !dbg !6226
  br i1 %lnot, label %for.body, label %for.end, !dbg !6225

for.body:                                         ; preds = %for.cond
  %13 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6228
  call void @pci_bus_allocate_resources(%struct.pci_bus* %13) #11, !dbg !6229
  br label %for.inc, !dbg !6229

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !6230, metadata !DIExpression()), !dbg !6232
  %14 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6232
  %node4 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %14, i32 0, i32 0, !dbg !6232
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %node4, i32 0, i32 0, !dbg !6232
  %15 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !6232
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !6232
  store i8* %16, i8** %__mptr3, align 8, !dbg !6232
  br label %do.body6, !dbg !6232

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !6233

do.end7:                                          ; preds = %do.body6
  %17 = load i8*, i8** %__mptr3, align 8, !dbg !6232
  %add.ptr9 = getelementptr i8, i8* %17, i64 0, !dbg !6232
  %18 = bitcast i8* %add.ptr9 to %struct.pci_bus*, !dbg !6232
  store %struct.pci_bus* %18, %struct.pci_bus** %tmp8, align 8, !dbg !6233
  %19 = load %struct.pci_bus*, %struct.pci_bus** %tmp8, align 8, !dbg !6232
  store %struct.pci_bus* %19, %struct.pci_bus** %child, align 8, !dbg !6226
  br label %for.cond, !dbg !6226, !llvm.loop !6235

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bus_allocate_dev_resources(%struct.pci_bus* %b) #0 !dbg !6238 {
entry:
  %b.addr = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %child = alloca %struct.pci_bus*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp7 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %b, %struct.pci_bus** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b.addr, metadata !6239, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !6241, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %child, metadata !6243, metadata !DIExpression()), !dbg !6244
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6245, metadata !DIExpression()), !dbg !6248
  %0 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !6248
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 3, !dbg !6248
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !6248
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6248
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !6248
  store i8* %2, i8** %__mptr, align 8, !dbg !6248
  br label %do.body, !dbg !6248

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6249

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !6248
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !6248
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !6248
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !6249
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6248
  store %struct.pci_dev* %5, %struct.pci_dev** %dev, align 8, !dbg !6251
  br label %for.cond, !dbg !6251

for.cond:                                         ; preds = %do.end6, %do.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6252
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 0, !dbg !6252
  %7 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !6252
  %devices1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 3, !dbg !6252
  %cmp = icmp eq %struct.list_head* %bus_list, %devices1, !dbg !6252
  %lnot = xor i1 %cmp, true, !dbg !6252
  br i1 %lnot, label %for.body, label %for.end, !dbg !6251

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6254
  call void @pci_claim_device_resources(%struct.pci_dev* %8) #11, !dbg !6256
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6257
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 2, !dbg !6258
  %10 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !6258
  store %struct.pci_bus* %10, %struct.pci_bus** %child, align 8, !dbg !6259
  %11 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6260
  %tobool = icmp ne %struct.pci_bus* %11, null, !dbg !6260
  br i1 %tobool, label %if.then, label %if.end, !dbg !6262

if.then:                                          ; preds = %for.body
  %12 = load %struct.pci_bus*, %struct.pci_bus** %child, align 8, !dbg !6263
  call void @pci_bus_allocate_dev_resources(%struct.pci_bus* %12) #11, !dbg !6264
  br label %if.end, !dbg !6264

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6265

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !6266, metadata !DIExpression()), !dbg !6268
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6268
  %bus_list3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 0, !dbg !6268
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list3, i32 0, i32 0, !dbg !6268
  %14 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !6268
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !6268
  store i8* %15, i8** %__mptr2, align 8, !dbg !6268
  br label %do.body5, !dbg !6268

do.body5:                                         ; preds = %for.inc
  br label %do.end6, !dbg !6269

do.end6:                                          ; preds = %do.body5
  %16 = load i8*, i8** %__mptr2, align 8, !dbg !6268
  %add.ptr8 = getelementptr i8, i8* %16, i64 0, !dbg !6268
  %17 = bitcast i8* %add.ptr8 to %struct.pci_dev*, !dbg !6268
  store %struct.pci_dev* %17, %struct.pci_dev** %tmp7, align 8, !dbg !6269
  %18 = load %struct.pci_dev*, %struct.pci_dev** %tmp7, align 8, !dbg !6268
  store %struct.pci_dev* %18, %struct.pci_dev** %dev, align 8, !dbg !6252
  br label %for.cond, !dbg !6252, !llvm.loop !6271

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6273
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_realloc_get_opt(i8* %str) #4 section ".init.text" !dbg !6274 {
entry:
  %str.addr = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !6277, metadata !DIExpression()), !dbg !6278
  %0 = load i8*, i8** %str.addr, align 8, !dbg !6279
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3) #11, !dbg !6281
  %tobool = icmp ne i32 %call, 0, !dbg !6281
  br i1 %tobool, label %if.else, label %if.then, !dbg !6282

if.then:                                          ; preds = %entry
  store i32 0, i32* @pci_realloc_enable, align 4, !dbg !6283
  br label %if.end4, !dbg !6284

if.else:                                          ; preds = %entry
  %1 = load i8*, i8** %str.addr, align 8, !dbg !6285
  %call1 = call i32 @strncmp(i8* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2) #11, !dbg !6287
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6287
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !6288

if.then3:                                         ; preds = %if.else
  store i32 2, i32* @pci_realloc_enable, align 4, !dbg !6289
  br label %if.end, !dbg !6290

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  ret void, !dbg !6291
}

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_assign_unassigned_root_bus_resources(%struct.pci_bus* %bus) #0 !dbg !6292 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %realloc_head = alloca %struct.list_head, align 8
  %add_list = alloca %struct.list_head*, align 8
  %tried_times = alloca i32, align 4
  %rel_type = alloca i32, align 4
  %fail_head = alloca %struct.list_head, align 8
  %fail_res = alloca %struct.pci_dev_resource*, align 8
  %pci_try_num = alloca i32, align 4
  %enable_local = alloca i32, align 4
  %max_depth = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev_resource*, align 8
  %__mptr59 = alloca i8*, align 8
  %tmp64 = alloca %struct.pci_dev_resource*, align 8
  %__mptr66 = alloca i8*, align 8
  %tmp70 = alloca %struct.pci_dev_resource*, align 8
  %res = alloca %struct.resource*, align 8
  %idx = alloca i32, align 4
  %__mptr98 = alloca i8*, align 8
  %tmp103 = alloca %struct.pci_dev_resource*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !6293, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.declare(metadata %struct.list_head* %realloc_head, metadata !6295, metadata !DIExpression()), !dbg !6296
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %realloc_head, i32 0, i32 0, !dbg !6296
  store %struct.list_head* %realloc_head, %struct.list_head** %next, align 8, !dbg !6296
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %realloc_head, i32 0, i32 1, !dbg !6296
  store %struct.list_head* %realloc_head, %struct.list_head** %prev, align 8, !dbg !6296
  call void @llvm.dbg.declare(metadata %struct.list_head** %add_list, metadata !6297, metadata !DIExpression()), !dbg !6298
  store %struct.list_head* null, %struct.list_head** %add_list, align 8, !dbg !6298
  call void @llvm.dbg.declare(metadata i32* %tried_times, metadata !6299, metadata !DIExpression()), !dbg !6300
  store i32 0, i32* %tried_times, align 4, !dbg !6300
  call void @llvm.dbg.declare(metadata i32* %rel_type, metadata !6301, metadata !DIExpression()), !dbg !6302
  store i32 0, i32* %rel_type, align 4, !dbg !6302
  call void @llvm.dbg.declare(metadata %struct.list_head* %fail_head, metadata !6303, metadata !DIExpression()), !dbg !6304
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %fail_head, i32 0, i32 0, !dbg !6304
  store %struct.list_head* %fail_head, %struct.list_head** %next1, align 8, !dbg !6304
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %fail_head, i32 0, i32 1, !dbg !6304
  store %struct.list_head* %fail_head, %struct.list_head** %prev2, align 8, !dbg !6304
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %fail_res, metadata !6305, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.declare(metadata i32* %pci_try_num, metadata !6307, metadata !DIExpression()), !dbg !6308
  store i32 1, i32* %pci_try_num, align 4, !dbg !6308
  call void @llvm.dbg.declare(metadata i32* %enable_local, metadata !6309, metadata !DIExpression()), !dbg !6310
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6311
  %1 = load i32, i32* @pci_realloc_enable, align 4, !dbg !6312
  %call = call i32 @pci_realloc_detect(%struct.pci_bus* %0, i32 %1) #11, !dbg !6313
  store i32 %call, i32* %enable_local, align 4, !dbg !6314
  %2 = load i32, i32* %enable_local, align 4, !dbg !6315
  %call3 = call zeroext i1 @pci_realloc_enabled(i32 %2) #11, !dbg !6317
  br i1 %call3, label %if.then, label %if.end, !dbg !6318

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %max_depth, metadata !6319, metadata !DIExpression()), !dbg !6321
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6322
  %call4 = call i32 @pci_bus_get_depth(%struct.pci_bus* %3) #11, !dbg !6323
  store i32 %call4, i32* %max_depth, align 4, !dbg !6321
  %4 = load i32, i32* %max_depth, align 4, !dbg !6324
  %add = add i32 %4, 1, !dbg !6325
  store i32 %add, i32* %pci_try_num, align 4, !dbg !6326
  %5 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6327
  %dev = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 21, !dbg !6327
  %6 = load i32, i32* %max_depth, align 4, !dbg !6327
  %7 = load i32, i32* %pci_try_num, align 4, !dbg !6327
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i64 0, i64 0), i32 %6, i32 %7) #10, !dbg !6327
  br label %if.end, !dbg !6328

if.end:                                           ; preds = %if.then, %entry
  br label %again, !dbg !6329

again:                                            ; preds = %for.end105, %if.end
  call void @llvm.dbg.label(metadata !6330), !dbg !6331
  %8 = load i32, i32* %tried_times, align 4, !dbg !6332
  %add5 = add i32 %8, 1, !dbg !6334
  %9 = load i32, i32* %pci_try_num, align 4, !dbg !6335
  %cmp = icmp eq i32 %add5, %9, !dbg !6336
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !6337

if.then6:                                         ; preds = %again
  store %struct.list_head* %realloc_head, %struct.list_head** %add_list, align 8, !dbg !6338
  br label %if.end7, !dbg !6339

if.end7:                                          ; preds = %if.then6, %again
  %10 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6340
  %11 = load %struct.list_head*, %struct.list_head** %add_list, align 8, !dbg !6341
  call void @__pci_bus_size_bridges(%struct.pci_bus* %10, %struct.list_head* %11) #11, !dbg !6342
  %12 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6343
  %13 = load %struct.list_head*, %struct.list_head** %add_list, align 8, !dbg !6344
  call void @__pci_bus_assign_resources(%struct.pci_bus* %12, %struct.list_head* %13, %struct.list_head* %fail_head) #11, !dbg !6345
  %14 = load %struct.list_head*, %struct.list_head** %add_list, align 8, !dbg !6346
  %tobool = icmp ne %struct.list_head* %14, null, !dbg !6346
  br i1 %tobool, label %if.then8, label %if.end24, !dbg !6348

if.then8:                                         ; preds = %if.end7
  br label %do.body, !dbg !6349

do.body:                                          ; preds = %if.then8
  %15 = load %struct.list_head*, %struct.list_head** %add_list, align 8, !dbg !6350
  %call9 = call i32 @list_empty(%struct.list_head* %15) #11, !dbg !6350
  %tobool10 = icmp ne i32 %call9, 0, !dbg !6350
  %lnot = xor i1 %tobool10, true, !dbg !6350
  %lnot11 = xor i1 %lnot, true, !dbg !6350
  %lnot12 = xor i1 %lnot11, true, !dbg !6350
  %lnot.ext = zext i1 %lnot12 to i32, !dbg !6350
  %conv = sext i32 %lnot.ext to i64, !dbg !6350
  %tobool13 = icmp ne i64 %conv, 0, !dbg !6350
  br i1 %tobool13, label %if.then14, label %if.end22, !dbg !6353

if.then14:                                        ; preds = %do.body
  br label %do.body15, !dbg !6350

do.body15:                                        ; preds = %if.then14
  br label %do.body16, !dbg !6354

do.body16:                                        ; preds = %do.body15
  br label %do.end, !dbg !6356

do.end:                                           ; preds = %do.body16
  br label %do.body17, !dbg !6354

do.body17:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i32 1790, i32 0, i64 12) #14, !dbg !6358, !srcloc !6360
  br label %do.end18, !dbg !6358

do.end18:                                         ; preds = %do.body17
  br label %do.body19, !dbg !6354

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 310) #14, !dbg !6361, !srcloc !6364
  unreachable, !dbg !6365

do.end20:                                         ; No predecessors!
  br label %do.end21, !dbg !6354

do.end21:                                         ; preds = %do.end20
  br label %if.end22, !dbg !6354

if.end22:                                         ; preds = %do.end21, %do.body
  br label %do.end23, !dbg !6353

do.end23:                                         ; preds = %if.end22
  br label %if.end24, !dbg !6353

if.end24:                                         ; preds = %do.end23, %if.end7
  %16 = load i32, i32* %tried_times, align 4, !dbg !6366
  %inc = add i32 %16, 1, !dbg !6366
  store i32 %inc, i32* %tried_times, align 4, !dbg !6366
  %call25 = call i32 @list_empty(%struct.list_head* %fail_head) #11, !dbg !6367
  %tobool26 = icmp ne i32 %call25, 0, !dbg !6367
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !6369

if.then27:                                        ; preds = %if.end24
  br label %dump, !dbg !6370

if.end28:                                         ; preds = %if.end24
  %17 = load i32, i32* %tried_times, align 4, !dbg !6371
  %18 = load i32, i32* %pci_try_num, align 4, !dbg !6373
  %cmp29 = icmp sge i32 %17, %18, !dbg !6374
  br i1 %cmp29, label %if.then31, label %if.end42, !dbg !6375

if.then31:                                        ; preds = %if.end28
  %19 = load i32, i32* %enable_local, align 4, !dbg !6376
  %cmp32 = icmp eq i32 %19, -1, !dbg !6379
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !6380

if.then34:                                        ; preds = %if.then31
  %20 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6381
  %dev35 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %20, i32 0, i32 21, !dbg !6381
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev35, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !6381
  br label %if.end41, !dbg !6381

if.else:                                          ; preds = %if.then31
  %21 = load i32, i32* %enable_local, align 4, !dbg !6382
  %cmp36 = icmp eq i32 %21, 3, !dbg !6384
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !6385

if.then38:                                        ; preds = %if.else
  %22 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6386
  %dev39 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %22, i32 0, i32 21, !dbg !6386
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev39, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !6386
  br label %if.end40, !dbg !6386

if.end40:                                         ; preds = %if.then38, %if.else
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then34
  call void @free_list(%struct.list_head* %fail_head) #11, !dbg !6387
  br label %dump, !dbg !6388

if.end42:                                         ; preds = %if.end28
  %23 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6389
  %dev43 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %23, i32 0, i32 21, !dbg !6389
  %24 = load i32, i32* %tried_times, align 4, !dbg !6389
  %add44 = add i32 %24, 1, !dbg !6389
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev43, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0), i32 %add44) #10, !dbg !6389
  %25 = load i32, i32* %tried_times, align 4, !dbg !6390
  %add45 = add i32 %25, 1, !dbg !6392
  %cmp46 = icmp sgt i32 %add45, 2, !dbg !6393
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !6394

if.then48:                                        ; preds = %if.end42
  store i32 1, i32* %rel_type, align 4, !dbg !6395
  br label %if.end49, !dbg !6396

if.end49:                                         ; preds = %if.then48, %if.end42
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6397, metadata !DIExpression()), !dbg !6400
  %next50 = getelementptr inbounds %struct.list_head, %struct.list_head* %fail_head, i32 0, i32 0, !dbg !6400
  %26 = load %struct.list_head*, %struct.list_head** %next50, align 8, !dbg !6400
  %27 = bitcast %struct.list_head* %26 to i8*, !dbg !6400
  store i8* %27, i8** %__mptr, align 8, !dbg !6400
  br label %do.body51, !dbg !6400

do.body51:                                        ; preds = %if.end49
  br label %do.end52, !dbg !6401

do.end52:                                         ; preds = %do.body51
  %28 = load i8*, i8** %__mptr, align 8, !dbg !6400
  %add.ptr = getelementptr i8, i8* %28, i64 0, !dbg !6400
  %29 = bitcast i8* %add.ptr to %struct.pci_dev_resource*, !dbg !6400
  store %struct.pci_dev_resource* %29, %struct.pci_dev_resource** %tmp, align 8, !dbg !6401
  %30 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !6400
  store %struct.pci_dev_resource* %30, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6403
  br label %for.cond, !dbg !6403

for.cond:                                         ; preds = %do.end63, %do.end52
  %31 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6404
  %list = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %31, i32 0, i32 0, !dbg !6404
  %cmp53 = icmp eq %struct.list_head* %list, %fail_head, !dbg !6404
  %lnot55 = xor i1 %cmp53, true, !dbg !6404
  br i1 %lnot55, label %for.body, label %for.end, !dbg !6403

for.body:                                         ; preds = %for.cond
  %32 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6406
  %dev57 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %32, i32 0, i32 2, !dbg !6407
  %33 = load %struct.pci_dev*, %struct.pci_dev** %dev57, align 8, !dbg !6407
  %bus58 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 1, !dbg !6408
  %34 = load %struct.pci_bus*, %struct.pci_bus** %bus58, align 8, !dbg !6408
  %35 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6409
  %flags = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %35, i32 0, i32 7, !dbg !6410
  %36 = load i64, i64* %flags, align 8, !dbg !6410
  %and = and i64 %36, 1057536, !dbg !6411
  %37 = load i32, i32* %rel_type, align 4, !dbg !6412
  call void @pci_bus_release_bridge_resources(%struct.pci_bus* %34, i64 %and, i32 %37) #11, !dbg !6413
  br label %for.inc, !dbg !6413

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr59, metadata !6414, metadata !DIExpression()), !dbg !6416
  %38 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6416
  %list60 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %38, i32 0, i32 0, !dbg !6416
  %next61 = getelementptr inbounds %struct.list_head, %struct.list_head* %list60, i32 0, i32 0, !dbg !6416
  %39 = load %struct.list_head*, %struct.list_head** %next61, align 8, !dbg !6416
  %40 = bitcast %struct.list_head* %39 to i8*, !dbg !6416
  store i8* %40, i8** %__mptr59, align 8, !dbg !6416
  br label %do.body62, !dbg !6416

do.body62:                                        ; preds = %for.inc
  br label %do.end63, !dbg !6417

do.end63:                                         ; preds = %do.body62
  %41 = load i8*, i8** %__mptr59, align 8, !dbg !6416
  %add.ptr65 = getelementptr i8, i8* %41, i64 0, !dbg !6416
  %42 = bitcast i8* %add.ptr65 to %struct.pci_dev_resource*, !dbg !6416
  store %struct.pci_dev_resource* %42, %struct.pci_dev_resource** %tmp64, align 8, !dbg !6417
  %43 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp64, align 8, !dbg !6416
  store %struct.pci_dev_resource* %43, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6404
  br label %for.cond, !dbg !6404, !llvm.loop !6419

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr66, metadata !6421, metadata !DIExpression()), !dbg !6424
  %next67 = getelementptr inbounds %struct.list_head, %struct.list_head* %fail_head, i32 0, i32 0, !dbg !6424
  %44 = load %struct.list_head*, %struct.list_head** %next67, align 8, !dbg !6424
  %45 = bitcast %struct.list_head* %44 to i8*, !dbg !6424
  store i8* %45, i8** %__mptr66, align 8, !dbg !6424
  br label %do.body68, !dbg !6424

do.body68:                                        ; preds = %for.end
  br label %do.end69, !dbg !6425

do.end69:                                         ; preds = %do.body68
  %46 = load i8*, i8** %__mptr66, align 8, !dbg !6424
  %add.ptr71 = getelementptr i8, i8* %46, i64 0, !dbg !6424
  %47 = bitcast i8* %add.ptr71 to %struct.pci_dev_resource*, !dbg !6424
  store %struct.pci_dev_resource* %47, %struct.pci_dev_resource** %tmp70, align 8, !dbg !6425
  %48 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp70, align 8, !dbg !6424
  store %struct.pci_dev_resource* %48, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6427
  br label %for.cond72, !dbg !6427

for.cond72:                                       ; preds = %do.end102, %do.end69
  %49 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6428
  %list73 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %49, i32 0, i32 0, !dbg !6428
  %cmp74 = icmp eq %struct.list_head* %list73, %fail_head, !dbg !6428
  %lnot76 = xor i1 %cmp74, true, !dbg !6428
  br i1 %lnot76, label %for.body78, label %for.end105, !dbg !6427

for.body78:                                       ; preds = %for.cond72
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !6430, metadata !DIExpression()), !dbg !6432
  %50 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6433
  %res79 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %50, i32 0, i32 1, !dbg !6434
  %51 = load %struct.resource*, %struct.resource** %res79, align 8, !dbg !6434
  store %struct.resource* %51, %struct.resource** %res, align 8, !dbg !6432
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6435, metadata !DIExpression()), !dbg !6436
  %52 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6437
  %start = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %52, i32 0, i32 3, !dbg !6438
  %53 = load i64, i64* %start, align 8, !dbg !6438
  %54 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6439
  %start80 = getelementptr inbounds %struct.resource, %struct.resource* %54, i32 0, i32 0, !dbg !6440
  store i64 %53, i64* %start80, align 8, !dbg !6441
  %55 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6442
  %end = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %55, i32 0, i32 4, !dbg !6443
  %56 = load i64, i64* %end, align 8, !dbg !6443
  %57 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6444
  %end81 = getelementptr inbounds %struct.resource, %struct.resource* %57, i32 0, i32 1, !dbg !6445
  store i64 %56, i64* %end81, align 8, !dbg !6446
  %58 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6447
  %flags82 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %58, i32 0, i32 7, !dbg !6448
  %59 = load i64, i64* %flags82, align 8, !dbg !6448
  %60 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6449
  %flags83 = getelementptr inbounds %struct.resource, %struct.resource* %60, i32 0, i32 3, !dbg !6450
  store i64 %59, i64* %flags83, align 8, !dbg !6451
  %61 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6452
  %dev84 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %61, i32 0, i32 2, !dbg !6454
  %62 = load %struct.pci_dev*, %struct.pci_dev** %dev84, align 8, !dbg !6454
  %call85 = call zeroext i1 @pci_is_bridge(%struct.pci_dev* %62) #11, !dbg !6455
  br i1 %call85, label %if.then86, label %if.end96, !dbg !6456

if.then86:                                        ; preds = %for.body78
  %63 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6457
  %64 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6459
  %dev87 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %64, i32 0, i32 2, !dbg !6460
  %65 = load %struct.pci_dev*, %struct.pci_dev** %dev87, align 8, !dbg !6460
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %65, i32 0, i32 44, !dbg !6461
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !6459
  %sub.ptr.lhs.cast = ptrtoint %struct.resource* %63 to i64, !dbg !6462
  %sub.ptr.rhs.cast = ptrtoint %struct.resource* %arrayidx to i64, !dbg !6462
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6462
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !6462
  %conv88 = trunc i64 %sub.ptr.div to i32, !dbg !6457
  store i32 %conv88, i32* %idx, align 4, !dbg !6463
  %66 = load i32, i32* %idx, align 4, !dbg !6464
  %cmp89 = icmp sge i32 %66, 13, !dbg !6466
  br i1 %cmp89, label %land.lhs.true, label %if.end95, !dbg !6467

land.lhs.true:                                    ; preds = %if.then86
  %67 = load i32, i32* %idx, align 4, !dbg !6468
  %cmp91 = icmp sle i32 %67, 16, !dbg !6469
  br i1 %cmp91, label %if.then93, label %if.end95, !dbg !6470

if.then93:                                        ; preds = %land.lhs.true
  %68 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6471
  %flags94 = getelementptr inbounds %struct.resource, %struct.resource* %68, i32 0, i32 3, !dbg !6472
  store i64 0, i64* %flags94, align 8, !dbg !6473
  br label %if.end95, !dbg !6471

if.end95:                                         ; preds = %if.then93, %land.lhs.true, %if.then86
  br label %if.end96, !dbg !6474

if.end96:                                         ; preds = %if.end95, %for.body78
  br label %for.inc97, !dbg !6475

for.inc97:                                        ; preds = %if.end96
  call void @llvm.dbg.declare(metadata i8** %__mptr98, metadata !6476, metadata !DIExpression()), !dbg !6478
  %69 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6478
  %list99 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %69, i32 0, i32 0, !dbg !6478
  %next100 = getelementptr inbounds %struct.list_head, %struct.list_head* %list99, i32 0, i32 0, !dbg !6478
  %70 = load %struct.list_head*, %struct.list_head** %next100, align 8, !dbg !6478
  %71 = bitcast %struct.list_head* %70 to i8*, !dbg !6478
  store i8* %71, i8** %__mptr98, align 8, !dbg !6478
  br label %do.body101, !dbg !6478

do.body101:                                       ; preds = %for.inc97
  br label %do.end102, !dbg !6479

do.end102:                                        ; preds = %do.body101
  %72 = load i8*, i8** %__mptr98, align 8, !dbg !6478
  %add.ptr104 = getelementptr i8, i8* %72, i64 0, !dbg !6478
  %73 = bitcast i8* %add.ptr104 to %struct.pci_dev_resource*, !dbg !6478
  store %struct.pci_dev_resource* %73, %struct.pci_dev_resource** %tmp103, align 8, !dbg !6479
  %74 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp103, align 8, !dbg !6478
  store %struct.pci_dev_resource* %74, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6428
  br label %for.cond72, !dbg !6428, !llvm.loop !6481

for.end105:                                       ; preds = %for.cond72
  call void @free_list(%struct.list_head* %fail_head) #11, !dbg !6483
  br label %again, !dbg !6484

dump:                                             ; preds = %if.end41, %if.then27
  call void @llvm.dbg.label(metadata !6485), !dbg !6486
  %75 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6487
  call void @pci_bus_dump_resources(%struct.pci_bus* %75) #11, !dbg !6488
  ret void, !dbg !6489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_realloc_detect(%struct.pci_bus* %bus, i32 %enable_local) #0 !dbg !6490 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %enable_local.addr = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !6493, metadata !DIExpression()), !dbg !6494
  store i32 %enable_local, i32* %enable_local.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable_local.addr, metadata !6495, metadata !DIExpression()), !dbg !6496
  %0 = load i32, i32* %enable_local.addr, align 4, !dbg !6497
  ret i32 %0, !dbg !6498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_realloc_enabled(i32 %enable) #0 !dbg !6499 {
entry:
  %enable.addr = alloca i32, align 4
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !6502, metadata !DIExpression()), !dbg !6503
  %0 = load i32, i32* %enable.addr, align 4, !dbg !6504
  %cmp = icmp sge i32 %0, 2, !dbg !6505
  ret i1 %cmp, !dbg !6506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_bus_get_depth(%struct.pci_bus* %bus) #0 !dbg !6507 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %depth = alloca i32, align 4
  %child_bus = alloca %struct.pci_bus*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_bus*, align 8
  %ret = alloca i32, align 4
  %__mptr4 = alloca i8*, align 8
  %tmp9 = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !6508, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !6510, metadata !DIExpression()), !dbg !6511
  store i32 0, i32* %depth, align 4, !dbg !6511
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %child_bus, metadata !6512, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6514, metadata !DIExpression()), !dbg !6517
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6517
  %children = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 2, !dbg !6517
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %children, i32 0, i32 0, !dbg !6517
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6517
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !6517
  store i8* %2, i8** %__mptr, align 8, !dbg !6517
  br label %do.body, !dbg !6517

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6518

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !6517
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !6517
  %4 = bitcast i8* %add.ptr to %struct.pci_bus*, !dbg !6517
  store %struct.pci_bus* %4, %struct.pci_bus** %tmp, align 8, !dbg !6518
  %5 = load %struct.pci_bus*, %struct.pci_bus** %tmp, align 8, !dbg !6517
  store %struct.pci_bus* %5, %struct.pci_bus** %child_bus, align 8, !dbg !6520
  br label %for.cond, !dbg !6520

for.cond:                                         ; preds = %do.end8, %do.end
  %6 = load %struct.pci_bus*, %struct.pci_bus** %child_bus, align 8, !dbg !6521
  %node = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %6, i32 0, i32 0, !dbg !6521
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6521
  %children1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 2, !dbg !6521
  %cmp = icmp eq %struct.list_head* %node, %children1, !dbg !6521
  %lnot = xor i1 %cmp, true, !dbg !6521
  br i1 %lnot, label %for.body, label %for.end, !dbg !6520

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6523, metadata !DIExpression()), !dbg !6525
  %8 = load %struct.pci_bus*, %struct.pci_bus** %child_bus, align 8, !dbg !6526
  %call = call i32 @pci_bus_get_depth(%struct.pci_bus* %8) #11, !dbg !6527
  store i32 %call, i32* %ret, align 4, !dbg !6528
  %9 = load i32, i32* %ret, align 4, !dbg !6529
  %add = add i32 %9, 1, !dbg !6531
  %10 = load i32, i32* %depth, align 4, !dbg !6532
  %cmp2 = icmp sgt i32 %add, %10, !dbg !6533
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6534

if.then:                                          ; preds = %for.body
  %11 = load i32, i32* %ret, align 4, !dbg !6535
  %add3 = add i32 %11, 1, !dbg !6536
  store i32 %add3, i32* %depth, align 4, !dbg !6537
  br label %if.end, !dbg !6538

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6539

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !6540, metadata !DIExpression()), !dbg !6542
  %12 = load %struct.pci_bus*, %struct.pci_bus** %child_bus, align 8, !dbg !6542
  %node5 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %12, i32 0, i32 0, !dbg !6542
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %node5, i32 0, i32 0, !dbg !6542
  %13 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !6542
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !6542
  store i8* %14, i8** %__mptr4, align 8, !dbg !6542
  br label %do.body7, !dbg !6542

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !6543

do.end8:                                          ; preds = %do.body7
  %15 = load i8*, i8** %__mptr4, align 8, !dbg !6542
  %add.ptr10 = getelementptr i8, i8* %15, i64 0, !dbg !6542
  %16 = bitcast i8* %add.ptr10 to %struct.pci_bus*, !dbg !6542
  store %struct.pci_bus* %16, %struct.pci_bus** %tmp9, align 8, !dbg !6543
  %17 = load %struct.pci_bus*, %struct.pci_bus** %tmp9, align 8, !dbg !6542
  store %struct.pci_bus* %17, %struct.pci_bus** %child_bus, align 8, !dbg !6521
  br label %for.cond, !dbg !6521, !llvm.loop !6545

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %depth, align 4, !dbg !6547
  ret i32 %18, !dbg !6548
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !6549 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6555, metadata !DIExpression()), !dbg !6556
  br label %do.body, !dbg !6557

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6559

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6557
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !6557
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6557
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !6559
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !6557
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6561
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !6562
  %conv = zext i1 %cmp to i32, !dbg !6562
  ret i32 %conv, !dbg !6563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_list(%struct.list_head* %head) #0 !dbg !6564 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %dev_res = alloca %struct.pci_dev_resource*, align 8
  %tmp = alloca %struct.pci_dev_resource*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.pci_dev_resource*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.pci_dev_resource*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.pci_dev_resource*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6567, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %dev_res, metadata !6569, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %tmp, metadata !6571, metadata !DIExpression()), !dbg !6572
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6573, metadata !DIExpression()), !dbg !6576
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6576
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !6576
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6576
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !6576
  store i8* %2, i8** %__mptr, align 8, !dbg !6576
  br label %do.body, !dbg !6576

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6577

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !6576
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !6576
  %4 = bitcast i8* %add.ptr to %struct.pci_dev_resource*, !dbg !6576
  store %struct.pci_dev_resource* %4, %struct.pci_dev_resource** %tmp1, align 8, !dbg !6577
  %5 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp1, align 8, !dbg !6576
  store %struct.pci_dev_resource* %5, %struct.pci_dev_resource** %dev_res, align 8, !dbg !6579
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !6580, metadata !DIExpression()), !dbg !6582
  %6 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !6582
  %list = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %6, i32 0, i32 0, !dbg !6582
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !6582
  %7 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !6582
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !6582
  store i8* %8, i8** %__mptr2, align 8, !dbg !6582
  br label %do.body4, !dbg !6582

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !6583

do.end5:                                          ; preds = %do.body4
  %9 = load i8*, i8** %__mptr2, align 8, !dbg !6582
  %add.ptr7 = getelementptr i8, i8* %9, i64 0, !dbg !6582
  %10 = bitcast i8* %add.ptr7 to %struct.pci_dev_resource*, !dbg !6582
  store %struct.pci_dev_resource* %10, %struct.pci_dev_resource** %tmp6, align 8, !dbg !6583
  %11 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp6, align 8, !dbg !6582
  store %struct.pci_dev_resource* %11, %struct.pci_dev_resource** %tmp, align 8, !dbg !6579
  br label %for.cond, !dbg !6579

for.cond:                                         ; preds = %do.end14, %do.end5
  %12 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !6585
  %list8 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %12, i32 0, i32 0, !dbg !6585
  %13 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6585
  %cmp = icmp eq %struct.list_head* %list8, %13, !dbg !6585
  %lnot = xor i1 %cmp, true, !dbg !6585
  br i1 %lnot, label %for.body, label %for.end, !dbg !6579

for.body:                                         ; preds = %for.cond
  %14 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !6587
  %list9 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %14, i32 0, i32 0, !dbg !6589
  call void @list_del(%struct.list_head* %list9) #11, !dbg !6590
  %15 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !6591
  %16 = bitcast %struct.pci_dev_resource* %15 to i8*, !dbg !6591
  call void @kfree(i8* %16) #11, !dbg !6592
  br label %for.inc, !dbg !6593

for.inc:                                          ; preds = %for.body
  %17 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !6585
  store %struct.pci_dev_resource* %17, %struct.pci_dev_resource** %dev_res, align 8, !dbg !6585
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !6594, metadata !DIExpression()), !dbg !6596
  %18 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !6596
  %list11 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %18, i32 0, i32 0, !dbg !6596
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %list11, i32 0, i32 0, !dbg !6596
  %19 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !6596
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !6596
  store i8* %20, i8** %__mptr10, align 8, !dbg !6596
  br label %do.body13, !dbg !6596

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !6597

do.end14:                                         ; preds = %do.body13
  %21 = load i8*, i8** %__mptr10, align 8, !dbg !6596
  %add.ptr16 = getelementptr i8, i8* %21, i64 0, !dbg !6596
  %22 = bitcast i8* %add.ptr16 to %struct.pci_dev_resource*, !dbg !6596
  store %struct.pci_dev_resource* %22, %struct.pci_dev_resource** %tmp15, align 8, !dbg !6597
  %23 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp15, align 8, !dbg !6596
  store %struct.pci_dev_resource* %23, %struct.pci_dev_resource** %tmp, align 8, !dbg !6585
  br label %for.cond, !dbg !6585, !llvm.loop !6599

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bus_release_bridge_resources(%struct.pci_bus* %bus, i64 %type, i32 %rel_type) #0 !dbg !6602 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %type.addr = alloca i64, align 8
  %rel_type.addr = alloca i32, align 4
  %dev = alloca %struct.pci_dev*, align 8
  %is_leaf_bridge = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %b = alloca %struct.pci_bus*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp13 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !6605, metadata !DIExpression()), !dbg !6606
  store i64 %type, i64* %type.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type.addr, metadata !6607, metadata !DIExpression()), !dbg !6608
  store i32 %rel_type, i32* %rel_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rel_type.addr, metadata !6609, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !6611, metadata !DIExpression()), !dbg !6612
  call void @llvm.dbg.declare(metadata i8* %is_leaf_bridge, metadata !6613, metadata !DIExpression()), !dbg !6614
  store i8 1, i8* %is_leaf_bridge, align 1, !dbg !6614
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6615, metadata !DIExpression()), !dbg !6618
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6618
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 3, !dbg !6618
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !6618
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6618
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !6618
  store i8* %2, i8** %__mptr, align 8, !dbg !6618
  br label %do.body, !dbg !6618

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6619

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !6618
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !6618
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !6618
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !6619
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6618
  store %struct.pci_dev* %5, %struct.pci_dev** %dev, align 8, !dbg !6621
  br label %for.cond, !dbg !6621

for.cond:                                         ; preds = %do.end12, %do.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6622
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 0, !dbg !6622
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6622
  %devices1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 3, !dbg !6622
  %cmp = icmp eq %struct.list_head* %bus_list, %devices1, !dbg !6622
  %lnot = xor i1 %cmp, true, !dbg !6622
  br i1 %lnot, label %for.body, label %for.end, !dbg !6621

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b, metadata !6624, metadata !DIExpression()), !dbg !6626
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6627
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 2, !dbg !6628
  %9 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !6628
  store %struct.pci_bus* %9, %struct.pci_bus** %b, align 8, !dbg !6626
  %10 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6629
  %tobool = icmp ne %struct.pci_bus* %10, null, !dbg !6629
  br i1 %tobool, label %if.end, label %if.then, !dbg !6631

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !6632

if.end:                                           ; preds = %for.body
  store i8 0, i8* %is_leaf_bridge, align 1, !dbg !6633
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6634
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 11, !dbg !6636
  %12 = load i32, i32* %class, align 4, !dbg !6636
  %shr = lshr i32 %12, 8, !dbg !6637
  %cmp2 = icmp ne i32 %shr, 1540, !dbg !6638
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6639

if.then3:                                         ; preds = %if.end
  br label %for.inc, !dbg !6640

if.end4:                                          ; preds = %if.end
  %13 = load i32, i32* %rel_type.addr, align 4, !dbg !6641
  %cmp5 = icmp eq i32 %13, 1, !dbg !6643
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6644

if.then6:                                         ; preds = %if.end4
  %14 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6645
  %15 = load i64, i64* %type.addr, align 8, !dbg !6646
  call void @pci_bus_release_bridge_resources(%struct.pci_bus* %14, i64 %15, i32 1) #11, !dbg !6647
  br label %if.end7, !dbg !6647

if.end7:                                          ; preds = %if.then6, %if.end4
  br label %for.inc, !dbg !6648

for.inc:                                          ; preds = %if.end7, %if.then3, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !6649, metadata !DIExpression()), !dbg !6651
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6651
  %bus_list9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 0, !dbg !6651
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list9, i32 0, i32 0, !dbg !6651
  %17 = load %struct.list_head*, %struct.list_head** %next10, align 8, !dbg !6651
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !6651
  store i8* %18, i8** %__mptr8, align 8, !dbg !6651
  br label %do.body11, !dbg !6651

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !6652

do.end12:                                         ; preds = %do.body11
  %19 = load i8*, i8** %__mptr8, align 8, !dbg !6651
  %add.ptr14 = getelementptr i8, i8* %19, i64 0, !dbg !6651
  %20 = bitcast i8* %add.ptr14 to %struct.pci_dev*, !dbg !6651
  store %struct.pci_dev* %20, %struct.pci_dev** %tmp13, align 8, !dbg !6652
  %21 = load %struct.pci_dev*, %struct.pci_dev** %tmp13, align 8, !dbg !6651
  store %struct.pci_dev* %21, %struct.pci_dev** %dev, align 8, !dbg !6622
  br label %for.cond, !dbg !6622, !llvm.loop !6654

for.end:                                          ; preds = %for.cond
  %22 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6656
  %call = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %22) #11, !dbg !6658
  br i1 %call, label %if.then15, label %if.end16, !dbg !6659

if.then15:                                        ; preds = %for.end
  br label %if.end25, !dbg !6660

if.end16:                                         ; preds = %for.end
  %23 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6661
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %23, i32 0, i32 4, !dbg !6663
  %24 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !6663
  %class17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 11, !dbg !6664
  %25 = load i32, i32* %class17, align 4, !dbg !6664
  %shr18 = lshr i32 %25, 8, !dbg !6665
  %cmp19 = icmp ne i32 %shr18, 1540, !dbg !6666
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !6667

if.then20:                                        ; preds = %if.end16
  br label %if.end25, !dbg !6668

if.end21:                                         ; preds = %if.end16
  %26 = load i32, i32* %rel_type.addr, align 4, !dbg !6669
  %cmp22 = icmp eq i32 %26, 1, !dbg !6671
  br i1 %cmp22, label %if.then24, label %lor.lhs.false, !dbg !6672

lor.lhs.false:                                    ; preds = %if.end21
  %27 = load i8, i8* %is_leaf_bridge, align 1, !dbg !6673
  %tobool23 = trunc i8 %27 to i1, !dbg !6673
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6674

if.then24:                                        ; preds = %lor.lhs.false, %if.end21
  %28 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6675
  %29 = load i64, i64* %type.addr, align 8, !dbg !6676
  call void @pci_bridge_release_resources(%struct.pci_bus* %28, i64 %29) #11, !dbg !6677
  br label %if.end25, !dbg !6677

if.end25:                                         ; preds = %if.then15, %if.then20, %if.then24, %lor.lhs.false
  ret void, !dbg !6678
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_is_bridge(%struct.pci_dev* %dev) #0 !dbg !6679 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6682, metadata !DIExpression()), !dbg !6683
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6684
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 13, !dbg !6685
  %1 = load i8, i8* %hdr_type, align 1, !dbg !6685
  %conv = zext i8 %1 to i32, !dbg !6684
  %cmp = icmp eq i32 %conv, 1, !dbg !6686
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6687

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6688
  %hdr_type2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 13, !dbg !6689
  %3 = load i8, i8* %hdr_type2, align 1, !dbg !6689
  %conv3 = zext i8 %3 to i32, !dbg !6688
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !6690
  br label %lor.end, !dbg !6687

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp4, %lor.rhs ]
  ret i1 %4, !dbg !6691
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bus_dump_resources(%struct.pci_bus* %bus) #0 !dbg !6692 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %b = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp7 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !6693, metadata !DIExpression()), !dbg !6694
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b, metadata !6695, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !6697, metadata !DIExpression()), !dbg !6698
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6699
  call void @pci_bus_dump_res(%struct.pci_bus* %0) #11, !dbg !6700
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6701, metadata !DIExpression()), !dbg !6704
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6704
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 3, !dbg !6704
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !6704
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6704
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !6704
  store i8* %3, i8** %__mptr, align 8, !dbg !6704
  br label %do.body, !dbg !6704

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6705

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !6704
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !6704
  %5 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !6704
  store %struct.pci_dev* %5, %struct.pci_dev** %tmp, align 8, !dbg !6705
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6704
  store %struct.pci_dev* %6, %struct.pci_dev** %dev, align 8, !dbg !6707
  br label %for.cond, !dbg !6707

for.cond:                                         ; preds = %do.end6, %do.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6708
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 0, !dbg !6708
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !6708
  %devices1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 3, !dbg !6708
  %cmp = icmp eq %struct.list_head* %bus_list, %devices1, !dbg !6708
  %lnot = xor i1 %cmp, true, !dbg !6708
  br i1 %lnot, label %for.body, label %for.end, !dbg !6707

for.body:                                         ; preds = %for.cond
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6710
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 2, !dbg !6712
  %10 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !6712
  store %struct.pci_bus* %10, %struct.pci_bus** %b, align 8, !dbg !6713
  %11 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6714
  %tobool = icmp ne %struct.pci_bus* %11, null, !dbg !6714
  br i1 %tobool, label %if.end, label %if.then, !dbg !6716

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !6717

if.end:                                           ; preds = %for.body
  %12 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6718
  call void @pci_bus_dump_resources(%struct.pci_bus* %12) #11, !dbg !6719
  br label %for.inc, !dbg !6720

for.inc:                                          ; preds = %if.end, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !6721, metadata !DIExpression()), !dbg !6723
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6723
  %bus_list3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 0, !dbg !6723
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list3, i32 0, i32 0, !dbg !6723
  %14 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !6723
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !6723
  store i8* %15, i8** %__mptr2, align 8, !dbg !6723
  br label %do.body5, !dbg !6723

do.body5:                                         ; preds = %for.inc
  br label %do.end6, !dbg !6724

do.end6:                                          ; preds = %do.body5
  %16 = load i8*, i8** %__mptr2, align 8, !dbg !6723
  %add.ptr8 = getelementptr i8, i8* %16, i64 0, !dbg !6723
  %17 = bitcast i8* %add.ptr8 to %struct.pci_dev*, !dbg !6723
  store %struct.pci_dev* %17, %struct.pci_dev** %tmp7, align 8, !dbg !6724
  %18 = load %struct.pci_dev*, %struct.pci_dev** %tmp7, align 8, !dbg !6723
  store %struct.pci_dev* %18, %struct.pci_dev** %dev, align 8, !dbg !6708
  br label %for.cond, !dbg !6708, !llvm.loop !6726

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6728
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_assign_unassigned_resources() #4 section ".init.text" !dbg !6729 {
entry:
  %root_bus = alloca %struct.pci_bus*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_bus*, align 8
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp1 = alloca %struct.acpi_device*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp5 = alloca %struct.acpi_device*, align 8
  %__to_acpi_device_node_fwnode8 = alloca %struct.fwnode_handle*, align 8
  %tmp11 = alloca %struct.acpi_device*, align 8
  %__mptr14 = alloca i8*, align 8
  %tmp17 = alloca %struct.acpi_device*, align 8
  %__mptr24 = alloca i8*, align 8
  %tmp28 = alloca %struct.pci_bus*, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %root_bus, metadata !6730, metadata !DIExpression()), !dbg !6731
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6732, metadata !DIExpression()), !dbg !6735
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @pci_root_buses, i32 0, i32 0), align 8, !dbg !6735
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !6735
  store i8* %1, i8** %__mptr, align 8, !dbg !6735
  br label %do.body, !dbg !6735

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6736

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6735
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6735
  %3 = bitcast i8* %add.ptr to %struct.pci_bus*, !dbg !6735
  store %struct.pci_bus* %3, %struct.pci_bus** %tmp, align 8, !dbg !6736
  %4 = load %struct.pci_bus*, %struct.pci_bus** %tmp, align 8, !dbg !6735
  store %struct.pci_bus* %4, %struct.pci_bus** %root_bus, align 8, !dbg !6738
  br label %for.cond, !dbg !6738

for.cond:                                         ; preds = %do.end27, %do.end
  %5 = load %struct.pci_bus*, %struct.pci_bus** %root_bus, align 8, !dbg !6739
  %node = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 0, !dbg !6739
  %cmp = icmp eq %struct.list_head* %node, @pci_root_buses, !dbg !6739
  %lnot = xor i1 %cmp, true, !dbg !6739
  br i1 %lnot, label %for.body, label %for.end, !dbg !6738

for.body:                                         ; preds = %for.cond
  %6 = load %struct.pci_bus*, %struct.pci_bus** %root_bus, align 8, !dbg !6741
  call void @pci_assign_unassigned_root_bus_resources(%struct.pci_bus* %6) #11, !dbg !6743
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !6744, metadata !DIExpression()), !dbg !6747
  %7 = load %struct.pci_bus*, %struct.pci_bus** %root_bus, align 8, !dbg !6747
  %bridge = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 20, !dbg !6747
  %8 = load %struct.device*, %struct.device** %bridge, align 8, !dbg !6747
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 24, !dbg !6747
  %9 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !6747
  store %struct.fwnode_handle* %9, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !6747
  %10 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !6747
  %call = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %10) #11, !dbg !6747
  br i1 %call, label %cond.true, label %cond.false, !dbg !6747

cond.true:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !6748, metadata !DIExpression()), !dbg !6750
  %11 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !6750
  %12 = bitcast %struct.fwnode_handle* %11 to i8*, !dbg !6750
  store i8* %12, i8** %__mptr2, align 8, !dbg !6750
  br label %do.body3, !dbg !6750

do.body3:                                         ; preds = %cond.true
  br label %do.end4, !dbg !6751

do.end4:                                          ; preds = %do.body3
  %13 = load i8*, i8** %__mptr2, align 8, !dbg !6750
  %add.ptr6 = getelementptr i8, i8* %13, i64 -16, !dbg !6750
  %14 = bitcast i8* %add.ptr6 to %struct.acpi_device*, !dbg !6750
  store %struct.acpi_device* %14, %struct.acpi_device** %tmp5, align 8, !dbg !6751
  %15 = load %struct.acpi_device*, %struct.acpi_device** %tmp5, align 8, !dbg !6750
  br label %cond.end, !dbg !6747

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !6747

cond.end:                                         ; preds = %cond.false, %do.end4
  %cond = phi %struct.acpi_device* [ %15, %do.end4 ], [ null, %cond.false ], !dbg !6747
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp1, align 8, !dbg !6747
  %16 = load %struct.acpi_device*, %struct.acpi_device** %tmp1, align 8, !dbg !6747
  %call7 = call i8* @acpi_device_handle(%struct.acpi_device* %16) #11, !dbg !6753
  %tobool = icmp ne i8* %call7, null, !dbg !6753
  br i1 %tobool, label %if.then, label %if.end, !dbg !6754

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode8, metadata !6755, metadata !DIExpression()), !dbg !6757
  %17 = load %struct.pci_bus*, %struct.pci_bus** %root_bus, align 8, !dbg !6757
  %bridge9 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %17, i32 0, i32 20, !dbg !6757
  %18 = load %struct.device*, %struct.device** %bridge9, align 8, !dbg !6757
  %fwnode10 = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 24, !dbg !6757
  %19 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode10, align 8, !dbg !6757
  store %struct.fwnode_handle* %19, %struct.fwnode_handle** %__to_acpi_device_node_fwnode8, align 8, !dbg !6757
  %20 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode8, align 8, !dbg !6757
  %call12 = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %20) #11, !dbg !6757
  br i1 %call12, label %cond.true13, label %cond.false19, !dbg !6757

cond.true13:                                      ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr14, metadata !6758, metadata !DIExpression()), !dbg !6760
  %21 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode8, align 8, !dbg !6760
  %22 = bitcast %struct.fwnode_handle* %21 to i8*, !dbg !6760
  store i8* %22, i8** %__mptr14, align 8, !dbg !6760
  br label %do.body15, !dbg !6760

do.body15:                                        ; preds = %cond.true13
  br label %do.end16, !dbg !6761

do.end16:                                         ; preds = %do.body15
  %23 = load i8*, i8** %__mptr14, align 8, !dbg !6760
  %add.ptr18 = getelementptr i8, i8* %23, i64 -16, !dbg !6760
  %24 = bitcast i8* %add.ptr18 to %struct.acpi_device*, !dbg !6760
  store %struct.acpi_device* %24, %struct.acpi_device** %tmp17, align 8, !dbg !6761
  %25 = load %struct.acpi_device*, %struct.acpi_device** %tmp17, align 8, !dbg !6760
  br label %cond.end20, !dbg !6757

cond.false19:                                     ; preds = %if.then
  br label %cond.end20, !dbg !6757

cond.end20:                                       ; preds = %cond.false19, %do.end16
  %cond21 = phi %struct.acpi_device* [ %25, %do.end16 ], [ null, %cond.false19 ], !dbg !6757
  store %struct.acpi_device* %cond21, %struct.acpi_device** %tmp11, align 8, !dbg !6757
  %26 = load %struct.acpi_device*, %struct.acpi_device** %tmp11, align 8, !dbg !6757
  %call22 = call i8* @acpi_device_handle(%struct.acpi_device* %26) #11, !dbg !6763
  %call23 = call i32 @acpi_ioapic_add(i8* %call22) #11, !dbg !6764
  br label %if.end, !dbg !6764

if.end:                                           ; preds = %cond.end20, %cond.end
  br label %for.inc, !dbg !6765

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr24, metadata !6766, metadata !DIExpression()), !dbg !6768
  %27 = load %struct.pci_bus*, %struct.pci_bus** %root_bus, align 8, !dbg !6768
  %node25 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %27, i32 0, i32 0, !dbg !6768
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node25, i32 0, i32 0, !dbg !6768
  %28 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6768
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !6768
  store i8* %29, i8** %__mptr24, align 8, !dbg !6768
  br label %do.body26, !dbg !6768

do.body26:                                        ; preds = %for.inc
  br label %do.end27, !dbg !6769

do.end27:                                         ; preds = %do.body26
  %30 = load i8*, i8** %__mptr24, align 8, !dbg !6768
  %add.ptr29 = getelementptr i8, i8* %30, i64 0, !dbg !6768
  %31 = bitcast i8* %add.ptr29 to %struct.pci_bus*, !dbg !6768
  store %struct.pci_bus* %31, %struct.pci_bus** %tmp28, align 8, !dbg !6769
  %32 = load %struct.pci_bus*, %struct.pci_bus** %tmp28, align 8, !dbg !6768
  store %struct.pci_bus* %32, %struct.pci_bus** %root_bus, align 8, !dbg !6739
  br label %for.cond, !dbg !6739, !llvm.loop !6771

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @acpi_device_handle(%struct.acpi_device* %adev) #0 !dbg !6774 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !6778, metadata !DIExpression()), !dbg !6779
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6780
  %tobool = icmp ne %struct.acpi_device* %0, null, !dbg !6780
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6780

cond.true:                                        ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6781
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 1, !dbg !6782
  %2 = load i8*, i8** %handle, align 8, !dbg !6782
  br label %cond.end, !dbg !6780

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6780

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ null, %cond.false ], !dbg !6780
  ret i8* %cond, !dbg !6783
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_acpi_device_node(%struct.fwnode_handle*) #3

; Function Attrs: noredzone
declare dso_local i32 @acpi_ioapic_add(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_assign_unassigned_bridge_resources(%struct.pci_dev* %bridge) #0 !dbg !6784 {
entry:
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %parent = alloca %struct.pci_bus*, align 8
  %add_list = alloca %struct.list_head, align 8
  %tried_times = alloca i32, align 4
  %fail_head = alloca %struct.list_head, align 8
  %fail_res = alloca %struct.pci_dev_resource*, align 8
  %retval = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev_resource*, align 8
  %__mptr29 = alloca i8*, align 8
  %tmp34 = alloca %struct.pci_dev_resource*, align 8
  %__mptr36 = alloca i8*, align 8
  %tmp40 = alloca %struct.pci_dev_resource*, align 8
  %res = alloca %struct.resource*, align 8
  %idx = alloca i32, align 4
  %__mptr68 = alloca i8*, align 8
  %tmp73 = alloca %struct.pci_dev_resource*, align 8
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !6785, metadata !DIExpression()), !dbg !6786
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %parent, metadata !6787, metadata !DIExpression()), !dbg !6788
  %0 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6789
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 2, !dbg !6790
  %1 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !6790
  store %struct.pci_bus* %1, %struct.pci_bus** %parent, align 8, !dbg !6788
  call void @llvm.dbg.declare(metadata %struct.list_head* %add_list, metadata !6791, metadata !DIExpression()), !dbg !6792
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %add_list, i32 0, i32 0, !dbg !6792
  store %struct.list_head* %add_list, %struct.list_head** %next, align 8, !dbg !6792
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %add_list, i32 0, i32 1, !dbg !6792
  store %struct.list_head* %add_list, %struct.list_head** %prev, align 8, !dbg !6792
  call void @llvm.dbg.declare(metadata i32* %tried_times, metadata !6793, metadata !DIExpression()), !dbg !6794
  store i32 0, i32* %tried_times, align 4, !dbg !6794
  call void @llvm.dbg.declare(metadata %struct.list_head* %fail_head, metadata !6795, metadata !DIExpression()), !dbg !6796
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %fail_head, i32 0, i32 0, !dbg !6796
  store %struct.list_head* %fail_head, %struct.list_head** %next1, align 8, !dbg !6796
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %fail_head, i32 0, i32 1, !dbg !6796
  store %struct.list_head* %fail_head, %struct.list_head** %prev2, align 8, !dbg !6796
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %fail_res, metadata !6797, metadata !DIExpression()), !dbg !6798
  call void @llvm.dbg.declare(metadata i32* %retval, metadata !6799, metadata !DIExpression()), !dbg !6800
  br label %again, !dbg !6801

again:                                            ; preds = %for.end75, %entry
  call void @llvm.dbg.label(metadata !6802), !dbg !6803
  %2 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !6804
  call void @__pci_bus_size_bridges(%struct.pci_bus* %2, %struct.list_head* %add_list) #11, !dbg !6805
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6806
  call void @pci_bridge_distribute_available_resources(%struct.pci_dev* %3, %struct.list_head* %add_list) #11, !dbg !6807
  %4 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6808
  call void @__pci_bridge_assign_resources(%struct.pci_dev* %4, %struct.list_head* %add_list, %struct.list_head* %fail_head) #11, !dbg !6809
  br label %do.body, !dbg !6810

do.body:                                          ; preds = %again
  %call = call i32 @list_empty(%struct.list_head* %add_list) #11, !dbg !6811
  %tobool = icmp ne i32 %call, 0, !dbg !6811
  %lnot = xor i1 %tobool, true, !dbg !6811
  %lnot3 = xor i1 %lnot, true, !dbg !6811
  %lnot4 = xor i1 %lnot3, true, !dbg !6811
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !6811
  %conv = sext i32 %lnot.ext to i64, !dbg !6811
  %tobool5 = icmp ne i64 %conv, 0, !dbg !6811
  br i1 %tobool5, label %if.then, label %if.end, !dbg !6814

if.then:                                          ; preds = %do.body
  br label %do.body6, !dbg !6811

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !6815

do.body7:                                         ; preds = %do.body6
  br label %do.end, !dbg !6817

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !6815

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i32 2072, i32 0, i64 12) #14, !dbg !6819, !srcloc !6821
  br label %do.end9, !dbg !6819

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !6815

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 338) #14, !dbg !6822, !srcloc !6825
  unreachable, !dbg !6826

do.end11:                                         ; No predecessors!
  br label %do.end12, !dbg !6815

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !6815

if.end:                                           ; preds = %do.end12, %do.body
  br label %do.end13, !dbg !6814

do.end13:                                         ; preds = %if.end
  %5 = load i32, i32* %tried_times, align 4, !dbg !6827
  %inc = add i32 %5, 1, !dbg !6827
  store i32 %inc, i32* %tried_times, align 4, !dbg !6827
  %call14 = call i32 @list_empty(%struct.list_head* %fail_head) #11, !dbg !6828
  %tobool15 = icmp ne i32 %call14, 0, !dbg !6828
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !6830

if.then16:                                        ; preds = %do.end13
  br label %enable_all, !dbg !6831

if.end17:                                         ; preds = %do.end13
  %6 = load i32, i32* %tried_times, align 4, !dbg !6832
  %cmp = icmp sge i32 %6, 2, !dbg !6834
  br i1 %cmp, label %if.then19, label %if.end20, !dbg !6835

if.then19:                                        ; preds = %if.end17
  call void @free_list(%struct.list_head* %fail_head) #11, !dbg !6836
  br label %enable_all, !dbg !6838

if.end20:                                         ; preds = %if.end17
  %7 = load i32, i32* %tried_times, align 4, !dbg !6839
  %add = add i32 %7, 1, !dbg !6840
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i32 %add) #10, !dbg !6841
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6842, metadata !DIExpression()), !dbg !6845
  %next22 = getelementptr inbounds %struct.list_head, %struct.list_head* %fail_head, i32 0, i32 0, !dbg !6845
  %8 = load %struct.list_head*, %struct.list_head** %next22, align 8, !dbg !6845
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !6845
  store i8* %9, i8** %__mptr, align 8, !dbg !6845
  br label %do.body23, !dbg !6845

do.body23:                                        ; preds = %if.end20
  br label %do.end24, !dbg !6846

do.end24:                                         ; preds = %do.body23
  %10 = load i8*, i8** %__mptr, align 8, !dbg !6845
  %add.ptr = getelementptr i8, i8* %10, i64 0, !dbg !6845
  %11 = bitcast i8* %add.ptr to %struct.pci_dev_resource*, !dbg !6845
  store %struct.pci_dev_resource* %11, %struct.pci_dev_resource** %tmp, align 8, !dbg !6846
  %12 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !6845
  store %struct.pci_dev_resource* %12, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6848
  br label %for.cond, !dbg !6848

for.cond:                                         ; preds = %do.end33, %do.end24
  %13 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6849
  %list = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %13, i32 0, i32 0, !dbg !6849
  %cmp25 = icmp eq %struct.list_head* %list, %fail_head, !dbg !6849
  %lnot27 = xor i1 %cmp25, true, !dbg !6849
  br i1 %lnot27, label %for.body, label %for.end, !dbg !6848

for.body:                                         ; preds = %for.cond
  %14 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6851
  %dev = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %14, i32 0, i32 2, !dbg !6852
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6852
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 1, !dbg !6853
  %16 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6853
  %17 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6854
  %flags = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %17, i32 0, i32 7, !dbg !6855
  %18 = load i64, i64* %flags, align 8, !dbg !6855
  %and = and i64 %18, 1057536, !dbg !6856
  call void @pci_bus_release_bridge_resources(%struct.pci_bus* %16, i64 %and, i32 1) #11, !dbg !6857
  br label %for.inc, !dbg !6857

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr29, metadata !6858, metadata !DIExpression()), !dbg !6860
  %19 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6860
  %list30 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %19, i32 0, i32 0, !dbg !6860
  %next31 = getelementptr inbounds %struct.list_head, %struct.list_head* %list30, i32 0, i32 0, !dbg !6860
  %20 = load %struct.list_head*, %struct.list_head** %next31, align 8, !dbg !6860
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !6860
  store i8* %21, i8** %__mptr29, align 8, !dbg !6860
  br label %do.body32, !dbg !6860

do.body32:                                        ; preds = %for.inc
  br label %do.end33, !dbg !6861

do.end33:                                         ; preds = %do.body32
  %22 = load i8*, i8** %__mptr29, align 8, !dbg !6860
  %add.ptr35 = getelementptr i8, i8* %22, i64 0, !dbg !6860
  %23 = bitcast i8* %add.ptr35 to %struct.pci_dev_resource*, !dbg !6860
  store %struct.pci_dev_resource* %23, %struct.pci_dev_resource** %tmp34, align 8, !dbg !6861
  %24 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp34, align 8, !dbg !6860
  store %struct.pci_dev_resource* %24, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6849
  br label %for.cond, !dbg !6849, !llvm.loop !6863

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr36, metadata !6865, metadata !DIExpression()), !dbg !6868
  %next37 = getelementptr inbounds %struct.list_head, %struct.list_head* %fail_head, i32 0, i32 0, !dbg !6868
  %25 = load %struct.list_head*, %struct.list_head** %next37, align 8, !dbg !6868
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !6868
  store i8* %26, i8** %__mptr36, align 8, !dbg !6868
  br label %do.body38, !dbg !6868

do.body38:                                        ; preds = %for.end
  br label %do.end39, !dbg !6869

do.end39:                                         ; preds = %do.body38
  %27 = load i8*, i8** %__mptr36, align 8, !dbg !6868
  %add.ptr41 = getelementptr i8, i8* %27, i64 0, !dbg !6868
  %28 = bitcast i8* %add.ptr41 to %struct.pci_dev_resource*, !dbg !6868
  store %struct.pci_dev_resource* %28, %struct.pci_dev_resource** %tmp40, align 8, !dbg !6869
  %29 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp40, align 8, !dbg !6868
  store %struct.pci_dev_resource* %29, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6871
  br label %for.cond42, !dbg !6871

for.cond42:                                       ; preds = %do.end72, %do.end39
  %30 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6872
  %list43 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %30, i32 0, i32 0, !dbg !6872
  %cmp44 = icmp eq %struct.list_head* %list43, %fail_head, !dbg !6872
  %lnot46 = xor i1 %cmp44, true, !dbg !6872
  br i1 %lnot46, label %for.body48, label %for.end75, !dbg !6871

for.body48:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !6874, metadata !DIExpression()), !dbg !6876
  %31 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6877
  %res49 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %31, i32 0, i32 1, !dbg !6878
  %32 = load %struct.resource*, %struct.resource** %res49, align 8, !dbg !6878
  store %struct.resource* %32, %struct.resource** %res, align 8, !dbg !6876
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6879, metadata !DIExpression()), !dbg !6880
  %33 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6881
  %start = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %33, i32 0, i32 3, !dbg !6882
  %34 = load i64, i64* %start, align 8, !dbg !6882
  %35 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6883
  %start50 = getelementptr inbounds %struct.resource, %struct.resource* %35, i32 0, i32 0, !dbg !6884
  store i64 %34, i64* %start50, align 8, !dbg !6885
  %36 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6886
  %end = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %36, i32 0, i32 4, !dbg !6887
  %37 = load i64, i64* %end, align 8, !dbg !6887
  %38 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6888
  %end51 = getelementptr inbounds %struct.resource, %struct.resource* %38, i32 0, i32 1, !dbg !6889
  store i64 %37, i64* %end51, align 8, !dbg !6890
  %39 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6891
  %flags52 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %39, i32 0, i32 7, !dbg !6892
  %40 = load i64, i64* %flags52, align 8, !dbg !6892
  %41 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6893
  %flags53 = getelementptr inbounds %struct.resource, %struct.resource* %41, i32 0, i32 3, !dbg !6894
  store i64 %40, i64* %flags53, align 8, !dbg !6895
  %42 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6896
  %dev54 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %42, i32 0, i32 2, !dbg !6898
  %43 = load %struct.pci_dev*, %struct.pci_dev** %dev54, align 8, !dbg !6898
  %call55 = call zeroext i1 @pci_is_bridge(%struct.pci_dev* %43) #11, !dbg !6899
  br i1 %call55, label %if.then56, label %if.end66, !dbg !6900

if.then56:                                        ; preds = %for.body48
  %44 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6901
  %45 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6903
  %dev57 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %45, i32 0, i32 2, !dbg !6904
  %46 = load %struct.pci_dev*, %struct.pci_dev** %dev57, align 8, !dbg !6904
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 44, !dbg !6905
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !6903
  %sub.ptr.lhs.cast = ptrtoint %struct.resource* %44 to i64, !dbg !6906
  %sub.ptr.rhs.cast = ptrtoint %struct.resource* %arrayidx to i64, !dbg !6906
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6906
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !6906
  %conv58 = trunc i64 %sub.ptr.div to i32, !dbg !6901
  store i32 %conv58, i32* %idx, align 4, !dbg !6907
  %47 = load i32, i32* %idx, align 4, !dbg !6908
  %cmp59 = icmp sge i32 %47, 13, !dbg !6910
  br i1 %cmp59, label %land.lhs.true, label %if.end65, !dbg !6911

land.lhs.true:                                    ; preds = %if.then56
  %48 = load i32, i32* %idx, align 4, !dbg !6912
  %cmp61 = icmp sle i32 %48, 16, !dbg !6913
  br i1 %cmp61, label %if.then63, label %if.end65, !dbg !6914

if.then63:                                        ; preds = %land.lhs.true
  %49 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6915
  %flags64 = getelementptr inbounds %struct.resource, %struct.resource* %49, i32 0, i32 3, !dbg !6916
  store i64 0, i64* %flags64, align 8, !dbg !6917
  br label %if.end65, !dbg !6915

if.end65:                                         ; preds = %if.then63, %land.lhs.true, %if.then56
  br label %if.end66, !dbg !6918

if.end66:                                         ; preds = %if.end65, %for.body48
  br label %for.inc67, !dbg !6919

for.inc67:                                        ; preds = %if.end66
  call void @llvm.dbg.declare(metadata i8** %__mptr68, metadata !6920, metadata !DIExpression()), !dbg !6922
  %50 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6922
  %list69 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %50, i32 0, i32 0, !dbg !6922
  %next70 = getelementptr inbounds %struct.list_head, %struct.list_head* %list69, i32 0, i32 0, !dbg !6922
  %51 = load %struct.list_head*, %struct.list_head** %next70, align 8, !dbg !6922
  %52 = bitcast %struct.list_head* %51 to i8*, !dbg !6922
  store i8* %52, i8** %__mptr68, align 8, !dbg !6922
  br label %do.body71, !dbg !6922

do.body71:                                        ; preds = %for.inc67
  br label %do.end72, !dbg !6923

do.end72:                                         ; preds = %do.body71
  %53 = load i8*, i8** %__mptr68, align 8, !dbg !6922
  %add.ptr74 = getelementptr i8, i8* %53, i64 0, !dbg !6922
  %54 = bitcast i8* %add.ptr74 to %struct.pci_dev_resource*, !dbg !6922
  store %struct.pci_dev_resource* %54, %struct.pci_dev_resource** %tmp73, align 8, !dbg !6923
  %55 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp73, align 8, !dbg !6922
  store %struct.pci_dev_resource* %55, %struct.pci_dev_resource** %fail_res, align 8, !dbg !6872
  br label %for.cond42, !dbg !6872, !llvm.loop !6925

for.end75:                                        ; preds = %for.cond42
  call void @free_list(%struct.list_head* %fail_head) #11, !dbg !6927
  br label %again, !dbg !6928

enable_all:                                       ; preds = %if.then19, %if.then16
  call void @llvm.dbg.label(metadata !6929), !dbg !6930
  %56 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6931
  %call76 = call i32 @pci_reenable_device(%struct.pci_dev* %56) #11, !dbg !6932
  store i32 %call76, i32* %retval, align 4, !dbg !6933
  %57 = load i32, i32* %retval, align 4, !dbg !6934
  %tobool77 = icmp ne i32 %57, 0, !dbg !6934
  br i1 %tobool77, label %if.then78, label %if.end80, !dbg !6936

if.then78:                                        ; preds = %enable_all
  %58 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6937
  %dev79 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %58, i32 0, i32 41, !dbg !6937
  %59 = load i32, i32* %retval, align 4, !dbg !6937
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev79, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0), i32 %59) #10, !dbg !6937
  br label %if.end80, !dbg !6937

if.end80:                                         ; preds = %if.then78, %enable_all
  %60 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6938
  call void @pci_set_master(%struct.pci_dev* %60) #11, !dbg !6939
  ret void, !dbg !6940
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bridge_distribute_available_resources(%struct.pci_dev* %bridge, %struct.list_head* %add_list) #0 !dbg !6941 {
entry:
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %add_list.addr = alloca %struct.list_head*, align 8
  %available_io = alloca %struct.resource, align 8
  %available_mmio = alloca %struct.resource, align 8
  %available_mmio_pref = alloca %struct.resource, align 8
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !6944, metadata !DIExpression()), !dbg !6945
  store %struct.list_head* %add_list, %struct.list_head** %add_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %add_list.addr, metadata !6946, metadata !DIExpression()), !dbg !6947
  call void @llvm.dbg.declare(metadata %struct.resource* %available_io, metadata !6948, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.declare(metadata %struct.resource* %available_mmio, metadata !6950, metadata !DIExpression()), !dbg !6951
  call void @llvm.dbg.declare(metadata %struct.resource* %available_mmio_pref, metadata !6952, metadata !DIExpression()), !dbg !6953
  %0 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6954
  %is_hotplug_bridge = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !6956
  %1 = bitcast [5 x i8]* %is_hotplug_bridge to i40*, !dbg !6956
  %bf.load = load i40, i40* %1, align 1, !dbg !6956
  %bf.lshr = lshr i40 %bf.load, 24, !dbg !6956
  %bf.clear = and i40 %bf.lshr, 1, !dbg !6956
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !6956
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6954
  br i1 %tobool, label %if.end, label %if.then, !dbg !6957

if.then:                                          ; preds = %entry
  br label %return, !dbg !6958

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6959
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 44, !dbg !6960
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 13, !dbg !6959
  %3 = bitcast %struct.resource* %available_io to i8*, !dbg !6959
  %4 = bitcast %struct.resource* %arrayidx to i8*, !dbg !6959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 64, i1 false), !dbg !6959
  %5 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6961
  %resource1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 44, !dbg !6962
  %arrayidx2 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource1, i64 0, i64 14, !dbg !6961
  %6 = bitcast %struct.resource* %available_mmio to i8*, !dbg !6961
  %7 = bitcast %struct.resource* %arrayidx2 to i8*, !dbg !6961
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 64, i1 false), !dbg !6961
  %8 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6963
  %resource3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 44, !dbg !6964
  %arrayidx4 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource3, i64 0, i64 15, !dbg !6963
  %9 = bitcast %struct.resource* %available_mmio_pref to i8*, !dbg !6963
  %10 = bitcast %struct.resource* %arrayidx4 to i8*, !dbg !6963
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 64, i1 false), !dbg !6963
  %11 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6965
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 2, !dbg !6966
  %12 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !6966
  %13 = load %struct.list_head*, %struct.list_head** %add_list.addr, align 8, !dbg !6967
  call void @pci_bus_distribute_available_resources(%struct.pci_bus* %12, %struct.list_head* %13, %struct.resource* byval(%struct.resource) align 8 %available_io, %struct.resource* byval(%struct.resource) align 8 %available_mmio, %struct.resource* byval(%struct.resource) align 8 %available_mmio_pref) #11, !dbg !6968
  br label %return, !dbg !6969

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__pci_bridge_assign_resources(%struct.pci_dev* %bridge, %struct.list_head* %add_head, %struct.list_head* %fail_head) #0 !dbg !6970 {
entry:
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %add_head.addr = alloca %struct.list_head*, align 8
  %fail_head.addr = alloca %struct.list_head*, align 8
  %b = alloca %struct.pci_bus*, align 8
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !6973, metadata !DIExpression()), !dbg !6974
  store %struct.list_head* %add_head, %struct.list_head** %add_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %add_head.addr, metadata !6975, metadata !DIExpression()), !dbg !6976
  store %struct.list_head* %fail_head, %struct.list_head** %fail_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %fail_head.addr, metadata !6977, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b, metadata !6979, metadata !DIExpression()), !dbg !6980
  %0 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6981
  %1 = load %struct.list_head*, %struct.list_head** %add_head.addr, align 8, !dbg !6982
  %2 = load %struct.list_head*, %struct.list_head** %fail_head.addr, align 8, !dbg !6983
  call void @pdev_assign_resources_sorted(%struct.pci_dev* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !6984
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6985
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 2, !dbg !6986
  %4 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !6986
  store %struct.pci_bus* %4, %struct.pci_bus** %b, align 8, !dbg !6987
  %5 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6988
  %tobool = icmp ne %struct.pci_bus* %5, null, !dbg !6988
  br i1 %tobool, label %if.end, label %if.then, !dbg !6990

if.then:                                          ; preds = %entry
  br label %sw.epilog, !dbg !6991

if.end:                                           ; preds = %entry
  %6 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !6992
  %7 = load %struct.list_head*, %struct.list_head** %add_head.addr, align 8, !dbg !6993
  %8 = load %struct.list_head*, %struct.list_head** %fail_head.addr, align 8, !dbg !6994
  call void @__pci_bus_assign_resources(%struct.pci_bus* %6, %struct.list_head* %7, %struct.list_head* %8) #11, !dbg !6995
  %9 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !6996
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 11, !dbg !6997
  %10 = load i32, i32* %class, align 4, !dbg !6997
  %shr = lshr i32 %10, 8, !dbg !6998
  switch i32 %shr, label %sw.default [
    i32 1540, label %sw.bb
    i32 1543, label %sw.bb1
  ], !dbg !6999

sw.bb:                                            ; preds = %if.end
  %11 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !7000
  call void @pci_setup_bridge(%struct.pci_bus* %11) #11, !dbg !7002
  br label %sw.epilog, !dbg !7003

sw.bb1:                                           ; preds = %if.end
  %12 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !7004
  call void @pci_setup_cardbus(%struct.pci_bus* %12) #11, !dbg !7005
  br label %sw.epilog, !dbg !7006

sw.default:                                       ; preds = %if.end
  %13 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7007
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !7007
  %14 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !7007
  %call = call i32 @pci_domain_nr(%struct.pci_bus* %14) #11, !dbg !7007
  %15 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !7007
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %15, i32 0, i32 13, !dbg !7007
  %16 = load i8, i8* %number, align 8, !dbg !7007
  %conv = zext i8 %16 to i32, !dbg !7007
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i32 %call, i32 %conv) #10, !dbg !7007
  br label %sw.epilog, !dbg !7008

sw.epilog:                                        ; preds = %if.then, %sw.default, %sw.bb1, %sw.bb
  ret void, !dbg !7009
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_reenable_device(%struct.pci_dev*) #3

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_reassign_bridge_resources(%struct.pci_dev* %bridge, i64 %type) #0 !dbg !7010 {
entry:
  %retval = alloca i32, align 4
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %type.addr = alloca i64, align 8
  %dev_res = alloca %struct.pci_dev_resource*, align 8
  %next = alloca %struct.pci_dev*, align 8
  %saved = alloca %struct.list_head, align 8
  %added = alloca %struct.list_head, align 8
  %failed = alloca %struct.list_head, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %res = alloca %struct.resource*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev_resource*, align 8
  %__mptr70 = alloca i8*, align 8
  %tmp76 = alloca %struct.pci_dev_resource*, align 8
  %__mptr79 = alloca i8*, align 8
  %tmp84 = alloca %struct.pci_dev_resource*, align 8
  %res93 = alloca %struct.resource*, align 8
  %__mptr102 = alloca i8*, align 8
  %tmp108 = alloca %struct.pci_dev_resource*, align 8
  %__mptr111 = alloca i8*, align 8
  %tmp116 = alloca %struct.pci_dev_resource*, align 8
  %res125 = alloca %struct.resource*, align 8
  %__mptr139 = alloca i8*, align 8
  %tmp145 = alloca %struct.pci_dev_resource*, align 8
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !7013, metadata !DIExpression()), !dbg !7014
  store i64 %type, i64* %type.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type.addr, metadata !7015, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %dev_res, metadata !7017, metadata !DIExpression()), !dbg !7018
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %next, metadata !7019, metadata !DIExpression()), !dbg !7020
  call void @llvm.dbg.declare(metadata %struct.list_head* %saved, metadata !7021, metadata !DIExpression()), !dbg !7022
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %saved, i32 0, i32 0, !dbg !7022
  store %struct.list_head* %saved, %struct.list_head** %next1, align 8, !dbg !7022
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %saved, i32 0, i32 1, !dbg !7022
  store %struct.list_head* %saved, %struct.list_head** %prev, align 8, !dbg !7022
  call void @llvm.dbg.declare(metadata %struct.list_head* %added, metadata !7023, metadata !DIExpression()), !dbg !7024
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %added, i32 0, i32 0, !dbg !7024
  store %struct.list_head* %added, %struct.list_head** %next2, align 8, !dbg !7024
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %added, i32 0, i32 1, !dbg !7024
  store %struct.list_head* %added, %struct.list_head** %prev3, align 8, !dbg !7024
  call void @llvm.dbg.declare(metadata %struct.list_head* %failed, metadata !7025, metadata !DIExpression()), !dbg !7026
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %failed, i32 0, i32 0, !dbg !7026
  store %struct.list_head* %failed, %struct.list_head** %next4, align 8, !dbg !7026
  %prev5 = getelementptr inbounds %struct.list_head, %struct.list_head* %failed, i32 0, i32 1, !dbg !7026
  store %struct.list_head* %failed, %struct.list_head** %prev5, align 8, !dbg !7026
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7027, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7029, metadata !DIExpression()), !dbg !7030
  call void @down_read(%struct.rw_semaphore* @pci_bus_sem) #11, !dbg !7031
  %0 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7032
  store %struct.pci_dev* %0, %struct.pci_dev** %next, align 8, !dbg !7033
  br label %do.body, !dbg !7034

do.body:                                          ; preds = %do.cond, %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %next, align 8, !dbg !7035
  store %struct.pci_dev* %1, %struct.pci_dev** %bridge.addr, align 8, !dbg !7037
  store i32 13, i32* %i, align 4, !dbg !7038
  br label %for.cond, !dbg !7040

for.cond:                                         ; preds = %for.inc, %do.body
  %2 = load i32, i32* %i, align 4, !dbg !7041
  %cmp = icmp ult i32 %2, 16, !dbg !7043
  br i1 %cmp, label %for.body, label %for.end, !dbg !7044

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !7045, metadata !DIExpression()), !dbg !7047
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7048
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 44, !dbg !7049
  %4 = load i32, i32* %i, align 4, !dbg !7050
  %idxprom = zext i32 %4 to i64, !dbg !7048
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !7048
  store %struct.resource* %arrayidx, %struct.resource** %res, align 8, !dbg !7047
  %5 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !7051
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %5, i32 0, i32 3, !dbg !7053
  %6 = load i64, i64* %flags, align 8, !dbg !7053
  %7 = load i64, i64* %type.addr, align 8, !dbg !7054
  %xor = xor i64 %6, %7, !dbg !7055
  %and = and i64 %xor, 1057536, !dbg !7056
  %tobool = icmp ne i64 %and, 0, !dbg !7056
  br i1 %tobool, label %if.then, label %if.end, !dbg !7057

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !7058

if.end:                                           ; preds = %for.body
  %8 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !7059
  %child = getelementptr inbounds %struct.resource, %struct.resource* %8, i32 0, i32 7, !dbg !7061
  %9 = load %struct.resource*, %struct.resource** %child, align 8, !dbg !7061
  %tobool6 = icmp ne %struct.resource* %9, null, !dbg !7059
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7062

if.then7:                                         ; preds = %if.end
  br label %for.inc, !dbg !7063

if.end8:                                          ; preds = %if.end
  %10 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7064
  %11 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !7065
  %call = call i32 @add_to_list(%struct.list_head* %saved, %struct.pci_dev* %10, %struct.resource* %11, i64 0, i64 0) #11, !dbg !7066
  store i32 %call, i32* %ret, align 4, !dbg !7067
  %12 = load i32, i32* %ret, align 4, !dbg !7068
  %tobool9 = icmp ne i32 %12, 0, !dbg !7068
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !7070

if.then10:                                        ; preds = %if.end8
  br label %cleanup, !dbg !7071

if.end11:                                         ; preds = %if.end8
  %13 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7072
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !7072
  %14 = load i32, i32* %i, align 4, !dbg !7072
  %15 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !7072
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 %14, %struct.resource* %15) #10, !dbg !7072
  %16 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !7073
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %16, i32 0, i32 5, !dbg !7075
  %17 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !7075
  %tobool12 = icmp ne %struct.resource* %17, null, !dbg !7073
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !7076

if.then13:                                        ; preds = %if.end11
  %18 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !7077
  %call14 = call i32 @release_resource(%struct.resource* %18) #11, !dbg !7078
  br label %if.end15, !dbg !7078

if.end15:                                         ; preds = %if.then13, %if.end11
  %19 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !7079
  %start = getelementptr inbounds %struct.resource, %struct.resource* %19, i32 0, i32 0, !dbg !7080
  store i64 0, i64* %start, align 8, !dbg !7081
  %20 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !7082
  %end = getelementptr inbounds %struct.resource, %struct.resource* %20, i32 0, i32 1, !dbg !7083
  store i64 0, i64* %end, align 8, !dbg !7084
  br label %for.end, !dbg !7085

for.inc:                                          ; preds = %if.then7, %if.then
  %21 = load i32, i32* %i, align 4, !dbg !7086
  %inc = add i32 %21, 1, !dbg !7086
  store i32 %inc, i32* %i, align 4, !dbg !7086
  br label %for.cond, !dbg !7087, !llvm.loop !7088

for.end:                                          ; preds = %if.end15, %for.cond
  %22 = load i32, i32* %i, align 4, !dbg !7090
  %cmp16 = icmp eq i32 %22, 16, !dbg !7092
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !7093

if.then17:                                        ; preds = %for.end
  br label %do.end, !dbg !7094

if.end18:                                         ; preds = %for.end
  %23 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7095
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 1, !dbg !7096
  %24 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !7096
  %tobool19 = icmp ne %struct.pci_bus* %24, null, !dbg !7095
  br i1 %tobool19, label %cond.true, label %cond.false, !dbg !7095

cond.true:                                        ; preds = %if.end18
  %25 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7097
  %bus20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 1, !dbg !7098
  %26 = load %struct.pci_bus*, %struct.pci_bus** %bus20, align 8, !dbg !7098
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %26, i32 0, i32 4, !dbg !7099
  %27 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !7099
  br label %cond.end, !dbg !7095

cond.false:                                       ; preds = %if.end18
  br label %cond.end, !dbg !7095

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.pci_dev* [ %27, %cond.true ], [ null, %cond.false ], !dbg !7095
  store %struct.pci_dev* %cond, %struct.pci_dev** %next, align 8, !dbg !7100
  br label %do.cond, !dbg !7101

do.cond:                                          ; preds = %cond.end
  %28 = load %struct.pci_dev*, %struct.pci_dev** %next, align 8, !dbg !7102
  %tobool21 = icmp ne %struct.pci_dev* %28, null, !dbg !7101
  br i1 %tobool21, label %do.body, label %do.end, !dbg !7101, !llvm.loop !7103

do.end:                                           ; preds = %do.cond, %if.then17
  %call22 = call i32 @list_empty(%struct.list_head* %saved) #11, !dbg !7105
  %tobool23 = icmp ne i32 %call22, 0, !dbg !7105
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !7107

if.then24:                                        ; preds = %do.end
  call void @up_read(%struct.rw_semaphore* @pci_bus_sem) #11, !dbg !7108
  store i32 -2, i32* %retval, align 4, !dbg !7110
  br label %return, !dbg !7110

if.end25:                                         ; preds = %do.end
  %29 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7111
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 2, !dbg !7112
  %30 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !7112
  call void @__pci_bus_size_bridges(%struct.pci_bus* %30, %struct.list_head* %added) #11, !dbg !7113
  %31 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7114
  call void @__pci_bridge_assign_resources(%struct.pci_dev* %31, %struct.list_head* %added, %struct.list_head* %failed) #11, !dbg !7115
  br label %do.body26, !dbg !7116

do.body26:                                        ; preds = %if.end25
  %call27 = call i32 @list_empty(%struct.list_head* %added) #11, !dbg !7117
  %tobool28 = icmp ne i32 %call27, 0, !dbg !7117
  %lnot = xor i1 %tobool28, true, !dbg !7117
  %lnot29 = xor i1 %lnot, true, !dbg !7117
  %lnot30 = xor i1 %lnot29, true, !dbg !7117
  %lnot.ext = zext i1 %lnot30 to i32, !dbg !7117
  %conv = sext i32 %lnot.ext to i64, !dbg !7117
  %tobool31 = icmp ne i64 %conv, 0, !dbg !7117
  br i1 %tobool31, label %if.then32, label %if.end45, !dbg !7120

if.then32:                                        ; preds = %do.body26
  br label %do.body33, !dbg !7117

do.body33:                                        ; preds = %if.then32
  br label %do.body34, !dbg !7121

do.body34:                                        ; preds = %do.body33
  br label %do.end36, !dbg !7123

do.end36:                                         ; preds = %do.body34
  br label %do.body37, !dbg !7121

do.body37:                                        ; preds = %do.end36
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i32 2177, i32 0, i64 12) #14, !dbg !7125, !srcloc !7127
  br label %do.end39, !dbg !7125

do.end39:                                         ; preds = %do.body37
  br label %do.body40, !dbg !7121

do.body40:                                        ; preds = %do.end39
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 343) #14, !dbg !7128, !srcloc !7131
  unreachable, !dbg !7132

do.end42:                                         ; No predecessors!
  br label %do.end44, !dbg !7121

do.end44:                                         ; preds = %do.end42
  br label %if.end45, !dbg !7121

if.end45:                                         ; preds = %do.end44, %do.body26
  br label %do.end47, !dbg !7120

do.end47:                                         ; preds = %if.end45
  %call48 = call i32 @list_empty(%struct.list_head* %failed) #11, !dbg !7133
  %tobool49 = icmp ne i32 %call48, 0, !dbg !7133
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !7135

if.then50:                                        ; preds = %do.end47
  store i32 -28, i32* %ret, align 4, !dbg !7136
  br label %cleanup, !dbg !7138

if.end51:                                         ; preds = %do.end47
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7139, metadata !DIExpression()), !dbg !7142
  %next52 = getelementptr inbounds %struct.list_head, %struct.list_head* %saved, i32 0, i32 0, !dbg !7142
  %32 = load %struct.list_head*, %struct.list_head** %next52, align 8, !dbg !7142
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !7142
  store i8* %33, i8** %__mptr, align 8, !dbg !7142
  br label %do.body53, !dbg !7142

do.body53:                                        ; preds = %if.end51
  br label %do.end55, !dbg !7143

do.end55:                                         ; preds = %do.body53
  %34 = load i8*, i8** %__mptr, align 8, !dbg !7142
  %add.ptr = getelementptr i8, i8* %34, i64 0, !dbg !7142
  %35 = bitcast i8* %add.ptr to %struct.pci_dev_resource*, !dbg !7142
  store %struct.pci_dev_resource* %35, %struct.pci_dev_resource** %tmp, align 8, !dbg !7143
  %36 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !7142
  store %struct.pci_dev_resource* %36, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7145
  br label %for.cond56, !dbg !7145

for.cond56:                                       ; preds = %do.end75, %do.end55
  %37 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7146
  %list = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %37, i32 0, i32 0, !dbg !7146
  %cmp57 = icmp eq %struct.list_head* %list, %saved, !dbg !7146
  %lnot59 = xor i1 %cmp57, true, !dbg !7146
  br i1 %lnot59, label %for.body61, label %for.end78, !dbg !7145

for.body61:                                       ; preds = %for.cond56
  %38 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7148
  %39 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7151
  %dev62 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %39, i32 0, i32 2, !dbg !7152
  %40 = load %struct.pci_dev*, %struct.pci_dev** %dev62, align 8, !dbg !7152
  %cmp63 = icmp eq %struct.pci_dev* %38, %40, !dbg !7153
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !7154

if.then65:                                        ; preds = %for.body61
  br label %for.inc69, !dbg !7155

if.end66:                                         ; preds = %for.body61
  %41 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7156
  %dev67 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %41, i32 0, i32 2, !dbg !7157
  %42 = load %struct.pci_dev*, %struct.pci_dev** %dev67, align 8, !dbg !7157
  store %struct.pci_dev* %42, %struct.pci_dev** %bridge.addr, align 8, !dbg !7158
  %43 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7159
  %subordinate68 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 2, !dbg !7160
  %44 = load %struct.pci_bus*, %struct.pci_bus** %subordinate68, align 8, !dbg !7160
  call void @pci_setup_bridge(%struct.pci_bus* %44) #11, !dbg !7161
  br label %for.inc69, !dbg !7162

for.inc69:                                        ; preds = %if.end66, %if.then65
  call void @llvm.dbg.declare(metadata i8** %__mptr70, metadata !7163, metadata !DIExpression()), !dbg !7165
  %45 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7165
  %list71 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %45, i32 0, i32 0, !dbg !7165
  %next72 = getelementptr inbounds %struct.list_head, %struct.list_head* %list71, i32 0, i32 0, !dbg !7165
  %46 = load %struct.list_head*, %struct.list_head** %next72, align 8, !dbg !7165
  %47 = bitcast %struct.list_head* %46 to i8*, !dbg !7165
  store i8* %47, i8** %__mptr70, align 8, !dbg !7165
  br label %do.body73, !dbg !7165

do.body73:                                        ; preds = %for.inc69
  br label %do.end75, !dbg !7166

do.end75:                                         ; preds = %do.body73
  %48 = load i8*, i8** %__mptr70, align 8, !dbg !7165
  %add.ptr77 = getelementptr i8, i8* %48, i64 0, !dbg !7165
  %49 = bitcast i8* %add.ptr77 to %struct.pci_dev_resource*, !dbg !7165
  store %struct.pci_dev_resource* %49, %struct.pci_dev_resource** %tmp76, align 8, !dbg !7166
  %50 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp76, align 8, !dbg !7165
  store %struct.pci_dev_resource* %50, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7146
  br label %for.cond56, !dbg !7146, !llvm.loop !7168

for.end78:                                        ; preds = %for.cond56
  call void @free_list(%struct.list_head* %saved) #11, !dbg !7170
  call void @up_read(%struct.rw_semaphore* @pci_bus_sem) #11, !dbg !7171
  store i32 0, i32* %retval, align 4, !dbg !7172
  br label %return, !dbg !7172

cleanup:                                          ; preds = %if.then50, %if.then10
  call void @llvm.dbg.label(metadata !7173), !dbg !7174
  call void @llvm.dbg.declare(metadata i8** %__mptr79, metadata !7175, metadata !DIExpression()), !dbg !7178
  %next80 = getelementptr inbounds %struct.list_head, %struct.list_head* %failed, i32 0, i32 0, !dbg !7178
  %51 = load %struct.list_head*, %struct.list_head** %next80, align 8, !dbg !7178
  %52 = bitcast %struct.list_head* %51 to i8*, !dbg !7178
  store i8* %52, i8** %__mptr79, align 8, !dbg !7178
  br label %do.body81, !dbg !7178

do.body81:                                        ; preds = %cleanup
  br label %do.end83, !dbg !7179

do.end83:                                         ; preds = %do.body81
  %53 = load i8*, i8** %__mptr79, align 8, !dbg !7178
  %add.ptr85 = getelementptr i8, i8* %53, i64 0, !dbg !7178
  %54 = bitcast i8* %add.ptr85 to %struct.pci_dev_resource*, !dbg !7178
  store %struct.pci_dev_resource* %54, %struct.pci_dev_resource** %tmp84, align 8, !dbg !7179
  %55 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp84, align 8, !dbg !7178
  store %struct.pci_dev_resource* %55, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7181
  br label %for.cond86, !dbg !7181

for.cond86:                                       ; preds = %do.end107, %do.end83
  %56 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7182
  %list87 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %56, i32 0, i32 0, !dbg !7182
  %cmp88 = icmp eq %struct.list_head* %list87, %failed, !dbg !7182
  %lnot90 = xor i1 %cmp88, true, !dbg !7182
  br i1 %lnot90, label %for.body92, label %for.end110, !dbg !7181

for.body92:                                       ; preds = %for.cond86
  call void @llvm.dbg.declare(metadata %struct.resource** %res93, metadata !7184, metadata !DIExpression()), !dbg !7186
  %57 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7187
  %res94 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %57, i32 0, i32 1, !dbg !7188
  %58 = load %struct.resource*, %struct.resource** %res94, align 8, !dbg !7188
  store %struct.resource* %58, %struct.resource** %res93, align 8, !dbg !7186
  %59 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7189
  %start95 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %59, i32 0, i32 3, !dbg !7190
  %60 = load i64, i64* %start95, align 8, !dbg !7190
  %61 = load %struct.resource*, %struct.resource** %res93, align 8, !dbg !7191
  %start96 = getelementptr inbounds %struct.resource, %struct.resource* %61, i32 0, i32 0, !dbg !7192
  store i64 %60, i64* %start96, align 8, !dbg !7193
  %62 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7194
  %end97 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %62, i32 0, i32 4, !dbg !7195
  %63 = load i64, i64* %end97, align 8, !dbg !7195
  %64 = load %struct.resource*, %struct.resource** %res93, align 8, !dbg !7196
  %end98 = getelementptr inbounds %struct.resource, %struct.resource* %64, i32 0, i32 1, !dbg !7197
  store i64 %63, i64* %end98, align 8, !dbg !7198
  %65 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7199
  %flags99 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %65, i32 0, i32 7, !dbg !7200
  %66 = load i64, i64* %flags99, align 8, !dbg !7200
  %67 = load %struct.resource*, %struct.resource** %res93, align 8, !dbg !7201
  %flags100 = getelementptr inbounds %struct.resource, %struct.resource* %67, i32 0, i32 3, !dbg !7202
  store i64 %66, i64* %flags100, align 8, !dbg !7203
  br label %for.inc101, !dbg !7204

for.inc101:                                       ; preds = %for.body92
  call void @llvm.dbg.declare(metadata i8** %__mptr102, metadata !7205, metadata !DIExpression()), !dbg !7207
  %68 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7207
  %list103 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %68, i32 0, i32 0, !dbg !7207
  %next104 = getelementptr inbounds %struct.list_head, %struct.list_head* %list103, i32 0, i32 0, !dbg !7207
  %69 = load %struct.list_head*, %struct.list_head** %next104, align 8, !dbg !7207
  %70 = bitcast %struct.list_head* %69 to i8*, !dbg !7207
  store i8* %70, i8** %__mptr102, align 8, !dbg !7207
  br label %do.body105, !dbg !7207

do.body105:                                       ; preds = %for.inc101
  br label %do.end107, !dbg !7208

do.end107:                                        ; preds = %do.body105
  %71 = load i8*, i8** %__mptr102, align 8, !dbg !7207
  %add.ptr109 = getelementptr i8, i8* %71, i64 0, !dbg !7207
  %72 = bitcast i8* %add.ptr109 to %struct.pci_dev_resource*, !dbg !7207
  store %struct.pci_dev_resource* %72, %struct.pci_dev_resource** %tmp108, align 8, !dbg !7208
  %73 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp108, align 8, !dbg !7207
  store %struct.pci_dev_resource* %73, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7182
  br label %for.cond86, !dbg !7182, !llvm.loop !7210

for.end110:                                       ; preds = %for.cond86
  call void @free_list(%struct.list_head* %failed) #11, !dbg !7212
  call void @llvm.dbg.declare(metadata i8** %__mptr111, metadata !7213, metadata !DIExpression()), !dbg !7216
  %next112 = getelementptr inbounds %struct.list_head, %struct.list_head* %saved, i32 0, i32 0, !dbg !7216
  %74 = load %struct.list_head*, %struct.list_head** %next112, align 8, !dbg !7216
  %75 = bitcast %struct.list_head* %74 to i8*, !dbg !7216
  store i8* %75, i8** %__mptr111, align 8, !dbg !7216
  br label %do.body113, !dbg !7216

do.body113:                                       ; preds = %for.end110
  br label %do.end115, !dbg !7217

do.end115:                                        ; preds = %do.body113
  %76 = load i8*, i8** %__mptr111, align 8, !dbg !7216
  %add.ptr117 = getelementptr i8, i8* %76, i64 0, !dbg !7216
  %77 = bitcast i8* %add.ptr117 to %struct.pci_dev_resource*, !dbg !7216
  store %struct.pci_dev_resource* %77, %struct.pci_dev_resource** %tmp116, align 8, !dbg !7217
  %78 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp116, align 8, !dbg !7216
  store %struct.pci_dev_resource* %78, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7219
  br label %for.cond118, !dbg !7219

for.cond118:                                      ; preds = %do.end144, %do.end115
  %79 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7220
  %list119 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %79, i32 0, i32 0, !dbg !7220
  %cmp120 = icmp eq %struct.list_head* %list119, %saved, !dbg !7220
  %lnot122 = xor i1 %cmp120, true, !dbg !7220
  br i1 %lnot122, label %for.body124, label %for.end147, !dbg !7219

for.body124:                                      ; preds = %for.cond118
  call void @llvm.dbg.declare(metadata %struct.resource** %res125, metadata !7222, metadata !DIExpression()), !dbg !7224
  %80 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7225
  %res126 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %80, i32 0, i32 1, !dbg !7226
  %81 = load %struct.resource*, %struct.resource** %res126, align 8, !dbg !7226
  store %struct.resource* %81, %struct.resource** %res125, align 8, !dbg !7224
  %82 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7227
  %dev127 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %82, i32 0, i32 2, !dbg !7228
  %83 = load %struct.pci_dev*, %struct.pci_dev** %dev127, align 8, !dbg !7228
  store %struct.pci_dev* %83, %struct.pci_dev** %bridge.addr, align 8, !dbg !7229
  %84 = load %struct.resource*, %struct.resource** %res125, align 8, !dbg !7230
  %85 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7231
  %resource128 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %85, i32 0, i32 44, !dbg !7232
  %arraydecay = getelementptr inbounds [17 x %struct.resource], [17 x %struct.resource]* %resource128, i64 0, i64 0, !dbg !7231
  %sub.ptr.lhs.cast = ptrtoint %struct.resource* %84 to i64, !dbg !7233
  %sub.ptr.rhs.cast = ptrtoint %struct.resource* %arraydecay to i64, !dbg !7233
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7233
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !7233
  %conv129 = trunc i64 %sub.ptr.div to i32, !dbg !7230
  store i32 %conv129, i32* %i, align 4, !dbg !7234
  %86 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7235
  %start130 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %86, i32 0, i32 3, !dbg !7236
  %87 = load i64, i64* %start130, align 8, !dbg !7236
  %88 = load %struct.resource*, %struct.resource** %res125, align 8, !dbg !7237
  %start131 = getelementptr inbounds %struct.resource, %struct.resource* %88, i32 0, i32 0, !dbg !7238
  store i64 %87, i64* %start131, align 8, !dbg !7239
  %89 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7240
  %end132 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %89, i32 0, i32 4, !dbg !7241
  %90 = load i64, i64* %end132, align 8, !dbg !7241
  %91 = load %struct.resource*, %struct.resource** %res125, align 8, !dbg !7242
  %end133 = getelementptr inbounds %struct.resource, %struct.resource* %91, i32 0, i32 1, !dbg !7243
  store i64 %90, i64* %end133, align 8, !dbg !7244
  %92 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7245
  %flags134 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %92, i32 0, i32 7, !dbg !7246
  %93 = load i64, i64* %flags134, align 8, !dbg !7246
  %94 = load %struct.resource*, %struct.resource** %res125, align 8, !dbg !7247
  %flags135 = getelementptr inbounds %struct.resource, %struct.resource* %94, i32 0, i32 3, !dbg !7248
  store i64 %93, i64* %flags135, align 8, !dbg !7249
  %95 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7250
  %96 = load i32, i32* %i, align 4, !dbg !7251
  %call136 = call i32 @pci_claim_resource(%struct.pci_dev* %95, i32 %96) #11, !dbg !7252
  %97 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !7253
  %subordinate137 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %97, i32 0, i32 2, !dbg !7254
  %98 = load %struct.pci_bus*, %struct.pci_bus** %subordinate137, align 8, !dbg !7254
  call void @pci_setup_bridge(%struct.pci_bus* %98) #11, !dbg !7255
  br label %for.inc138, !dbg !7256

for.inc138:                                       ; preds = %for.body124
  call void @llvm.dbg.declare(metadata i8** %__mptr139, metadata !7257, metadata !DIExpression()), !dbg !7259
  %99 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7259
  %list140 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %99, i32 0, i32 0, !dbg !7259
  %next141 = getelementptr inbounds %struct.list_head, %struct.list_head* %list140, i32 0, i32 0, !dbg !7259
  %100 = load %struct.list_head*, %struct.list_head** %next141, align 8, !dbg !7259
  %101 = bitcast %struct.list_head* %100 to i8*, !dbg !7259
  store i8* %101, i8** %__mptr139, align 8, !dbg !7259
  br label %do.body142, !dbg !7259

do.body142:                                       ; preds = %for.inc138
  br label %do.end144, !dbg !7260

do.end144:                                        ; preds = %do.body142
  %102 = load i8*, i8** %__mptr139, align 8, !dbg !7259
  %add.ptr146 = getelementptr i8, i8* %102, i64 0, !dbg !7259
  %103 = bitcast i8* %add.ptr146 to %struct.pci_dev_resource*, !dbg !7259
  store %struct.pci_dev_resource* %103, %struct.pci_dev_resource** %tmp145, align 8, !dbg !7260
  %104 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp145, align 8, !dbg !7259
  store %struct.pci_dev_resource* %104, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7220
  br label %for.cond118, !dbg !7220, !llvm.loop !7262

for.end147:                                       ; preds = %for.cond118
  call void @free_list(%struct.list_head* %saved) #11, !dbg !7264
  call void @up_read(%struct.rw_semaphore* @pci_bus_sem) #11, !dbg !7265
  %105 = load i32, i32* %ret, align 4, !dbg !7266
  store i32 %105, i32* %retval, align 4, !dbg !7267
  br label %return, !dbg !7267

return:                                           ; preds = %for.end147, %for.end78, %if.then24
  %106 = load i32, i32* %retval, align 4, !dbg !7268
  ret i32 %106, !dbg !7268
}

; Function Attrs: noredzone
declare dso_local void @down_read(%struct.rw_semaphore*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add_to_list(%struct.list_head* %head, %struct.pci_dev* %dev, %struct.resource* %res, i64 %add_size, i64 %min_align) #0 !dbg !7269 {
entry:
  %retval = alloca i32, align 4
  %head.addr = alloca %struct.list_head*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %res.addr = alloca %struct.resource*, align 8
  %add_size.addr = alloca i64, align 8
  %min_align.addr = alloca i64, align 8
  %tmp = alloca %struct.pci_dev_resource*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7272, metadata !DIExpression()), !dbg !7273
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7274, metadata !DIExpression()), !dbg !7275
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !7276, metadata !DIExpression()), !dbg !7277
  store i64 %add_size, i64* %add_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %add_size.addr, metadata !7278, metadata !DIExpression()), !dbg !7279
  store i64 %min_align, i64* %min_align.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min_align.addr, metadata !7280, metadata !DIExpression()), !dbg !7281
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %tmp, metadata !7282, metadata !DIExpression()), !dbg !7283
  %call = call i8* @kzalloc(i64 72, i32 3264) #11, !dbg !7284
  %0 = bitcast i8* %call to %struct.pci_dev_resource*, !dbg !7284
  store %struct.pci_dev_resource* %0, %struct.pci_dev_resource** %tmp, align 8, !dbg !7285
  %1 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !7286
  %tobool = icmp ne %struct.pci_dev_resource* %1, null, !dbg !7286
  br i1 %tobool, label %if.end, label %if.then, !dbg !7288

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7289
  br label %return, !dbg !7289

if.end:                                           ; preds = %entry
  %2 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7290
  %3 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !7291
  %res1 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %3, i32 0, i32 1, !dbg !7292
  store %struct.resource* %2, %struct.resource** %res1, align 8, !dbg !7293
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7294
  %5 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !7295
  %dev2 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %5, i32 0, i32 2, !dbg !7296
  store %struct.pci_dev* %4, %struct.pci_dev** %dev2, align 8, !dbg !7297
  %6 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7298
  %start = getelementptr inbounds %struct.resource, %struct.resource* %6, i32 0, i32 0, !dbg !7299
  %7 = load i64, i64* %start, align 8, !dbg !7299
  %8 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !7300
  %start3 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %8, i32 0, i32 3, !dbg !7301
  store i64 %7, i64* %start3, align 8, !dbg !7302
  %9 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7303
  %end = getelementptr inbounds %struct.resource, %struct.resource* %9, i32 0, i32 1, !dbg !7304
  %10 = load i64, i64* %end, align 8, !dbg !7304
  %11 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !7305
  %end4 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %11, i32 0, i32 4, !dbg !7306
  store i64 %10, i64* %end4, align 8, !dbg !7307
  %12 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7308
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %12, i32 0, i32 3, !dbg !7309
  %13 = load i64, i64* %flags, align 8, !dbg !7309
  %14 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !7310
  %flags5 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %14, i32 0, i32 7, !dbg !7311
  store i64 %13, i64* %flags5, align 8, !dbg !7312
  %15 = load i64, i64* %add_size.addr, align 8, !dbg !7313
  %16 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !7314
  %add_size6 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %16, i32 0, i32 5, !dbg !7315
  store i64 %15, i64* %add_size6, align 8, !dbg !7316
  %17 = load i64, i64* %min_align.addr, align 8, !dbg !7317
  %18 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !7318
  %min_align7 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %18, i32 0, i32 6, !dbg !7319
  store i64 %17, i64* %min_align7, align 8, !dbg !7320
  %19 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !7321
  %list = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %19, i32 0, i32 0, !dbg !7322
  %20 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7323
  call void @list_add(%struct.list_head* %list, %struct.list_head* %20) #11, !dbg !7324
  store i32 0, i32* %retval, align 4, !dbg !7325
  br label %return, !dbg !7325

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !7326
  ret i32 %21, !dbg !7326
}

; Function Attrs: noredzone
declare dso_local i32 @release_resource(%struct.resource*) #3

; Function Attrs: noredzone
declare dso_local void @up_read(%struct.rw_semaphore*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_assign_unassigned_bus_resources(%struct.pci_bus* %bus) #0 !dbg !7327 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %add_list = alloca %struct.list_head, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp11 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !7328, metadata !DIExpression()), !dbg !7329
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !7330, metadata !DIExpression()), !dbg !7331
  call void @llvm.dbg.declare(metadata %struct.list_head* %add_list, metadata !7332, metadata !DIExpression()), !dbg !7333
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %add_list, i32 0, i32 0, !dbg !7333
  store %struct.list_head* %add_list, %struct.list_head** %next, align 8, !dbg !7333
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %add_list, i32 0, i32 1, !dbg !7333
  store %struct.list_head* %add_list, %struct.list_head** %prev, align 8, !dbg !7333
  call void @down_read(%struct.rw_semaphore* @pci_bus_sem) #11, !dbg !7334
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7335, metadata !DIExpression()), !dbg !7338
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7338
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 3, !dbg !7338
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !7338
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !7338
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !7338
  store i8* %2, i8** %__mptr, align 8, !dbg !7338
  br label %do.body, !dbg !7338

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7339

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !7338
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !7338
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !7338
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !7339
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !7338
  store %struct.pci_dev* %5, %struct.pci_dev** %dev, align 8, !dbg !7341
  br label %for.cond, !dbg !7341

for.cond:                                         ; preds = %do.end10, %do.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7342
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 0, !dbg !7342
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7342
  %devices2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 3, !dbg !7342
  %cmp = icmp eq %struct.list_head* %bus_list, %devices2, !dbg !7342
  %lnot = xor i1 %cmp, true, !dbg !7342
  br i1 %lnot, label %for.body, label %for.end, !dbg !7341

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7344
  %call = call zeroext i1 @pci_is_bridge(%struct.pci_dev* %8) #11, !dbg !7344
  br i1 %call, label %if.else, label %if.then, !dbg !7342

if.then:                                          ; preds = %for.body
  br label %if.end5, !dbg !7346

if.else:                                          ; preds = %for.body
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7348
  %call3 = call zeroext i1 @pci_has_subordinate(%struct.pci_dev* %9) #11, !dbg !7350
  br i1 %call3, label %if.then4, label %if.end, !dbg !7351

if.then4:                                         ; preds = %if.else
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7352
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 2, !dbg !7353
  %11 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !7353
  call void @__pci_bus_size_bridges(%struct.pci_bus* %11, %struct.list_head* %add_list) #11, !dbg !7354
  br label %if.end, !dbg !7354

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !7344

for.inc:                                          ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !7355, metadata !DIExpression()), !dbg !7357
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7357
  %bus_list7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 0, !dbg !7357
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list7, i32 0, i32 0, !dbg !7357
  %13 = load %struct.list_head*, %struct.list_head** %next8, align 8, !dbg !7357
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !7357
  store i8* %14, i8** %__mptr6, align 8, !dbg !7357
  br label %do.body9, !dbg !7357

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !7358

do.end10:                                         ; preds = %do.body9
  %15 = load i8*, i8** %__mptr6, align 8, !dbg !7357
  %add.ptr12 = getelementptr i8, i8* %15, i64 0, !dbg !7357
  %16 = bitcast i8* %add.ptr12 to %struct.pci_dev*, !dbg !7357
  store %struct.pci_dev* %16, %struct.pci_dev** %tmp11, align 8, !dbg !7358
  %17 = load %struct.pci_dev*, %struct.pci_dev** %tmp11, align 8, !dbg !7357
  store %struct.pci_dev* %17, %struct.pci_dev** %dev, align 8, !dbg !7342
  br label %for.cond, !dbg !7342, !llvm.loop !7360

for.end:                                          ; preds = %for.cond
  call void @up_read(%struct.rw_semaphore* @pci_bus_sem) #11, !dbg !7362
  %18 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7363
  call void @__pci_bus_assign_resources(%struct.pci_bus* %18, %struct.list_head* %add_list, %struct.list_head* null) #11, !dbg !7364
  br label %do.body13, !dbg !7365

do.body13:                                        ; preds = %for.end
  %call14 = call i32 @list_empty(%struct.list_head* %add_list) #11, !dbg !7366
  %tobool = icmp ne i32 %call14, 0, !dbg !7366
  %lnot15 = xor i1 %tobool, true, !dbg !7366
  %lnot16 = xor i1 %lnot15, true, !dbg !7366
  %lnot17 = xor i1 %lnot16, true, !dbg !7366
  %lnot.ext = zext i1 %lnot17 to i32, !dbg !7366
  %conv = sext i32 %lnot.ext to i64, !dbg !7366
  %tobool18 = icmp ne i64 %conv, 0, !dbg !7366
  br i1 %tobool18, label %if.then19, label %if.end28, !dbg !7369

if.then19:                                        ; preds = %do.body13
  br label %do.body20, !dbg !7366

do.body20:                                        ; preds = %if.then19
  br label %do.body21, !dbg !7370

do.body21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !7372

do.end22:                                         ; preds = %do.body21
  br label %do.body23, !dbg !7370

do.body23:                                        ; preds = %do.end22
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i32 2240, i32 0, i64 12) #14, !dbg !7374, !srcloc !7376
  br label %do.end24, !dbg !7374

do.end24:                                         ; preds = %do.body23
  br label %do.body25, !dbg !7370

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 352) #14, !dbg !7377, !srcloc !7380
  unreachable, !dbg !7381

do.end26:                                         ; No predecessors!
  br label %do.end27, !dbg !7370

do.end27:                                         ; preds = %do.end26
  br label %if.end28, !dbg !7370

if.end28:                                         ; preds = %do.end27, %do.body13
  br label %do.end29, !dbg !7369

do.end29:                                         ; preds = %if.end28
  ret void, !dbg !7382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_has_subordinate(%struct.pci_dev* %pci_dev) #0 !dbg !7383 {
entry:
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !7384, metadata !DIExpression()), !dbg !7385
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !7386
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 2, !dbg !7387
  %1 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !7387
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !7388
  %lnot = xor i1 %tobool, true, !dbg !7388
  %lnot1 = xor i1 %lnot, true, !dbg !7389
  ret i1 %lnot1, !dbg !7390
}

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_word(%struct.pci_dev*, i32, i16 zeroext) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.resource* @find_bus_resource_of_type(%struct.pci_bus* %bus, i64 %type_mask, i64 %type) #0 !dbg !7391 {
entry:
  %retval = alloca %struct.resource*, align 8
  %bus.addr = alloca %struct.pci_bus*, align 8
  %type_mask.addr = alloca i64, align 8
  %type.addr = alloca i64, align 8
  %r = alloca %struct.resource*, align 8
  %r_assigned = alloca %struct.resource*, align 8
  %i = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !7394, metadata !DIExpression()), !dbg !7395
  store i64 %type_mask, i64* %type_mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type_mask.addr, metadata !7396, metadata !DIExpression()), !dbg !7397
  store i64 %type, i64* %type.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type.addr, metadata !7398, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !7400, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.declare(metadata %struct.resource** %r_assigned, metadata !7402, metadata !DIExpression()), !dbg !7403
  store %struct.resource* null, %struct.resource** %r_assigned, align 8, !dbg !7403
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7404, metadata !DIExpression()), !dbg !7405
  store i32 0, i32* %i, align 4, !dbg !7406
  br label %for.cond, !dbg !7406

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7408
  %1 = load i32, i32* %i, align 4, !dbg !7408
  %call = call %struct.resource* @pci_bus_resource_n(%struct.pci_bus* %0, i32 %1) #11, !dbg !7408
  store %struct.resource* %call, %struct.resource** %r, align 8, !dbg !7408
  %tobool = icmp ne %struct.resource* %call, null, !dbg !7408
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !7408

lor.rhs:                                          ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !7408
  %cmp = icmp slt i32 %2, 4, !dbg !7408
  br label %lor.end, !dbg !7408

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %3 = phi i1 [ true, %for.cond ], [ %cmp, %lor.rhs ]
  br i1 %3, label %for.body, label %for.end, !dbg !7406

for.body:                                         ; preds = %lor.end
  %4 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7410
  %cmp1 = icmp eq %struct.resource* %4, @ioport_resource, !dbg !7413
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !7414

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7415
  %cmp2 = icmp eq %struct.resource* %5, @iomem_resource, !dbg !7416
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7417

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !7418

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7419
  %tobool3 = icmp ne %struct.resource* %6, null, !dbg !7419
  br i1 %tobool3, label %land.lhs.true, label %if.end8, !dbg !7421

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7422
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %7, i32 0, i32 3, !dbg !7423
  %8 = load i64, i64* %flags, align 8, !dbg !7423
  %9 = load i64, i64* %type_mask.addr, align 8, !dbg !7424
  %and = and i64 %8, %9, !dbg !7425
  %10 = load i64, i64* %type.addr, align 8, !dbg !7426
  %cmp4 = icmp eq i64 %and, %10, !dbg !7427
  br i1 %cmp4, label %land.lhs.true5, label %if.end8, !dbg !7428

land.lhs.true5:                                   ; preds = %land.lhs.true
  %11 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7429
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %11, i32 0, i32 5, !dbg !7430
  %12 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !7430
  %tobool6 = icmp ne %struct.resource* %12, null, !dbg !7429
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !7431

if.then7:                                         ; preds = %land.lhs.true5
  %13 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7432
  store %struct.resource* %13, %struct.resource** %retval, align 8, !dbg !7433
  br label %return, !dbg !7433

if.end8:                                          ; preds = %land.lhs.true5, %land.lhs.true, %if.end
  %14 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7434
  %tobool9 = icmp ne %struct.resource* %14, null, !dbg !7434
  br i1 %tobool9, label %land.lhs.true10, label %if.end17, !dbg !7436

land.lhs.true10:                                  ; preds = %if.end8
  %15 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7437
  %flags11 = getelementptr inbounds %struct.resource, %struct.resource* %15, i32 0, i32 3, !dbg !7438
  %16 = load i64, i64* %flags11, align 8, !dbg !7438
  %17 = load i64, i64* %type_mask.addr, align 8, !dbg !7439
  %and12 = and i64 %16, %17, !dbg !7440
  %18 = load i64, i64* %type.addr, align 8, !dbg !7441
  %cmp13 = icmp eq i64 %and12, %18, !dbg !7442
  br i1 %cmp13, label %land.lhs.true14, label %if.end17, !dbg !7443

land.lhs.true14:                                  ; preds = %land.lhs.true10
  %19 = load %struct.resource*, %struct.resource** %r_assigned, align 8, !dbg !7444
  %tobool15 = icmp ne %struct.resource* %19, null, !dbg !7444
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !7445

if.then16:                                        ; preds = %land.lhs.true14
  %20 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !7446
  store %struct.resource* %20, %struct.resource** %r_assigned, align 8, !dbg !7447
  br label %if.end17, !dbg !7448

if.end17:                                         ; preds = %if.then16, %land.lhs.true14, %land.lhs.true10, %if.end8
  br label %for.inc, !dbg !7449

for.inc:                                          ; preds = %if.end17, %if.then
  %21 = load i32, i32* %i, align 4, !dbg !7408
  %inc = add i32 %21, 1, !dbg !7408
  store i32 %inc, i32* %i, align 4, !dbg !7408
  br label %for.cond, !dbg !7408, !llvm.loop !7450

for.end:                                          ; preds = %lor.end
  %22 = load %struct.resource*, %struct.resource** %r_assigned, align 8, !dbg !7452
  store %struct.resource* %22, %struct.resource** %retval, align 8, !dbg !7453
  br label %return, !dbg !7453

return:                                           ; preds = %for.end, %if.then7
  %23 = load %struct.resource*, %struct.resource** %retval, align 8, !dbg !7454
  ret %struct.resource* %23, !dbg !7454
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @window_alignment(%struct.pci_bus* %bus, i64 %type) #0 !dbg !7455 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %type.addr = alloca i64, align 8
  %align = alloca i64, align 8
  %arch_align = alloca i64, align 8
  %__UNIQUE_ID___x279 = alloca i64, align 8
  %__UNIQUE_ID___y280 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !7456, metadata !DIExpression()), !dbg !7457
  store i64 %type, i64* %type.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type.addr, metadata !7458, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.declare(metadata i64* %align, metadata !7460, metadata !DIExpression()), !dbg !7461
  store i64 1, i64* %align, align 8, !dbg !7461
  call void @llvm.dbg.declare(metadata i64* %arch_align, metadata !7462, metadata !DIExpression()), !dbg !7463
  %0 = load i64, i64* %type.addr, align 8, !dbg !7464
  %and = and i64 %0, 512, !dbg !7466
  %tobool = icmp ne i64 %and, 0, !dbg !7466
  br i1 %tobool, label %if.then, label %if.else, !dbg !7467

if.then:                                          ; preds = %entry
  store i64 1048576, i64* %align, align 8, !dbg !7468
  br label %if.end10, !dbg !7469

if.else:                                          ; preds = %entry
  %1 = load i64, i64* %type.addr, align 8, !dbg !7470
  %and1 = and i64 %1, 256, !dbg !7472
  %tobool2 = icmp ne i64 %and1, 0, !dbg !7472
  br i1 %tobool2, label %if.then3, label %if.end9, !dbg !7473

if.then3:                                         ; preds = %if.else
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7474
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 4, !dbg !7477
  %3 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !7477
  %tobool4 = icmp ne %struct.pci_dev* %3, null, !dbg !7474
  br i1 %tobool4, label %land.lhs.true, label %if.else8, !dbg !7478

land.lhs.true:                                    ; preds = %if.then3
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7479
  %self5 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 4, !dbg !7480
  %5 = load %struct.pci_dev*, %struct.pci_dev** %self5, align 8, !dbg !7480
  %io_window_1k = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 46, !dbg !7481
  %6 = bitcast [5 x i8]* %io_window_1k to i40*, !dbg !7481
  %bf.load = load i40, i40* %6, align 1, !dbg !7481
  %bf.lshr = lshr i40 %bf.load, 30, !dbg !7481
  %bf.clear = and i40 %bf.lshr, 1, !dbg !7481
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !7481
  %tobool6 = icmp ne i32 %bf.cast, 0, !dbg !7479
  br i1 %tobool6, label %if.then7, label %if.else8, !dbg !7482

if.then7:                                         ; preds = %land.lhs.true
  store i64 1024, i64* %align, align 8, !dbg !7483
  br label %if.end, !dbg !7484

if.else8:                                         ; preds = %land.lhs.true, %if.then3
  store i64 4096, i64* %align, align 8, !dbg !7485
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then7
  br label %if.end9, !dbg !7486

if.end9:                                          ; preds = %if.end, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7487
  %8 = load i64, i64* %type.addr, align 8, !dbg !7488
  %call = call i64 @pcibios_window_alignment(%struct.pci_bus* %7, i64 %8) #11, !dbg !7489
  store i64 %call, i64* %arch_align, align 8, !dbg !7490
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x279, metadata !7491, metadata !DIExpression()), !dbg !7493
  %9 = load i64, i64* %align, align 8, !dbg !7493
  store i64 %9, i64* %__UNIQUE_ID___x279, align 8, !dbg !7493
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y280, metadata !7494, metadata !DIExpression()), !dbg !7493
  %10 = load i64, i64* %arch_align, align 8, !dbg !7493
  store i64 %10, i64* %__UNIQUE_ID___y280, align 8, !dbg !7493
  %11 = load i64, i64* %__UNIQUE_ID___x279, align 8, !dbg !7493
  %12 = load i64, i64* %__UNIQUE_ID___y280, align 8, !dbg !7493
  %cmp = icmp ugt i64 %11, %12, !dbg !7493
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7493

cond.true:                                        ; preds = %if.end10
  %13 = load i64, i64* %__UNIQUE_ID___x279, align 8, !dbg !7493
  br label %cond.end, !dbg !7493

cond.false:                                       ; preds = %if.end10
  %14 = load i64, i64* %__UNIQUE_ID___y280, align 8, !dbg !7493
  br label %cond.end, !dbg !7493

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %13, %cond.true ], [ %14, %cond.false ], !dbg !7493
  store i64 %cond, i64* %tmp, align 8, !dbg !7493
  %15 = load i64, i64* %tmp, align 8, !dbg !7493
  ret i64 %15, !dbg !7495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @resource_size(%struct.resource* %res) #0 !dbg !7496 {
entry:
  %res.addr = alloca %struct.resource*, align 8
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !7499, metadata !DIExpression()), !dbg !7500
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7501
  %end = getelementptr inbounds %struct.resource, %struct.resource* %0, i32 0, i32 1, !dbg !7502
  %1 = load i64, i64* %end, align 8, !dbg !7502
  %2 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7503
  %start = getelementptr inbounds %struct.resource, %struct.resource* %2, i32 0, i32 0, !dbg !7504
  %3 = load i64, i64* %start, align 8, !dbg !7504
  %sub = sub i64 %1, %3, !dbg !7505
  %add = add i64 %sub, 1, !dbg !7506
  ret i64 %add, !dbg !7507
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pci_resource_alignment(%struct.pci_dev* %dev, %struct.resource* %res) #0 !dbg !7508 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %res.addr = alloca %struct.resource*, align 8
  %resno = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7511, metadata !DIExpression()), !dbg !7512
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !7513, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.declare(metadata i32* %resno, metadata !7515, metadata !DIExpression()), !dbg !7516
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7517
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7518
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 44, !dbg !7519
  %arraydecay = getelementptr inbounds [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !7518
  %sub.ptr.lhs.cast = ptrtoint %struct.resource* %0 to i64, !dbg !7520
  %sub.ptr.rhs.cast = ptrtoint %struct.resource* %arraydecay to i64, !dbg !7520
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7520
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !7520
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !7517
  store i32 %conv, i32* %resno, align 4, !dbg !7516
  %2 = load i32, i32* %resno, align 4, !dbg !7521
  %cmp = icmp sge i32 %2, 7, !dbg !7523
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7524

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %resno, align 4, !dbg !7525
  %cmp2 = icmp sle i32 %3, 12, !dbg !7526
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7527

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7528
  %5 = load i32, i32* %resno, align 4, !dbg !7529
  %call = call i64 @pci_sriov_resource_alignment(%struct.pci_dev* %4, i32 %5) #11, !dbg !7530
  store i64 %call, i64* %retval, align 8, !dbg !7531
  br label %return, !dbg !7531

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7532
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 11, !dbg !7534
  %7 = load i32, i32* %class, align 4, !dbg !7534
  %shr = lshr i32 %7, 8, !dbg !7535
  %cmp4 = icmp eq i32 %shr, 1543, !dbg !7536
  br i1 %cmp4, label %if.then6, label %if.end8, !dbg !7537

if.then6:                                         ; preds = %if.end
  %8 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7538
  %call7 = call i64 @pci_cardbus_resource_alignment(%struct.resource* %8) #11, !dbg !7539
  store i64 %call7, i64* %retval, align 8, !dbg !7540
  br label %return, !dbg !7540

if.end8:                                          ; preds = %if.end
  %9 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7541
  %call9 = call i64 @resource_alignment(%struct.resource* %9) #11, !dbg !7542
  store i64 %call9, i64* %retval, align 8, !dbg !7543
  br label %return, !dbg !7543

return:                                           ; preds = %if.end8, %if.then6, %if.then
  %10 = load i64, i64* %retval, align 8, !dbg !7544
  ret i64 %10, !dbg !7544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @get_res_add_size(%struct.list_head* %head, %struct.resource* %res) #0 !dbg !7545 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %res.addr = alloca %struct.resource*, align 8
  %dev_res = alloca %struct.pci_dev_resource*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7548, metadata !DIExpression()), !dbg !7549
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !7550, metadata !DIExpression()), !dbg !7551
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %dev_res, metadata !7552, metadata !DIExpression()), !dbg !7553
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7554
  %1 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7555
  %call = call %struct.pci_dev_resource* @res_to_dev_res(%struct.list_head* %0, %struct.resource* %1) #11, !dbg !7556
  store %struct.pci_dev_resource* %call, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7557
  %2 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7558
  %tobool = icmp ne %struct.pci_dev_resource* %2, null, !dbg !7558
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7558

cond.true:                                        ; preds = %entry
  %3 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7559
  %add_size = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %3, i32 0, i32 5, !dbg !7560
  %4 = load i64, i64* %add_size, align 8, !dbg !7560
  br label %cond.end, !dbg !7558

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7558

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ 0, %cond.false ], !dbg !7558
  ret i64 %cond, !dbg !7561
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @calculate_iosize(i64 %size, i64 %min_size, i64 %size1, i64 %add_size, i64 %children_add_size, i64 %old_size, i64 %align) #0 !dbg !7562 {
entry:
  %size.addr = alloca i64, align 8
  %min_size.addr = alloca i64, align 8
  %size1.addr = alloca i64, align 8
  %add_size.addr = alloca i64, align 8
  %children_add_size.addr = alloca i64, align 8
  %old_size.addr = alloca i64, align 8
  %align.addr = alloca i64, align 8
  %__UNIQUE_ID___x275 = alloca i64, align 8
  %__UNIQUE_ID___y276 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7565, metadata !DIExpression()), !dbg !7566
  store i64 %min_size, i64* %min_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min_size.addr, metadata !7567, metadata !DIExpression()), !dbg !7568
  store i64 %size1, i64* %size1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !7569, metadata !DIExpression()), !dbg !7570
  store i64 %add_size, i64* %add_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %add_size.addr, metadata !7571, metadata !DIExpression()), !dbg !7572
  store i64 %children_add_size, i64* %children_add_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %children_add_size.addr, metadata !7573, metadata !DIExpression()), !dbg !7574
  store i64 %old_size, i64* %old_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %old_size.addr, metadata !7575, metadata !DIExpression()), !dbg !7576
  store i64 %align, i64* %align.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %align.addr, metadata !7577, metadata !DIExpression()), !dbg !7578
  %0 = load i64, i64* %size.addr, align 8, !dbg !7579
  %1 = load i64, i64* %min_size.addr, align 8, !dbg !7581
  %cmp = icmp ult i64 %0, %1, !dbg !7582
  br i1 %cmp, label %if.then, label %if.end, !dbg !7583

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %min_size.addr, align 8, !dbg !7584
  store i64 %2, i64* %size.addr, align 8, !dbg !7585
  br label %if.end, !dbg !7586

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %old_size.addr, align 8, !dbg !7587
  %cmp1 = icmp eq i64 %3, 1, !dbg !7589
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7590

if.then2:                                         ; preds = %if.end
  store i64 0, i64* %old_size.addr, align 8, !dbg !7591
  br label %if.end3, !dbg !7592

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !7593
  %5 = load i64, i64* %size1.addr, align 8, !dbg !7594
  %add = add i64 %4, %5, !dbg !7595
  store i64 %add, i64* %size.addr, align 8, !dbg !7596
  %6 = load i64, i64* %size.addr, align 8, !dbg !7597
  %7 = load i64, i64* %old_size.addr, align 8, !dbg !7599
  %cmp4 = icmp ult i64 %6, %7, !dbg !7600
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7601

if.then5:                                         ; preds = %if.end3
  %8 = load i64, i64* %old_size.addr, align 8, !dbg !7602
  store i64 %8, i64* %size.addr, align 8, !dbg !7603
  br label %if.end6, !dbg !7604

if.end6:                                          ; preds = %if.then5, %if.end3
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x275, metadata !7605, metadata !DIExpression()), !dbg !7607
  %9 = load i64, i64* %size.addr, align 8, !dbg !7607
  store i64 %9, i64* %__UNIQUE_ID___x275, align 8, !dbg !7607
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y276, metadata !7608, metadata !DIExpression()), !dbg !7607
  %10 = load i64, i64* %add_size.addr, align 8, !dbg !7607
  store i64 %10, i64* %__UNIQUE_ID___y276, align 8, !dbg !7607
  %11 = load i64, i64* %__UNIQUE_ID___x275, align 8, !dbg !7607
  %12 = load i64, i64* %__UNIQUE_ID___y276, align 8, !dbg !7607
  %cmp7 = icmp ugt i64 %11, %12, !dbg !7607
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !7607

cond.true:                                        ; preds = %if.end6
  %13 = load i64, i64* %__UNIQUE_ID___x275, align 8, !dbg !7607
  br label %cond.end, !dbg !7607

cond.false:                                       ; preds = %if.end6
  %14 = load i64, i64* %__UNIQUE_ID___y276, align 8, !dbg !7607
  br label %cond.end, !dbg !7607

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %13, %cond.true ], [ %14, %cond.false ], !dbg !7607
  store i64 %cond, i64* %tmp, align 8, !dbg !7607
  %15 = load i64, i64* %tmp, align 8, !dbg !7607
  %16 = load i64, i64* %children_add_size.addr, align 8, !dbg !7609
  %add8 = add i64 %15, %16, !dbg !7609
  %17 = load i64, i64* %align.addr, align 8, !dbg !7609
  %sub = sub i64 %17, 1, !dbg !7609
  %add9 = add i64 %add8, %sub, !dbg !7609
  %18 = load i64, i64* %align.addr, align 8, !dbg !7609
  %sub10 = sub i64 %18, 1, !dbg !7609
  %neg = xor i64 %sub10, -1, !dbg !7609
  %and = and i64 %add9, %neg, !dbg !7609
  store i64 %and, i64* %size.addr, align 8, !dbg !7610
  %19 = load i64, i64* %size.addr, align 8, !dbg !7611
  ret i64 %19, !dbg !7612
}

; Function Attrs: noredzone
declare dso_local i64 @pci_sriov_resource_alignment(%struct.pci_dev*, i32) #3

; Function Attrs: noredzone
declare dso_local i64 @resource_alignment(%struct.resource*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_dev_resource* @res_to_dev_res(%struct.list_head* %head, %struct.resource* %res) #0 !dbg !7613 {
entry:
  %retval = alloca %struct.pci_dev_resource*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  %res.addr = alloca %struct.resource*, align 8
  %dev_res = alloca %struct.pci_dev_resource*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev_resource*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.pci_dev_resource*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7616, metadata !DIExpression()), !dbg !7617
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !7618, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %dev_res, metadata !7620, metadata !DIExpression()), !dbg !7621
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7622, metadata !DIExpression()), !dbg !7625
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7625
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !7625
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7625
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !7625
  store i8* %2, i8** %__mptr, align 8, !dbg !7625
  br label %do.body, !dbg !7625

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7626

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !7625
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !7625
  %4 = bitcast i8* %add.ptr to %struct.pci_dev_resource*, !dbg !7625
  store %struct.pci_dev_resource* %4, %struct.pci_dev_resource** %tmp, align 8, !dbg !7626
  %5 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !7625
  store %struct.pci_dev_resource* %5, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7628
  br label %for.cond, !dbg !7628

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7629
  %list = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %6, i32 0, i32 0, !dbg !7629
  %7 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7629
  %cmp = icmp eq %struct.list_head* %list, %7, !dbg !7629
  %lnot = xor i1 %cmp, true, !dbg !7629
  br i1 %lnot, label %for.body, label %for.end, !dbg !7628

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7631
  %res1 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %8, i32 0, i32 1, !dbg !7634
  %9 = load %struct.resource*, %struct.resource** %res1, align 8, !dbg !7634
  %10 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7635
  %cmp2 = icmp eq %struct.resource* %9, %10, !dbg !7636
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7637

if.then:                                          ; preds = %for.body
  %11 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7638
  store %struct.pci_dev_resource* %11, %struct.pci_dev_resource** %retval, align 8, !dbg !7639
  br label %return, !dbg !7639

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7640

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !7641, metadata !DIExpression()), !dbg !7643
  %12 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7643
  %list4 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %12, i32 0, i32 0, !dbg !7643
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !7643
  %13 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !7643
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !7643
  store i8* %14, i8** %__mptr3, align 8, !dbg !7643
  br label %do.body6, !dbg !7643

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !7644

do.end7:                                          ; preds = %do.body6
  %15 = load i8*, i8** %__mptr3, align 8, !dbg !7643
  %add.ptr9 = getelementptr i8, i8* %15, i64 0, !dbg !7643
  %16 = bitcast i8* %add.ptr9 to %struct.pci_dev_resource*, !dbg !7643
  store %struct.pci_dev_resource* %16, %struct.pci_dev_resource** %tmp8, align 8, !dbg !7644
  %17 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp8, align 8, !dbg !7643
  store %struct.pci_dev_resource* %17, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7629
  br label %for.cond, !dbg !7629, !llvm.loop !7646

for.end:                                          ; preds = %for.cond
  store %struct.pci_dev_resource* null, %struct.pci_dev_resource** %retval, align 8, !dbg !7648
  br label %return, !dbg !7648

return:                                           ; preds = %for.end, %if.then
  %18 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %retval, align 8, !dbg !7649
  ret %struct.pci_dev_resource* %18, !dbg !7649
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @get_res_add_align(%struct.list_head* %head, %struct.resource* %res) #0 !dbg !7650 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %res.addr = alloca %struct.resource*, align 8
  %dev_res = alloca %struct.pci_dev_resource*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7651, metadata !DIExpression()), !dbg !7652
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !7653, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %dev_res, metadata !7655, metadata !DIExpression()), !dbg !7656
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7657
  %1 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !7658
  %call = call %struct.pci_dev_resource* @res_to_dev_res(%struct.list_head* %0, %struct.resource* %1) #11, !dbg !7659
  store %struct.pci_dev_resource* %call, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7660
  %2 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7661
  %tobool = icmp ne %struct.pci_dev_resource* %2, null, !dbg !7661
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7661

cond.true:                                        ; preds = %entry
  %3 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7662
  %min_align = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %3, i32 0, i32 6, !dbg !7663
  %4 = load i64, i64* %min_align, align 8, !dbg !7663
  br label %cond.end, !dbg !7661

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7661

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ 0, %cond.false ], !dbg !7661
  ret i64 %cond, !dbg !7664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @calculate_mem_align(i64* %aligns, i32 %max_order) #0 !dbg !7665 {
entry:
  %aligns.addr = alloca i64*, align 8
  %max_order.addr = alloca i32, align 4
  %align = alloca i64, align 8
  %min_align = alloca i64, align 8
  %order = alloca i32, align 4
  %align1 = alloca i64, align 8
  store i64* %aligns, i64** %aligns.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %aligns.addr, metadata !7669, metadata !DIExpression()), !dbg !7670
  store i32 %max_order, i32* %max_order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_order.addr, metadata !7671, metadata !DIExpression()), !dbg !7672
  call void @llvm.dbg.declare(metadata i64* %align, metadata !7673, metadata !DIExpression()), !dbg !7674
  store i64 0, i64* %align, align 8, !dbg !7674
  call void @llvm.dbg.declare(metadata i64* %min_align, metadata !7675, metadata !DIExpression()), !dbg !7676
  store i64 0, i64* %min_align, align 8, !dbg !7676
  call void @llvm.dbg.declare(metadata i32* %order, metadata !7677, metadata !DIExpression()), !dbg !7678
  store i32 0, i32* %order, align 4, !dbg !7679
  br label %for.cond, !dbg !7681

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %order, align 4, !dbg !7682
  %1 = load i32, i32* %max_order.addr, align 4, !dbg !7684
  %cmp = icmp sle i32 %0, %1, !dbg !7685
  br i1 %cmp, label %for.body, label %for.end, !dbg !7686

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %align1, metadata !7687, metadata !DIExpression()), !dbg !7689
  store i64 1, i64* %align1, align 8, !dbg !7689
  %2 = load i32, i32* %order, align 4, !dbg !7690
  %add = add i32 %2, 20, !dbg !7691
  %3 = load i64, i64* %align1, align 8, !dbg !7692
  %sh_prom = zext i32 %add to i64, !dbg !7692
  %shl = shl i64 %3, %sh_prom, !dbg !7692
  store i64 %shl, i64* %align1, align 8, !dbg !7692
  %4 = load i64, i64* %align, align 8, !dbg !7693
  %tobool = icmp ne i64 %4, 0, !dbg !7693
  br i1 %tobool, label %if.else, label %if.then, !dbg !7695

if.then:                                          ; preds = %for.body
  %5 = load i64, i64* %align1, align 8, !dbg !7696
  store i64 %5, i64* %min_align, align 8, !dbg !7697
  br label %if.end6, !dbg !7698

if.else:                                          ; preds = %for.body
  %6 = load i64, i64* %align, align 8, !dbg !7699
  %7 = load i64, i64* %min_align, align 8, !dbg !7699
  %add1 = add i64 %6, %7, !dbg !7699
  %8 = load i64, i64* %min_align, align 8, !dbg !7699
  %sub = sub i64 %8, 1, !dbg !7699
  %add2 = add i64 %add1, %sub, !dbg !7699
  %9 = load i64, i64* %min_align, align 8, !dbg !7699
  %sub3 = sub i64 %9, 1, !dbg !7699
  %neg = xor i64 %sub3, -1, !dbg !7699
  %and = and i64 %add2, %neg, !dbg !7699
  %10 = load i64, i64* %align1, align 8, !dbg !7701
  %cmp4 = icmp ult i64 %and, %10, !dbg !7702
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !7703

if.then5:                                         ; preds = %if.else
  %11 = load i64, i64* %align1, align 8, !dbg !7704
  %shr = lshr i64 %11, 1, !dbg !7705
  store i64 %shr, i64* %min_align, align 8, !dbg !7706
  br label %if.end, !dbg !7707

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %12 = load i64*, i64** %aligns.addr, align 8, !dbg !7708
  %13 = load i32, i32* %order, align 4, !dbg !7709
  %idxprom = sext i32 %13 to i64, !dbg !7708
  %arrayidx = getelementptr i64, i64* %12, i64 %idxprom, !dbg !7708
  %14 = load i64, i64* %arrayidx, align 8, !dbg !7708
  %15 = load i64, i64* %align, align 8, !dbg !7710
  %add7 = add i64 %15, %14, !dbg !7710
  store i64 %add7, i64* %align, align 8, !dbg !7710
  br label %for.inc, !dbg !7711

for.inc:                                          ; preds = %if.end6
  %16 = load i32, i32* %order, align 4, !dbg !7712
  %inc = add i32 %16, 1, !dbg !7712
  store i32 %inc, i32* %order, align 4, !dbg !7712
  br label %for.cond, !dbg !7713, !llvm.loop !7714

for.end:                                          ; preds = %for.cond
  %17 = load i64, i64* %min_align, align 8, !dbg !7716
  ret i64 %17, !dbg !7717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @calculate_memsize(i64 %size, i64 %min_size, i64 %add_size, i64 %children_add_size, i64 %old_size, i64 %align) #0 !dbg !7718 {
entry:
  %size.addr = alloca i64, align 8
  %min_size.addr = alloca i64, align 8
  %add_size.addr = alloca i64, align 8
  %children_add_size.addr = alloca i64, align 8
  %old_size.addr = alloca i64, align 8
  %align.addr = alloca i64, align 8
  %__UNIQUE_ID___x277 = alloca i64, align 8
  %__UNIQUE_ID___y278 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7721, metadata !DIExpression()), !dbg !7722
  store i64 %min_size, i64* %min_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %min_size.addr, metadata !7723, metadata !DIExpression()), !dbg !7724
  store i64 %add_size, i64* %add_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %add_size.addr, metadata !7725, metadata !DIExpression()), !dbg !7726
  store i64 %children_add_size, i64* %children_add_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %children_add_size.addr, metadata !7727, metadata !DIExpression()), !dbg !7728
  store i64 %old_size, i64* %old_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %old_size.addr, metadata !7729, metadata !DIExpression()), !dbg !7730
  store i64 %align, i64* %align.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %align.addr, metadata !7731, metadata !DIExpression()), !dbg !7732
  %0 = load i64, i64* %size.addr, align 8, !dbg !7733
  %1 = load i64, i64* %min_size.addr, align 8, !dbg !7735
  %cmp = icmp ult i64 %0, %1, !dbg !7736
  br i1 %cmp, label %if.then, label %if.end, !dbg !7737

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %min_size.addr, align 8, !dbg !7738
  store i64 %2, i64* %size.addr, align 8, !dbg !7739
  br label %if.end, !dbg !7740

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %old_size.addr, align 8, !dbg !7741
  %cmp1 = icmp eq i64 %3, 1, !dbg !7743
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7744

if.then2:                                         ; preds = %if.end
  store i64 0, i64* %old_size.addr, align 8, !dbg !7745
  br label %if.end3, !dbg !7746

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !7747
  %5 = load i64, i64* %old_size.addr, align 8, !dbg !7749
  %cmp4 = icmp ult i64 %4, %5, !dbg !7750
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7751

if.then5:                                         ; preds = %if.end3
  %6 = load i64, i64* %old_size.addr, align 8, !dbg !7752
  store i64 %6, i64* %size.addr, align 8, !dbg !7753
  br label %if.end6, !dbg !7754

if.end6:                                          ; preds = %if.then5, %if.end3
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x277, metadata !7755, metadata !DIExpression()), !dbg !7757
  %7 = load i64, i64* %size.addr, align 8, !dbg !7757
  store i64 %7, i64* %__UNIQUE_ID___x277, align 8, !dbg !7757
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y278, metadata !7758, metadata !DIExpression()), !dbg !7757
  %8 = load i64, i64* %add_size.addr, align 8, !dbg !7757
  store i64 %8, i64* %__UNIQUE_ID___y278, align 8, !dbg !7757
  %9 = load i64, i64* %__UNIQUE_ID___x277, align 8, !dbg !7757
  %10 = load i64, i64* %__UNIQUE_ID___y278, align 8, !dbg !7757
  %cmp7 = icmp ugt i64 %9, %10, !dbg !7757
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !7757

cond.true:                                        ; preds = %if.end6
  %11 = load i64, i64* %__UNIQUE_ID___x277, align 8, !dbg !7757
  br label %cond.end, !dbg !7757

cond.false:                                       ; preds = %if.end6
  %12 = load i64, i64* %__UNIQUE_ID___y278, align 8, !dbg !7757
  br label %cond.end, !dbg !7757

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %11, %cond.true ], [ %12, %cond.false ], !dbg !7757
  store i64 %cond, i64* %tmp, align 8, !dbg !7757
  %13 = load i64, i64* %tmp, align 8, !dbg !7757
  %14 = load i64, i64* %children_add_size.addr, align 8, !dbg !7759
  %add = add i64 %13, %14, !dbg !7759
  %15 = load i64, i64* %align.addr, align 8, !dbg !7759
  %sub = sub i64 %15, 1, !dbg !7759
  %add8 = add i64 %add, %sub, !dbg !7759
  %16 = load i64, i64* %align.addr, align 8, !dbg !7759
  %sub9 = sub i64 %16, 1, !dbg !7759
  %neg = xor i64 %sub9, -1, !dbg !7759
  %and = and i64 %add8, %neg, !dbg !7759
  store i64 %and, i64* %size.addr, align 8, !dbg !7760
  %17 = load i64, i64* %size.addr, align 8, !dbg !7761
  ret i64 %17, !dbg !7762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__dev_sort_resources(%struct.pci_dev* %dev, %struct.list_head* %head) #0 !dbg !7763 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  %class = alloca i16, align 2
  %command = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7764, metadata !DIExpression()), !dbg !7765
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7766, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.declare(metadata i16* %class, metadata !7768, metadata !DIExpression()), !dbg !7769
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7770
  %class1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 11, !dbg !7771
  %1 = load i32, i32* %class1, align 4, !dbg !7771
  %shr = lshr i32 %1, 8, !dbg !7772
  %conv = trunc i32 %shr to i16, !dbg !7770
  store i16 %conv, i16* %class, align 2, !dbg !7769
  %2 = load i16, i16* %class, align 2, !dbg !7773
  %conv2 = zext i16 %2 to i32, !dbg !7773
  %cmp = icmp eq i32 %conv2, 0, !dbg !7775
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7776

lor.lhs.false:                                    ; preds = %entry
  %3 = load i16, i16* %class, align 2, !dbg !7777
  %conv4 = zext i16 %3 to i32, !dbg !7777
  %cmp5 = icmp eq i32 %conv4, 1536, !dbg !7778
  br i1 %cmp5, label %if.then, label %if.end, !dbg !7779

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !7780

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i16, i16* %class, align 2, !dbg !7781
  %conv7 = zext i16 %4 to i32, !dbg !7781
  %cmp8 = icmp eq i32 %conv7, 2048, !dbg !7783
  br i1 %cmp8, label %if.then10, label %if.end14, !dbg !7784

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %command, metadata !7785, metadata !DIExpression()), !dbg !7787
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7788
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %5, i32 4, i16* %command) #11, !dbg !7789
  %6 = load i16, i16* %command, align 2, !dbg !7790
  %conv11 = zext i16 %6 to i32, !dbg !7790
  %and = and i32 %conv11, 3, !dbg !7792
  %tobool = icmp ne i32 %and, 0, !dbg !7792
  br i1 %tobool, label %if.then12, label %if.end13, !dbg !7793

if.then12:                                        ; preds = %if.then10
  br label %return, !dbg !7794

if.end13:                                         ; preds = %if.then10
  br label %if.end14, !dbg !7795

if.end14:                                         ; preds = %if.end13, %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7796
  %8 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7797
  call void @pdev_sort_resources(%struct.pci_dev* %7, %struct.list_head* %8) #11, !dbg !7798
  br label %return, !dbg !7799

return:                                           ; preds = %if.end14, %if.then12, %if.then
  ret void, !dbg !7799
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__assign_resources_sorted(%struct.list_head* %head, %struct.list_head* %realloc_head, %struct.list_head* %fail_head) #0 !dbg !7800 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %realloc_head.addr = alloca %struct.list_head*, align 8
  %fail_head.addr = alloca %struct.list_head*, align 8
  %save_head = alloca %struct.list_head, align 8
  %local_fail_head = alloca %struct.list_head, align 8
  %save_res = alloca %struct.pci_dev_resource*, align 8
  %dev_res = alloca %struct.pci_dev_resource*, align 8
  %tmp_res = alloca %struct.pci_dev_resource*, align 8
  %dev_res2 = alloca %struct.pci_dev_resource*, align 8
  %fail_type = alloca i64, align 8
  %add_align = alloca i64, align 8
  %align = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev_resource*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp14 = alloca %struct.pci_dev_resource*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp20 = alloca %struct.pci_dev_resource*, align 8
  %__mptr22 = alloca i8*, align 8
  %tmp27 = alloca %struct.pci_dev_resource*, align 8
  %r_size = alloca i64, align 8
  %__mptr53 = alloca i8*, align 8
  %tmp57 = alloca %struct.pci_dev_resource*, align 8
  %__mptr73 = alloca i8*, align 8
  %tmp78 = alloca %struct.pci_dev_resource*, align 8
  %__mptr83 = alloca i8*, align 8
  %tmp88 = alloca %struct.pci_dev_resource*, align 8
  %__mptr94 = alloca i8*, align 8
  %tmp98 = alloca %struct.pci_dev_resource*, align 8
  %__mptr107 = alloca i8*, align 8
  %tmp112 = alloca %struct.pci_dev_resource*, align 8
  %__mptr117 = alloca i8*, align 8
  %tmp121 = alloca %struct.pci_dev_resource*, align 8
  %__mptr123 = alloca i8*, align 8
  %tmp128 = alloca %struct.pci_dev_resource*, align 8
  %__mptr145 = alloca i8*, align 8
  %tmp150 = alloca %struct.pci_dev_resource*, align 8
  %__mptr153 = alloca i8*, align 8
  %tmp157 = alloca %struct.pci_dev_resource*, align 8
  %__mptr172 = alloca i8*, align 8
  %tmp177 = alloca %struct.pci_dev_resource*, align 8
  %__mptr180 = alloca i8*, align 8
  %tmp184 = alloca %struct.pci_dev_resource*, align 8
  %res191 = alloca %struct.resource*, align 8
  %__mptr200 = alloca i8*, align 8
  %tmp205 = alloca %struct.pci_dev_resource*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7803, metadata !DIExpression()), !dbg !7804
  store %struct.list_head* %realloc_head, %struct.list_head** %realloc_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %realloc_head.addr, metadata !7805, metadata !DIExpression()), !dbg !7806
  store %struct.list_head* %fail_head, %struct.list_head** %fail_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %fail_head.addr, metadata !7807, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.declare(metadata %struct.list_head* %save_head, metadata !7809, metadata !DIExpression()), !dbg !7810
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %save_head, i32 0, i32 0, !dbg !7810
  store %struct.list_head* %save_head, %struct.list_head** %next, align 8, !dbg !7810
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %save_head, i32 0, i32 1, !dbg !7810
  store %struct.list_head* %save_head, %struct.list_head** %prev, align 8, !dbg !7810
  call void @llvm.dbg.declare(metadata %struct.list_head* %local_fail_head, metadata !7811, metadata !DIExpression()), !dbg !7812
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %local_fail_head, i32 0, i32 0, !dbg !7812
  store %struct.list_head* %local_fail_head, %struct.list_head** %next1, align 8, !dbg !7812
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %local_fail_head, i32 0, i32 1, !dbg !7812
  store %struct.list_head* %local_fail_head, %struct.list_head** %prev2, align 8, !dbg !7812
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %save_res, metadata !7813, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %dev_res, metadata !7815, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %tmp_res, metadata !7817, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %dev_res2, metadata !7819, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.declare(metadata i64* %fail_type, metadata !7821, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.declare(metadata i64* %add_align, metadata !7823, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.declare(metadata i64* %align, metadata !7825, metadata !DIExpression()), !dbg !7826
  %0 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !7827
  %tobool = icmp ne %struct.list_head* %0, null, !dbg !7827
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7829

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !7830
  %call = call i32 @list_empty(%struct.list_head* %1) #11, !dbg !7831
  %tobool3 = icmp ne i32 %call, 0, !dbg !7831
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7832

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %requested_and_reassign, !dbg !7833

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7834, metadata !DIExpression()), !dbg !7837
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7837
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !7837
  %3 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !7837
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !7837
  store i8* %4, i8** %__mptr, align 8, !dbg !7837
  br label %do.body, !dbg !7837

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !7838

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !7837
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !7837
  %6 = bitcast i8* %add.ptr to %struct.pci_dev_resource*, !dbg !7837
  store %struct.pci_dev_resource* %6, %struct.pci_dev_resource** %tmp, align 8, !dbg !7838
  %7 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !7837
  store %struct.pci_dev_resource* %7, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7840
  br label %for.cond, !dbg !7840

for.cond:                                         ; preds = %do.end13, %do.end
  %8 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7841
  %list = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %8, i32 0, i32 0, !dbg !7841
  %9 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7841
  %cmp = icmp eq %struct.list_head* %list, %9, !dbg !7841
  %lnot = xor i1 %cmp, true, !dbg !7841
  br i1 %lnot, label %for.body, label %for.end, !dbg !7840

for.body:                                         ; preds = %for.cond
  %10 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7843
  %dev = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %10, i32 0, i32 2, !dbg !7846
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7846
  %12 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7847
  %res = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %12, i32 0, i32 1, !dbg !7848
  %13 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !7848
  %call5 = call i32 @add_to_list(%struct.list_head* %save_head, %struct.pci_dev* %11, %struct.resource* %13, i64 0, i64 0) #11, !dbg !7849
  %tobool6 = icmp ne i32 %call5, 0, !dbg !7849
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7850

if.then7:                                         ; preds = %for.body
  call void @free_list(%struct.list_head* %save_head) #11, !dbg !7851
  br label %requested_and_reassign, !dbg !7853

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !7854

for.inc:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !7855, metadata !DIExpression()), !dbg !7857
  %14 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7857
  %list10 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %14, i32 0, i32 0, !dbg !7857
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %list10, i32 0, i32 0, !dbg !7857
  %15 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !7857
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !7857
  store i8* %16, i8** %__mptr9, align 8, !dbg !7857
  br label %do.body12, !dbg !7857

do.body12:                                        ; preds = %for.inc
  br label %do.end13, !dbg !7858

do.end13:                                         ; preds = %do.body12
  %17 = load i8*, i8** %__mptr9, align 8, !dbg !7857
  %add.ptr15 = getelementptr i8, i8* %17, i64 0, !dbg !7857
  %18 = bitcast i8* %add.ptr15 to %struct.pci_dev_resource*, !dbg !7857
  store %struct.pci_dev_resource* %18, %struct.pci_dev_resource** %tmp14, align 8, !dbg !7858
  %19 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp14, align 8, !dbg !7857
  store %struct.pci_dev_resource* %19, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7841
  br label %for.cond, !dbg !7841, !llvm.loop !7860

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !7862, metadata !DIExpression()), !dbg !7865
  %20 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7865
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %20, i32 0, i32 0, !dbg !7865
  %21 = load %struct.list_head*, %struct.list_head** %next17, align 8, !dbg !7865
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !7865
  store i8* %22, i8** %__mptr16, align 8, !dbg !7865
  br label %do.body18, !dbg !7865

do.body18:                                        ; preds = %for.end
  br label %do.end19, !dbg !7866

do.end19:                                         ; preds = %do.body18
  %23 = load i8*, i8** %__mptr16, align 8, !dbg !7865
  %add.ptr21 = getelementptr i8, i8* %23, i64 0, !dbg !7865
  %24 = bitcast i8* %add.ptr21 to %struct.pci_dev_resource*, !dbg !7865
  store %struct.pci_dev_resource* %24, %struct.pci_dev_resource** %tmp20, align 8, !dbg !7866
  %25 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp20, align 8, !dbg !7865
  store %struct.pci_dev_resource* %25, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7868
  call void @llvm.dbg.declare(metadata i8** %__mptr22, metadata !7869, metadata !DIExpression()), !dbg !7871
  %26 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7871
  %list23 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %26, i32 0, i32 0, !dbg !7871
  %next24 = getelementptr inbounds %struct.list_head, %struct.list_head* %list23, i32 0, i32 0, !dbg !7871
  %27 = load %struct.list_head*, %struct.list_head** %next24, align 8, !dbg !7871
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !7871
  store i8* %28, i8** %__mptr22, align 8, !dbg !7871
  br label %do.body25, !dbg !7871

do.body25:                                        ; preds = %do.end19
  br label %do.end26, !dbg !7872

do.end26:                                         ; preds = %do.body25
  %29 = load i8*, i8** %__mptr22, align 8, !dbg !7871
  %add.ptr28 = getelementptr i8, i8* %29, i64 0, !dbg !7871
  %30 = bitcast i8* %add.ptr28 to %struct.pci_dev_resource*, !dbg !7871
  store %struct.pci_dev_resource* %30, %struct.pci_dev_resource** %tmp27, align 8, !dbg !7872
  %31 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp27, align 8, !dbg !7871
  store %struct.pci_dev_resource* %31, %struct.pci_dev_resource** %tmp_res, align 8, !dbg !7868
  br label %for.cond29, !dbg !7868

for.cond29:                                       ; preds = %do.end87, %do.end26
  %32 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7874
  %list30 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %32, i32 0, i32 0, !dbg !7874
  %33 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7874
  %cmp31 = icmp eq %struct.list_head* %list30, %33, !dbg !7874
  %lnot32 = xor i1 %cmp31, true, !dbg !7874
  br i1 %lnot32, label %for.body33, label %for.end90, !dbg !7868

for.body33:                                       ; preds = %for.cond29
  %34 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !7876
  %35 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7878
  %res34 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %35, i32 0, i32 1, !dbg !7879
  %36 = load %struct.resource*, %struct.resource** %res34, align 8, !dbg !7879
  %call35 = call i64 @get_res_add_size(%struct.list_head* %34, %struct.resource* %36) #11, !dbg !7880
  %37 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7881
  %res36 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %37, i32 0, i32 1, !dbg !7882
  %38 = load %struct.resource*, %struct.resource** %res36, align 8, !dbg !7882
  %end = getelementptr inbounds %struct.resource, %struct.resource* %38, i32 0, i32 1, !dbg !7883
  %39 = load i64, i64* %end, align 8, !dbg !7884
  %add = add i64 %39, %call35, !dbg !7884
  store i64 %add, i64* %end, align 8, !dbg !7884
  %40 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7885
  %res37 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %40, i32 0, i32 1, !dbg !7887
  %41 = load %struct.resource*, %struct.resource** %res37, align 8, !dbg !7887
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %41, i32 0, i32 3, !dbg !7888
  %42 = load i64, i64* %flags, align 8, !dbg !7888
  %and = and i64 %42, 524288, !dbg !7889
  %tobool38 = icmp ne i64 %and, 0, !dbg !7889
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !7890

if.then39:                                        ; preds = %for.body33
  br label %for.inc82, !dbg !7891

if.end40:                                         ; preds = %for.body33
  %43 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !7892
  %44 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7893
  %res41 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %44, i32 0, i32 1, !dbg !7894
  %45 = load %struct.resource*, %struct.resource** %res41, align 8, !dbg !7894
  %call42 = call i64 @get_res_add_align(%struct.list_head* %43, %struct.resource* %45) #11, !dbg !7895
  store i64 %call42, i64* %add_align, align 8, !dbg !7896
  %46 = load i64, i64* %add_align, align 8, !dbg !7897
  %47 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7899
  %res43 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %47, i32 0, i32 1, !dbg !7900
  %48 = load %struct.resource*, %struct.resource** %res43, align 8, !dbg !7900
  %start = getelementptr inbounds %struct.resource, %struct.resource* %48, i32 0, i32 0, !dbg !7901
  %49 = load i64, i64* %start, align 8, !dbg !7901
  %cmp44 = icmp ugt i64 %46, %49, !dbg !7902
  br i1 %cmp44, label %if.then45, label %if.end81, !dbg !7903

if.then45:                                        ; preds = %if.end40
  call void @llvm.dbg.declare(metadata i64* %r_size, metadata !7904, metadata !DIExpression()), !dbg !7906
  %50 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7907
  %res46 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %50, i32 0, i32 1, !dbg !7908
  %51 = load %struct.resource*, %struct.resource** %res46, align 8, !dbg !7908
  %call47 = call i64 @resource_size(%struct.resource* %51) #11, !dbg !7909
  store i64 %call47, i64* %r_size, align 8, !dbg !7906
  %52 = load i64, i64* %add_align, align 8, !dbg !7910
  %53 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7911
  %res48 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %53, i32 0, i32 1, !dbg !7912
  %54 = load %struct.resource*, %struct.resource** %res48, align 8, !dbg !7912
  %start49 = getelementptr inbounds %struct.resource, %struct.resource* %54, i32 0, i32 0, !dbg !7913
  store i64 %52, i64* %start49, align 8, !dbg !7914
  %55 = load i64, i64* %add_align, align 8, !dbg !7915
  %56 = load i64, i64* %r_size, align 8, !dbg !7916
  %add50 = add i64 %55, %56, !dbg !7917
  %sub = sub i64 %add50, 1, !dbg !7918
  %57 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7919
  %res51 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %57, i32 0, i32 1, !dbg !7920
  %58 = load %struct.resource*, %struct.resource** %res51, align 8, !dbg !7920
  %end52 = getelementptr inbounds %struct.resource, %struct.resource* %58, i32 0, i32 1, !dbg !7921
  store i64 %sub, i64* %end52, align 8, !dbg !7922
  call void @llvm.dbg.declare(metadata i8** %__mptr53, metadata !7923, metadata !DIExpression()), !dbg !7926
  %59 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7926
  %next54 = getelementptr inbounds %struct.list_head, %struct.list_head* %59, i32 0, i32 0, !dbg !7926
  %60 = load %struct.list_head*, %struct.list_head** %next54, align 8, !dbg !7926
  %61 = bitcast %struct.list_head* %60 to i8*, !dbg !7926
  store i8* %61, i8** %__mptr53, align 8, !dbg !7926
  br label %do.body55, !dbg !7926

do.body55:                                        ; preds = %if.then45
  br label %do.end56, !dbg !7927

do.end56:                                         ; preds = %do.body55
  %62 = load i8*, i8** %__mptr53, align 8, !dbg !7926
  %add.ptr58 = getelementptr i8, i8* %62, i64 0, !dbg !7926
  %63 = bitcast i8* %add.ptr58 to %struct.pci_dev_resource*, !dbg !7926
  store %struct.pci_dev_resource* %63, %struct.pci_dev_resource** %tmp57, align 8, !dbg !7927
  %64 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp57, align 8, !dbg !7926
  store %struct.pci_dev_resource* %64, %struct.pci_dev_resource** %dev_res2, align 8, !dbg !7929
  br label %for.cond59, !dbg !7929

for.cond59:                                       ; preds = %do.end77, %do.end56
  %65 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res2, align 8, !dbg !7930
  %list60 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %65, i32 0, i32 0, !dbg !7930
  %66 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7930
  %cmp61 = icmp eq %struct.list_head* %list60, %66, !dbg !7930
  %lnot62 = xor i1 %cmp61, true, !dbg !7930
  br i1 %lnot62, label %for.body63, label %for.end80, !dbg !7929

for.body63:                                       ; preds = %for.cond59
  %67 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res2, align 8, !dbg !7932
  %dev64 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %67, i32 0, i32 2, !dbg !7934
  %68 = load %struct.pci_dev*, %struct.pci_dev** %dev64, align 8, !dbg !7934
  %69 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res2, align 8, !dbg !7935
  %res65 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %69, i32 0, i32 1, !dbg !7936
  %70 = load %struct.resource*, %struct.resource** %res65, align 8, !dbg !7936
  %call66 = call i64 @pci_resource_alignment(%struct.pci_dev* %68, %struct.resource* %70) #11, !dbg !7937
  store i64 %call66, i64* %align, align 8, !dbg !7938
  %71 = load i64, i64* %add_align, align 8, !dbg !7939
  %72 = load i64, i64* %align, align 8, !dbg !7941
  %cmp67 = icmp ugt i64 %71, %72, !dbg !7942
  br i1 %cmp67, label %if.then68, label %if.end71, !dbg !7943

if.then68:                                        ; preds = %for.body63
  %73 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7944
  %list69 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %73, i32 0, i32 0, !dbg !7946
  %74 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res2, align 8, !dbg !7947
  %list70 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %74, i32 0, i32 0, !dbg !7948
  call void @list_move_tail(%struct.list_head* %list69, %struct.list_head* %list70) #11, !dbg !7949
  br label %for.end80, !dbg !7950

if.end71:                                         ; preds = %for.body63
  br label %for.inc72, !dbg !7951

for.inc72:                                        ; preds = %if.end71
  call void @llvm.dbg.declare(metadata i8** %__mptr73, metadata !7952, metadata !DIExpression()), !dbg !7954
  %75 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res2, align 8, !dbg !7954
  %list74 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %75, i32 0, i32 0, !dbg !7954
  %next75 = getelementptr inbounds %struct.list_head, %struct.list_head* %list74, i32 0, i32 0, !dbg !7954
  %76 = load %struct.list_head*, %struct.list_head** %next75, align 8, !dbg !7954
  %77 = bitcast %struct.list_head* %76 to i8*, !dbg !7954
  store i8* %77, i8** %__mptr73, align 8, !dbg !7954
  br label %do.body76, !dbg !7954

do.body76:                                        ; preds = %for.inc72
  br label %do.end77, !dbg !7955

do.end77:                                         ; preds = %do.body76
  %78 = load i8*, i8** %__mptr73, align 8, !dbg !7954
  %add.ptr79 = getelementptr i8, i8* %78, i64 0, !dbg !7954
  %79 = bitcast i8* %add.ptr79 to %struct.pci_dev_resource*, !dbg !7954
  store %struct.pci_dev_resource* %79, %struct.pci_dev_resource** %tmp78, align 8, !dbg !7955
  %80 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp78, align 8, !dbg !7954
  store %struct.pci_dev_resource* %80, %struct.pci_dev_resource** %dev_res2, align 8, !dbg !7930
  br label %for.cond59, !dbg !7930, !llvm.loop !7957

for.end80:                                        ; preds = %if.then68, %for.cond59
  br label %if.end81, !dbg !7959

if.end81:                                         ; preds = %for.end80, %if.end40
  br label %for.inc82, !dbg !7960

for.inc82:                                        ; preds = %if.end81, %if.then39
  %81 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp_res, align 8, !dbg !7874
  store %struct.pci_dev_resource* %81, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7874
  call void @llvm.dbg.declare(metadata i8** %__mptr83, metadata !7961, metadata !DIExpression()), !dbg !7963
  %82 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp_res, align 8, !dbg !7963
  %list84 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %82, i32 0, i32 0, !dbg !7963
  %next85 = getelementptr inbounds %struct.list_head, %struct.list_head* %list84, i32 0, i32 0, !dbg !7963
  %83 = load %struct.list_head*, %struct.list_head** %next85, align 8, !dbg !7963
  %84 = bitcast %struct.list_head* %83 to i8*, !dbg !7963
  store i8* %84, i8** %__mptr83, align 8, !dbg !7963
  br label %do.body86, !dbg !7963

do.body86:                                        ; preds = %for.inc82
  br label %do.end87, !dbg !7964

do.end87:                                         ; preds = %do.body86
  %85 = load i8*, i8** %__mptr83, align 8, !dbg !7963
  %add.ptr89 = getelementptr i8, i8* %85, i64 0, !dbg !7963
  %86 = bitcast i8* %add.ptr89 to %struct.pci_dev_resource*, !dbg !7963
  store %struct.pci_dev_resource* %86, %struct.pci_dev_resource** %tmp88, align 8, !dbg !7964
  %87 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp88, align 8, !dbg !7963
  store %struct.pci_dev_resource* %87, %struct.pci_dev_resource** %tmp_res, align 8, !dbg !7874
  br label %for.cond29, !dbg !7874, !llvm.loop !7966

for.end90:                                        ; preds = %for.cond29
  %88 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7968
  call void @assign_requested_resources_sorted(%struct.list_head* %88, %struct.list_head* %local_fail_head) #11, !dbg !7969
  %call91 = call i32 @list_empty(%struct.list_head* %local_fail_head) #11, !dbg !7970
  %tobool92 = icmp ne i32 %call91, 0, !dbg !7970
  br i1 %tobool92, label %if.then93, label %if.end115, !dbg !7972

if.then93:                                        ; preds = %for.end90
  call void @llvm.dbg.declare(metadata i8** %__mptr94, metadata !7973, metadata !DIExpression()), !dbg !7977
  %89 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7977
  %next95 = getelementptr inbounds %struct.list_head, %struct.list_head* %89, i32 0, i32 0, !dbg !7977
  %90 = load %struct.list_head*, %struct.list_head** %next95, align 8, !dbg !7977
  %91 = bitcast %struct.list_head* %90 to i8*, !dbg !7977
  store i8* %91, i8** %__mptr94, align 8, !dbg !7977
  br label %do.body96, !dbg !7977

do.body96:                                        ; preds = %if.then93
  br label %do.end97, !dbg !7978

do.end97:                                         ; preds = %do.body96
  %92 = load i8*, i8** %__mptr94, align 8, !dbg !7977
  %add.ptr99 = getelementptr i8, i8* %92, i64 0, !dbg !7977
  %93 = bitcast i8* %add.ptr99 to %struct.pci_dev_resource*, !dbg !7977
  store %struct.pci_dev_resource* %93, %struct.pci_dev_resource** %tmp98, align 8, !dbg !7978
  %94 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp98, align 8, !dbg !7977
  store %struct.pci_dev_resource* %94, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7980
  br label %for.cond100, !dbg !7980

for.cond100:                                      ; preds = %do.end111, %do.end97
  %95 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7981
  %list101 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %95, i32 0, i32 0, !dbg !7981
  %96 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7981
  %cmp102 = icmp eq %struct.list_head* %list101, %96, !dbg !7981
  %lnot103 = xor i1 %cmp102, true, !dbg !7981
  br i1 %lnot103, label %for.body104, label %for.end114, !dbg !7980

for.body104:                                      ; preds = %for.cond100
  %97 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !7983
  %98 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7984
  %res105 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %98, i32 0, i32 1, !dbg !7985
  %99 = load %struct.resource*, %struct.resource** %res105, align 8, !dbg !7985
  call void @remove_from_list(%struct.list_head* %97, %struct.resource* %99) #11, !dbg !7986
  br label %for.inc106, !dbg !7986

for.inc106:                                       ; preds = %for.body104
  call void @llvm.dbg.declare(metadata i8** %__mptr107, metadata !7987, metadata !DIExpression()), !dbg !7989
  %100 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7989
  %list108 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %100, i32 0, i32 0, !dbg !7989
  %next109 = getelementptr inbounds %struct.list_head, %struct.list_head* %list108, i32 0, i32 0, !dbg !7989
  %101 = load %struct.list_head*, %struct.list_head** %next109, align 8, !dbg !7989
  %102 = bitcast %struct.list_head* %101 to i8*, !dbg !7989
  store i8* %102, i8** %__mptr107, align 8, !dbg !7989
  br label %do.body110, !dbg !7989

do.body110:                                       ; preds = %for.inc106
  br label %do.end111, !dbg !7990

do.end111:                                        ; preds = %do.body110
  %103 = load i8*, i8** %__mptr107, align 8, !dbg !7989
  %add.ptr113 = getelementptr i8, i8* %103, i64 0, !dbg !7989
  %104 = bitcast i8* %add.ptr113 to %struct.pci_dev_resource*, !dbg !7989
  store %struct.pci_dev_resource* %104, %struct.pci_dev_resource** %tmp112, align 8, !dbg !7990
  %105 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp112, align 8, !dbg !7989
  store %struct.pci_dev_resource* %105, %struct.pci_dev_resource** %dev_res, align 8, !dbg !7981
  br label %for.cond100, !dbg !7981, !llvm.loop !7992

for.end114:                                       ; preds = %for.cond100
  call void @free_list(%struct.list_head* %save_head) #11, !dbg !7994
  %106 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7995
  call void @free_list(%struct.list_head* %106) #11, !dbg !7996
  br label %return, !dbg !7997

if.end115:                                        ; preds = %for.end90
  %call116 = call i64 @pci_fail_res_type_mask(%struct.list_head* %local_fail_head) #11, !dbg !7998
  store i64 %call116, i64* %fail_type, align 8, !dbg !7999
  call void @llvm.dbg.declare(metadata i8** %__mptr117, metadata !8000, metadata !DIExpression()), !dbg !8003
  %107 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8003
  %next118 = getelementptr inbounds %struct.list_head, %struct.list_head* %107, i32 0, i32 0, !dbg !8003
  %108 = load %struct.list_head*, %struct.list_head** %next118, align 8, !dbg !8003
  %109 = bitcast %struct.list_head* %108 to i8*, !dbg !8003
  store i8* %109, i8** %__mptr117, align 8, !dbg !8003
  br label %do.body119, !dbg !8003

do.body119:                                       ; preds = %if.end115
  br label %do.end120, !dbg !8004

do.end120:                                        ; preds = %do.body119
  %110 = load i8*, i8** %__mptr117, align 8, !dbg !8003
  %add.ptr122 = getelementptr i8, i8* %110, i64 0, !dbg !8003
  %111 = bitcast i8* %add.ptr122 to %struct.pci_dev_resource*, !dbg !8003
  store %struct.pci_dev_resource* %111, %struct.pci_dev_resource** %tmp121, align 8, !dbg !8004
  %112 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp121, align 8, !dbg !8003
  store %struct.pci_dev_resource* %112, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8006
  call void @llvm.dbg.declare(metadata i8** %__mptr123, metadata !8007, metadata !DIExpression()), !dbg !8009
  %113 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8009
  %list124 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %113, i32 0, i32 0, !dbg !8009
  %next125 = getelementptr inbounds %struct.list_head, %struct.list_head* %list124, i32 0, i32 0, !dbg !8009
  %114 = load %struct.list_head*, %struct.list_head** %next125, align 8, !dbg !8009
  %115 = bitcast %struct.list_head* %114 to i8*, !dbg !8009
  store i8* %115, i8** %__mptr123, align 8, !dbg !8009
  br label %do.body126, !dbg !8009

do.body126:                                       ; preds = %do.end120
  br label %do.end127, !dbg !8010

do.end127:                                        ; preds = %do.body126
  %116 = load i8*, i8** %__mptr123, align 8, !dbg !8009
  %add.ptr129 = getelementptr i8, i8* %116, i64 0, !dbg !8009
  %117 = bitcast i8* %add.ptr129 to %struct.pci_dev_resource*, !dbg !8009
  store %struct.pci_dev_resource* %117, %struct.pci_dev_resource** %tmp128, align 8, !dbg !8010
  %118 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp128, align 8, !dbg !8009
  store %struct.pci_dev_resource* %118, %struct.pci_dev_resource** %tmp_res, align 8, !dbg !8006
  br label %for.cond130, !dbg !8006

for.cond130:                                      ; preds = %do.end149, %do.end127
  %119 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8012
  %list131 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %119, i32 0, i32 0, !dbg !8012
  %120 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8012
  %cmp132 = icmp eq %struct.list_head* %list131, %120, !dbg !8012
  %lnot133 = xor i1 %cmp132, true, !dbg !8012
  br i1 %lnot133, label %for.body134, label %for.end152, !dbg !8006

for.body134:                                      ; preds = %for.cond130
  %121 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8014
  %res135 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %121, i32 0, i32 1, !dbg !8016
  %122 = load %struct.resource*, %struct.resource** %res135, align 8, !dbg !8016
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %122, i32 0, i32 5, !dbg !8017
  %123 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !8017
  %tobool136 = icmp ne %struct.resource* %123, null, !dbg !8014
  br i1 %tobool136, label %land.lhs.true, label %if.end143, !dbg !8018

land.lhs.true:                                    ; preds = %for.body134
  %124 = load i64, i64* %fail_type, align 8, !dbg !8019
  %125 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8020
  %res137 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %125, i32 0, i32 1, !dbg !8021
  %126 = load %struct.resource*, %struct.resource** %res137, align 8, !dbg !8021
  %call138 = call zeroext i1 @pci_need_to_release(i64 %124, %struct.resource* %126) #11, !dbg !8022
  br i1 %call138, label %if.end143, label %if.then139, !dbg !8023

if.then139:                                       ; preds = %land.lhs.true
  %127 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !8024
  %128 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8026
  %res140 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %128, i32 0, i32 1, !dbg !8027
  %129 = load %struct.resource*, %struct.resource** %res140, align 8, !dbg !8027
  call void @remove_from_list(%struct.list_head* %127, %struct.resource* %129) #11, !dbg !8028
  %130 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8029
  %res141 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %130, i32 0, i32 1, !dbg !8030
  %131 = load %struct.resource*, %struct.resource** %res141, align 8, !dbg !8030
  call void @remove_from_list(%struct.list_head* %save_head, %struct.resource* %131) #11, !dbg !8031
  %132 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8032
  %list142 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %132, i32 0, i32 0, !dbg !8033
  call void @list_del(%struct.list_head* %list142) #11, !dbg !8034
  %133 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8035
  %134 = bitcast %struct.pci_dev_resource* %133 to i8*, !dbg !8035
  call void @kfree(i8* %134) #11, !dbg !8036
  br label %if.end143, !dbg !8037

if.end143:                                        ; preds = %if.then139, %land.lhs.true, %for.body134
  br label %for.inc144, !dbg !8038

for.inc144:                                       ; preds = %if.end143
  %135 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp_res, align 8, !dbg !8012
  store %struct.pci_dev_resource* %135, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8012
  call void @llvm.dbg.declare(metadata i8** %__mptr145, metadata !8039, metadata !DIExpression()), !dbg !8041
  %136 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp_res, align 8, !dbg !8041
  %list146 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %136, i32 0, i32 0, !dbg !8041
  %next147 = getelementptr inbounds %struct.list_head, %struct.list_head* %list146, i32 0, i32 0, !dbg !8041
  %137 = load %struct.list_head*, %struct.list_head** %next147, align 8, !dbg !8041
  %138 = bitcast %struct.list_head* %137 to i8*, !dbg !8041
  store i8* %138, i8** %__mptr145, align 8, !dbg !8041
  br label %do.body148, !dbg !8041

do.body148:                                       ; preds = %for.inc144
  br label %do.end149, !dbg !8042

do.end149:                                        ; preds = %do.body148
  %139 = load i8*, i8** %__mptr145, align 8, !dbg !8041
  %add.ptr151 = getelementptr i8, i8* %139, i64 0, !dbg !8041
  %140 = bitcast i8* %add.ptr151 to %struct.pci_dev_resource*, !dbg !8041
  store %struct.pci_dev_resource* %140, %struct.pci_dev_resource** %tmp150, align 8, !dbg !8042
  %141 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp150, align 8, !dbg !8041
  store %struct.pci_dev_resource* %141, %struct.pci_dev_resource** %tmp_res, align 8, !dbg !8012
  br label %for.cond130, !dbg !8012, !llvm.loop !8044

for.end152:                                       ; preds = %for.cond130
  call void @free_list(%struct.list_head* %local_fail_head) #11, !dbg !8046
  call void @llvm.dbg.declare(metadata i8** %__mptr153, metadata !8047, metadata !DIExpression()), !dbg !8050
  %142 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8050
  %next154 = getelementptr inbounds %struct.list_head, %struct.list_head* %142, i32 0, i32 0, !dbg !8050
  %143 = load %struct.list_head*, %struct.list_head** %next154, align 8, !dbg !8050
  %144 = bitcast %struct.list_head* %143 to i8*, !dbg !8050
  store i8* %144, i8** %__mptr153, align 8, !dbg !8050
  br label %do.body155, !dbg !8050

do.body155:                                       ; preds = %for.end152
  br label %do.end156, !dbg !8051

do.end156:                                        ; preds = %do.body155
  %145 = load i8*, i8** %__mptr153, align 8, !dbg !8050
  %add.ptr158 = getelementptr i8, i8* %145, i64 0, !dbg !8050
  %146 = bitcast i8* %add.ptr158 to %struct.pci_dev_resource*, !dbg !8050
  store %struct.pci_dev_resource* %146, %struct.pci_dev_resource** %tmp157, align 8, !dbg !8051
  %147 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp157, align 8, !dbg !8050
  store %struct.pci_dev_resource* %147, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8053
  br label %for.cond159, !dbg !8053

for.cond159:                                      ; preds = %do.end176, %do.end156
  %148 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8054
  %list160 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %148, i32 0, i32 0, !dbg !8054
  %149 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8054
  %cmp161 = icmp eq %struct.list_head* %list160, %149, !dbg !8054
  %lnot162 = xor i1 %cmp161, true, !dbg !8054
  br i1 %lnot162, label %for.body163, label %for.end179, !dbg !8053

for.body163:                                      ; preds = %for.cond159
  %150 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8056
  %res164 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %150, i32 0, i32 1, !dbg !8058
  %151 = load %struct.resource*, %struct.resource** %res164, align 8, !dbg !8058
  %parent165 = getelementptr inbounds %struct.resource, %struct.resource* %151, i32 0, i32 5, !dbg !8059
  %152 = load %struct.resource*, %struct.resource** %parent165, align 8, !dbg !8059
  %tobool166 = icmp ne %struct.resource* %152, null, !dbg !8056
  br i1 %tobool166, label %if.then167, label %if.end170, !dbg !8060

if.then167:                                       ; preds = %for.body163
  %153 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8061
  %res168 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %153, i32 0, i32 1, !dbg !8062
  %154 = load %struct.resource*, %struct.resource** %res168, align 8, !dbg !8062
  %call169 = call i32 @release_resource(%struct.resource* %154) #11, !dbg !8063
  br label %if.end170, !dbg !8063

if.end170:                                        ; preds = %if.then167, %for.body163
  br label %for.inc171, !dbg !8059

for.inc171:                                       ; preds = %if.end170
  call void @llvm.dbg.declare(metadata i8** %__mptr172, metadata !8064, metadata !DIExpression()), !dbg !8066
  %155 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8066
  %list173 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %155, i32 0, i32 0, !dbg !8066
  %next174 = getelementptr inbounds %struct.list_head, %struct.list_head* %list173, i32 0, i32 0, !dbg !8066
  %156 = load %struct.list_head*, %struct.list_head** %next174, align 8, !dbg !8066
  %157 = bitcast %struct.list_head* %156 to i8*, !dbg !8066
  store i8* %157, i8** %__mptr172, align 8, !dbg !8066
  br label %do.body175, !dbg !8066

do.body175:                                       ; preds = %for.inc171
  br label %do.end176, !dbg !8067

do.end176:                                        ; preds = %do.body175
  %158 = load i8*, i8** %__mptr172, align 8, !dbg !8066
  %add.ptr178 = getelementptr i8, i8* %158, i64 0, !dbg !8066
  %159 = bitcast i8* %add.ptr178 to %struct.pci_dev_resource*, !dbg !8066
  store %struct.pci_dev_resource* %159, %struct.pci_dev_resource** %tmp177, align 8, !dbg !8067
  %160 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp177, align 8, !dbg !8066
  store %struct.pci_dev_resource* %160, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8054
  br label %for.cond159, !dbg !8054, !llvm.loop !8069

for.end179:                                       ; preds = %for.cond159
  call void @llvm.dbg.declare(metadata i8** %__mptr180, metadata !8071, metadata !DIExpression()), !dbg !8074
  %next181 = getelementptr inbounds %struct.list_head, %struct.list_head* %save_head, i32 0, i32 0, !dbg !8074
  %161 = load %struct.list_head*, %struct.list_head** %next181, align 8, !dbg !8074
  %162 = bitcast %struct.list_head* %161 to i8*, !dbg !8074
  store i8* %162, i8** %__mptr180, align 8, !dbg !8074
  br label %do.body182, !dbg !8074

do.body182:                                       ; preds = %for.end179
  br label %do.end183, !dbg !8075

do.end183:                                        ; preds = %do.body182
  %163 = load i8*, i8** %__mptr180, align 8, !dbg !8074
  %add.ptr185 = getelementptr i8, i8* %163, i64 0, !dbg !8074
  %164 = bitcast i8* %add.ptr185 to %struct.pci_dev_resource*, !dbg !8074
  store %struct.pci_dev_resource* %164, %struct.pci_dev_resource** %tmp184, align 8, !dbg !8075
  %165 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp184, align 8, !dbg !8074
  store %struct.pci_dev_resource* %165, %struct.pci_dev_resource** %save_res, align 8, !dbg !8077
  br label %for.cond186, !dbg !8077

for.cond186:                                      ; preds = %do.end204, %do.end183
  %166 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %save_res, align 8, !dbg !8078
  %list187 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %166, i32 0, i32 0, !dbg !8078
  %cmp188 = icmp eq %struct.list_head* %list187, %save_head, !dbg !8078
  %lnot189 = xor i1 %cmp188, true, !dbg !8078
  br i1 %lnot189, label %for.body190, label %for.end207, !dbg !8077

for.body190:                                      ; preds = %for.cond186
  call void @llvm.dbg.declare(metadata %struct.resource** %res191, metadata !8080, metadata !DIExpression()), !dbg !8082
  %167 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %save_res, align 8, !dbg !8083
  %res192 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %167, i32 0, i32 1, !dbg !8084
  %168 = load %struct.resource*, %struct.resource** %res192, align 8, !dbg !8084
  store %struct.resource* %168, %struct.resource** %res191, align 8, !dbg !8082
  %169 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %save_res, align 8, !dbg !8085
  %start193 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %169, i32 0, i32 3, !dbg !8086
  %170 = load i64, i64* %start193, align 8, !dbg !8086
  %171 = load %struct.resource*, %struct.resource** %res191, align 8, !dbg !8087
  %start194 = getelementptr inbounds %struct.resource, %struct.resource* %171, i32 0, i32 0, !dbg !8088
  store i64 %170, i64* %start194, align 8, !dbg !8089
  %172 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %save_res, align 8, !dbg !8090
  %end195 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %172, i32 0, i32 4, !dbg !8091
  %173 = load i64, i64* %end195, align 8, !dbg !8091
  %174 = load %struct.resource*, %struct.resource** %res191, align 8, !dbg !8092
  %end196 = getelementptr inbounds %struct.resource, %struct.resource* %174, i32 0, i32 1, !dbg !8093
  store i64 %173, i64* %end196, align 8, !dbg !8094
  %175 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %save_res, align 8, !dbg !8095
  %flags197 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %175, i32 0, i32 7, !dbg !8096
  %176 = load i64, i64* %flags197, align 8, !dbg !8096
  %177 = load %struct.resource*, %struct.resource** %res191, align 8, !dbg !8097
  %flags198 = getelementptr inbounds %struct.resource, %struct.resource* %177, i32 0, i32 3, !dbg !8098
  store i64 %176, i64* %flags198, align 8, !dbg !8099
  br label %for.inc199, !dbg !8100

for.inc199:                                       ; preds = %for.body190
  call void @llvm.dbg.declare(metadata i8** %__mptr200, metadata !8101, metadata !DIExpression()), !dbg !8103
  %178 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %save_res, align 8, !dbg !8103
  %list201 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %178, i32 0, i32 0, !dbg !8103
  %next202 = getelementptr inbounds %struct.list_head, %struct.list_head* %list201, i32 0, i32 0, !dbg !8103
  %179 = load %struct.list_head*, %struct.list_head** %next202, align 8, !dbg !8103
  %180 = bitcast %struct.list_head* %179 to i8*, !dbg !8103
  store i8* %180, i8** %__mptr200, align 8, !dbg !8103
  br label %do.body203, !dbg !8103

do.body203:                                       ; preds = %for.inc199
  br label %do.end204, !dbg !8104

do.end204:                                        ; preds = %do.body203
  %181 = load i8*, i8** %__mptr200, align 8, !dbg !8103
  %add.ptr206 = getelementptr i8, i8* %181, i64 0, !dbg !8103
  %182 = bitcast i8* %add.ptr206 to %struct.pci_dev_resource*, !dbg !8103
  store %struct.pci_dev_resource* %182, %struct.pci_dev_resource** %tmp205, align 8, !dbg !8104
  %183 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp205, align 8, !dbg !8103
  store %struct.pci_dev_resource* %183, %struct.pci_dev_resource** %save_res, align 8, !dbg !8078
  br label %for.cond186, !dbg !8078, !llvm.loop !8106

for.end207:                                       ; preds = %for.cond186
  call void @free_list(%struct.list_head* %save_head) #11, !dbg !8108
  br label %requested_and_reassign, !dbg !8108

requested_and_reassign:                           ; preds = %for.end207, %if.then7, %if.then
  call void @llvm.dbg.label(metadata !8109), !dbg !8110
  %184 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8111
  %185 = load %struct.list_head*, %struct.list_head** %fail_head.addr, align 8, !dbg !8112
  call void @assign_requested_resources_sorted(%struct.list_head* %184, %struct.list_head* %185) #11, !dbg !8113
  %186 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !8114
  %tobool208 = icmp ne %struct.list_head* %186, null, !dbg !8114
  br i1 %tobool208, label %if.then209, label %if.end210, !dbg !8116

if.then209:                                       ; preds = %requested_and_reassign
  %187 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !8117
  %188 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8118
  call void @reassign_resources_sorted(%struct.list_head* %187, %struct.list_head* %188) #11, !dbg !8119
  br label %if.end210, !dbg !8119

if.end210:                                        ; preds = %if.then209, %requested_and_reassign
  %189 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8120
  call void @free_list(%struct.list_head* %189) #11, !dbg !8121
  br label %return, !dbg !8122

return:                                           ; preds = %if.end210, %for.end114
  ret void, !dbg !8122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pdev_sort_resources(%struct.pci_dev* %dev, %struct.list_head* %head) #0 !dbg !8123 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  %i = alloca i32, align 4
  %r = alloca %struct.resource*, align 8
  %dev_res = alloca %struct.pci_dev_resource*, align 8
  %tmp = alloca %struct.pci_dev_resource*, align 8
  %r_align = alloca i64, align 8
  %n = alloca %struct.list_head*, align 8
  %__mptr = alloca i8*, align 8
  %tmp15 = alloca %struct.pci_dev_resource*, align 8
  %align = alloca i64, align 8
  %__mptr26 = alloca i8*, align 8
  %tmp31 = alloca %struct.pci_dev_resource*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8124, metadata !DIExpression()), !dbg !8125
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8126, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8128, metadata !DIExpression()), !dbg !8129
  store i32 0, i32* %i, align 4, !dbg !8130
  br label %for.cond, !dbg !8132

for.cond:                                         ; preds = %for.inc34, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8133
  %cmp = icmp slt i32 %0, 17, !dbg !8135
  br i1 %cmp, label %for.body, label %for.end35, !dbg !8136

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !8137, metadata !DIExpression()), !dbg !8139
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %dev_res, metadata !8140, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %tmp, metadata !8142, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.declare(metadata i64* %r_align, metadata !8144, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.declare(metadata %struct.list_head** %n, metadata !8146, metadata !DIExpression()), !dbg !8147
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8148
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 44, !dbg !8149
  %2 = load i32, i32* %i, align 4, !dbg !8150
  %idxprom = sext i32 %2 to i64, !dbg !8148
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !8148
  store %struct.resource* %arrayidx, %struct.resource** %r, align 8, !dbg !8151
  %3 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !8152
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 3, !dbg !8154
  %4 = load i64, i64* %flags, align 8, !dbg !8154
  %and = and i64 %4, 16, !dbg !8155
  %tobool = icmp ne i64 %and, 0, !dbg !8155
  br i1 %tobool, label %if.then, label %if.end, !dbg !8156

if.then:                                          ; preds = %for.body
  br label %for.inc34, !dbg !8157

if.end:                                           ; preds = %for.body
  %5 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !8158
  %flags1 = getelementptr inbounds %struct.resource, %struct.resource* %5, i32 0, i32 3, !dbg !8160
  %6 = load i64, i64* %flags1, align 8, !dbg !8160
  %tobool2 = icmp ne i64 %6, 0, !dbg !8161
  br i1 %tobool2, label %lor.lhs.false, label %if.then4, !dbg !8162

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !8163
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %7, i32 0, i32 5, !dbg !8164
  %8 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !8164
  %tobool3 = icmp ne %struct.resource* %8, null, !dbg !8163
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8165

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  br label %for.inc34, !dbg !8166

if.end5:                                          ; preds = %lor.lhs.false
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8167
  %10 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !8168
  %call = call i64 @pci_resource_alignment(%struct.pci_dev* %9, %struct.resource* %10) #11, !dbg !8169
  store i64 %call, i64* %r_align, align 8, !dbg !8170
  %11 = load i64, i64* %r_align, align 8, !dbg !8171
  %tobool6 = icmp ne i64 %11, 0, !dbg !8171
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !8173

if.then7:                                         ; preds = %if.end5
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8174
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !8174
  %13 = load i32, i32* %i, align 4, !dbg !8174
  %14 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !8174
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0), i32 %13, %struct.resource* %14) #10, !dbg !8174
  br label %for.inc34, !dbg !8176

if.end9:                                          ; preds = %if.end5
  %call10 = call i8* @kzalloc(i64 72, i32 3264) #11, !dbg !8177
  %15 = bitcast i8* %call10 to %struct.pci_dev_resource*, !dbg !8177
  store %struct.pci_dev_resource* %15, %struct.pci_dev_resource** %tmp, align 8, !dbg !8178
  %16 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !8179
  %tobool11 = icmp ne %struct.pci_dev_resource* %16, null, !dbg !8179
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8181

if.then12:                                        ; preds = %if.end9
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.pdev_sort_resources, i64 0, i64 0)) #15, !dbg !8182
  unreachable, !dbg !8182

if.end13:                                         ; preds = %if.end9
  %17 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !8183
  %18 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !8184
  %res = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %18, i32 0, i32 1, !dbg !8185
  store %struct.resource* %17, %struct.resource** %res, align 8, !dbg !8186
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8187
  %20 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !8188
  %dev14 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %20, i32 0, i32 2, !dbg !8189
  store %struct.pci_dev* %19, %struct.pci_dev** %dev14, align 8, !dbg !8190
  %21 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8191
  store %struct.list_head* %21, %struct.list_head** %n, align 8, !dbg !8192
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8193, metadata !DIExpression()), !dbg !8196
  %22 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8196
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %22, i32 0, i32 0, !dbg !8196
  %23 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8196
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !8196
  store i8* %24, i8** %__mptr, align 8, !dbg !8196
  br label %do.body, !dbg !8196

do.body:                                          ; preds = %if.end13
  br label %do.end, !dbg !8197

do.end:                                           ; preds = %do.body
  %25 = load i8*, i8** %__mptr, align 8, !dbg !8196
  %add.ptr = getelementptr i8, i8* %25, i64 0, !dbg !8196
  %26 = bitcast i8* %add.ptr to %struct.pci_dev_resource*, !dbg !8196
  store %struct.pci_dev_resource* %26, %struct.pci_dev_resource** %tmp15, align 8, !dbg !8197
  %27 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp15, align 8, !dbg !8196
  store %struct.pci_dev_resource* %27, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8199
  br label %for.cond16, !dbg !8199

for.cond16:                                       ; preds = %do.end30, %do.end
  %28 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8200
  %list = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %28, i32 0, i32 0, !dbg !8200
  %29 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8200
  %cmp17 = icmp eq %struct.list_head* %list, %29, !dbg !8200
  %lnot = xor i1 %cmp17, true, !dbg !8200
  br i1 %lnot, label %for.body18, label %for.end, !dbg !8199

for.body18:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata i64* %align, metadata !8202, metadata !DIExpression()), !dbg !8204
  %30 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8205
  %dev19 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %30, i32 0, i32 2, !dbg !8206
  %31 = load %struct.pci_dev*, %struct.pci_dev** %dev19, align 8, !dbg !8206
  %32 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8207
  %res20 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %32, i32 0, i32 1, !dbg !8208
  %33 = load %struct.resource*, %struct.resource** %res20, align 8, !dbg !8208
  %call21 = call i64 @pci_resource_alignment(%struct.pci_dev* %31, %struct.resource* %33) #11, !dbg !8209
  store i64 %call21, i64* %align, align 8, !dbg !8210
  %34 = load i64, i64* %r_align, align 8, !dbg !8211
  %35 = load i64, i64* %align, align 8, !dbg !8213
  %cmp22 = icmp ugt i64 %34, %35, !dbg !8214
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !8215

if.then23:                                        ; preds = %for.body18
  %36 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8216
  %list24 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %36, i32 0, i32 0, !dbg !8218
  store %struct.list_head* %list24, %struct.list_head** %n, align 8, !dbg !8219
  br label %for.end, !dbg !8220

if.end25:                                         ; preds = %for.body18
  br label %for.inc, !dbg !8221

for.inc:                                          ; preds = %if.end25
  call void @llvm.dbg.declare(metadata i8** %__mptr26, metadata !8222, metadata !DIExpression()), !dbg !8224
  %37 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8224
  %list27 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %37, i32 0, i32 0, !dbg !8224
  %next28 = getelementptr inbounds %struct.list_head, %struct.list_head* %list27, i32 0, i32 0, !dbg !8224
  %38 = load %struct.list_head*, %struct.list_head** %next28, align 8, !dbg !8224
  %39 = bitcast %struct.list_head* %38 to i8*, !dbg !8224
  store i8* %39, i8** %__mptr26, align 8, !dbg !8224
  br label %do.body29, !dbg !8224

do.body29:                                        ; preds = %for.inc
  br label %do.end30, !dbg !8225

do.end30:                                         ; preds = %do.body29
  %40 = load i8*, i8** %__mptr26, align 8, !dbg !8224
  %add.ptr32 = getelementptr i8, i8* %40, i64 0, !dbg !8224
  %41 = bitcast i8* %add.ptr32 to %struct.pci_dev_resource*, !dbg !8224
  store %struct.pci_dev_resource* %41, %struct.pci_dev_resource** %tmp31, align 8, !dbg !8225
  %42 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp31, align 8, !dbg !8224
  store %struct.pci_dev_resource* %42, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8200
  br label %for.cond16, !dbg !8200, !llvm.loop !8227

for.end:                                          ; preds = %if.then23, %for.cond16
  %43 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !8229
  %list33 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %43, i32 0, i32 0, !dbg !8230
  %44 = load %struct.list_head*, %struct.list_head** %n, align 8, !dbg !8231
  call void @list_add_tail(%struct.list_head* %list33, %struct.list_head* %44) #11, !dbg !8232
  br label %for.inc34, !dbg !8233

for.inc34:                                        ; preds = %for.end, %if.then7, %if.then4, %if.then
  %45 = load i32, i32* %i, align 4, !dbg !8234
  %inc = add i32 %45, 1, !dbg !8234
  store i32 %inc, i32* %i, align 4, !dbg !8234
  br label %for.cond, !dbg !8235, !llvm.loop !8236

for.end35:                                        ; preds = %for.cond
  ret void, !dbg !8238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !8239 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8242, metadata !DIExpression()), !dbg !8246
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8252, metadata !DIExpression()), !dbg !8253
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8254, metadata !DIExpression()), !dbg !8255
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8256, metadata !DIExpression()), !dbg !8257
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8258, metadata !DIExpression()), !dbg !8262
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8264, metadata !DIExpression()), !dbg !8268
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8270, metadata !DIExpression()), !dbg !8274
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8279, metadata !DIExpression()), !dbg !8280
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8281, metadata !DIExpression()), !dbg !8282
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8283, metadata !DIExpression()), !dbg !8284
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8285, metadata !DIExpression()), !dbg !8286
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8287, metadata !DIExpression()), !dbg !8288
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8289, metadata !DIExpression()), !dbg !8290
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8291, metadata !DIExpression()), !dbg !8292
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8293, metadata !DIExpression()), !dbg !8294
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8295, metadata !DIExpression()), !dbg !8296
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8297, metadata !DIExpression()), !dbg !8298
  %0 = load i64, i64* %size.addr, align 8, !dbg !8299
  %1 = load i32, i32* %flags.addr, align 4, !dbg !8300
  %or = or i32 %1, 256, !dbg !8301
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !8302
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #14, !dbg !8303
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !8304

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8305
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !8306
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8307

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !8308
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !8309
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8310
  %call.i.i = call i32 @get_order(i64 %7) #16, !dbg !8311
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8288
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !8312
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8313
  %10 = load i32, i32* %order.i.i, align 4, !dbg !8314
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8315
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8316
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8317
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !8318
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8318
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8318
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8318
  call void @llvm.assume(i1 %maskcond.i.i.i) #14, !dbg !8318
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8319
  br label %kmalloc.exit, !dbg !8319

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !8320
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8321
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !8321
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8323

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8324
  br label %kmalloc_index.exit.i, !dbg !8324

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8325
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !8327
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8328

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8329
  br label %kmalloc_index.exit.i, !dbg !8329

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8330
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !8332
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8333

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8334
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !8335
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8336

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8337
  br label %kmalloc_index.exit.i, !dbg !8337

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8338
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !8340
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8341

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8342
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !8343
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8344

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8345
  br label %kmalloc_index.exit.i, !dbg !8345

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8346
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !8348
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8349

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8350
  br label %kmalloc_index.exit.i, !dbg !8350

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8351
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !8353
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8354

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8355
  br label %kmalloc_index.exit.i, !dbg !8355

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8356
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !8358
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8359

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8360
  br label %kmalloc_index.exit.i, !dbg !8360

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8361
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !8363
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8364

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8365
  br label %kmalloc_index.exit.i, !dbg !8365

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8366
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !8368
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8369

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8370
  br label %kmalloc_index.exit.i, !dbg !8370

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8371
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !8373
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8374

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8375
  br label %kmalloc_index.exit.i, !dbg !8375

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8376
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !8378
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8379

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8380
  br label %kmalloc_index.exit.i, !dbg !8380

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8381
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !8383
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8384

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8385
  br label %kmalloc_index.exit.i, !dbg !8385

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8386
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !8388
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8389

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8390
  br label %kmalloc_index.exit.i, !dbg !8390

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8391
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !8393
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8394

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8395
  br label %kmalloc_index.exit.i, !dbg !8395

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8396
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !8398
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8399

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8400
  br label %kmalloc_index.exit.i, !dbg !8400

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8401
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !8403
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8404

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8405
  br label %kmalloc_index.exit.i, !dbg !8405

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8406
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !8408
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8409

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8410
  br label %kmalloc_index.exit.i, !dbg !8410

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8411
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !8413
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8414

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8415
  br label %kmalloc_index.exit.i, !dbg !8415

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8416
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !8418
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8419

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8420
  br label %kmalloc_index.exit.i, !dbg !8420

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8421
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !8423
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8424

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8425
  br label %kmalloc_index.exit.i, !dbg !8425

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8426
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !8428
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8429

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8430
  br label %kmalloc_index.exit.i, !dbg !8430

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8431
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !8433
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8434

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8435
  br label %kmalloc_index.exit.i, !dbg !8435

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8436
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !8438
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8439

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8440
  br label %kmalloc_index.exit.i, !dbg !8440

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8441
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !8443
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8444

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8445
  br label %kmalloc_index.exit.i, !dbg !8445

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8446
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !8448
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8449

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8450
  br label %kmalloc_index.exit.i, !dbg !8450

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8451
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !8453
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8454

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8455
  br label %kmalloc_index.exit.i, !dbg !8455

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8456
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !8458
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8459

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8460
  br label %kmalloc_index.exit.i, !dbg !8460

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8461
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !8463
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8464

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8465
  br label %kmalloc_index.exit.i, !dbg !8465

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), i32 382, i32 0, i64 12) #14, !dbg !8466, !srcloc !8469
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #14, !dbg !8470, !srcloc !8473
  unreachable, !dbg !8474

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !8475
  store i32 %45, i32* %index.i, align 4, !dbg !8476
  %46 = load i32, i32* %index.i, align 4, !dbg !8477
  %tobool.i = icmp ne i32 %46, 0, !dbg !8477
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8479

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8480
  br label %kmalloc.exit, !dbg !8480

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !8481
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8482
  %and.i.i = and i32 %48, 17, !dbg !8482
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8482
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8482
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8482
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8482
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8484

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8485
  br label %kmalloc_type.exit.i, !dbg !8485

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8486
  %and2.i.i = and i32 %49, 1, !dbg !8487
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8486
  %50 = zext i1 %tobool3.i.i to i64, !dbg !8486
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8486
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8488
  br label %kmalloc_type.exit.i, !dbg !8488

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !8489
  %idxprom.i = zext i32 %51 to i64, !dbg !8490
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8490
  %52 = load i32, i32* %index.i, align 4, !dbg !8491
  %idxprom6.i = zext i32 %52 to i64, !dbg !8490
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8490
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8490
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !8492
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !8493
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8494
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8495
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !8496
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8496
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8496
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8496
  call void @llvm.assume(i1 %maskcond.i.i) #14, !dbg !8496
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8257
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8497
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !8498
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8499
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8500
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !8501
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8502
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !8503
  store i8* %62, i8** %retval.i, align 8, !dbg !8504
  br label %kmalloc.exit, !dbg !8504

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !8505
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !8506
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !8507
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8507
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8507
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8507
  call void @llvm.assume(i1 %maskcond.i) #14, !dbg !8507
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8508
  br label %kmalloc.exit, !dbg !8508

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !8509
  ret i8* %65, !dbg !8510
}

; Function Attrs: cold noredzone noreturn
declare dso_local void @panic(i8*, ...) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !8511 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8514, metadata !DIExpression()), !dbg !8515
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8516, metadata !DIExpression()), !dbg !8517
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8518
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8519
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8520
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8520
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8521
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !8522
  ret void, !dbg !8523
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #7

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #8

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #9 !dbg !8524 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8528, metadata !DIExpression()), !dbg !8532
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8534, metadata !DIExpression()), !dbg !8535
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8536, metadata !DIExpression()), !dbg !8537
  %0 = load i64, i64* %size.addr, align 8, !dbg !8538
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !8540
  br i1 %1, label %if.then, label %if.end447, !dbg !8541

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8542
  %tobool = icmp ne i64 %2, 0, !dbg !8542
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8545

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !8546
  br label %return, !dbg !8546

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !8547
  %cmp = icmp ult i64 %3, 4096, !dbg !8549
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8550

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8551
  br label %return, !dbg !8551

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub = sub i64 %4, 1, !dbg !8552
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !8552
  br i1 %5, label %cond.true, label %cond.false442, !dbg !8552

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub4 = sub i64 %6, 1, !dbg !8552
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !8552
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !8552

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub6 = sub i64 %8, 1, !dbg !8552
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !8552
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !8552

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !8552

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub9 = sub i64 %9, 1, !dbg !8552
  %and = and i64 %sub9, -9223372036854775808, !dbg !8552
  %tobool10 = icmp ne i64 %and, 0, !dbg !8552
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !8552

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !8552

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub13 = sub i64 %10, 1, !dbg !8552
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !8552
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8552
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !8552

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !8552

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub18 = sub i64 %11, 1, !dbg !8552
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !8552
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8552
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8552

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !8552

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub23 = sub i64 %12, 1, !dbg !8552
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !8552
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8552
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8552

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !8552

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub28 = sub i64 %13, 1, !dbg !8552
  %and29 = and i64 %sub28, 576460752303423488, !dbg !8552
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8552
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !8552

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !8552

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub33 = sub i64 %14, 1, !dbg !8552
  %and34 = and i64 %sub33, 288230376151711744, !dbg !8552
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8552
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !8552

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !8552

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub38 = sub i64 %15, 1, !dbg !8552
  %and39 = and i64 %sub38, 144115188075855872, !dbg !8552
  %tobool40 = icmp ne i64 %and39, 0, !dbg !8552
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !8552

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !8552

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub43 = sub i64 %16, 1, !dbg !8552
  %and44 = and i64 %sub43, 72057594037927936, !dbg !8552
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8552
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !8552

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !8552

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub48 = sub i64 %17, 1, !dbg !8552
  %and49 = and i64 %sub48, 36028797018963968, !dbg !8552
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8552
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !8552

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !8552

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub53 = sub i64 %18, 1, !dbg !8552
  %and54 = and i64 %sub53, 18014398509481984, !dbg !8552
  %tobool55 = icmp ne i64 %and54, 0, !dbg !8552
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8552

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !8552

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub58 = sub i64 %19, 1, !dbg !8552
  %and59 = and i64 %sub58, 9007199254740992, !dbg !8552
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8552
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8552

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !8552

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub63 = sub i64 %20, 1, !dbg !8552
  %and64 = and i64 %sub63, 4503599627370496, !dbg !8552
  %tobool65 = icmp ne i64 %and64, 0, !dbg !8552
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !8552

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !8552

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub68 = sub i64 %21, 1, !dbg !8552
  %and69 = and i64 %sub68, 2251799813685248, !dbg !8552
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8552
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !8552

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !8552

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub73 = sub i64 %22, 1, !dbg !8552
  %and74 = and i64 %sub73, 1125899906842624, !dbg !8552
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8552
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !8552

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !8552

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub78 = sub i64 %23, 1, !dbg !8552
  %and79 = and i64 %sub78, 562949953421312, !dbg !8552
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8552
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8552

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !8552

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub83 = sub i64 %24, 1, !dbg !8552
  %and84 = and i64 %sub83, 281474976710656, !dbg !8552
  %tobool85 = icmp ne i64 %and84, 0, !dbg !8552
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !8552

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !8552

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub88 = sub i64 %25, 1, !dbg !8552
  %and89 = and i64 %sub88, 140737488355328, !dbg !8552
  %tobool90 = icmp ne i64 %and89, 0, !dbg !8552
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !8552

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !8552

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub93 = sub i64 %26, 1, !dbg !8552
  %and94 = and i64 %sub93, 70368744177664, !dbg !8552
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8552
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !8552

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !8552

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub98 = sub i64 %27, 1, !dbg !8552
  %and99 = and i64 %sub98, 35184372088832, !dbg !8552
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8552
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8552

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !8552

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub103 = sub i64 %28, 1, !dbg !8552
  %and104 = and i64 %sub103, 17592186044416, !dbg !8552
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8552
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !8552

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !8552

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub108 = sub i64 %29, 1, !dbg !8552
  %and109 = and i64 %sub108, 8796093022208, !dbg !8552
  %tobool110 = icmp ne i64 %and109, 0, !dbg !8552
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !8552

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !8552

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub113 = sub i64 %30, 1, !dbg !8552
  %and114 = and i64 %sub113, 4398046511104, !dbg !8552
  %tobool115 = icmp ne i64 %and114, 0, !dbg !8552
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !8552

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !8552

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub118 = sub i64 %31, 1, !dbg !8552
  %and119 = and i64 %sub118, 2199023255552, !dbg !8552
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8552
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8552

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !8552

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub123 = sub i64 %32, 1, !dbg !8552
  %and124 = and i64 %sub123, 1099511627776, !dbg !8552
  %tobool125 = icmp ne i64 %and124, 0, !dbg !8552
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !8552

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !8552

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub128 = sub i64 %33, 1, !dbg !8552
  %and129 = and i64 %sub128, 549755813888, !dbg !8552
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8552
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !8552

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !8552

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub133 = sub i64 %34, 1, !dbg !8552
  %and134 = and i64 %sub133, 274877906944, !dbg !8552
  %tobool135 = icmp ne i64 %and134, 0, !dbg !8552
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !8552

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !8552

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub138 = sub i64 %35, 1, !dbg !8552
  %and139 = and i64 %sub138, 137438953472, !dbg !8552
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8552
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8552

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !8552

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub143 = sub i64 %36, 1, !dbg !8552
  %and144 = and i64 %sub143, 68719476736, !dbg !8552
  %tobool145 = icmp ne i64 %and144, 0, !dbg !8552
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !8552

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !8552

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub148 = sub i64 %37, 1, !dbg !8552
  %and149 = and i64 %sub148, 34359738368, !dbg !8552
  %tobool150 = icmp ne i64 %and149, 0, !dbg !8552
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !8552

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !8552

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub153 = sub i64 %38, 1, !dbg !8552
  %and154 = and i64 %sub153, 17179869184, !dbg !8552
  %tobool155 = icmp ne i64 %and154, 0, !dbg !8552
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !8552

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !8552

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub158 = sub i64 %39, 1, !dbg !8552
  %and159 = and i64 %sub158, 8589934592, !dbg !8552
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8552
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8552

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !8552

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub163 = sub i64 %40, 1, !dbg !8552
  %and164 = and i64 %sub163, 4294967296, !dbg !8552
  %tobool165 = icmp ne i64 %and164, 0, !dbg !8552
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !8552

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !8552

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub168 = sub i64 %41, 1, !dbg !8552
  %and169 = and i64 %sub168, 2147483648, !dbg !8552
  %tobool170 = icmp ne i64 %and169, 0, !dbg !8552
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !8552

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !8552

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub173 = sub i64 %42, 1, !dbg !8552
  %and174 = and i64 %sub173, 1073741824, !dbg !8552
  %tobool175 = icmp ne i64 %and174, 0, !dbg !8552
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !8552

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !8552

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub178 = sub i64 %43, 1, !dbg !8552
  %and179 = and i64 %sub178, 536870912, !dbg !8552
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8552
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8552

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !8552

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub183 = sub i64 %44, 1, !dbg !8552
  %and184 = and i64 %sub183, 268435456, !dbg !8552
  %tobool185 = icmp ne i64 %and184, 0, !dbg !8552
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !8552

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !8552

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub188 = sub i64 %45, 1, !dbg !8552
  %and189 = and i64 %sub188, 134217728, !dbg !8552
  %tobool190 = icmp ne i64 %and189, 0, !dbg !8552
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !8552

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !8552

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub193 = sub i64 %46, 1, !dbg !8552
  %and194 = and i64 %sub193, 67108864, !dbg !8552
  %tobool195 = icmp ne i64 %and194, 0, !dbg !8552
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !8552

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !8552

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub198 = sub i64 %47, 1, !dbg !8552
  %and199 = and i64 %sub198, 33554432, !dbg !8552
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8552
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8552

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !8552

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub203 = sub i64 %48, 1, !dbg !8552
  %and204 = and i64 %sub203, 16777216, !dbg !8552
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8552
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !8552

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !8552

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub208 = sub i64 %49, 1, !dbg !8552
  %and209 = and i64 %sub208, 8388608, !dbg !8552
  %tobool210 = icmp ne i64 %and209, 0, !dbg !8552
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !8552

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !8552

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub213 = sub i64 %50, 1, !dbg !8552
  %and214 = and i64 %sub213, 4194304, !dbg !8552
  %tobool215 = icmp ne i64 %and214, 0, !dbg !8552
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !8552

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !8552

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub218 = sub i64 %51, 1, !dbg !8552
  %and219 = and i64 %sub218, 2097152, !dbg !8552
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8552
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8552

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !8552

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub223 = sub i64 %52, 1, !dbg !8552
  %and224 = and i64 %sub223, 1048576, !dbg !8552
  %tobool225 = icmp ne i64 %and224, 0, !dbg !8552
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !8552

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !8552

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub228 = sub i64 %53, 1, !dbg !8552
  %and229 = and i64 %sub228, 524288, !dbg !8552
  %tobool230 = icmp ne i64 %and229, 0, !dbg !8552
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !8552

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !8552

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub233 = sub i64 %54, 1, !dbg !8552
  %and234 = and i64 %sub233, 262144, !dbg !8552
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8552
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !8552

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !8552

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub238 = sub i64 %55, 1, !dbg !8552
  %and239 = and i64 %sub238, 131072, !dbg !8552
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8552
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8552

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !8552

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub243 = sub i64 %56, 1, !dbg !8552
  %and244 = and i64 %sub243, 65536, !dbg !8552
  %tobool245 = icmp ne i64 %and244, 0, !dbg !8552
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !8552

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !8552

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub248 = sub i64 %57, 1, !dbg !8552
  %and249 = and i64 %sub248, 32768, !dbg !8552
  %tobool250 = icmp ne i64 %and249, 0, !dbg !8552
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !8552

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !8552

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub253 = sub i64 %58, 1, !dbg !8552
  %and254 = and i64 %sub253, 16384, !dbg !8552
  %tobool255 = icmp ne i64 %and254, 0, !dbg !8552
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !8552

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !8552

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub258 = sub i64 %59, 1, !dbg !8552
  %and259 = and i64 %sub258, 8192, !dbg !8552
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8552
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8552

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !8552

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub263 = sub i64 %60, 1, !dbg !8552
  %and264 = and i64 %sub263, 4096, !dbg !8552
  %tobool265 = icmp ne i64 %and264, 0, !dbg !8552
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !8552

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !8552

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub268 = sub i64 %61, 1, !dbg !8552
  %and269 = and i64 %sub268, 2048, !dbg !8552
  %tobool270 = icmp ne i64 %and269, 0, !dbg !8552
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !8552

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !8552

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub273 = sub i64 %62, 1, !dbg !8552
  %and274 = and i64 %sub273, 1024, !dbg !8552
  %tobool275 = icmp ne i64 %and274, 0, !dbg !8552
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !8552

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !8552

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub278 = sub i64 %63, 1, !dbg !8552
  %and279 = and i64 %sub278, 512, !dbg !8552
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8552
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8552

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !8552

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub283 = sub i64 %64, 1, !dbg !8552
  %and284 = and i64 %sub283, 256, !dbg !8552
  %tobool285 = icmp ne i64 %and284, 0, !dbg !8552
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !8552

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !8552

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub288 = sub i64 %65, 1, !dbg !8552
  %and289 = and i64 %sub288, 128, !dbg !8552
  %tobool290 = icmp ne i64 %and289, 0, !dbg !8552
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !8552

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !8552

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub293 = sub i64 %66, 1, !dbg !8552
  %and294 = and i64 %sub293, 64, !dbg !8552
  %tobool295 = icmp ne i64 %and294, 0, !dbg !8552
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !8552

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !8552

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub298 = sub i64 %67, 1, !dbg !8552
  %and299 = and i64 %sub298, 32, !dbg !8552
  %tobool300 = icmp ne i64 %and299, 0, !dbg !8552
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !8552

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !8552

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub303 = sub i64 %68, 1, !dbg !8552
  %and304 = and i64 %sub303, 16, !dbg !8552
  %tobool305 = icmp ne i64 %and304, 0, !dbg !8552
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !8552

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !8552

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub308 = sub i64 %69, 1, !dbg !8552
  %and309 = and i64 %sub308, 8, !dbg !8552
  %tobool310 = icmp ne i64 %and309, 0, !dbg !8552
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !8552

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !8552

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub313 = sub i64 %70, 1, !dbg !8552
  %and314 = and i64 %sub313, 4, !dbg !8552
  %tobool315 = icmp ne i64 %and314, 0, !dbg !8552
  %71 = zext i1 %tobool315 to i64, !dbg !8552
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !8552
  br label %cond.end, !dbg !8552

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !8552
  br label %cond.end317, !dbg !8552

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !8552
  br label %cond.end319, !dbg !8552

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !8552
  br label %cond.end321, !dbg !8552

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !8552
  br label %cond.end323, !dbg !8552

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !8552
  br label %cond.end325, !dbg !8552

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !8552
  br label %cond.end327, !dbg !8552

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !8552
  br label %cond.end329, !dbg !8552

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !8552
  br label %cond.end331, !dbg !8552

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !8552
  br label %cond.end333, !dbg !8552

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !8552
  br label %cond.end335, !dbg !8552

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !8552
  br label %cond.end337, !dbg !8552

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !8552
  br label %cond.end339, !dbg !8552

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !8552
  br label %cond.end341, !dbg !8552

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !8552
  br label %cond.end343, !dbg !8552

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !8552
  br label %cond.end345, !dbg !8552

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !8552
  br label %cond.end347, !dbg !8552

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !8552
  br label %cond.end349, !dbg !8552

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !8552
  br label %cond.end351, !dbg !8552

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !8552
  br label %cond.end353, !dbg !8552

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !8552
  br label %cond.end355, !dbg !8552

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !8552
  br label %cond.end357, !dbg !8552

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !8552
  br label %cond.end359, !dbg !8552

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !8552
  br label %cond.end361, !dbg !8552

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !8552
  br label %cond.end363, !dbg !8552

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !8552
  br label %cond.end365, !dbg !8552

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !8552
  br label %cond.end367, !dbg !8552

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !8552
  br label %cond.end369, !dbg !8552

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !8552
  br label %cond.end371, !dbg !8552

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !8552
  br label %cond.end373, !dbg !8552

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !8552
  br label %cond.end375, !dbg !8552

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !8552
  br label %cond.end377, !dbg !8552

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !8552
  br label %cond.end379, !dbg !8552

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !8552
  br label %cond.end381, !dbg !8552

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !8552
  br label %cond.end383, !dbg !8552

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !8552
  br label %cond.end385, !dbg !8552

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !8552
  br label %cond.end387, !dbg !8552

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !8552
  br label %cond.end389, !dbg !8552

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !8552
  br label %cond.end391, !dbg !8552

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !8552
  br label %cond.end393, !dbg !8552

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !8552
  br label %cond.end395, !dbg !8552

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !8552
  br label %cond.end397, !dbg !8552

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !8552
  br label %cond.end399, !dbg !8552

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !8552
  br label %cond.end401, !dbg !8552

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !8552
  br label %cond.end403, !dbg !8552

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !8552
  br label %cond.end405, !dbg !8552

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !8552
  br label %cond.end407, !dbg !8552

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !8552
  br label %cond.end409, !dbg !8552

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !8552
  br label %cond.end411, !dbg !8552

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !8552
  br label %cond.end413, !dbg !8552

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !8552
  br label %cond.end415, !dbg !8552

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !8552
  br label %cond.end417, !dbg !8552

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !8552
  br label %cond.end419, !dbg !8552

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !8552
  br label %cond.end421, !dbg !8552

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !8552
  br label %cond.end423, !dbg !8552

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !8552
  br label %cond.end425, !dbg !8552

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !8552
  br label %cond.end427, !dbg !8552

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !8552
  br label %cond.end429, !dbg !8552

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !8552
  br label %cond.end431, !dbg !8552

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !8552
  br label %cond.end433, !dbg !8552

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !8552
  br label %cond.end435, !dbg !8552

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !8552
  br label %cond.end437, !dbg !8552

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !8552
  br label %cond.end440, !dbg !8552

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !8552

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !8552
  br label %cond.end444, !dbg !8552

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !8552
  %sub443 = sub i64 %72, 1, !dbg !8552
  %call = call i32 @__ilog2_u64(i64 %sub443) #16, !dbg !8552
  br label %cond.end444, !dbg !8552

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !8552
  %sub446 = sub i32 %cond445, 12, !dbg !8553
  %add = add i32 %sub446, 1, !dbg !8554
  store i32 %add, i32* %retval, align 4, !dbg !8555
  br label %return, !dbg !8555

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !8556
  %dec = add i64 %73, -1, !dbg !8556
  store i64 %dec, i64* %size.addr, align 8, !dbg !8556
  %74 = load i64, i64* %size.addr, align 8, !dbg !8557
  %shr = lshr i64 %74, 12, !dbg !8557
  store i64 %shr, i64* %size.addr, align 8, !dbg !8557
  %75 = load i64, i64* %size.addr, align 8, !dbg !8558
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8535
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !8559
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !8560
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #12, !dbg !8559, !srcloc !8561
  store i32 %78, i32* %bitpos.i, align 4, !dbg !8559
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !8562
  %add.i = add i32 %79, 1, !dbg !8563
  store i32 %add.i, i32* %retval, align 4, !dbg !8564
  br label %return, !dbg !8564

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !8565
  ret i32 %80, !dbg !8565
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #9 !dbg !8566 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8528, metadata !DIExpression()), !dbg !8570
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8534, metadata !DIExpression()), !dbg !8572
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8573, metadata !DIExpression()), !dbg !8574
  %0 = load i64, i64* %n.addr, align 8, !dbg !8575
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8572
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !8576
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !8577
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #12, !dbg !8576, !srcloc !8561
  store i32 %3, i32* %bitpos.i, align 4, !dbg !8576
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !8578
  %add.i = add i32 %4, 1, !dbg !8579
  %sub = sub i32 %add.i, 1, !dbg !8580
  ret i32 %sub, !dbg !8581
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !8582 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8586, metadata !DIExpression()), !dbg !8587
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8588, metadata !DIExpression()), !dbg !8589
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8590, metadata !DIExpression()), !dbg !8591
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8594
  ret i8* %0, !dbg !8595
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8596 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8597, metadata !DIExpression()), !dbg !8598
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8599, metadata !DIExpression()), !dbg !8600
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8601, metadata !DIExpression()), !dbg !8602
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8603
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8605
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8606
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !8607
  br i1 %call, label %if.end, label %if.then, !dbg !8608

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !8609

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8610
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8611
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !8612
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !8613
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8614
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8615
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !8616
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !8617
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8618
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8619
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !8620
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !8621
  br label %do.body, !dbg !8622

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !8623

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !8625

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !8623

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8627
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8627
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !8627
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !8627
  br label %do.end7, !dbg !8627

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !8623

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !8629
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8630 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8633, metadata !DIExpression()), !dbg !8634
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8635, metadata !DIExpression()), !dbg !8636
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8637, metadata !DIExpression()), !dbg !8638
  ret i1 true, !dbg !8639
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move_tail(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !8640 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8641, metadata !DIExpression()), !dbg !8642
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8643, metadata !DIExpression()), !dbg !8644
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8645
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !8646
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8647
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8648
  call void @list_add_tail(%struct.list_head* %1, %struct.list_head* %2) #11, !dbg !8649
  ret void, !dbg !8650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @assign_requested_resources_sorted(%struct.list_head* %head, %struct.list_head* %fail_head) #0 !dbg !8651 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %fail_head.addr = alloca %struct.list_head*, align 8
  %res = alloca %struct.resource*, align 8
  %dev_res = alloca %struct.pci_dev_resource*, align 8
  %idx = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev_resource*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp21 = alloca %struct.pci_dev_resource*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8652, metadata !DIExpression()), !dbg !8653
  store %struct.list_head* %fail_head, %struct.list_head** %fail_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %fail_head.addr, metadata !8654, metadata !DIExpression()), !dbg !8655
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !8656, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %dev_res, metadata !8658, metadata !DIExpression()), !dbg !8659
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !8660, metadata !DIExpression()), !dbg !8661
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8662, metadata !DIExpression()), !dbg !8665
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8665
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !8665
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8665
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !8665
  store i8* %2, i8** %__mptr, align 8, !dbg !8665
  br label %do.body, !dbg !8665

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8666

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !8665
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !8665
  %4 = bitcast i8* %add.ptr to %struct.pci_dev_resource*, !dbg !8665
  store %struct.pci_dev_resource* %4, %struct.pci_dev_resource** %tmp, align 8, !dbg !8666
  %5 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !8665
  store %struct.pci_dev_resource* %5, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8668
  br label %for.cond, !dbg !8668

for.cond:                                         ; preds = %do.end20, %do.end
  %6 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8669
  %list = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %6, i32 0, i32 0, !dbg !8669
  %7 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8669
  %cmp = icmp eq %struct.list_head* %list, %7, !dbg !8669
  %lnot = xor i1 %cmp, true, !dbg !8669
  br i1 %lnot, label %for.body, label %for.end, !dbg !8668

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8671
  %res1 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %8, i32 0, i32 1, !dbg !8673
  %9 = load %struct.resource*, %struct.resource** %res1, align 8, !dbg !8673
  store %struct.resource* %9, %struct.resource** %res, align 8, !dbg !8674
  %10 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8675
  %11 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8676
  %dev = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %11, i32 0, i32 2, !dbg !8677
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8677
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 44, !dbg !8678
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !8676
  %sub.ptr.lhs.cast = ptrtoint %struct.resource* %10 to i64, !dbg !8679
  %sub.ptr.rhs.cast = ptrtoint %struct.resource* %arrayidx to i64, !dbg !8679
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8679
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !8679
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !8675
  store i32 %conv, i32* %idx, align 4, !dbg !8680
  %13 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8681
  %call = call i64 @resource_size(%struct.resource* %13) #11, !dbg !8683
  %tobool = icmp ne i64 %call, 0, !dbg !8683
  br i1 %tobool, label %land.lhs.true, label %if.end15, !dbg !8684

land.lhs.true:                                    ; preds = %for.body
  %14 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8685
  %dev2 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %14, i32 0, i32 2, !dbg !8686
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev2, align 8, !dbg !8686
  %16 = load i32, i32* %idx, align 4, !dbg !8687
  %call3 = call i32 @pci_assign_resource(%struct.pci_dev* %15, i32 %16) #11, !dbg !8688
  %tobool4 = icmp ne i32 %call3, 0, !dbg !8688
  br i1 %tobool4, label %if.then, label %if.end15, !dbg !8689

if.then:                                          ; preds = %land.lhs.true
  %17 = load %struct.list_head*, %struct.list_head** %fail_head.addr, align 8, !dbg !8690
  %tobool5 = icmp ne %struct.list_head* %17, null, !dbg !8690
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !8693

if.then6:                                         ; preds = %if.then
  %18 = load i32, i32* %idx, align 4, !dbg !8694
  %cmp7 = icmp eq i32 %18, 6, !dbg !8697
  br i1 %cmp7, label %land.lhs.true9, label %if.then11, !dbg !8698

land.lhs.true9:                                   ; preds = %if.then6
  %19 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8699
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %19, i32 0, i32 3, !dbg !8700
  %20 = load i64, i64* %flags, align 8, !dbg !8700
  %and = and i64 %20, 1, !dbg !8701
  %tobool10 = icmp ne i64 %and, 0, !dbg !8701
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !8702

if.then11:                                        ; preds = %land.lhs.true9, %if.then6
  %21 = load %struct.list_head*, %struct.list_head** %fail_head.addr, align 8, !dbg !8703
  %22 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8704
  %dev12 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %22, i32 0, i32 2, !dbg !8705
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev12, align 8, !dbg !8705
  %24 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8706
  %call13 = call i32 @add_to_list(%struct.list_head* %21, %struct.pci_dev* %23, %struct.resource* %24, i64 0, i64 0) #11, !dbg !8707
  br label %if.end, !dbg !8707

if.end:                                           ; preds = %if.then11, %land.lhs.true9
  br label %if.end14, !dbg !8708

if.end14:                                         ; preds = %if.end, %if.then
  %25 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8709
  call void @reset_resource(%struct.resource* %25) #11, !dbg !8710
  br label %if.end15, !dbg !8711

if.end15:                                         ; preds = %if.end14, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8712

for.inc:                                          ; preds = %if.end15
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !8713, metadata !DIExpression()), !dbg !8715
  %26 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8715
  %list17 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %26, i32 0, i32 0, !dbg !8715
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %list17, i32 0, i32 0, !dbg !8715
  %27 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !8715
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !8715
  store i8* %28, i8** %__mptr16, align 8, !dbg !8715
  br label %do.body19, !dbg !8715

do.body19:                                        ; preds = %for.inc
  br label %do.end20, !dbg !8716

do.end20:                                         ; preds = %do.body19
  %29 = load i8*, i8** %__mptr16, align 8, !dbg !8715
  %add.ptr22 = getelementptr i8, i8* %29, i64 0, !dbg !8715
  %30 = bitcast i8* %add.ptr22 to %struct.pci_dev_resource*, !dbg !8715
  store %struct.pci_dev_resource* %30, %struct.pci_dev_resource** %tmp21, align 8, !dbg !8716
  %31 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp21, align 8, !dbg !8715
  store %struct.pci_dev_resource* %31, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8669
  br label %for.cond, !dbg !8669, !llvm.loop !8718

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @remove_from_list(%struct.list_head* %head, %struct.resource* %res) #0 !dbg !8721 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %res.addr = alloca %struct.resource*, align 8
  %dev_res = alloca %struct.pci_dev_resource*, align 8
  %tmp = alloca %struct.pci_dev_resource*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.pci_dev_resource*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.pci_dev_resource*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.pci_dev_resource*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8724, metadata !DIExpression()), !dbg !8725
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !8726, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %dev_res, metadata !8728, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %tmp, metadata !8730, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8732, metadata !DIExpression()), !dbg !8735
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8735
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !8735
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8735
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !8735
  store i8* %2, i8** %__mptr, align 8, !dbg !8735
  br label %do.body, !dbg !8735

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8736

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !8735
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !8735
  %4 = bitcast i8* %add.ptr to %struct.pci_dev_resource*, !dbg !8735
  store %struct.pci_dev_resource* %4, %struct.pci_dev_resource** %tmp1, align 8, !dbg !8736
  %5 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp1, align 8, !dbg !8735
  store %struct.pci_dev_resource* %5, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8738
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !8739, metadata !DIExpression()), !dbg !8741
  %6 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8741
  %list = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %6, i32 0, i32 0, !dbg !8741
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !8741
  %7 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !8741
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !8741
  store i8* %8, i8** %__mptr2, align 8, !dbg !8741
  br label %do.body4, !dbg !8741

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !8742

do.end5:                                          ; preds = %do.body4
  %9 = load i8*, i8** %__mptr2, align 8, !dbg !8741
  %add.ptr7 = getelementptr i8, i8* %9, i64 0, !dbg !8741
  %10 = bitcast i8* %add.ptr7 to %struct.pci_dev_resource*, !dbg !8741
  store %struct.pci_dev_resource* %10, %struct.pci_dev_resource** %tmp6, align 8, !dbg !8742
  %11 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp6, align 8, !dbg !8741
  store %struct.pci_dev_resource* %11, %struct.pci_dev_resource** %tmp, align 8, !dbg !8738
  br label %for.cond, !dbg !8738

for.cond:                                         ; preds = %do.end16, %do.end5
  %12 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8744
  %list8 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %12, i32 0, i32 0, !dbg !8744
  %13 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8744
  %cmp = icmp eq %struct.list_head* %list8, %13, !dbg !8744
  %lnot = xor i1 %cmp, true, !dbg !8744
  br i1 %lnot, label %for.body, label %for.end, !dbg !8738

for.body:                                         ; preds = %for.cond
  %14 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8746
  %res9 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %14, i32 0, i32 1, !dbg !8749
  %15 = load %struct.resource*, %struct.resource** %res9, align 8, !dbg !8749
  %16 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !8750
  %cmp10 = icmp eq %struct.resource* %15, %16, !dbg !8751
  br i1 %cmp10, label %if.then, label %if.end, !dbg !8752

if.then:                                          ; preds = %for.body
  %17 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8753
  %list11 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %17, i32 0, i32 0, !dbg !8755
  call void @list_del(%struct.list_head* %list11) #11, !dbg !8756
  %18 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8757
  %19 = bitcast %struct.pci_dev_resource* %18 to i8*, !dbg !8757
  call void @kfree(i8* %19) #11, !dbg !8758
  br label %for.end, !dbg !8759

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8760

for.inc:                                          ; preds = %if.end
  %20 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !8744
  store %struct.pci_dev_resource* %20, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8744
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !8761, metadata !DIExpression()), !dbg !8763
  %21 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !8763
  %list13 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %21, i32 0, i32 0, !dbg !8763
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %list13, i32 0, i32 0, !dbg !8763
  %22 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !8763
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !8763
  store i8* %23, i8** %__mptr12, align 8, !dbg !8763
  br label %do.body15, !dbg !8763

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !8764

do.end16:                                         ; preds = %do.body15
  %24 = load i8*, i8** %__mptr12, align 8, !dbg !8763
  %add.ptr18 = getelementptr i8, i8* %24, i64 0, !dbg !8763
  %25 = bitcast i8* %add.ptr18 to %struct.pci_dev_resource*, !dbg !8763
  store %struct.pci_dev_resource* %25, %struct.pci_dev_resource** %tmp17, align 8, !dbg !8764
  %26 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp17, align 8, !dbg !8763
  store %struct.pci_dev_resource* %26, %struct.pci_dev_resource** %tmp, align 8, !dbg !8744
  br label %for.cond, !dbg !8744, !llvm.loop !8766

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !8768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pci_fail_res_type_mask(%struct.list_head* %fail_head) #0 !dbg !8769 {
entry:
  %fail_head.addr = alloca %struct.list_head*, align 8
  %fail_res = alloca %struct.pci_dev_resource*, align 8
  %mask = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev_resource*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp6 = alloca %struct.pci_dev_resource*, align 8
  store %struct.list_head* %fail_head, %struct.list_head** %fail_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %fail_head.addr, metadata !8772, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %fail_res, metadata !8774, metadata !DIExpression()), !dbg !8775
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !8776, metadata !DIExpression()), !dbg !8777
  store i64 0, i64* %mask, align 8, !dbg !8777
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8778, metadata !DIExpression()), !dbg !8781
  %0 = load %struct.list_head*, %struct.list_head** %fail_head.addr, align 8, !dbg !8781
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !8781
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8781
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !8781
  store i8* %2, i8** %__mptr, align 8, !dbg !8781
  br label %do.body, !dbg !8781

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8782

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !8781
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !8781
  %4 = bitcast i8* %add.ptr to %struct.pci_dev_resource*, !dbg !8781
  store %struct.pci_dev_resource* %4, %struct.pci_dev_resource** %tmp, align 8, !dbg !8782
  %5 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !8781
  store %struct.pci_dev_resource* %5, %struct.pci_dev_resource** %fail_res, align 8, !dbg !8784
  br label %for.cond, !dbg !8784

for.cond:                                         ; preds = %do.end5, %do.end
  %6 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !8785
  %list = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %6, i32 0, i32 0, !dbg !8785
  %7 = load %struct.list_head*, %struct.list_head** %fail_head.addr, align 8, !dbg !8785
  %cmp = icmp eq %struct.list_head* %list, %7, !dbg !8785
  %lnot = xor i1 %cmp, true, !dbg !8785
  br i1 %lnot, label %for.body, label %for.end, !dbg !8784

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !8787
  %flags = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %8, i32 0, i32 7, !dbg !8788
  %9 = load i64, i64* %flags, align 8, !dbg !8788
  %10 = load i64, i64* %mask, align 8, !dbg !8789
  %or = or i64 %10, %9, !dbg !8789
  store i64 %or, i64* %mask, align 8, !dbg !8789
  br label %for.inc, !dbg !8790

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !8791, metadata !DIExpression()), !dbg !8793
  %11 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %fail_res, align 8, !dbg !8793
  %list2 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %11, i32 0, i32 0, !dbg !8793
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %list2, i32 0, i32 0, !dbg !8793
  %12 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !8793
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !8793
  store i8* %13, i8** %__mptr1, align 8, !dbg !8793
  br label %do.body4, !dbg !8793

do.body4:                                         ; preds = %for.inc
  br label %do.end5, !dbg !8794

do.end5:                                          ; preds = %do.body4
  %14 = load i8*, i8** %__mptr1, align 8, !dbg !8793
  %add.ptr7 = getelementptr i8, i8* %14, i64 0, !dbg !8793
  %15 = bitcast i8* %add.ptr7 to %struct.pci_dev_resource*, !dbg !8793
  store %struct.pci_dev_resource* %15, %struct.pci_dev_resource** %tmp6, align 8, !dbg !8794
  %16 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp6, align 8, !dbg !8793
  store %struct.pci_dev_resource* %16, %struct.pci_dev_resource** %fail_res, align 8, !dbg !8785
  br label %for.cond, !dbg !8785, !llvm.loop !8796

for.end:                                          ; preds = %for.cond
  %17 = load i64, i64* %mask, align 8, !dbg !8798
  %and = and i64 %17, 8960, !dbg !8799
  ret i64 %and, !dbg !8800
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_need_to_release(i64 %mask, %struct.resource* %res) #0 !dbg !8801 {
entry:
  %retval = alloca i1, align 1
  %mask.addr = alloca i64, align 8
  %res.addr = alloca %struct.resource*, align 8
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !8804, metadata !DIExpression()), !dbg !8805
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !8806, metadata !DIExpression()), !dbg !8807
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !8808
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %0, i32 0, i32 3, !dbg !8810
  %1 = load i64, i64* %flags, align 8, !dbg !8810
  %and = and i64 %1, 256, !dbg !8811
  %tobool = icmp ne i64 %and, 0, !dbg !8811
  br i1 %tobool, label %if.then, label %if.end, !dbg !8812

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %mask.addr, align 8, !dbg !8813
  %and1 = and i64 %2, 256, !dbg !8814
  %tobool2 = icmp ne i64 %and1, 0, !dbg !8815
  %lnot = xor i1 %tobool2, true, !dbg !8815
  %lnot3 = xor i1 %lnot, true, !dbg !8816
  store i1 %lnot3, i1* %retval, align 1, !dbg !8817
  br label %return, !dbg !8817

if.end:                                           ; preds = %entry
  %3 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !8818
  %flags4 = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 3, !dbg !8820
  %4 = load i64, i64* %flags4, align 8, !dbg !8820
  %and5 = and i64 %4, 8192, !dbg !8821
  %tobool6 = icmp ne i64 %and5, 0, !dbg !8821
  br i1 %tobool6, label %if.then7, label %if.end18, !dbg !8822

if.then7:                                         ; preds = %if.end
  %5 = load i64, i64* %mask.addr, align 8, !dbg !8823
  %and8 = and i64 %5, 8192, !dbg !8826
  %tobool9 = icmp ne i64 %and8, 0, !dbg !8826
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !8827

if.then10:                                        ; preds = %if.then7
  store i1 true, i1* %retval, align 1, !dbg !8828
  br label %return, !dbg !8828

if.else:                                          ; preds = %if.then7
  %6 = load i64, i64* %mask.addr, align 8, !dbg !8829
  %and11 = and i64 %6, 512, !dbg !8831
  %tobool12 = icmp ne i64 %and11, 0, !dbg !8831
  br i1 %tobool12, label %land.lhs.true, label %if.else17, !dbg !8832

land.lhs.true:                                    ; preds = %if.else
  %7 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !8833
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %7, i32 0, i32 5, !dbg !8834
  %8 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !8834
  %flags13 = getelementptr inbounds %struct.resource, %struct.resource* %8, i32 0, i32 3, !dbg !8835
  %9 = load i64, i64* %flags13, align 8, !dbg !8835
  %and14 = and i64 %9, 8192, !dbg !8836
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8836
  br i1 %tobool15, label %if.else17, label %if.then16, !dbg !8837

if.then16:                                        ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !8838
  br label %return, !dbg !8838

if.else17:                                        ; preds = %land.lhs.true, %if.else
  store i1 false, i1* %retval, align 1, !dbg !8839
  br label %return, !dbg !8839

if.end18:                                         ; preds = %if.end
  %10 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !8840
  %flags19 = getelementptr inbounds %struct.resource, %struct.resource* %10, i32 0, i32 3, !dbg !8842
  %11 = load i64, i64* %flags19, align 8, !dbg !8842
  %and20 = and i64 %11, 512, !dbg !8843
  %tobool21 = icmp ne i64 %and20, 0, !dbg !8843
  br i1 %tobool21, label %if.then22, label %if.end27, !dbg !8844

if.then22:                                        ; preds = %if.end18
  %12 = load i64, i64* %mask.addr, align 8, !dbg !8845
  %and23 = and i64 %12, 512, !dbg !8846
  %tobool24 = icmp ne i64 %and23, 0, !dbg !8847
  %lnot25 = xor i1 %tobool24, true, !dbg !8847
  %lnot26 = xor i1 %lnot25, true, !dbg !8848
  store i1 %lnot26, i1* %retval, align 1, !dbg !8849
  br label %return, !dbg !8849

if.end27:                                         ; preds = %if.end18
  store i1 false, i1* %retval, align 1, !dbg !8850
  br label %return, !dbg !8850

return:                                           ; preds = %if.end27, %if.then22, %if.else17, %if.then16, %if.then10, %if.then
  %13 = load i1, i1* %retval, align 1, !dbg !8851
  ret i1 %13, !dbg !8851
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !8852 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8853, metadata !DIExpression()), !dbg !8854
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8855
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !8856
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8857
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8858
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !8859
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8860
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !8861
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !8862
  ret void, !dbg !8863
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reassign_resources_sorted(%struct.list_head* %realloc_head, %struct.list_head* %head) #0 !dbg !8864 {
entry:
  %realloc_head.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  %res = alloca %struct.resource*, align 8
  %add_res = alloca %struct.pci_dev_resource*, align 8
  %tmp = alloca %struct.pci_dev_resource*, align 8
  %dev_res = alloca %struct.pci_dev_resource*, align 8
  %add_size = alloca i64, align 8
  %align = alloca i64, align 8
  %idx = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.pci_dev_resource*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.pci_dev_resource*, align 8
  %found_match = alloca i8, align 1
  %__mptr10 = alloca i8*, align 8
  %tmp14 = alloca %struct.pci_dev_resource*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp30 = alloca %struct.pci_dev_resource*, align 8
  %__mptr56 = alloca i8*, align 8
  %tmp61 = alloca %struct.pci_dev_resource*, align 8
  store %struct.list_head* %realloc_head, %struct.list_head** %realloc_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %realloc_head.addr, metadata !8865, metadata !DIExpression()), !dbg !8866
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8867, metadata !DIExpression()), !dbg !8868
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !8869, metadata !DIExpression()), !dbg !8870
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %add_res, metadata !8871, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %tmp, metadata !8873, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.declare(metadata %struct.pci_dev_resource** %dev_res, metadata !8875, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.declare(metadata i64* %add_size, metadata !8877, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.declare(metadata i64* %align, metadata !8879, metadata !DIExpression()), !dbg !8880
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !8881, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8883, metadata !DIExpression()), !dbg !8886
  %0 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !8886
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !8886
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8886
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !8886
  store i8* %2, i8** %__mptr, align 8, !dbg !8886
  br label %do.body, !dbg !8886

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8887

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !8886
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !8886
  %4 = bitcast i8* %add.ptr to %struct.pci_dev_resource*, !dbg !8886
  store %struct.pci_dev_resource* %4, %struct.pci_dev_resource** %tmp1, align 8, !dbg !8887
  %5 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp1, align 8, !dbg !8886
  store %struct.pci_dev_resource* %5, %struct.pci_dev_resource** %add_res, align 8, !dbg !8889
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !8890, metadata !DIExpression()), !dbg !8892
  %6 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %add_res, align 8, !dbg !8892
  %list = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %6, i32 0, i32 0, !dbg !8892
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !8892
  %7 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !8892
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !8892
  store i8* %8, i8** %__mptr2, align 8, !dbg !8892
  br label %do.body4, !dbg !8892

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !8893

do.end5:                                          ; preds = %do.body4
  %9 = load i8*, i8** %__mptr2, align 8, !dbg !8892
  %add.ptr7 = getelementptr i8, i8* %9, i64 0, !dbg !8892
  %10 = bitcast i8* %add.ptr7 to %struct.pci_dev_resource*, !dbg !8892
  store %struct.pci_dev_resource* %10, %struct.pci_dev_resource** %tmp6, align 8, !dbg !8893
  %11 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp6, align 8, !dbg !8892
  store %struct.pci_dev_resource* %11, %struct.pci_dev_resource** %tmp, align 8, !dbg !8889
  br label %for.cond, !dbg !8889

for.cond:                                         ; preds = %do.end60, %do.end5
  %12 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %add_res, align 8, !dbg !8895
  %list8 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %12, i32 0, i32 0, !dbg !8895
  %13 = load %struct.list_head*, %struct.list_head** %realloc_head.addr, align 8, !dbg !8895
  %cmp = icmp eq %struct.list_head* %list8, %13, !dbg !8895
  %lnot = xor i1 %cmp, true, !dbg !8895
  br i1 %lnot, label %for.body, label %for.end63, !dbg !8889

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %found_match, metadata !8897, metadata !DIExpression()), !dbg !8899
  store i8 0, i8* %found_match, align 1, !dbg !8899
  %14 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %add_res, align 8, !dbg !8900
  %res9 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %14, i32 0, i32 1, !dbg !8901
  %15 = load %struct.resource*, %struct.resource** %res9, align 8, !dbg !8901
  store %struct.resource* %15, %struct.resource** %res, align 8, !dbg !8902
  %16 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8903
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %16, i32 0, i32 3, !dbg !8905
  %17 = load i64, i64* %flags, align 8, !dbg !8905
  %tobool = icmp ne i64 %17, 0, !dbg !8903
  br i1 %tobool, label %if.end, label %if.then, !dbg !8906

if.then:                                          ; preds = %for.body
  br label %out, !dbg !8907

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !8908, metadata !DIExpression()), !dbg !8911
  %18 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8911
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %18, i32 0, i32 0, !dbg !8911
  %19 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !8911
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !8911
  store i8* %20, i8** %__mptr10, align 8, !dbg !8911
  br label %do.body12, !dbg !8911

do.body12:                                        ; preds = %if.end
  br label %do.end13, !dbg !8912

do.end13:                                         ; preds = %do.body12
  %21 = load i8*, i8** %__mptr10, align 8, !dbg !8911
  %add.ptr15 = getelementptr i8, i8* %21, i64 0, !dbg !8911
  %22 = bitcast i8* %add.ptr15 to %struct.pci_dev_resource*, !dbg !8911
  store %struct.pci_dev_resource* %22, %struct.pci_dev_resource** %tmp14, align 8, !dbg !8912
  %23 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp14, align 8, !dbg !8911
  store %struct.pci_dev_resource* %23, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8914
  br label %for.cond16, !dbg !8914

for.cond16:                                       ; preds = %do.end29, %do.end13
  %24 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8915
  %list17 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %24, i32 0, i32 0, !dbg !8915
  %25 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8915
  %cmp18 = icmp eq %struct.list_head* %list17, %25, !dbg !8915
  %lnot19 = xor i1 %cmp18, true, !dbg !8915
  br i1 %lnot19, label %for.body20, label %for.end, !dbg !8914

for.body20:                                       ; preds = %for.cond16
  %26 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8917
  %res21 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %26, i32 0, i32 1, !dbg !8920
  %27 = load %struct.resource*, %struct.resource** %res21, align 8, !dbg !8920
  %28 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8921
  %cmp22 = icmp eq %struct.resource* %27, %28, !dbg !8922
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !8923

if.then23:                                        ; preds = %for.body20
  store i8 1, i8* %found_match, align 1, !dbg !8924
  br label %for.end, !dbg !8926

if.end24:                                         ; preds = %for.body20
  br label %for.inc, !dbg !8927

for.inc:                                          ; preds = %if.end24
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !8928, metadata !DIExpression()), !dbg !8930
  %29 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8930
  %list26 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %29, i32 0, i32 0, !dbg !8930
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %list26, i32 0, i32 0, !dbg !8930
  %30 = load %struct.list_head*, %struct.list_head** %next27, align 8, !dbg !8930
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !8930
  store i8* %31, i8** %__mptr25, align 8, !dbg !8930
  br label %do.body28, !dbg !8930

do.body28:                                        ; preds = %for.inc
  br label %do.end29, !dbg !8931

do.end29:                                         ; preds = %do.body28
  %32 = load i8*, i8** %__mptr25, align 8, !dbg !8930
  %add.ptr31 = getelementptr i8, i8* %32, i64 0, !dbg !8930
  %33 = bitcast i8* %add.ptr31 to %struct.pci_dev_resource*, !dbg !8930
  store %struct.pci_dev_resource* %33, %struct.pci_dev_resource** %tmp30, align 8, !dbg !8931
  %34 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp30, align 8, !dbg !8930
  store %struct.pci_dev_resource* %34, %struct.pci_dev_resource** %dev_res, align 8, !dbg !8915
  br label %for.cond16, !dbg !8915, !llvm.loop !8933

for.end:                                          ; preds = %if.then23, %for.cond16
  %35 = load i8, i8* %found_match, align 1, !dbg !8935
  %tobool32 = trunc i8 %35 to i1, !dbg !8935
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !8937

if.then33:                                        ; preds = %for.end
  br label %for.inc55, !dbg !8938

if.end34:                                         ; preds = %for.end
  %36 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8939
  %37 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %add_res, align 8, !dbg !8940
  %dev = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %37, i32 0, i32 2, !dbg !8941
  %38 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !8941
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 44, !dbg !8942
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !8940
  %sub.ptr.lhs.cast = ptrtoint %struct.resource* %36 to i64, !dbg !8943
  %sub.ptr.rhs.cast = ptrtoint %struct.resource* %arrayidx to i64, !dbg !8943
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8943
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !8943
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !8939
  store i32 %conv, i32* %idx, align 4, !dbg !8944
  %39 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %add_res, align 8, !dbg !8945
  %add_size35 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %39, i32 0, i32 5, !dbg !8946
  %40 = load i64, i64* %add_size35, align 8, !dbg !8946
  store i64 %40, i64* %add_size, align 8, !dbg !8947
  %41 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %add_res, align 8, !dbg !8948
  %min_align = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %41, i32 0, i32 6, !dbg !8949
  %42 = load i64, i64* %min_align, align 8, !dbg !8949
  store i64 %42, i64* %align, align 8, !dbg !8950
  %43 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8951
  %call = call i64 @resource_size(%struct.resource* %43) #11, !dbg !8953
  %tobool36 = icmp ne i64 %call, 0, !dbg !8953
  br i1 %tobool36, label %if.else, label %if.then37, !dbg !8954

if.then37:                                        ; preds = %if.end34
  %44 = load i64, i64* %align, align 8, !dbg !8955
  %45 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8957
  %start = getelementptr inbounds %struct.resource, %struct.resource* %45, i32 0, i32 0, !dbg !8958
  store i64 %44, i64* %start, align 8, !dbg !8959
  %46 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8960
  %start38 = getelementptr inbounds %struct.resource, %struct.resource* %46, i32 0, i32 0, !dbg !8961
  %47 = load i64, i64* %start38, align 8, !dbg !8961
  %48 = load i64, i64* %add_size, align 8, !dbg !8962
  %add = add i64 %47, %48, !dbg !8963
  %sub = sub i64 %add, 1, !dbg !8964
  %49 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8965
  %end = getelementptr inbounds %struct.resource, %struct.resource* %49, i32 0, i32 1, !dbg !8966
  store i64 %sub, i64* %end, align 8, !dbg !8967
  %50 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %add_res, align 8, !dbg !8968
  %dev39 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %50, i32 0, i32 2, !dbg !8970
  %51 = load %struct.pci_dev*, %struct.pci_dev** %dev39, align 8, !dbg !8970
  %52 = load i32, i32* %idx, align 4, !dbg !8971
  %call40 = call i32 @pci_assign_resource(%struct.pci_dev* %51, i32 %52) #11, !dbg !8972
  %tobool41 = icmp ne i32 %call40, 0, !dbg !8972
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !8973

if.then42:                                        ; preds = %if.then37
  %53 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8974
  call void @reset_resource(%struct.resource* %53) #11, !dbg !8975
  br label %if.end43, !dbg !8975

if.end43:                                         ; preds = %if.then42, %if.then37
  br label %if.end53, !dbg !8976

if.else:                                          ; preds = %if.end34
  %54 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %add_res, align 8, !dbg !8977
  %flags44 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %54, i32 0, i32 7, !dbg !8979
  %55 = load i64, i64* %flags44, align 8, !dbg !8979
  %and = and i64 %55, 786432, !dbg !8980
  %56 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8981
  %flags45 = getelementptr inbounds %struct.resource, %struct.resource* %56, i32 0, i32 3, !dbg !8982
  %57 = load i64, i64* %flags45, align 8, !dbg !8983
  %or = or i64 %57, %and, !dbg !8983
  store i64 %or, i64* %flags45, align 8, !dbg !8983
  %58 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %add_res, align 8, !dbg !8984
  %dev46 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %58, i32 0, i32 2, !dbg !8986
  %59 = load %struct.pci_dev*, %struct.pci_dev** %dev46, align 8, !dbg !8986
  %60 = load i32, i32* %idx, align 4, !dbg !8987
  %61 = load i64, i64* %add_size, align 8, !dbg !8988
  %62 = load i64, i64* %align, align 8, !dbg !8989
  %call47 = call i32 @pci_reassign_resource(%struct.pci_dev* %59, i32 %60, i64 %61, i64 %62) #11, !dbg !8990
  %tobool48 = icmp ne i32 %call47, 0, !dbg !8990
  br i1 %tobool48, label %if.then49, label %if.end52, !dbg !8991

if.then49:                                        ; preds = %if.else
  %63 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %add_res, align 8, !dbg !8992
  %dev50 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %63, i32 0, i32 2, !dbg !8992
  %64 = load %struct.pci_dev*, %struct.pci_dev** %dev50, align 8, !dbg !8992
  %dev51 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %64, i32 0, i32 41, !dbg !8992
  %65 = load i64, i64* %add_size, align 8, !dbg !8992
  %66 = load i32, i32* %idx, align 4, !dbg !8992
  %67 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !8992
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev51, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i64 0, i64 0), i64 %65, i32 %66, %struct.resource* %67) #10, !dbg !8992
  br label %if.end52, !dbg !8992

if.end52:                                         ; preds = %if.then49, %if.else
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end43
  br label %out, !dbg !8993

out:                                              ; preds = %if.end53, %if.then
  call void @llvm.dbg.label(metadata !8994), !dbg !8995
  %68 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %add_res, align 8, !dbg !8996
  %list54 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %68, i32 0, i32 0, !dbg !8997
  call void @list_del(%struct.list_head* %list54) #11, !dbg !8998
  %69 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %add_res, align 8, !dbg !8999
  %70 = bitcast %struct.pci_dev_resource* %69 to i8*, !dbg !8999
  call void @kfree(i8* %70) #11, !dbg !9000
  br label %for.inc55, !dbg !9001

for.inc55:                                        ; preds = %out, %if.then33
  %71 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !8895
  store %struct.pci_dev_resource* %71, %struct.pci_dev_resource** %add_res, align 8, !dbg !8895
  call void @llvm.dbg.declare(metadata i8** %__mptr56, metadata !9002, metadata !DIExpression()), !dbg !9004
  %72 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp, align 8, !dbg !9004
  %list57 = getelementptr inbounds %struct.pci_dev_resource, %struct.pci_dev_resource* %72, i32 0, i32 0, !dbg !9004
  %next58 = getelementptr inbounds %struct.list_head, %struct.list_head* %list57, i32 0, i32 0, !dbg !9004
  %73 = load %struct.list_head*, %struct.list_head** %next58, align 8, !dbg !9004
  %74 = bitcast %struct.list_head* %73 to i8*, !dbg !9004
  store i8* %74, i8** %__mptr56, align 8, !dbg !9004
  br label %do.body59, !dbg !9004

do.body59:                                        ; preds = %for.inc55
  br label %do.end60, !dbg !9005

do.end60:                                         ; preds = %do.body59
  %75 = load i8*, i8** %__mptr56, align 8, !dbg !9004
  %add.ptr62 = getelementptr i8, i8* %75, i64 0, !dbg !9004
  %76 = bitcast i8* %add.ptr62 to %struct.pci_dev_resource*, !dbg !9004
  store %struct.pci_dev_resource* %76, %struct.pci_dev_resource** %tmp61, align 8, !dbg !9005
  %77 = load %struct.pci_dev_resource*, %struct.pci_dev_resource** %tmp61, align 8, !dbg !9004
  store %struct.pci_dev_resource* %77, %struct.pci_dev_resource** %tmp, align 8, !dbg !8895
  br label %for.cond, !dbg !8895, !llvm.loop !9007

for.end63:                                        ; preds = %for.cond
  ret void, !dbg !9009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !9010 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9011, metadata !DIExpression()), !dbg !9012
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9013
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !9015
  br i1 %call, label %if.end, label %if.then, !dbg !9016

if.then:                                          ; preds = %entry
  br label %return, !dbg !9017

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9018
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9019
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !9019
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9020
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !9021
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9021
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !9022
  br label %return, !dbg !9023

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !9024 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9027, metadata !DIExpression()), !dbg !9028
  ret i1 true, !dbg !9029
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !9030 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9031, metadata !DIExpression()), !dbg !9032
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9033, metadata !DIExpression()), !dbg !9034
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9035
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9036
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9037
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !9038
  br label %do.body, !dbg !9039

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !9040

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !9042

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !9040

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9044
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9044
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !9044
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !9044
  br label %do.end5, !dbg !9044

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !9040

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !9046
}

; Function Attrs: noredzone
declare dso_local i32 @pci_assign_resource(%struct.pci_dev*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reset_resource(%struct.resource* %res) #0 !dbg !9047 {
entry:
  %res.addr = alloca %struct.resource*, align 8
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !9050, metadata !DIExpression()), !dbg !9051
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !9052
  %start = getelementptr inbounds %struct.resource, %struct.resource* %0, i32 0, i32 0, !dbg !9053
  store i64 0, i64* %start, align 8, !dbg !9054
  %1 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !9055
  %end = getelementptr inbounds %struct.resource, %struct.resource* %1, i32 0, i32 1, !dbg !9056
  store i64 0, i64* %end, align 8, !dbg !9057
  %2 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !9058
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %2, i32 0, i32 3, !dbg !9059
  store i64 0, i64* %flags, align 8, !dbg !9060
  ret void, !dbg !9061
}

; Function Attrs: noredzone
declare dso_local i32 @pci_reassign_resource(%struct.pci_dev*, i32, i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @assign_fixed_resource_on_bus(%struct.pci_bus* %b, %struct.resource* %r) #0 !dbg !9062 {
entry:
  %b.addr = alloca %struct.pci_bus*, align 8
  %r.addr = alloca %struct.resource*, align 8
  %i = alloca i32, align 4
  %parent_r = alloca %struct.resource*, align 8
  %mask = alloca i64, align 8
  store %struct.pci_bus* %b, %struct.pci_bus** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b.addr, metadata !9065, metadata !DIExpression()), !dbg !9066
  store %struct.resource* %r, %struct.resource** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %r.addr, metadata !9067, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9069, metadata !DIExpression()), !dbg !9070
  call void @llvm.dbg.declare(metadata %struct.resource** %parent_r, metadata !9071, metadata !DIExpression()), !dbg !9072
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !9073, metadata !DIExpression()), !dbg !9074
  store i64 8960, i64* %mask, align 8, !dbg !9074
  store i32 0, i32* %i, align 4, !dbg !9075
  br label %for.cond, !dbg !9075

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.pci_bus*, %struct.pci_bus** %b.addr, align 8, !dbg !9077
  %1 = load i32, i32* %i, align 4, !dbg !9077
  %call = call %struct.resource* @pci_bus_resource_n(%struct.pci_bus* %0, i32 %1) #11, !dbg !9077
  store %struct.resource* %call, %struct.resource** %parent_r, align 8, !dbg !9077
  %tobool = icmp ne %struct.resource* %call, null, !dbg !9077
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !9077

lor.rhs:                                          ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !9077
  %cmp = icmp slt i32 %2, 4, !dbg !9077
  br label %lor.end, !dbg !9077

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %3 = phi i1 [ true, %for.cond ], [ %cmp, %lor.rhs ]
  br i1 %3, label %for.body, label %for.end, !dbg !9075

for.body:                                         ; preds = %lor.end
  %4 = load %struct.resource*, %struct.resource** %parent_r, align 8, !dbg !9079
  %tobool1 = icmp ne %struct.resource* %4, null, !dbg !9079
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9082

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !9083

if.end:                                           ; preds = %for.body
  %5 = load %struct.resource*, %struct.resource** %r.addr, align 8, !dbg !9084
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %5, i32 0, i32 3, !dbg !9086
  %6 = load i64, i64* %flags, align 8, !dbg !9086
  %7 = load i64, i64* %mask, align 8, !dbg !9087
  %and = and i64 %6, %7, !dbg !9088
  %8 = load %struct.resource*, %struct.resource** %parent_r, align 8, !dbg !9089
  %flags2 = getelementptr inbounds %struct.resource, %struct.resource* %8, i32 0, i32 3, !dbg !9090
  %9 = load i64, i64* %flags2, align 8, !dbg !9090
  %10 = load i64, i64* %mask, align 8, !dbg !9091
  %and3 = and i64 %9, %10, !dbg !9092
  %cmp4 = icmp eq i64 %and, %and3, !dbg !9093
  br i1 %cmp4, label %land.lhs.true, label %if.end8, !dbg !9094

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.resource*, %struct.resource** %parent_r, align 8, !dbg !9095
  %12 = load %struct.resource*, %struct.resource** %r.addr, align 8, !dbg !9096
  %call5 = call zeroext i1 @resource_contains(%struct.resource* %11, %struct.resource* %12) #11, !dbg !9097
  br i1 %call5, label %if.then6, label %if.end8, !dbg !9098

if.then6:                                         ; preds = %land.lhs.true
  %13 = load %struct.resource*, %struct.resource** %parent_r, align 8, !dbg !9099
  %14 = load %struct.resource*, %struct.resource** %r.addr, align 8, !dbg !9100
  %call7 = call i32 @request_resource(%struct.resource* %13, %struct.resource* %14) #11, !dbg !9101
  br label %if.end8, !dbg !9101

if.end8:                                          ; preds = %if.then6, %land.lhs.true, %if.end
  br label %for.inc, !dbg !9102

for.inc:                                          ; preds = %if.end8, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !9077
  %inc = add i32 %15, 1, !dbg !9077
  store i32 %inc, i32* %i, align 4, !dbg !9077
  br label %for.cond, !dbg !9077, !llvm.loop !9103

for.end:                                          ; preds = %lor.end
  ret void, !dbg !9105
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @resource_contains(%struct.resource* %r1, %struct.resource* %r2) #0 !dbg !9106 {
entry:
  %retval = alloca i1, align 1
  %r1.addr = alloca %struct.resource*, align 8
  %r2.addr = alloca %struct.resource*, align 8
  store %struct.resource* %r1, %struct.resource** %r1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %r1.addr, metadata !9109, metadata !DIExpression()), !dbg !9110
  store %struct.resource* %r2, %struct.resource** %r2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %r2.addr, metadata !9111, metadata !DIExpression()), !dbg !9112
  %0 = load %struct.resource*, %struct.resource** %r1.addr, align 8, !dbg !9113
  %call = call i64 @resource_type(%struct.resource* %0) #11, !dbg !9115
  %1 = load %struct.resource*, %struct.resource** %r2.addr, align 8, !dbg !9116
  %call1 = call i64 @resource_type(%struct.resource* %1) #11, !dbg !9117
  %cmp = icmp ne i64 %call, %call1, !dbg !9118
  br i1 %cmp, label %if.then, label %if.end, !dbg !9119

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9120
  br label %return, !dbg !9120

if.end:                                           ; preds = %entry
  %2 = load %struct.resource*, %struct.resource** %r1.addr, align 8, !dbg !9121
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %2, i32 0, i32 3, !dbg !9123
  %3 = load i64, i64* %flags, align 8, !dbg !9123
  %and = and i64 %3, 536870912, !dbg !9124
  %tobool = icmp ne i64 %and, 0, !dbg !9124
  br i1 %tobool, label %if.then5, label %lor.lhs.false, !dbg !9125

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.resource*, %struct.resource** %r2.addr, align 8, !dbg !9126
  %flags2 = getelementptr inbounds %struct.resource, %struct.resource* %4, i32 0, i32 3, !dbg !9127
  %5 = load i64, i64* %flags2, align 8, !dbg !9127
  %and3 = and i64 %5, 536870912, !dbg !9128
  %tobool4 = icmp ne i64 %and3, 0, !dbg !9128
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9129

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  store i1 false, i1* %retval, align 1, !dbg !9130
  br label %return, !dbg !9130

if.end6:                                          ; preds = %lor.lhs.false
  %6 = load %struct.resource*, %struct.resource** %r1.addr, align 8, !dbg !9131
  %start = getelementptr inbounds %struct.resource, %struct.resource* %6, i32 0, i32 0, !dbg !9132
  %7 = load i64, i64* %start, align 8, !dbg !9132
  %8 = load %struct.resource*, %struct.resource** %r2.addr, align 8, !dbg !9133
  %start7 = getelementptr inbounds %struct.resource, %struct.resource* %8, i32 0, i32 0, !dbg !9134
  %9 = load i64, i64* %start7, align 8, !dbg !9134
  %cmp8 = icmp ule i64 %7, %9, !dbg !9135
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !9136

land.rhs:                                         ; preds = %if.end6
  %10 = load %struct.resource*, %struct.resource** %r1.addr, align 8, !dbg !9137
  %end = getelementptr inbounds %struct.resource, %struct.resource* %10, i32 0, i32 1, !dbg !9138
  %11 = load i64, i64* %end, align 8, !dbg !9138
  %12 = load %struct.resource*, %struct.resource** %r2.addr, align 8, !dbg !9139
  %end9 = getelementptr inbounds %struct.resource, %struct.resource* %12, i32 0, i32 1, !dbg !9140
  %13 = load i64, i64* %end9, align 8, !dbg !9140
  %cmp10 = icmp uge i64 %11, %13, !dbg !9141
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end6
  %14 = phi i1 [ false, %if.end6 ], [ %cmp10, %land.rhs ], !dbg !9142
  store i1 %14, i1* %retval, align 1, !dbg !9143
  br label %return, !dbg !9143

return:                                           ; preds = %land.end, %if.then5, %if.then
  %15 = load i1, i1* %retval, align 1, !dbg !9144
  ret i1 %15, !dbg !9144
}

; Function Attrs: noredzone
declare dso_local i32 @request_resource(%struct.resource*, %struct.resource*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @resource_type(%struct.resource* %res) #0 !dbg !9145 {
entry:
  %res.addr = alloca %struct.resource*, align 8
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !9148, metadata !DIExpression()), !dbg !9149
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !9150
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %0, i32 0, i32 3, !dbg !9151
  %1 = load i64, i64* %flags, align 8, !dbg !9151
  %and = and i64 %1, 7936, !dbg !9152
  ret i64 %and, !dbg !9153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !9154 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9158, metadata !DIExpression()), !dbg !9159
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9160, metadata !DIExpression()), !dbg !9161
  ret i1 true, !dbg !9162
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !9163 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9167, metadata !DIExpression()), !dbg !9168
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9169, metadata !DIExpression()), !dbg !9170
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9171, metadata !DIExpression()), !dbg !9172
  ret void, !dbg !9173
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_sysdata* @to_pci_sysdata(%struct.pci_bus* %bus) #0 !dbg !9174 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !9186, metadata !DIExpression()), !dbg !9187
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9188
  %sysdata = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 11, !dbg !9189
  %1 = load i8*, i8** %sysdata, align 8, !dbg !9189
  %2 = bitcast i8* %1 to %struct.pci_sysdata*, !dbg !9188
  ret %struct.pci_sysdata* %2, !dbg !9190
}

; Function Attrs: noredzone
declare dso_local void @pci_read_bridge_bases(%struct.pci_bus*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_claim_bridge_resources(%struct.pci_dev* %dev) #0 !dbg !9191 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  %r = alloca %struct.resource*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9192, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9194, metadata !DIExpression()), !dbg !9195
  store i32 13, i32* %i, align 4, !dbg !9196
  br label %for.cond, !dbg !9198

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9199
  %cmp = icmp slt i32 %0, 17, !dbg !9201
  br i1 %cmp, label %for.body, label %for.end, !dbg !9202

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !9203, metadata !DIExpression()), !dbg !9205
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9206
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 44, !dbg !9207
  %2 = load i32, i32* %i, align 4, !dbg !9208
  %idxprom = sext i32 %2 to i64, !dbg !9206
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !9206
  store %struct.resource* %arrayidx, %struct.resource** %r, align 8, !dbg !9205
  %3 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9209
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 3, !dbg !9211
  %4 = load i64, i64* %flags, align 8, !dbg !9211
  %tobool = icmp ne i64 %4, 0, !dbg !9209
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9212

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9213
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %5, i32 0, i32 5, !dbg !9214
  %6 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !9214
  %tobool1 = icmp ne %struct.resource* %6, null, !dbg !9213
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9215

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !9216

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9217
  %8 = load i32, i32* %i, align 4, !dbg !9218
  %call = call i32 @pci_claim_bridge_resource(%struct.pci_dev* %7, i32 %8) #11, !dbg !9219
  br label %for.inc, !dbg !9220

for.inc:                                          ; preds = %if.end, %if.then
  %9 = load i32, i32* %i, align 4, !dbg !9221
  %inc = add i32 %9, 1, !dbg !9221
  store i32 %inc, i32* %i, align 4, !dbg !9221
  br label %for.cond, !dbg !9222, !llvm.loop !9223

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9225
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_claim_device_resources(%struct.pci_dev* %dev) #0 !dbg !9226 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  %r = alloca %struct.resource*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9227, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9229, metadata !DIExpression()), !dbg !9230
  store i32 0, i32* %i, align 4, !dbg !9231
  br label %for.cond, !dbg !9233

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9234
  %cmp = icmp slt i32 %0, 13, !dbg !9236
  br i1 %cmp, label %for.body, label %for.end, !dbg !9237

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !9238, metadata !DIExpression()), !dbg !9240
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9241
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 44, !dbg !9242
  %2 = load i32, i32* %i, align 4, !dbg !9243
  %idxprom = sext i32 %2 to i64, !dbg !9241
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !9241
  store %struct.resource* %arrayidx, %struct.resource** %r, align 8, !dbg !9240
  %3 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9244
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 3, !dbg !9246
  %4 = load i64, i64* %flags, align 8, !dbg !9246
  %tobool = icmp ne i64 %4, 0, !dbg !9244
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9247

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9248
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %5, i32 0, i32 5, !dbg !9249
  %6 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !9249
  %tobool1 = icmp ne %struct.resource* %6, null, !dbg !9248
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9250

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !9251

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9252
  %8 = load i32, i32* %i, align 4, !dbg !9253
  %call = call i32 @pci_claim_resource(%struct.pci_dev* %7, i32 %8) #11, !dbg !9254
  br label %for.inc, !dbg !9255

for.inc:                                          ; preds = %if.end, %if.then
  %9 = load i32, i32* %i, align 4, !dbg !9256
  %inc = add i32 %9, 1, !dbg !9256
  store i32 %inc, i32* %i, align 4, !dbg !9256
  br label %for.cond, !dbg !9257, !llvm.loop !9258

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9260
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bridge_release_resources(%struct.pci_bus* %bus, i64 %type) #0 !dbg !9261 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %type.addr = alloca i64, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %r = alloca %struct.resource*, align 8
  %old_flags = alloca i32, align 4
  %b_res = alloca %struct.resource*, align 8
  %idx = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !9262, metadata !DIExpression()), !dbg !9263
  store i64 %type, i64* %type.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type.addr, metadata !9264, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !9266, metadata !DIExpression()), !dbg !9267
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9268
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !9269
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !9269
  store %struct.pci_dev* %1, %struct.pci_dev** %dev, align 8, !dbg !9267
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !9270, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.declare(metadata i32* %old_flags, metadata !9272, metadata !DIExpression()), !dbg !9273
  store i32 0, i32* %old_flags, align 4, !dbg !9273
  call void @llvm.dbg.declare(metadata %struct.resource** %b_res, metadata !9274, metadata !DIExpression()), !dbg !9275
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !9276, metadata !DIExpression()), !dbg !9277
  store i32 1, i32* %idx, align 4, !dbg !9277
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9278
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 44, !dbg !9279
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 13, !dbg !9278
  store %struct.resource* %arrayidx, %struct.resource** %b_res, align 8, !dbg !9280
  %3 = load i64, i64* %type.addr, align 8, !dbg !9281
  %and = and i64 %3, 256, !dbg !9283
  %tobool = icmp ne i64 %and, 0, !dbg !9283
  br i1 %tobool, label %if.then, label %if.else, !dbg !9284

if.then:                                          ; preds = %entry
  store i32 0, i32* %idx, align 4, !dbg !9285
  br label %if.end25, !dbg !9286

if.else:                                          ; preds = %entry
  %4 = load i64, i64* %type.addr, align 8, !dbg !9287
  %and1 = and i64 %4, 8192, !dbg !9289
  %tobool2 = icmp ne i64 %and1, 0, !dbg !9289
  br i1 %tobool2, label %if.else4, label %if.then3, !dbg !9290

if.then3:                                         ; preds = %if.else
  store i32 1, i32* %idx, align 4, !dbg !9291
  br label %if.end24, !dbg !9292

if.else4:                                         ; preds = %if.else
  %5 = load i64, i64* %type.addr, align 8, !dbg !9293
  %and5 = and i64 %5, 1048576, !dbg !9295
  %tobool6 = icmp ne i64 %and5, 0, !dbg !9295
  br i1 %tobool6, label %land.lhs.true, label %if.else11, !dbg !9296

land.lhs.true:                                    ; preds = %if.else4
  %6 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !9297
  %arrayidx7 = getelementptr %struct.resource, %struct.resource* %6, i64 2, !dbg !9297
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx7, i32 0, i32 3, !dbg !9298
  %7 = load i64, i64* %flags, align 8, !dbg !9298
  %and8 = and i64 %7, 1048576, !dbg !9299
  %tobool9 = icmp ne i64 %and8, 0, !dbg !9299
  br i1 %tobool9, label %if.then10, label %if.else11, !dbg !9300

if.then10:                                        ; preds = %land.lhs.true
  store i32 2, i32* %idx, align 4, !dbg !9301
  br label %if.end23, !dbg !9302

if.else11:                                        ; preds = %land.lhs.true, %if.else4
  %8 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !9303
  %arrayidx12 = getelementptr %struct.resource, %struct.resource* %8, i64 2, !dbg !9303
  %flags13 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx12, i32 0, i32 3, !dbg !9305
  %9 = load i64, i64* %flags13, align 8, !dbg !9305
  %and14 = and i64 %9, 1048576, !dbg !9306
  %tobool15 = icmp ne i64 %and14, 0, !dbg !9306
  br i1 %tobool15, label %if.else22, label %land.lhs.true16, !dbg !9307

land.lhs.true16:                                  ; preds = %if.else11
  %10 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !9308
  %arrayidx17 = getelementptr %struct.resource, %struct.resource* %10, i64 2, !dbg !9308
  %flags18 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx17, i32 0, i32 3, !dbg !9309
  %11 = load i64, i64* %flags18, align 8, !dbg !9309
  %and19 = and i64 %11, 8192, !dbg !9310
  %tobool20 = icmp ne i64 %and19, 0, !dbg !9310
  br i1 %tobool20, label %if.then21, label %if.else22, !dbg !9311

if.then21:                                        ; preds = %land.lhs.true16
  store i32 2, i32* %idx, align 4, !dbg !9312
  br label %if.end, !dbg !9313

if.else22:                                        ; preds = %land.lhs.true16, %if.else11
  store i32 1, i32* %idx, align 4, !dbg !9314
  br label %if.end

if.end:                                           ; preds = %if.else22, %if.then21
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then10
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then3
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then
  %12 = load %struct.resource*, %struct.resource** %b_res, align 8, !dbg !9315
  %13 = load i32, i32* %idx, align 4, !dbg !9316
  %idxprom = sext i32 %13 to i64, !dbg !9315
  %arrayidx26 = getelementptr %struct.resource, %struct.resource* %12, i64 %idxprom, !dbg !9315
  store %struct.resource* %arrayidx26, %struct.resource** %r, align 8, !dbg !9317
  %14 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9318
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %14, i32 0, i32 5, !dbg !9320
  %15 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !9320
  %tobool27 = icmp ne %struct.resource* %15, null, !dbg !9318
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !9321

if.then28:                                        ; preds = %if.end25
  br label %if.end44, !dbg !9322

if.end29:                                         ; preds = %if.end25
  %16 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9323
  call void @release_child_resources(%struct.resource* %16) #11, !dbg !9324
  %17 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9325
  %call = call i32 @release_resource(%struct.resource* %17) #11, !dbg !9327
  %tobool30 = icmp ne i32 %call, 0, !dbg !9327
  br i1 %tobool30, label %if.end44, label %if.then31, !dbg !9328

if.then31:                                        ; preds = %if.end29
  %18 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9329
  %flags32 = getelementptr inbounds %struct.resource, %struct.resource* %18, i32 0, i32 3, !dbg !9331
  %19 = load i64, i64* %flags32, align 8, !dbg !9331
  %and33 = and i64 %19, 1057536, !dbg !9332
  %conv = trunc i64 %and33 to i32, !dbg !9329
  store i32 %conv, i32* %old_flags, align 4, !dbg !9333
  %conv34 = zext i32 %conv to i64, !dbg !9334
  store i64 %conv34, i64* %type.addr, align 8, !dbg !9335
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9336
  %dev35 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !9336
  %21 = load i32, i32* %idx, align 4, !dbg !9336
  %add = add i32 13, %21, !dbg !9336
  %22 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9336
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev35, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22, i64 0, i64 0), i32 %add, %struct.resource* %22) #10, !dbg !9336
  %23 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9337
  %call36 = call i64 @resource_size(%struct.resource* %23) #11, !dbg !9338
  %sub = sub i64 %call36, 1, !dbg !9339
  %24 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9340
  %end = getelementptr inbounds %struct.resource, %struct.resource* %24, i32 0, i32 1, !dbg !9341
  store i64 %sub, i64* %end, align 8, !dbg !9342
  %25 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9343
  %start = getelementptr inbounds %struct.resource, %struct.resource* %25, i32 0, i32 0, !dbg !9344
  store i64 0, i64* %start, align 8, !dbg !9345
  %26 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9346
  %flags37 = getelementptr inbounds %struct.resource, %struct.resource* %26, i32 0, i32 3, !dbg !9347
  store i64 0, i64* %flags37, align 8, !dbg !9348
  %27 = load i64, i64* %type.addr, align 8, !dbg !9349
  %and38 = and i64 %27, 8192, !dbg !9351
  %tobool39 = icmp ne i64 %and38, 0, !dbg !9351
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !9352

if.then40:                                        ; preds = %if.then31
  store i64 8192, i64* %type.addr, align 8, !dbg !9353
  br label %if.end41, !dbg !9354

if.end41:                                         ; preds = %if.then40, %if.then31
  %28 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9355
  %29 = load i64, i64* %type.addr, align 8, !dbg !9356
  call void @__pci_setup_bridge(%struct.pci_bus* %28, i64 %29) #11, !dbg !9357
  %30 = load i32, i32* %old_flags, align 4, !dbg !9358
  %conv42 = zext i32 %30 to i64, !dbg !9358
  %31 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !9359
  %flags43 = getelementptr inbounds %struct.resource, %struct.resource* %31, i32 0, i32 3, !dbg !9360
  store i64 %conv42, i64* %flags43, align 8, !dbg !9361
  br label %if.end44, !dbg !9362

if.end44:                                         ; preds = %if.then28, %if.end41, %if.end29
  ret void, !dbg !9363
}

; Function Attrs: noredzone
declare dso_local void @release_child_resources(%struct.resource*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bus_dump_res(%struct.pci_bus* %bus) #0 !dbg !9364 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %res = alloca %struct.resource*, align 8
  %i = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !9365, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !9367, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9369, metadata !DIExpression()), !dbg !9370
  store i32 0, i32* %i, align 4, !dbg !9371
  br label %for.cond, !dbg !9371

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9373
  %1 = load i32, i32* %i, align 4, !dbg !9373
  %call = call %struct.resource* @pci_bus_resource_n(%struct.pci_bus* %0, i32 %1) #11, !dbg !9373
  store %struct.resource* %call, %struct.resource** %res, align 8, !dbg !9373
  %tobool = icmp ne %struct.resource* %call, null, !dbg !9373
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !9373

lor.rhs:                                          ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !9373
  %cmp = icmp slt i32 %2, 4, !dbg !9373
  br label %lor.end, !dbg !9373

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %3 = phi i1 [ true, %for.cond ], [ %cmp, %lor.rhs ]
  br i1 %3, label %for.body, label %for.end, !dbg !9371

for.body:                                         ; preds = %lor.end
  %4 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9375
  %tobool1 = icmp ne %struct.resource* %4, null, !dbg !9375
  br i1 %tobool1, label %lor.lhs.false, label %if.then, !dbg !9378

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9379
  %end = getelementptr inbounds %struct.resource, %struct.resource* %5, i32 0, i32 1, !dbg !9380
  %6 = load i64, i64* %end, align 8, !dbg !9380
  %tobool2 = icmp ne i64 %6, 0, !dbg !9379
  br i1 %tobool2, label %lor.lhs.false3, label %if.then, !dbg !9381

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %7 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9382
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %7, i32 0, i32 3, !dbg !9383
  %8 = load i64, i64* %flags, align 8, !dbg !9383
  %tobool4 = icmp ne i64 %8, 0, !dbg !9382
  br i1 %tobool4, label %if.end, label %if.then, !dbg !9384

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !9385

if.end:                                           ; preds = %lor.lhs.false3
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9386
  %dev = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %9, i32 0, i32 21, !dbg !9386
  %10 = load i32, i32* %i, align 4, !dbg !9386
  %11 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9386
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i32 %10, %struct.resource* %11) #10, !dbg !9386
  br label %for.inc, !dbg !9387

for.inc:                                          ; preds = %if.end, %if.then
  %12 = load i32, i32* %i, align 4, !dbg !9373
  %inc = add i32 %12, 1, !dbg !9373
  store i32 %inc, i32* %i, align 4, !dbg !9373
  br label %for.cond, !dbg !9373, !llvm.loop !9388

for.end:                                          ; preds = %lor.end
  ret void, !dbg !9390
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bus_distribute_available_resources(%struct.pci_bus* %bus, %struct.list_head* %add_list, %struct.resource* byval(%struct.resource) align 8 %io, %struct.resource* byval(%struct.resource) align 8 %mmio, %struct.resource* byval(%struct.resource) align 8 %mmio_pref) #0 !dbg !9391 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %add_list.addr = alloca %struct.list_head*, align 8
  %normal_bridges = alloca i32, align 4
  %hotplug_bridges = alloca i32, align 4
  %io_res = alloca %struct.resource*, align 8
  %mmio_res = alloca %struct.resource*, align 8
  %mmio_pref_res = alloca %struct.resource*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %io_per_hp = alloca i64, align 8
  %mmio_per_hp = alloca i64, align 8
  %mmio_pref_per_hp = alloca i64, align 8
  %align = alloca i64, align 8
  %__UNIQUE_ID___x319 = alloca i64, align 8
  %__UNIQUE_ID___y320 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %__UNIQUE_ID___x321 = alloca i64, align 8
  %__UNIQUE_ID___y322 = alloca i64, align 8
  %tmp23 = alloca i64, align 8
  %__UNIQUE_ID___x323 = alloca i64, align 8
  %__UNIQUE_ID___y324 = alloca i64, align 8
  %tmp45 = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp56 = alloca %struct.pci_dev*, align 8
  %__mptr67 = alloca i8*, align 8
  %tmp72 = alloca %struct.pci_dev*, align 8
  %__mptr77 = alloca i8*, align 8
  %tmp82 = alloca %struct.pci_dev*, align 8
  %__mptr92 = alloca i8*, align 8
  %tmp97 = alloca %struct.pci_dev*, align 8
  %used_size = alloca i64, align 8
  %res = alloca %struct.resource*, align 8
  %__UNIQUE_ID___x330 = alloca i64, align 8
  %__UNIQUE_ID___y331 = alloca i64, align 8
  %tmp141 = alloca i64, align 8
  %__UNIQUE_ID___x332 = alloca i64, align 8
  %__UNIQUE_ID___y333 = alloca i64, align 8
  %tmp174 = alloca i64, align 8
  %__UNIQUE_ID___x334 = alloca i64, align 8
  %__UNIQUE_ID___y335 = alloca i64, align 8
  %tmp207 = alloca i64, align 8
  %__mptr217 = alloca i8*, align 8
  %tmp222 = alloca %struct.pci_dev*, align 8
  %__mptr233 = alloca i8*, align 8
  %tmp238 = alloca %struct.pci_dev*, align 8
  %b = alloca %struct.pci_bus*, align 8
  %__mptr280 = alloca i8*, align 8
  %tmp285 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !9394, metadata !DIExpression()), !dbg !9395
  store %struct.list_head* %add_list, %struct.list_head** %add_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %add_list.addr, metadata !9396, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.declare(metadata %struct.resource* %io, metadata !9398, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.declare(metadata %struct.resource* %mmio, metadata !9400, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.declare(metadata %struct.resource* %mmio_pref, metadata !9402, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.declare(metadata i32* %normal_bridges, metadata !9404, metadata !DIExpression()), !dbg !9405
  store i32 0, i32* %normal_bridges, align 4, !dbg !9405
  call void @llvm.dbg.declare(metadata i32* %hotplug_bridges, metadata !9406, metadata !DIExpression()), !dbg !9407
  store i32 0, i32* %hotplug_bridges, align 4, !dbg !9407
  call void @llvm.dbg.declare(metadata %struct.resource** %io_res, metadata !9408, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.declare(metadata %struct.resource** %mmio_res, metadata !9410, metadata !DIExpression()), !dbg !9411
  call void @llvm.dbg.declare(metadata %struct.resource** %mmio_pref_res, metadata !9412, metadata !DIExpression()), !dbg !9413
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !9416, metadata !DIExpression()), !dbg !9417
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9418
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !9419
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !9419
  store %struct.pci_dev* %1, %struct.pci_dev** %bridge, align 8, !dbg !9417
  call void @llvm.dbg.declare(metadata i64* %io_per_hp, metadata !9420, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.declare(metadata i64* %mmio_per_hp, metadata !9422, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.declare(metadata i64* %mmio_pref_per_hp, metadata !9424, metadata !DIExpression()), !dbg !9425
  call void @llvm.dbg.declare(metadata i64* %align, metadata !9426, metadata !DIExpression()), !dbg !9427
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9428
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 44, !dbg !9429
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 13, !dbg !9428
  store %struct.resource* %arrayidx, %struct.resource** %io_res, align 8, !dbg !9430
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9431
  %resource1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 44, !dbg !9432
  %arrayidx2 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource1, i64 0, i64 14, !dbg !9431
  store %struct.resource* %arrayidx2, %struct.resource** %mmio_res, align 8, !dbg !9433
  %4 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9434
  %resource3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 44, !dbg !9435
  %arrayidx4 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource3, i64 0, i64 15, !dbg !9434
  store %struct.resource* %arrayidx4, %struct.resource** %mmio_pref_res, align 8, !dbg !9436
  %5 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9437
  %6 = load %struct.resource*, %struct.resource** %io_res, align 8, !dbg !9438
  %call = call i64 @pci_resource_alignment(%struct.pci_dev* %5, %struct.resource* %6) #11, !dbg !9439
  store i64 %call, i64* %align, align 8, !dbg !9440
  %7 = load %struct.resource*, %struct.resource** %io_res, align 8, !dbg !9441
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %7, i32 0, i32 5, !dbg !9443
  %8 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !9443
  %tobool = icmp ne %struct.resource* %8, null, !dbg !9441
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !9444

land.lhs.true:                                    ; preds = %entry
  %9 = load i64, i64* %align, align 8, !dbg !9445
  %tobool5 = icmp ne i64 %9, 0, !dbg !9445
  br i1 %tobool5, label %if.then, label %if.end, !dbg !9446

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x319, metadata !9447, metadata !DIExpression()), !dbg !9449
  %start = getelementptr inbounds %struct.resource, %struct.resource* %io, i32 0, i32 0, !dbg !9449
  %10 = load i64, i64* %start, align 8, !dbg !9449
  %11 = load i64, i64* %align, align 8, !dbg !9449
  %sub = sub i64 %11, 1, !dbg !9449
  %add = add i64 %10, %sub, !dbg !9449
  %12 = load i64, i64* %align, align 8, !dbg !9449
  %sub6 = sub i64 %12, 1, !dbg !9449
  %neg = xor i64 %sub6, -1, !dbg !9449
  %and = and i64 %add, %neg, !dbg !9449
  store i64 %and, i64* %__UNIQUE_ID___x319, align 8, !dbg !9449
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y320, metadata !9450, metadata !DIExpression()), !dbg !9449
  %end = getelementptr inbounds %struct.resource, %struct.resource* %io, i32 0, i32 1, !dbg !9449
  %13 = load i64, i64* %end, align 8, !dbg !9449
  %add7 = add i64 %13, 1, !dbg !9449
  store i64 %add7, i64* %__UNIQUE_ID___y320, align 8, !dbg !9449
  %14 = load i64, i64* %__UNIQUE_ID___x319, align 8, !dbg !9449
  %15 = load i64, i64* %__UNIQUE_ID___y320, align 8, !dbg !9449
  %cmp = icmp ult i64 %14, %15, !dbg !9449
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9449

cond.true:                                        ; preds = %if.then
  %16 = load i64, i64* %__UNIQUE_ID___x319, align 8, !dbg !9449
  br label %cond.end, !dbg !9449

cond.false:                                       ; preds = %if.then
  %17 = load i64, i64* %__UNIQUE_ID___y320, align 8, !dbg !9449
  br label %cond.end, !dbg !9449

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %16, %cond.true ], [ %17, %cond.false ], !dbg !9449
  store i64 %cond, i64* %tmp, align 8, !dbg !9449
  %18 = load i64, i64* %tmp, align 8, !dbg !9449
  %start8 = getelementptr inbounds %struct.resource, %struct.resource* %io, i32 0, i32 0, !dbg !9451
  store i64 %18, i64* %start8, align 8, !dbg !9452
  br label %if.end, !dbg !9453

if.end:                                           ; preds = %cond.end, %land.lhs.true, %entry
  %19 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9454
  %20 = load %struct.resource*, %struct.resource** %mmio_res, align 8, !dbg !9455
  %call9 = call i64 @pci_resource_alignment(%struct.pci_dev* %19, %struct.resource* %20) #11, !dbg !9456
  store i64 %call9, i64* %align, align 8, !dbg !9457
  %21 = load %struct.resource*, %struct.resource** %mmio_res, align 8, !dbg !9458
  %parent10 = getelementptr inbounds %struct.resource, %struct.resource* %21, i32 0, i32 5, !dbg !9460
  %22 = load %struct.resource*, %struct.resource** %parent10, align 8, !dbg !9460
  %tobool11 = icmp ne %struct.resource* %22, null, !dbg !9458
  br i1 %tobool11, label %if.end30, label %land.lhs.true12, !dbg !9461

land.lhs.true12:                                  ; preds = %if.end
  %23 = load i64, i64* %align, align 8, !dbg !9462
  %tobool13 = icmp ne i64 %23, 0, !dbg !9462
  br i1 %tobool13, label %if.then14, label %if.end30, !dbg !9463

if.then14:                                        ; preds = %land.lhs.true12
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x321, metadata !9464, metadata !DIExpression()), !dbg !9466
  %start15 = getelementptr inbounds %struct.resource, %struct.resource* %mmio, i32 0, i32 0, !dbg !9466
  %24 = load i64, i64* %start15, align 8, !dbg !9466
  %25 = load i64, i64* %align, align 8, !dbg !9466
  %sub16 = sub i64 %25, 1, !dbg !9466
  %add17 = add i64 %24, %sub16, !dbg !9466
  %26 = load i64, i64* %align, align 8, !dbg !9466
  %sub18 = sub i64 %26, 1, !dbg !9466
  %neg19 = xor i64 %sub18, -1, !dbg !9466
  %and20 = and i64 %add17, %neg19, !dbg !9466
  store i64 %and20, i64* %__UNIQUE_ID___x321, align 8, !dbg !9466
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y322, metadata !9467, metadata !DIExpression()), !dbg !9466
  %end21 = getelementptr inbounds %struct.resource, %struct.resource* %mmio, i32 0, i32 1, !dbg !9466
  %27 = load i64, i64* %end21, align 8, !dbg !9466
  %add22 = add i64 %27, 1, !dbg !9466
  store i64 %add22, i64* %__UNIQUE_ID___y322, align 8, !dbg !9466
  %28 = load i64, i64* %__UNIQUE_ID___x321, align 8, !dbg !9466
  %29 = load i64, i64* %__UNIQUE_ID___y322, align 8, !dbg !9466
  %cmp24 = icmp ult i64 %28, %29, !dbg !9466
  br i1 %cmp24, label %cond.true25, label %cond.false26, !dbg !9466

cond.true25:                                      ; preds = %if.then14
  %30 = load i64, i64* %__UNIQUE_ID___x321, align 8, !dbg !9466
  br label %cond.end27, !dbg !9466

cond.false26:                                     ; preds = %if.then14
  %31 = load i64, i64* %__UNIQUE_ID___y322, align 8, !dbg !9466
  br label %cond.end27, !dbg !9466

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond28 = phi i64 [ %30, %cond.true25 ], [ %31, %cond.false26 ], !dbg !9466
  store i64 %cond28, i64* %tmp23, align 8, !dbg !9466
  %32 = load i64, i64* %tmp23, align 8, !dbg !9466
  %start29 = getelementptr inbounds %struct.resource, %struct.resource* %mmio, i32 0, i32 0, !dbg !9468
  store i64 %32, i64* %start29, align 8, !dbg !9469
  br label %if.end30, !dbg !9470

if.end30:                                         ; preds = %cond.end27, %land.lhs.true12, %if.end
  %33 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9471
  %34 = load %struct.resource*, %struct.resource** %mmio_pref_res, align 8, !dbg !9472
  %call31 = call i64 @pci_resource_alignment(%struct.pci_dev* %33, %struct.resource* %34) #11, !dbg !9473
  store i64 %call31, i64* %align, align 8, !dbg !9474
  %35 = load %struct.resource*, %struct.resource** %mmio_pref_res, align 8, !dbg !9475
  %parent32 = getelementptr inbounds %struct.resource, %struct.resource* %35, i32 0, i32 5, !dbg !9477
  %36 = load %struct.resource*, %struct.resource** %parent32, align 8, !dbg !9477
  %tobool33 = icmp ne %struct.resource* %36, null, !dbg !9475
  br i1 %tobool33, label %if.end52, label %land.lhs.true34, !dbg !9478

land.lhs.true34:                                  ; preds = %if.end30
  %37 = load i64, i64* %align, align 8, !dbg !9479
  %tobool35 = icmp ne i64 %37, 0, !dbg !9479
  br i1 %tobool35, label %if.then36, label %if.end52, !dbg !9480

if.then36:                                        ; preds = %land.lhs.true34
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x323, metadata !9481, metadata !DIExpression()), !dbg !9483
  %start37 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_pref, i32 0, i32 0, !dbg !9483
  %38 = load i64, i64* %start37, align 8, !dbg !9483
  %39 = load i64, i64* %align, align 8, !dbg !9483
  %sub38 = sub i64 %39, 1, !dbg !9483
  %add39 = add i64 %38, %sub38, !dbg !9483
  %40 = load i64, i64* %align, align 8, !dbg !9483
  %sub40 = sub i64 %40, 1, !dbg !9483
  %neg41 = xor i64 %sub40, -1, !dbg !9483
  %and42 = and i64 %add39, %neg41, !dbg !9483
  store i64 %and42, i64* %__UNIQUE_ID___x323, align 8, !dbg !9483
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y324, metadata !9484, metadata !DIExpression()), !dbg !9483
  %end43 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_pref, i32 0, i32 1, !dbg !9483
  %41 = load i64, i64* %end43, align 8, !dbg !9483
  %add44 = add i64 %41, 1, !dbg !9483
  store i64 %add44, i64* %__UNIQUE_ID___y324, align 8, !dbg !9483
  %42 = load i64, i64* %__UNIQUE_ID___x323, align 8, !dbg !9483
  %43 = load i64, i64* %__UNIQUE_ID___y324, align 8, !dbg !9483
  %cmp46 = icmp ult i64 %42, %43, !dbg !9483
  br i1 %cmp46, label %cond.true47, label %cond.false48, !dbg !9483

cond.true47:                                      ; preds = %if.then36
  %44 = load i64, i64* %__UNIQUE_ID___x323, align 8, !dbg !9483
  br label %cond.end49, !dbg !9483

cond.false48:                                     ; preds = %if.then36
  %45 = load i64, i64* %__UNIQUE_ID___y324, align 8, !dbg !9483
  br label %cond.end49, !dbg !9483

cond.end49:                                       ; preds = %cond.false48, %cond.true47
  %cond50 = phi i64 [ %44, %cond.true47 ], [ %45, %cond.false48 ], !dbg !9483
  store i64 %cond50, i64* %tmp45, align 8, !dbg !9483
  %46 = load i64, i64* %tmp45, align 8, !dbg !9483
  %start51 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_pref, i32 0, i32 0, !dbg !9485
  store i64 %46, i64* %start51, align 8, !dbg !9486
  br label %if.end52, !dbg !9487

if.end52:                                         ; preds = %cond.end49, %land.lhs.true34, %if.end30
  %47 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9488
  %48 = load %struct.resource*, %struct.resource** %io_res, align 8, !dbg !9489
  %49 = load %struct.list_head*, %struct.list_head** %add_list.addr, align 8, !dbg !9490
  %call53 = call i64 @resource_size(%struct.resource* %io) #11, !dbg !9491
  call void @adjust_bridge_window(%struct.pci_dev* %47, %struct.resource* %48, %struct.list_head* %49, i64 %call53) #11, !dbg !9492
  %50 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9493
  %51 = load %struct.resource*, %struct.resource** %mmio_res, align 8, !dbg !9494
  %52 = load %struct.list_head*, %struct.list_head** %add_list.addr, align 8, !dbg !9495
  %call54 = call i64 @resource_size(%struct.resource* %mmio) #11, !dbg !9496
  call void @adjust_bridge_window(%struct.pci_dev* %50, %struct.resource* %51, %struct.list_head* %52, i64 %call54) #11, !dbg !9497
  %53 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9498
  %54 = load %struct.resource*, %struct.resource** %mmio_pref_res, align 8, !dbg !9499
  %55 = load %struct.list_head*, %struct.list_head** %add_list.addr, align 8, !dbg !9500
  %call55 = call i64 @resource_size(%struct.resource* %mmio_pref) #11, !dbg !9501
  call void @adjust_bridge_window(%struct.pci_dev* %53, %struct.resource* %54, %struct.list_head* %55, i64 %call55) #11, !dbg !9502
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9503, metadata !DIExpression()), !dbg !9506
  %56 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9506
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %56, i32 0, i32 3, !dbg !9506
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !9506
  %57 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9506
  %58 = bitcast %struct.list_head* %57 to i8*, !dbg !9506
  store i8* %58, i8** %__mptr, align 8, !dbg !9506
  br label %do.body, !dbg !9506

do.body:                                          ; preds = %if.end52
  br label %do.end, !dbg !9507

do.end:                                           ; preds = %do.body
  %59 = load i8*, i8** %__mptr, align 8, !dbg !9506
  %add.ptr = getelementptr i8, i8* %59, i64 0, !dbg !9506
  %60 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !9506
  store %struct.pci_dev* %60, %struct.pci_dev** %tmp56, align 8, !dbg !9507
  %61 = load %struct.pci_dev*, %struct.pci_dev** %tmp56, align 8, !dbg !9506
  store %struct.pci_dev* %61, %struct.pci_dev** %dev, align 8, !dbg !9509
  br label %for.cond, !dbg !9509

for.cond:                                         ; preds = %do.end71, %do.end
  %62 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9510
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %62, i32 0, i32 0, !dbg !9510
  %63 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9510
  %devices57 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %63, i32 0, i32 3, !dbg !9510
  %cmp58 = icmp eq %struct.list_head* %bus_list, %devices57, !dbg !9510
  %lnot = xor i1 %cmp58, true, !dbg !9510
  br i1 %lnot, label %for.body, label %for.end, !dbg !9509

for.body:                                         ; preds = %for.cond
  %64 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9512
  %call59 = call zeroext i1 @pci_is_bridge(%struct.pci_dev* %64) #11, !dbg !9512
  br i1 %call59, label %if.else, label %if.then60, !dbg !9510

if.then60:                                        ; preds = %for.body
  br label %if.end66, !dbg !9514

if.else:                                          ; preds = %for.body
  %65 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9516
  %is_hotplug_bridge = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %65, i32 0, i32 46, !dbg !9519
  %66 = bitcast [5 x i8]* %is_hotplug_bridge to i40*, !dbg !9519
  %bf.load = load i40, i40* %66, align 1, !dbg !9519
  %bf.lshr = lshr i40 %bf.load, 24, !dbg !9519
  %bf.clear = and i40 %bf.lshr, 1, !dbg !9519
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !9519
  %tobool61 = icmp ne i32 %bf.cast, 0, !dbg !9516
  br i1 %tobool61, label %if.then62, label %if.else63, !dbg !9520

if.then62:                                        ; preds = %if.else
  %67 = load i32, i32* %hotplug_bridges, align 4, !dbg !9521
  %inc = add i32 %67, 1, !dbg !9521
  store i32 %inc, i32* %hotplug_bridges, align 4, !dbg !9521
  br label %if.end65, !dbg !9522

if.else63:                                        ; preds = %if.else
  %68 = load i32, i32* %normal_bridges, align 4, !dbg !9523
  %inc64 = add i32 %68, 1, !dbg !9523
  store i32 %inc64, i32* %normal_bridges, align 4, !dbg !9523
  br label %if.end65

if.end65:                                         ; preds = %if.else63, %if.then62
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then60
  br label %for.inc, !dbg !9512

for.inc:                                          ; preds = %if.end66
  call void @llvm.dbg.declare(metadata i8** %__mptr67, metadata !9524, metadata !DIExpression()), !dbg !9526
  %69 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9526
  %bus_list68 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %69, i32 0, i32 0, !dbg !9526
  %next69 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list68, i32 0, i32 0, !dbg !9526
  %70 = load %struct.list_head*, %struct.list_head** %next69, align 8, !dbg !9526
  %71 = bitcast %struct.list_head* %70 to i8*, !dbg !9526
  store i8* %71, i8** %__mptr67, align 8, !dbg !9526
  br label %do.body70, !dbg !9526

do.body70:                                        ; preds = %for.inc
  br label %do.end71, !dbg !9527

do.end71:                                         ; preds = %do.body70
  %72 = load i8*, i8** %__mptr67, align 8, !dbg !9526
  %add.ptr73 = getelementptr i8, i8* %72, i64 0, !dbg !9526
  %73 = bitcast i8* %add.ptr73 to %struct.pci_dev*, !dbg !9526
  store %struct.pci_dev* %73, %struct.pci_dev** %tmp72, align 8, !dbg !9527
  %74 = load %struct.pci_dev*, %struct.pci_dev** %tmp72, align 8, !dbg !9526
  store %struct.pci_dev* %74, %struct.pci_dev** %dev, align 8, !dbg !9510
  br label %for.cond, !dbg !9510, !llvm.loop !9529

for.end:                                          ; preds = %for.cond
  %75 = load i32, i32* %hotplug_bridges, align 4, !dbg !9531
  %76 = load i32, i32* %normal_bridges, align 4, !dbg !9533
  %add74 = add i32 %75, %76, !dbg !9534
  %cmp75 = icmp eq i32 %add74, 1, !dbg !9535
  br i1 %cmp75, label %if.then76, label %if.end88, !dbg !9536

if.then76:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr77, metadata !9537, metadata !DIExpression()), !dbg !9540
  %77 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9540
  %devices78 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %77, i32 0, i32 3, !dbg !9540
  %next79 = getelementptr inbounds %struct.list_head, %struct.list_head* %devices78, i32 0, i32 0, !dbg !9540
  %78 = load %struct.list_head*, %struct.list_head** %next79, align 8, !dbg !9540
  %79 = bitcast %struct.list_head* %78 to i8*, !dbg !9540
  store i8* %79, i8** %__mptr77, align 8, !dbg !9540
  br label %do.body80, !dbg !9540

do.body80:                                        ; preds = %if.then76
  br label %do.end81, !dbg !9541

do.end81:                                         ; preds = %do.body80
  %80 = load i8*, i8** %__mptr77, align 8, !dbg !9540
  %add.ptr83 = getelementptr i8, i8* %80, i64 0, !dbg !9540
  %81 = bitcast i8* %add.ptr83 to %struct.pci_dev*, !dbg !9540
  store %struct.pci_dev* %81, %struct.pci_dev** %tmp82, align 8, !dbg !9541
  %82 = load %struct.pci_dev*, %struct.pci_dev** %tmp82, align 8, !dbg !9540
  store %struct.pci_dev* %82, %struct.pci_dev** %dev, align 8, !dbg !9543
  %83 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9544
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %83, i32 0, i32 2, !dbg !9546
  %84 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !9546
  %tobool84 = icmp ne %struct.pci_bus* %84, null, !dbg !9544
  br i1 %tobool84, label %if.then85, label %if.end87, !dbg !9547

if.then85:                                        ; preds = %do.end81
  %85 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9548
  %subordinate86 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %85, i32 0, i32 2, !dbg !9549
  %86 = load %struct.pci_bus*, %struct.pci_bus** %subordinate86, align 8, !dbg !9549
  %87 = load %struct.list_head*, %struct.list_head** %add_list.addr, align 8, !dbg !9550
  call void @pci_bus_distribute_available_resources(%struct.pci_bus* %86, %struct.list_head* %87, %struct.resource* byval(%struct.resource) align 8 %io, %struct.resource* byval(%struct.resource) align 8 %mmio, %struct.resource* byval(%struct.resource) align 8 %mmio_pref) #11, !dbg !9551
  br label %if.end87, !dbg !9551

if.end87:                                         ; preds = %if.then85, %do.end81
  br label %for.end287, !dbg !9552

if.end88:                                         ; preds = %for.end
  %88 = load i32, i32* %hotplug_bridges, align 4, !dbg !9553
  %cmp89 = icmp eq i32 %88, 0, !dbg !9555
  br i1 %cmp89, label %if.then90, label %if.end91, !dbg !9556

if.then90:                                        ; preds = %if.end88
  br label %for.end287, !dbg !9557

if.end91:                                         ; preds = %if.end88
  call void @llvm.dbg.declare(metadata i8** %__mptr92, metadata !9558, metadata !DIExpression()), !dbg !9561
  %89 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9561
  %devices93 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %89, i32 0, i32 3, !dbg !9561
  %next94 = getelementptr inbounds %struct.list_head, %struct.list_head* %devices93, i32 0, i32 0, !dbg !9561
  %90 = load %struct.list_head*, %struct.list_head** %next94, align 8, !dbg !9561
  %91 = bitcast %struct.list_head* %90 to i8*, !dbg !9561
  store i8* %91, i8** %__mptr92, align 8, !dbg !9561
  br label %do.body95, !dbg !9561

do.body95:                                        ; preds = %if.end91
  br label %do.end96, !dbg !9562

do.end96:                                         ; preds = %do.body95
  %92 = load i8*, i8** %__mptr92, align 8, !dbg !9561
  %add.ptr98 = getelementptr i8, i8* %92, i64 0, !dbg !9561
  %93 = bitcast i8* %add.ptr98 to %struct.pci_dev*, !dbg !9561
  store %struct.pci_dev* %93, %struct.pci_dev** %tmp97, align 8, !dbg !9562
  %94 = load %struct.pci_dev*, %struct.pci_dev** %tmp97, align 8, !dbg !9561
  store %struct.pci_dev* %94, %struct.pci_dev** %dev, align 8, !dbg !9564
  br label %for.cond99, !dbg !9564

for.cond99:                                       ; preds = %do.end221, %do.end96
  %95 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9565
  %bus_list100 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %95, i32 0, i32 0, !dbg !9565
  %96 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9565
  %devices101 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %96, i32 0, i32 3, !dbg !9565
  %cmp102 = icmp eq %struct.list_head* %bus_list100, %devices101, !dbg !9565
  %lnot103 = xor i1 %cmp102, true, !dbg !9565
  br i1 %lnot103, label %for.body104, label %for.end224, !dbg !9564

for.body104:                                      ; preds = %for.cond99
  %97 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9567
  %call105 = call zeroext i1 @pci_is_bridge(%struct.pci_dev* %97) #11, !dbg !9567
  br i1 %call105, label %if.else107, label %if.then106, !dbg !9565

if.then106:                                       ; preds = %for.body104
  br label %if.end215, !dbg !9569

if.else107:                                       ; preds = %for.body104
  call void @llvm.dbg.declare(metadata i64* %used_size, metadata !9571, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !9574, metadata !DIExpression()), !dbg !9575
  %98 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9576
  %is_hotplug_bridge108 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %98, i32 0, i32 46, !dbg !9578
  %99 = bitcast [5 x i8]* %is_hotplug_bridge108 to i40*, !dbg !9578
  %bf.load109 = load i40, i40* %99, align 1, !dbg !9578
  %bf.lshr110 = lshr i40 %bf.load109, 24, !dbg !9578
  %bf.clear111 = and i40 %bf.lshr110, 1, !dbg !9578
  %bf.cast112 = trunc i40 %bf.clear111 to i32, !dbg !9578
  %tobool113 = icmp ne i32 %bf.cast112, 0, !dbg !9576
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !9579

if.then114:                                       ; preds = %if.else107
  br label %for.inc216, !dbg !9580

if.end115:                                        ; preds = %if.else107
  %100 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9581
  %resource116 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %100, i32 0, i32 44, !dbg !9582
  %arrayidx117 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource116, i64 0, i64 13, !dbg !9581
  store %struct.resource* %arrayidx117, %struct.resource** %res, align 8, !dbg !9583
  %101 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9584
  %102 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9585
  %call118 = call i64 @pci_resource_alignment(%struct.pci_dev* %101, %struct.resource* %102) #11, !dbg !9586
  store i64 %call118, i64* %align, align 8, !dbg !9587
  %103 = load i64, i64* %align, align 8, !dbg !9588
  %tobool119 = icmp ne i64 %103, 0, !dbg !9588
  br i1 %tobool119, label %cond.true120, label %cond.false129, !dbg !9588

cond.true120:                                     ; preds = %if.end115
  %start121 = getelementptr inbounds %struct.resource, %struct.resource* %io, i32 0, i32 0, !dbg !9589
  %104 = load i64, i64* %start121, align 8, !dbg !9589
  %105 = load i64, i64* %align, align 8, !dbg !9589
  %sub122 = sub i64 %105, 1, !dbg !9589
  %add123 = add i64 %104, %sub122, !dbg !9589
  %106 = load i64, i64* %align, align 8, !dbg !9589
  %sub124 = sub i64 %106, 1, !dbg !9589
  %neg125 = xor i64 %sub124, -1, !dbg !9589
  %and126 = and i64 %add123, %neg125, !dbg !9589
  %start127 = getelementptr inbounds %struct.resource, %struct.resource* %io, i32 0, i32 0, !dbg !9590
  %107 = load i64, i64* %start127, align 8, !dbg !9590
  %sub128 = sub i64 %and126, %107, !dbg !9591
  br label %cond.end130, !dbg !9588

cond.false129:                                    ; preds = %if.end115
  br label %cond.end130, !dbg !9588

cond.end130:                                      ; preds = %cond.false129, %cond.true120
  %cond131 = phi i64 [ %sub128, %cond.true120 ], [ 0, %cond.false129 ], !dbg !9588
  store i64 %cond131, i64* %align, align 8, !dbg !9592
  %108 = load i64, i64* %align, align 8, !dbg !9593
  %109 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9594
  %call132 = call i64 @resource_size(%struct.resource* %109) #11, !dbg !9595
  %add133 = add i64 %108, %call132, !dbg !9596
  store i64 %add133, i64* %used_size, align 8, !dbg !9597
  %110 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9598
  %parent134 = getelementptr inbounds %struct.resource, %struct.resource* %110, i32 0, i32 5, !dbg !9600
  %111 = load %struct.resource*, %struct.resource** %parent134, align 8, !dbg !9600
  %tobool135 = icmp ne %struct.resource* %111, null, !dbg !9598
  br i1 %tobool135, label %if.end148, label %if.then136, !dbg !9601

if.then136:                                       ; preds = %cond.end130
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x330, metadata !9602, metadata !DIExpression()), !dbg !9604
  %start137 = getelementptr inbounds %struct.resource, %struct.resource* %io, i32 0, i32 0, !dbg !9604
  %112 = load i64, i64* %start137, align 8, !dbg !9604
  %113 = load i64, i64* %used_size, align 8, !dbg !9604
  %add138 = add i64 %112, %113, !dbg !9604
  store i64 %add138, i64* %__UNIQUE_ID___x330, align 8, !dbg !9604
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y331, metadata !9605, metadata !DIExpression()), !dbg !9604
  %end139 = getelementptr inbounds %struct.resource, %struct.resource* %io, i32 0, i32 1, !dbg !9604
  %114 = load i64, i64* %end139, align 8, !dbg !9604
  %add140 = add i64 %114, 1, !dbg !9604
  store i64 %add140, i64* %__UNIQUE_ID___y331, align 8, !dbg !9604
  %115 = load i64, i64* %__UNIQUE_ID___x330, align 8, !dbg !9604
  %116 = load i64, i64* %__UNIQUE_ID___y331, align 8, !dbg !9604
  %cmp142 = icmp ult i64 %115, %116, !dbg !9604
  br i1 %cmp142, label %cond.true143, label %cond.false144, !dbg !9604

cond.true143:                                     ; preds = %if.then136
  %117 = load i64, i64* %__UNIQUE_ID___x330, align 8, !dbg !9604
  br label %cond.end145, !dbg !9604

cond.false144:                                    ; preds = %if.then136
  %118 = load i64, i64* %__UNIQUE_ID___y331, align 8, !dbg !9604
  br label %cond.end145, !dbg !9604

cond.end145:                                      ; preds = %cond.false144, %cond.true143
  %cond146 = phi i64 [ %117, %cond.true143 ], [ %118, %cond.false144 ], !dbg !9604
  store i64 %cond146, i64* %tmp141, align 8, !dbg !9604
  %119 = load i64, i64* %tmp141, align 8, !dbg !9604
  %start147 = getelementptr inbounds %struct.resource, %struct.resource* %io, i32 0, i32 0, !dbg !9606
  store i64 %119, i64* %start147, align 8, !dbg !9607
  br label %if.end148, !dbg !9608

if.end148:                                        ; preds = %cond.end145, %cond.end130
  %120 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9609
  %resource149 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %120, i32 0, i32 44, !dbg !9610
  %arrayidx150 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource149, i64 0, i64 14, !dbg !9609
  store %struct.resource* %arrayidx150, %struct.resource** %res, align 8, !dbg !9611
  %121 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9612
  %122 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9613
  %call151 = call i64 @pci_resource_alignment(%struct.pci_dev* %121, %struct.resource* %122) #11, !dbg !9614
  store i64 %call151, i64* %align, align 8, !dbg !9615
  %123 = load i64, i64* %align, align 8, !dbg !9616
  %tobool152 = icmp ne i64 %123, 0, !dbg !9616
  br i1 %tobool152, label %cond.true153, label %cond.false162, !dbg !9616

cond.true153:                                     ; preds = %if.end148
  %start154 = getelementptr inbounds %struct.resource, %struct.resource* %mmio, i32 0, i32 0, !dbg !9617
  %124 = load i64, i64* %start154, align 8, !dbg !9617
  %125 = load i64, i64* %align, align 8, !dbg !9617
  %sub155 = sub i64 %125, 1, !dbg !9617
  %add156 = add i64 %124, %sub155, !dbg !9617
  %126 = load i64, i64* %align, align 8, !dbg !9617
  %sub157 = sub i64 %126, 1, !dbg !9617
  %neg158 = xor i64 %sub157, -1, !dbg !9617
  %and159 = and i64 %add156, %neg158, !dbg !9617
  %start160 = getelementptr inbounds %struct.resource, %struct.resource* %mmio, i32 0, i32 0, !dbg !9618
  %127 = load i64, i64* %start160, align 8, !dbg !9618
  %sub161 = sub i64 %and159, %127, !dbg !9619
  br label %cond.end163, !dbg !9616

cond.false162:                                    ; preds = %if.end148
  br label %cond.end163, !dbg !9616

cond.end163:                                      ; preds = %cond.false162, %cond.true153
  %cond164 = phi i64 [ %sub161, %cond.true153 ], [ 0, %cond.false162 ], !dbg !9616
  store i64 %cond164, i64* %align, align 8, !dbg !9620
  %128 = load i64, i64* %align, align 8, !dbg !9621
  %129 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9622
  %call165 = call i64 @resource_size(%struct.resource* %129) #11, !dbg !9623
  %add166 = add i64 %128, %call165, !dbg !9624
  store i64 %add166, i64* %used_size, align 8, !dbg !9625
  %130 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9626
  %parent167 = getelementptr inbounds %struct.resource, %struct.resource* %130, i32 0, i32 5, !dbg !9628
  %131 = load %struct.resource*, %struct.resource** %parent167, align 8, !dbg !9628
  %tobool168 = icmp ne %struct.resource* %131, null, !dbg !9626
  br i1 %tobool168, label %if.end181, label %if.then169, !dbg !9629

if.then169:                                       ; preds = %cond.end163
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x332, metadata !9630, metadata !DIExpression()), !dbg !9632
  %start170 = getelementptr inbounds %struct.resource, %struct.resource* %mmio, i32 0, i32 0, !dbg !9632
  %132 = load i64, i64* %start170, align 8, !dbg !9632
  %133 = load i64, i64* %used_size, align 8, !dbg !9632
  %add171 = add i64 %132, %133, !dbg !9632
  store i64 %add171, i64* %__UNIQUE_ID___x332, align 8, !dbg !9632
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y333, metadata !9633, metadata !DIExpression()), !dbg !9632
  %end172 = getelementptr inbounds %struct.resource, %struct.resource* %mmio, i32 0, i32 1, !dbg !9632
  %134 = load i64, i64* %end172, align 8, !dbg !9632
  %add173 = add i64 %134, 1, !dbg !9632
  store i64 %add173, i64* %__UNIQUE_ID___y333, align 8, !dbg !9632
  %135 = load i64, i64* %__UNIQUE_ID___x332, align 8, !dbg !9632
  %136 = load i64, i64* %__UNIQUE_ID___y333, align 8, !dbg !9632
  %cmp175 = icmp ult i64 %135, %136, !dbg !9632
  br i1 %cmp175, label %cond.true176, label %cond.false177, !dbg !9632

cond.true176:                                     ; preds = %if.then169
  %137 = load i64, i64* %__UNIQUE_ID___x332, align 8, !dbg !9632
  br label %cond.end178, !dbg !9632

cond.false177:                                    ; preds = %if.then169
  %138 = load i64, i64* %__UNIQUE_ID___y333, align 8, !dbg !9632
  br label %cond.end178, !dbg !9632

cond.end178:                                      ; preds = %cond.false177, %cond.true176
  %cond179 = phi i64 [ %137, %cond.true176 ], [ %138, %cond.false177 ], !dbg !9632
  store i64 %cond179, i64* %tmp174, align 8, !dbg !9632
  %139 = load i64, i64* %tmp174, align 8, !dbg !9632
  %start180 = getelementptr inbounds %struct.resource, %struct.resource* %mmio, i32 0, i32 0, !dbg !9634
  store i64 %139, i64* %start180, align 8, !dbg !9635
  br label %if.end181, !dbg !9636

if.end181:                                        ; preds = %cond.end178, %cond.end163
  %140 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9637
  %resource182 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %140, i32 0, i32 44, !dbg !9638
  %arrayidx183 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource182, i64 0, i64 15, !dbg !9637
  store %struct.resource* %arrayidx183, %struct.resource** %res, align 8, !dbg !9639
  %141 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9640
  %142 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9641
  %call184 = call i64 @pci_resource_alignment(%struct.pci_dev* %141, %struct.resource* %142) #11, !dbg !9642
  store i64 %call184, i64* %align, align 8, !dbg !9643
  %143 = load i64, i64* %align, align 8, !dbg !9644
  %tobool185 = icmp ne i64 %143, 0, !dbg !9644
  br i1 %tobool185, label %cond.true186, label %cond.false195, !dbg !9644

cond.true186:                                     ; preds = %if.end181
  %start187 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_pref, i32 0, i32 0, !dbg !9645
  %144 = load i64, i64* %start187, align 8, !dbg !9645
  %145 = load i64, i64* %align, align 8, !dbg !9645
  %sub188 = sub i64 %145, 1, !dbg !9645
  %add189 = add i64 %144, %sub188, !dbg !9645
  %146 = load i64, i64* %align, align 8, !dbg !9645
  %sub190 = sub i64 %146, 1, !dbg !9645
  %neg191 = xor i64 %sub190, -1, !dbg !9645
  %and192 = and i64 %add189, %neg191, !dbg !9645
  %start193 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_pref, i32 0, i32 0, !dbg !9646
  %147 = load i64, i64* %start193, align 8, !dbg !9646
  %sub194 = sub i64 %and192, %147, !dbg !9647
  br label %cond.end196, !dbg !9644

cond.false195:                                    ; preds = %if.end181
  br label %cond.end196, !dbg !9644

cond.end196:                                      ; preds = %cond.false195, %cond.true186
  %cond197 = phi i64 [ %sub194, %cond.true186 ], [ 0, %cond.false195 ], !dbg !9644
  store i64 %cond197, i64* %align, align 8, !dbg !9648
  %148 = load i64, i64* %align, align 8, !dbg !9649
  %149 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9650
  %call198 = call i64 @resource_size(%struct.resource* %149) #11, !dbg !9651
  %add199 = add i64 %148, %call198, !dbg !9652
  store i64 %add199, i64* %used_size, align 8, !dbg !9653
  %150 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9654
  %parent200 = getelementptr inbounds %struct.resource, %struct.resource* %150, i32 0, i32 5, !dbg !9656
  %151 = load %struct.resource*, %struct.resource** %parent200, align 8, !dbg !9656
  %tobool201 = icmp ne %struct.resource* %151, null, !dbg !9654
  br i1 %tobool201, label %if.end214, label %if.then202, !dbg !9657

if.then202:                                       ; preds = %cond.end196
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x334, metadata !9658, metadata !DIExpression()), !dbg !9660
  %start203 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_pref, i32 0, i32 0, !dbg !9660
  %152 = load i64, i64* %start203, align 8, !dbg !9660
  %153 = load i64, i64* %used_size, align 8, !dbg !9660
  %add204 = add i64 %152, %153, !dbg !9660
  store i64 %add204, i64* %__UNIQUE_ID___x334, align 8, !dbg !9660
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y335, metadata !9661, metadata !DIExpression()), !dbg !9660
  %end205 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_pref, i32 0, i32 1, !dbg !9660
  %154 = load i64, i64* %end205, align 8, !dbg !9660
  %add206 = add i64 %154, 1, !dbg !9660
  store i64 %add206, i64* %__UNIQUE_ID___y335, align 8, !dbg !9660
  %155 = load i64, i64* %__UNIQUE_ID___x334, align 8, !dbg !9660
  %156 = load i64, i64* %__UNIQUE_ID___y335, align 8, !dbg !9660
  %cmp208 = icmp ult i64 %155, %156, !dbg !9660
  br i1 %cmp208, label %cond.true209, label %cond.false210, !dbg !9660

cond.true209:                                     ; preds = %if.then202
  %157 = load i64, i64* %__UNIQUE_ID___x334, align 8, !dbg !9660
  br label %cond.end211, !dbg !9660

cond.false210:                                    ; preds = %if.then202
  %158 = load i64, i64* %__UNIQUE_ID___y335, align 8, !dbg !9660
  br label %cond.end211, !dbg !9660

cond.end211:                                      ; preds = %cond.false210, %cond.true209
  %cond212 = phi i64 [ %157, %cond.true209 ], [ %158, %cond.false210 ], !dbg !9660
  store i64 %cond212, i64* %tmp207, align 8, !dbg !9660
  %159 = load i64, i64* %tmp207, align 8, !dbg !9660
  %start213 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_pref, i32 0, i32 0, !dbg !9662
  store i64 %159, i64* %start213, align 8, !dbg !9663
  br label %if.end214, !dbg !9664

if.end214:                                        ; preds = %cond.end211, %cond.end196
  br label %if.end215

if.end215:                                        ; preds = %if.end214, %if.then106
  br label %for.inc216, !dbg !9567

for.inc216:                                       ; preds = %if.end215, %if.then114
  call void @llvm.dbg.declare(metadata i8** %__mptr217, metadata !9665, metadata !DIExpression()), !dbg !9667
  %160 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9667
  %bus_list218 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %160, i32 0, i32 0, !dbg !9667
  %next219 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list218, i32 0, i32 0, !dbg !9667
  %161 = load %struct.list_head*, %struct.list_head** %next219, align 8, !dbg !9667
  %162 = bitcast %struct.list_head* %161 to i8*, !dbg !9667
  store i8* %162, i8** %__mptr217, align 8, !dbg !9667
  br label %do.body220, !dbg !9667

do.body220:                                       ; preds = %for.inc216
  br label %do.end221, !dbg !9668

do.end221:                                        ; preds = %do.body220
  %163 = load i8*, i8** %__mptr217, align 8, !dbg !9667
  %add.ptr223 = getelementptr i8, i8* %163, i64 0, !dbg !9667
  %164 = bitcast i8* %add.ptr223 to %struct.pci_dev*, !dbg !9667
  store %struct.pci_dev* %164, %struct.pci_dev** %tmp222, align 8, !dbg !9668
  %165 = load %struct.pci_dev*, %struct.pci_dev** %tmp222, align 8, !dbg !9667
  store %struct.pci_dev* %165, %struct.pci_dev** %dev, align 8, !dbg !9565
  br label %for.cond99, !dbg !9565, !llvm.loop !9670

for.end224:                                       ; preds = %for.cond99
  %call225 = call i64 @resource_size(%struct.resource* %io) #11, !dbg !9672
  %166 = load i32, i32* %hotplug_bridges, align 4, !dbg !9672
  %conv = zext i32 %166 to i64, !dbg !9672
  %call226 = call i64 @div64_u64(i64 %call225, i64 %conv) #11, !dbg !9672
  store i64 %call226, i64* %io_per_hp, align 8, !dbg !9673
  %call227 = call i64 @resource_size(%struct.resource* %mmio) #11, !dbg !9674
  %167 = load i32, i32* %hotplug_bridges, align 4, !dbg !9674
  %conv228 = zext i32 %167 to i64, !dbg !9674
  %call229 = call i64 @div64_u64(i64 %call227, i64 %conv228) #11, !dbg !9674
  store i64 %call229, i64* %mmio_per_hp, align 8, !dbg !9675
  %call230 = call i64 @resource_size(%struct.resource* %mmio_pref) #11, !dbg !9676
  %168 = load i32, i32* %hotplug_bridges, align 4, !dbg !9676
  %conv231 = zext i32 %168 to i64, !dbg !9676
  %call232 = call i64 @div64_u64(i64 %call230, i64 %conv231) #11, !dbg !9676
  store i64 %call232, i64* %mmio_pref_per_hp, align 8, !dbg !9677
  call void @llvm.dbg.declare(metadata i8** %__mptr233, metadata !9678, metadata !DIExpression()), !dbg !9681
  %169 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9681
  %devices234 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %169, i32 0, i32 3, !dbg !9681
  %next235 = getelementptr inbounds %struct.list_head, %struct.list_head* %devices234, i32 0, i32 0, !dbg !9681
  %170 = load %struct.list_head*, %struct.list_head** %next235, align 8, !dbg !9681
  %171 = bitcast %struct.list_head* %170 to i8*, !dbg !9681
  store i8* %171, i8** %__mptr233, align 8, !dbg !9681
  br label %do.body236, !dbg !9681

do.body236:                                       ; preds = %for.end224
  br label %do.end237, !dbg !9682

do.end237:                                        ; preds = %do.body236
  %172 = load i8*, i8** %__mptr233, align 8, !dbg !9681
  %add.ptr239 = getelementptr i8, i8* %172, i64 0, !dbg !9681
  %173 = bitcast i8* %add.ptr239 to %struct.pci_dev*, !dbg !9681
  store %struct.pci_dev* %173, %struct.pci_dev** %tmp238, align 8, !dbg !9682
  %174 = load %struct.pci_dev*, %struct.pci_dev** %tmp238, align 8, !dbg !9681
  store %struct.pci_dev* %174, %struct.pci_dev** %dev, align 8, !dbg !9684
  br label %for.cond240, !dbg !9684

for.cond240:                                      ; preds = %do.end284, %do.end237
  %175 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9685
  %bus_list241 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %175, i32 0, i32 0, !dbg !9685
  %176 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !9685
  %devices242 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %176, i32 0, i32 3, !dbg !9685
  %cmp243 = icmp eq %struct.list_head* %bus_list241, %devices242, !dbg !9685
  %lnot245 = xor i1 %cmp243, true, !dbg !9685
  br i1 %lnot245, label %for.body246, label %for.end287, !dbg !9684

for.body246:                                      ; preds = %for.cond240
  %177 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9687
  %call247 = call zeroext i1 @pci_is_bridge(%struct.pci_dev* %177) #11, !dbg !9687
  br i1 %call247, label %if.else249, label %if.then248, !dbg !9685

if.then248:                                       ; preds = %for.body246
  br label %if.end278, !dbg !9689

if.else249:                                       ; preds = %for.body246
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %b, metadata !9691, metadata !DIExpression()), !dbg !9693
  %178 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9694
  %subordinate250 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %178, i32 0, i32 2, !dbg !9695
  %179 = load %struct.pci_bus*, %struct.pci_bus** %subordinate250, align 8, !dbg !9695
  store %struct.pci_bus* %179, %struct.pci_bus** %b, align 8, !dbg !9696
  %180 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9697
  %tobool251 = icmp ne %struct.pci_bus* %180, null, !dbg !9697
  br i1 %tobool251, label %lor.lhs.false, label %if.then258, !dbg !9699

lor.lhs.false:                                    ; preds = %if.else249
  %181 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9700
  %is_hotplug_bridge252 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %181, i32 0, i32 46, !dbg !9701
  %182 = bitcast [5 x i8]* %is_hotplug_bridge252 to i40*, !dbg !9701
  %bf.load253 = load i40, i40* %182, align 1, !dbg !9701
  %bf.lshr254 = lshr i40 %bf.load253, 24, !dbg !9701
  %bf.clear255 = and i40 %bf.lshr254, 1, !dbg !9701
  %bf.cast256 = trunc i40 %bf.clear255 to i32, !dbg !9701
  %tobool257 = icmp ne i32 %bf.cast256, 0, !dbg !9700
  br i1 %tobool257, label %if.end259, label %if.then258, !dbg !9702

if.then258:                                       ; preds = %lor.lhs.false, %if.else249
  br label %for.inc279, !dbg !9703

if.end259:                                        ; preds = %lor.lhs.false
  %start260 = getelementptr inbounds %struct.resource, %struct.resource* %io, i32 0, i32 0, !dbg !9704
  %183 = load i64, i64* %start260, align 8, !dbg !9704
  %184 = load i64, i64* %io_per_hp, align 8, !dbg !9705
  %add261 = add i64 %183, %184, !dbg !9706
  %sub262 = sub i64 %add261, 1, !dbg !9707
  %end263 = getelementptr inbounds %struct.resource, %struct.resource* %io, i32 0, i32 1, !dbg !9708
  store i64 %sub262, i64* %end263, align 8, !dbg !9709
  %start264 = getelementptr inbounds %struct.resource, %struct.resource* %mmio, i32 0, i32 0, !dbg !9710
  %185 = load i64, i64* %start264, align 8, !dbg !9710
  %186 = load i64, i64* %mmio_per_hp, align 8, !dbg !9711
  %add265 = add i64 %185, %186, !dbg !9712
  %sub266 = sub i64 %add265, 1, !dbg !9713
  %end267 = getelementptr inbounds %struct.resource, %struct.resource* %mmio, i32 0, i32 1, !dbg !9714
  store i64 %sub266, i64* %end267, align 8, !dbg !9715
  %start268 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_pref, i32 0, i32 0, !dbg !9716
  %187 = load i64, i64* %start268, align 8, !dbg !9716
  %188 = load i64, i64* %mmio_pref_per_hp, align 8, !dbg !9717
  %add269 = add i64 %187, %188, !dbg !9718
  %sub270 = sub i64 %add269, 1, !dbg !9719
  %end271 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_pref, i32 0, i32 1, !dbg !9720
  store i64 %sub270, i64* %end271, align 8, !dbg !9721
  %189 = load %struct.pci_bus*, %struct.pci_bus** %b, align 8, !dbg !9722
  %190 = load %struct.list_head*, %struct.list_head** %add_list.addr, align 8, !dbg !9723
  call void @pci_bus_distribute_available_resources(%struct.pci_bus* %189, %struct.list_head* %190, %struct.resource* byval(%struct.resource) align 8 %io, %struct.resource* byval(%struct.resource) align 8 %mmio, %struct.resource* byval(%struct.resource) align 8 %mmio_pref) #11, !dbg !9724
  %191 = load i64, i64* %io_per_hp, align 8, !dbg !9725
  %start272 = getelementptr inbounds %struct.resource, %struct.resource* %io, i32 0, i32 0, !dbg !9726
  %192 = load i64, i64* %start272, align 8, !dbg !9727
  %add273 = add i64 %192, %191, !dbg !9727
  store i64 %add273, i64* %start272, align 8, !dbg !9727
  %193 = load i64, i64* %mmio_per_hp, align 8, !dbg !9728
  %start274 = getelementptr inbounds %struct.resource, %struct.resource* %mmio, i32 0, i32 0, !dbg !9729
  %194 = load i64, i64* %start274, align 8, !dbg !9730
  %add275 = add i64 %194, %193, !dbg !9730
  store i64 %add275, i64* %start274, align 8, !dbg !9730
  %195 = load i64, i64* %mmio_pref_per_hp, align 8, !dbg !9731
  %start276 = getelementptr inbounds %struct.resource, %struct.resource* %mmio_pref, i32 0, i32 0, !dbg !9732
  %196 = load i64, i64* %start276, align 8, !dbg !9733
  %add277 = add i64 %196, %195, !dbg !9733
  store i64 %add277, i64* %start276, align 8, !dbg !9733
  br label %if.end278

if.end278:                                        ; preds = %if.end259, %if.then248
  br label %for.inc279, !dbg !9687

for.inc279:                                       ; preds = %if.end278, %if.then258
  call void @llvm.dbg.declare(metadata i8** %__mptr280, metadata !9734, metadata !DIExpression()), !dbg !9736
  %197 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !9736
  %bus_list281 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %197, i32 0, i32 0, !dbg !9736
  %next282 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list281, i32 0, i32 0, !dbg !9736
  %198 = load %struct.list_head*, %struct.list_head** %next282, align 8, !dbg !9736
  %199 = bitcast %struct.list_head* %198 to i8*, !dbg !9736
  store i8* %199, i8** %__mptr280, align 8, !dbg !9736
  br label %do.body283, !dbg !9736

do.body283:                                       ; preds = %for.inc279
  br label %do.end284, !dbg !9737

do.end284:                                        ; preds = %do.body283
  %200 = load i8*, i8** %__mptr280, align 8, !dbg !9736
  %add.ptr286 = getelementptr i8, i8* %200, i64 0, !dbg !9736
  %201 = bitcast i8* %add.ptr286 to %struct.pci_dev*, !dbg !9736
  store %struct.pci_dev* %201, %struct.pci_dev** %tmp285, align 8, !dbg !9737
  %202 = load %struct.pci_dev*, %struct.pci_dev** %tmp285, align 8, !dbg !9736
  store %struct.pci_dev* %202, %struct.pci_dev** %dev, align 8, !dbg !9685
  br label %for.cond240, !dbg !9685, !llvm.loop !9739

for.end287:                                       ; preds = %if.end87, %if.then90, %for.cond240
  ret void, !dbg !9741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @adjust_bridge_window(%struct.pci_dev* %bridge, %struct.resource* %res, %struct.list_head* %add_list, i64 %new_size) #0 !dbg !9742 {
entry:
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %res.addr = alloca %struct.resource*, align 8
  %add_list.addr = alloca %struct.list_head*, align 8
  %new_size.addr = alloca i64, align 8
  %add_size = alloca i64, align 8
  %size = alloca i64, align 8
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !9745, metadata !DIExpression()), !dbg !9746
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !9747, metadata !DIExpression()), !dbg !9748
  store %struct.list_head* %add_list, %struct.list_head** %add_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %add_list.addr, metadata !9749, metadata !DIExpression()), !dbg !9750
  store i64 %new_size, i64* %new_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %new_size.addr, metadata !9751, metadata !DIExpression()), !dbg !9752
  call void @llvm.dbg.declare(metadata i64* %add_size, metadata !9753, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.declare(metadata i64* %size, metadata !9755, metadata !DIExpression()), !dbg !9756
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !9757
  %call = call i64 @resource_size(%struct.resource* %0) #11, !dbg !9758
  store i64 %call, i64* %size, align 8, !dbg !9756
  %1 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !9759
  %parent = getelementptr inbounds %struct.resource, %struct.resource* %1, i32 0, i32 5, !dbg !9761
  %2 = load %struct.resource*, %struct.resource** %parent, align 8, !dbg !9761
  %tobool = icmp ne %struct.resource* %2, null, !dbg !9759
  br i1 %tobool, label %if.then, label %if.end, !dbg !9762

if.then:                                          ; preds = %entry
  br label %return, !dbg !9763

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %new_size.addr, align 8, !dbg !9764
  %tobool1 = icmp ne i64 %3, 0, !dbg !9764
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !9766

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !9767

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %new_size.addr, align 8, !dbg !9768
  %5 = load i64, i64* %size, align 8, !dbg !9770
  %cmp = icmp ugt i64 %4, %5, !dbg !9771
  br i1 %cmp, label %if.then4, label %if.else, !dbg !9772

if.then4:                                         ; preds = %if.end3
  %6 = load i64, i64* %new_size.addr, align 8, !dbg !9773
  %7 = load i64, i64* %size, align 8, !dbg !9775
  %sub = sub i64 %6, %7, !dbg !9776
  store i64 %sub, i64* %add_size, align 8, !dbg !9777
  br label %if.end9, !dbg !9778

if.else:                                          ; preds = %if.end3
  %8 = load i64, i64* %new_size.addr, align 8, !dbg !9779
  %9 = load i64, i64* %size, align 8, !dbg !9781
  %cmp5 = icmp ult i64 %8, %9, !dbg !9782
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !9783

if.then6:                                         ; preds = %if.else
  %10 = load i64, i64* %size, align 8, !dbg !9784
  %11 = load i64, i64* %new_size.addr, align 8, !dbg !9786
  %sub7 = sub i64 %10, %11, !dbg !9787
  store i64 %sub7, i64* %add_size, align 8, !dbg !9788
  br label %if.end8, !dbg !9789

if.end8:                                          ; preds = %if.then6, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.then4
  %12 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !9790
  %start = getelementptr inbounds %struct.resource, %struct.resource* %12, i32 0, i32 0, !dbg !9791
  %13 = load i64, i64* %start, align 8, !dbg !9791
  %14 = load i64, i64* %new_size.addr, align 8, !dbg !9792
  %add = add i64 %13, %14, !dbg !9793
  %sub10 = sub i64 %add, 1, !dbg !9794
  %15 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !9795
  %end = getelementptr inbounds %struct.resource, %struct.resource* %15, i32 0, i32 1, !dbg !9796
  store i64 %sub10, i64* %end, align 8, !dbg !9797
  %16 = load %struct.list_head*, %struct.list_head** %add_list.addr, align 8, !dbg !9798
  %17 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !9799
  call void @remove_from_list(%struct.list_head* %16, %struct.resource* %17) #11, !dbg !9800
  br label %return, !dbg !9801

return:                                           ; preds = %if.end9, %if.then2, %if.then
  ret void, !dbg !9801
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @div64_u64(i64 %dividend, i64 %divisor) #0 !dbg !9802 {
entry:
  %dividend.addr = alloca i64, align 8
  %divisor.addr = alloca i64, align 8
  store i64 %dividend, i64* %dividend.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dividend.addr, metadata !9806, metadata !DIExpression()), !dbg !9807
  store i64 %divisor, i64* %divisor.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %divisor.addr, metadata !9808, metadata !DIExpression()), !dbg !9809
  %0 = load i64, i64* %dividend.addr, align 8, !dbg !9810
  %1 = load i64, i64* %divisor.addr, align 8, !dbg !9811
  %div = udiv i64 %0, %1, !dbg !9812
  ret i64 %div, !dbg !9813
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pdev_assign_resources_sorted(%struct.pci_dev* %dev, %struct.list_head* %add_head, %struct.list_head* %fail_head) #0 !dbg !9814 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %add_head.addr = alloca %struct.list_head*, align 8
  %fail_head.addr = alloca %struct.list_head*, align 8
  %head = alloca %struct.list_head, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9817, metadata !DIExpression()), !dbg !9818
  store %struct.list_head* %add_head, %struct.list_head** %add_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %add_head.addr, metadata !9819, metadata !DIExpression()), !dbg !9820
  store %struct.list_head* %fail_head, %struct.list_head** %fail_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %fail_head.addr, metadata !9821, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.declare(metadata %struct.list_head* %head, metadata !9823, metadata !DIExpression()), !dbg !9824
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0, !dbg !9824
  store %struct.list_head* %head, %struct.list_head** %next, align 8, !dbg !9824
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1, !dbg !9824
  store %struct.list_head* %head, %struct.list_head** %prev, align 8, !dbg !9824
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9825
  call void @__dev_sort_resources(%struct.pci_dev* %0, %struct.list_head* %head) #11, !dbg !9826
  %1 = load %struct.list_head*, %struct.list_head** %add_head.addr, align 8, !dbg !9827
  %2 = load %struct.list_head*, %struct.list_head** %fail_head.addr, align 8, !dbg !9828
  call void @__assign_resources_sorted(%struct.list_head* %head, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !9829
  ret void, !dbg !9830
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !9831 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9832, metadata !DIExpression()), !dbg !9833
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !9834, metadata !DIExpression()), !dbg !9835
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9836
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9837
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9838
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !9839
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9839
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !9840
  ret void, !dbg !9841
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { cold noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone willreturn }
attributes #8 = { nounwind willreturn }
attributes #9 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noredzone }
attributes #11 = { noredzone }
attributes #12 = { nounwind readonly }
attributes #13 = { noredzone nounwind }
attributes #14 = { nounwind }
attributes #15 = { cold noredzone noreturn }
attributes #16 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4508, !4509, !4510, !4511}
!llvm.ident = !{!4512}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pci_realloc_enable", scope: !2, file: !3, line: 1684, type: !119, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !143, globals: !4505, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/pci/setup-bus.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !73, !81, !87, !101, !107, !119, !127, !131, !138}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !67, line: 343, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71, !72}
!69 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !74, line: 524, baseType: !7, size: 32, elements: !75)
!74 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!75 = !{!76, !77, !78, !79, !80}
!76 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!80 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!81 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !74, line: 502, baseType: !7, size: 32, elements: !82)
!82 = !{!83, !84, !85, !86}
!83 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !88, line: 76, baseType: !7, size: 32, elements: !89)
!88 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!89 = !{!90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!90 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!91 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!92 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!93 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!94 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!95 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!96 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!97 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!98 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!99 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!100 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !102, line: 44, baseType: !7, size: 32, elements: !103)
!102 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !108, line: 89, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112, !113, !114, !115, !116, !117, !118}
!110 = !DIEnumerator(name: "PCI_STD_RESOURCES", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "PCI_STD_RESOURCE_END", value: 5, isUnsigned: true)
!112 = !DIEnumerator(name: "PCI_ROM_RESOURCE", value: 6, isUnsigned: true)
!113 = !DIEnumerator(name: "PCI_IOV_RESOURCES", value: 7, isUnsigned: true)
!114 = !DIEnumerator(name: "PCI_IOV_RESOURCE_END", value: 12, isUnsigned: true)
!115 = !DIEnumerator(name: "PCI_BRIDGE_RESOURCES", value: 13, isUnsigned: true)
!116 = !DIEnumerator(name: "PCI_BRIDGE_RESOURCE_END", value: 16, isUnsigned: true)
!117 = !DIEnumerator(name: "PCI_NUM_RESOURCES", value: 17, isUnsigned: true)
!118 = !DIEnumerator(name: "DEVICE_COUNT_RESOURCE", value: 17, isUnsigned: true)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "enable_type", file: !3, line: 1676, baseType: !120, size: 32, elements: !121)
!120 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!121 = !{!122, !123, !124, !125, !126}
!122 = !DIEnumerator(name: "undefined", value: -1)
!123 = !DIEnumerator(name: "user_disabled", value: 0)
!124 = !DIEnumerator(name: "auto_disabled", value: 1)
!125 = !DIEnumerator(name: "user_enabled", value: 2)
!126 = !DIEnumerator(name: "auto_enabled", value: 3)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "release_type", file: !3, line: 1582, baseType: !7, size: 32, elements: !128)
!128 = !{!129, !130}
!129 = !DIEnumerator(name: "leaf_only", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "whole_subtree", value: 1, isUnsigned: true)
!131 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !132, line: 305, baseType: !7, size: 32, elements: !133)
!132 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!133 = !{!134, !135, !136, !137}
!134 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!136 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!137 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !139, line: 10, baseType: !7, size: 32, elements: !140)
!139 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!140 = !{!141, !142}
!141 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!142 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!143 = !{!144, !145, !4163, !4208, !156, !4219, !880, !215, !178, !120, !764, !4498, !4500, !4503, !172}
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !108, line: 309, size: 19264, elements: !147)
!147 = !{!148, !155, !3941, !3942, !3943, !3944, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !4036, !4037, !4038, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4108, !4109, !4110, !4112, !4113, !4114, !4115, !4116, !4117, !4119, !4120, !4121, !4124, !4156, !4157, !4158, !4159, !4160, !4161, !4162}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !146, file: !108, line: 310, baseType: !149, size: 128)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !150, line: 178, size: 128, elements: !151)
!150 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!151 = !{!152, !154}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !149, file: !150, line: 179, baseType: !153, size: 64)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !149, file: !150, line: 179, baseType: !153, size: 64, offset: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !146, file: !108, line: 311, baseType: !156, size: 64, offset: 128)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !108, line: 605, size: 8064, elements: !158)
!158 = !{!159, !160, !161, !162, !163, !164, !165, !192, !193, !194, !221, !224, !225, !229, !231, !232, !233, !234, !238, !240, !242, !3937, !3938, !3939, !3940}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !157, file: !108, line: 606, baseType: !149, size: 128)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !157, file: !108, line: 607, baseType: !156, size: 64, offset: 128)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !157, file: !108, line: 608, baseType: !149, size: 128, offset: 192)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !157, file: !108, line: 609, baseType: !149, size: 128, offset: 320)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !157, file: !108, line: 610, baseType: !145, size: 64, offset: 448)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !157, file: !108, line: 611, baseType: !149, size: 128, offset: 512)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !157, file: !108, line: 613, baseType: !166, size: 256, offset: 640)
!166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 256, elements: !190)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !169, line: 20, size: 512, elements: !170)
!169 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!170 = !{!171, !179, !180, !184, !186, !187, !188, !189}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !168, file: !169, line: 21, baseType: !172, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !150, line: 158, baseType: !173)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !150, line: 153, baseType: !174)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !175, line: 23, baseType: !176)
!175 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !177, line: 31, baseType: !178)
!177 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!178 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !168, file: !169, line: 22, baseType: !172, size: 64, offset: 64)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !168, file: !169, line: 23, baseType: !181, size: 64, offset: 128)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !183)
!183 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !168, file: !169, line: 24, baseType: !185, size: 64, offset: 192)
!185 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !168, file: !169, line: 25, baseType: !185, size: 64, offset: 256)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !168, file: !169, line: 26, baseType: !167, size: 64, offset: 320)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !168, file: !169, line: 26, baseType: !167, size: 64, offset: 384)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !168, file: !169, line: 26, baseType: !167, size: 64, offset: 448)
!190 = !{!191}
!191 = !DISubrange(count: 4)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !157, file: !108, line: 614, baseType: !149, size: 128, offset: 896)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !157, file: !108, line: 615, baseType: !168, size: 512, offset: 1024)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !157, file: !108, line: 617, baseType: !195, size: 64, offset: 1536)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !108, line: 731, size: 320, elements: !197)
!197 = !{!198, !202, !206, !210, !217}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !196, file: !108, line: 732, baseType: !199, size: 64)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = !DISubroutineType(types: !201)
!201 = !{!120, !156}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !196, file: !108, line: 733, baseType: !203, size: 64, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!204 = !DISubroutineType(types: !205)
!205 = !{null, !156}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !196, file: !108, line: 734, baseType: !207, size: 64, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64)
!208 = !DISubroutineType(types: !209)
!209 = !{!144, !156, !7, !120}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !196, file: !108, line: 735, baseType: !211, size: 64, offset: 192)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!212 = !DISubroutineType(types: !213)
!213 = !{!120, !156, !7, !120, !120, !214}
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !175, line: 21, baseType: !216)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !177, line: 27, baseType: !7)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !196, file: !108, line: 736, baseType: !218, size: 64, offset: 256)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = !DISubroutineType(types: !220)
!220 = !{!120, !156, !7, !120, !120, !215}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !157, file: !108, line: 618, baseType: !222, size: 64, offset: 1600)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !108, line: 537, flags: DIFlagFwdDecl)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !157, file: !108, line: 619, baseType: !144, size: 64, offset: 1664)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !157, file: !108, line: 620, baseType: !226, size: 64, offset: 1728)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!227 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !228, line: 123, flags: DIFlagFwdDecl)
!228 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!229 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !157, file: !108, line: 622, baseType: !230, size: 8, offset: 1792)
!230 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !157, file: !108, line: 623, baseType: !230, size: 8, offset: 1800)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !157, file: !108, line: 624, baseType: !230, size: 8, offset: 1808)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !157, file: !108, line: 625, baseType: !230, size: 8, offset: 1816)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !108, line: 630, baseType: !235, size: 384, offset: 1824)
!235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 384, elements: !236)
!236 = !{!237}
!237 = !DISubrange(count: 48)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !157, file: !108, line: 632, baseType: !239, size: 16, offset: 2208)
!239 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !157, file: !108, line: 633, baseType: !241, size: 16, offset: 2224)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !108, line: 237, baseType: !239)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !157, file: !108, line: 634, baseType: !243, size: 64, offset: 2240)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !67, line: 461, size: 5568, elements: !245)
!245 = !{!246, !3391, !3392, !3395, !3396, !3447, !3538, !3539, !3540, !3541, !3542, !3551, !3656, !3669, !3864, !3865, !3869, !3871, !3872, !3873, !3877, !3883, !3884, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3925, !3926, !3927, !3930, !3933, !3934, !3935, !3936}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !244, file: !67, line: 462, baseType: !247, size: 512)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !248, line: 64, size: 512, elements: !249)
!248 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!249 = !{!250, !251, !252, !254, !314, !3242, !3381, !3386, !3387, !3388, !3389, !3390}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !247, file: !248, line: 65, baseType: !181, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !247, file: !248, line: 66, baseType: !149, size: 128, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !247, file: !248, line: 67, baseType: !253, size: 64, offset: 192)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !247, file: !248, line: 68, baseType: !255, size: 64, offset: 256)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !248, line: 192, size: 704, elements: !257)
!257 = !{!258, !259, !275, !276}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !256, file: !248, line: 193, baseType: !149, size: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !256, file: !248, line: 194, baseType: !260, offset: 128)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !261, line: 83, baseType: !262)
!261 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !261, line: 71, elements: !263)
!263 = !{!264}
!264 = !DIDerivedType(tag: DW_TAG_member, scope: !262, file: !261, line: 72, baseType: !265)
!265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !262, file: !261, line: 72, elements: !266)
!266 = !{!267}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !265, file: !261, line: 73, baseType: !268)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !261, line: 20, elements: !269)
!269 = !{!270}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !268, file: !261, line: 21, baseType: !271)
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !272, line: 25, baseType: !273)
!272 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !272, line: 25, elements: !274)
!274 = !{}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !256, file: !248, line: 195, baseType: !247, size: 512, offset: 128)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !256, file: !248, line: 196, baseType: !277, size: 64, offset: 640)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !279)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !248, line: 156, size: 192, elements: !280)
!280 = !{!281, !286, !291}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !279, file: !248, line: 157, baseType: !282, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !283)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!284 = !DISubroutineType(types: !285)
!285 = !{!120, !255, !253}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !279, file: !248, line: 158, baseType: !287, size: 64, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!289 = !DISubroutineType(types: !290)
!290 = !{!181, !255, !253}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !279, file: !248, line: 159, baseType: !292, size: 64, offset: 128)
!292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !293)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = !DISubroutineType(types: !295)
!295 = !{!120, !255, !253, !296}
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !248, line: 148, size: 20736, elements: !298)
!298 = !{!299, !304, !308, !309, !313}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !297, file: !248, line: 149, baseType: !300, size: 192)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 192, elements: !302)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!302 = !{!303}
!303 = !DISubrange(count: 3)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !297, file: !248, line: 150, baseType: !305, size: 4096, offset: 192)
!305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 4096, elements: !306)
!306 = !{!307}
!307 = !DISubrange(count: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !297, file: !248, line: 151, baseType: !120, size: 32, offset: 4288)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !297, file: !248, line: 152, baseType: !310, size: 16384, offset: 4320)
!310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 16384, elements: !311)
!311 = !{!312}
!312 = !DISubrange(count: 2048)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !297, file: !248, line: 153, baseType: !120, size: 32, offset: 20704)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !247, file: !248, line: 69, baseType: !315, size: 64, offset: 320)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !248, line: 138, size: 448, elements: !317)
!317 = !{!318, !322, !350, !352, !3204, !3232, !3236}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !316, file: !248, line: 139, baseType: !319, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = !DISubroutineType(types: !321)
!321 = !{null, !253}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !316, file: !248, line: 140, baseType: !323, size: 64, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !325)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !326, line: 230, size: 128, elements: !327)
!326 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!327 = !{!328, !343}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !325, file: !326, line: 231, baseType: !329, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = !DISubroutineType(types: !331)
!331 = !{!332, !253, !337, !301}
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !150, line: 60, baseType: !333)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !334, line: 73, baseType: !335)
!334 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !334, line: 15, baseType: !336)
!336 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !326, line: 30, size: 128, elements: !339)
!339 = !{!340, !341}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !338, file: !326, line: 31, baseType: !181, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !338, file: !326, line: 32, baseType: !342, size: 16, offset: 64)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !150, line: 19, baseType: !239)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !325, file: !326, line: 232, baseType: !344, size: 64, offset: 64)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = !DISubroutineType(types: !346)
!346 = !{!332, !253, !337, !181, !347}
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !150, line: 55, baseType: !348)
!348 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !334, line: 72, baseType: !349)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !334, line: 16, baseType: !185)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !316, file: !248, line: 141, baseType: !351, size: 64, offset: 128)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !316, file: !248, line: 142, baseType: !353, size: 64, offset: 192)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !356)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !326, line: 84, size: 320, elements: !357)
!357 = !{!358, !359, !363, !3201, !3202}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !356, file: !326, line: 85, baseType: !181, size: 64)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !356, file: !326, line: 86, baseType: !360, size: 64, offset: 64)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DISubroutineType(types: !362)
!362 = !{!342, !253, !337, !120}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !356, file: !326, line: 88, baseType: !364, size: 64, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!365 = !DISubroutineType(types: !366)
!366 = !{!342, !253, !367, !120}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !326, line: 168, size: 448, elements: !369)
!369 = !{!370, !371, !372, !373, !3196, !3197}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !368, file: !326, line: 169, baseType: !338, size: 128)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !368, file: !326, line: 170, baseType: !347, size: 64, offset: 128)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !368, file: !326, line: 171, baseType: !144, size: 64, offset: 192)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !368, file: !326, line: 172, baseType: !374, size: 64, offset: 256)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = !DISubroutineType(types: !376)
!376 = !{!332, !377, !253, !367, !301, !548, !347}
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !379)
!379 = !{!380, !398, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3179, !3180, !3189, !3190, !3191, !3192, !3193, !3194, !3195}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !378, file: !44, line: 920, baseType: !381, size: 128)
!381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !378, file: !44, line: 917, size: 128, elements: !382)
!382 = !{!383, !389}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !381, file: !44, line: 918, baseType: !384, size: 64)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !385, line: 58, size: 64, elements: !386)
!385 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!386 = !{!387}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !384, file: !385, line: 59, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !381, file: !44, line: 919, baseType: !390, size: 128, align: 64)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !150, line: 216, size: 128, align: 64, elements: !391)
!391 = !{!392, !394}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !390, file: !150, line: 217, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !390, file: !150, line: 218, baseType: !395, size: 64, offset: 64)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!396 = !DISubroutineType(types: !397)
!397 = !{null, !393}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !378, file: !44, line: 921, baseType: !399, size: 128, offset: 128)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !400, line: 8, size: 128, elements: !401)
!400 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!401 = !{!402, !406}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !399, file: !400, line: 9, baseType: !403, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!404 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !405, line: 18, flags: DIFlagFwdDecl)
!405 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!406 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !399, file: !400, line: 10, baseType: !407, size: 64, offset: 64)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !405, line: 89, size: 1536, elements: !409)
!409 = !{!410, !411, !421, !429, !430, !445, !3129, !3131, !3143, !3144, !3145, !3146, !3147, !3153, !3154, !3155}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !408, file: !405, line: 91, baseType: !7, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !408, file: !405, line: 92, baseType: !412, size: 32, offset: 32)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !413, line: 277, baseType: !414)
!413 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !413, line: 277, size: 32, elements: !415)
!415 = !{!416}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !414, file: !413, line: 277, baseType: !417, size: 32)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !413, line: 70, baseType: !418)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !413, line: 65, size: 32, elements: !419)
!419 = !{!420}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !418, file: !413, line: 66, baseType: !7, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !408, file: !405, line: 93, baseType: !422, size: 128, offset: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !423, line: 38, size: 128, elements: !424)
!423 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!424 = !{!425, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !422, file: !423, line: 39, baseType: !426, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !422, file: !423, line: 39, baseType: !428, size: 64, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !408, file: !405, line: 94, baseType: !407, size: 64, offset: 192)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !408, file: !405, line: 95, baseType: !431, size: 128, offset: 256)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !405, line: 47, size: 128, elements: !432)
!432 = !{!433, !442}
!433 = !DIDerivedType(tag: DW_TAG_member, scope: !431, file: !405, line: 48, baseType: !434, size: 64)
!434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !431, file: !405, line: 48, size: 64, elements: !435)
!435 = !{!436, !441}
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !434, file: !405, line: 49, baseType: !437, size: 64)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !434, file: !405, line: 49, size: 64, elements: !438)
!438 = !{!439, !440}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !437, file: !405, line: 50, baseType: !215, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !437, file: !405, line: 50, baseType: !215, size: 32, offset: 32)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !434, file: !405, line: 52, baseType: !174, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !431, file: !405, line: 54, baseType: !443, size: 64, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !230)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !408, file: !405, line: 96, baseType: !446, size: 64, offset: 384)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !448)
!448 = !{!449, !450, !451, !459, !466, !467, !615, !2840, !2841, !2842, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !3105, !3113, !3114, !3115, !3125, !3126, !3127, !3128}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !447, file: !44, line: 611, baseType: !342, size: 16)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !447, file: !44, line: 612, baseType: !239, size: 16, offset: 16)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !447, file: !44, line: 613, baseType: !452, size: 32, offset: 32)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !453, line: 23, baseType: !454)
!453 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !453, line: 21, size: 32, elements: !455)
!455 = !{!456}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !454, file: !453, line: 22, baseType: !457, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !150, line: 32, baseType: !458)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !334, line: 49, baseType: !7)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !447, file: !44, line: 614, baseType: !460, size: 32, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !453, line: 28, baseType: !461)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !453, line: 26, size: 32, elements: !462)
!462 = !{!463}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !461, file: !453, line: 27, baseType: !464, size: 32)
!464 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !150, line: 33, baseType: !465)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !334, line: 50, baseType: !7)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !447, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !447, file: !44, line: 622, baseType: !468, size: 64, offset: 128)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !470)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !471)
!471 = !{!472, !476, !489, !493, !499, !503, !509, !513, !517, !521, !525, !526, !532, !536, !562, !591, !595, !601, !606, !610, !611}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !470, file: !44, line: 1865, baseType: !473, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = !DISubroutineType(types: !475)
!475 = !{!407, !446, !407, !7}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !470, file: !44, line: 1866, baseType: !477, size: 64, offset: 64)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = !DISubroutineType(types: !479)
!479 = !{!181, !407, !446, !480}
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !482, line: 10, size: 128, elements: !483)
!482 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!483 = !{!484, !488}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !481, file: !482, line: 11, baseType: !485, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{null, !144}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !481, file: !482, line: 12, baseType: !144, size: 64, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !470, file: !44, line: 1867, baseType: !490, size: 64, offset: 128)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = !DISubroutineType(types: !492)
!492 = !{!120, !446, !120}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !470, file: !44, line: 1868, baseType: !494, size: 64, offset: 192)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = !DISubroutineType(types: !496)
!496 = !{!497, !446, !120}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !470, file: !44, line: 1870, baseType: !500, size: 64, offset: 256)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DISubroutineType(types: !502)
!502 = !{!120, !407, !301, !120}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !470, file: !44, line: 1872, baseType: !504, size: 64, offset: 320)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DISubroutineType(types: !506)
!506 = !{!120, !446, !407, !342, !507}
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !150, line: 30, baseType: !508)
!508 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !470, file: !44, line: 1873, baseType: !510, size: 64, offset: 384)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DISubroutineType(types: !512)
!512 = !{!120, !407, !446, !407}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !470, file: !44, line: 1874, baseType: !514, size: 64, offset: 448)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DISubroutineType(types: !516)
!516 = !{!120, !446, !407}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !470, file: !44, line: 1875, baseType: !518, size: 64, offset: 512)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = !DISubroutineType(types: !520)
!520 = !{!120, !446, !407, !181}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !470, file: !44, line: 1876, baseType: !522, size: 64, offset: 576)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!523 = !DISubroutineType(types: !524)
!524 = !{!120, !446, !407, !342}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !470, file: !44, line: 1877, baseType: !514, size: 64, offset: 640)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !470, file: !44, line: 1878, baseType: !527, size: 64, offset: 704)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = !DISubroutineType(types: !529)
!529 = !{!120, !446, !407, !342, !530}
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !150, line: 16, baseType: !531)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !150, line: 13, baseType: !215)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !470, file: !44, line: 1879, baseType: !533, size: 64, offset: 768)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = !DISubroutineType(types: !535)
!535 = !{!120, !446, !407, !446, !407, !7}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !470, file: !44, line: 1881, baseType: !537, size: 64, offset: 832)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = !DISubroutineType(types: !539)
!539 = !{!120, !407, !540}
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !551, !559, !560, !561}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !541, file: !44, line: 220, baseType: !7, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !541, file: !44, line: 221, baseType: !342, size: 16, offset: 32)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !541, file: !44, line: 222, baseType: !452, size: 32, offset: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !541, file: !44, line: 223, baseType: !460, size: 32, offset: 96)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !541, file: !44, line: 224, baseType: !548, size: 64, offset: 128)
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !150, line: 46, baseType: !549)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !334, line: 88, baseType: !550)
!550 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !541, file: !44, line: 225, baseType: !552, size: 128, offset: 192)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !553, line: 13, size: 128, elements: !554)
!553 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!554 = !{!555, !558}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !552, file: !553, line: 14, baseType: !556, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !553, line: 8, baseType: !557)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !177, line: 30, baseType: !550)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !552, file: !553, line: 15, baseType: !336, size: 64, offset: 64)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !541, file: !44, line: 226, baseType: !552, size: 128, offset: 320)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !541, file: !44, line: 227, baseType: !552, size: 128, offset: 448)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !541, file: !44, line: 234, baseType: !377, size: 64, offset: 576)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !470, file: !44, line: 1882, baseType: !563, size: 64, offset: 896)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DISubroutineType(types: !565)
!565 = !{!120, !566, !568, !215, !7}
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !399)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !570, line: 22, size: 1152, elements: !571)
!570 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!571 = !{!572, !573, !574, !575, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !569, file: !570, line: 23, baseType: !215, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !569, file: !570, line: 24, baseType: !342, size: 16, offset: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !569, file: !570, line: 25, baseType: !7, size: 32, offset: 64)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !569, file: !570, line: 26, baseType: !576, size: 32, offset: 96)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !150, line: 104, baseType: !215)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !569, file: !570, line: 27, baseType: !174, size: 64, offset: 128)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !569, file: !570, line: 28, baseType: !174, size: 64, offset: 192)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !569, file: !570, line: 37, baseType: !174, size: 64, offset: 256)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !569, file: !570, line: 38, baseType: !530, size: 32, offset: 320)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !569, file: !570, line: 39, baseType: !530, size: 32, offset: 352)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !569, file: !570, line: 40, baseType: !452, size: 32, offset: 384)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !569, file: !570, line: 41, baseType: !460, size: 32, offset: 416)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !569, file: !570, line: 42, baseType: !548, size: 64, offset: 448)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !569, file: !570, line: 43, baseType: !552, size: 128, offset: 512)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !569, file: !570, line: 44, baseType: !552, size: 128, offset: 640)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !569, file: !570, line: 45, baseType: !552, size: 128, offset: 768)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !569, file: !570, line: 46, baseType: !552, size: 128, offset: 896)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !569, file: !570, line: 47, baseType: !174, size: 64, offset: 1024)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !569, file: !570, line: 48, baseType: !174, size: 64, offset: 1088)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !470, file: !44, line: 1883, baseType: !592, size: 64, offset: 960)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DISubroutineType(types: !594)
!594 = !{!332, !407, !301, !347}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !470, file: !44, line: 1884, baseType: !596, size: 64, offset: 1024)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DISubroutineType(types: !598)
!598 = !{!120, !446, !599, !174, !174}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !470, file: !44, line: 1886, baseType: !602, size: 64, offset: 1088)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DISubroutineType(types: !604)
!604 = !{!120, !446, !605, !120}
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !470, file: !44, line: 1887, baseType: !607, size: 64, offset: 1152)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DISubroutineType(types: !609)
!609 = !{!120, !446, !407, !377, !7, !342}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !470, file: !44, line: 1890, baseType: !522, size: 64, offset: 1216)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !470, file: !44, line: 1891, baseType: !612, size: 64, offset: 1280)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DISubroutineType(types: !614)
!614 = !{!120, !446, !497, !120}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !447, file: !44, line: 623, baseType: !616, size: 64, offset: 192)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !618)
!618 = !{!619, !620, !621, !622, !623, !624, !674, !2447, !2529, !2612, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2628, !2632, !2633, !2636, !2637, !2640, !2641, !2642, !2683, !2710, !2711, !2712, !2713, !2714, !2715, !2718, !2720, !2727, !2728, !2730, !2731, !2732, !2791, !2792, !2807, !2808, !2809, !2810, !2811, !2814, !2815, !2816, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !617, file: !44, line: 1417, baseType: !149, size: 128)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !617, file: !44, line: 1418, baseType: !530, size: 32, offset: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !617, file: !44, line: 1419, baseType: !230, size: 8, offset: 160)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !617, file: !44, line: 1420, baseType: !185, size: 64, offset: 192)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !617, file: !44, line: 1421, baseType: !548, size: 64, offset: 256)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !617, file: !44, line: 1422, baseType: !625, size: 64, offset: 320)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !627)
!627 = !{!628, !629, !630, !637, !641, !645, !649, !653, !654, !664, !667, !668, !669, !671, !672, !673}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !626, file: !44, line: 2229, baseType: !181, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !626, file: !44, line: 2230, baseType: !120, size: 32, offset: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !626, file: !44, line: 2238, baseType: !631, size: 64, offset: 128)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = !DISubroutineType(types: !633)
!633 = !{!120, !634}
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !636, line: 28, flags: DIFlagFwdDecl)
!636 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!637 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !626, file: !44, line: 2239, baseType: !638, size: 64, offset: 192)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !640)
!640 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !626, file: !44, line: 2240, baseType: !642, size: 64, offset: 256)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DISubroutineType(types: !644)
!644 = !{!407, !625, !120, !181, !144}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !626, file: !44, line: 2242, baseType: !646, size: 64, offset: 320)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DISubroutineType(types: !648)
!648 = !{null, !616}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !626, file: !44, line: 2243, baseType: !650, size: 64, offset: 384)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !652, line: 76, flags: DIFlagFwdDecl)
!652 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!653 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !626, file: !44, line: 2244, baseType: !625, size: 64, offset: 448)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !626, file: !44, line: 2245, baseType: !655, size: 64, offset: 512)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !150, line: 182, size: 64, elements: !656)
!656 = !{!657}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !655, file: !150, line: 183, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !150, line: 186, size: 128, elements: !660)
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !659, file: !150, line: 187, baseType: !658, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !659, file: !150, line: 187, baseType: !663, size: 64, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !626, file: !44, line: 2247, baseType: !665, offset: 576)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !666, line: 187, elements: !274)
!666 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!667 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !626, file: !44, line: 2248, baseType: !665, offset: 576)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !626, file: !44, line: 2249, baseType: !665, offset: 576)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !626, file: !44, line: 2250, baseType: !670, offset: 576)
!670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, elements: !302)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !626, file: !44, line: 2252, baseType: !665, offset: 576)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !626, file: !44, line: 2253, baseType: !665, offset: 576)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !626, file: !44, line: 2254, baseType: !665, offset: 576)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !617, file: !44, line: 1423, baseType: !675, size: 64, offset: 384)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !677)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !678)
!678 = !{!679, !683, !687, !688, !692, !698, !702, !703, !704, !708, !712, !713, !714, !715, !721, !726, !727, !734, !735, !736, !737, !2431, !2446}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !677, file: !44, line: 1936, baseType: !680, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = !DISubroutineType(types: !682)
!682 = !{!446, !616}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !677, file: !44, line: 1937, baseType: !684, size: 64, offset: 64)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DISubroutineType(types: !686)
!686 = !{null, !446}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !677, file: !44, line: 1938, baseType: !684, size: 64, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !677, file: !44, line: 1940, baseType: !689, size: 64, offset: 192)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DISubroutineType(types: !691)
!691 = !{null, !446, !120}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !677, file: !44, line: 1941, baseType: !693, size: 64, offset: 256)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DISubroutineType(types: !695)
!695 = !{!120, !446, !696}
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !677, file: !44, line: 1942, baseType: !699, size: 64, offset: 320)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DISubroutineType(types: !701)
!701 = !{!120, !446}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !677, file: !44, line: 1943, baseType: !684, size: 64, offset: 384)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !677, file: !44, line: 1944, baseType: !646, size: 64, offset: 448)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !677, file: !44, line: 1945, baseType: !705, size: 64, offset: 512)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DISubroutineType(types: !707)
!707 = !{!120, !616, !120}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !677, file: !44, line: 1946, baseType: !709, size: 64, offset: 576)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = !DISubroutineType(types: !711)
!711 = !{!120, !616}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !677, file: !44, line: 1947, baseType: !709, size: 64, offset: 640)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !677, file: !44, line: 1948, baseType: !709, size: 64, offset: 704)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !677, file: !44, line: 1949, baseType: !709, size: 64, offset: 768)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !677, file: !44, line: 1950, baseType: !716, size: 64, offset: 832)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DISubroutineType(types: !718)
!718 = !{!120, !407, !719}
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !677, file: !44, line: 1951, baseType: !722, size: 64, offset: 896)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!120, !616, !725, !301}
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !677, file: !44, line: 1952, baseType: !646, size: 64, offset: 960)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !677, file: !44, line: 1954, baseType: !728, size: 64, offset: 1024)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DISubroutineType(types: !730)
!730 = !{!120, !731, !407}
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !733, line: 539, flags: DIFlagFwdDecl)
!733 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!734 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !677, file: !44, line: 1955, baseType: !728, size: 64, offset: 1088)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !677, file: !44, line: 1956, baseType: !728, size: 64, offset: 1152)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !677, file: !44, line: 1957, baseType: !728, size: 64, offset: 1216)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !677, file: !44, line: 1963, baseType: !738, size: 64, offset: 1280)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DISubroutineType(types: !740)
!740 = !{!120, !616, !741, !764}
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !743, line: 68, size: 512, align: 128, elements: !744)
!743 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!744 = !{!745, !746, !2423, !2430}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !742, file: !743, line: 69, baseType: !185, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, scope: !742, file: !743, line: 77, baseType: !747, size: 320, offset: 64)
!747 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !742, file: !743, line: 77, size: 320, elements: !748)
!748 = !{!749, !937, !942, !970, !978, !984, !2354, !2422}
!749 = !DIDerivedType(tag: DW_TAG_member, scope: !747, file: !743, line: 78, baseType: !750, size: 320)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !747, file: !743, line: 78, size: 320, elements: !751)
!751 = !{!752, !753, !935, !936}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !750, file: !743, line: 84, baseType: !149, size: 128)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !750, file: !743, line: 86, baseType: !754, size: 64, offset: 128)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !756)
!756 = !{!757, !758, !766, !767, !772, !787, !803, !804, !805, !806, !928, !929, !932, !933, !934}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !755, file: !44, line: 452, baseType: !446, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !755, file: !44, line: 453, baseType: !759, size: 128, offset: 64)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !760, line: 292, size: 128, elements: !761)
!760 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!761 = !{!762, !763, !765}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !759, file: !760, line: 293, baseType: !260)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !759, file: !760, line: 295, baseType: !764, size: 32)
!764 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !150, line: 148, baseType: !7)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !759, file: !760, line: 296, baseType: !144, size: 64, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !755, file: !44, line: 454, baseType: !764, size: 32, offset: 192)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !755, file: !44, line: 455, baseType: !768, size: 32, offset: 224)
!768 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !150, line: 168, baseType: !769)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 166, size: 32, elements: !770)
!770 = !{!771}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !769, file: !150, line: 167, baseType: !120, size: 32)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !755, file: !44, line: 460, baseType: !773, size: 128, offset: 256)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !774, line: 125, size: 128, elements: !775)
!774 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!775 = !{!776, !786}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !773, file: !774, line: 126, baseType: !777, size: 64)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !774, line: 31, size: 64, elements: !778)
!778 = !{!779}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !777, file: !774, line: 32, baseType: !780, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !774, line: 24, size: 192, align: 64, elements: !782)
!782 = !{!783, !784, !785}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !781, file: !774, line: 25, baseType: !185, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !781, file: !774, line: 26, baseType: !780, size: 64, offset: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !781, file: !774, line: 27, baseType: !780, size: 64, offset: 128)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !773, file: !774, line: 127, baseType: !780, size: 64, offset: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !755, file: !44, line: 461, baseType: !788, size: 256, offset: 384)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !789, line: 35, size: 256, elements: !790)
!789 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!790 = !{!791, !799, !800, !802}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !788, file: !789, line: 36, baseType: !792, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !793, line: 13, baseType: !794)
!793 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !150, line: 175, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 173, size: 64, elements: !796)
!796 = !{!797}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !795, file: !150, line: 174, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !175, line: 22, baseType: !557)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !788, file: !789, line: 42, baseType: !792, size: 64, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !788, file: !789, line: 46, baseType: !801, offset: 128)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !261, line: 29, baseType: !268)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !788, file: !789, line: 47, baseType: !149, size: 128, offset: 128)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !755, file: !44, line: 462, baseType: !185, size: 64, offset: 640)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !755, file: !44, line: 463, baseType: !185, size: 64, offset: 704)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !755, file: !44, line: 464, baseType: !185, size: 64, offset: 768)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !755, file: !44, line: 465, baseType: !807, size: 64, offset: 832)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !810)
!810 = !{!811, !815, !819, !823, !827, !831, !837, !843, !847, !852, !856, !860, !864, !892, !896, !902, !903, !904, !908, !913, !917, !924}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !809, file: !44, line: 368, baseType: !812, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DISubroutineType(types: !814)
!814 = !{!120, !741, !696}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !809, file: !44, line: 369, baseType: !816, size: 64, offset: 64)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DISubroutineType(types: !818)
!818 = !{!120, !377, !741}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !809, file: !44, line: 372, baseType: !820, size: 64, offset: 128)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DISubroutineType(types: !822)
!822 = !{!120, !754, !696}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !809, file: !44, line: 375, baseType: !824, size: 64, offset: 192)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!120, !741}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !809, file: !44, line: 381, baseType: !828, size: 64, offset: 256)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DISubroutineType(types: !830)
!830 = !{!120, !377, !754, !153, !7}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !809, file: !44, line: 383, baseType: !832, size: 64, offset: 320)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{null, !835}
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !809, file: !44, line: 385, baseType: !838, size: 64, offset: 384)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{!120, !377, !754, !548, !7, !7, !841, !842}
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !809, file: !44, line: 388, baseType: !844, size: 64, offset: 448)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{!120, !377, !754, !548, !7, !7, !741, !144}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !809, file: !44, line: 393, baseType: !848, size: 64, offset: 512)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DISubroutineType(types: !850)
!850 = !{!851, !754, !851}
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !150, line: 125, baseType: !174)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !809, file: !44, line: 394, baseType: !853, size: 64, offset: 576)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DISubroutineType(types: !855)
!855 = !{null, !741, !7, !7}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !809, file: !44, line: 395, baseType: !857, size: 64, offset: 640)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DISubroutineType(types: !859)
!859 = !{!120, !741, !764}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !809, file: !44, line: 396, baseType: !861, size: 64, offset: 704)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{null, !741}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !809, file: !44, line: 397, baseType: !865, size: 64, offset: 768)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!332, !868, !890}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !870)
!870 = !{!871, !872, !873, !877, !878, !879, !882, !883}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !869, file: !44, line: 321, baseType: !377, size: 64)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !869, file: !44, line: 326, baseType: !548, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !869, file: !44, line: 327, baseType: !874, size: 64, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{null, !868, !336, !336}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !869, file: !44, line: 328, baseType: !144, size: 64, offset: 192)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !869, file: !44, line: 329, baseType: !120, size: 32, offset: 256)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !869, file: !44, line: 330, baseType: !880, size: 16, offset: 288)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !175, line: 19, baseType: !881)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !177, line: 24, baseType: !239)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !869, file: !44, line: 331, baseType: !880, size: 16, offset: 304)
!883 = !DIDerivedType(tag: DW_TAG_member, scope: !869, file: !44, line: 332, baseType: !884, size: 64, offset: 320)
!884 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !869, file: !44, line: 332, size: 64, elements: !885)
!885 = !{!886, !887}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !884, file: !44, line: 333, baseType: !7, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !884, file: !44, line: 334, baseType: !888, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !809, file: !44, line: 402, baseType: !893, size: 64, offset: 832)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DISubroutineType(types: !895)
!895 = !{!120, !754, !741, !741, !5}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !809, file: !44, line: 404, baseType: !897, size: 64, offset: 896)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DISubroutineType(types: !899)
!899 = !{!507, !741, !900}
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !901, line: 305, baseType: !7)
!901 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!902 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !809, file: !44, line: 405, baseType: !861, size: 64, offset: 960)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !809, file: !44, line: 406, baseType: !824, size: 64, offset: 1024)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !809, file: !44, line: 407, baseType: !905, size: 64, offset: 1088)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DISubroutineType(types: !907)
!907 = !{!120, !741, !185, !185}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !809, file: !44, line: 409, baseType: !909, size: 64, offset: 1152)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = !DISubroutineType(types: !911)
!911 = !{null, !741, !912, !912}
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !809, file: !44, line: 410, baseType: !914, size: 64, offset: 1216)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DISubroutineType(types: !916)
!916 = !{!120, !754, !741}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !809, file: !44, line: 413, baseType: !918, size: 64, offset: 1280)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{!120, !921, !377, !923}
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !809, file: !44, line: 415, baseType: !925, size: 64, offset: 1344)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DISubroutineType(types: !927)
!927 = !{null, !377}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !755, file: !44, line: 466, baseType: !185, size: 64, offset: 896)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !755, file: !44, line: 467, baseType: !930, size: 32, offset: 960)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !931, line: 8, baseType: !215)
!931 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!932 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !755, file: !44, line: 468, baseType: !260, offset: 992)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !755, file: !44, line: 469, baseType: !149, size: 128, offset: 1024)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !755, file: !44, line: 470, baseType: !144, size: 64, offset: 1152)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !750, file: !743, line: 87, baseType: !185, size: 64, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !750, file: !743, line: 94, baseType: !185, size: 64, offset: 256)
!937 = !DIDerivedType(tag: DW_TAG_member, scope: !747, file: !743, line: 96, baseType: !938, size: 64)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !747, file: !743, line: 96, size: 64, elements: !939)
!939 = !{!940}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !938, file: !743, line: 101, baseType: !941, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !150, line: 143, baseType: !174)
!942 = !DIDerivedType(tag: DW_TAG_member, scope: !747, file: !743, line: 103, baseType: !943, size: 320)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !747, file: !743, line: 103, size: 320, elements: !944)
!944 = !{!945, !955, !958, !959}
!945 = !DIDerivedType(tag: DW_TAG_member, scope: !943, file: !743, line: 104, baseType: !946, size: 128)
!946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !943, file: !743, line: 104, size: 128, elements: !947)
!947 = !{!948, !949}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !946, file: !743, line: 105, baseType: !149, size: 128)
!949 = !DIDerivedType(tag: DW_TAG_member, scope: !946, file: !743, line: 106, baseType: !950, size: 128)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !946, file: !743, line: 106, size: 128, elements: !951)
!951 = !{!952, !953, !954}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !950, file: !743, line: 107, baseType: !741, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !950, file: !743, line: 109, baseType: !120, size: 32, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !950, file: !743, line: 110, baseType: !120, size: 32, offset: 96)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !943, file: !743, line: 117, baseType: !956, size: 64, offset: 128)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !743, line: 117, flags: DIFlagFwdDecl)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !943, file: !743, line: 119, baseType: !144, size: 64, offset: 192)
!959 = !DIDerivedType(tag: DW_TAG_member, scope: !943, file: !743, line: 120, baseType: !960, size: 64, offset: 256)
!960 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !943, file: !743, line: 120, size: 64, elements: !961)
!961 = !{!962, !963, !964}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !960, file: !743, line: 121, baseType: !144, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !960, file: !743, line: 122, baseType: !185, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, scope: !960, file: !743, line: 123, baseType: !965, size: 32)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !960, file: !743, line: 123, size: 32, elements: !966)
!966 = !{!967, !968, !969}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !965, file: !743, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !965, file: !743, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !965, file: !743, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, scope: !747, file: !743, line: 130, baseType: !971, size: 192)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !747, file: !743, line: 130, size: 192, elements: !972)
!972 = !{!973, !974, !975, !976, !977}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !971, file: !743, line: 131, baseType: !185, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !971, file: !743, line: 134, baseType: !230, size: 8, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !971, file: !743, line: 135, baseType: !230, size: 8, offset: 72)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !971, file: !743, line: 136, baseType: !768, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !971, file: !743, line: 137, baseType: !7, size: 32, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_member, scope: !747, file: !743, line: 139, baseType: !979, size: 256)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !747, file: !743, line: 139, size: 256, elements: !980)
!980 = !{!981, !982, !983}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !979, file: !743, line: 140, baseType: !185, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !979, file: !743, line: 141, baseType: !768, size: 32, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !979, file: !743, line: 143, baseType: !149, size: 128, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, scope: !747, file: !743, line: 145, baseType: !985, size: 256)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !747, file: !743, line: 145, size: 256, elements: !986)
!986 = !{!987, !988, !990, !991, !2353}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !985, file: !743, line: 146, baseType: !185, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !985, file: !743, line: 147, baseType: !989, size: 64, offset: 64)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !733, line: 509, baseType: !741)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !985, file: !743, line: 148, baseType: !185, size: 64, offset: 128)
!991 = !DIDerivedType(tag: DW_TAG_member, scope: !985, file: !743, line: 149, baseType: !992, size: 64, offset: 192)
!992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !985, file: !743, line: 149, size: 64, elements: !993)
!993 = !{!994, !2352}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !992, file: !743, line: 150, baseType: !995, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !743, line: 388, size: 7296, elements: !997)
!997 = !{!998, !2348}
!998 = !DIDerivedType(tag: DW_TAG_member, scope: !996, file: !743, line: 389, baseType: !999, size: 7296)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !996, file: !743, line: 389, size: 7296, elements: !1000)
!1000 = !{!1001, !1119, !1120, !1121, !1125, !1126, !1127, !1128, !1129, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1170, !1176, !1179, !1225, !1226, !2332, !2333, !2336, !2337, !2338, !2341, !2342, !2343, !2346, !2347}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !999, file: !743, line: 390, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !743, line: 305, size: 1472, elements: !1004)
!1004 = !{!1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1019, !1020, !1025, !1026, !1029, !1113, !1114, !1115, !1116, !1117}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1003, file: !743, line: 308, baseType: !185, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1003, file: !743, line: 309, baseType: !185, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1003, file: !743, line: 313, baseType: !1002, size: 64, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1003, file: !743, line: 313, baseType: !1002, size: 64, offset: 192)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1003, file: !743, line: 315, baseType: !781, size: 192, align: 64, offset: 256)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1003, file: !743, line: 323, baseType: !185, size: 64, offset: 448)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1003, file: !743, line: 327, baseType: !995, size: 64, offset: 512)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1003, file: !743, line: 333, baseType: !1013, size: 64, offset: 576)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !733, line: 284, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !733, line: 284, size: 64, elements: !1015)
!1015 = !{!1016}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1014, file: !733, line: 284, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1018, line: 19, baseType: !185)
!1018 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1003, file: !743, line: 334, baseType: !185, size: 64, offset: 640)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1003, file: !743, line: 343, baseType: !1021, size: 256, offset: 704)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1003, file: !743, line: 340, size: 256, elements: !1022)
!1022 = !{!1023, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1021, file: !743, line: 341, baseType: !781, size: 192, align: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1021, file: !743, line: 342, baseType: !185, size: 64, offset: 192)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1003, file: !743, line: 351, baseType: !149, size: 128, offset: 960)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1003, file: !743, line: 353, baseType: !1027, size: 64, offset: 1088)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !743, line: 353, flags: DIFlagFwdDecl)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1003, file: !743, line: 356, baseType: !1030, size: 64, offset: 1152)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1033)
!1033 = !{!1034, !1038, !1039, !1043, !1047, !1087, !1091, !1095, !1099, !1100, !1101, !1105, !1109}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1032, file: !14, line: 558, baseType: !1035, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{null, !1002}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1032, file: !14, line: 559, baseType: !1035, size: 64, offset: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1032, file: !14, line: 560, baseType: !1040, size: 64, offset: 128)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!120, !1002, !185}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1032, file: !14, line: 561, baseType: !1044, size: 64, offset: 192)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!120, !1002}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1032, file: !14, line: 562, baseType: !1048, size: 64, offset: 256)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!1051, !1052}
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !743, line: 682, baseType: !7)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1054)
!1054 = !{!1055, !1056, !1057, !1058, !1059, !1060, !1067, !1074, !1080, !1081, !1082, !1084, !1086}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1053, file: !14, line: 509, baseType: !1002, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1053, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1053, file: !14, line: 511, baseType: !764, size: 32, offset: 96)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1053, file: !14, line: 512, baseType: !185, size: 64, offset: 128)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1053, file: !14, line: 513, baseType: !185, size: 64, offset: 192)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1053, file: !14, line: 514, baseType: !1061, size: 64, offset: 256)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !733, line: 385, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !733, line: 385, size: 64, elements: !1064)
!1064 = !{!1065}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1063, file: !733, line: 385, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1018, line: 15, baseType: !185)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1053, file: !14, line: 516, baseType: !1068, size: 64, offset: 320)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !733, line: 359, baseType: !1070)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !733, line: 359, size: 64, elements: !1071)
!1071 = !{!1072}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1070, file: !733, line: 359, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1018, line: 16, baseType: !185)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1053, file: !14, line: 519, baseType: !1075, size: 64, offset: 384)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1018, line: 21, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1018, line: 21, size: 64, elements: !1077)
!1077 = !{!1078}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1076, file: !1018, line: 21, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1018, line: 14, baseType: !185)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1053, file: !14, line: 521, baseType: !741, size: 64, offset: 448)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1053, file: !14, line: 522, baseType: !741, size: 64, offset: 512)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1053, file: !14, line: 528, baseType: !1083, size: 64, offset: 576)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1053, file: !14, line: 532, baseType: !1085, size: 64, offset: 640)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1053, file: !14, line: 536, baseType: !989, size: 64, offset: 704)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1032, file: !14, line: 563, baseType: !1088, size: 64, offset: 320)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!1051, !1052, !13}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1032, file: !14, line: 565, baseType: !1092, size: 64, offset: 384)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{null, !1052, !185, !185}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1032, file: !14, line: 567, baseType: !1096, size: 64, offset: 448)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!185, !1002}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1032, file: !14, line: 571, baseType: !1048, size: 64, offset: 512)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1032, file: !14, line: 574, baseType: !1048, size: 64, offset: 576)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1032, file: !14, line: 579, baseType: !1102, size: 64, offset: 640)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!120, !1002, !185, !144, !120, !120}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1032, file: !14, line: 585, baseType: !1106, size: 64, offset: 704)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!181, !1002}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1032, file: !14, line: 615, baseType: !1110, size: 64, offset: 768)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!741, !1002, !185}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1003, file: !743, line: 359, baseType: !185, size: 64, offset: 1216)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1003, file: !743, line: 361, baseType: !377, size: 64, offset: 1280)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1003, file: !743, line: 362, baseType: !144, size: 64, offset: 1344)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1003, file: !743, line: 365, baseType: !792, size: 64, offset: 1408)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1003, file: !743, line: 373, baseType: !1118, offset: 1472)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !743, line: 296, elements: !274)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !999, file: !743, line: 391, baseType: !777, size: 64, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !999, file: !743, line: 392, baseType: !174, size: 64, offset: 128)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !999, file: !743, line: 394, baseType: !1122, size: 64, offset: 192)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!185, !377, !185, !185, !185, !185}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !999, file: !743, line: 398, baseType: !185, size: 64, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !999, file: !743, line: 399, baseType: !185, size: 64, offset: 320)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !999, file: !743, line: 405, baseType: !185, size: 64, offset: 384)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !999, file: !743, line: 406, baseType: !185, size: 64, offset: 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !999, file: !743, line: 407, baseType: !1130, size: 64, offset: 512)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !733, line: 286, baseType: !1132)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !733, line: 286, size: 64, elements: !1133)
!1133 = !{!1134}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1132, file: !733, line: 286, baseType: !1135, size: 64)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1018, line: 18, baseType: !185)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !999, file: !743, line: 416, baseType: !768, size: 32, offset: 576)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !999, file: !743, line: 428, baseType: !768, size: 32, offset: 608)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !999, file: !743, line: 437, baseType: !768, size: 32, offset: 640)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !999, file: !743, line: 447, baseType: !768, size: 32, offset: 672)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !999, file: !743, line: 450, baseType: !792, size: 64, offset: 704)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !999, file: !743, line: 452, baseType: !120, size: 32, offset: 768)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !999, file: !743, line: 454, baseType: !260, offset: 800)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !999, file: !743, line: 457, baseType: !788, size: 256, offset: 832)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !999, file: !743, line: 459, baseType: !149, size: 128, offset: 1088)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !999, file: !743, line: 466, baseType: !185, size: 64, offset: 1216)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !999, file: !743, line: 467, baseType: !185, size: 64, offset: 1280)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !999, file: !743, line: 469, baseType: !185, size: 64, offset: 1344)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !999, file: !743, line: 470, baseType: !185, size: 64, offset: 1408)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !999, file: !743, line: 471, baseType: !794, size: 64, offset: 1472)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !999, file: !743, line: 472, baseType: !185, size: 64, offset: 1536)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !999, file: !743, line: 473, baseType: !185, size: 64, offset: 1600)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !999, file: !743, line: 474, baseType: !185, size: 64, offset: 1664)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !999, file: !743, line: 475, baseType: !185, size: 64, offset: 1728)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !999, file: !743, line: 477, baseType: !260, offset: 1792)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !999, file: !743, line: 478, baseType: !185, size: 64, offset: 1792)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !999, file: !743, line: 478, baseType: !185, size: 64, offset: 1856)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !999, file: !743, line: 478, baseType: !185, size: 64, offset: 1920)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !999, file: !743, line: 478, baseType: !185, size: 64, offset: 1984)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !999, file: !743, line: 479, baseType: !185, size: 64, offset: 2048)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !999, file: !743, line: 479, baseType: !185, size: 64, offset: 2112)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !999, file: !743, line: 479, baseType: !185, size: 64, offset: 2176)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !999, file: !743, line: 480, baseType: !185, size: 64, offset: 2240)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !999, file: !743, line: 480, baseType: !185, size: 64, offset: 2304)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !999, file: !743, line: 480, baseType: !185, size: 64, offset: 2368)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !999, file: !743, line: 480, baseType: !185, size: 64, offset: 2432)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !999, file: !743, line: 482, baseType: !1167, size: 2816, offset: 2496)
!1167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 2816, elements: !1168)
!1168 = !{!1169}
!1169 = !DISubrange(count: 44)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !999, file: !743, line: 488, baseType: !1171, size: 256, offset: 5312)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1172, line: 60, size: 256, elements: !1173)
!1172 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1173 = !{!1174}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1171, file: !1172, line: 61, baseType: !1175, size: 256)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, size: 256, elements: !190)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !999, file: !743, line: 490, baseType: !1177, size: 64, offset: 5568)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !743, line: 490, flags: DIFlagFwdDecl)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !999, file: !743, line: 493, baseType: !1180, size: 896, offset: 5632)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1181, line: 53, baseType: !1182)
!1181 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1181, line: 13, size: 896, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187, !1190, !1191, !1198, !1199, !1219, !1220, !1221}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1182, file: !1181, line: 18, baseType: !174, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1182, file: !1181, line: 28, baseType: !794, size: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1182, file: !1181, line: 31, baseType: !788, size: 256, offset: 128)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1182, file: !1181, line: 32, baseType: !1188, size: 64, offset: 384)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1181, line: 32, flags: DIFlagFwdDecl)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1182, file: !1181, line: 37, baseType: !239, size: 16, offset: 448)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1182, file: !1181, line: 40, baseType: !1192, size: 192, offset: 512)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1193, line: 53, size: 192, elements: !1194)
!1193 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1194 = !{!1195, !1196, !1197}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1192, file: !1193, line: 54, baseType: !792, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1192, file: !1193, line: 55, baseType: !260, offset: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1192, file: !1193, line: 59, baseType: !149, size: 128, offset: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1182, file: !1181, line: 41, baseType: !144, size: 64, offset: 704)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1182, file: !1181, line: 42, baseType: !1200, size: 64, offset: 768)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1202)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1203, line: 13, size: 896, elements: !1204)
!1203 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1204 = !{!1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1202, file: !1203, line: 14, baseType: !144, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1202, file: !1203, line: 15, baseType: !185, size: 64, offset: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1202, file: !1203, line: 17, baseType: !185, size: 64, offset: 128)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1202, file: !1203, line: 17, baseType: !185, size: 64, offset: 192)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1202, file: !1203, line: 19, baseType: !336, size: 64, offset: 256)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1202, file: !1203, line: 21, baseType: !336, size: 64, offset: 320)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1202, file: !1203, line: 22, baseType: !336, size: 64, offset: 384)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1202, file: !1203, line: 23, baseType: !336, size: 64, offset: 448)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1202, file: !1203, line: 24, baseType: !336, size: 64, offset: 512)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1202, file: !1203, line: 25, baseType: !336, size: 64, offset: 576)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1202, file: !1203, line: 26, baseType: !336, size: 64, offset: 640)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1202, file: !1203, line: 27, baseType: !336, size: 64, offset: 704)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1202, file: !1203, line: 28, baseType: !336, size: 64, offset: 768)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1202, file: !1203, line: 29, baseType: !336, size: 64, offset: 832)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1182, file: !1181, line: 44, baseType: !768, size: 32, offset: 832)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1182, file: !1181, line: 50, baseType: !880, size: 16, offset: 864)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1182, file: !1181, line: 51, baseType: !1222, size: 16, offset: 880)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !175, line: 18, baseType: !1223)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !177, line: 23, baseType: !1224)
!1224 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !999, file: !743, line: 495, baseType: !185, size: 64, offset: 6528)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !999, file: !743, line: 497, baseType: !1227, size: 64, offset: 6592)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !743, line: 381, size: 384, elements: !1229)
!1229 = !{!1230, !1231, !2331}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1228, file: !743, line: 382, baseType: !768, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1228, file: !743, line: 383, baseType: !1232, size: 128, offset: 64)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !743, line: 376, size: 128, elements: !1233)
!1233 = !{!1234, !2329}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1232, file: !743, line: 377, baseType: !1235, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1237, line: 640, size: 48640, elements: !1238)
!1237 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1238 = !{!1239, !1245, !1247, !1248, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1265, !1283, !1294, !1379, !1380, !1381, !1392, !1393, !1395, !1396, !1397, !1398, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1476, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1514, !1516, !1517, !1518, !1530, !1531, !1532, !1533, !1534, !1535, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1559, !1564, !1748, !1749, !1750, !1751, !1755, !1758, !1761, !1764, !1767, !1771, !1872, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1918, !1919, !1920, !1921, !1922, !1927, !1928, !1929, !1932, !1933, !1936, !1939, !1942, !1945, !1988, !1991, !1992, !2071, !2072, !2075, !2076, !2079, !2080, !2081, !2085, !2086, !2087, !2100, !2101, !2102, !2112, !2117, !2120, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1236, file: !1237, line: 646, baseType: !1240, size: 128)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1241, line: 56, size: 128, elements: !1242)
!1241 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1242 = !{!1243, !1244}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1240, file: !1241, line: 57, baseType: !185, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1240, file: !1241, line: 58, baseType: !215, size: 32, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1236, file: !1237, line: 649, baseType: !1246, size: 64, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !336)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1236, file: !1237, line: 657, baseType: !144, size: 64, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1236, file: !1237, line: 658, baseType: !1249, size: 32, offset: 256)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1250, line: 113, baseType: !1251)
!1250 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1250, line: 111, size: 32, elements: !1252)
!1252 = !{!1253}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1251, file: !1250, line: 112, baseType: !768, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1236, file: !1237, line: 660, baseType: !7, size: 32, offset: 288)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1236, file: !1237, line: 661, baseType: !7, size: 32, offset: 320)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1236, file: !1237, line: 684, baseType: !120, size: 32, offset: 352)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1236, file: !1237, line: 686, baseType: !120, size: 32, offset: 384)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1236, file: !1237, line: 687, baseType: !120, size: 32, offset: 416)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1236, file: !1237, line: 688, baseType: !120, size: 32, offset: 448)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1236, file: !1237, line: 689, baseType: !7, size: 32, offset: 480)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1236, file: !1237, line: 691, baseType: !1262, size: 64, offset: 512)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1264)
!1264 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1237, line: 691, flags: DIFlagFwdDecl)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1236, file: !1237, line: 692, baseType: !1266, size: 832, offset: 576)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1237, line: 451, size: 832, elements: !1267)
!1267 = !{!1268, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1266, file: !1237, line: 453, baseType: !1269, size: 128)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1237, line: 325, size: 128, elements: !1270)
!1270 = !{!1271, !1272}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1269, file: !1237, line: 326, baseType: !185, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1269, file: !1237, line: 327, baseType: !215, size: 32, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1266, file: !1237, line: 454, baseType: !781, size: 192, align: 64, offset: 128)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1266, file: !1237, line: 455, baseType: !149, size: 128, offset: 320)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1266, file: !1237, line: 456, baseType: !7, size: 32, offset: 448)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1266, file: !1237, line: 458, baseType: !174, size: 64, offset: 512)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1266, file: !1237, line: 459, baseType: !174, size: 64, offset: 576)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1266, file: !1237, line: 460, baseType: !174, size: 64, offset: 640)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1266, file: !1237, line: 461, baseType: !174, size: 64, offset: 704)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1266, file: !1237, line: 463, baseType: !174, size: 64, offset: 768)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1266, file: !1237, line: 465, baseType: !1282, offset: 832)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1237, line: 415, elements: !274)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1236, file: !1237, line: 693, baseType: !1284, size: 384, offset: 1408)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1237, line: 489, size: 384, elements: !1285)
!1285 = !{!1286, !1287, !1288, !1289, !1290, !1291, !1292}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1284, file: !1237, line: 490, baseType: !149, size: 128)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1284, file: !1237, line: 491, baseType: !185, size: 64, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1284, file: !1237, line: 492, baseType: !185, size: 64, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1284, file: !1237, line: 493, baseType: !7, size: 32, offset: 256)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1284, file: !1237, line: 494, baseType: !239, size: 16, offset: 288)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1284, file: !1237, line: 495, baseType: !239, size: 16, offset: 304)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1284, file: !1237, line: 497, baseType: !1293, size: 64, offset: 320)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1236, file: !1237, line: 697, baseType: !1295, size: 1792, offset: 1792)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1237, line: 507, size: 1792, elements: !1296)
!1296 = !{!1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1376, !1377}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1295, file: !1237, line: 508, baseType: !781, size: 192, align: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1295, file: !1237, line: 515, baseType: !174, size: 64, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1295, file: !1237, line: 516, baseType: !174, size: 64, offset: 256)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1295, file: !1237, line: 517, baseType: !174, size: 64, offset: 320)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1295, file: !1237, line: 518, baseType: !174, size: 64, offset: 384)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1295, file: !1237, line: 519, baseType: !174, size: 64, offset: 448)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1295, file: !1237, line: 526, baseType: !798, size: 64, offset: 512)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1295, file: !1237, line: 527, baseType: !174, size: 64, offset: 576)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1295, file: !1237, line: 528, baseType: !7, size: 32, offset: 640)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1295, file: !1237, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1295, file: !1237, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1295, file: !1237, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1295, file: !1237, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1295, file: !1237, line: 563, baseType: !1311, size: 512, offset: 704)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1312)
!1312 = !{!1313, !1321, !1322, !1327, !1370, !1373, !1374, !1375}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1311, file: !20, line: 119, baseType: !1314, size: 256)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1315, line: 9, size: 256, elements: !1316)
!1315 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1316 = !{!1317, !1318}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1314, file: !1315, line: 10, baseType: !781, size: 192, align: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1314, file: !1315, line: 11, baseType: !1319, size: 64, offset: 192)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1320, line: 29, baseType: !798)
!1320 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1311, file: !20, line: 120, baseType: !1319, size: 64, offset: 256)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1311, file: !20, line: 121, baseType: !1323, size: 64, offset: 320)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!19, !1326}
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1311, file: !20, line: 122, baseType: !1328, size: 64, offset: 384)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1330)
!1330 = !{!1331, !1351, !1352, !1355, !1360, !1361, !1365, !1369}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1329, file: !20, line: 160, baseType: !1332, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1334)
!1334 = !{!1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1333, file: !20, line: 215, baseType: !801)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1333, file: !20, line: 216, baseType: !7, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1333, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1333, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1333, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1333, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1333, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1333, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1333, file: !20, line: 233, baseType: !1319, size: 64, offset: 128)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1333, file: !20, line: 234, baseType: !1326, size: 64, offset: 192)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1333, file: !20, line: 235, baseType: !1319, size: 64, offset: 256)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1333, file: !20, line: 236, baseType: !1326, size: 64, offset: 320)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1333, file: !20, line: 237, baseType: !1348, size: 4096, offset: 512)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1329, size: 4096, elements: !1349)
!1349 = !{!1350}
!1350 = !DISubrange(count: 8)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1329, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1329, file: !20, line: 162, baseType: !1353, size: 32, offset: 96)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !150, line: 27, baseType: !1354)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !334, line: 96, baseType: !120)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1329, file: !20, line: 163, baseType: !1356, size: 32, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !413, line: 276, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !413, line: 276, size: 32, elements: !1358)
!1358 = !{!1359}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1357, file: !413, line: 276, baseType: !417, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1329, file: !20, line: 164, baseType: !1326, size: 64, offset: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1329, file: !20, line: 165, baseType: !1362, size: 128, offset: 256)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1315, line: 14, size: 128, elements: !1363)
!1363 = !{!1364}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1362, file: !1315, line: 15, baseType: !773, size: 128)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1329, file: !20, line: 166, baseType: !1366, size: 64, offset: 384)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!1319}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1329, file: !20, line: 167, baseType: !1319, size: 64, offset: 448)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1311, file: !20, line: 123, baseType: !1371, size: 8, offset: 448)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !175, line: 17, baseType: !1372)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !177, line: 21, baseType: !230)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1311, file: !20, line: 124, baseType: !1371, size: 8, offset: 456)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1311, file: !20, line: 125, baseType: !1371, size: 8, offset: 464)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1311, file: !20, line: 126, baseType: !1371, size: 8, offset: 472)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1295, file: !1237, line: 572, baseType: !1311, size: 512, offset: 1216)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1295, file: !1237, line: 580, baseType: !1378, size: 64, offset: 1728)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1236, file: !1237, line: 721, baseType: !7, size: 32, offset: 3584)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1236, file: !1237, line: 722, baseType: !120, size: 32, offset: 3616)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1236, file: !1237, line: 723, baseType: !1382, size: 64, offset: 3648)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1384)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1385, line: 17, baseType: !1386)
!1385 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1385, line: 17, size: 64, elements: !1387)
!1387 = !{!1388}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1386, file: !1385, line: 17, baseType: !1389, size: 64)
!1389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 64, elements: !1390)
!1390 = !{!1391}
!1391 = !DISubrange(count: 1)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1236, file: !1237, line: 724, baseType: !1384, size: 64, offset: 3712)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1236, file: !1237, line: 749, baseType: !1394, offset: 3776)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1237, line: 290, elements: !274)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1236, file: !1237, line: 751, baseType: !149, size: 128, offset: 3776)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1236, file: !1237, line: 757, baseType: !995, size: 64, offset: 3904)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1236, file: !1237, line: 758, baseType: !995, size: 64, offset: 3968)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1236, file: !1237, line: 761, baseType: !1399, size: 320, offset: 4032)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1172, line: 34, size: 320, elements: !1400)
!1400 = !{!1401, !1402}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1399, file: !1172, line: 35, baseType: !174, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1399, file: !1172, line: 36, baseType: !1403, size: 256, offset: 64)
!1403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1002, size: 256, elements: !190)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1236, file: !1237, line: 766, baseType: !120, size: 32, offset: 4352)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1236, file: !1237, line: 767, baseType: !120, size: 32, offset: 4384)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1236, file: !1237, line: 768, baseType: !120, size: 32, offset: 4416)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1236, file: !1237, line: 770, baseType: !120, size: 32, offset: 4448)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1236, file: !1237, line: 772, baseType: !185, size: 64, offset: 4480)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1236, file: !1237, line: 775, baseType: !7, size: 32, offset: 4544)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1236, file: !1237, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1236, file: !1237, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1236, file: !1237, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1236, file: !1237, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1236, file: !1237, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1236, file: !1237, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1236, file: !1237, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1236, file: !1237, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1236, file: !1237, line: 831, baseType: !185, size: 64, offset: 4672)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1236, file: !1237, line: 833, baseType: !1420, size: 384, offset: 4736)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1421)
!1421 = !{!1422, !1427}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1420, file: !25, line: 26, baseType: !1423, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{!336, !1426}
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, scope: !1420, file: !25, line: 27, baseType: !1428, size: 320, offset: 64)
!1428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1420, file: !25, line: 27, size: 320, elements: !1429)
!1429 = !{!1430, !1439, !1466}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1428, file: !25, line: 36, baseType: !1431, size: 320)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1428, file: !25, line: 29, size: 320, elements: !1432)
!1432 = !{!1433, !1434, !1435, !1436, !1437, !1438}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1431, file: !25, line: 30, baseType: !214, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1431, file: !25, line: 31, baseType: !215, size: 32, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1431, file: !25, line: 32, baseType: !215, size: 32, offset: 96)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1431, file: !25, line: 33, baseType: !215, size: 32, offset: 128)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1431, file: !25, line: 34, baseType: !174, size: 64, offset: 192)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1431, file: !25, line: 35, baseType: !214, size: 64, offset: 256)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1428, file: !25, line: 46, baseType: !1440, size: 192)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1428, file: !25, line: 38, size: 192, elements: !1441)
!1441 = !{!1442, !1443, !1444, !1465}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1440, file: !25, line: 39, baseType: !1353, size: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1440, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1444 = !DIDerivedType(tag: DW_TAG_member, scope: !1440, file: !25, line: 41, baseType: !1445, size: 64, offset: 64)
!1445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1440, file: !25, line: 41, size: 64, elements: !1446)
!1446 = !{!1447, !1455}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1445, file: !25, line: 42, baseType: !1448, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1450, line: 7, size: 128, elements: !1451)
!1450 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1451 = !{!1452, !1454}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1449, file: !1450, line: 8, baseType: !1453, size: 64)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !334, line: 93, baseType: !550)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1449, file: !1450, line: 9, baseType: !550, size: 64, offset: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1445, file: !25, line: 43, baseType: !1456, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1458, line: 7, size: 64, elements: !1459)
!1458 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1459 = !{!1460, !1464}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1457, file: !1458, line: 8, baseType: !1461, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1458, line: 5, baseType: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !175, line: 20, baseType: !1463)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !177, line: 26, baseType: !120)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1457, file: !1458, line: 9, baseType: !1462, size: 32, offset: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1440, file: !25, line: 45, baseType: !174, size: 64, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1428, file: !25, line: 54, baseType: !1467, size: 256)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1428, file: !25, line: 48, size: 256, elements: !1468)
!1468 = !{!1469, !1472, !1473, !1474, !1475}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1467, file: !25, line: 49, baseType: !1470, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1467, file: !25, line: 50, baseType: !120, size: 32, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1467, file: !25, line: 51, baseType: !120, size: 32, offset: 96)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1467, file: !25, line: 52, baseType: !185, size: 64, offset: 128)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1467, file: !25, line: 53, baseType: !185, size: 64, offset: 192)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1236, file: !1237, line: 835, baseType: !1477, size: 32, offset: 5120)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !150, line: 22, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !334, line: 28, baseType: !120)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1236, file: !1237, line: 836, baseType: !1477, size: 32, offset: 5152)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1236, file: !1237, line: 840, baseType: !185, size: 64, offset: 5184)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1236, file: !1237, line: 849, baseType: !1235, size: 64, offset: 5248)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1236, file: !1237, line: 852, baseType: !1235, size: 64, offset: 5312)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1236, file: !1237, line: 857, baseType: !149, size: 128, offset: 5376)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1236, file: !1237, line: 858, baseType: !149, size: 128, offset: 5504)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1236, file: !1237, line: 859, baseType: !1235, size: 64, offset: 5632)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1236, file: !1237, line: 867, baseType: !149, size: 128, offset: 5696)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1236, file: !1237, line: 868, baseType: !149, size: 128, offset: 5824)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1236, file: !1237, line: 871, baseType: !1489, size: 64, offset: 5952)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495, !1497, !1498, !1505, !1506}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1490, file: !53, line: 61, baseType: !1249, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1490, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1490, file: !53, line: 63, baseType: !260, offset: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1490, file: !53, line: 65, baseType: !1496, size: 256, offset: 64)
!1496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !655, size: 256, elements: !190)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1490, file: !53, line: 66, baseType: !655, size: 64, offset: 320)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1490, file: !53, line: 68, baseType: !1499, size: 128, offset: 384)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1500, line: 40, baseType: !1501)
!1500 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1500, line: 36, size: 128, elements: !1502)
!1502 = !{!1503, !1504}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1501, file: !1500, line: 37, baseType: !260)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1501, file: !1500, line: 38, baseType: !149, size: 128)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1490, file: !53, line: 69, baseType: !390, size: 128, align: 64, offset: 512)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1490, file: !53, line: 70, baseType: !1507, size: 128, offset: 640)
!1507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1508, size: 128, elements: !1390)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1509)
!1509 = !{!1510, !1511}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1508, file: !53, line: 55, baseType: !120, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1508, file: !53, line: 56, baseType: !1512, size: 64, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1236, file: !1237, line: 872, baseType: !1515, size: 512, offset: 6016)
!1515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !659, size: 512, elements: !190)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1236, file: !1237, line: 873, baseType: !149, size: 128, offset: 6528)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1236, file: !1237, line: 874, baseType: !149, size: 128, offset: 6656)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1236, file: !1237, line: 876, baseType: !1519, size: 64, offset: 6784)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1521, line: 26, size: 192, elements: !1522)
!1521 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1522 = !{!1523, !1524}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1520, file: !1521, line: 27, baseType: !7, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1520, file: !1521, line: 28, baseType: !1525, size: 128, offset: 64)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1526, line: 43, size: 128, elements: !1527)
!1526 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1527 = !{!1528, !1529}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1525, file: !1526, line: 44, baseType: !801)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1525, file: !1526, line: 45, baseType: !149, size: 128)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1236, file: !1237, line: 879, baseType: !725, size: 64, offset: 6848)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1236, file: !1237, line: 882, baseType: !725, size: 64, offset: 6912)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1236, file: !1237, line: 884, baseType: !174, size: 64, offset: 6976)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1236, file: !1237, line: 885, baseType: !174, size: 64, offset: 7040)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1236, file: !1237, line: 890, baseType: !174, size: 64, offset: 7104)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1236, file: !1237, line: 891, baseType: !1536, size: 128, offset: 7168)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1237, line: 242, size: 128, elements: !1537)
!1537 = !{!1538, !1539, !1540}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1536, file: !1237, line: 244, baseType: !174, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1536, file: !1237, line: 245, baseType: !174, size: 64, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1536, file: !1237, line: 246, baseType: !801, offset: 128)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1236, file: !1237, line: 900, baseType: !185, size: 64, offset: 7296)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1236, file: !1237, line: 901, baseType: !185, size: 64, offset: 7360)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1236, file: !1237, line: 904, baseType: !174, size: 64, offset: 7424)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1236, file: !1237, line: 907, baseType: !174, size: 64, offset: 7488)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1236, file: !1237, line: 910, baseType: !185, size: 64, offset: 7552)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1236, file: !1237, line: 911, baseType: !185, size: 64, offset: 7616)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1236, file: !1237, line: 914, baseType: !1548, size: 640, offset: 7680)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1549, line: 123, size: 640, elements: !1550)
!1549 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1550 = !{!1551, !1557, !1558}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1548, file: !1549, line: 124, baseType: !1552, size: 576)
!1552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 576, elements: !302)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1549, line: 108, size: 192, elements: !1554)
!1554 = !{!1555, !1556}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1553, file: !1549, line: 109, baseType: !174, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1553, file: !1549, line: 110, baseType: !1362, size: 128, offset: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1548, file: !1549, line: 125, baseType: !7, size: 32, offset: 576)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1548, file: !1549, line: 126, baseType: !7, size: 32, offset: 608)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1236, file: !1237, line: 917, baseType: !1560, size: 192, offset: 8320)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1549, line: 134, size: 192, elements: !1561)
!1561 = !{!1562, !1563}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1560, file: !1549, line: 135, baseType: !390, size: 128, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1560, file: !1549, line: 136, baseType: !7, size: 32, offset: 128)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1236, file: !1237, line: 923, baseType: !1565, size: 64, offset: 8512)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1567)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1568, line: 111, size: 1280, elements: !1569)
!1568 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1569 = !{!1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1589, !1590, !1591, !1592, !1593, !1594, !1701, !1702, !1703, !1704, !1730, !1733, !1743}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1567, file: !1568, line: 112, baseType: !768, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1567, file: !1568, line: 120, baseType: !452, size: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1567, file: !1568, line: 121, baseType: !460, size: 32, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1567, file: !1568, line: 122, baseType: !452, size: 32, offset: 96)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1567, file: !1568, line: 123, baseType: !460, size: 32, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1567, file: !1568, line: 124, baseType: !452, size: 32, offset: 160)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1567, file: !1568, line: 125, baseType: !460, size: 32, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1567, file: !1568, line: 126, baseType: !452, size: 32, offset: 224)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1567, file: !1568, line: 127, baseType: !460, size: 32, offset: 256)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1567, file: !1568, line: 128, baseType: !7, size: 32, offset: 288)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1567, file: !1568, line: 129, baseType: !1581, size: 64, offset: 320)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1582, line: 26, baseType: !1583)
!1582 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1582, line: 24, size: 64, elements: !1584)
!1584 = !{!1585}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1583, file: !1582, line: 25, baseType: !1586, size: 64)
!1586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 64, elements: !1587)
!1587 = !{!1588}
!1588 = !DISubrange(count: 2)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1567, file: !1568, line: 130, baseType: !1581, size: 64, offset: 384)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1567, file: !1568, line: 131, baseType: !1581, size: 64, offset: 448)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1567, file: !1568, line: 132, baseType: !1581, size: 64, offset: 512)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1567, file: !1568, line: 133, baseType: !1581, size: 64, offset: 576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1567, file: !1568, line: 135, baseType: !230, size: 8, offset: 640)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1567, file: !1568, line: 137, baseType: !1595, size: 64, offset: 704)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1597, line: 189, size: 1664, elements: !1598)
!1597 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1598 = !{!1599, !1600, !1603, !1608, !1609, !1612, !1613, !1618, !1619, !1620, !1621, !1623, !1624, !1625, !1626, !1627, !1665, !1686}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1596, file: !1597, line: 190, baseType: !1249, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1596, file: !1597, line: 191, baseType: !1601, size: 32, offset: 32)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1597, line: 28, baseType: !1602)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !150, line: 98, baseType: !1462)
!1603 = !DIDerivedType(tag: DW_TAG_member, scope: !1596, file: !1597, line: 192, baseType: !1604, size: 192, offset: 64)
!1604 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1596, file: !1597, line: 192, size: 192, elements: !1605)
!1605 = !{!1606, !1607}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1604, file: !1597, line: 193, baseType: !149, size: 128)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1604, file: !1597, line: 194, baseType: !781, size: 192, align: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1596, file: !1597, line: 199, baseType: !788, size: 256, offset: 256)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1596, file: !1597, line: 200, baseType: !1610, size: 64, offset: 512)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1597, line: 200, flags: DIFlagFwdDecl)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1596, file: !1597, line: 201, baseType: !144, size: 64, offset: 576)
!1613 = !DIDerivedType(tag: DW_TAG_member, scope: !1596, file: !1597, line: 202, baseType: !1614, size: 64, offset: 640)
!1614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1596, file: !1597, line: 202, size: 64, elements: !1615)
!1615 = !{!1616, !1617}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1614, file: !1597, line: 203, baseType: !556, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1614, file: !1597, line: 204, baseType: !556, size: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1596, file: !1597, line: 206, baseType: !556, size: 64, offset: 704)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1596, file: !1597, line: 207, baseType: !452, size: 32, offset: 768)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1596, file: !1597, line: 208, baseType: !460, size: 32, offset: 800)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1596, file: !1597, line: 209, baseType: !1622, size: 32, offset: 832)
!1622 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1597, line: 31, baseType: !576)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1596, file: !1597, line: 210, baseType: !239, size: 16, offset: 864)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1596, file: !1597, line: 211, baseType: !239, size: 16, offset: 880)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1596, file: !1597, line: 215, baseType: !1224, size: 16, offset: 896)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1596, file: !1597, line: 222, baseType: !185, size: 64, offset: 960)
!1627 = !DIDerivedType(tag: DW_TAG_member, scope: !1596, file: !1597, line: 239, baseType: !1628, size: 320, offset: 1024)
!1628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1596, file: !1597, line: 239, size: 320, elements: !1629)
!1629 = !{!1630, !1657}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1628, file: !1597, line: 240, baseType: !1631, size: 320)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1597, line: 108, size: 320, elements: !1632)
!1632 = !{!1633, !1634, !1646, !1649, !1656}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1631, file: !1597, line: 110, baseType: !185, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, scope: !1631, file: !1597, line: 111, baseType: !1635, size: 64, offset: 64)
!1635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1631, file: !1597, line: 111, size: 64, elements: !1636)
!1636 = !{!1637, !1645}
!1637 = !DIDerivedType(tag: DW_TAG_member, scope: !1635, file: !1597, line: 112, baseType: !1638, size: 64)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1635, file: !1597, line: 112, size: 64, elements: !1639)
!1639 = !{!1640, !1641}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1638, file: !1597, line: 114, baseType: !880, size: 16)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1638, file: !1597, line: 115, baseType: !1642, size: 48, offset: 16)
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 48, elements: !1643)
!1643 = !{!1644}
!1644 = !DISubrange(count: 6)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1635, file: !1597, line: 121, baseType: !185, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1631, file: !1597, line: 123, baseType: !1647, size: 64, offset: 128)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1597, line: 96, flags: DIFlagFwdDecl)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1631, file: !1597, line: 124, baseType: !1650, size: 64, offset: 192)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1597, line: 102, size: 192, elements: !1652)
!1652 = !{!1653, !1654, !1655}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1651, file: !1597, line: 103, baseType: !390, size: 128, align: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1651, file: !1597, line: 104, baseType: !1249, size: 32, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1651, file: !1597, line: 105, baseType: !507, size: 8, offset: 160)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1631, file: !1597, line: 125, baseType: !181, size: 64, offset: 256)
!1657 = !DIDerivedType(tag: DW_TAG_member, scope: !1628, file: !1597, line: 241, baseType: !1658, size: 320)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1628, file: !1597, line: 241, size: 320, elements: !1659)
!1659 = !{!1660, !1661, !1662, !1663, !1664}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1658, file: !1597, line: 242, baseType: !185, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1658, file: !1597, line: 243, baseType: !185, size: 64, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1658, file: !1597, line: 244, baseType: !1647, size: 64, offset: 128)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1658, file: !1597, line: 245, baseType: !1650, size: 64, offset: 192)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1658, file: !1597, line: 246, baseType: !301, size: 64, offset: 256)
!1665 = !DIDerivedType(tag: DW_TAG_member, scope: !1596, file: !1597, line: 254, baseType: !1666, size: 256, offset: 1344)
!1666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1596, file: !1597, line: 254, size: 256, elements: !1667)
!1667 = !{!1668, !1674}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1666, file: !1597, line: 255, baseType: !1669, size: 256)
!1669 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1597, line: 128, size: 256, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1669, file: !1597, line: 129, baseType: !144, size: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1669, file: !1597, line: 130, baseType: !1673, size: 256)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !190)
!1674 = !DIDerivedType(tag: DW_TAG_member, scope: !1666, file: !1597, line: 256, baseType: !1675, size: 256)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1666, file: !1597, line: 256, size: 256, elements: !1676)
!1676 = !{!1677, !1678}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1675, file: !1597, line: 258, baseType: !149, size: 128)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1675, file: !1597, line: 259, baseType: !1679, size: 128, offset: 128)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1680, line: 22, size: 128, elements: !1681)
!1680 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1681 = !{!1682, !1685}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1679, file: !1680, line: 23, baseType: !1683, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1680, line: 23, flags: DIFlagFwdDecl)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1679, file: !1680, line: 24, baseType: !185, size: 64, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1596, file: !1597, line: 274, baseType: !1687, size: 64, offset: 1600)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1597, line: 170, size: 192, elements: !1689)
!1689 = !{!1690, !1699, !1700}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1688, file: !1597, line: 171, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1597, line: 165, baseType: !1692)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = !DISubroutineType(types: !1694)
!1694 = !{!120, !1595, !1695, !1697, !1595}
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1648)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1669)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1688, file: !1597, line: 172, baseType: !1595, size: 64, offset: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1688, file: !1597, line: 173, baseType: !1647, size: 64, offset: 128)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1567, file: !1568, line: 138, baseType: !1595, size: 64, offset: 768)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1567, file: !1568, line: 139, baseType: !1595, size: 64, offset: 832)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1567, file: !1568, line: 140, baseType: !1595, size: 64, offset: 896)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1567, file: !1568, line: 145, baseType: !1705, size: 64, offset: 960)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1707, line: 13, size: 896, elements: !1708)
!1707 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1708 = !{!1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1706, file: !1707, line: 14, baseType: !1249, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1706, file: !1707, line: 15, baseType: !768, size: 32, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1706, file: !1707, line: 16, baseType: !768, size: 32, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1706, file: !1707, line: 21, baseType: !792, size: 64, offset: 128)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1706, file: !1707, line: 27, baseType: !185, size: 64, offset: 192)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1706, file: !1707, line: 28, baseType: !185, size: 64, offset: 256)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1706, file: !1707, line: 29, baseType: !792, size: 64, offset: 320)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1706, file: !1707, line: 32, baseType: !659, size: 128, offset: 384)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1706, file: !1707, line: 33, baseType: !452, size: 32, offset: 512)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1706, file: !1707, line: 37, baseType: !792, size: 64, offset: 576)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1706, file: !1707, line: 44, baseType: !1720, size: 256, offset: 640)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1721, line: 15, size: 256, elements: !1722)
!1721 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1722 = !{!1723, !1724, !1725, !1726, !1727, !1728, !1729}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1720, file: !1721, line: 16, baseType: !801)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1720, file: !1721, line: 18, baseType: !120, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1720, file: !1721, line: 19, baseType: !120, size: 32, offset: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1720, file: !1721, line: 20, baseType: !120, size: 32, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1720, file: !1721, line: 21, baseType: !120, size: 32, offset: 96)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1720, file: !1721, line: 22, baseType: !185, size: 64, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1720, file: !1721, line: 23, baseType: !185, size: 64, offset: 192)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1567, file: !1568, line: 146, baseType: !1731, size: 64, offset: 1024)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !453, line: 18, flags: DIFlagFwdDecl)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1567, file: !1568, line: 147, baseType: !1734, size: 64, offset: 1088)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1568, line: 25, size: 64, elements: !1736)
!1736 = !{!1737, !1738, !1739}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1735, file: !1568, line: 26, baseType: !768, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1735, file: !1568, line: 27, baseType: !120, size: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1735, file: !1568, line: 28, baseType: !1740, offset: 64)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, elements: !1741)
!1741 = !{!1742}
!1742 = !DISubrange(count: 0)
!1743 = !DIDerivedType(tag: DW_TAG_member, scope: !1567, file: !1568, line: 149, baseType: !1744, size: 128, offset: 1152)
!1744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1567, file: !1568, line: 149, size: 128, elements: !1745)
!1745 = !{!1746, !1747}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1744, file: !1568, line: 150, baseType: !120, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1744, file: !1568, line: 151, baseType: !390, size: 128, align: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1236, file: !1237, line: 926, baseType: !1565, size: 64, offset: 8576)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1236, file: !1237, line: 929, baseType: !1565, size: 64, offset: 8640)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1236, file: !1237, line: 933, baseType: !1595, size: 64, offset: 8704)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1236, file: !1237, line: 943, baseType: !1752, size: 128, offset: 8768)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 128, elements: !1753)
!1753 = !{!1754}
!1754 = !DISubrange(count: 16)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1236, file: !1237, line: 945, baseType: !1756, size: 64, offset: 8896)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1237, line: 49, flags: DIFlagFwdDecl)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1236, file: !1237, line: 956, baseType: !1759, size: 64, offset: 8960)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1237, line: 45, flags: DIFlagFwdDecl)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1236, file: !1237, line: 959, baseType: !1762, size: 64, offset: 9024)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1237, line: 959, flags: DIFlagFwdDecl)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1236, file: !1237, line: 962, baseType: !1765, size: 64, offset: 9088)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1237, line: 66, flags: DIFlagFwdDecl)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1236, file: !1237, line: 966, baseType: !1768, size: 64, offset: 9152)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1770, line: 35, flags: DIFlagFwdDecl)
!1770 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1236, file: !1237, line: 969, baseType: !1772, size: 64, offset: 9216)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1774, line: 82, size: 7296, elements: !1775)
!1774 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1775 = !{!1776, !1777, !1778, !1779, !1780, !1781, !1782, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1811, !1820, !1821, !1823, !1824, !1825, !1828, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1858, !1859, !1866, !1867, !1868, !1869, !1870, !1871}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1773, file: !1774, line: 83, baseType: !1249, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1773, file: !1774, line: 84, baseType: !768, size: 32, offset: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1773, file: !1774, line: 85, baseType: !120, size: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1773, file: !1774, line: 86, baseType: !149, size: 128, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1773, file: !1774, line: 88, baseType: !1499, size: 128, offset: 256)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1773, file: !1774, line: 91, baseType: !1235, size: 64, offset: 384)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1773, file: !1774, line: 94, baseType: !1783, size: 192, offset: 448)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1784, line: 30, size: 192, elements: !1785)
!1784 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1785 = !{!1786, !1787}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1783, file: !1784, line: 31, baseType: !149, size: 128)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1783, file: !1784, line: 32, baseType: !1788, size: 64, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1789, line: 25, baseType: !1790)
!1789 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1789, line: 23, size: 64, elements: !1791)
!1791 = !{!1792}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1790, file: !1789, line: 24, baseType: !1389, size: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1773, file: !1774, line: 97, baseType: !655, size: 64, offset: 640)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1773, file: !1774, line: 100, baseType: !120, size: 32, offset: 704)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1773, file: !1774, line: 106, baseType: !120, size: 32, offset: 736)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1773, file: !1774, line: 107, baseType: !1235, size: 64, offset: 768)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1773, file: !1774, line: 110, baseType: !120, size: 32, offset: 832)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1773, file: !1774, line: 111, baseType: !7, size: 32, offset: 864)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1773, file: !1774, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1773, file: !1774, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1773, file: !1774, line: 128, baseType: !120, size: 32, offset: 928)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1773, file: !1774, line: 129, baseType: !149, size: 128, offset: 960)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1773, file: !1774, line: 132, baseType: !1311, size: 512, offset: 1088)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1773, file: !1774, line: 133, baseType: !1319, size: 64, offset: 1600)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1773, file: !1774, line: 140, baseType: !1806, size: 256, offset: 1664)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1807, size: 256, elements: !1587)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1774, line: 38, size: 128, elements: !1808)
!1808 = !{!1809, !1810}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1807, file: !1774, line: 39, baseType: !174, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1807, file: !1774, line: 40, baseType: !174, size: 64, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1773, file: !1774, line: 146, baseType: !1812, size: 192, offset: 1920)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1774, line: 66, size: 192, elements: !1813)
!1813 = !{!1814}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1812, file: !1774, line: 67, baseType: !1815, size: 192)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1774, line: 47, size: 192, elements: !1816)
!1816 = !{!1817, !1818, !1819}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1815, file: !1774, line: 48, baseType: !794, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1815, file: !1774, line: 49, baseType: !794, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1815, file: !1774, line: 50, baseType: !794, size: 64, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1773, file: !1774, line: 150, baseType: !1548, size: 640, offset: 2112)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1773, file: !1774, line: 153, baseType: !1822, size: 256, offset: 2752)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1489, size: 256, elements: !190)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1773, file: !1774, line: 159, baseType: !1489, size: 64, offset: 3008)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1773, file: !1774, line: 162, baseType: !120, size: 32, offset: 3072)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1773, file: !1774, line: 164, baseType: !1826, size: 64, offset: 3136)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1774, line: 164, flags: DIFlagFwdDecl)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1773, file: !1774, line: 175, baseType: !1829, size: 32, offset: 3200)
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !413, line: 805, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !413, line: 798, size: 32, elements: !1831)
!1831 = !{!1832, !1833}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1830, file: !413, line: 803, baseType: !412, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1830, file: !413, line: 804, baseType: !260, offset: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1773, file: !1774, line: 176, baseType: !174, size: 64, offset: 3264)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1773, file: !1774, line: 176, baseType: !174, size: 64, offset: 3328)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1773, file: !1774, line: 176, baseType: !174, size: 64, offset: 3392)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1773, file: !1774, line: 176, baseType: !174, size: 64, offset: 3456)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1773, file: !1774, line: 177, baseType: !174, size: 64, offset: 3520)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1773, file: !1774, line: 178, baseType: !174, size: 64, offset: 3584)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1773, file: !1774, line: 179, baseType: !1536, size: 128, offset: 3648)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1773, file: !1774, line: 180, baseType: !185, size: 64, offset: 3776)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1773, file: !1774, line: 180, baseType: !185, size: 64, offset: 3840)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1773, file: !1774, line: 180, baseType: !185, size: 64, offset: 3904)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1773, file: !1774, line: 180, baseType: !185, size: 64, offset: 3968)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1773, file: !1774, line: 181, baseType: !185, size: 64, offset: 4032)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1773, file: !1774, line: 181, baseType: !185, size: 64, offset: 4096)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1773, file: !1774, line: 181, baseType: !185, size: 64, offset: 4160)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1773, file: !1774, line: 181, baseType: !185, size: 64, offset: 4224)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1773, file: !1774, line: 182, baseType: !185, size: 64, offset: 4288)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1773, file: !1774, line: 182, baseType: !185, size: 64, offset: 4352)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1773, file: !1774, line: 182, baseType: !185, size: 64, offset: 4416)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1773, file: !1774, line: 182, baseType: !185, size: 64, offset: 4480)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1773, file: !1774, line: 183, baseType: !185, size: 64, offset: 4544)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1773, file: !1774, line: 183, baseType: !185, size: 64, offset: 4608)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1773, file: !1774, line: 184, baseType: !1856, offset: 4672)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1857, line: 12, elements: !274)
!1857 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1773, file: !1774, line: 192, baseType: !178, size: 64, offset: 4672)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1773, file: !1774, line: 203, baseType: !1860, size: 2048, offset: 4736)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1861, size: 2048, elements: !1753)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1862, line: 43, size: 128, elements: !1863)
!1862 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1861, file: !1862, line: 44, baseType: !349, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1861, file: !1862, line: 45, baseType: !349, size: 64, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1773, file: !1774, line: 220, baseType: !507, size: 8, offset: 6784)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1773, file: !1774, line: 221, baseType: !1224, size: 16, offset: 6800)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1773, file: !1774, line: 222, baseType: !1224, size: 16, offset: 6816)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1773, file: !1774, line: 224, baseType: !995, size: 64, offset: 6848)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1773, file: !1774, line: 227, baseType: !1192, size: 192, offset: 6912)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1773, file: !1774, line: 233, baseType: !1192, size: 192, offset: 7104)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1236, file: !1237, line: 970, baseType: !1873, size: 64, offset: 9280)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1774, line: 20, size: 16576, elements: !1875)
!1875 = !{!1876, !1877, !1878, !1879}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1874, file: !1774, line: 21, baseType: !260)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1874, file: !1774, line: 22, baseType: !1249, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1874, file: !1774, line: 23, baseType: !1499, size: 128, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1874, file: !1774, line: 24, baseType: !1880, size: 16384, offset: 192)
!1880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1881, size: 16384, elements: !306)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1784, line: 49, size: 256, elements: !1882)
!1882 = !{!1883}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1881, file: !1784, line: 50, baseType: !1884, size: 256)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1784, line: 35, size: 256, elements: !1885)
!1885 = !{!1886, !1893, !1894, !1900}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1884, file: !1784, line: 37, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1888, line: 19, baseType: !1889)
!1888 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1888, line: 18, baseType: !1891)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{null, !120}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1884, file: !1784, line: 38, baseType: !185, size: 64, offset: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1884, file: !1784, line: 44, baseType: !1895, size: 64, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1888, line: 22, baseType: !1896)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1888, line: 21, baseType: !1898)
!1898 = !DISubroutineType(types: !1899)
!1899 = !{null}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1884, file: !1784, line: 46, baseType: !1788, size: 64, offset: 192)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1236, file: !1237, line: 971, baseType: !1788, size: 64, offset: 9344)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1236, file: !1237, line: 972, baseType: !1788, size: 64, offset: 9408)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1236, file: !1237, line: 974, baseType: !1788, size: 64, offset: 9472)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1236, file: !1237, line: 975, baseType: !1783, size: 192, offset: 9536)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1236, file: !1237, line: 976, baseType: !185, size: 64, offset: 9728)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1236, file: !1237, line: 977, baseType: !347, size: 64, offset: 9792)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1236, file: !1237, line: 978, baseType: !7, size: 32, offset: 9856)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1236, file: !1237, line: 980, baseType: !393, size: 64, offset: 9920)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1236, file: !1237, line: 989, baseType: !1910, size: 128, offset: 9984)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1911, line: 35, size: 128, elements: !1912)
!1911 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1912 = !{!1913, !1914, !1915}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1910, file: !1911, line: 36, baseType: !120, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1910, file: !1911, line: 37, baseType: !768, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1910, file: !1911, line: 38, baseType: !1916, size: 64, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1911, line: 23, flags: DIFlagFwdDecl)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1236, file: !1237, line: 992, baseType: !174, size: 64, offset: 10112)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1236, file: !1237, line: 993, baseType: !174, size: 64, offset: 10176)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1236, file: !1237, line: 996, baseType: !260, offset: 10240)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1236, file: !1237, line: 999, baseType: !801, offset: 10240)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1236, file: !1237, line: 1001, baseType: !1923, size: 64, offset: 10240)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1237, line: 636, size: 64, elements: !1924)
!1924 = !{!1925}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1923, file: !1237, line: 637, baseType: !1926, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1236, file: !1237, line: 1005, baseType: !773, size: 128, offset: 10304)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1236, file: !1237, line: 1007, baseType: !1235, size: 64, offset: 10432)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1236, file: !1237, line: 1009, baseType: !1930, size: 64, offset: 10496)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1237, line: 1009, flags: DIFlagFwdDecl)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1236, file: !1237, line: 1043, baseType: !144, size: 64, offset: 10560)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1236, file: !1237, line: 1046, baseType: !1934, size: 64, offset: 10624)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1237, line: 41, flags: DIFlagFwdDecl)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1236, file: !1237, line: 1050, baseType: !1937, size: 64, offset: 10688)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1237, line: 42, flags: DIFlagFwdDecl)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1236, file: !1237, line: 1054, baseType: !1940, size: 64, offset: 10752)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1237, line: 55, flags: DIFlagFwdDecl)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1236, file: !1237, line: 1056, baseType: !1943, size: 64, offset: 10816)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1237, line: 40, flags: DIFlagFwdDecl)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1236, file: !1237, line: 1058, baseType: !1946, size: 64, offset: 10880)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1948, line: 99, size: 704, elements: !1949)
!1948 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1949 = !{!1950, !1951, !1952, !1953, !1954, !1955, !1956, !1975, !1976}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1947, file: !1948, line: 100, baseType: !792, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1947, file: !1948, line: 101, baseType: !768, size: 32, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1947, file: !1948, line: 102, baseType: !768, size: 32, offset: 96)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1947, file: !1948, line: 105, baseType: !260, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1947, file: !1948, line: 107, baseType: !239, size: 16, offset: 128)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1947, file: !1948, line: 109, baseType: !759, size: 128, offset: 192)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1947, file: !1948, line: 110, baseType: !1957, size: 64, offset: 320)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1948, line: 73, size: 448, elements: !1959)
!1959 = !{!1960, !1963, !1964, !1969, !1974}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1958, file: !1948, line: 74, baseType: !1961, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1948, line: 74, flags: DIFlagFwdDecl)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1958, file: !1948, line: 75, baseType: !1946, size: 64, offset: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, scope: !1958, file: !1948, line: 83, baseType: !1965, size: 128, offset: 128)
!1965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1958, file: !1948, line: 83, size: 128, elements: !1966)
!1966 = !{!1967, !1968}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1965, file: !1948, line: 84, baseType: !149, size: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1965, file: !1948, line: 85, baseType: !956, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, scope: !1958, file: !1948, line: 87, baseType: !1970, size: 128, offset: 256)
!1970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1958, file: !1948, line: 87, size: 128, elements: !1971)
!1971 = !{!1972, !1973}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1970, file: !1948, line: 88, baseType: !659, size: 128)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1970, file: !1948, line: 89, baseType: !390, size: 128, align: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1958, file: !1948, line: 92, baseType: !7, size: 32, offset: 384)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1947, file: !1948, line: 111, baseType: !655, size: 64, offset: 384)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1947, file: !1948, line: 113, baseType: !1977, size: 256, offset: 448)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1978, line: 102, size: 256, elements: !1979)
!1978 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1979 = !{!1980, !1981, !1982}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1977, file: !1978, line: 103, baseType: !792, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1977, file: !1978, line: 104, baseType: !149, size: 128, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1977, file: !1978, line: 105, baseType: !1983, size: 64, offset: 192)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1978, line: 21, baseType: !1984)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{null, !1987}
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1236, file: !1237, line: 1061, baseType: !1989, size: 64, offset: 10944)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1237, line: 43, flags: DIFlagFwdDecl)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1236, file: !1237, line: 1064, baseType: !185, size: 64, offset: 11008)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1236, file: !1237, line: 1065, baseType: !1993, size: 64, offset: 11072)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1784, line: 14, baseType: !1995)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1784, line: 12, size: 384, elements: !1996)
!1996 = !{!1997}
!1997 = !DIDerivedType(tag: DW_TAG_member, scope: !1995, file: !1784, line: 13, baseType: !1998, size: 384)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1995, file: !1784, line: 13, size: 384, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1998, file: !1784, line: 13, baseType: !120, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1998, file: !1784, line: 13, baseType: !120, size: 32, offset: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1998, file: !1784, line: 13, baseType: !120, size: 32, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1998, file: !1784, line: 13, baseType: !2004, size: 256, offset: 128)
!2004 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2005, line: 32, size: 256, elements: !2006)
!2005 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2006 = !{!2007, !2012, !2025, !2031, !2040, !2060, !2065}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2004, file: !2005, line: 37, baseType: !2008, size: 64)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 34, size: 64, elements: !2009)
!2009 = !{!2010, !2011}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2008, file: !2005, line: 35, baseType: !1478, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2008, file: !2005, line: 36, baseType: !458, size: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2004, file: !2005, line: 45, baseType: !2013, size: 192)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 40, size: 192, elements: !2014)
!2014 = !{!2015, !2017, !2018, !2024}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2013, file: !2005, line: 41, baseType: !2016, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !334, line: 95, baseType: !120)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2013, file: !2005, line: 42, baseType: !120, size: 32, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2013, file: !2005, line: 43, baseType: !2019, size: 64, offset: 64)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2005, line: 11, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2005, line: 8, size: 64, elements: !2021)
!2021 = !{!2022, !2023}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2020, file: !2005, line: 9, baseType: !120, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2020, file: !2005, line: 10, baseType: !144, size: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2013, file: !2005, line: 44, baseType: !120, size: 32, offset: 128)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2004, file: !2005, line: 52, baseType: !2026, size: 128)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 48, size: 128, elements: !2027)
!2027 = !{!2028, !2029, !2030}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2026, file: !2005, line: 49, baseType: !1478, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2026, file: !2005, line: 50, baseType: !458, size: 32, offset: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2026, file: !2005, line: 51, baseType: !2019, size: 64, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2004, file: !2005, line: 61, baseType: !2032, size: 256)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 55, size: 256, elements: !2033)
!2033 = !{!2034, !2035, !2036, !2037, !2039}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2032, file: !2005, line: 56, baseType: !1478, size: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2032, file: !2005, line: 57, baseType: !458, size: 32, offset: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2032, file: !2005, line: 58, baseType: !120, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2032, file: !2005, line: 59, baseType: !2038, size: 64, offset: 128)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !334, line: 94, baseType: !335)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2032, file: !2005, line: 60, baseType: !2038, size: 64, offset: 192)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2004, file: !2005, line: 95, baseType: !2041, size: 256)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 64, size: 256, elements: !2042)
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2041, file: !2005, line: 65, baseType: !144, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2041, file: !2005, line: 77, baseType: !2045, size: 192, offset: 64)
!2045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2041, file: !2005, line: 77, size: 192, elements: !2046)
!2046 = !{!2047, !2048, !2055}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2045, file: !2005, line: 82, baseType: !1224, size: 16)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2045, file: !2005, line: 88, baseType: !2049, size: 192)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2045, file: !2005, line: 84, size: 192, elements: !2050)
!2050 = !{!2051, !2053, !2054}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2049, file: !2005, line: 85, baseType: !2052, size: 64)
!2052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 64, elements: !1349)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2049, file: !2005, line: 86, baseType: !144, size: 64, offset: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2049, file: !2005, line: 87, baseType: !144, size: 64, offset: 128)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2045, file: !2005, line: 93, baseType: !2056, size: 96)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2045, file: !2005, line: 90, size: 96, elements: !2057)
!2057 = !{!2058, !2059}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2056, file: !2005, line: 91, baseType: !2052, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2056, file: !2005, line: 92, baseType: !216, size: 32, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2004, file: !2005, line: 101, baseType: !2061, size: 128)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 98, size: 128, elements: !2062)
!2062 = !{!2063, !2064}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2061, file: !2005, line: 99, baseType: !336, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2061, file: !2005, line: 100, baseType: !120, size: 32, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2004, file: !2005, line: 108, baseType: !2066, size: 128)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 104, size: 128, elements: !2067)
!2067 = !{!2068, !2069, !2070}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2066, file: !2005, line: 105, baseType: !144, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2066, file: !2005, line: 106, baseType: !120, size: 32, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2066, file: !2005, line: 107, baseType: !7, size: 32, offset: 96)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1236, file: !1237, line: 1067, baseType: !1856, offset: 11136)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1236, file: !1237, line: 1099, baseType: !2073, size: 64, offset: 11136)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1237, line: 56, flags: DIFlagFwdDecl)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1236, file: !1237, line: 1103, baseType: !149, size: 128, offset: 11200)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1236, file: !1237, line: 1104, baseType: !2077, size: 64, offset: 11328)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1237, line: 46, flags: DIFlagFwdDecl)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1236, file: !1237, line: 1105, baseType: !1192, size: 192, offset: 11392)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1236, file: !1237, line: 1106, baseType: !7, size: 32, offset: 11584)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1236, file: !1237, line: 1109, baseType: !2082, size: 128, offset: 11648)
!2082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2083, size: 128, elements: !1587)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1237, line: 51, flags: DIFlagFwdDecl)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1236, file: !1237, line: 1110, baseType: !1192, size: 192, offset: 11776)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1236, file: !1237, line: 1111, baseType: !149, size: 128, offset: 11968)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1236, file: !1237, line: 1173, baseType: !2088, size: 64, offset: 12096)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2090, line: 62, size: 256, align: 256, elements: !2091)
!2090 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2091 = !{!2092, !2093, !2094, !2099}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2089, file: !2090, line: 75, baseType: !216, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2089, file: !2090, line: 90, baseType: !216, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2089, file: !2090, line: 124, baseType: !2095, size: 64, offset: 64)
!2095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2089, file: !2090, line: 109, size: 64, elements: !2096)
!2096 = !{!2097, !2098}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2095, file: !2090, line: 110, baseType: !176, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2095, file: !2090, line: 112, baseType: !176, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2089, file: !2090, line: 144, baseType: !216, size: 32, offset: 128)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1236, file: !1237, line: 1174, baseType: !215, size: 32, offset: 12160)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1236, file: !1237, line: 1179, baseType: !185, size: 64, offset: 12224)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1236, file: !1237, line: 1182, baseType: !2103, size: 128, offset: 12288)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1172, line: 76, size: 128, elements: !2104)
!2104 = !{!2105, !2110, !2111}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2103, file: !1172, line: 85, baseType: !2106, size: 64)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2107, line: 7, size: 64, elements: !2108)
!2107 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2108 = !{!2109}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2106, file: !2107, line: 12, baseType: !1386, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2103, file: !1172, line: 88, baseType: !507, size: 8, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2103, file: !1172, line: 95, baseType: !507, size: 8, offset: 72)
!2112 = !DIDerivedType(tag: DW_TAG_member, scope: !1236, file: !1237, line: 1184, baseType: !2113, size: 128, offset: 12416)
!2113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1236, file: !1237, line: 1184, size: 128, elements: !2114)
!2114 = !{!2115, !2116}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2113, file: !1237, line: 1185, baseType: !1249, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2113, file: !1237, line: 1186, baseType: !390, size: 128, align: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1236, file: !1237, line: 1190, baseType: !2118, size: 64, offset: 12544)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2119 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1237, line: 53, flags: DIFlagFwdDecl)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1236, file: !1237, line: 1192, baseType: !2121, size: 128, offset: 12608)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1172, line: 64, size: 128, elements: !2122)
!2122 = !{!2123, !2124, !2125}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2121, file: !1172, line: 65, baseType: !741, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2121, file: !1172, line: 67, baseType: !216, size: 32, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2121, file: !1172, line: 68, baseType: !216, size: 32, offset: 96)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1236, file: !1237, line: 1206, baseType: !120, size: 32, offset: 12736)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1236, file: !1237, line: 1207, baseType: !120, size: 32, offset: 12768)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1236, file: !1237, line: 1209, baseType: !185, size: 64, offset: 12800)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1236, file: !1237, line: 1219, baseType: !174, size: 64, offset: 12864)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1236, file: !1237, line: 1220, baseType: !174, size: 64, offset: 12928)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1236, file: !1237, line: 1317, baseType: !120, size: 32, offset: 12992)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1236, file: !1237, line: 1319, baseType: !1235, size: 64, offset: 13056)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1236, file: !1237, line: 1322, baseType: !2134, size: 64, offset: 13120)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 64)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2136, line: 56, size: 512, elements: !2137)
!2136 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2137 = !{!2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2135, file: !2136, line: 57, baseType: !2134, size: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2135, file: !2136, line: 58, baseType: !144, size: 64, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2135, file: !2136, line: 59, baseType: !185, size: 64, offset: 128)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2135, file: !2136, line: 60, baseType: !185, size: 64, offset: 192)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2135, file: !2136, line: 61, baseType: !841, size: 64, offset: 256)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2135, file: !2136, line: 62, baseType: !7, size: 32, offset: 320)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2135, file: !2136, line: 63, baseType: !173, size: 64, offset: 384)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2135, file: !2136, line: 64, baseType: !2146, size: 64, offset: 448)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1236, file: !1237, line: 1326, baseType: !1249, size: 32, offset: 13184)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1236, file: !1237, line: 1342, baseType: !144, size: 64, offset: 13248)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1236, file: !1237, line: 1343, baseType: !176, size: 64, offset: 13312)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1236, file: !1237, line: 1344, baseType: !174, size: 64, offset: 13376)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1236, file: !1237, line: 1345, baseType: !176, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1236, file: !1237, line: 1346, baseType: !176, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1236, file: !1237, line: 1347, baseType: !176, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1236, file: !1237, line: 1348, baseType: !390, size: 128, align: 64, offset: 13504)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1236, file: !1237, line: 1358, baseType: !2157, size: 34816, offset: 13824)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2158, line: 485, size: 34816, elements: !2159)
!2158 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2159 = !{!2160, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2189, !2190, !2191, !2192, !2193, !2194, !2197, !2198, !2199}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2157, file: !2158, line: 487, baseType: !2161, size: 192)
!2161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2162, size: 192, elements: !302)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2163, line: 16, size: 64, elements: !2164)
!2163 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2164 = !{!2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2162, file: !2163, line: 17, baseType: !880, size: 16)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2162, file: !2163, line: 18, baseType: !880, size: 16, offset: 16)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2162, file: !2163, line: 19, baseType: !880, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2162, file: !2163, line: 19, baseType: !880, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2162, file: !2163, line: 19, baseType: !880, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2162, file: !2163, line: 19, baseType: !880, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2162, file: !2163, line: 19, baseType: !880, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2162, file: !2163, line: 20, baseType: !880, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2162, file: !2163, line: 20, baseType: !880, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2162, file: !2163, line: 20, baseType: !880, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2162, file: !2163, line: 20, baseType: !880, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2162, file: !2163, line: 20, baseType: !880, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2162, file: !2163, line: 20, baseType: !880, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2157, file: !2158, line: 491, baseType: !185, size: 64, offset: 192)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2157, file: !2158, line: 495, baseType: !239, size: 16, offset: 256)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2157, file: !2158, line: 496, baseType: !239, size: 16, offset: 272)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2157, file: !2158, line: 497, baseType: !239, size: 16, offset: 288)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2157, file: !2158, line: 498, baseType: !239, size: 16, offset: 304)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2157, file: !2158, line: 502, baseType: !185, size: 64, offset: 320)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2157, file: !2158, line: 503, baseType: !185, size: 64, offset: 384)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2157, file: !2158, line: 514, baseType: !2186, size: 256, offset: 448)
!2186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2187, size: 256, elements: !190)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2158, line: 483, flags: DIFlagFwdDecl)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2157, file: !2158, line: 516, baseType: !185, size: 64, offset: 704)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2157, file: !2158, line: 518, baseType: !185, size: 64, offset: 768)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2157, file: !2158, line: 520, baseType: !185, size: 64, offset: 832)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2157, file: !2158, line: 521, baseType: !185, size: 64, offset: 896)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2157, file: !2158, line: 522, baseType: !185, size: 64, offset: 960)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2157, file: !2158, line: 528, baseType: !2195, size: 64, offset: 1024)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2158, line: 10, flags: DIFlagFwdDecl)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2157, file: !2158, line: 535, baseType: !185, size: 64, offset: 1088)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2157, file: !2158, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2157, file: !2158, line: 540, baseType: !2200, size: 33280, offset: 1536)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2201, line: 317, size: 33280, elements: !2202)
!2201 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2202 = !{!2203, !2204, !2205}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2200, file: !2201, line: 330, baseType: !7, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2200, file: !2201, line: 337, baseType: !185, size: 64, offset: 64)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2200, file: !2201, line: 348, baseType: !2206, size: 32768, offset: 512)
!2206 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2201, line: 304, size: 32768, elements: !2207)
!2207 = !{!2208, !2223, !2262, !2312, !2325}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2206, file: !2201, line: 305, baseType: !2209, size: 896)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2201, line: 12, size: 896, elements: !2210)
!2210 = !{!2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2222}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2209, file: !2201, line: 13, baseType: !215, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2209, file: !2201, line: 14, baseType: !215, size: 32, offset: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2209, file: !2201, line: 15, baseType: !215, size: 32, offset: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2209, file: !2201, line: 16, baseType: !215, size: 32, offset: 96)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2209, file: !2201, line: 17, baseType: !215, size: 32, offset: 128)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2209, file: !2201, line: 18, baseType: !215, size: 32, offset: 160)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2209, file: !2201, line: 19, baseType: !215, size: 32, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2209, file: !2201, line: 22, baseType: !2219, size: 640, offset: 224)
!2219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 640, elements: !2220)
!2220 = !{!2221}
!2221 = !DISubrange(count: 20)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2209, file: !2201, line: 25, baseType: !215, size: 32, offset: 864)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2206, file: !2201, line: 306, baseType: !2224, size: 4096, align: 128)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2201, line: 34, size: 4096, align: 128, elements: !2225)
!2225 = !{!2226, !2227, !2228, !2229, !2230, !2245, !2246, !2247, !2251, !2253, !2257}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2224, file: !2201, line: 35, baseType: !880, size: 16)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2224, file: !2201, line: 36, baseType: !880, size: 16, offset: 16)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2224, file: !2201, line: 37, baseType: !880, size: 16, offset: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2224, file: !2201, line: 38, baseType: !880, size: 16, offset: 48)
!2230 = !DIDerivedType(tag: DW_TAG_member, scope: !2224, file: !2201, line: 39, baseType: !2231, size: 128, offset: 64)
!2231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2224, file: !2201, line: 39, size: 128, elements: !2232)
!2232 = !{!2233, !2238}
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2231, file: !2201, line: 40, baseType: !2234, size: 128)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2231, file: !2201, line: 40, size: 128, elements: !2235)
!2235 = !{!2236, !2237}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2234, file: !2201, line: 41, baseType: !174, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2234, file: !2201, line: 42, baseType: !174, size: 64, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, scope: !2231, file: !2201, line: 44, baseType: !2239, size: 128)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2231, file: !2201, line: 44, size: 128, elements: !2240)
!2240 = !{!2241, !2242, !2243, !2244}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2239, file: !2201, line: 45, baseType: !215, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2239, file: !2201, line: 46, baseType: !215, size: 32, offset: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2239, file: !2201, line: 47, baseType: !215, size: 32, offset: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2239, file: !2201, line: 48, baseType: !215, size: 32, offset: 96)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2224, file: !2201, line: 51, baseType: !215, size: 32, offset: 192)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2224, file: !2201, line: 52, baseType: !215, size: 32, offset: 224)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2224, file: !2201, line: 55, baseType: !2248, size: 1024, offset: 256)
!2248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 1024, elements: !2249)
!2249 = !{!2250}
!2250 = !DISubrange(count: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2224, file: !2201, line: 58, baseType: !2252, size: 2048, offset: 1280)
!2252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 2048, elements: !306)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2224, file: !2201, line: 60, baseType: !2254, size: 384, offset: 3328)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 384, elements: !2255)
!2255 = !{!2256}
!2256 = !DISubrange(count: 12)
!2257 = !DIDerivedType(tag: DW_TAG_member, scope: !2224, file: !2201, line: 62, baseType: !2258, size: 384, offset: 3712)
!2258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2224, file: !2201, line: 62, size: 384, elements: !2259)
!2259 = !{!2260, !2261}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2258, file: !2201, line: 63, baseType: !2254, size: 384)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2258, file: !2201, line: 64, baseType: !2254, size: 384)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2206, file: !2201, line: 307, baseType: !2263, size: 1088)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2201, line: 79, size: 1088, elements: !2264)
!2264 = !{!2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2311}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2263, file: !2201, line: 80, baseType: !215, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2263, file: !2201, line: 81, baseType: !215, size: 32, offset: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2263, file: !2201, line: 82, baseType: !215, size: 32, offset: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2263, file: !2201, line: 83, baseType: !215, size: 32, offset: 96)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2263, file: !2201, line: 84, baseType: !215, size: 32, offset: 128)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2263, file: !2201, line: 85, baseType: !215, size: 32, offset: 160)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2263, file: !2201, line: 86, baseType: !215, size: 32, offset: 192)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2263, file: !2201, line: 88, baseType: !2219, size: 640, offset: 224)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2263, file: !2201, line: 89, baseType: !1371, size: 8, offset: 864)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2263, file: !2201, line: 90, baseType: !1371, size: 8, offset: 872)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2263, file: !2201, line: 91, baseType: !1371, size: 8, offset: 880)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2263, file: !2201, line: 92, baseType: !1371, size: 8, offset: 888)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2263, file: !2201, line: 93, baseType: !1371, size: 8, offset: 896)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2263, file: !2201, line: 94, baseType: !1371, size: 8, offset: 904)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2263, file: !2201, line: 95, baseType: !2280, size: 64, offset: 960)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2282, line: 11, size: 128, elements: !2283)
!2282 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2283 = !{!2284, !2285}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2281, file: !2282, line: 12, baseType: !336, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2281, file: !2282, line: 13, baseType: !2286, size: 64, offset: 64)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2288, line: 56, size: 1344, elements: !2289)
!2288 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2289 = !{!2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2287, file: !2288, line: 61, baseType: !185, size: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2287, file: !2288, line: 62, baseType: !185, size: 64, offset: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2287, file: !2288, line: 63, baseType: !185, size: 64, offset: 128)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2287, file: !2288, line: 64, baseType: !185, size: 64, offset: 192)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2287, file: !2288, line: 65, baseType: !185, size: 64, offset: 256)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2287, file: !2288, line: 66, baseType: !185, size: 64, offset: 320)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2287, file: !2288, line: 68, baseType: !185, size: 64, offset: 384)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2287, file: !2288, line: 69, baseType: !185, size: 64, offset: 448)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2287, file: !2288, line: 70, baseType: !185, size: 64, offset: 512)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2287, file: !2288, line: 71, baseType: !185, size: 64, offset: 576)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2287, file: !2288, line: 72, baseType: !185, size: 64, offset: 640)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2287, file: !2288, line: 73, baseType: !185, size: 64, offset: 704)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2287, file: !2288, line: 74, baseType: !185, size: 64, offset: 768)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2287, file: !2288, line: 75, baseType: !185, size: 64, offset: 832)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2287, file: !2288, line: 76, baseType: !185, size: 64, offset: 896)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2287, file: !2288, line: 81, baseType: !185, size: 64, offset: 960)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2287, file: !2288, line: 83, baseType: !185, size: 64, offset: 1024)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2287, file: !2288, line: 84, baseType: !185, size: 64, offset: 1088)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2287, file: !2288, line: 85, baseType: !185, size: 64, offset: 1152)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2287, file: !2288, line: 86, baseType: !185, size: 64, offset: 1216)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2287, file: !2288, line: 87, baseType: !185, size: 64, offset: 1280)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2263, file: !2201, line: 96, baseType: !215, size: 32, offset: 1024)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2206, file: !2201, line: 308, baseType: !2313, size: 4608, align: 512)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2201, line: 289, size: 4608, align: 512, elements: !2314)
!2314 = !{!2315, !2316, !2323}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2313, file: !2201, line: 290, baseType: !2224, size: 4096, align: 128)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2313, file: !2201, line: 291, baseType: !2317, size: 512, offset: 4096)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2201, line: 268, size: 512, elements: !2318)
!2318 = !{!2319, !2320, !2321}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2317, file: !2201, line: 269, baseType: !174, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2317, file: !2201, line: 270, baseType: !174, size: 64, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2317, file: !2201, line: 271, baseType: !2322, size: 384, offset: 128)
!2322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 384, elements: !1643)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2313, file: !2201, line: 292, baseType: !2324, offset: 4608)
!2324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1371, elements: !1741)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2206, file: !2201, line: 309, baseType: !2326, size: 32768)
!2326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1371, size: 32768, elements: !2327)
!2327 = !{!2328}
!2328 = !DISubrange(count: 4096)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1232, file: !743, line: 378, baseType: !2330, size: 64, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1228, file: !743, line: 384, baseType: !1520, size: 192, offset: 192)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !999, file: !743, line: 500, baseType: !260, offset: 6656)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !999, file: !743, line: 501, baseType: !2334, size: 64, offset: 6656)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !743, line: 387, flags: DIFlagFwdDecl)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !999, file: !743, line: 516, baseType: !1731, size: 64, offset: 6720)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !999, file: !743, line: 519, baseType: !377, size: 64, offset: 6784)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !999, file: !743, line: 521, baseType: !2339, size: 64, offset: 6848)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 64)
!2340 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !743, line: 521, flags: DIFlagFwdDecl)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !999, file: !743, line: 545, baseType: !768, size: 32, offset: 6912)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !999, file: !743, line: 548, baseType: !507, size: 8, offset: 6944)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !999, file: !743, line: 550, baseType: !2344, offset: 6952)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2345, line: 142, elements: !274)
!2345 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !999, file: !743, line: 554, baseType: !1977, size: 256, offset: 6976)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !999, file: !743, line: 557, baseType: !215, size: 32, offset: 7232)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !996, file: !743, line: 565, baseType: !2349, offset: 7296)
!2349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, elements: !2350)
!2350 = !{!2351}
!2351 = !DISubrange(count: -1)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !992, file: !743, line: 151, baseType: !768, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !985, file: !743, line: 156, baseType: !260, offset: 256)
!2354 = !DIDerivedType(tag: DW_TAG_member, scope: !747, file: !743, line: 159, baseType: !2355, size: 128)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !747, file: !743, line: 159, size: 128, elements: !2356)
!2356 = !{!2357, !2421}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2355, file: !743, line: 161, baseType: !2358, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 64)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2360)
!2360 = !{!2361, !2371, !2392, !2393, !2394, !2395, !2396, !2408, !2409, !2410}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2359, file: !31, line: 111, baseType: !2362, size: 384)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2363)
!2363 = !{!2364, !2366, !2367, !2368, !2369, !2370}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2362, file: !31, line: 20, baseType: !2365, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2362, file: !31, line: 21, baseType: !2365, size: 64, offset: 64)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2362, file: !31, line: 22, baseType: !2365, size: 64, offset: 128)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2362, file: !31, line: 23, baseType: !185, size: 64, offset: 192)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2362, file: !31, line: 24, baseType: !185, size: 64, offset: 256)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2362, file: !31, line: 25, baseType: !185, size: 64, offset: 320)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2359, file: !31, line: 112, baseType: !2372, size: 64, offset: 384)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 64)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2374, line: 105, size: 128, elements: !2375)
!2374 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2375 = !{!2376, !2377}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2373, file: !2374, line: 110, baseType: !185, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2373, file: !2374, line: 118, baseType: !2378, size: 64, offset: 64)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2374, line: 95, size: 448, elements: !2380)
!2380 = !{!2381, !2382, !2387, !2388, !2389, !2390, !2391}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2379, file: !2374, line: 96, baseType: !792, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2379, file: !2374, line: 97, baseType: !2383, size: 64, offset: 64)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2374, line: 60, baseType: !2385)
!2385 = !DISubroutineType(types: !2386)
!2386 = !{null, !2372}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2379, file: !2374, line: 98, baseType: !2383, size: 64, offset: 128)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2379, file: !2374, line: 99, baseType: !507, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2379, file: !2374, line: 100, baseType: !507, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2379, file: !2374, line: 101, baseType: !390, size: 128, align: 64, offset: 256)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2379, file: !2374, line: 102, baseType: !2372, size: 64, offset: 384)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2359, file: !31, line: 113, baseType: !2373, size: 128, offset: 448)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2359, file: !31, line: 114, baseType: !1520, size: 192, offset: 576)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2359, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2359, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2359, file: !31, line: 117, baseType: !2397, size: 64, offset: 832)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2399)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2400)
!2400 = !{!2401, !2402, !2406, !2407}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2399, file: !31, line: 73, baseType: !861, size: 64)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2399, file: !31, line: 78, baseType: !2403, size: 64, offset: 64)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2404 = !DISubroutineType(types: !2405)
!2405 = !{null, !2358}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2399, file: !31, line: 83, baseType: !2403, size: 64, offset: 128)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2399, file: !31, line: 89, baseType: !1048, size: 64, offset: 192)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2359, file: !31, line: 118, baseType: !144, size: 64, offset: 896)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2359, file: !31, line: 119, baseType: !120, size: 32, offset: 960)
!2410 = !DIDerivedType(tag: DW_TAG_member, scope: !2359, file: !31, line: 120, baseType: !2411, size: 128, offset: 1024)
!2411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2359, file: !31, line: 120, size: 128, elements: !2412)
!2412 = !{!2413, !2419}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2411, file: !31, line: 121, baseType: !2414, size: 128)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2415, line: 6, size: 128, elements: !2416)
!2415 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2416 = !{!2417, !2418}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2414, file: !2415, line: 7, baseType: !174, size: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2414, file: !2415, line: 8, baseType: !174, size: 64, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2411, file: !31, line: 122, baseType: !2420)
!2420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2414, elements: !1741)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2355, file: !743, line: 162, baseType: !144, size: 64, offset: 64)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !747, file: !743, line: 176, baseType: !390, size: 128, align: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, scope: !742, file: !743, line: 179, baseType: !2424, size: 32, offset: 384)
!2424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !742, file: !743, line: 179, size: 32, elements: !2425)
!2425 = !{!2426, !2427, !2428, !2429}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2424, file: !743, line: 184, baseType: !768, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2424, file: !743, line: 192, baseType: !7, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2424, file: !743, line: 194, baseType: !7, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2424, file: !743, line: 195, baseType: !120, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !742, file: !743, line: 199, baseType: !768, size: 32, offset: 416)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !677, file: !44, line: 1964, baseType: !2432, size: 64, offset: 1344)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2433 = !DISubroutineType(types: !2434)
!2434 = !{!336, !616, !2435}
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2437, line: 12, size: 256, elements: !2438)
!2437 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2438 = !{!2439, !2440, !2441, !2442, !2443}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2436, file: !2437, line: 13, baseType: !764, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2436, file: !2437, line: 16, baseType: !120, size: 32, offset: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2436, file: !2437, line: 23, baseType: !185, size: 64, offset: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2436, file: !2437, line: 30, baseType: !185, size: 64, offset: 128)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2436, file: !2437, line: 33, baseType: !2444, size: 64, offset: 192)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !743, line: 27, flags: DIFlagFwdDecl)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !677, file: !44, line: 1966, baseType: !2432, size: 64, offset: 1408)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !617, file: !44, line: 1424, baseType: !2448, size: 64, offset: 448)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2450)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2451)
!2451 = !{!2452, !2498, !2502, !2506, !2507, !2508, !2509, !2510, !2515, !2520, !2524}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2450, file: !38, line: 323, baseType: !2453, size: 64)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = !DISubroutineType(types: !2455)
!2455 = !{!120, !2456}
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2458)
!2458 = !{!2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2483, !2484, !2485}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2457, file: !38, line: 295, baseType: !659, size: 128)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2457, file: !38, line: 296, baseType: !149, size: 128, offset: 128)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2457, file: !38, line: 297, baseType: !149, size: 128, offset: 256)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2457, file: !38, line: 298, baseType: !149, size: 128, offset: 384)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2457, file: !38, line: 299, baseType: !1192, size: 192, offset: 512)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2457, file: !38, line: 300, baseType: !260, offset: 704)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2457, file: !38, line: 301, baseType: !768, size: 32, offset: 704)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2457, file: !38, line: 302, baseType: !616, size: 64, offset: 768)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2457, file: !38, line: 303, baseType: !2468, size: 64, offset: 832)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2469)
!2469 = !{!2470, !2482}
!2470 = !DIDerivedType(tag: DW_TAG_member, scope: !2468, file: !38, line: 69, baseType: !2471, size: 32)
!2471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2468, file: !38, line: 69, size: 32, elements: !2472)
!2472 = !{!2473, !2474, !2475}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2471, file: !38, line: 70, baseType: !452, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2471, file: !38, line: 71, baseType: !460, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2471, file: !38, line: 72, baseType: !2476, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2477, line: 24, baseType: !2478)
!2477 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2477, line: 22, size: 32, elements: !2479)
!2479 = !{!2480}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2478, file: !2477, line: 23, baseType: !2481, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2477, line: 20, baseType: !458)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2468, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2457, file: !38, line: 304, baseType: !548, size: 64, offset: 896)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2457, file: !38, line: 305, baseType: !185, size: 64, offset: 960)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2457, file: !38, line: 306, baseType: !2486, size: 576, offset: 1024)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2487)
!2487 = !{!2488, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2486, file: !38, line: 206, baseType: !2489, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !550)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2486, file: !38, line: 207, baseType: !2489, size: 64, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2486, file: !38, line: 208, baseType: !2489, size: 64, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2486, file: !38, line: 209, baseType: !2489, size: 64, offset: 192)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2486, file: !38, line: 210, baseType: !2489, size: 64, offset: 256)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2486, file: !38, line: 211, baseType: !2489, size: 64, offset: 320)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2486, file: !38, line: 212, baseType: !2489, size: 64, offset: 384)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2486, file: !38, line: 213, baseType: !556, size: 64, offset: 448)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2486, file: !38, line: 214, baseType: !556, size: 64, offset: 512)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2450, file: !38, line: 324, baseType: !2499, size: 64, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{!2456, !616, !120}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2450, file: !38, line: 325, baseType: !2503, size: 64, offset: 128)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2504 = !DISubroutineType(types: !2505)
!2505 = !{null, !2456}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2450, file: !38, line: 326, baseType: !2453, size: 64, offset: 192)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2450, file: !38, line: 327, baseType: !2453, size: 64, offset: 256)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2450, file: !38, line: 328, baseType: !2453, size: 64, offset: 320)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2450, file: !38, line: 329, baseType: !705, size: 64, offset: 384)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2450, file: !38, line: 332, baseType: !2511, size: 64, offset: 448)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64)
!2512 = !DISubroutineType(types: !2513)
!2513 = !{!2514, !446}
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2450, file: !38, line: 333, baseType: !2516, size: 64, offset: 512)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{!120, !446, !2519}
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2450, file: !38, line: 335, baseType: !2521, size: 64, offset: 576)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = !DISubroutineType(types: !2523)
!2523 = !{!120, !446, !2514}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2450, file: !38, line: 337, baseType: !2525, size: 64, offset: 640)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 64)
!2526 = !DISubroutineType(types: !2527)
!2527 = !{!120, !616, !2528}
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !617, file: !44, line: 1425, baseType: !2530, size: 64, offset: 512)
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2532)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2533)
!2533 = !{!2534, !2538, !2539, !2543, !2544, !2545, !2560, !2583, !2587, !2588, !2611}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2532, file: !38, line: 429, baseType: !2535, size: 64)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{!120, !616, !120, !120, !566}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2532, file: !38, line: 430, baseType: !705, size: 64, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2532, file: !38, line: 431, baseType: !2540, size: 64, offset: 128)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{!120, !616, !7}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2532, file: !38, line: 432, baseType: !2540, size: 64, offset: 192)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2532, file: !38, line: 433, baseType: !705, size: 64, offset: 256)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2532, file: !38, line: 434, baseType: !2546, size: 64, offset: 320)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = !DISubroutineType(types: !2548)
!2548 = !{!120, !616, !120, !2549}
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 64)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2551)
!2551 = !{!2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2550, file: !38, line: 416, baseType: !120, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2550, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2550, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2550, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2550, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2550, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2550, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2550, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2532, file: !38, line: 435, baseType: !2561, size: 64, offset: 384)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!2562 = !DISubroutineType(types: !2563)
!2563 = !{!120, !616, !2468, !2564}
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 64)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2566)
!2566 = !{!2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2565, file: !38, line: 344, baseType: !120, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2565, file: !38, line: 345, baseType: !174, size: 64, offset: 64)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2565, file: !38, line: 346, baseType: !174, size: 64, offset: 128)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2565, file: !38, line: 347, baseType: !174, size: 64, offset: 192)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2565, file: !38, line: 348, baseType: !174, size: 64, offset: 256)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2565, file: !38, line: 349, baseType: !174, size: 64, offset: 320)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2565, file: !38, line: 350, baseType: !174, size: 64, offset: 384)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2565, file: !38, line: 351, baseType: !798, size: 64, offset: 448)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2565, file: !38, line: 353, baseType: !798, size: 64, offset: 512)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2565, file: !38, line: 354, baseType: !120, size: 32, offset: 576)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2565, file: !38, line: 355, baseType: !120, size: 32, offset: 608)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2565, file: !38, line: 356, baseType: !174, size: 64, offset: 640)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2565, file: !38, line: 357, baseType: !174, size: 64, offset: 704)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2565, file: !38, line: 358, baseType: !174, size: 64, offset: 768)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2565, file: !38, line: 359, baseType: !798, size: 64, offset: 832)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2565, file: !38, line: 360, baseType: !120, size: 32, offset: 896)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2532, file: !38, line: 436, baseType: !2584, size: 64, offset: 448)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 64)
!2585 = !DISubroutineType(types: !2586)
!2586 = !{!120, !616, !2528, !2564}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2532, file: !38, line: 438, baseType: !2561, size: 64, offset: 512)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2532, file: !38, line: 439, baseType: !2589, size: 64, offset: 576)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!120, !616, !2592}
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2594)
!2594 = !{!2595, !2596}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2593, file: !38, line: 410, baseType: !7, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2593, file: !38, line: 411, baseType: !2597, size: 1344, offset: 64)
!2597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2598, size: 1344, elements: !302)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2599)
!2599 = !{!2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2610}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2598, file: !38, line: 396, baseType: !7, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2598, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2598, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2598, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2598, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2598, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2598, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2598, file: !38, line: 404, baseType: !178, size: 64, offset: 256)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2598, file: !38, line: 405, baseType: !2609, size: 64, offset: 320)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !150, line: 126, baseType: !174)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2598, file: !38, line: 406, baseType: !2609, size: 64, offset: 384)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2532, file: !38, line: 440, baseType: !2540, size: 64, offset: 640)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !617, file: !44, line: 1426, baseType: !2613, size: 64, offset: 576)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2615)
!2615 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !617, file: !44, line: 1427, baseType: !185, size: 64, offset: 640)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !617, file: !44, line: 1428, baseType: !185, size: 64, offset: 704)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !617, file: !44, line: 1429, baseType: !185, size: 64, offset: 768)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !617, file: !44, line: 1430, baseType: !407, size: 64, offset: 832)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !617, file: !44, line: 1431, baseType: !788, size: 256, offset: 896)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !617, file: !44, line: 1432, baseType: !120, size: 32, offset: 1152)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !617, file: !44, line: 1433, baseType: !768, size: 32, offset: 1184)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !617, file: !44, line: 1437, baseType: !2624, size: 64, offset: 1216)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 64)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2627)
!2627 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !617, file: !44, line: 1449, baseType: !2629, size: 64, offset: 1280)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !423, line: 34, size: 64, elements: !2630)
!2630 = !{!2631}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2629, file: !423, line: 35, baseType: !426, size: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !617, file: !44, line: 1450, baseType: !149, size: 128, offset: 1344)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !617, file: !44, line: 1451, baseType: !2634, size: 64, offset: 1472)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64)
!2635 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !617, file: !44, line: 1452, baseType: !1943, size: 64, offset: 1536)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !617, file: !44, line: 1453, baseType: !2638, size: 64, offset: 1600)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !617, file: !44, line: 1454, baseType: !659, size: 128, offset: 1664)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !617, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !617, file: !44, line: 1456, baseType: !2643, size: 2432, offset: 1856)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2644)
!2644 = !{!2645, !2646, !2647, !2649, !2681}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2643, file: !38, line: 519, baseType: !7, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2643, file: !38, line: 520, baseType: !788, size: 256, offset: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2643, file: !38, line: 521, baseType: !2648, size: 192, offset: 320)
!2648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 192, elements: !302)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2643, file: !38, line: 522, baseType: !2650, size: 1728, offset: 512)
!2650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2651, size: 1728, elements: !302)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2652)
!2652 = !{!2653, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2651, file: !38, line: 223, baseType: !2654, size: 64)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2656)
!2656 = !{!2657, !2658, !2671, !2672}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2655, file: !38, line: 444, baseType: !120, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2655, file: !38, line: 445, baseType: !2659, size: 64, offset: 64)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2661)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2662)
!2662 = !{!2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2661, file: !38, line: 311, baseType: !705, size: 64)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2661, file: !38, line: 312, baseType: !705, size: 64, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2661, file: !38, line: 313, baseType: !705, size: 64, offset: 128)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2661, file: !38, line: 314, baseType: !705, size: 64, offset: 192)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2661, file: !38, line: 315, baseType: !2453, size: 64, offset: 256)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2661, file: !38, line: 316, baseType: !2453, size: 64, offset: 320)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2661, file: !38, line: 317, baseType: !2453, size: 64, offset: 384)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2661, file: !38, line: 318, baseType: !2525, size: 64, offset: 448)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2655, file: !38, line: 446, baseType: !650, size: 64, offset: 128)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2655, file: !38, line: 447, baseType: !2654, size: 64, offset: 192)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2651, file: !38, line: 224, baseType: !120, size: 32, offset: 64)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2651, file: !38, line: 226, baseType: !149, size: 128, offset: 128)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2651, file: !38, line: 227, baseType: !185, size: 64, offset: 256)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2651, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2651, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2651, file: !38, line: 230, baseType: !2489, size: 64, offset: 384)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2651, file: !38, line: 231, baseType: !2489, size: 64, offset: 448)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2651, file: !38, line: 232, baseType: !144, size: 64, offset: 512)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2643, file: !38, line: 523, baseType: !2682, size: 192, offset: 2240)
!2682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2659, size: 192, elements: !302)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !617, file: !44, line: 1458, baseType: !2684, size: 2112, offset: 4288)
!2684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2685)
!2685 = !{!2686, !2687, !2688}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2684, file: !44, line: 1411, baseType: !120, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2684, file: !44, line: 1412, baseType: !1499, size: 128, offset: 64)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2684, file: !44, line: 1413, baseType: !2689, size: 1920, offset: 192)
!2689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2690, size: 1920, elements: !302)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2691, line: 12, size: 640, elements: !2692)
!2691 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2692 = !{!2693, !2701, !2703, !2708, !2709}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2690, file: !2691, line: 13, baseType: !2694, size: 320)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2695, line: 17, size: 320, elements: !2696)
!2695 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2696 = !{!2697, !2698, !2699, !2700}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2694, file: !2695, line: 18, baseType: !120, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2694, file: !2695, line: 19, baseType: !120, size: 32, offset: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2694, file: !2695, line: 20, baseType: !1499, size: 128, offset: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2694, file: !2695, line: 22, baseType: !390, size: 128, align: 64, offset: 192)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2690, file: !2691, line: 14, baseType: !2702, size: 64, offset: 320)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2690, file: !2691, line: 15, baseType: !2704, size: 64, offset: 384)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2705, line: 16, size: 64, elements: !2706)
!2705 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2706 = !{!2707}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2704, file: !2705, line: 17, baseType: !1235, size: 64)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2690, file: !2691, line: 16, baseType: !1499, size: 128, offset: 448)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2690, file: !2691, line: 17, baseType: !768, size: 32, offset: 576)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !617, file: !44, line: 1465, baseType: !144, size: 64, offset: 6400)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !617, file: !44, line: 1468, baseType: !215, size: 32, offset: 6464)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !617, file: !44, line: 1470, baseType: !556, size: 64, offset: 6528)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !617, file: !44, line: 1471, baseType: !556, size: 64, offset: 6592)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !617, file: !44, line: 1473, baseType: !216, size: 32, offset: 6656)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !617, file: !44, line: 1474, baseType: !2716, size: 64, offset: 6720)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 64)
!2717 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !617, file: !44, line: 1477, baseType: !2719, size: 256, offset: 6784)
!2719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 256, elements: !2249)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !617, file: !44, line: 1478, baseType: !2721, size: 128, offset: 7040)
!2721 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2722, line: 18, baseType: !2723)
!2722 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2723 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2722, line: 16, size: 128, elements: !2724)
!2724 = !{!2725}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2723, file: !2722, line: 17, baseType: !2726, size: 128)
!2726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1372, size: 128, elements: !1753)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !617, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !617, file: !44, line: 1481, baseType: !2729, size: 32, offset: 7200)
!2729 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !150, line: 150, baseType: !7)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !617, file: !44, line: 1487, baseType: !1192, size: 192, offset: 7232)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !617, file: !44, line: 1493, baseType: !181, size: 64, offset: 7424)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !617, file: !44, line: 1495, baseType: !2733, size: 64, offset: 7488)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2735)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !405, line: 135, size: 1024, align: 512, elements: !2736)
!2736 = !{!2737, !2741, !2742, !2749, !2755, !2759, !2763, !2767, !2768, !2772, !2776, !2781, !2785}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2735, file: !405, line: 136, baseType: !2738, size: 64)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = !DISubroutineType(types: !2740)
!2740 = !{!120, !407, !7}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2735, file: !405, line: 137, baseType: !2738, size: 64, offset: 64)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2735, file: !405, line: 138, baseType: !2743, size: 64, offset: 128)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = !DISubroutineType(types: !2745)
!2745 = !{!120, !2746, !2748}
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !408)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2735, file: !405, line: 139, baseType: !2750, size: 64, offset: 192)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 64)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{!120, !2746, !7, !181, !2753}
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !431)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2735, file: !405, line: 141, baseType: !2756, size: 64, offset: 256)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DISubroutineType(types: !2758)
!2758 = !{!120, !2746}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2735, file: !405, line: 142, baseType: !2760, size: 64, offset: 320)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = !DISubroutineType(types: !2762)
!2762 = !{!120, !407}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2735, file: !405, line: 143, baseType: !2764, size: 64, offset: 384)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2765 = !DISubroutineType(types: !2766)
!2766 = !{null, !407}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2735, file: !405, line: 144, baseType: !2764, size: 64, offset: 448)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2735, file: !405, line: 145, baseType: !2769, size: 64, offset: 512)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{null, !407, !446}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2735, file: !405, line: 146, baseType: !2773, size: 64, offset: 576)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 64)
!2774 = !DISubroutineType(types: !2775)
!2775 = !{!301, !407, !301, !120}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2735, file: !405, line: 147, baseType: !2777, size: 64, offset: 640)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 64)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{!403, !2780}
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2735, file: !405, line: 148, baseType: !2782, size: 64, offset: 704)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{!120, !566, !507}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2735, file: !405, line: 149, baseType: !2786, size: 64, offset: 768)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{!407, !407, !2789}
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !447)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !617, file: !44, line: 1500, baseType: !120, size: 32, offset: 7552)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !617, file: !44, line: 1502, baseType: !2793, size: 448, offset: 7616)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2437, line: 60, size: 448, elements: !2794)
!2794 = !{!2795, !2800, !2801, !2802, !2803, !2804, !2805}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2793, file: !2437, line: 61, baseType: !2796, size: 64)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 64)
!2797 = !DISubroutineType(types: !2798)
!2798 = !{!185, !2799, !2435}
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2793, file: !2437, line: 63, baseType: !2796, size: 64, offset: 64)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2793, file: !2437, line: 66, baseType: !336, size: 64, offset: 128)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2793, file: !2437, line: 67, baseType: !120, size: 32, offset: 192)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2793, file: !2437, line: 68, baseType: !7, size: 32, offset: 224)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2793, file: !2437, line: 71, baseType: !149, size: 128, offset: 256)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2793, file: !2437, line: 77, baseType: !2806, size: 64, offset: 384)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !617, file: !44, line: 1505, baseType: !792, size: 64, offset: 8064)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !617, file: !44, line: 1508, baseType: !792, size: 64, offset: 8128)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !617, file: !44, line: 1511, baseType: !120, size: 32, offset: 8192)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !617, file: !44, line: 1514, baseType: !930, size: 32, offset: 8224)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !617, file: !44, line: 1517, baseType: !2812, size: 64, offset: 8256)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1978, line: 18, flags: DIFlagFwdDecl)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !617, file: !44, line: 1518, baseType: !655, size: 64, offset: 8320)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !617, file: !44, line: 1525, baseType: !1731, size: 64, offset: 8384)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !617, file: !44, line: 1532, baseType: !2817, size: 64, offset: 8448)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2818, line: 52, size: 64, elements: !2819)
!2818 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2819 = !{!2820}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2817, file: !2818, line: 53, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 64)
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2818, line: 40, size: 256, elements: !2823)
!2823 = !{!2824, !2825, !2830}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2822, file: !2818, line: 42, baseType: !260)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2822, file: !2818, line: 44, baseType: !2826, size: 192)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2818, line: 28, size: 192, elements: !2827)
!2827 = !{!2828, !2829}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2826, file: !2818, line: 29, baseType: !149, size: 128)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2826, file: !2818, line: 31, baseType: !336, size: 64, offset: 128)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2822, file: !2818, line: 49, baseType: !336, size: 64, offset: 192)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !617, file: !44, line: 1533, baseType: !2817, size: 64, offset: 8512)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !617, file: !44, line: 1534, baseType: !390, size: 128, align: 64, offset: 8576)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !617, file: !44, line: 1535, baseType: !1977, size: 256, offset: 8704)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !617, file: !44, line: 1537, baseType: !1192, size: 192, offset: 8960)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !617, file: !44, line: 1542, baseType: !120, size: 32, offset: 9152)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !617, file: !44, line: 1545, baseType: !260, offset: 9184)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !617, file: !44, line: 1546, baseType: !149, size: 128, offset: 9216)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !617, file: !44, line: 1548, baseType: !260, offset: 9344)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !617, file: !44, line: 1549, baseType: !149, size: 128, offset: 9344)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !447, file: !44, line: 624, baseType: !754, size: 64, offset: 256)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !447, file: !44, line: 631, baseType: !185, size: 64, offset: 320)
!2842 = !DIDerivedType(tag: DW_TAG_member, scope: !447, file: !44, line: 639, baseType: !2843, size: 32, offset: 384)
!2843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !447, file: !44, line: 639, size: 32, elements: !2844)
!2844 = !{!2845, !2847}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2843, file: !44, line: 640, baseType: !2846, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2843, file: !44, line: 641, baseType: !7, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !447, file: !44, line: 643, baseType: !530, size: 32, offset: 416)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !447, file: !44, line: 644, baseType: !548, size: 64, offset: 448)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !447, file: !44, line: 645, baseType: !552, size: 128, offset: 512)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !447, file: !44, line: 646, baseType: !552, size: 128, offset: 640)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !447, file: !44, line: 647, baseType: !552, size: 128, offset: 768)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !447, file: !44, line: 648, baseType: !260, offset: 896)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !447, file: !44, line: 649, baseType: !239, size: 16, offset: 896)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !447, file: !44, line: 650, baseType: !1371, size: 8, offset: 912)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !447, file: !44, line: 651, baseType: !1371, size: 8, offset: 920)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !447, file: !44, line: 652, baseType: !2609, size: 64, offset: 960)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !447, file: !44, line: 659, baseType: !185, size: 64, offset: 1024)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !447, file: !44, line: 660, baseType: !788, size: 256, offset: 1088)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !447, file: !44, line: 662, baseType: !185, size: 64, offset: 1344)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !447, file: !44, line: 663, baseType: !185, size: 64, offset: 1408)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !447, file: !44, line: 665, baseType: !659, size: 128, offset: 1472)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !447, file: !44, line: 666, baseType: !149, size: 128, offset: 1600)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !447, file: !44, line: 675, baseType: !149, size: 128, offset: 1728)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !447, file: !44, line: 676, baseType: !149, size: 128, offset: 1856)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !447, file: !44, line: 677, baseType: !149, size: 128, offset: 1984)
!2867 = !DIDerivedType(tag: DW_TAG_member, scope: !447, file: !44, line: 678, baseType: !2868, size: 128, offset: 2112)
!2868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !447, file: !44, line: 678, size: 128, elements: !2869)
!2869 = !{!2870, !2871}
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2868, file: !44, line: 679, baseType: !655, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2868, file: !44, line: 680, baseType: !390, size: 128, align: 64)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !447, file: !44, line: 682, baseType: !794, size: 64, offset: 2240)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !447, file: !44, line: 683, baseType: !794, size: 64, offset: 2304)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !447, file: !44, line: 684, baseType: !768, size: 32, offset: 2368)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !447, file: !44, line: 685, baseType: !768, size: 32, offset: 2400)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !447, file: !44, line: 686, baseType: !768, size: 32, offset: 2432)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !447, file: !44, line: 688, baseType: !768, size: 32, offset: 2464)
!2878 = !DIDerivedType(tag: DW_TAG_member, scope: !447, file: !44, line: 690, baseType: !2879, size: 64, offset: 2496)
!2879 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !447, file: !44, line: 690, size: 64, elements: !2880)
!2880 = !{!2881, !3104}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2879, file: !44, line: 691, baseType: !2882, size: 64)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2884)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !2885)
!2885 = !{!2886, !2887, !2891, !2896, !2900, !2901, !2902, !2906, !2919, !2920, !2928, !2932, !2933, !2937, !2938, !2942, !2947, !2948, !2952, !2956, !3064, !3068, !3069, !3073, !3074, !3078, !3082, !3087, !3091, !3095, !3099, !3103}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2884, file: !44, line: 1823, baseType: !650, size: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2884, file: !44, line: 1824, baseType: !2888, size: 64, offset: 64)
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2889 = !DISubroutineType(types: !2890)
!2890 = !{!548, !377, !548, !120}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2884, file: !44, line: 1825, baseType: !2892, size: 64, offset: 128)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = !DISubroutineType(types: !2894)
!2894 = !{!332, !377, !301, !347, !2895}
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2884, file: !44, line: 1826, baseType: !2897, size: 64, offset: 192)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!332, !377, !181, !347, !2895}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2884, file: !44, line: 1827, baseType: !865, size: 64, offset: 256)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2884, file: !44, line: 1828, baseType: !865, size: 64, offset: 320)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2884, file: !44, line: 1829, baseType: !2903, size: 64, offset: 384)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{!120, !868, !507}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2884, file: !44, line: 1830, baseType: !2907, size: 64, offset: 448)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = !DISubroutineType(types: !2909)
!2909 = !{!120, !377, !2910}
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !2912)
!2912 = !{!2913, !2918}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2911, file: !44, line: 1777, baseType: !2914, size: 64)
!2914 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !2915)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 64)
!2916 = !DISubroutineType(types: !2917)
!2917 = !{!120, !2910, !181, !120, !548, !174, !7}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2911, file: !44, line: 1778, baseType: !548, size: 64, offset: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2884, file: !44, line: 1831, baseType: !2907, size: 64, offset: 512)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2884, file: !44, line: 1832, baseType: !2921, size: 64, offset: 576)
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 64)
!2922 = !DISubroutineType(types: !2923)
!2923 = !{!2924, !377, !2926}
!2924 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2925, line: 52, baseType: !7)
!2925 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 64)
!2927 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !636, line: 27, flags: DIFlagFwdDecl)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2884, file: !44, line: 1833, baseType: !2929, size: 64, offset: 640)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = !DISubroutineType(types: !2931)
!2931 = !{!336, !377, !7, !185}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2884, file: !44, line: 1834, baseType: !2929, size: 64, offset: 704)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2884, file: !44, line: 1835, baseType: !2934, size: 64, offset: 768)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = !DISubroutineType(types: !2936)
!2936 = !{!120, !377, !1002}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2884, file: !44, line: 1836, baseType: !185, size: 64, offset: 832)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2884, file: !44, line: 1837, baseType: !2939, size: 64, offset: 896)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!120, !446, !377}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2884, file: !44, line: 1838, baseType: !2943, size: 64, offset: 960)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{!120, !377, !2946}
!2946 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !144)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2884, file: !44, line: 1839, baseType: !2939, size: 64, offset: 1024)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2884, file: !44, line: 1840, baseType: !2949, size: 64, offset: 1088)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{!120, !377, !548, !548, !120}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2884, file: !44, line: 1841, baseType: !2953, size: 64, offset: 1152)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = !DISubroutineType(types: !2955)
!2955 = !{!120, !120, !377, !120}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2884, file: !44, line: 1842, baseType: !2957, size: 64, offset: 1216)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DISubroutineType(types: !2959)
!2959 = !{!120, !377, !120, !2960}
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !2962)
!2962 = !{!2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2994, !2995, !2996, !3009, !3040}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2961, file: !44, line: 1063, baseType: !2960, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2961, file: !44, line: 1064, baseType: !149, size: 128, offset: 64)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2961, file: !44, line: 1065, baseType: !659, size: 128, offset: 192)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2961, file: !44, line: 1066, baseType: !149, size: 128, offset: 320)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2961, file: !44, line: 1069, baseType: !149, size: 128, offset: 448)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2961, file: !44, line: 1072, baseType: !2946, size: 64, offset: 576)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2961, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2961, file: !44, line: 1074, baseType: !230, size: 8, offset: 672)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2961, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2961, file: !44, line: 1076, baseType: !120, size: 32, offset: 736)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2961, file: !44, line: 1077, baseType: !1499, size: 128, offset: 768)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2961, file: !44, line: 1078, baseType: !377, size: 64, offset: 896)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2961, file: !44, line: 1079, baseType: !548, size: 64, offset: 960)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2961, file: !44, line: 1080, baseType: !548, size: 64, offset: 1024)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2961, file: !44, line: 1082, baseType: !2978, size: 64, offset: 1088)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !2980)
!2980 = !{!2981, !2989, !2990, !2991, !2992, !2993}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2979, file: !44, line: 1315, baseType: !2982)
!2982 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2983, line: 20, baseType: !2984)
!2983 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2983, line: 11, elements: !2985)
!2985 = !{!2986}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2984, file: !2983, line: 12, baseType: !2987)
!2987 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !272, line: 33, baseType: !2988)
!2988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !272, line: 31, elements: !274)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2979, file: !44, line: 1316, baseType: !120, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2979, file: !44, line: 1317, baseType: !120, size: 32, offset: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2979, file: !44, line: 1318, baseType: !2978, size: 64, offset: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2979, file: !44, line: 1319, baseType: !377, size: 64, offset: 128)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2979, file: !44, line: 1320, baseType: !390, size: 128, align: 64, offset: 192)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2961, file: !44, line: 1084, baseType: !185, size: 64, offset: 1152)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2961, file: !44, line: 1085, baseType: !185, size: 64, offset: 1216)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2961, file: !44, line: 1087, baseType: !2997, size: 64, offset: 1280)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2999)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3000)
!3000 = !{!3001, !3005}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2999, file: !44, line: 1012, baseType: !3002, size: 64)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64)
!3003 = !DISubroutineType(types: !3004)
!3004 = !{null, !2960, !2960}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2999, file: !44, line: 1013, baseType: !3006, size: 64, offset: 64)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = !DISubroutineType(types: !3008)
!3008 = !{null, !2960}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2961, file: !44, line: 1088, baseType: !3010, size: 64, offset: 1344)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3012)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3013)
!3013 = !{!3014, !3018, !3022, !3023, !3027, !3031, !3035, !3039}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3012, file: !44, line: 1017, baseType: !3015, size: 64)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{!2946, !2946}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3012, file: !44, line: 1018, baseType: !3019, size: 64, offset: 64)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 64)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{null, !2946}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3012, file: !44, line: 1019, baseType: !3006, size: 64, offset: 128)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3012, file: !44, line: 1020, baseType: !3024, size: 64, offset: 192)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{!120, !2960, !120}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3012, file: !44, line: 1021, baseType: !3028, size: 64, offset: 256)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DISubroutineType(types: !3030)
!3030 = !{!507, !2960}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3012, file: !44, line: 1022, baseType: !3032, size: 64, offset: 320)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{!120, !2960, !120, !153}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3012, file: !44, line: 1023, baseType: !3036, size: 64, offset: 384)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{null, !2960, !842}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3012, file: !44, line: 1024, baseType: !3028, size: 64, offset: 448)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2961, file: !44, line: 1097, baseType: !3041, size: 256, offset: 1408)
!3041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2961, file: !44, line: 1089, size: 256, elements: !3042)
!3042 = !{!3043, !3052, !3058}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3041, file: !44, line: 1090, baseType: !3044, size: 256)
!3044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3045, line: 10, size: 256, elements: !3046)
!3045 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3046 = !{!3047, !3048, !3051}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3044, file: !3045, line: 11, baseType: !215, size: 32)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3044, file: !3045, line: 12, baseType: !3049, size: 64, offset: 64)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3045, line: 5, flags: DIFlagFwdDecl)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3044, file: !3045, line: 13, baseType: !149, size: 128, offset: 128)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3041, file: !44, line: 1091, baseType: !3053, size: 64)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3045, line: 17, size: 64, elements: !3054)
!3054 = !{!3055}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3053, file: !3045, line: 18, baseType: !3056, size: 64)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3045, line: 16, flags: DIFlagFwdDecl)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3041, file: !44, line: 1096, baseType: !3059, size: 192)
!3059 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3041, file: !44, line: 1092, size: 192, elements: !3060)
!3060 = !{!3061, !3062, !3063}
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3059, file: !44, line: 1093, baseType: !149, size: 128)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3059, file: !44, line: 1094, baseType: !120, size: 32, offset: 128)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3059, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2884, file: !44, line: 1843, baseType: !3065, size: 64, offset: 1280)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 64)
!3066 = !DISubroutineType(types: !3067)
!3067 = !{!332, !377, !741, !120, !347, !2895, !120}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2884, file: !44, line: 1844, baseType: !1122, size: 64, offset: 1344)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2884, file: !44, line: 1845, baseType: !3070, size: 64, offset: 1408)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!120, !120}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2884, file: !44, line: 1846, baseType: !2957, size: 64, offset: 1472)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2884, file: !44, line: 1847, baseType: !3075, size: 64, offset: 1536)
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 64)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{!332, !2118, !377, !2895, !347, !7}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2884, file: !44, line: 1848, baseType: !3079, size: 64, offset: 1600)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!332, !377, !2895, !2118, !347, !7}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2884, file: !44, line: 1849, baseType: !3083, size: 64, offset: 1664)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 64)
!3084 = !DISubroutineType(types: !3085)
!3085 = !{!120, !377, !336, !3086, !842}
!3086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2884, file: !44, line: 1850, baseType: !3088, size: 64, offset: 1728)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 64)
!3089 = !DISubroutineType(types: !3090)
!3090 = !{!336, !377, !120, !548, !548}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2884, file: !44, line: 1852, baseType: !3092, size: 64, offset: 1792)
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 64)
!3093 = !DISubroutineType(types: !3094)
!3094 = !{null, !731, !377}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2884, file: !44, line: 1856, baseType: !3096, size: 64, offset: 1856)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = !DISubroutineType(types: !3098)
!3098 = !{!332, !377, !548, !377, !548, !347, !7}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2884, file: !44, line: 1858, baseType: !3100, size: 64, offset: 1920)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = !DISubroutineType(types: !3102)
!3102 = !{!548, !377, !548, !377, !548, !548, !7}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2884, file: !44, line: 1861, baseType: !2949, size: 64, offset: 1984)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2879, file: !44, line: 692, baseType: !684, size: 64)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !447, file: !44, line: 694, baseType: !3106, size: 64, offset: 2560)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 64)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3108)
!3108 = !{!3109, !3110, !3111, !3112}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3107, file: !44, line: 1101, baseType: !260)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3107, file: !44, line: 1102, baseType: !149, size: 128)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3107, file: !44, line: 1103, baseType: !149, size: 128, offset: 128)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3107, file: !44, line: 1104, baseType: !149, size: 128, offset: 256)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !447, file: !44, line: 695, baseType: !755, size: 1216, align: 64, offset: 2624)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !447, file: !44, line: 696, baseType: !149, size: 128, offset: 3840)
!3115 = !DIDerivedType(tag: DW_TAG_member, scope: !447, file: !44, line: 697, baseType: !3116, size: 64, offset: 3968)
!3116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !447, file: !44, line: 697, size: 64, elements: !3117)
!3117 = !{!3118, !3119, !3120, !3123, !3124}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3116, file: !44, line: 698, baseType: !2118, size: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3116, file: !44, line: 699, baseType: !2634, size: 64)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3116, file: !44, line: 700, baseType: !3121, size: 64)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !44, line: 700, flags: DIFlagFwdDecl)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3116, file: !44, line: 701, baseType: !301, size: 64)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3116, file: !44, line: 702, baseType: !7, size: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !447, file: !44, line: 705, baseType: !216, size: 32, offset: 4032)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !447, file: !44, line: 708, baseType: !216, size: 32, offset: 4064)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !447, file: !44, line: 709, baseType: !2716, size: 64, offset: 4096)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !447, file: !44, line: 720, baseType: !144, size: 64, offset: 4160)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !408, file: !405, line: 98, baseType: !3130, size: 256, offset: 448)
!3130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 256, elements: !2249)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !408, file: !405, line: 101, baseType: !3132, size: 32, offset: 704)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3133, line: 25, size: 32, elements: !3134)
!3133 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3134 = !{!3135}
!3135 = !DIDerivedType(tag: DW_TAG_member, scope: !3132, file: !3133, line: 26, baseType: !3136, size: 32)
!3136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3132, file: !3133, line: 26, size: 32, elements: !3137)
!3137 = !{!3138}
!3138 = !DIDerivedType(tag: DW_TAG_member, scope: !3136, file: !3133, line: 30, baseType: !3139, size: 32)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3136, file: !3133, line: 30, size: 32, elements: !3140)
!3140 = !{!3141, !3142}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3139, file: !3133, line: 31, baseType: !260)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3139, file: !3133, line: 32, baseType: !120, size: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !408, file: !405, line: 102, baseType: !2733, size: 64, offset: 768)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !408, file: !405, line: 103, baseType: !616, size: 64, offset: 832)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !408, file: !405, line: 104, baseType: !185, size: 64, offset: 896)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !408, file: !405, line: 105, baseType: !144, size: 64, offset: 960)
!3147 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !405, line: 107, baseType: !3148, size: 128, offset: 1024)
!3148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !405, line: 107, size: 128, elements: !3149)
!3149 = !{!3150, !3151}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3148, file: !405, line: 108, baseType: !149, size: 128)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3148, file: !405, line: 109, baseType: !3152, size: 64)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !408, file: !405, line: 111, baseType: !149, size: 128, offset: 1152)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !408, file: !405, line: 112, baseType: !149, size: 128, offset: 1280)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !408, file: !405, line: 120, baseType: !3156, size: 128, offset: 1408)
!3156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !405, line: 116, size: 128, elements: !3157)
!3157 = !{!3158, !3159, !3160}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3156, file: !405, line: 117, baseType: !659, size: 128)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3156, file: !405, line: 118, baseType: !422, size: 128)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3156, file: !405, line: 119, baseType: !390, size: 128, align: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !378, file: !44, line: 922, baseType: !446, size: 64, offset: 256)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !378, file: !44, line: 923, baseType: !2882, size: 64, offset: 320)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !378, file: !44, line: 929, baseType: !260, offset: 384)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !378, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !378, file: !44, line: 931, baseType: !792, size: 64, offset: 448)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !378, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !378, file: !44, line: 933, baseType: !2729, size: 32, offset: 544)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !378, file: !44, line: 934, baseType: !1192, size: 192, offset: 576)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !378, file: !44, line: 935, baseType: !548, size: 64, offset: 768)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !378, file: !44, line: 936, baseType: !3171, size: 192, offset: 832)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3172)
!3172 = !{!3173, !3174, !3175, !3176, !3177, !3178}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3171, file: !44, line: 886, baseType: !2982)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3171, file: !44, line: 887, baseType: !1489, size: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3171, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3171, file: !44, line: 889, baseType: !452, size: 32, offset: 96)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3171, file: !44, line: 889, baseType: !452, size: 32, offset: 128)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3171, file: !44, line: 890, baseType: !120, size: 32, offset: 160)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !378, file: !44, line: 937, baseType: !1565, size: 64, offset: 1024)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !378, file: !44, line: 938, baseType: !3181, size: 256, offset: 1088)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3182)
!3182 = !{!3183, !3184, !3185, !3186, !3187, !3188}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3181, file: !44, line: 897, baseType: !185, size: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3181, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3181, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3181, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3181, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3181, file: !44, line: 904, baseType: !548, size: 64, offset: 192)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !378, file: !44, line: 940, baseType: !174, size: 64, offset: 1344)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !378, file: !44, line: 945, baseType: !144, size: 64, offset: 1408)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !378, file: !44, line: 949, baseType: !149, size: 128, offset: 1472)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !378, file: !44, line: 950, baseType: !149, size: 128, offset: 1600)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !378, file: !44, line: 952, baseType: !754, size: 64, offset: 1728)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !378, file: !44, line: 953, baseType: !930, size: 32, offset: 1792)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !378, file: !44, line: 954, baseType: !930, size: 32, offset: 1824)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !368, file: !326, line: 174, baseType: !374, size: 64, offset: 320)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !368, file: !326, line: 176, baseType: !3198, size: 64, offset: 384)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 64)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{!120, !377, !253, !367, !1002}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !356, file: !326, line: 90, baseType: !351, size: 64, offset: 192)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !356, file: !326, line: 91, baseType: !3203, size: 64, offset: 256)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !316, file: !248, line: 143, baseType: !3205, size: 64, offset: 256)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = !DISubroutineType(types: !3207)
!3207 = !{!3208, !253}
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 64)
!3209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3210)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3211)
!3211 = !{!3212, !3213, !3217, !3221, !3227, !3231}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3210, file: !61, line: 40, baseType: !60, size: 32)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3210, file: !61, line: 41, baseType: !3214, size: 64, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = !DISubroutineType(types: !3216)
!3216 = !{!507}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3210, file: !61, line: 42, baseType: !3218, size: 64, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3219 = !DISubroutineType(types: !3220)
!3220 = !{!144}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3210, file: !61, line: 43, baseType: !3222, size: 64, offset: 192)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{!2146, !3225}
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3210, file: !61, line: 44, baseType: !3228, size: 64, offset: 256)
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64)
!3229 = !DISubroutineType(types: !3230)
!3230 = !{!2146}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3210, file: !61, line: 45, baseType: !485, size: 64, offset: 320)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !316, file: !248, line: 144, baseType: !3233, size: 64, offset: 320)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = !DISubroutineType(types: !3235)
!3235 = !{!2146, !253}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !316, file: !248, line: 145, baseType: !3237, size: 64, offset: 384)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 64)
!3238 = !DISubroutineType(types: !3239)
!3239 = !{null, !253, !3240, !3241}
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !247, file: !248, line: 70, baseType: !3243, size: 64, offset: 384)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !636, line: 123, size: 1024, elements: !3245)
!3245 = !{!3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3374, !3375, !3376, !3377, !3378}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3244, file: !636, line: 124, baseType: !768, size: 32)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3244, file: !636, line: 125, baseType: !768, size: 32, offset: 32)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3244, file: !636, line: 135, baseType: !3243, size: 64, offset: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3244, file: !636, line: 136, baseType: !181, size: 64, offset: 128)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3244, file: !636, line: 138, baseType: !781, size: 192, align: 64, offset: 192)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3244, file: !636, line: 140, baseType: !2146, size: 64, offset: 384)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3244, file: !636, line: 141, baseType: !7, size: 32, offset: 448)
!3253 = !DIDerivedType(tag: DW_TAG_member, scope: !3244, file: !636, line: 142, baseType: !3254, size: 256, offset: 512)
!3254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3244, file: !636, line: 142, size: 256, elements: !3255)
!3255 = !{!3256, !3302, !3306}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3254, file: !636, line: 143, baseType: !3257, size: 192)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !636, line: 91, size: 192, elements: !3258)
!3258 = !{!3259, !3260, !3261}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3257, file: !636, line: 92, baseType: !185, size: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3257, file: !636, line: 94, baseType: !777, size: 64, offset: 64)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3257, file: !636, line: 100, baseType: !3262, size: 64, offset: 128)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64)
!3263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !636, line: 180, size: 704, elements: !3264)
!3264 = !{!3265, !3266, !3267, !3274, !3275, !3276, !3300, !3301}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3263, file: !636, line: 182, baseType: !3243, size: 64)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3263, file: !636, line: 183, baseType: !7, size: 32, offset: 64)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3263, file: !636, line: 186, baseType: !3268, size: 192, offset: 128)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3269, line: 19, size: 192, elements: !3270)
!3269 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3270 = !{!3271, !3272, !3273}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3268, file: !3269, line: 20, baseType: !759, size: 128)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3268, file: !3269, line: 21, baseType: !7, size: 32, offset: 128)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3268, file: !3269, line: 22, baseType: !7, size: 32, offset: 160)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3263, file: !636, line: 187, baseType: !215, size: 32, offset: 320)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3263, file: !636, line: 188, baseType: !215, size: 32, offset: 352)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3263, file: !636, line: 189, baseType: !3277, size: 64, offset: 384)
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 64)
!3278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !636, line: 168, size: 320, elements: !3279)
!3279 = !{!3280, !3284, !3288, !3292, !3296}
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3278, file: !636, line: 169, baseType: !3281, size: 64)
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3282, size: 64)
!3282 = !DISubroutineType(types: !3283)
!3283 = !{!120, !731, !3262}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3278, file: !636, line: 171, baseType: !3285, size: 64, offset: 64)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 64)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{!120, !3243, !181, !342}
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3278, file: !636, line: 173, baseType: !3289, size: 64, offset: 128)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3290 = !DISubroutineType(types: !3291)
!3291 = !{!120, !3243}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3278, file: !636, line: 174, baseType: !3293, size: 64, offset: 192)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = !DISubroutineType(types: !3295)
!3295 = !{!120, !3243, !3243, !181}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3278, file: !636, line: 176, baseType: !3297, size: 64, offset: 256)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DISubroutineType(types: !3299)
!3299 = !{!120, !731, !3243, !3262}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3263, file: !636, line: 192, baseType: !149, size: 128, offset: 448)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3263, file: !636, line: 194, baseType: !1499, size: 128, offset: 576)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3254, file: !636, line: 144, baseType: !3303, size: 64)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !636, line: 103, size: 64, elements: !3304)
!3304 = !{!3305}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3303, file: !636, line: 104, baseType: !3243, size: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3254, file: !636, line: 145, baseType: !3307, size: 256)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !636, line: 107, size: 256, elements: !3308)
!3308 = !{!3309, !3369, !3372, !3373}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3307, file: !636, line: 108, baseType: !3310, size: 64)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3312)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !636, line: 217, size: 768, elements: !3313)
!3313 = !{!3314, !3334, !3338, !3342, !3346, !3350, !3354, !3358, !3359, !3360, !3361, !3365}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3312, file: !636, line: 222, baseType: !3315, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DISubroutineType(types: !3317)
!3317 = !{!120, !3318}
!3318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 64)
!3319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !636, line: 197, size: 1088, elements: !3320)
!3320 = !{!3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3319, file: !636, line: 199, baseType: !3243, size: 64)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3319, file: !636, line: 200, baseType: !377, size: 64, offset: 64)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3319, file: !636, line: 201, baseType: !731, size: 64, offset: 128)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3319, file: !636, line: 202, baseType: !144, size: 64, offset: 192)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3319, file: !636, line: 205, baseType: !1192, size: 192, offset: 256)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3319, file: !636, line: 206, baseType: !1192, size: 192, offset: 448)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3319, file: !636, line: 207, baseType: !120, size: 32, offset: 640)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3319, file: !636, line: 208, baseType: !149, size: 128, offset: 704)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3319, file: !636, line: 209, baseType: !301, size: 64, offset: 832)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3319, file: !636, line: 211, baseType: !347, size: 64, offset: 896)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3319, file: !636, line: 212, baseType: !507, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3319, file: !636, line: 213, baseType: !507, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3319, file: !636, line: 214, baseType: !1030, size: 64, offset: 1024)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3312, file: !636, line: 223, baseType: !3335, size: 64, offset: 64)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{null, !3318}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3312, file: !636, line: 236, baseType: !3339, size: 64, offset: 128)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{!120, !731, !144}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3312, file: !636, line: 238, baseType: !3343, size: 64, offset: 192)
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3344, size: 64)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{!144, !731, !2895}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3312, file: !636, line: 239, baseType: !3347, size: 64, offset: 256)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{!144, !731, !144, !2895}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3312, file: !636, line: 240, baseType: !3351, size: 64, offset: 320)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{null, !731, !144}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3312, file: !636, line: 242, baseType: !3355, size: 64, offset: 384)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!332, !3318, !301, !347, !548}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3312, file: !636, line: 252, baseType: !347, size: 64, offset: 448)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3312, file: !636, line: 259, baseType: !507, size: 8, offset: 512)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3312, file: !636, line: 260, baseType: !3355, size: 64, offset: 576)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3312, file: !636, line: 263, baseType: !3362, size: 64, offset: 640)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = !DISubroutineType(types: !3364)
!3364 = !{!2924, !3318, !2926}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3312, file: !636, line: 266, baseType: !3366, size: 64, offset: 704)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 64)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{!120, !3318, !1002}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3307, file: !636, line: 109, baseType: !3370, size: 64, offset: 64)
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3371, size: 64)
!3371 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !636, line: 31, flags: DIFlagFwdDecl)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3307, file: !636, line: 110, baseType: !548, size: 64, offset: 128)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3307, file: !636, line: 111, baseType: !3243, size: 64, offset: 192)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3244, file: !636, line: 148, baseType: !144, size: 64, offset: 768)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3244, file: !636, line: 154, baseType: !174, size: 64, offset: 832)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3244, file: !636, line: 156, baseType: !239, size: 16, offset: 896)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3244, file: !636, line: 157, baseType: !342, size: 16, offset: 912)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3244, file: !636, line: 158, baseType: !3379, size: 64, offset: 960)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !636, line: 32, flags: DIFlagFwdDecl)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !247, file: !248, line: 71, baseType: !3382, size: 32, offset: 448)
!3382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3383, line: 19, size: 32, elements: !3384)
!3383 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3384 = !{!3385}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3382, file: !3383, line: 20, baseType: !1249, size: 32)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !247, file: !248, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !247, file: !248, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !247, file: !248, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !247, file: !248, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !247, file: !248, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !244, file: !67, line: 463, baseType: !243, size: 64, offset: 512)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !244, file: !67, line: 465, baseType: !3393, size: 64, offset: 576)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 64)
!3394 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !67, line: 36, flags: DIFlagFwdDecl)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !244, file: !67, line: 467, baseType: !181, size: 64, offset: 640)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !244, file: !67, line: 468, baseType: !3397, size: 64, offset: 704)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3399)
!3399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !67, line: 87, size: 384, elements: !3400)
!3400 = !{!3401, !3402, !3403, !3407, !3412, !3416}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3399, file: !67, line: 88, baseType: !181, size: 64)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3399, file: !67, line: 89, baseType: !353, size: 64, offset: 64)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3399, file: !67, line: 90, baseType: !3404, size: 64, offset: 128)
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3405, size: 64)
!3405 = !DISubroutineType(types: !3406)
!3406 = !{!120, !243, !296}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3399, file: !67, line: 91, baseType: !3408, size: 64, offset: 192)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = !DISubroutineType(types: !3410)
!3410 = !{!301, !243, !3411, !3240, !3241}
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3399, file: !67, line: 93, baseType: !3413, size: 64, offset: 256)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{null, !243}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3399, file: !67, line: 95, baseType: !3417, size: 64, offset: 320)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3419)
!3419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !74, line: 278, size: 1472, elements: !3420)
!3420 = !{!3421, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3419, file: !74, line: 279, baseType: !3422, size: 64)
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3423, size: 64)
!3423 = !DISubroutineType(types: !3424)
!3424 = !{!120, !243}
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3419, file: !74, line: 280, baseType: !3413, size: 64, offset: 64)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3419, file: !74, line: 281, baseType: !3422, size: 64, offset: 128)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3419, file: !74, line: 282, baseType: !3422, size: 64, offset: 192)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3419, file: !74, line: 283, baseType: !3422, size: 64, offset: 256)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3419, file: !74, line: 284, baseType: !3422, size: 64, offset: 320)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3419, file: !74, line: 285, baseType: !3422, size: 64, offset: 384)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3419, file: !74, line: 286, baseType: !3422, size: 64, offset: 448)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3419, file: !74, line: 287, baseType: !3422, size: 64, offset: 512)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3419, file: !74, line: 288, baseType: !3422, size: 64, offset: 576)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3419, file: !74, line: 289, baseType: !3422, size: 64, offset: 640)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3419, file: !74, line: 290, baseType: !3422, size: 64, offset: 704)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3419, file: !74, line: 291, baseType: !3422, size: 64, offset: 768)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3419, file: !74, line: 292, baseType: !3422, size: 64, offset: 832)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3419, file: !74, line: 293, baseType: !3422, size: 64, offset: 896)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3419, file: !74, line: 294, baseType: !3422, size: 64, offset: 960)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3419, file: !74, line: 295, baseType: !3422, size: 64, offset: 1024)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3419, file: !74, line: 296, baseType: !3422, size: 64, offset: 1088)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3419, file: !74, line: 297, baseType: !3422, size: 64, offset: 1152)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3419, file: !74, line: 298, baseType: !3422, size: 64, offset: 1216)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3419, file: !74, line: 299, baseType: !3422, size: 64, offset: 1280)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3419, file: !74, line: 300, baseType: !3422, size: 64, offset: 1344)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3419, file: !74, line: 301, baseType: !3422, size: 64, offset: 1408)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !244, file: !67, line: 470, baseType: !3448, size: 64, offset: 768)
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3450, line: 82, size: 1408, elements: !3451)
!3450 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3451 = !{!3452, !3453, !3454, !3455, !3456, !3457, !3458, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3533, !3536, !3537}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3449, file: !3450, line: 83, baseType: !181, size: 64)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3449, file: !3450, line: 84, baseType: !181, size: 64, offset: 64)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3449, file: !3450, line: 85, baseType: !243, size: 64, offset: 128)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3449, file: !3450, line: 86, baseType: !353, size: 64, offset: 192)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3449, file: !3450, line: 87, baseType: !353, size: 64, offset: 256)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3449, file: !3450, line: 88, baseType: !353, size: 64, offset: 320)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3449, file: !3450, line: 90, baseType: !3459, size: 64, offset: 384)
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{!120, !243, !3462}
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !102, line: 95, size: 1152, elements: !3464)
!3464 = !{!3465, !3466, !3467, !3468, !3469, !3470, !3471, !3484, !3497, !3498, !3499, !3500, !3501, !3509, !3510, !3511, !3512, !3513, !3514}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3463, file: !102, line: 96, baseType: !181, size: 64)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3463, file: !102, line: 97, baseType: !3448, size: 64, offset: 64)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3463, file: !102, line: 99, baseType: !650, size: 64, offset: 128)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3463, file: !102, line: 100, baseType: !181, size: 64, offset: 192)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3463, file: !102, line: 102, baseType: !507, size: 8, offset: 256)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3463, file: !102, line: 103, baseType: !101, size: 32, offset: 288)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3463, file: !102, line: 105, baseType: !3472, size: 64, offset: 320)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3474)
!3474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3475, line: 262, size: 1600, elements: !3476)
!3475 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3476 = !{!3477, !3478, !3479, !3483}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3474, file: !3475, line: 263, baseType: !2719, size: 256)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3474, file: !3475, line: 264, baseType: !2719, size: 256, offset: 256)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3474, file: !3475, line: 265, baseType: !3480, size: 1024, offset: 512)
!3480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 1024, elements: !3481)
!3481 = !{!3482}
!3482 = !DISubrange(count: 128)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3474, file: !3475, line: 266, baseType: !2146, size: 64, offset: 1536)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3463, file: !102, line: 106, baseType: !3485, size: 64, offset: 384)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 64)
!3486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3487)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3475, line: 210, size: 256, elements: !3488)
!3488 = !{!3489, !3493, !3495, !3496}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3487, file: !3475, line: 211, baseType: !3490, size: 72)
!3490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1372, size: 72, elements: !3491)
!3491 = !{!3492}
!3492 = !DISubrange(count: 9)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3487, file: !3475, line: 212, baseType: !3494, size: 64, offset: 128)
!3494 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3475, line: 14, baseType: !185)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3487, file: !3475, line: 213, baseType: !216, size: 32, offset: 192)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3487, file: !3475, line: 214, baseType: !216, size: 32, offset: 224)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3463, file: !102, line: 108, baseType: !3422, size: 64, offset: 448)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3463, file: !102, line: 109, baseType: !3413, size: 64, offset: 512)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3463, file: !102, line: 110, baseType: !3422, size: 64, offset: 576)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3463, file: !102, line: 111, baseType: !3413, size: 64, offset: 640)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3463, file: !102, line: 112, baseType: !3502, size: 64, offset: 704)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!120, !243, !3505}
!3505 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !74, line: 52, baseType: !3506)
!3506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !74, line: 50, size: 32, elements: !3507)
!3507 = !{!3508}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3506, file: !74, line: 51, baseType: !120, size: 32)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3463, file: !102, line: 113, baseType: !3422, size: 64, offset: 768)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3463, file: !102, line: 114, baseType: !353, size: 64, offset: 832)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3463, file: !102, line: 115, baseType: !353, size: 64, offset: 896)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3463, file: !102, line: 117, baseType: !3417, size: 64, offset: 960)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3463, file: !102, line: 118, baseType: !3413, size: 64, offset: 1024)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3463, file: !102, line: 120, baseType: !3515, size: 64, offset: 1088)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3516 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !102, line: 120, flags: DIFlagFwdDecl)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3449, file: !3450, line: 91, baseType: !3404, size: 64, offset: 448)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3449, file: !3450, line: 92, baseType: !3422, size: 64, offset: 512)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3449, file: !3450, line: 93, baseType: !3413, size: 64, offset: 576)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3449, file: !3450, line: 94, baseType: !3422, size: 64, offset: 640)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3449, file: !3450, line: 95, baseType: !3413, size: 64, offset: 704)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3449, file: !3450, line: 97, baseType: !3422, size: 64, offset: 768)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3449, file: !3450, line: 98, baseType: !3422, size: 64, offset: 832)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3449, file: !3450, line: 100, baseType: !3502, size: 64, offset: 896)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3449, file: !3450, line: 101, baseType: !3422, size: 64, offset: 960)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3449, file: !3450, line: 103, baseType: !3422, size: 64, offset: 1024)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3449, file: !3450, line: 105, baseType: !3422, size: 64, offset: 1088)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3449, file: !3450, line: 107, baseType: !3417, size: 64, offset: 1152)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3449, file: !3450, line: 109, baseType: !3530, size: 64, offset: 1216)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3532)
!3532 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3450, line: 109, flags: DIFlagFwdDecl)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3449, file: !3450, line: 111, baseType: !3534, size: 64, offset: 1280)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3450, line: 111, flags: DIFlagFwdDecl)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3449, file: !3450, line: 112, baseType: !665, offset: 1344)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3449, file: !3450, line: 114, baseType: !507, size: 8, offset: 1344)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !244, file: !67, line: 471, baseType: !3462, size: 64, offset: 832)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !244, file: !67, line: 473, baseType: !144, size: 64, offset: 896)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !244, file: !67, line: 475, baseType: !144, size: 64, offset: 960)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !244, file: !67, line: 480, baseType: !1192, size: 192, offset: 1024)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !244, file: !67, line: 484, baseType: !3543, size: 576, offset: 1216)
!3543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !67, line: 361, size: 576, elements: !3544)
!3544 = !{!3545, !3546, !3547, !3548, !3549, !3550}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3543, file: !67, line: 362, baseType: !149, size: 128)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3543, file: !67, line: 363, baseType: !149, size: 128, offset: 128)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3543, file: !67, line: 364, baseType: !149, size: 128, offset: 256)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3543, file: !67, line: 365, baseType: !149, size: 128, offset: 384)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3543, file: !67, line: 366, baseType: !507, size: 8, offset: 512)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3543, file: !67, line: 367, baseType: !66, size: 32, offset: 544)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !244, file: !67, line: 485, baseType: !3552, size: 2304, offset: 1792)
!3552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !74, line: 565, size: 2304, elements: !3553)
!3553 = !{!3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3649, !3653}
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3552, file: !74, line: 566, baseType: !3505, size: 32)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3552, file: !74, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3552, file: !74, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3552, file: !74, line: 569, baseType: !507, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3552, file: !74, line: 570, baseType: !507, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3552, file: !74, line: 571, baseType: !507, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3552, file: !74, line: 572, baseType: !507, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3552, file: !74, line: 573, baseType: !507, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3552, file: !74, line: 574, baseType: !507, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3552, file: !74, line: 575, baseType: !507, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3552, file: !74, line: 576, baseType: !507, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3552, file: !74, line: 577, baseType: !215, size: 32, offset: 64)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3552, file: !74, line: 578, baseType: !260, offset: 96)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3552, file: !74, line: 580, baseType: !149, size: 128, offset: 128)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3552, file: !74, line: 581, baseType: !1520, size: 192, offset: 256)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3552, file: !74, line: 582, baseType: !3570, size: 64, offset: 448)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3572, line: 43, size: 1472, elements: !3573)
!3572 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3573 = !{!3574, !3575, !3576, !3577, !3578, !3581, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3571, file: !3572, line: 44, baseType: !181, size: 64)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3571, file: !3572, line: 45, baseType: !120, size: 32, offset: 64)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3571, file: !3572, line: 46, baseType: !149, size: 128, offset: 128)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3571, file: !3572, line: 47, baseType: !260, offset: 256)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3571, file: !3572, line: 48, baseType: !3579, size: 64, offset: 256)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !74, line: 533, flags: DIFlagFwdDecl)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3571, file: !3572, line: 49, baseType: !3582, size: 320, offset: 320)
!3582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3583, line: 11, size: 320, elements: !3584)
!3583 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3584 = !{!3585, !3586, !3587, !3592}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3582, file: !3583, line: 16, baseType: !659, size: 128)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3582, file: !3583, line: 17, baseType: !185, size: 64, offset: 128)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3582, file: !3583, line: 18, baseType: !3588, size: 64, offset: 192)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{null, !3591}
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 64)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3582, file: !3583, line: 19, baseType: !215, size: 32, offset: 256)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3571, file: !3572, line: 50, baseType: !185, size: 64, offset: 640)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3571, file: !3572, line: 51, baseType: !1319, size: 64, offset: 704)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3571, file: !3572, line: 52, baseType: !1319, size: 64, offset: 768)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3571, file: !3572, line: 53, baseType: !1319, size: 64, offset: 832)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3571, file: !3572, line: 54, baseType: !1319, size: 64, offset: 896)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3571, file: !3572, line: 55, baseType: !1319, size: 64, offset: 960)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3571, file: !3572, line: 56, baseType: !185, size: 64, offset: 1024)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3571, file: !3572, line: 57, baseType: !185, size: 64, offset: 1088)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3571, file: !3572, line: 58, baseType: !185, size: 64, offset: 1152)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3571, file: !3572, line: 59, baseType: !185, size: 64, offset: 1216)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3571, file: !3572, line: 60, baseType: !185, size: 64, offset: 1280)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3571, file: !3572, line: 61, baseType: !243, size: 64, offset: 1344)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3571, file: !3572, line: 62, baseType: !507, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3571, file: !3572, line: 63, baseType: !507, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3552, file: !74, line: 583, baseType: !507, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3552, file: !74, line: 584, baseType: !507, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3552, file: !74, line: 585, baseType: !507, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3552, file: !74, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3552, file: !74, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3552, file: !74, line: 592, baseType: !1311, size: 512, offset: 576)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3552, file: !74, line: 593, baseType: !174, size: 64, offset: 1088)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3552, file: !74, line: 594, baseType: !1977, size: 256, offset: 1152)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3552, file: !74, line: 595, baseType: !1499, size: 128, offset: 1408)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3552, file: !74, line: 596, baseType: !3579, size: 64, offset: 1536)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3552, file: !74, line: 597, baseType: !768, size: 32, offset: 1600)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3552, file: !74, line: 598, baseType: !768, size: 32, offset: 1632)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3552, file: !74, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3552, file: !74, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3552, file: !74, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3552, file: !74, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3552, file: !74, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3552, file: !74, line: 604, baseType: !507, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3552, file: !74, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3552, file: !74, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3552, file: !74, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3552, file: !74, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3552, file: !74, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3552, file: !74, line: 610, baseType: !7, size: 32, offset: 1696)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3552, file: !74, line: 611, baseType: !73, size: 32, offset: 1728)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3552, file: !74, line: 612, baseType: !81, size: 32, offset: 1760)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3552, file: !74, line: 613, baseType: !120, size: 32, offset: 1792)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3552, file: !74, line: 614, baseType: !120, size: 32, offset: 1824)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3552, file: !74, line: 615, baseType: !174, size: 64, offset: 1856)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3552, file: !74, line: 616, baseType: !174, size: 64, offset: 1920)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3552, file: !74, line: 617, baseType: !174, size: 64, offset: 1984)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3552, file: !74, line: 618, baseType: !174, size: 64, offset: 2048)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3552, file: !74, line: 620, baseType: !3640, size: 64, offset: 2112)
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3641, size: 64)
!3641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !74, line: 536, size: 256, elements: !3642)
!3642 = !{!3643, !3644, !3645, !3646}
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3641, file: !74, line: 537, baseType: !260)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3641, file: !74, line: 538, baseType: !7, size: 32)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3641, file: !74, line: 540, baseType: !149, size: 128, offset: 64)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3641, file: !74, line: 543, baseType: !3647, size: 64, offset: 192)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !74, line: 534, flags: DIFlagFwdDecl)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3552, file: !74, line: 621, baseType: !3650, size: 64, offset: 2176)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{null, !243, !1462}
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3552, file: !74, line: 622, baseType: !3654, size: 64, offset: 2240)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !74, line: 622, flags: DIFlagFwdDecl)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !244, file: !67, line: 486, baseType: !3657, size: 64, offset: 4096)
!3657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3658, size: 64)
!3658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !74, line: 642, size: 1792, elements: !3659)
!3659 = !{!3660, !3661, !3662, !3666, !3667, !3668}
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3658, file: !74, line: 643, baseType: !3419, size: 1472)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3658, file: !74, line: 644, baseType: !3422, size: 64, offset: 1472)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3658, file: !74, line: 645, baseType: !3663, size: 64, offset: 1536)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = !DISubroutineType(types: !3665)
!3665 = !{null, !243, !507}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3658, file: !74, line: 646, baseType: !3422, size: 64, offset: 1600)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3658, file: !74, line: 647, baseType: !3413, size: 64, offset: 1664)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3658, file: !74, line: 648, baseType: !3413, size: 64, offset: 1728)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !244, file: !67, line: 493, baseType: !3670, size: 64, offset: 4160)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !88, line: 162, size: 1088, elements: !3672)
!3672 = !{!3673, !3674, !3675, !3848, !3849, !3850, !3851, !3852, !3853, !3856, !3857, !3858, !3859, !3860, !3861, !3862}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3671, file: !88, line: 163, baseType: !149, size: 128)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3671, file: !88, line: 164, baseType: !181, size: 64, offset: 128)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3671, file: !88, line: 165, baseType: !3676, size: 64, offset: 192)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3678)
!3678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !88, line: 105, size: 640, elements: !3679)
!3679 = !{!3680, !3798, !3809, !3814, !3818, !3825, !3829, !3833, !3840, !3844}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3678, file: !88, line: 106, baseType: !3681, size: 64)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{!120, !3670, !3684, !87}
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3686, line: 51, size: 1344, elements: !3687)
!3686 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3687 = !{!3688, !3689, !3691, !3692, !3782, !3791, !3792, !3793, !3794, !3795, !3796, !3797}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3685, file: !3686, line: 52, baseType: !181, size: 64)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3685, file: !3686, line: 53, baseType: !3690, size: 32, offset: 64)
!3690 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3686, line: 28, baseType: !215)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3685, file: !3686, line: 54, baseType: !181, size: 64, offset: 128)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3685, file: !3686, line: 55, baseType: !3693, size: 192, offset: 192)
!3693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3694, line: 17, size: 192, elements: !3695)
!3694 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3695 = !{!3696, !3698, !3781}
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3693, file: !3694, line: 18, baseType: !3697, size: 64)
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3693, size: 64)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3693, file: !3694, line: 19, baseType: !3699, size: 64, offset: 64)
!3699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3700, size: 64)
!3700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3701)
!3701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3694, line: 110, size: 1152, elements: !3702)
!3702 = !{!3703, !3707, !3711, !3717, !3723, !3727, !3731, !3736, !3740, !3741, !3745, !3749, !3753, !3764, !3765, !3766, !3767, !3777}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3701, file: !3694, line: 111, baseType: !3704, size: 64)
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3705, size: 64)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{!3697, !3697}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3701, file: !3694, line: 112, baseType: !3708, size: 64, offset: 64)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3709, size: 64)
!3709 = !DISubroutineType(types: !3710)
!3710 = !{null, !3697}
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3701, file: !3694, line: 113, baseType: !3712, size: 64, offset: 128)
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3713, size: 64)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{!507, !3715}
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 64)
!3716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3693)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3701, file: !3694, line: 114, baseType: !3718, size: 64, offset: 192)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{!2146, !3715, !3721}
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !244)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3701, file: !3694, line: 116, baseType: !3724, size: 64, offset: 256)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DISubroutineType(types: !3726)
!3726 = !{!507, !3715, !181}
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3701, file: !3694, line: 118, baseType: !3728, size: 64, offset: 320)
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 64)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{!120, !3715, !181, !7, !144, !347}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3701, file: !3694, line: 123, baseType: !3732, size: 64, offset: 384)
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3733, size: 64)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!120, !3715, !181, !3735, !347}
!3735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3701, file: !3694, line: 126, baseType: !3737, size: 64, offset: 448)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!181, !3715}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3701, file: !3694, line: 127, baseType: !3737, size: 64, offset: 512)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3701, file: !3694, line: 128, baseType: !3742, size: 64, offset: 576)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{!3697, !3715}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3701, file: !3694, line: 130, baseType: !3746, size: 64, offset: 640)
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 64)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{!3697, !3715, !3697}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3701, file: !3694, line: 133, baseType: !3750, size: 64, offset: 704)
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3751, size: 64)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{!3697, !3715, !181}
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3701, file: !3694, line: 135, baseType: !3754, size: 64, offset: 768)
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 64)
!3755 = !DISubroutineType(types: !3756)
!3756 = !{!120, !3715, !181, !181, !7, !7, !3757}
!3757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3758, size: 64)
!3758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3694, line: 43, size: 640, elements: !3759)
!3759 = !{!3760, !3761, !3762}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3758, file: !3694, line: 44, baseType: !3697, size: 64)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3758, file: !3694, line: 45, baseType: !7, size: 32, offset: 64)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3758, file: !3694, line: 46, baseType: !3763, size: 512, offset: 128)
!3763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 512, elements: !1349)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3701, file: !3694, line: 140, baseType: !3746, size: 64, offset: 832)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3701, file: !3694, line: 143, baseType: !3742, size: 64, offset: 896)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3701, file: !3694, line: 145, baseType: !3704, size: 64, offset: 960)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3701, file: !3694, line: 146, baseType: !3768, size: 64, offset: 1024)
!3768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3769, size: 64)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{!120, !3715, !3771}
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3694, line: 29, size: 128, elements: !3773)
!3773 = !{!3774, !3775, !3776}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3772, file: !3694, line: 30, baseType: !7, size: 32)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3772, file: !3694, line: 31, baseType: !7, size: 32, offset: 32)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3772, file: !3694, line: 32, baseType: !3715, size: 64, offset: 64)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3701, file: !3694, line: 148, baseType: !3778, size: 64, offset: 1088)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = !DISubroutineType(types: !3780)
!3780 = !{!120, !3715, !243}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3693, file: !3694, line: 20, baseType: !243, size: 64, offset: 128)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3685, file: !3686, line: 57, baseType: !3783, size: 64, offset: 384)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3686, line: 31, size: 704, elements: !3785)
!3785 = !{!3786, !3787, !3788, !3789, !3790}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3784, file: !3686, line: 32, baseType: !301, size: 64)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3784, file: !3686, line: 33, baseType: !120, size: 32, offset: 64)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3784, file: !3686, line: 34, baseType: !144, size: 64, offset: 128)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3784, file: !3686, line: 35, baseType: !3783, size: 64, offset: 192)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3784, file: !3686, line: 43, baseType: !368, size: 448, offset: 256)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3685, file: !3686, line: 58, baseType: !3783, size: 64, offset: 448)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3685, file: !3686, line: 59, baseType: !3684, size: 64, offset: 512)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3685, file: !3686, line: 60, baseType: !3684, size: 64, offset: 576)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3685, file: !3686, line: 61, baseType: !3684, size: 64, offset: 640)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3685, file: !3686, line: 63, baseType: !247, size: 512, offset: 704)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3685, file: !3686, line: 65, baseType: !185, size: 64, offset: 1216)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3685, file: !3686, line: 66, baseType: !144, size: 64, offset: 1280)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3678, file: !88, line: 108, baseType: !3799, size: 64, offset: 64)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DISubroutineType(types: !3801)
!3801 = !{!120, !3670, !3802, !87}
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64)
!3803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !88, line: 63, size: 640, elements: !3804)
!3804 = !{!3805, !3806, !3807}
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3803, file: !88, line: 64, baseType: !3697, size: 64)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3803, file: !88, line: 65, baseType: !120, size: 32, offset: 64)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3803, file: !88, line: 66, baseType: !3808, size: 512, offset: 96)
!3808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 512, elements: !1753)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3678, file: !88, line: 110, baseType: !3810, size: 64, offset: 128)
!3810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3811, size: 64)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{!120, !3670, !7, !3813}
!3813 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !150, line: 164, baseType: !185)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3678, file: !88, line: 111, baseType: !3815, size: 64, offset: 192)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3816 = !DISubroutineType(types: !3817)
!3817 = !{null, !3670, !7}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3678, file: !88, line: 112, baseType: !3819, size: 64, offset: 256)
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{!120, !3670, !3684, !3822, !7, !3824, !2702}
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !215)
!3824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3678, file: !88, line: 117, baseType: !3826, size: 64, offset: 320)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!120, !3670, !7, !7, !144}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3678, file: !88, line: 119, baseType: !3830, size: 64, offset: 384)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = !DISubroutineType(types: !3832)
!3832 = !{null, !3670, !7, !7}
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3678, file: !88, line: 121, baseType: !3834, size: 64, offset: 448)
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3835 = !DISubroutineType(types: !3836)
!3836 = !{!120, !3670, !3837, !507}
!3837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3838, size: 64)
!3838 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !3839, line: 11, flags: DIFlagFwdDecl)
!3839 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3678, file: !88, line: 122, baseType: !3841, size: 64, offset: 512)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{null, !3670, !3837}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3678, file: !88, line: 123, baseType: !3845, size: 64, offset: 576)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!120, !3670, !3802, !3824, !2702}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3671, file: !88, line: 166, baseType: !144, size: 64, offset: 256)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3671, file: !88, line: 167, baseType: !7, size: 32, offset: 320)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3671, file: !88, line: 168, baseType: !7, size: 32, offset: 352)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3671, file: !88, line: 171, baseType: !3697, size: 64, offset: 384)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3671, file: !88, line: 172, baseType: !87, size: 32, offset: 448)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3671, file: !88, line: 173, baseType: !3854, size: 64, offset: 512)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !88, line: 134, flags: DIFlagFwdDecl)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3671, file: !88, line: 175, baseType: !3670, size: 64, offset: 576)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3671, file: !88, line: 182, baseType: !3813, size: 64, offset: 640)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3671, file: !88, line: 183, baseType: !7, size: 32, offset: 704)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3671, file: !88, line: 184, baseType: !7, size: 32, offset: 736)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3671, file: !88, line: 185, baseType: !759, size: 128, offset: 768)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3671, file: !88, line: 186, baseType: !1192, size: 192, offset: 896)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3671, file: !88, line: 187, baseType: !3863, offset: 1088)
!3863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2350)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !244, file: !67, line: 499, baseType: !149, size: 128, offset: 4224)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !244, file: !67, line: 502, baseType: !3866, size: 64, offset: 4352)
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3867, size: 64)
!3867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3868)
!3868 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !67, line: 502, flags: DIFlagFwdDecl)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !244, file: !67, line: 504, baseType: !3870, size: 64, offset: 4416)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !244, file: !67, line: 505, baseType: !174, size: 64, offset: 4480)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !244, file: !67, line: 510, baseType: !174, size: 64, offset: 4544)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !244, file: !67, line: 511, baseType: !3874, size: 64, offset: 4608)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3876)
!3876 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !67, line: 511, flags: DIFlagFwdDecl)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !244, file: !67, line: 513, baseType: !3878, size: 64, offset: 4672)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !67, line: 288, size: 128, elements: !3880)
!3880 = !{!3881, !3882}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3879, file: !67, line: 293, baseType: !7, size: 32)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3879, file: !67, line: 294, baseType: !185, size: 64, offset: 64)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !244, file: !67, line: 515, baseType: !149, size: 128, offset: 4736)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !244, file: !67, line: 526, baseType: !3885, offset: 4864)
!3885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3886, line: 5, elements: !274)
!3886 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !244, file: !67, line: 528, baseType: !3684, size: 64, offset: 4864)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !244, file: !67, line: 529, baseType: !3697, size: 64, offset: 4928)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !244, file: !67, line: 534, baseType: !530, size: 32, offset: 4992)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !244, file: !67, line: 535, baseType: !215, size: 32, offset: 5024)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !244, file: !67, line: 537, baseType: !260, offset: 5056)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !244, file: !67, line: 538, baseType: !149, size: 128, offset: 5056)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !244, file: !67, line: 540, baseType: !3894, size: 64, offset: 5184)
!3894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3895, size: 64)
!3895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3896, line: 54, size: 960, elements: !3897)
!3896 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3897 = !{!3898, !3899, !3900, !3901, !3902, !3903, !3904, !3908, !3912, !3913, !3914, !3915, !3919, !3923, !3924}
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3895, file: !3896, line: 55, baseType: !181, size: 64)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3895, file: !3896, line: 56, baseType: !650, size: 64, offset: 64)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3895, file: !3896, line: 58, baseType: !353, size: 64, offset: 128)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3895, file: !3896, line: 59, baseType: !353, size: 64, offset: 192)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3895, file: !3896, line: 60, baseType: !253, size: 64, offset: 256)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3895, file: !3896, line: 62, baseType: !3404, size: 64, offset: 320)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3895, file: !3896, line: 63, baseType: !3905, size: 64, offset: 384)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 64)
!3906 = !DISubroutineType(types: !3907)
!3907 = !{!301, !243, !3411}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3895, file: !3896, line: 65, baseType: !3909, size: 64, offset: 448)
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3910, size: 64)
!3910 = !DISubroutineType(types: !3911)
!3911 = !{null, !3894}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3895, file: !3896, line: 66, baseType: !3413, size: 64, offset: 512)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3895, file: !3896, line: 68, baseType: !3422, size: 64, offset: 576)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3895, file: !3896, line: 70, baseType: !3208, size: 64, offset: 640)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3895, file: !3896, line: 71, baseType: !3916, size: 64, offset: 704)
!3916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3917, size: 64)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{!2146, !243}
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3895, file: !3896, line: 73, baseType: !3920, size: 64, offset: 768)
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DISubroutineType(types: !3922)
!3922 = !{null, !243, !3240, !3241}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3895, file: !3896, line: 75, baseType: !3417, size: 64, offset: 832)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3895, file: !3896, line: 77, baseType: !3534, size: 64, offset: 896)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !244, file: !67, line: 541, baseType: !353, size: 64, offset: 5248)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !244, file: !67, line: 543, baseType: !3413, size: 64, offset: 5312)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !244, file: !67, line: 544, baseType: !3928, size: 64, offset: 5376)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !67, line: 45, flags: DIFlagFwdDecl)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !244, file: !67, line: 545, baseType: !3931, size: 64, offset: 5440)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3932, size: 64)
!3932 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !67, line: 47, flags: DIFlagFwdDecl)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !244, file: !67, line: 547, baseType: !507, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !244, file: !67, line: 548, baseType: !507, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !244, file: !67, line: 549, baseType: !507, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !244, file: !67, line: 550, baseType: !507, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !157, file: !108, line: 635, baseType: !244, size: 5568, offset: 2304)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !157, file: !108, line: 636, baseType: !367, size: 64, offset: 7872)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !157, file: !108, line: 637, baseType: !367, size: 64, offset: 7936)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !157, file: !108, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !146, file: !108, line: 312, baseType: !156, size: 64, offset: 192)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !146, file: !108, line: 314, baseType: !144, size: 64, offset: 256)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !146, file: !108, line: 315, baseType: !226, size: 64, offset: 320)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !146, file: !108, line: 316, baseType: !3945, size: 64, offset: 384)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !108, line: 69, size: 832, elements: !3947)
!3947 = !{!3948, !3949, !3950, !3953, !3954}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3946, file: !108, line: 70, baseType: !156, size: 64)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3946, file: !108, line: 71, baseType: !149, size: 128, offset: 64)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !3946, file: !108, line: 72, baseType: !3951, size: 64, offset: 192)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 64)
!3952 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !108, line: 72, flags: DIFlagFwdDecl)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !3946, file: !108, line: 73, baseType: !230, size: 8, offset: 256)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3946, file: !108, line: 74, baseType: !247, size: 512, offset: 320)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !146, file: !108, line: 318, baseType: !7, size: 32, offset: 448)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !146, file: !108, line: 319, baseType: !239, size: 16, offset: 480)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !146, file: !108, line: 320, baseType: !239, size: 16, offset: 496)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !146, file: !108, line: 321, baseType: !239, size: 16, offset: 512)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !146, file: !108, line: 322, baseType: !239, size: 16, offset: 528)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !146, file: !108, line: 323, baseType: !7, size: 32, offset: 544)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !146, file: !108, line: 324, baseType: !1371, size: 8, offset: 576)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !146, file: !108, line: 325, baseType: !1371, size: 8, offset: 584)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !146, file: !108, line: 330, baseType: !1371, size: 8, offset: 592)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !146, file: !108, line: 331, baseType: !1371, size: 8, offset: 600)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !146, file: !108, line: 332, baseType: !1371, size: 8, offset: 608)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !146, file: !108, line: 333, baseType: !1371, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !146, file: !108, line: 334, baseType: !1371, size: 8, offset: 624)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !146, file: !108, line: 335, baseType: !1371, size: 8, offset: 632)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !146, file: !108, line: 336, baseType: !880, size: 16, offset: 640)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !146, file: !108, line: 337, baseType: !3824, size: 64, offset: 704)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !146, file: !108, line: 339, baseType: !3972, size: 64, offset: 768)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !108, line: 858, size: 2048, elements: !3974)
!3974 = !{!3975, !3976, !3977, !3989, !3993, !3997, !4001, !4005, !4006, !4010, !4029, !4030, !4031}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3973, file: !108, line: 859, baseType: !149, size: 128)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3973, file: !108, line: 860, baseType: !181, size: 64, offset: 128)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !3973, file: !108, line: 861, baseType: !3978, size: 64, offset: 192)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3980)
!3980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3475, line: 38, size: 256, elements: !3981)
!3981 = !{!3982, !3983, !3984, !3985, !3986, !3987, !3988}
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3980, file: !3475, line: 39, baseType: !216, size: 32)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !3980, file: !3475, line: 39, baseType: !216, size: 32, offset: 32)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !3980, file: !3475, line: 40, baseType: !216, size: 32, offset: 64)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !3980, file: !3475, line: 40, baseType: !216, size: 32, offset: 96)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3980, file: !3475, line: 41, baseType: !216, size: 32, offset: 128)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !3980, file: !3475, line: 41, baseType: !216, size: 32, offset: 160)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3980, file: !3475, line: 42, baseType: !3494, size: 64, offset: 192)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3973, file: !108, line: 862, baseType: !3990, size: 64, offset: 256)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!120, !145, !3978}
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3973, file: !108, line: 863, baseType: !3994, size: 64, offset: 320)
!3994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3995, size: 64)
!3995 = !DISubroutineType(types: !3996)
!3996 = !{null, !145}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3973, file: !108, line: 864, baseType: !3998, size: 64, offset: 384)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{!120, !145, !3505}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3973, file: !108, line: 865, baseType: !4002, size: 64, offset: 448)
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!120, !145}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3973, file: !108, line: 866, baseType: !3994, size: 64, offset: 512)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !3973, file: !108, line: 867, baseType: !4007, size: 64, offset: 576)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{!120, !145, !120}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !3973, file: !108, line: 868, baseType: !4011, size: 64, offset: 640)
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4013)
!4013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !108, line: 795, size: 384, elements: !4014)
!4014 = !{!4015, !4021, !4025, !4026, !4027, !4028}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4013, file: !108, line: 797, baseType: !4016, size: 64)
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 64)
!4017 = !DISubroutineType(types: !4018)
!4018 = !{!4019, !145, !4020}
!4019 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !108, line: 772, baseType: !7)
!4020 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !108, line: 180, baseType: !7)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4013, file: !108, line: 801, baseType: !4022, size: 64, offset: 64)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{!4019, !145}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4013, file: !108, line: 804, baseType: !4022, size: 64, offset: 128)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4013, file: !108, line: 807, baseType: !3994, size: 64, offset: 192)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4013, file: !108, line: 808, baseType: !3994, size: 64, offset: 256)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4013, file: !108, line: 811, baseType: !3994, size: 64, offset: 320)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3973, file: !108, line: 869, baseType: !353, size: 64, offset: 704)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3973, file: !108, line: 870, baseType: !3463, size: 1152, offset: 768)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !3973, file: !108, line: 871, baseType: !4032, size: 128, offset: 1920)
!4032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !108, line: 759, size: 128, elements: !4033)
!4033 = !{!4034, !4035}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4032, file: !108, line: 760, baseType: !260)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4032, file: !108, line: 761, baseType: !149, size: 128)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !146, file: !108, line: 340, baseType: !174, size: 64, offset: 832)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !146, file: !108, line: 346, baseType: !3879, size: 128, offset: 896)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !146, file: !108, line: 348, baseType: !4039, size: 32, offset: 1024)
!4039 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !108, line: 155, baseType: !120)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !146, file: !108, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !146, file: !108, line: 352, baseType: !1371, size: 8, offset: 1064)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !146, file: !108, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !146, file: !108, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !146, file: !108, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !146, file: !108, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !146, file: !108, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !146, file: !108, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !146, file: !108, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !146, file: !108, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !146, file: !108, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !146, file: !108, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !146, file: !108, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !146, file: !108, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !146, file: !108, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !146, file: !108, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !146, file: !108, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !146, file: !108, line: 376, baseType: !7, size: 32, offset: 1120)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !146, file: !108, line: 377, baseType: !7, size: 32, offset: 1152)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !146, file: !108, line: 380, baseType: !4060, size: 64, offset: 1216)
!4060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4061, size: 64)
!4061 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !108, line: 303, flags: DIFlagFwdDecl)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !146, file: !108, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !146, file: !108, line: 383, baseType: !120, size: 32, offset: 1312)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !146, file: !108, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !146, file: !108, line: 387, baseType: !4020, size: 32, offset: 1376)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !146, file: !108, line: 388, baseType: !244, size: 5568, offset: 1408)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !146, file: !108, line: 390, baseType: !120, size: 32, offset: 6976)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !146, file: !108, line: 396, baseType: !7, size: 32, offset: 7008)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !146, file: !108, line: 397, baseType: !4070, size: 8704, offset: 7040)
!4070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !168, size: 8704, elements: !4071)
!4071 = !{!4072}
!4072 = !DISubrange(count: 17)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !146, file: !108, line: 399, baseType: !507, size: 8, offset: 15744)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !146, file: !108, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !146, file: !108, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !146, file: !108, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !146, file: !108, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !146, file: !108, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !146, file: !108, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !146, file: !108, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !146, file: !108, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !146, file: !108, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !146, file: !108, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !146, file: !108, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !146, file: !108, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !146, file: !108, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !146, file: !108, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !146, file: !108, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !146, file: !108, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !146, file: !108, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !146, file: !108, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !146, file: !108, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !146, file: !108, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !146, file: !108, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !146, file: !108, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !146, file: !108, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !146, file: !108, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !146, file: !108, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !146, file: !108, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !146, file: !108, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !146, file: !108, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !146, file: !108, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !146, file: !108, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !146, file: !108, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !146, file: !108, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !146, file: !108, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !146, file: !108, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !146, file: !108, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !146, file: !108, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !146, file: !108, line: 450, baseType: !4111, size: 16, offset: 15792)
!4111 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !108, line: 206, baseType: !239)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !146, file: !108, line: 451, baseType: !768, size: 32, offset: 15808)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !146, file: !108, line: 453, baseType: !3808, size: 512, offset: 15840)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !146, file: !108, line: 454, baseType: !655, size: 64, offset: 16384)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !146, file: !108, line: 455, baseType: !367, size: 64, offset: 16448)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !146, file: !108, line: 456, baseType: !120, size: 32, offset: 16512)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !146, file: !108, line: 457, baseType: !4118, size: 1088, offset: 16576)
!4118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 1088, elements: !4071)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !146, file: !108, line: 458, baseType: !4118, size: 1088, offset: 17664)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !146, file: !108, line: 469, baseType: !353, size: 64, offset: 18752)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !146, file: !108, line: 471, baseType: !4122, size: 64, offset: 18816)
!4122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4123, size: 64)
!4123 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !108, line: 304, flags: DIFlagFwdDecl)
!4124 = !DIDerivedType(tag: DW_TAG_member, scope: !146, file: !108, line: 478, baseType: !4125, size: 64, offset: 18880)
!4125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !146, file: !108, line: 478, size: 64, elements: !4126)
!4126 = !{!4127, !4155}
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4125, file: !108, line: 479, baseType: !4128, size: 64)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !4130, line: 323, size: 1024, elements: !4131)
!4130 = !DIFile(filename: "drivers/pci/pci.h", directory: "/home/lizy2001/genbc/linux")
!4131 = !{!4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4154}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4129, file: !4130, line: 324, baseType: !120, size: 32)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "nres", scope: !4129, file: !4130, line: 325, baseType: !120, size: 32, offset: 32)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !4129, file: !4130, line: 326, baseType: !215, size: 32, offset: 64)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !4129, file: !4130, line: 327, baseType: !880, size: 16, offset: 96)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "total_VFs", scope: !4129, file: !4130, line: 328, baseType: !880, size: 16, offset: 112)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "initial_VFs", scope: !4129, file: !4130, line: 329, baseType: !880, size: 16, offset: 128)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "num_VFs", scope: !4129, file: !4130, line: 330, baseType: !880, size: 16, offset: 144)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4129, file: !4130, line: 331, baseType: !880, size: 16, offset: 160)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !4129, file: !4130, line: 332, baseType: !880, size: 16, offset: 176)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "vf_device", scope: !4129, file: !4130, line: 333, baseType: !880, size: 16, offset: 192)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "pgsz", scope: !4129, file: !4130, line: 334, baseType: !215, size: 32, offset: 224)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4129, file: !4130, line: 335, baseType: !1371, size: 8, offset: 256)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "max_VF_buses", scope: !4129, file: !4130, line: 336, baseType: !1371, size: 8, offset: 264)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "driver_max_VFs", scope: !4129, file: !4130, line: 337, baseType: !880, size: 16, offset: 272)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4129, file: !4130, line: 338, baseType: !145, size: 64, offset: 320)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4129, file: !4130, line: 339, baseType: !145, size: 64, offset: 384)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4129, file: !4130, line: 340, baseType: !215, size: 32, offset: 448)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4129, file: !4130, line: 341, baseType: !1371, size: 8, offset: 480)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4129, file: !4130, line: 342, baseType: !880, size: 16, offset: 496)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4129, file: !4130, line: 343, baseType: !880, size: 16, offset: 512)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "barsz", scope: !4129, file: !4130, line: 344, baseType: !4153, size: 384, offset: 576)
!4153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !172, size: 384, elements: !1643)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_autoprobe", scope: !4129, file: !4130, line: 345, baseType: !507, size: 8, offset: 960)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4125, file: !108, line: 480, baseType: !145, size: 64)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !146, file: !108, line: 482, baseType: !880, size: 16, offset: 18944)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !146, file: !108, line: 483, baseType: !1371, size: 8, offset: 18960)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !146, file: !108, line: 497, baseType: !880, size: 16, offset: 18976)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !146, file: !108, line: 498, baseType: !173, size: 64, offset: 19008)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !146, file: !108, line: 499, baseType: !347, size: 64, offset: 19072)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !146, file: !108, line: 500, baseType: !301, size: 64, offset: 19136)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !146, file: !108, line: 502, baseType: !185, size: 64, offset: 19200)
!4163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4164, size: 64)
!4164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_host_bridge", file: !108, line: 524, size: 6656, elements: !4165)
!4165 = !{!4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4179, !4185, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4207}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4164, file: !108, line: 525, baseType: !244, size: 5568)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4164, file: !108, line: 526, baseType: !156, size: 64, offset: 5568)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4164, file: !108, line: 527, baseType: !195, size: 64, offset: 5632)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "child_ops", scope: !4164, file: !108, line: 528, baseType: !195, size: 64, offset: 5696)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4164, file: !108, line: 529, baseType: !144, size: 64, offset: 5760)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "busnr", scope: !4164, file: !108, line: 530, baseType: !120, size: 32, offset: 5824)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !4164, file: !108, line: 531, baseType: !149, size: 128, offset: 5888)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ranges", scope: !4164, file: !108, line: 532, baseType: !149, size: 128, offset: 6016)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "swizzle_irq", scope: !4164, file: !108, line: 533, baseType: !4175, size: 64, offset: 6144)
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{!1371, !145, !4178}
!4178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "map_irq", scope: !4164, file: !108, line: 534, baseType: !4180, size: 64, offset: 6208)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!120, !4183, !1371, !1371}
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "release_fn", scope: !4164, file: !108, line: 535, baseType: !4186, size: 64, offset: 6272)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{null, !4163}
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "release_data", scope: !4164, file: !108, line: 536, baseType: !144, size: 64, offset: 6336)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !4164, file: !108, line: 537, baseType: !222, size: 64, offset: 6400)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_reset_delay", scope: !4164, file: !108, line: 538, baseType: !7, size: 1, offset: 6464, flags: DIFlagBitField, extraData: i64 6464)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "no_ext_tags", scope: !4164, file: !108, line: 539, baseType: !7, size: 1, offset: 6465, flags: DIFlagBitField, extraData: i64 6464)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "native_aer", scope: !4164, file: !108, line: 540, baseType: !7, size: 1, offset: 6466, flags: DIFlagBitField, extraData: i64 6464)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "native_pcie_hotplug", scope: !4164, file: !108, line: 541, baseType: !7, size: 1, offset: 6467, flags: DIFlagBitField, extraData: i64 6464)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "native_shpc_hotplug", scope: !4164, file: !108, line: 542, baseType: !7, size: 1, offset: 6468, flags: DIFlagBitField, extraData: i64 6464)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "native_pme", scope: !4164, file: !108, line: 543, baseType: !7, size: 1, offset: 6469, flags: DIFlagBitField, extraData: i64 6464)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "native_ltr", scope: !4164, file: !108, line: 544, baseType: !7, size: 1, offset: 6470, flags: DIFlagBitField, extraData: i64 6464)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "native_dpc", scope: !4164, file: !108, line: 545, baseType: !7, size: 1, offset: 6471, flags: DIFlagBitField, extraData: i64 6464)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_config", scope: !4164, file: !108, line: 546, baseType: !7, size: 1, offset: 6472, flags: DIFlagBitField, extraData: i64 6464)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "size_windows", scope: !4164, file: !108, line: 547, baseType: !7, size: 1, offset: 6473, flags: DIFlagBitField, extraData: i64 6464)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "align_resource", scope: !4164, file: !108, line: 550, baseType: !4202, size: 64, offset: 6528)
!4202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4203, size: 64)
!4203 = !DISubroutineType(types: !4204)
!4204 = !{!172, !145, !4205, !172, !172, !172}
!4205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4206, size: 64)
!4206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4164, file: !108, line: 555, baseType: !2349, align: 512, offset: 6656)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev_resource", file: !3, line: 31, size: 576, elements: !4210)
!4210 = !{!4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218}
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4209, file: !3, line: 32, baseType: !149, size: 128)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !4209, file: !3, line: 33, baseType: !167, size: 64, offset: 128)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4209, file: !3, line: 34, baseType: !145, size: 64, offset: 192)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4209, file: !3, line: 35, baseType: !172, size: 64, offset: 256)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4209, file: !3, line: 36, baseType: !172, size: 64, offset: 320)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "add_size", scope: !4209, file: !3, line: 37, baseType: !172, size: 64, offset: 384)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !4209, file: !3, line: 38, baseType: !172, size: 64, offset: 448)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4209, file: !3, line: 39, baseType: !185, size: 64, offset: 512)
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4220, size: 64)
!4220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device", file: !4221, line: 351, size: 10880, elements: !4222)
!4221 = !DIFile(filename: "./include/acpi/acpi_bus.h", directory: "/home/lizy2001/genbc/linux")
!4222 = !{!4223, !4224, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4242, !4259, !4332, !4361, !4385, !4406, !4410, !4419, !4451, !4465, !4487, !4491, !4492, !4493, !4494, !4495, !4496, !4497}
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !4220, file: !4221, line: 352, baseType: !120, size: 32)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4220, file: !4221, line: 353, baseType: !4225, size: 64, offset: 64)
!4225 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !4226, line: 424, baseType: !144)
!4226 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4220, file: !4221, line: 354, baseType: !3693, size: 192, offset: 128)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4220, file: !4221, line: 355, baseType: !4219, size: 64, offset: 320)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4220, file: !4221, line: 356, baseType: !149, size: 128, offset: 384)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4220, file: !4221, line: 357, baseType: !149, size: 128, offset: 512)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_list", scope: !4220, file: !4221, line: 358, baseType: !149, size: 128, offset: 640)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "del_list", scope: !4220, file: !4221, line: 359, baseType: !149, size: 128, offset: 768)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4220, file: !4221, line: 360, baseType: !4234, size: 32, offset: 896)
!4234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_status", file: !4221, line: 179, size: 32, elements: !4235)
!4235 = !{!4236, !4237, !4238, !4239, !4240, !4241}
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !4234, file: !4221, line: 180, baseType: !215, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4234, file: !4221, line: 181, baseType: !215, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "show_in_ui", scope: !4234, file: !4221, line: 182, baseType: !215, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "functional", scope: !4234, file: !4221, line: 183, baseType: !215, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "battery_present", scope: !4234, file: !4221, line: 184, baseType: !215, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4234, file: !4221, line: 185, baseType: !215, size: 27, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4220, file: !4221, line: 361, baseType: !4243, size: 32, offset: 928)
!4243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_flags", file: !4221, line: 190, size: 32, elements: !4244)
!4244 = !{!4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258}
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_status", scope: !4243, file: !4221, line: 191, baseType: !215, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !4243, file: !4221, line: 192, baseType: !215, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "ejectable", scope: !4243, file: !4221, line: 193, baseType: !215, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "power_manageable", scope: !4243, file: !4221, line: 194, baseType: !215, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4243, file: !4221, line: 195, baseType: !215, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !4243, file: !4221, line: 196, baseType: !215, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !4243, file: !4221, line: 197, baseType: !215, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_notify", scope: !4243, file: !4221, line: 198, baseType: !215, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "is_dock_station", scope: !4243, file: !4221, line: 199, baseType: !215, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible_ok", scope: !4243, file: !4221, line: 200, baseType: !215, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma", scope: !4243, file: !4221, line: 201, baseType: !215, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "cca_seen", scope: !4243, file: !4221, line: 202, baseType: !215, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "enumeration_by_parent", scope: !4243, file: !4221, line: 203, baseType: !215, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4243, file: !4221, line: 204, baseType: !215, size: 19, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "pnp", scope: !4220, file: !4221, line: 362, baseType: !4260, size: 960, offset: 960)
!4260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_pnp", file: !4221, line: 234, size: 960, elements: !4261)
!4261 = !{!4262, !4264, !4271, !4273, !4274, !4275, !4280, !4283}
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "bus_id", scope: !4260, file: !4221, line: 235, baseType: !4263, size: 64)
!4263 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_id", file: !4221, line: 217, baseType: !2052)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4260, file: !4221, line: 236, baseType: !4265, size: 32, offset: 64)
!4265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_type", file: !4221, line: 227, size: 32, elements: !4266)
!4266 = !{!4267, !4268, !4269, !4270}
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_id", scope: !4265, file: !4221, line: 228, baseType: !215, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4265, file: !4221, line: 229, baseType: !215, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "platform_id", scope: !4265, file: !4221, line: 230, baseType: !215, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4265, file: !4221, line: 231, baseType: !215, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4260, file: !4221, line: 237, baseType: !4272, size: 64, offset: 128)
!4272 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_address", file: !4221, line: 218, baseType: !174)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !4260, file: !4221, line: 238, baseType: !301, size: 64, offset: 192)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4260, file: !4221, line: 239, baseType: !149, size: 128, offset: 256)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !4260, file: !4221, line: 240, baseType: !4276, size: 320, offset: 384)
!4276 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_name", file: !4221, line: 219, baseType: !4277)
!4277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 320, elements: !4278)
!4278 = !{!4279}
!4279 = !DISubrange(count: 40)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "device_class", scope: !4260, file: !4221, line: 241, baseType: !4281, size: 160, offset: 704)
!4281 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_class", file: !4221, line: 220, baseType: !4282)
!4282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 160, elements: !2220)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "str_obj", scope: !4260, file: !4221, line: 242, baseType: !4284, size: 64, offset: 896)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !4226, line: 899, size: 192, elements: !4286)
!4286 = !{!4287, !4289, !4294, !4300, !4306, !4312, !4318, !4326}
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4285, file: !4226, line: 900, baseType: !4288, size: 32)
!4288 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !4226, line: 635, baseType: !215)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !4285, file: !4226, line: 904, baseType: !4290, size: 128)
!4290 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4285, file: !4226, line: 901, size: 128, elements: !4291)
!4291 = !{!4292, !4293}
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4290, file: !4226, line: 902, baseType: !4288, size: 32)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4290, file: !4226, line: 903, baseType: !174, size: 64, offset: 64)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4285, file: !4226, line: 910, baseType: !4295, size: 128)
!4295 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4285, file: !4226, line: 906, size: 128, elements: !4296)
!4296 = !{!4297, !4298, !4299}
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4295, file: !4226, line: 907, baseType: !4288, size: 32)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4295, file: !4226, line: 908, baseType: !215, size: 32, offset: 32)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4295, file: !4226, line: 909, baseType: !301, size: 64, offset: 64)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4285, file: !4226, line: 916, baseType: !4301, size: 128)
!4301 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4285, file: !4226, line: 912, size: 128, elements: !4302)
!4302 = !{!4303, !4304, !4305}
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4301, file: !4226, line: 913, baseType: !4288, size: 32)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4301, file: !4226, line: 914, baseType: !215, size: 32, offset: 32)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4301, file: !4226, line: 915, baseType: !4178, size: 64, offset: 64)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !4285, file: !4226, line: 922, baseType: !4307, size: 128)
!4307 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4285, file: !4226, line: 918, size: 128, elements: !4308)
!4308 = !{!4309, !4310, !4311}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4307, file: !4226, line: 919, baseType: !4288, size: 32)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4307, file: !4226, line: 920, baseType: !215, size: 32, offset: 32)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !4307, file: !4226, line: 921, baseType: !4284, size: 64, offset: 64)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !4285, file: !4226, line: 928, baseType: !4313, size: 128)
!4313 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4285, file: !4226, line: 924, size: 128, elements: !4314)
!4314 = !{!4315, !4316, !4317}
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4313, file: !4226, line: 925, baseType: !4288, size: 32)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !4313, file: !4226, line: 926, baseType: !4288, size: 32, offset: 32)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4313, file: !4226, line: 927, baseType: !4225, size: 64, offset: 64)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !4285, file: !4226, line: 935, baseType: !4319, size: 192)
!4319 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4285, file: !4226, line: 930, size: 192, elements: !4320)
!4320 = !{!4321, !4322, !4323, !4325}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4319, file: !4226, line: 931, baseType: !4288, size: 32)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !4319, file: !4226, line: 932, baseType: !215, size: 32, offset: 32)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !4319, file: !4226, line: 933, baseType: !4324, size: 64, offset: 64)
!4324 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !4226, line: 128, baseType: !174)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !4319, file: !4226, line: 934, baseType: !215, size: 32, offset: 128)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !4285, file: !4226, line: 941, baseType: !4327, size: 96)
!4327 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4285, file: !4226, line: 937, size: 96, elements: !4328)
!4328 = !{!4329, !4330, !4331}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4327, file: !4226, line: 938, baseType: !4288, size: 32)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !4327, file: !4226, line: 939, baseType: !215, size: 32, offset: 32)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !4327, file: !4226, line: 940, baseType: !215, size: 32, offset: 64)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4220, file: !4221, line: 363, baseType: !4333, size: 1344, offset: 1920)
!4333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power", file: !4221, line: 275, size: 1344, elements: !4334)
!4334 = !{!4335, !4336, !4346}
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4333, file: !4221, line: 276, baseType: !120, size: 32)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4333, file: !4221, line: 277, baseType: !4337, size: 32, offset: 32)
!4337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_flags", file: !4221, line: 254, size: 32, elements: !4338)
!4338 = !{!4339, !4340, !4341, !4342, !4343, !4344, !4345}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_get", scope: !4337, file: !4221, line: 255, baseType: !215, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "power_resources", scope: !4337, file: !4221, line: 256, baseType: !215, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "inrush_current", scope: !4337, file: !4221, line: 257, baseType: !215, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "power_removed", scope: !4337, file: !4221, line: 258, baseType: !215, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_parent", scope: !4337, file: !4221, line: 259, baseType: !215, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "dsw_present", scope: !4337, file: !4221, line: 260, baseType: !215, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4337, file: !4221, line: 261, baseType: !215, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4333, file: !4221, line: 278, baseType: !4347, size: 1280, offset: 64)
!4347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4348, size: 1280, elements: !4359)
!4348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_state", file: !4221, line: 264, size: 256, elements: !4349)
!4349 = !{!4350, !4356, !4357, !4358}
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4348, file: !4221, line: 269, baseType: !4351, size: 8)
!4351 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4348, file: !4221, line: 265, size: 8, elements: !4352)
!4352 = !{!4353, !4354, !4355}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4351, file: !4221, line: 266, baseType: !1371, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_set", scope: !4351, file: !4221, line: 267, baseType: !1371, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4351, file: !4221, line: 268, baseType: !1371, size: 6, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4348, file: !4221, line: 270, baseType: !120, size: 32, offset: 32)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4348, file: !4221, line: 271, baseType: !120, size: 32, offset: 64)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4348, file: !4221, line: 272, baseType: !149, size: 128, offset: 128)
!4359 = !{!4360}
!4360 = !DISubrange(count: 5)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4220, file: !4221, line: 364, baseType: !4362, size: 640, offset: 3264)
!4362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup", file: !4221, line: 315, size: 640, elements: !4363)
!4363 = !{!4364, !4365, !4366, !4367, !4368, !4373, !4382, !4383, !4384}
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_device", scope: !4362, file: !4221, line: 316, baseType: !4225, size: 64)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_number", scope: !4362, file: !4221, line: 317, baseType: !174, size: 64, offset: 64)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "sleep_state", scope: !4362, file: !4221, line: 318, baseType: !174, size: 64, offset: 128)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4362, file: !4221, line: 319, baseType: !149, size: 128, offset: 192)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4362, file: !4221, line: 320, baseType: !4369, size: 8, offset: 320)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_flags", file: !4221, line: 305, size: 8, elements: !4370)
!4370 = !{!4371, !4372}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4369, file: !4221, line: 306, baseType: !1371, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_present", scope: !4369, file: !4221, line: 307, baseType: !1371, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4362, file: !4221, line: 321, baseType: !4374, size: 128, offset: 384)
!4374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_context", file: !4221, line: 310, size: 128, elements: !4375)
!4375 = !{!4376, !4381}
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4374, file: !4221, line: 311, baseType: !4377, size: 64)
!4377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4378, size: 64)
!4378 = !DISubroutineType(types: !4379)
!4379 = !{null, !4380}
!4380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4374, size: 64)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4374, file: !4221, line: 312, baseType: !243, size: 64, offset: 64)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !4362, file: !4221, line: 322, baseType: !3570, size: 64, offset: 512)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_count", scope: !4362, file: !4221, line: 323, baseType: !120, size: 32, offset: 576)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "enable_count", scope: !4362, file: !4221, line: 324, baseType: !120, size: 32, offset: 608)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !4220, file: !4221, line: 365, baseType: !4386, size: 192, offset: 3904)
!4386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf", file: !4221, line: 297, size: 192, elements: !4387)
!4387 = !{!4388, !4389, !4393, !4394}
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4386, file: !4221, line: 298, baseType: !120, size: 32)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4386, file: !4221, line: 299, baseType: !4390, size: 8, offset: 32)
!4390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_flags", file: !4221, line: 283, size: 8, elements: !4391)
!4391 = !{!4392}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4390, file: !4221, line: 284, baseType: !1371, size: 8, flags: DIFlagBitField, extraData: i64 0)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "state_count", scope: !4386, file: !4221, line: 300, baseType: !120, size: 32, offset: 64)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4386, file: !4221, line: 301, baseType: !4395, size: 64, offset: 128)
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 64)
!4396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_state", file: !4221, line: 287, size: 64, elements: !4397)
!4397 = !{!4398, !4403, !4404, !4405}
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4396, file: !4221, line: 291, baseType: !4399, size: 8)
!4399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4396, file: !4221, line: 288, size: 8, elements: !4400)
!4400 = !{!4401, !4402}
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4399, file: !4221, line: 289, baseType: !1371, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4399, file: !4221, line: 290, baseType: !1371, size: 7, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4396, file: !4221, line: 292, baseType: !1371, size: 8, offset: 8)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !4396, file: !4221, line: 293, baseType: !1371, size: 8, offset: 16)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4396, file: !4221, line: 294, baseType: !120, size: 32, offset: 32)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4220, file: !4221, line: 366, baseType: !4407, size: 64, offset: 4096)
!4407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_dir", file: !4221, line: 209, size: 64, elements: !4408)
!4408 = !{!4409}
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4407, file: !4221, line: 210, baseType: !226, size: 64)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4220, file: !4221, line: 367, baseType: !4411, size: 384, offset: 4160)
!4411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_data", file: !4221, line: 341, size: 384, elements: !4412)
!4412 = !{!4413, !4416, !4417, !4418}
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4411, file: !4221, line: 342, baseType: !4414, size: 64)
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4415, size: 64)
!4415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4285)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4411, file: !4221, line: 343, baseType: !149, size: 128, offset: 64)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible", scope: !4411, file: !4221, line: 344, baseType: !4414, size: 64, offset: 192)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "subnodes", scope: !4411, file: !4221, line: 345, baseType: !149, size: 128, offset: 256)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4220, file: !4221, line: 368, baseType: !4420, size: 64, offset: 4544)
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4421, size: 64)
!4421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_scan_handler", file: !4221, line: 122, size: 1216, elements: !4422)
!4422 = !{!4423, !4424, !4425, !4430, !4434, !4438, !4439, !4440}
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4421, file: !4221, line: 123, baseType: !3485, size: 64)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !4421, file: !4221, line: 124, baseType: !149, size: 128, offset: 64)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4421, file: !4221, line: 125, baseType: !4426, size: 64, offset: 192)
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 64)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{!507, !181, !4429}
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4421, file: !4221, line: 126, baseType: !4431, size: 64, offset: 256)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{!120, !4219, !3485}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4421, file: !4221, line: 127, baseType: !4435, size: 64, offset: 320)
!4435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4436, size: 64)
!4436 = !DISubroutineType(types: !4437)
!4437 = !{null, !4219}
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !4421, file: !4221, line: 128, baseType: !3413, size: 64, offset: 384)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !4421, file: !4221, line: 129, baseType: !3413, size: 64, offset: 448)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4421, file: !4221, line: 130, baseType: !4441, size: 704, offset: 512)
!4441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_profile", file: !4221, line: 108, size: 704, elements: !4442)
!4442 = !{!4443, !4444, !4448, !4449, !4450}
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4441, file: !4221, line: 109, baseType: !247, size: 512)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "scan_dependent", scope: !4441, file: !4221, line: 110, baseType: !4445, size: 64, offset: 512)
!4445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4446, size: 64)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{!120, !4219}
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "notify_online", scope: !4441, file: !4221, line: 111, baseType: !4435, size: 64, offset: 576)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4441, file: !4221, line: 112, baseType: !507, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "demand_offline", scope: !4441, file: !4221, line: 113, baseType: !507, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "hp", scope: !4220, file: !4221, line: 369, baseType: !4452, size: 64, offset: 4608)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_context", file: !4221, line: 138, size: 256, elements: !4454)
!4454 = !{!4455, !4456, !4460, !4464}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4453, file: !4221, line: 139, baseType: !4219, size: 64)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4453, file: !4221, line: 140, baseType: !4457, size: 64, offset: 64)
!4457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4458, size: 64)
!4458 = !DISubroutineType(types: !4459)
!4459 = !{!120, !4219, !215}
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4453, file: !4221, line: 141, baseType: !4461, size: 64, offset: 128)
!4461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4462, size: 64)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{null, !4219, !215}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !4453, file: !4221, line: 142, baseType: !4435, size: 64, offset: 192)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4220, file: !4221, line: 370, baseType: !4466, size: 64, offset: 4672)
!4466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4467, size: 64)
!4467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_driver", file: !4221, line: 162, size: 2816, elements: !4468)
!4468 = !{!4469, !4473, !4474, !4475, !4476, !4485, !4486}
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4467, file: !4221, line: 163, baseType: !4470, size: 640)
!4470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 640, elements: !4471)
!4471 = !{!4472}
!4472 = !DISubrange(count: 80)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4467, file: !4221, line: 164, baseType: !4470, size: 640, offset: 640)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4467, file: !4221, line: 165, baseType: !3485, size: 64, offset: 1280)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4467, file: !4221, line: 166, baseType: !7, size: 32, offset: 1344)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4467, file: !4221, line: 167, baseType: !4477, size: 192, offset: 1408)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_ops", file: !4221, line: 154, size: 192, elements: !4478)
!4478 = !{!4479, !4481, !4483}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !4477, file: !4221, line: 155, baseType: !4480, size: 64)
!4480 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_add", file: !4221, line: 150, baseType: !4445)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4477, file: !4221, line: 156, baseType: !4482, size: 64, offset: 64)
!4482 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_remove", file: !4221, line: 151, baseType: !4445)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4477, file: !4221, line: 157, baseType: !4484, size: 64, offset: 128)
!4484 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_notify", file: !4221, line: 152, baseType: !4461)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !4467, file: !4221, line: 168, baseType: !3463, size: 1152, offset: 1600)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4467, file: !4221, line: 169, baseType: !650, size: 64, offset: 2752)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "driver_gpios", scope: !4220, file: !4221, line: 371, baseType: !4488, size: 64, offset: 4736)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4490)
!4490 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_mapping", file: !4221, line: 348, flags: DIFlagFwdDecl)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4220, file: !4221, line: 372, baseType: !144, size: 64, offset: 4800)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4220, file: !4221, line: 373, baseType: !244, size: 5568, offset: 4864)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_count", scope: !4220, file: !4221, line: 374, baseType: !7, size: 32, offset: 10432)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "dep_unmet", scope: !4220, file: !4221, line: 375, baseType: !7, size: 32, offset: 10464)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_list", scope: !4220, file: !4221, line: 376, baseType: !149, size: 128, offset: 10496)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_lock", scope: !4220, file: !4221, line: 377, baseType: !1192, size: 192, offset: 10624)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4220, file: !4221, line: 378, baseType: !4435, size: 64, offset: 10816)
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4499, size: 64)
!4499 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !153)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4502)
!4502 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !120)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4504, size: 64)
!4504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4499)
!4505 = !{!4506, !0}
!4506 = !DIGlobalVariableExpression(var: !4507, expr: !DIExpression())
!4507 = distinct !DIGlobalVariable(name: "pci_flags", scope: !2, file: !3, line: 28, type: !7, isLocal: false, isDefinition: true)
!4508 = !{i32 7, !"Dwarf Version", i32 4}
!4509 = !{i32 2, !"Debug Info Version", i32 3}
!4510 = !{i32 1, !"wchar_size", i32 2}
!4511 = !{i32 1, !"Code Model", i32 2}
!4512 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4513 = distinct !DISubprogram(name: "pci_setup_cardbus", scope: !3, file: !3, line: 506, type: !204, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!4514 = !DILocalVariable(name: "bus", arg: 1, scope: !4513, file: !3, line: 506, type: !156)
!4515 = !DILocation(line: 506, column: 40, scope: !4513)
!4516 = !DILocalVariable(name: "bridge", scope: !4513, file: !3, line: 508, type: !145)
!4517 = !DILocation(line: 508, column: 18, scope: !4513)
!4518 = !DILocation(line: 508, column: 27, scope: !4513)
!4519 = !DILocation(line: 508, column: 32, scope: !4513)
!4520 = !DILocalVariable(name: "res", scope: !4513, file: !3, line: 509, type: !167)
!4521 = !DILocation(line: 509, column: 19, scope: !4513)
!4522 = !DILocalVariable(name: "region", scope: !4513, file: !3, line: 510, type: !4523)
!4523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus_region", file: !108, line: 754, size: 128, elements: !4524)
!4524 = !{!4525, !4527}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4523, file: !108, line: 755, baseType: !4526, size: 64)
!4526 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_addr_t", file: !108, line: 749, baseType: !174)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4523, file: !108, line: 756, baseType: !4526, size: 64, offset: 64)
!4528 = !DILocation(line: 510, column: 24, scope: !4513)
!4529 = !DILocation(line: 512, column: 2, scope: !4513)
!4530 = !DILocation(line: 515, column: 8, scope: !4513)
!4531 = !DILocation(line: 515, column: 13, scope: !4513)
!4532 = !DILocation(line: 515, column: 6, scope: !4513)
!4533 = !DILocation(line: 516, column: 26, scope: !4513)
!4534 = !DILocation(line: 516, column: 34, scope: !4513)
!4535 = !DILocation(line: 516, column: 48, scope: !4513)
!4536 = !DILocation(line: 516, column: 2, scope: !4513)
!4537 = !DILocation(line: 517, column: 6, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 517, column: 6)
!4539 = !DILocation(line: 517, column: 11, scope: !4538)
!4540 = !DILocation(line: 517, column: 17, scope: !4538)
!4541 = !DILocation(line: 517, column: 6, scope: !4513)
!4542 = !DILocation(line: 522, column: 3, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 517, column: 34)
!4544 = !DILocation(line: 523, column: 26, scope: !4543)
!4545 = !DILocation(line: 524, column: 13, scope: !4543)
!4546 = !DILocation(line: 524, column: 6, scope: !4543)
!4547 = !DILocation(line: 523, column: 3, scope: !4543)
!4548 = !DILocation(line: 525, column: 26, scope: !4543)
!4549 = !DILocation(line: 526, column: 13, scope: !4543)
!4550 = !DILocation(line: 526, column: 6, scope: !4543)
!4551 = !DILocation(line: 525, column: 3, scope: !4543)
!4552 = !DILocation(line: 527, column: 2, scope: !4543)
!4553 = !DILocation(line: 529, column: 8, scope: !4513)
!4554 = !DILocation(line: 529, column: 13, scope: !4513)
!4555 = !DILocation(line: 529, column: 6, scope: !4513)
!4556 = !DILocation(line: 530, column: 26, scope: !4513)
!4557 = !DILocation(line: 530, column: 34, scope: !4513)
!4558 = !DILocation(line: 530, column: 48, scope: !4513)
!4559 = !DILocation(line: 530, column: 2, scope: !4513)
!4560 = !DILocation(line: 531, column: 6, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 531, column: 6)
!4562 = !DILocation(line: 531, column: 11, scope: !4561)
!4563 = !DILocation(line: 531, column: 17, scope: !4561)
!4564 = !DILocation(line: 531, column: 6, scope: !4513)
!4565 = !DILocation(line: 532, column: 3, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 531, column: 34)
!4567 = !DILocation(line: 533, column: 26, scope: !4566)
!4568 = !DILocation(line: 534, column: 13, scope: !4566)
!4569 = !DILocation(line: 534, column: 6, scope: !4566)
!4570 = !DILocation(line: 533, column: 3, scope: !4566)
!4571 = !DILocation(line: 535, column: 26, scope: !4566)
!4572 = !DILocation(line: 536, column: 13, scope: !4566)
!4573 = !DILocation(line: 536, column: 6, scope: !4566)
!4574 = !DILocation(line: 535, column: 3, scope: !4566)
!4575 = !DILocation(line: 537, column: 2, scope: !4566)
!4576 = !DILocation(line: 539, column: 8, scope: !4513)
!4577 = !DILocation(line: 539, column: 13, scope: !4513)
!4578 = !DILocation(line: 539, column: 6, scope: !4513)
!4579 = !DILocation(line: 540, column: 26, scope: !4513)
!4580 = !DILocation(line: 540, column: 34, scope: !4513)
!4581 = !DILocation(line: 540, column: 48, scope: !4513)
!4582 = !DILocation(line: 540, column: 2, scope: !4513)
!4583 = !DILocation(line: 541, column: 6, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 541, column: 6)
!4585 = !DILocation(line: 541, column: 11, scope: !4584)
!4586 = !DILocation(line: 541, column: 17, scope: !4584)
!4587 = !DILocation(line: 541, column: 6, scope: !4513)
!4588 = !DILocation(line: 542, column: 3, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 541, column: 35)
!4590 = !DILocation(line: 543, column: 26, scope: !4589)
!4591 = !DILocation(line: 544, column: 13, scope: !4589)
!4592 = !DILocation(line: 544, column: 6, scope: !4589)
!4593 = !DILocation(line: 543, column: 3, scope: !4589)
!4594 = !DILocation(line: 545, column: 26, scope: !4589)
!4595 = !DILocation(line: 546, column: 13, scope: !4589)
!4596 = !DILocation(line: 546, column: 6, scope: !4589)
!4597 = !DILocation(line: 545, column: 3, scope: !4589)
!4598 = !DILocation(line: 547, column: 2, scope: !4589)
!4599 = !DILocation(line: 549, column: 8, scope: !4513)
!4600 = !DILocation(line: 549, column: 13, scope: !4513)
!4601 = !DILocation(line: 549, column: 6, scope: !4513)
!4602 = !DILocation(line: 550, column: 26, scope: !4513)
!4603 = !DILocation(line: 550, column: 34, scope: !4513)
!4604 = !DILocation(line: 550, column: 48, scope: !4513)
!4605 = !DILocation(line: 550, column: 2, scope: !4513)
!4606 = !DILocation(line: 551, column: 6, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 551, column: 6)
!4608 = !DILocation(line: 551, column: 11, scope: !4607)
!4609 = !DILocation(line: 551, column: 17, scope: !4607)
!4610 = !DILocation(line: 551, column: 6, scope: !4513)
!4611 = !DILocation(line: 552, column: 3, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 551, column: 35)
!4613 = !DILocation(line: 553, column: 26, scope: !4612)
!4614 = !DILocation(line: 554, column: 13, scope: !4612)
!4615 = !DILocation(line: 554, column: 6, scope: !4612)
!4616 = !DILocation(line: 553, column: 3, scope: !4612)
!4617 = !DILocation(line: 555, column: 26, scope: !4612)
!4618 = !DILocation(line: 556, column: 13, scope: !4612)
!4619 = !DILocation(line: 556, column: 6, scope: !4612)
!4620 = !DILocation(line: 555, column: 3, scope: !4612)
!4621 = !DILocation(line: 557, column: 2, scope: !4612)
!4622 = !DILocation(line: 558, column: 1, scope: !4513)
!4623 = distinct !DISubprogram(name: "pcibios_setup_bridge", scope: !3, file: !3, line: 684, type: !4624, scopeLine: 685, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!4624 = !DISubroutineType(types: !4625)
!4625 = !{null, !156, !185}
!4626 = !DILocalVariable(name: "bus", arg: 1, scope: !4623, file: !3, line: 684, type: !156)
!4627 = !DILocation(line: 684, column: 50, scope: !4623)
!4628 = !DILocalVariable(name: "type", arg: 2, scope: !4623, file: !3, line: 684, type: !185)
!4629 = !DILocation(line: 684, column: 69, scope: !4623)
!4630 = !DILocation(line: 686, column: 1, scope: !4623)
!4631 = distinct !DISubprogram(name: "pci_setup_bridge", scope: !3, file: !3, line: 688, type: !204, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!4632 = !DILocalVariable(name: "bus", arg: 1, scope: !4631, file: !3, line: 688, type: !156)
!4633 = !DILocation(line: 688, column: 39, scope: !4631)
!4634 = !DILocalVariable(name: "type", scope: !4631, file: !3, line: 690, type: !185)
!4635 = !DILocation(line: 690, column: 16, scope: !4631)
!4636 = !DILocation(line: 693, column: 23, scope: !4631)
!4637 = !DILocation(line: 693, column: 28, scope: !4631)
!4638 = !DILocation(line: 693, column: 2, scope: !4631)
!4639 = !DILocation(line: 694, column: 21, scope: !4631)
!4640 = !DILocation(line: 694, column: 26, scope: !4631)
!4641 = !DILocation(line: 694, column: 2, scope: !4631)
!4642 = !DILocation(line: 695, column: 1, scope: !4631)
!4643 = distinct !DISubprogram(name: "__pci_setup_bridge", scope: !3, file: !3, line: 665, type: !4624, scopeLine: 666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!4644 = !DILocalVariable(name: "bus", arg: 1, scope: !4643, file: !3, line: 665, type: !156)
!4645 = !DILocation(line: 665, column: 48, scope: !4643)
!4646 = !DILocalVariable(name: "type", arg: 2, scope: !4643, file: !3, line: 665, type: !185)
!4647 = !DILocation(line: 665, column: 67, scope: !4643)
!4648 = !DILocalVariable(name: "bridge", scope: !4643, file: !3, line: 667, type: !145)
!4649 = !DILocation(line: 667, column: 18, scope: !4643)
!4650 = !DILocation(line: 667, column: 27, scope: !4643)
!4651 = !DILocation(line: 667, column: 32, scope: !4643)
!4652 = !DILocation(line: 669, column: 2, scope: !4643)
!4653 = !DILocation(line: 672, column: 6, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 672, column: 6)
!4655 = !DILocation(line: 672, column: 11, scope: !4654)
!4656 = !DILocation(line: 672, column: 6, scope: !4643)
!4657 = !DILocation(line: 673, column: 23, scope: !4654)
!4658 = !DILocation(line: 673, column: 3, scope: !4654)
!4659 = !DILocation(line: 675, column: 6, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 675, column: 6)
!4661 = !DILocation(line: 675, column: 11, scope: !4660)
!4662 = !DILocation(line: 675, column: 6, scope: !4643)
!4663 = !DILocation(line: 676, column: 25, scope: !4660)
!4664 = !DILocation(line: 676, column: 3, scope: !4660)
!4665 = !DILocation(line: 678, column: 6, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 678, column: 6)
!4667 = !DILocation(line: 678, column: 11, scope: !4666)
!4668 = !DILocation(line: 678, column: 6, scope: !4643)
!4669 = !DILocation(line: 679, column: 30, scope: !4666)
!4670 = !DILocation(line: 679, column: 3, scope: !4666)
!4671 = !DILocation(line: 681, column: 24, scope: !4643)
!4672 = !DILocation(line: 681, column: 52, scope: !4643)
!4673 = !DILocation(line: 681, column: 57, scope: !4643)
!4674 = !DILocation(line: 681, column: 2, scope: !4643)
!4675 = !DILocation(line: 682, column: 1, scope: !4643)
!4676 = distinct !DISubprogram(name: "pci_claim_bridge_resource", scope: !3, file: !3, line: 698, type: !4008, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!4677 = !DILocalVariable(name: "bridge", arg: 1, scope: !4676, file: !3, line: 698, type: !145)
!4678 = !DILocation(line: 698, column: 47, scope: !4676)
!4679 = !DILocalVariable(name: "i", arg: 2, scope: !4676, file: !3, line: 698, type: !120)
!4680 = !DILocation(line: 698, column: 59, scope: !4676)
!4681 = !DILocation(line: 700, column: 6, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 700, column: 6)
!4683 = !DILocation(line: 700, column: 8, scope: !4682)
!4684 = !DILocation(line: 700, column: 31, scope: !4682)
!4685 = !DILocation(line: 700, column: 34, scope: !4682)
!4686 = !DILocation(line: 700, column: 36, scope: !4682)
!4687 = !DILocation(line: 700, column: 6, scope: !4676)
!4688 = !DILocation(line: 701, column: 3, scope: !4682)
!4689 = !DILocation(line: 703, column: 25, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 703, column: 6)
!4691 = !DILocation(line: 703, column: 33, scope: !4690)
!4692 = !DILocation(line: 703, column: 6, scope: !4690)
!4693 = !DILocation(line: 703, column: 36, scope: !4690)
!4694 = !DILocation(line: 703, column: 6, scope: !4676)
!4695 = !DILocation(line: 704, column: 3, scope: !4690)
!4696 = !DILocation(line: 706, column: 7, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 706, column: 6)
!4698 = !DILocation(line: 706, column: 15, scope: !4697)
!4699 = !DILocation(line: 706, column: 21, scope: !4697)
!4700 = !DILocation(line: 706, column: 27, scope: !4697)
!4701 = !DILocation(line: 706, column: 6, scope: !4676)
!4702 = !DILocation(line: 707, column: 3, scope: !4697)
!4703 = !DILocation(line: 709, column: 29, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 709, column: 6)
!4705 = !DILocation(line: 709, column: 37, scope: !4704)
!4706 = !DILocation(line: 709, column: 7, scope: !4704)
!4707 = !DILocation(line: 709, column: 6, scope: !4676)
!4708 = !DILocation(line: 710, column: 3, scope: !4704)
!4709 = !DILocation(line: 712, column: 10, scope: !4676)
!4710 = !DILocation(line: 712, column: 2, scope: !4676)
!4711 = !DILocation(line: 714, column: 23, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 712, column: 13)
!4713 = !DILocation(line: 714, column: 3, scope: !4712)
!4714 = !DILocation(line: 715, column: 3, scope: !4712)
!4715 = !DILocation(line: 717, column: 25, scope: !4712)
!4716 = !DILocation(line: 717, column: 3, scope: !4712)
!4717 = !DILocation(line: 718, column: 3, scope: !4712)
!4718 = !DILocation(line: 720, column: 30, scope: !4712)
!4719 = !DILocation(line: 720, column: 3, scope: !4712)
!4720 = !DILocation(line: 721, column: 3, scope: !4712)
!4721 = !DILocation(line: 723, column: 3, scope: !4712)
!4722 = !DILocation(line: 726, column: 25, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 726, column: 6)
!4724 = !DILocation(line: 726, column: 33, scope: !4723)
!4725 = !DILocation(line: 726, column: 6, scope: !4723)
!4726 = !DILocation(line: 726, column: 36, scope: !4723)
!4727 = !DILocation(line: 726, column: 6, scope: !4676)
!4728 = !DILocation(line: 727, column: 3, scope: !4723)
!4729 = !DILocation(line: 729, column: 2, scope: !4676)
!4730 = !DILocation(line: 730, column: 1, scope: !4676)
!4731 = distinct !DISubprogram(name: "pci_setup_bridge_io", scope: !3, file: !3, line: 574, type: !3995, scopeLine: 575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!4732 = !DILocalVariable(name: "bridge", arg: 1, scope: !4731, file: !3, line: 574, type: !145)
!4733 = !DILocation(line: 574, column: 49, scope: !4731)
!4734 = !DILocalVariable(name: "res", scope: !4731, file: !3, line: 576, type: !167)
!4735 = !DILocation(line: 576, column: 19, scope: !4731)
!4736 = !DILocalVariable(name: "region", scope: !4731, file: !3, line: 577, type: !4523)
!4737 = !DILocation(line: 577, column: 24, scope: !4731)
!4738 = !DILocalVariable(name: "io_mask", scope: !4731, file: !3, line: 578, type: !185)
!4739 = !DILocation(line: 578, column: 16, scope: !4731)
!4740 = !DILocalVariable(name: "io_base_lo", scope: !4731, file: !3, line: 579, type: !1371)
!4741 = !DILocation(line: 579, column: 5, scope: !4731)
!4742 = !DILocalVariable(name: "io_limit_lo", scope: !4731, file: !3, line: 579, type: !1371)
!4743 = !DILocation(line: 579, column: 17, scope: !4731)
!4744 = !DILocalVariable(name: "l", scope: !4731, file: !3, line: 580, type: !880)
!4745 = !DILocation(line: 580, column: 6, scope: !4731)
!4746 = !DILocalVariable(name: "io_upper16", scope: !4731, file: !3, line: 581, type: !215)
!4747 = !DILocation(line: 581, column: 6, scope: !4731)
!4748 = !DILocation(line: 583, column: 10, scope: !4731)
!4749 = !DILocation(line: 584, column: 6, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 584, column: 6)
!4751 = !DILocation(line: 584, column: 14, scope: !4750)
!4752 = !DILocation(line: 584, column: 6, scope: !4731)
!4753 = !DILocation(line: 585, column: 11, scope: !4750)
!4754 = !DILocation(line: 585, column: 3, scope: !4750)
!4755 = !DILocation(line: 588, column: 9, scope: !4731)
!4756 = !DILocation(line: 588, column: 17, scope: !4731)
!4757 = !DILocation(line: 588, column: 6, scope: !4731)
!4758 = !DILocation(line: 589, column: 26, scope: !4731)
!4759 = !DILocation(line: 589, column: 34, scope: !4731)
!4760 = !DILocation(line: 589, column: 48, scope: !4731)
!4761 = !DILocation(line: 589, column: 2, scope: !4731)
!4762 = !DILocation(line: 590, column: 6, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 590, column: 6)
!4764 = !DILocation(line: 590, column: 11, scope: !4763)
!4765 = !DILocation(line: 590, column: 17, scope: !4763)
!4766 = !DILocation(line: 590, column: 6, scope: !4731)
!4767 = !DILocation(line: 591, column: 24, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 590, column: 34)
!4769 = !DILocation(line: 591, column: 3, scope: !4768)
!4770 = !DILocation(line: 592, column: 24, scope: !4768)
!4771 = !DILocation(line: 592, column: 30, scope: !4768)
!4772 = !DILocation(line: 592, column: 38, scope: !4768)
!4773 = !DILocation(line: 592, column: 36, scope: !4768)
!4774 = !DILocation(line: 592, column: 16, scope: !4768)
!4775 = !DILocation(line: 592, column: 14, scope: !4768)
!4776 = !DILocation(line: 593, column: 25, scope: !4768)
!4777 = !DILocation(line: 593, column: 29, scope: !4768)
!4778 = !DILocation(line: 593, column: 37, scope: !4768)
!4779 = !DILocation(line: 593, column: 35, scope: !4768)
!4780 = !DILocation(line: 593, column: 17, scope: !4768)
!4781 = !DILocation(line: 593, column: 15, scope: !4768)
!4782 = !DILocation(line: 594, column: 14, scope: !4768)
!4783 = !DILocation(line: 594, column: 8, scope: !4768)
!4784 = !DILocation(line: 594, column: 26, scope: !4768)
!4785 = !DILocation(line: 594, column: 34, scope: !4768)
!4786 = !DILocation(line: 594, column: 32, scope: !4768)
!4787 = !DILocation(line: 594, column: 7, scope: !4768)
!4788 = !DILocation(line: 594, column: 5, scope: !4768)
!4789 = !DILocation(line: 596, column: 24, scope: !4768)
!4790 = !DILocation(line: 596, column: 28, scope: !4768)
!4791 = !DILocation(line: 596, column: 52, scope: !4768)
!4792 = !DILocation(line: 596, column: 58, scope: !4768)
!4793 = !DILocation(line: 596, column: 42, scope: !4768)
!4794 = !DILocation(line: 596, column: 16, scope: !4768)
!4795 = !DILocation(line: 596, column: 14, scope: !4768)
!4796 = !DILocation(line: 597, column: 3, scope: !4768)
!4797 = !DILocation(line: 598, column: 2, scope: !4768)
!4798 = !DILocation(line: 600, column: 14, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 598, column: 9)
!4800 = !DILocation(line: 601, column: 5, scope: !4799)
!4801 = !DILocation(line: 604, column: 25, scope: !4731)
!4802 = !DILocation(line: 604, column: 2, scope: !4731)
!4803 = !DILocation(line: 606, column: 24, scope: !4731)
!4804 = !DILocation(line: 606, column: 45, scope: !4731)
!4805 = !DILocation(line: 606, column: 2, scope: !4731)
!4806 = !DILocation(line: 608, column: 25, scope: !4731)
!4807 = !DILocation(line: 608, column: 54, scope: !4731)
!4808 = !DILocation(line: 608, column: 2, scope: !4731)
!4809 = !DILocation(line: 609, column: 1, scope: !4731)
!4810 = distinct !DISubprogram(name: "pci_setup_bridge_mmio", scope: !3, file: !3, line: 611, type: !3995, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!4811 = !DILocalVariable(name: "bridge", arg: 1, scope: !4810, file: !3, line: 611, type: !145)
!4812 = !DILocation(line: 611, column: 51, scope: !4810)
!4813 = !DILocalVariable(name: "res", scope: !4810, file: !3, line: 613, type: !167)
!4814 = !DILocation(line: 613, column: 19, scope: !4810)
!4815 = !DILocalVariable(name: "region", scope: !4810, file: !3, line: 614, type: !4523)
!4816 = !DILocation(line: 614, column: 24, scope: !4810)
!4817 = !DILocalVariable(name: "l", scope: !4810, file: !3, line: 615, type: !215)
!4818 = !DILocation(line: 615, column: 6, scope: !4810)
!4819 = !DILocation(line: 618, column: 9, scope: !4810)
!4820 = !DILocation(line: 618, column: 17, scope: !4810)
!4821 = !DILocation(line: 618, column: 6, scope: !4810)
!4822 = !DILocation(line: 619, column: 26, scope: !4810)
!4823 = !DILocation(line: 619, column: 34, scope: !4810)
!4824 = !DILocation(line: 619, column: 48, scope: !4810)
!4825 = !DILocation(line: 619, column: 2, scope: !4810)
!4826 = !DILocation(line: 620, column: 6, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 620, column: 6)
!4828 = !DILocation(line: 620, column: 11, scope: !4827)
!4829 = !DILocation(line: 620, column: 17, scope: !4827)
!4830 = !DILocation(line: 620, column: 6, scope: !4810)
!4831 = !DILocation(line: 621, column: 15, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 620, column: 35)
!4833 = !DILocation(line: 621, column: 21, scope: !4832)
!4834 = !DILocation(line: 621, column: 28, scope: !4832)
!4835 = !DILocation(line: 621, column: 7, scope: !4832)
!4836 = !DILocation(line: 621, column: 5, scope: !4832)
!4837 = !DILocation(line: 622, column: 15, scope: !4832)
!4838 = !DILocation(line: 622, column: 19, scope: !4832)
!4839 = !DILocation(line: 622, column: 5, scope: !4832)
!4840 = !DILocation(line: 623, column: 3, scope: !4832)
!4841 = !DILocation(line: 624, column: 2, scope: !4832)
!4842 = !DILocation(line: 625, column: 5, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 624, column: 9)
!4844 = !DILocation(line: 627, column: 25, scope: !4810)
!4845 = !DILocation(line: 627, column: 50, scope: !4810)
!4846 = !DILocation(line: 627, column: 2, scope: !4810)
!4847 = !DILocation(line: 628, column: 1, scope: !4810)
!4848 = distinct !DISubprogram(name: "pci_setup_bridge_mmio_pref", scope: !3, file: !3, line: 630, type: !3995, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!4849 = !DILocalVariable(name: "bridge", arg: 1, scope: !4848, file: !3, line: 630, type: !145)
!4850 = !DILocation(line: 630, column: 56, scope: !4848)
!4851 = !DILocalVariable(name: "res", scope: !4848, file: !3, line: 632, type: !167)
!4852 = !DILocation(line: 632, column: 19, scope: !4848)
!4853 = !DILocalVariable(name: "region", scope: !4848, file: !3, line: 633, type: !4523)
!4854 = !DILocation(line: 633, column: 24, scope: !4848)
!4855 = !DILocalVariable(name: "l", scope: !4848, file: !3, line: 634, type: !215)
!4856 = !DILocation(line: 634, column: 6, scope: !4848)
!4857 = !DILocalVariable(name: "bu", scope: !4848, file: !3, line: 634, type: !215)
!4858 = !DILocation(line: 634, column: 9, scope: !4848)
!4859 = !DILocalVariable(name: "lu", scope: !4848, file: !3, line: 634, type: !215)
!4860 = !DILocation(line: 634, column: 13, scope: !4848)
!4861 = !DILocation(line: 641, column: 25, scope: !4848)
!4862 = !DILocation(line: 641, column: 2, scope: !4848)
!4863 = !DILocation(line: 644, column: 10, scope: !4848)
!4864 = !DILocation(line: 644, column: 5, scope: !4848)
!4865 = !DILocation(line: 645, column: 9, scope: !4848)
!4866 = !DILocation(line: 645, column: 17, scope: !4848)
!4867 = !DILocation(line: 645, column: 6, scope: !4848)
!4868 = !DILocation(line: 646, column: 26, scope: !4848)
!4869 = !DILocation(line: 646, column: 34, scope: !4848)
!4870 = !DILocation(line: 646, column: 48, scope: !4848)
!4871 = !DILocation(line: 646, column: 2, scope: !4848)
!4872 = !DILocation(line: 647, column: 6, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 647, column: 6)
!4874 = !DILocation(line: 647, column: 11, scope: !4873)
!4875 = !DILocation(line: 647, column: 17, scope: !4873)
!4876 = !DILocation(line: 647, column: 6, scope: !4848)
!4877 = !DILocation(line: 648, column: 15, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4873, file: !3, line: 647, column: 40)
!4879 = !DILocation(line: 648, column: 21, scope: !4878)
!4880 = !DILocation(line: 648, column: 28, scope: !4878)
!4881 = !DILocation(line: 648, column: 7, scope: !4878)
!4882 = !DILocation(line: 648, column: 5, scope: !4878)
!4883 = !DILocation(line: 649, column: 15, scope: !4878)
!4884 = !DILocation(line: 649, column: 19, scope: !4878)
!4885 = !DILocation(line: 649, column: 5, scope: !4878)
!4886 = !DILocation(line: 650, column: 7, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 650, column: 7)
!4888 = !DILocation(line: 650, column: 12, scope: !4887)
!4889 = !DILocation(line: 650, column: 18, scope: !4887)
!4890 = !DILocation(line: 650, column: 7, scope: !4878)
!4891 = !DILocation(line: 651, column: 9, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 650, column: 39)
!4893 = !DILocation(line: 651, column: 7, scope: !4892)
!4894 = !DILocation(line: 652, column: 9, scope: !4892)
!4895 = !DILocation(line: 652, column: 7, scope: !4892)
!4896 = !DILocation(line: 653, column: 3, scope: !4892)
!4897 = !DILocation(line: 654, column: 3, scope: !4878)
!4898 = !DILocation(line: 655, column: 2, scope: !4878)
!4899 = !DILocation(line: 656, column: 5, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4873, file: !3, line: 655, column: 9)
!4901 = !DILocation(line: 658, column: 25, scope: !4848)
!4902 = !DILocation(line: 658, column: 55, scope: !4848)
!4903 = !DILocation(line: 658, column: 2, scope: !4848)
!4904 = !DILocation(line: 661, column: 25, scope: !4848)
!4905 = !DILocation(line: 661, column: 56, scope: !4848)
!4906 = !DILocation(line: 661, column: 2, scope: !4848)
!4907 = !DILocation(line: 662, column: 25, scope: !4848)
!4908 = !DILocation(line: 662, column: 57, scope: !4848)
!4909 = !DILocation(line: 662, column: 2, scope: !4848)
!4910 = !DILocation(line: 663, column: 1, scope: !4848)
!4911 = distinct !DISubprogram(name: "pcibios_window_alignment", scope: !3, file: !3, line: 834, type: !4912, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!4912 = !DISubroutineType(types: !4913)
!4913 = !{!172, !156, !185}
!4914 = !DILocalVariable(name: "bus", arg: 1, scope: !4911, file: !3, line: 834, type: !156)
!4915 = !DILocation(line: 834, column: 65, scope: !4911)
!4916 = !DILocalVariable(name: "type", arg: 2, scope: !4911, file: !3, line: 835, type: !185)
!4917 = !DILocation(line: 835, column: 21, scope: !4911)
!4918 = !DILocation(line: 837, column: 2, scope: !4911)
!4919 = distinct !DISubprogram(name: "pci_cardbus_resource_alignment", scope: !3, file: !3, line: 1101, type: !4920, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!185, !167}
!4922 = !DILocalVariable(name: "res", arg: 1, scope: !4919, file: !3, line: 1101, type: !167)
!4923 = !DILocation(line: 1101, column: 63, scope: !4919)
!4924 = !DILocation(line: 1103, column: 6, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 1103, column: 6)
!4926 = !DILocation(line: 1103, column: 11, scope: !4925)
!4927 = !DILocation(line: 1103, column: 17, scope: !4925)
!4928 = !DILocation(line: 1103, column: 6, scope: !4919)
!4929 = !DILocation(line: 1104, column: 10, scope: !4925)
!4930 = !DILocation(line: 1104, column: 3, scope: !4925)
!4931 = !DILocation(line: 1105, column: 6, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 1105, column: 6)
!4933 = !DILocation(line: 1105, column: 11, scope: !4932)
!4934 = !DILocation(line: 1105, column: 17, scope: !4932)
!4935 = !DILocation(line: 1105, column: 6, scope: !4919)
!4936 = !DILocation(line: 1106, column: 10, scope: !4932)
!4937 = !DILocation(line: 1106, column: 3, scope: !4932)
!4938 = !DILocation(line: 1107, column: 2, scope: !4919)
!4939 = !DILocation(line: 1108, column: 1, scope: !4919)
!4940 = distinct !DISubprogram(name: "__pci_bus_size_bridges", scope: !3, file: !3, line: 1203, type: !4941, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!4941 = !DISubroutineType(types: !4942)
!4942 = !{null, !156, !153}
!4943 = !DILocalVariable(name: "bus", arg: 1, scope: !4940, file: !3, line: 1203, type: !156)
!4944 = !DILocation(line: 1203, column: 45, scope: !4940)
!4945 = !DILocalVariable(name: "realloc_head", arg: 2, scope: !4940, file: !3, line: 1203, type: !153)
!4946 = !DILocation(line: 1203, column: 68, scope: !4940)
!4947 = !DILocalVariable(name: "dev", scope: !4940, file: !3, line: 1205, type: !145)
!4948 = !DILocation(line: 1205, column: 18, scope: !4940)
!4949 = !DILocalVariable(name: "mask", scope: !4940, file: !3, line: 1206, type: !185)
!4950 = !DILocation(line: 1206, column: 16, scope: !4940)
!4951 = !DILocalVariable(name: "prefmask", scope: !4940, file: !3, line: 1206, type: !185)
!4952 = !DILocation(line: 1206, column: 22, scope: !4940)
!4953 = !DILocalVariable(name: "type2", scope: !4940, file: !3, line: 1206, type: !185)
!4954 = !DILocation(line: 1206, column: 32, scope: !4940)
!4955 = !DILocalVariable(name: "type3", scope: !4940, file: !3, line: 1206, type: !185)
!4956 = !DILocation(line: 1206, column: 43, scope: !4940)
!4957 = !DILocalVariable(name: "additional_io_size", scope: !4940, file: !3, line: 1207, type: !172)
!4958 = !DILocation(line: 1207, column: 18, scope: !4940)
!4959 = !DILocalVariable(name: "additional_mmio_size", scope: !4940, file: !3, line: 1207, type: !172)
!4960 = !DILocation(line: 1207, column: 42, scope: !4940)
!4961 = !DILocalVariable(name: "additional_mmio_pref_size", scope: !4940, file: !3, line: 1208, type: !172)
!4962 = !DILocation(line: 1208, column: 4, scope: !4940)
!4963 = !DILocalVariable(name: "pref", scope: !4940, file: !3, line: 1209, type: !167)
!4964 = !DILocation(line: 1209, column: 19, scope: !4940)
!4965 = !DILocalVariable(name: "host", scope: !4940, file: !3, line: 1210, type: !4163)
!4966 = !DILocation(line: 1210, column: 26, scope: !4940)
!4967 = !DILocalVariable(name: "hdr_type", scope: !4940, file: !3, line: 1211, type: !120)
!4968 = !DILocation(line: 1211, column: 6, scope: !4940)
!4969 = !DILocalVariable(name: "i", scope: !4940, file: !3, line: 1211, type: !120)
!4970 = !DILocation(line: 1211, column: 16, scope: !4940)
!4971 = !DILocalVariable(name: "ret", scope: !4940, file: !3, line: 1211, type: !120)
!4972 = !DILocation(line: 1211, column: 19, scope: !4940)
!4973 = !DILocalVariable(name: "__mptr", scope: !4974, file: !3, line: 1213, type: !144)
!4974 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 1213, column: 2)
!4975 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 1213, column: 2)
!4976 = !DILocation(line: 1213, column: 2, scope: !4974)
!4977 = !DILocation(line: 1213, column: 2, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 1213, column: 2)
!4979 = !DILocation(line: 1213, column: 2, scope: !4975)
!4980 = !DILocation(line: 1213, column: 2, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 1213, column: 2)
!4982 = !DILocalVariable(name: "b", scope: !4983, file: !3, line: 1214, type: !156)
!4983 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 1213, column: 52)
!4984 = !DILocation(line: 1214, column: 19, scope: !4983)
!4985 = !DILocation(line: 1214, column: 23, scope: !4983)
!4986 = !DILocation(line: 1214, column: 28, scope: !4983)
!4987 = !DILocation(line: 1215, column: 8, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 1215, column: 7)
!4989 = !DILocation(line: 1215, column: 7, scope: !4983)
!4990 = !DILocation(line: 1216, column: 4, scope: !4988)
!4991 = !DILocation(line: 1218, column: 11, scope: !4983)
!4992 = !DILocation(line: 1218, column: 16, scope: !4983)
!4993 = !DILocation(line: 1218, column: 3, scope: !4983)
!4994 = !DILocation(line: 1220, column: 25, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 1218, column: 26)
!4996 = !DILocation(line: 1220, column: 28, scope: !4995)
!4997 = !DILocation(line: 1220, column: 4, scope: !4995)
!4998 = !DILocation(line: 1221, column: 4, scope: !4995)
!4999 = !DILocation(line: 1225, column: 27, scope: !4995)
!5000 = !DILocation(line: 1225, column: 30, scope: !4995)
!5001 = !DILocation(line: 1225, column: 4, scope: !4995)
!5002 = !DILocation(line: 1226, column: 4, scope: !4995)
!5003 = !DILocation(line: 1228, column: 2, scope: !4983)
!5004 = !DILocalVariable(name: "__mptr", scope: !5005, file: !3, line: 1213, type: !144)
!5005 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 1213, column: 2)
!5006 = !DILocation(line: 1213, column: 2, scope: !5005)
!5007 = !DILocation(line: 1213, column: 2, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 1213, column: 2)
!5009 = distinct !{!5009, !4979, !5010}
!5010 = !DILocation(line: 1228, column: 2, scope: !4975)
!5011 = !DILocation(line: 1231, column: 22, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 1231, column: 6)
!5013 = !DILocation(line: 1231, column: 6, scope: !5012)
!5014 = !DILocation(line: 1231, column: 6, scope: !4940)
!5015 = !DILocalVariable(name: "__mptr", scope: !5016, file: !3, line: 1232, type: !144)
!5016 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 1232, column: 10)
!5017 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 1231, column: 28)
!5018 = !DILocation(line: 1232, column: 10, scope: !5016)
!5019 = !DILocation(line: 1232, column: 10, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 1232, column: 10)
!5021 = !DILocation(line: 1232, column: 8, scope: !5017)
!5022 = !DILocation(line: 1233, column: 8, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 1233, column: 7)
!5024 = !DILocation(line: 1233, column: 14, scope: !5023)
!5025 = !DILocation(line: 1233, column: 7, scope: !5017)
!5026 = !DILocation(line: 1234, column: 4, scope: !5023)
!5027 = !DILocation(line: 1235, column: 3, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 1235, column: 3)
!5029 = !DILocation(line: 1235, column: 3, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 1235, column: 3)
!5031 = !DILocation(line: 1236, column: 8, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 1236, column: 8)
!5033 = !DILocation(line: 1236, column: 13, scope: !5032)
!5034 = !DILocation(line: 1236, column: 17, scope: !5032)
!5035 = !DILocation(line: 1236, column: 23, scope: !5032)
!5036 = !DILocation(line: 1236, column: 29, scope: !5032)
!5037 = !DILocation(line: 1236, column: 8, scope: !5030)
!5038 = !DILocation(line: 1237, column: 5, scope: !5032)
!5039 = !DILocation(line: 1236, column: 50, scope: !5032)
!5040 = distinct !{!5040, !5027, !5041}
!5041 = !DILocation(line: 1237, column: 5, scope: !5028)
!5042 = !DILocation(line: 1238, column: 12, scope: !5017)
!5043 = !DILocation(line: 1239, column: 2, scope: !5017)
!5044 = !DILocation(line: 1240, column: 11, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 1239, column: 9)
!5046 = !DILocation(line: 1240, column: 16, scope: !5045)
!5047 = !DILocation(line: 1240, column: 22, scope: !5045)
!5048 = !DILocation(line: 1240, column: 8, scope: !5045)
!5049 = !DILocation(line: 1241, column: 14, scope: !5045)
!5050 = !DILocation(line: 1241, column: 19, scope: !5045)
!5051 = !DILocation(line: 1241, column: 25, scope: !5045)
!5052 = !DILocation(line: 1241, column: 12, scope: !5045)
!5053 = !DILocation(line: 1244, column: 10, scope: !4940)
!5054 = !DILocation(line: 1244, column: 2, scope: !4940)
!5055 = !DILocation(line: 1247, column: 3, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 1244, column: 20)
!5057 = !DILocation(line: 1250, column: 27, scope: !5056)
!5058 = !DILocation(line: 1250, column: 3, scope: !5056)
!5059 = !DILocation(line: 1251, column: 7, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 1251, column: 7)
!5061 = !DILocation(line: 1251, column: 12, scope: !5060)
!5062 = !DILocation(line: 1251, column: 18, scope: !5060)
!5063 = !DILocation(line: 1251, column: 7, scope: !5056)
!5064 = !DILocation(line: 1252, column: 26, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5060, file: !3, line: 1251, column: 37)
!5066 = !DILocation(line: 1252, column: 24, scope: !5065)
!5067 = !DILocation(line: 1253, column: 27, scope: !5065)
!5068 = !DILocation(line: 1253, column: 25, scope: !5065)
!5069 = !DILocation(line: 1254, column: 32, scope: !5065)
!5070 = !DILocation(line: 1254, column: 30, scope: !5065)
!5071 = !DILocation(line: 1255, column: 3, scope: !5065)
!5072 = !DILocation(line: 1258, column: 16, scope: !5056)
!5073 = !DILocation(line: 1258, column: 21, scope: !5056)
!5074 = !DILocation(line: 1258, column: 40, scope: !5056)
!5075 = !DILocation(line: 1259, column: 9, scope: !5056)
!5076 = !DILocation(line: 1259, column: 29, scope: !5056)
!5077 = !DILocation(line: 1258, column: 3, scope: !5056)
!5078 = !DILocation(line: 1266, column: 8, scope: !5056)
!5079 = !DILocation(line: 1267, column: 12, scope: !5056)
!5080 = !DILocation(line: 1268, column: 7, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 1268, column: 7)
!5082 = !DILocation(line: 1268, column: 12, scope: !5081)
!5083 = !DILocation(line: 1268, column: 16, scope: !5081)
!5084 = !DILocation(line: 1268, column: 22, scope: !5081)
!5085 = !DILocation(line: 1268, column: 28, scope: !5081)
!5086 = !DILocation(line: 1268, column: 7, scope: !5056)
!5087 = !DILocation(line: 1269, column: 13, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 1268, column: 50)
!5089 = !DILocation(line: 1270, column: 24, scope: !5088)
!5090 = !DILocation(line: 1270, column: 29, scope: !5088)
!5091 = !DILocation(line: 1270, column: 39, scope: !5088)
!5092 = !DILocation(line: 1271, column: 5, scope: !5088)
!5093 = !DILocation(line: 1271, column: 15, scope: !5088)
!5094 = !DILocation(line: 1272, column: 5, scope: !5088)
!5095 = !DILocation(line: 1272, column: 24, scope: !5088)
!5096 = !DILocation(line: 1273, column: 5, scope: !5088)
!5097 = !DILocation(line: 1273, column: 32, scope: !5088)
!5098 = !DILocation(line: 1270, column: 10, scope: !5088)
!5099 = !DILocation(line: 1270, column: 8, scope: !5088)
!5100 = !DILocation(line: 1280, column: 8, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1280, column: 8)
!5102 = !DILocation(line: 1280, column: 12, scope: !5101)
!5103 = !DILocation(line: 1280, column: 8, scope: !5088)
!5104 = !DILocation(line: 1281, column: 12, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1280, column: 18)
!5106 = !DILocation(line: 1281, column: 10, scope: !5105)
!5107 = !DILocation(line: 1282, column: 13, scope: !5105)
!5108 = !DILocation(line: 1282, column: 22, scope: !5105)
!5109 = !DILocation(line: 1282, column: 11, scope: !5105)
!5110 = !DILocation(line: 1283, column: 13, scope: !5105)
!5111 = !DILocation(line: 1283, column: 22, scope: !5105)
!5112 = !DILocation(line: 1283, column: 11, scope: !5105)
!5113 = !DILocation(line: 1284, column: 4, scope: !5105)
!5114 = !DILocation(line: 1285, column: 3, scope: !5088)
!5115 = !DILocation(line: 1292, column: 8, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 1292, column: 7)
!5117 = !DILocation(line: 1292, column: 7, scope: !5056)
!5118 = !DILocation(line: 1293, column: 13, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 1292, column: 15)
!5120 = !DILocation(line: 1294, column: 24, scope: !5119)
!5121 = !DILocation(line: 1294, column: 29, scope: !5119)
!5122 = !DILocation(line: 1294, column: 39, scope: !5119)
!5123 = !DILocation(line: 1295, column: 5, scope: !5119)
!5124 = !DILocation(line: 1295, column: 15, scope: !5119)
!5125 = !DILocation(line: 1296, column: 5, scope: !5119)
!5126 = !DILocation(line: 1296, column: 24, scope: !5119)
!5127 = !DILocation(line: 1297, column: 5, scope: !5119)
!5128 = !DILocation(line: 1297, column: 32, scope: !5119)
!5129 = !DILocation(line: 1294, column: 10, scope: !5119)
!5130 = !DILocation(line: 1294, column: 8, scope: !5119)
!5131 = !DILocation(line: 1303, column: 8, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5119, file: !3, line: 1303, column: 8)
!5133 = !DILocation(line: 1303, column: 12, scope: !5132)
!5134 = !DILocation(line: 1303, column: 8, scope: !5119)
!5135 = !DILocation(line: 1304, column: 12, scope: !5132)
!5136 = !DILocation(line: 1304, column: 10, scope: !5132)
!5137 = !DILocation(line: 1304, column: 5, scope: !5132)
!5138 = !DILocation(line: 1306, column: 29, scope: !5132)
!5139 = !DILocation(line: 1306, column: 26, scope: !5132)
!5140 = !DILocation(line: 1308, column: 18, scope: !5119)
!5141 = !DILocation(line: 1308, column: 10, scope: !5119)
!5142 = !DILocation(line: 1309, column: 3, scope: !5119)
!5143 = !DILocation(line: 1325, column: 17, scope: !5056)
!5144 = !DILocation(line: 1325, column: 22, scope: !5056)
!5145 = !DILocation(line: 1325, column: 44, scope: !5056)
!5146 = !DILocation(line: 1325, column: 51, scope: !5056)
!5147 = !DILocation(line: 1326, column: 10, scope: !5056)
!5148 = !DILocation(line: 1326, column: 29, scope: !5056)
!5149 = !DILocation(line: 1327, column: 10, scope: !5056)
!5150 = !DILocation(line: 1327, column: 32, scope: !5056)
!5151 = !DILocation(line: 1325, column: 3, scope: !5056)
!5152 = !DILocation(line: 1328, column: 3, scope: !5056)
!5153 = !DILocation(line: 1330, column: 1, scope: !4940)
!5154 = distinct !DISubprogram(name: "pci_bus_size_cardbus", scope: !3, file: !3, line: 1110, type: !4941, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!5155 = !DILocalVariable(name: "bus", arg: 1, scope: !5154, file: !3, line: 1110, type: !156)
!5156 = !DILocation(line: 1110, column: 50, scope: !5154)
!5157 = !DILocalVariable(name: "realloc_head", arg: 2, scope: !5154, file: !3, line: 1111, type: !153)
!5158 = !DILocation(line: 1111, column: 24, scope: !5154)
!5159 = !DILocalVariable(name: "bridge", scope: !5154, file: !3, line: 1113, type: !145)
!5160 = !DILocation(line: 1113, column: 18, scope: !5154)
!5161 = !DILocation(line: 1113, column: 27, scope: !5154)
!5162 = !DILocation(line: 1113, column: 32, scope: !5154)
!5163 = !DILocalVariable(name: "b_res", scope: !5154, file: !3, line: 1114, type: !167)
!5164 = !DILocation(line: 1114, column: 19, scope: !5154)
!5165 = !DILocalVariable(name: "b_res_3_size", scope: !5154, file: !3, line: 1115, type: !172)
!5166 = !DILocation(line: 1115, column: 18, scope: !5154)
!5167 = !DILocation(line: 1115, column: 33, scope: !5154)
!5168 = !DILocation(line: 1115, column: 54, scope: !5154)
!5169 = !DILocalVariable(name: "ctrl", scope: !5154, file: !3, line: 1116, type: !880)
!5170 = !DILocation(line: 1116, column: 6, scope: !5154)
!5171 = !DILocation(line: 1118, column: 11, scope: !5154)
!5172 = !DILocation(line: 1118, column: 19, scope: !5154)
!5173 = !DILocation(line: 1118, column: 8, scope: !5154)
!5174 = !DILocation(line: 1119, column: 6, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1119, column: 6)
!5176 = !DILocation(line: 1119, column: 13, scope: !5175)
!5177 = !DILocation(line: 1119, column: 6, scope: !5154)
!5178 = !DILocation(line: 1120, column: 3, scope: !5175)
!5179 = !DILocation(line: 1125, column: 17, scope: !5154)
!5180 = !DILocation(line: 1125, column: 2, scope: !5154)
!5181 = !DILocation(line: 1125, column: 9, scope: !5154)
!5182 = !DILocation(line: 1125, column: 15, scope: !5154)
!5183 = !DILocation(line: 1126, column: 15, scope: !5154)
!5184 = !DILocation(line: 1126, column: 22, scope: !5154)
!5185 = !DILocation(line: 1126, column: 30, scope: !5154)
!5186 = !DILocation(line: 1126, column: 28, scope: !5154)
!5187 = !DILocation(line: 1126, column: 50, scope: !5154)
!5188 = !DILocation(line: 1126, column: 2, scope: !5154)
!5189 = !DILocation(line: 1126, column: 9, scope: !5154)
!5190 = !DILocation(line: 1126, column: 13, scope: !5154)
!5191 = !DILocation(line: 1127, column: 2, scope: !5154)
!5192 = !DILocation(line: 1127, column: 9, scope: !5154)
!5193 = !DILocation(line: 1127, column: 15, scope: !5154)
!5194 = !DILocation(line: 1128, column: 6, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1128, column: 6)
!5196 = !DILocation(line: 1128, column: 6, scope: !5154)
!5197 = !DILocation(line: 1129, column: 17, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 1128, column: 20)
!5199 = !DILocation(line: 1129, column: 3, scope: !5198)
!5200 = !DILocation(line: 1129, column: 10, scope: !5198)
!5201 = !DILocation(line: 1129, column: 14, scope: !5198)
!5202 = !DILocation(line: 1130, column: 15, scope: !5198)
!5203 = !DILocation(line: 1130, column: 29, scope: !5198)
!5204 = !DILocation(line: 1130, column: 37, scope: !5198)
!5205 = !DILocation(line: 1130, column: 44, scope: !5198)
!5206 = !DILocation(line: 1131, column: 8, scope: !5198)
!5207 = !DILocation(line: 1130, column: 3, scope: !5198)
!5208 = !DILocation(line: 1132, column: 2, scope: !5198)
!5209 = !DILabel(scope: !5154, name: "handle_b_res_1", file: !3, line: 1134)
!5210 = !DILocation(line: 1134, column: 1, scope: !5154)
!5211 = !DILocation(line: 1135, column: 11, scope: !5154)
!5212 = !DILocation(line: 1135, column: 19, scope: !5154)
!5213 = !DILocation(line: 1135, column: 8, scope: !5154)
!5214 = !DILocation(line: 1136, column: 6, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1136, column: 6)
!5216 = !DILocation(line: 1136, column: 13, scope: !5215)
!5217 = !DILocation(line: 1136, column: 6, scope: !5154)
!5218 = !DILocation(line: 1137, column: 3, scope: !5215)
!5219 = !DILocation(line: 1138, column: 17, scope: !5154)
!5220 = !DILocation(line: 1138, column: 2, scope: !5154)
!5221 = !DILocation(line: 1138, column: 9, scope: !5154)
!5222 = !DILocation(line: 1138, column: 15, scope: !5154)
!5223 = !DILocation(line: 1139, column: 15, scope: !5154)
!5224 = !DILocation(line: 1139, column: 22, scope: !5154)
!5225 = !DILocation(line: 1139, column: 30, scope: !5154)
!5226 = !DILocation(line: 1139, column: 28, scope: !5154)
!5227 = !DILocation(line: 1139, column: 50, scope: !5154)
!5228 = !DILocation(line: 1139, column: 2, scope: !5154)
!5229 = !DILocation(line: 1139, column: 9, scope: !5154)
!5230 = !DILocation(line: 1139, column: 13, scope: !5154)
!5231 = !DILocation(line: 1140, column: 2, scope: !5154)
!5232 = !DILocation(line: 1140, column: 9, scope: !5154)
!5233 = !DILocation(line: 1140, column: 15, scope: !5154)
!5234 = !DILocation(line: 1141, column: 6, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1141, column: 6)
!5236 = !DILocation(line: 1141, column: 6, scope: !5154)
!5237 = !DILocation(line: 1142, column: 17, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5235, file: !3, line: 1141, column: 20)
!5239 = !DILocation(line: 1142, column: 3, scope: !5238)
!5240 = !DILocation(line: 1142, column: 10, scope: !5238)
!5241 = !DILocation(line: 1142, column: 14, scope: !5238)
!5242 = !DILocation(line: 1143, column: 15, scope: !5238)
!5243 = !DILocation(line: 1143, column: 29, scope: !5238)
!5244 = !DILocation(line: 1143, column: 37, scope: !5238)
!5245 = !DILocation(line: 1143, column: 44, scope: !5238)
!5246 = !DILocation(line: 1144, column: 8, scope: !5238)
!5247 = !DILocation(line: 1143, column: 3, scope: !5238)
!5248 = !DILocation(line: 1145, column: 2, scope: !5238)
!5249 = !DILabel(scope: !5154, name: "handle_b_res_2", file: !3, line: 1147)
!5250 = !DILocation(line: 1147, column: 1, scope: !5154)
!5251 = !DILocation(line: 1149, column: 23, scope: !5154)
!5252 = !DILocation(line: 1149, column: 2, scope: !5154)
!5253 = !DILocation(line: 1150, column: 6, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1150, column: 6)
!5255 = !DILocation(line: 1150, column: 11, scope: !5254)
!5256 = !DILocation(line: 1150, column: 6, scope: !5154)
!5257 = !DILocation(line: 1151, column: 8, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5254, file: !3, line: 1150, column: 46)
!5259 = !DILocation(line: 1152, column: 25, scope: !5258)
!5260 = !DILocation(line: 1152, column: 56, scope: !5258)
!5261 = !DILocation(line: 1152, column: 3, scope: !5258)
!5262 = !DILocation(line: 1153, column: 24, scope: !5258)
!5263 = !DILocation(line: 1153, column: 3, scope: !5258)
!5264 = !DILocation(line: 1154, column: 2, scope: !5258)
!5265 = !DILocation(line: 1157, column: 23, scope: !5154)
!5266 = !DILocation(line: 1157, column: 2, scope: !5154)
!5267 = !DILocation(line: 1158, column: 8, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1158, column: 6)
!5269 = !DILocation(line: 1158, column: 13, scope: !5268)
!5270 = !DILocation(line: 1158, column: 6, scope: !5154)
!5271 = !DILocation(line: 1159, column: 8, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5268, file: !3, line: 1158, column: 49)
!5273 = !DILocation(line: 1160, column: 25, scope: !5272)
!5274 = !DILocation(line: 1160, column: 56, scope: !5272)
!5275 = !DILocation(line: 1160, column: 3, scope: !5272)
!5276 = !DILocation(line: 1161, column: 24, scope: !5272)
!5277 = !DILocation(line: 1161, column: 3, scope: !5272)
!5278 = !DILocation(line: 1162, column: 2, scope: !5272)
!5279 = !DILocation(line: 1164, column: 11, scope: !5154)
!5280 = !DILocation(line: 1164, column: 19, scope: !5154)
!5281 = !DILocation(line: 1164, column: 8, scope: !5154)
!5282 = !DILocation(line: 1165, column: 6, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1165, column: 6)
!5284 = !DILocation(line: 1165, column: 13, scope: !5283)
!5285 = !DILocation(line: 1165, column: 6, scope: !5154)
!5286 = !DILocation(line: 1166, column: 3, scope: !5283)
!5287 = !DILocation(line: 1171, column: 6, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1171, column: 6)
!5289 = !DILocation(line: 1171, column: 11, scope: !5288)
!5290 = !DILocation(line: 1171, column: 6, scope: !5154)
!5291 = !DILocation(line: 1172, column: 18, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 1171, column: 46)
!5293 = !DILocation(line: 1172, column: 3, scope: !5292)
!5294 = !DILocation(line: 1172, column: 10, scope: !5292)
!5295 = !DILocation(line: 1172, column: 16, scope: !5292)
!5296 = !DILocation(line: 1173, column: 16, scope: !5292)
!5297 = !DILocation(line: 1173, column: 23, scope: !5292)
!5298 = !DILocation(line: 1173, column: 31, scope: !5292)
!5299 = !DILocation(line: 1173, column: 29, scope: !5292)
!5300 = !DILocation(line: 1173, column: 52, scope: !5292)
!5301 = !DILocation(line: 1173, column: 3, scope: !5292)
!5302 = !DILocation(line: 1173, column: 10, scope: !5292)
!5303 = !DILocation(line: 1173, column: 14, scope: !5292)
!5304 = !DILocation(line: 1174, column: 3, scope: !5292)
!5305 = !DILocation(line: 1174, column: 10, scope: !5292)
!5306 = !DILocation(line: 1174, column: 16, scope: !5292)
!5307 = !DILocation(line: 1176, column: 7, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5292, file: !3, line: 1176, column: 7)
!5309 = !DILocation(line: 1176, column: 7, scope: !5292)
!5310 = !DILocation(line: 1177, column: 18, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5308, file: !3, line: 1176, column: 21)
!5312 = !DILocation(line: 1177, column: 4, scope: !5311)
!5313 = !DILocation(line: 1177, column: 11, scope: !5311)
!5314 = !DILocation(line: 1177, column: 15, scope: !5311)
!5315 = !DILocation(line: 1178, column: 16, scope: !5311)
!5316 = !DILocation(line: 1178, column: 30, scope: !5311)
!5317 = !DILocation(line: 1178, column: 38, scope: !5311)
!5318 = !DILocation(line: 1179, column: 9, scope: !5311)
!5319 = !DILocation(line: 1179, column: 31, scope: !5311)
!5320 = !DILocation(line: 1178, column: 4, scope: !5311)
!5321 = !DILocation(line: 1180, column: 3, scope: !5311)
!5322 = !DILocation(line: 1183, column: 18, scope: !5292)
!5323 = !DILocation(line: 1183, column: 16, scope: !5292)
!5324 = !DILocation(line: 1184, column: 2, scope: !5292)
!5325 = !DILocation(line: 1171, column: 13, scope: !5288)
!5326 = !DILabel(scope: !5154, name: "handle_b_res_3", file: !3, line: 1186)
!5327 = !DILocation(line: 1186, column: 1, scope: !5154)
!5328 = !DILocation(line: 1187, column: 11, scope: !5154)
!5329 = !DILocation(line: 1187, column: 19, scope: !5154)
!5330 = !DILocation(line: 1187, column: 8, scope: !5154)
!5331 = !DILocation(line: 1188, column: 6, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1188, column: 6)
!5333 = !DILocation(line: 1188, column: 13, scope: !5332)
!5334 = !DILocation(line: 1188, column: 6, scope: !5154)
!5335 = !DILocation(line: 1189, column: 3, scope: !5332)
!5336 = !DILocation(line: 1190, column: 17, scope: !5154)
!5337 = !DILocation(line: 1190, column: 2, scope: !5154)
!5338 = !DILocation(line: 1190, column: 9, scope: !5154)
!5339 = !DILocation(line: 1190, column: 15, scope: !5154)
!5340 = !DILocation(line: 1191, column: 15, scope: !5154)
!5341 = !DILocation(line: 1191, column: 22, scope: !5154)
!5342 = !DILocation(line: 1191, column: 30, scope: !5154)
!5343 = !DILocation(line: 1191, column: 28, scope: !5154)
!5344 = !DILocation(line: 1191, column: 43, scope: !5154)
!5345 = !DILocation(line: 1191, column: 2, scope: !5154)
!5346 = !DILocation(line: 1191, column: 9, scope: !5154)
!5347 = !DILocation(line: 1191, column: 13, scope: !5154)
!5348 = !DILocation(line: 1192, column: 2, scope: !5154)
!5349 = !DILocation(line: 1192, column: 9, scope: !5154)
!5350 = !DILocation(line: 1192, column: 15, scope: !5154)
!5351 = !DILocation(line: 1193, column: 6, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1193, column: 6)
!5353 = !DILocation(line: 1193, column: 6, scope: !5154)
!5354 = !DILocation(line: 1194, column: 17, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 1193, column: 20)
!5356 = !DILocation(line: 1194, column: 3, scope: !5355)
!5357 = !DILocation(line: 1194, column: 10, scope: !5355)
!5358 = !DILocation(line: 1194, column: 14, scope: !5355)
!5359 = !DILocation(line: 1195, column: 15, scope: !5355)
!5360 = !DILocation(line: 1195, column: 29, scope: !5355)
!5361 = !DILocation(line: 1195, column: 37, scope: !5355)
!5362 = !DILocation(line: 1195, column: 44, scope: !5355)
!5363 = !DILocation(line: 1196, column: 8, scope: !5355)
!5364 = !DILocation(line: 1195, column: 3, scope: !5355)
!5365 = !DILocation(line: 1197, column: 2, scope: !5355)
!5366 = !DILabel(scope: !5154, name: "handle_done", file: !3, line: 1199)
!5367 = !DILocation(line: 1199, column: 1, scope: !5154)
!5368 = !DILocation(line: 1201, column: 1, scope: !5154)
!5369 = distinct !DISubprogram(name: "pci_is_root_bus", scope: !108, file: !108, line: 656, type: !5370, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!5370 = !DISubroutineType(types: !5371)
!5371 = !{!507, !156}
!5372 = !DILocalVariable(name: "pbus", arg: 1, scope: !5369, file: !108, line: 656, type: !156)
!5373 = !DILocation(line: 656, column: 52, scope: !5369)
!5374 = !DILocation(line: 658, column: 11, scope: !5369)
!5375 = !DILocation(line: 658, column: 17, scope: !5369)
!5376 = !DILocation(line: 658, column: 9, scope: !5369)
!5377 = !DILocation(line: 658, column: 2, scope: !5369)
!5378 = distinct !DISubprogram(name: "pci_bridge_check_ranges", scope: !3, file: !3, line: 737, type: !204, scopeLine: 738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!5379 = !DILocalVariable(name: "bus", arg: 1, scope: !5378, file: !3, line: 737, type: !156)
!5380 = !DILocation(line: 737, column: 53, scope: !5378)
!5381 = !DILocalVariable(name: "bridge", scope: !5378, file: !3, line: 739, type: !145)
!5382 = !DILocation(line: 739, column: 18, scope: !5378)
!5383 = !DILocation(line: 739, column: 27, scope: !5378)
!5384 = !DILocation(line: 739, column: 32, scope: !5378)
!5385 = !DILocalVariable(name: "b_res", scope: !5378, file: !3, line: 740, type: !167)
!5386 = !DILocation(line: 740, column: 19, scope: !5378)
!5387 = !DILocation(line: 742, column: 11, scope: !5378)
!5388 = !DILocation(line: 742, column: 19, scope: !5378)
!5389 = !DILocation(line: 742, column: 8, scope: !5378)
!5390 = !DILocation(line: 743, column: 2, scope: !5378)
!5391 = !DILocation(line: 743, column: 9, scope: !5378)
!5392 = !DILocation(line: 743, column: 15, scope: !5378)
!5393 = !DILocation(line: 745, column: 6, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 745, column: 6)
!5395 = !DILocation(line: 745, column: 14, scope: !5394)
!5396 = !DILocation(line: 745, column: 6, scope: !5378)
!5397 = !DILocation(line: 746, column: 12, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5394, file: !3, line: 745, column: 25)
!5399 = !DILocation(line: 746, column: 20, scope: !5398)
!5400 = !DILocation(line: 746, column: 9, scope: !5398)
!5401 = !DILocation(line: 747, column: 3, scope: !5398)
!5402 = !DILocation(line: 747, column: 10, scope: !5398)
!5403 = !DILocation(line: 747, column: 16, scope: !5398)
!5404 = !DILocation(line: 748, column: 2, scope: !5398)
!5405 = !DILocation(line: 750, column: 6, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 750, column: 6)
!5407 = !DILocation(line: 750, column: 14, scope: !5406)
!5408 = !DILocation(line: 750, column: 6, scope: !5378)
!5409 = !DILocation(line: 751, column: 12, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 750, column: 27)
!5411 = !DILocation(line: 751, column: 20, scope: !5410)
!5412 = !DILocation(line: 751, column: 9, scope: !5410)
!5413 = !DILocation(line: 752, column: 3, scope: !5410)
!5414 = !DILocation(line: 752, column: 10, scope: !5410)
!5415 = !DILocation(line: 752, column: 16, scope: !5410)
!5416 = !DILocation(line: 753, column: 7, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 753, column: 7)
!5418 = !DILocation(line: 753, column: 15, scope: !5417)
!5419 = !DILocation(line: 753, column: 7, scope: !5410)
!5420 = !DILocation(line: 754, column: 4, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5417, file: !3, line: 753, column: 31)
!5422 = !DILocation(line: 754, column: 11, scope: !5421)
!5423 = !DILocation(line: 754, column: 17, scope: !5421)
!5424 = !DILocation(line: 756, column: 3, scope: !5421)
!5425 = !DILocation(line: 757, column: 2, scope: !5410)
!5426 = !DILocation(line: 758, column: 1, scope: !5378)
!5427 = distinct !DISubprogram(name: "pbus_size_io", scope: !3, file: !3, line: 878, type: !5428, scopeLine: 881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!5428 = !DISubroutineType(types: !5429)
!5429 = !{null, !156, !172, !172, !153}
!5430 = !DILocalVariable(name: "bus", arg: 1, scope: !5427, file: !3, line: 878, type: !156)
!5431 = !DILocation(line: 878, column: 42, scope: !5427)
!5432 = !DILocalVariable(name: "min_size", arg: 2, scope: !5427, file: !3, line: 878, type: !172)
!5433 = !DILocation(line: 878, column: 63, scope: !5427)
!5434 = !DILocalVariable(name: "add_size", arg: 3, scope: !5427, file: !3, line: 879, type: !172)
!5435 = !DILocation(line: 879, column: 21, scope: !5427)
!5436 = !DILocalVariable(name: "realloc_head", arg: 4, scope: !5427, file: !3, line: 880, type: !153)
!5437 = !DILocation(line: 880, column: 23, scope: !5427)
!5438 = !DILocalVariable(name: "dev", scope: !5427, file: !3, line: 882, type: !145)
!5439 = !DILocation(line: 882, column: 18, scope: !5427)
!5440 = !DILocalVariable(name: "b_res", scope: !5427, file: !3, line: 883, type: !167)
!5441 = !DILocation(line: 883, column: 19, scope: !5427)
!5442 = !DILocation(line: 883, column: 53, scope: !5427)
!5443 = !DILocation(line: 883, column: 27, scope: !5427)
!5444 = !DILocalVariable(name: "size", scope: !5427, file: !3, line: 885, type: !172)
!5445 = !DILocation(line: 885, column: 18, scope: !5427)
!5446 = !DILocalVariable(name: "size0", scope: !5427, file: !3, line: 885, type: !172)
!5447 = !DILocation(line: 885, column: 28, scope: !5427)
!5448 = !DILocalVariable(name: "size1", scope: !5427, file: !3, line: 885, type: !172)
!5449 = !DILocation(line: 885, column: 39, scope: !5427)
!5450 = !DILocalVariable(name: "children_add_size", scope: !5427, file: !3, line: 886, type: !172)
!5451 = !DILocation(line: 886, column: 18, scope: !5427)
!5452 = !DILocalVariable(name: "min_align", scope: !5427, file: !3, line: 887, type: !172)
!5453 = !DILocation(line: 887, column: 18, scope: !5427)
!5454 = !DILocalVariable(name: "align", scope: !5427, file: !3, line: 887, type: !172)
!5455 = !DILocation(line: 887, column: 29, scope: !5427)
!5456 = !DILocation(line: 889, column: 7, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 889, column: 6)
!5458 = !DILocation(line: 889, column: 6, scope: !5427)
!5459 = !DILocation(line: 890, column: 3, scope: !5457)
!5460 = !DILocation(line: 893, column: 6, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 893, column: 6)
!5462 = !DILocation(line: 893, column: 13, scope: !5461)
!5463 = !DILocation(line: 893, column: 6, scope: !5427)
!5464 = !DILocation(line: 894, column: 3, scope: !5461)
!5465 = !DILocation(line: 896, column: 31, scope: !5427)
!5466 = !DILocation(line: 896, column: 14, scope: !5427)
!5467 = !DILocation(line: 896, column: 12, scope: !5427)
!5468 = !DILocalVariable(name: "__mptr", scope: !5469, file: !3, line: 897, type: !144)
!5469 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 897, column: 2)
!5470 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 897, column: 2)
!5471 = !DILocation(line: 897, column: 2, scope: !5469)
!5472 = !DILocation(line: 897, column: 2, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5469, file: !3, line: 897, column: 2)
!5474 = !DILocation(line: 897, column: 2, scope: !5470)
!5475 = !DILocation(line: 897, column: 2, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 897, column: 2)
!5477 = !DILocalVariable(name: "i", scope: !5478, file: !3, line: 898, type: !120)
!5478 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 897, column: 52)
!5479 = !DILocation(line: 898, column: 7, scope: !5478)
!5480 = !DILocation(line: 900, column: 10, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 900, column: 3)
!5482 = !DILocation(line: 900, column: 8, scope: !5481)
!5483 = !DILocation(line: 900, column: 15, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 900, column: 3)
!5485 = !DILocation(line: 900, column: 17, scope: !5484)
!5486 = !DILocation(line: 900, column: 3, scope: !5481)
!5487 = !DILocalVariable(name: "r", scope: !5488, file: !3, line: 901, type: !167)
!5488 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 900, column: 43)
!5489 = !DILocation(line: 901, column: 21, scope: !5488)
!5490 = !DILocation(line: 901, column: 26, scope: !5488)
!5491 = !DILocation(line: 901, column: 31, scope: !5488)
!5492 = !DILocation(line: 901, column: 40, scope: !5488)
!5493 = !DILocalVariable(name: "r_size", scope: !5488, file: !3, line: 902, type: !185)
!5494 = !DILocation(line: 902, column: 18, scope: !5488)
!5495 = !DILocation(line: 904, column: 8, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 904, column: 8)
!5497 = !DILocation(line: 904, column: 11, scope: !5496)
!5498 = !DILocation(line: 904, column: 18, scope: !5496)
!5499 = !DILocation(line: 904, column: 23, scope: !5496)
!5500 = !DILocation(line: 904, column: 26, scope: !5496)
!5501 = !DILocation(line: 904, column: 32, scope: !5496)
!5502 = !DILocation(line: 904, column: 8, scope: !5488)
!5503 = !DILocation(line: 905, column: 5, scope: !5496)
!5504 = !DILocation(line: 906, column: 27, scope: !5488)
!5505 = !DILocation(line: 906, column: 13, scope: !5488)
!5506 = !DILocation(line: 906, column: 11, scope: !5488)
!5507 = !DILocation(line: 908, column: 8, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 908, column: 8)
!5509 = !DILocation(line: 908, column: 15, scope: !5508)
!5510 = !DILocation(line: 908, column: 8, scope: !5488)
!5511 = !DILocation(line: 910, column: 13, scope: !5508)
!5512 = !DILocation(line: 910, column: 10, scope: !5508)
!5513 = !DILocation(line: 910, column: 5, scope: !5508)
!5514 = !DILocation(line: 912, column: 14, scope: !5508)
!5515 = !DILocation(line: 912, column: 11, scope: !5508)
!5516 = !DILocation(line: 914, column: 35, scope: !5488)
!5517 = !DILocation(line: 914, column: 40, scope: !5488)
!5518 = !DILocation(line: 914, column: 12, scope: !5488)
!5519 = !DILocation(line: 914, column: 10, scope: !5488)
!5520 = !DILocation(line: 915, column: 8, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 915, column: 8)
!5522 = !DILocation(line: 915, column: 16, scope: !5521)
!5523 = !DILocation(line: 915, column: 14, scope: !5521)
!5524 = !DILocation(line: 915, column: 8, scope: !5488)
!5525 = !DILocation(line: 916, column: 17, scope: !5521)
!5526 = !DILocation(line: 916, column: 15, scope: !5521)
!5527 = !DILocation(line: 916, column: 5, scope: !5521)
!5528 = !DILocation(line: 918, column: 8, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 918, column: 8)
!5530 = !DILocation(line: 918, column: 8, scope: !5488)
!5531 = !DILocation(line: 919, column: 43, scope: !5529)
!5532 = !DILocation(line: 919, column: 57, scope: !5529)
!5533 = !DILocation(line: 919, column: 26, scope: !5529)
!5534 = !DILocation(line: 919, column: 23, scope: !5529)
!5535 = !DILocation(line: 919, column: 5, scope: !5529)
!5536 = !DILocation(line: 920, column: 3, scope: !5488)
!5537 = !DILocation(line: 900, column: 39, scope: !5484)
!5538 = !DILocation(line: 900, column: 3, scope: !5484)
!5539 = distinct !{!5539, !5486, !5540}
!5540 = !DILocation(line: 920, column: 3, scope: !5481)
!5541 = !DILocation(line: 921, column: 2, scope: !5478)
!5542 = !DILocalVariable(name: "__mptr", scope: !5543, file: !3, line: 897, type: !144)
!5543 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 897, column: 2)
!5544 = !DILocation(line: 897, column: 2, scope: !5543)
!5545 = !DILocation(line: 897, column: 2, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 897, column: 2)
!5547 = distinct !{!5547, !5474, !5548}
!5548 = !DILocation(line: 921, column: 2, scope: !5470)
!5549 = !DILocation(line: 923, column: 27, scope: !5427)
!5550 = !DILocation(line: 923, column: 33, scope: !5427)
!5551 = !DILocation(line: 923, column: 43, scope: !5427)
!5552 = !DILocation(line: 924, column: 18, scope: !5427)
!5553 = !DILocation(line: 924, column: 4, scope: !5427)
!5554 = !DILocation(line: 924, column: 26, scope: !5427)
!5555 = !DILocation(line: 923, column: 10, scope: !5427)
!5556 = !DILocation(line: 923, column: 8, scope: !5427)
!5557 = !DILocation(line: 925, column: 12, scope: !5427)
!5558 = !DILocation(line: 925, column: 25, scope: !5427)
!5559 = !DILocation(line: 925, column: 29, scope: !5427)
!5560 = !DILocation(line: 925, column: 42, scope: !5427)
!5561 = !DILocation(line: 925, column: 46, scope: !5427)
!5562 = !DILocation(line: 925, column: 55, scope: !5427)
!5563 = !DILocation(line: 925, column: 59, scope: !5427)
!5564 = !DILocation(line: 925, column: 10, scope: !5427)
!5565 = !DILocation(line: 925, column: 81, scope: !5427)
!5566 = !DILocation(line: 926, column: 20, scope: !5427)
!5567 = !DILocation(line: 926, column: 26, scope: !5427)
!5568 = !DILocation(line: 926, column: 36, scope: !5427)
!5569 = !DILocation(line: 926, column: 43, scope: !5427)
!5570 = !DILocation(line: 926, column: 53, scope: !5427)
!5571 = !DILocation(line: 927, column: 18, scope: !5427)
!5572 = !DILocation(line: 927, column: 4, scope: !5427)
!5573 = !DILocation(line: 927, column: 26, scope: !5427)
!5574 = !DILocation(line: 926, column: 3, scope: !5427)
!5575 = !DILocation(line: 925, column: 8, scope: !5427)
!5576 = !DILocation(line: 928, column: 7, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 928, column: 6)
!5578 = !DILocation(line: 928, column: 13, scope: !5577)
!5579 = !DILocation(line: 928, column: 17, scope: !5577)
!5580 = !DILocation(line: 928, column: 6, scope: !5427)
!5581 = !DILocation(line: 929, column: 7, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 929, column: 7)
!5583 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 928, column: 24)
!5584 = !DILocation(line: 929, column: 12, scope: !5582)
!5585 = !DILocation(line: 929, column: 17, scope: !5582)
!5586 = !DILocation(line: 929, column: 21, scope: !5582)
!5587 = !DILocation(line: 929, column: 28, scope: !5582)
!5588 = !DILocation(line: 929, column: 34, scope: !5582)
!5589 = !DILocation(line: 929, column: 37, scope: !5582)
!5590 = !DILocation(line: 929, column: 44, scope: !5582)
!5591 = !DILocation(line: 929, column: 7, scope: !5583)
!5592 = !DILocation(line: 930, column: 4, scope: !5582)
!5593 = !DILocation(line: 932, column: 3, scope: !5583)
!5594 = !DILocation(line: 932, column: 10, scope: !5583)
!5595 = !DILocation(line: 932, column: 16, scope: !5583)
!5596 = !DILocation(line: 933, column: 3, scope: !5583)
!5597 = !DILocation(line: 936, column: 17, scope: !5427)
!5598 = !DILocation(line: 936, column: 2, scope: !5427)
!5599 = !DILocation(line: 936, column: 9, scope: !5427)
!5600 = !DILocation(line: 936, column: 15, scope: !5427)
!5601 = !DILocation(line: 937, column: 15, scope: !5427)
!5602 = !DILocation(line: 937, column: 22, scope: !5427)
!5603 = !DILocation(line: 937, column: 30, scope: !5427)
!5604 = !DILocation(line: 937, column: 28, scope: !5427)
!5605 = !DILocation(line: 937, column: 36, scope: !5427)
!5606 = !DILocation(line: 937, column: 2, scope: !5427)
!5607 = !DILocation(line: 937, column: 9, scope: !5427)
!5608 = !DILocation(line: 937, column: 13, scope: !5427)
!5609 = !DILocation(line: 938, column: 2, scope: !5427)
!5610 = !DILocation(line: 938, column: 9, scope: !5427)
!5611 = !DILocation(line: 938, column: 15, scope: !5427)
!5612 = !DILocation(line: 939, column: 6, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 939, column: 6)
!5614 = !DILocation(line: 939, column: 11, scope: !5613)
!5615 = !DILocation(line: 939, column: 16, scope: !5613)
!5616 = !DILocation(line: 939, column: 19, scope: !5613)
!5617 = !DILocation(line: 939, column: 27, scope: !5613)
!5618 = !DILocation(line: 939, column: 25, scope: !5613)
!5619 = !DILocation(line: 939, column: 33, scope: !5613)
!5620 = !DILocation(line: 939, column: 36, scope: !5613)
!5621 = !DILocation(line: 939, column: 6, scope: !5427)
!5622 = !DILocation(line: 940, column: 15, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5613, file: !3, line: 939, column: 50)
!5624 = !DILocation(line: 940, column: 29, scope: !5623)
!5625 = !DILocation(line: 940, column: 34, scope: !5623)
!5626 = !DILocation(line: 940, column: 40, scope: !5623)
!5627 = !DILocation(line: 940, column: 47, scope: !5623)
!5628 = !DILocation(line: 940, column: 53, scope: !5623)
!5629 = !DILocation(line: 940, column: 52, scope: !5623)
!5630 = !DILocation(line: 941, column: 8, scope: !5623)
!5631 = !DILocation(line: 940, column: 3, scope: !5623)
!5632 = !DILocation(line: 942, column: 3, scope: !5623)
!5633 = !DILocation(line: 945, column: 2, scope: !5623)
!5634 = !DILocation(line: 946, column: 1, scope: !5427)
!5635 = distinct !DISubprogram(name: "pbus_size_mem", scope: !3, file: !3, line: 989, type: !5636, scopeLine: 994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!5636 = !DISubroutineType(types: !5637)
!5637 = !{!120, !156, !185, !185, !185, !185, !172, !172, !153}
!5638 = !DILocalVariable(name: "word", arg: 1, scope: !5639, file: !5640, line: 233, type: !185)
!5639 = distinct !DISubprogram(name: "__ffs", scope: !5640, file: !5640, line: 233, type: !5641, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!5640 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5641 = !DISubroutineType(types: !5642)
!5642 = !{!185, !185}
!5643 = !DILocation(line: 233, column: 58, scope: !5639, inlinedAt: !5644)
!5644 = distinct !DILocation(line: 1047, column: 12, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 1019, column: 43)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 1019, column: 3)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 1019, column: 3)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 1016, column: 52)
!5649 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 1016, column: 2)
!5650 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1016, column: 2)
!5651 = !DILocalVariable(name: "bus", arg: 1, scope: !5635, file: !3, line: 989, type: !156)
!5652 = !DILocation(line: 989, column: 42, scope: !5635)
!5653 = !DILocalVariable(name: "mask", arg: 2, scope: !5635, file: !3, line: 989, type: !185)
!5654 = !DILocation(line: 989, column: 61, scope: !5635)
!5655 = !DILocalVariable(name: "type", arg: 3, scope: !5635, file: !3, line: 990, type: !185)
!5656 = !DILocation(line: 990, column: 19, scope: !5635)
!5657 = !DILocalVariable(name: "type2", arg: 4, scope: !5635, file: !3, line: 990, type: !185)
!5658 = !DILocation(line: 990, column: 39, scope: !5635)
!5659 = !DILocalVariable(name: "type3", arg: 5, scope: !5635, file: !3, line: 991, type: !185)
!5660 = !DILocation(line: 991, column: 19, scope: !5635)
!5661 = !DILocalVariable(name: "min_size", arg: 6, scope: !5635, file: !3, line: 991, type: !172)
!5662 = !DILocation(line: 991, column: 42, scope: !5635)
!5663 = !DILocalVariable(name: "add_size", arg: 7, scope: !5635, file: !3, line: 992, type: !172)
!5664 = !DILocation(line: 992, column: 21, scope: !5635)
!5665 = !DILocalVariable(name: "realloc_head", arg: 8, scope: !5635, file: !3, line: 993, type: !153)
!5666 = !DILocation(line: 993, column: 23, scope: !5635)
!5667 = !DILocalVariable(name: "dev", scope: !5635, file: !3, line: 995, type: !145)
!5668 = !DILocation(line: 995, column: 18, scope: !5635)
!5669 = !DILocalVariable(name: "min_align", scope: !5635, file: !3, line: 996, type: !172)
!5670 = !DILocation(line: 996, column: 18, scope: !5635)
!5671 = !DILocalVariable(name: "align", scope: !5635, file: !3, line: 996, type: !172)
!5672 = !DILocation(line: 996, column: 29, scope: !5635)
!5673 = !DILocalVariable(name: "size", scope: !5635, file: !3, line: 996, type: !172)
!5674 = !DILocation(line: 996, column: 36, scope: !5635)
!5675 = !DILocalVariable(name: "size0", scope: !5635, file: !3, line: 996, type: !172)
!5676 = !DILocation(line: 996, column: 42, scope: !5635)
!5677 = !DILocalVariable(name: "size1", scope: !5635, file: !3, line: 996, type: !172)
!5678 = !DILocation(line: 996, column: 49, scope: !5635)
!5679 = !DILocalVariable(name: "aligns", scope: !5635, file: !3, line: 997, type: !5680)
!5680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !172, size: 1152, elements: !5681)
!5681 = !{!5682}
!5682 = !DISubrange(count: 18)
!5683 = !DILocation(line: 997, column: 18, scope: !5635)
!5684 = !DILocalVariable(name: "order", scope: !5635, file: !3, line: 998, type: !120)
!5685 = !DILocation(line: 998, column: 6, scope: !5635)
!5686 = !DILocalVariable(name: "max_order", scope: !5635, file: !3, line: 998, type: !120)
!5687 = !DILocation(line: 998, column: 13, scope: !5635)
!5688 = !DILocalVariable(name: "b_res", scope: !5635, file: !3, line: 999, type: !167)
!5689 = !DILocation(line: 999, column: 19, scope: !5635)
!5690 = !DILocation(line: 999, column: 53, scope: !5635)
!5691 = !DILocation(line: 1000, column: 6, scope: !5635)
!5692 = !DILocation(line: 1000, column: 11, scope: !5635)
!5693 = !DILocation(line: 1000, column: 34, scope: !5635)
!5694 = !DILocation(line: 999, column: 27, scope: !5635)
!5695 = !DILocalVariable(name: "children_add_size", scope: !5635, file: !3, line: 1001, type: !172)
!5696 = !DILocation(line: 1001, column: 18, scope: !5635)
!5697 = !DILocalVariable(name: "children_add_align", scope: !5635, file: !3, line: 1002, type: !172)
!5698 = !DILocation(line: 1002, column: 18, scope: !5635)
!5699 = !DILocalVariable(name: "add_align", scope: !5635, file: !3, line: 1003, type: !172)
!5700 = !DILocation(line: 1003, column: 18, scope: !5635)
!5701 = !DILocation(line: 1005, column: 7, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1005, column: 6)
!5703 = !DILocation(line: 1005, column: 6, scope: !5635)
!5704 = !DILocation(line: 1006, column: 3, scope: !5702)
!5705 = !DILocation(line: 1009, column: 6, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1009, column: 6)
!5707 = !DILocation(line: 1009, column: 13, scope: !5706)
!5708 = !DILocation(line: 1009, column: 6, scope: !5635)
!5709 = !DILocation(line: 1010, column: 3, scope: !5706)
!5710 = !DILocation(line: 1012, column: 2, scope: !5635)
!5711 = !DILocation(line: 1013, column: 12, scope: !5635)
!5712 = !DILocation(line: 1014, column: 7, scope: !5635)
!5713 = !DILocalVariable(name: "__mptr", scope: !5714, file: !3, line: 1016, type: !144)
!5714 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 1016, column: 2)
!5715 = !DILocation(line: 1016, column: 2, scope: !5714)
!5716 = !DILocation(line: 1016, column: 2, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 1016, column: 2)
!5718 = !DILocation(line: 1016, column: 2, scope: !5650)
!5719 = !DILocation(line: 1016, column: 2, scope: !5649)
!5720 = !DILocalVariable(name: "i", scope: !5648, file: !3, line: 1017, type: !120)
!5721 = !DILocation(line: 1017, column: 7, scope: !5648)
!5722 = !DILocation(line: 1019, column: 10, scope: !5647)
!5723 = !DILocation(line: 1019, column: 8, scope: !5647)
!5724 = !DILocation(line: 1019, column: 15, scope: !5646)
!5725 = !DILocation(line: 1019, column: 17, scope: !5646)
!5726 = !DILocation(line: 1019, column: 3, scope: !5647)
!5727 = !DILocalVariable(name: "r", scope: !5645, file: !3, line: 1020, type: !167)
!5728 = !DILocation(line: 1020, column: 21, scope: !5645)
!5729 = !DILocation(line: 1020, column: 26, scope: !5645)
!5730 = !DILocation(line: 1020, column: 31, scope: !5645)
!5731 = !DILocation(line: 1020, column: 40, scope: !5645)
!5732 = !DILocalVariable(name: "r_size", scope: !5645, file: !3, line: 1021, type: !172)
!5733 = !DILocation(line: 1021, column: 20, scope: !5645)
!5734 = !DILocation(line: 1023, column: 8, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 1023, column: 8)
!5736 = !DILocation(line: 1023, column: 11, scope: !5735)
!5737 = !DILocation(line: 1023, column: 18, scope: !5735)
!5738 = !DILocation(line: 1023, column: 22, scope: !5735)
!5739 = !DILocation(line: 1023, column: 25, scope: !5735)
!5740 = !DILocation(line: 1023, column: 31, scope: !5735)
!5741 = !DILocation(line: 1023, column: 55, scope: !5735)
!5742 = !DILocation(line: 1024, column: 10, scope: !5735)
!5743 = !DILocation(line: 1024, column: 13, scope: !5735)
!5744 = !DILocation(line: 1024, column: 21, scope: !5735)
!5745 = !DILocation(line: 1024, column: 19, scope: !5735)
!5746 = !DILocation(line: 1024, column: 30, scope: !5735)
!5747 = !DILocation(line: 1024, column: 27, scope: !5735)
!5748 = !DILocation(line: 1024, column: 35, scope: !5735)
!5749 = !DILocation(line: 1025, column: 10, scope: !5735)
!5750 = !DILocation(line: 1025, column: 13, scope: !5735)
!5751 = !DILocation(line: 1025, column: 21, scope: !5735)
!5752 = !DILocation(line: 1025, column: 19, scope: !5735)
!5753 = !DILocation(line: 1025, column: 30, scope: !5735)
!5754 = !DILocation(line: 1025, column: 27, scope: !5735)
!5755 = !DILocation(line: 1025, column: 36, scope: !5735)
!5756 = !DILocation(line: 1026, column: 10, scope: !5735)
!5757 = !DILocation(line: 1026, column: 13, scope: !5735)
!5758 = !DILocation(line: 1026, column: 21, scope: !5735)
!5759 = !DILocation(line: 1026, column: 19, scope: !5735)
!5760 = !DILocation(line: 1026, column: 30, scope: !5735)
!5761 = !DILocation(line: 1026, column: 27, scope: !5735)
!5762 = !DILocation(line: 1023, column: 8, scope: !5645)
!5763 = !DILocation(line: 1027, column: 5, scope: !5735)
!5764 = !DILocation(line: 1028, column: 27, scope: !5645)
!5765 = !DILocation(line: 1028, column: 13, scope: !5645)
!5766 = !DILocation(line: 1028, column: 11, scope: !5645)
!5767 = !DILocation(line: 1031, column: 8, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 1031, column: 8)
!5769 = !DILocation(line: 1031, column: 21, scope: !5768)
!5770 = !DILocation(line: 1031, column: 24, scope: !5768)
!5771 = !DILocation(line: 1031, column: 26, scope: !5768)
!5772 = !DILocation(line: 1031, column: 47, scope: !5768)
!5773 = !DILocation(line: 1032, column: 6, scope: !5768)
!5774 = !DILocation(line: 1032, column: 8, scope: !5768)
!5775 = !DILocation(line: 1031, column: 8, scope: !5645)
!5776 = !DILocalVariable(name: "__UNIQUE_ID___x285", scope: !5777, file: !3, line: 1033, type: !172)
!5777 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 1033, column: 17)
!5778 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 1032, column: 33)
!5779 = !DILocation(line: 1033, column: 17, scope: !5777)
!5780 = !DILocalVariable(name: "__UNIQUE_ID___y286", scope: !5777, file: !3, line: 1033, type: !172)
!5781 = !DILocation(line: 1033, column: 15, scope: !5778)
!5782 = !DILocation(line: 1034, column: 14, scope: !5778)
!5783 = !DILocation(line: 1034, column: 17, scope: !5778)
!5784 = !DILocation(line: 1034, column: 23, scope: !5778)
!5785 = !DILocation(line: 1034, column: 5, scope: !5778)
!5786 = !DILocation(line: 1034, column: 8, scope: !5778)
!5787 = !DILocation(line: 1034, column: 12, scope: !5778)
!5788 = !DILocation(line: 1035, column: 17, scope: !5778)
!5789 = !DILocation(line: 1035, column: 31, scope: !5778)
!5790 = !DILocation(line: 1035, column: 36, scope: !5778)
!5791 = !DILocation(line: 1035, column: 39, scope: !5778)
!5792 = !DILocation(line: 1035, column: 5, scope: !5778)
!5793 = !DILocation(line: 1036, column: 26, scope: !5778)
!5794 = !DILocation(line: 1036, column: 23, scope: !5778)
!5795 = !DILocation(line: 1037, column: 5, scope: !5778)
!5796 = !DILocation(line: 1046, column: 35, scope: !5645)
!5797 = !DILocation(line: 1046, column: 40, scope: !5645)
!5798 = !DILocation(line: 1046, column: 12, scope: !5645)
!5799 = !DILocation(line: 1046, column: 10, scope: !5645)
!5800 = !DILocation(line: 1047, column: 18, scope: !5645)
!5801 = !DILocation(line: 237, column: 11, scope: !5639, inlinedAt: !5644)
!5802 = !DILocation(line: 235, column: 2, scope: !5639, inlinedAt: !5644)
!5803 = !{i32 306333}
!5804 = !DILocation(line: 238, column: 9, scope: !5639, inlinedAt: !5644)
!5805 = !DILocation(line: 1047, column: 25, scope: !5645)
!5806 = !DILocation(line: 1047, column: 12, scope: !5645)
!5807 = !DILocation(line: 1047, column: 10, scope: !5645)
!5808 = !DILocation(line: 1048, column: 8, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 1048, column: 8)
!5810 = !DILocation(line: 1048, column: 14, scope: !5809)
!5811 = !DILocation(line: 1048, column: 8, scope: !5645)
!5812 = !DILocation(line: 1049, column: 11, scope: !5809)
!5813 = !DILocation(line: 1049, column: 5, scope: !5809)
!5814 = !DILocation(line: 1050, column: 8, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 1050, column: 8)
!5816 = !DILocation(line: 1050, column: 14, scope: !5815)
!5817 = !DILocation(line: 1050, column: 8, scope: !5645)
!5818 = !DILocation(line: 1051, column: 5, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 1050, column: 37)
!5820 = !DILocation(line: 1053, column: 5, scope: !5819)
!5821 = !DILocation(line: 1053, column: 8, scope: !5819)
!5822 = !DILocation(line: 1053, column: 14, scope: !5819)
!5823 = !DILocation(line: 1054, column: 5, scope: !5819)
!5824 = !DILocalVariable(name: "__UNIQUE_ID___x287", scope: !5825, file: !3, line: 1056, type: !172)
!5825 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 1056, column: 12)
!5826 = !DILocation(line: 1056, column: 12, scope: !5825)
!5827 = !DILocalVariable(name: "__UNIQUE_ID___y288", scope: !5825, file: !3, line: 1056, type: !172)
!5828 = !DILocation(line: 1056, column: 9, scope: !5645)
!5829 = !DILocation(line: 1061, column: 8, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 1061, column: 8)
!5831 = !DILocation(line: 1061, column: 18, scope: !5830)
!5832 = !DILocation(line: 1061, column: 15, scope: !5830)
!5833 = !DILocation(line: 1061, column: 8, scope: !5645)
!5834 = !DILocation(line: 1062, column: 22, scope: !5830)
!5835 = !DILocation(line: 1062, column: 12, scope: !5830)
!5836 = !DILocation(line: 1062, column: 5, scope: !5830)
!5837 = !DILocation(line: 1062, column: 19, scope: !5830)
!5838 = !DILocation(line: 1063, column: 8, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 1063, column: 8)
!5840 = !DILocation(line: 1063, column: 16, scope: !5839)
!5841 = !DILocation(line: 1063, column: 14, scope: !5839)
!5842 = !DILocation(line: 1063, column: 8, scope: !5645)
!5843 = !DILocation(line: 1064, column: 17, scope: !5839)
!5844 = !DILocation(line: 1064, column: 15, scope: !5839)
!5845 = !DILocation(line: 1064, column: 5, scope: !5839)
!5846 = !DILocation(line: 1066, column: 8, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 1066, column: 8)
!5848 = !DILocation(line: 1066, column: 8, scope: !5645)
!5849 = !DILocation(line: 1067, column: 43, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 1066, column: 22)
!5851 = !DILocation(line: 1067, column: 57, scope: !5850)
!5852 = !DILocation(line: 1067, column: 26, scope: !5850)
!5853 = !DILocation(line: 1067, column: 23, scope: !5850)
!5854 = !DILocation(line: 1068, column: 44, scope: !5850)
!5855 = !DILocation(line: 1068, column: 58, scope: !5850)
!5856 = !DILocation(line: 1068, column: 26, scope: !5850)
!5857 = !DILocation(line: 1068, column: 24, scope: !5850)
!5858 = !DILocalVariable(name: "__UNIQUE_ID___x289", scope: !5859, file: !3, line: 1069, type: !172)
!5859 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 1069, column: 17)
!5860 = !DILocation(line: 1069, column: 17, scope: !5859)
!5861 = !DILocalVariable(name: "__UNIQUE_ID___y290", scope: !5859, file: !3, line: 1069, type: !172)
!5862 = !DILocation(line: 1069, column: 15, scope: !5850)
!5863 = !DILocation(line: 1070, column: 4, scope: !5850)
!5864 = !DILocation(line: 1071, column: 3, scope: !5645)
!5865 = !DILocation(line: 1019, column: 39, scope: !5646)
!5866 = !DILocation(line: 1019, column: 3, scope: !5646)
!5867 = distinct !{!5867, !5726, !5868}
!5868 = !DILocation(line: 1071, column: 3, scope: !5647)
!5869 = !DILocation(line: 1072, column: 2, scope: !5648)
!5870 = !DILocalVariable(name: "__mptr", scope: !5871, file: !3, line: 1016, type: !144)
!5871 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 1016, column: 2)
!5872 = !DILocation(line: 1016, column: 2, scope: !5871)
!5873 = !DILocation(line: 1016, column: 2, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 1016, column: 2)
!5875 = distinct !{!5875, !5718, !5876}
!5876 = !DILocation(line: 1072, column: 2, scope: !5650)
!5877 = !DILocation(line: 1074, column: 34, scope: !5635)
!5878 = !DILocation(line: 1074, column: 42, scope: !5635)
!5879 = !DILocation(line: 1074, column: 14, scope: !5635)
!5880 = !DILocation(line: 1074, column: 12, scope: !5635)
!5881 = !DILocalVariable(name: "__UNIQUE_ID___x291", scope: !5882, file: !3, line: 1075, type: !172)
!5882 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1075, column: 14)
!5883 = !DILocation(line: 1075, column: 14, scope: !5882)
!5884 = !DILocalVariable(name: "__UNIQUE_ID___y292", scope: !5882, file: !3, line: 1075, type: !172)
!5885 = !DILocation(line: 1075, column: 12, scope: !5635)
!5886 = !DILocation(line: 1076, column: 28, scope: !5635)
!5887 = !DILocation(line: 1076, column: 34, scope: !5635)
!5888 = !DILocation(line: 1076, column: 64, scope: !5635)
!5889 = !DILocation(line: 1076, column: 50, scope: !5635)
!5890 = !DILocation(line: 1076, column: 72, scope: !5635)
!5891 = !DILocation(line: 1076, column: 10, scope: !5635)
!5892 = !DILocation(line: 1076, column: 8, scope: !5635)
!5893 = !DILocalVariable(name: "__UNIQUE_ID___x293", scope: !5894, file: !3, line: 1077, type: !172)
!5894 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1077, column: 14)
!5895 = !DILocation(line: 1077, column: 14, scope: !5894)
!5896 = !DILocalVariable(name: "__UNIQUE_ID___y294", scope: !5894, file: !3, line: 1077, type: !172)
!5897 = !DILocation(line: 1077, column: 12, scope: !5635)
!5898 = !DILocation(line: 1078, column: 12, scope: !5635)
!5899 = !DILocation(line: 1078, column: 25, scope: !5635)
!5900 = !DILocation(line: 1078, column: 29, scope: !5635)
!5901 = !DILocation(line: 1078, column: 42, scope: !5635)
!5902 = !DILocation(line: 1078, column: 46, scope: !5635)
!5903 = !DILocation(line: 1078, column: 55, scope: !5635)
!5904 = !DILocation(line: 1078, column: 59, scope: !5635)
!5905 = !DILocation(line: 1078, column: 10, scope: !5635)
!5906 = !DILocation(line: 1078, column: 81, scope: !5635)
!5907 = !DILocation(line: 1079, column: 21, scope: !5635)
!5908 = !DILocation(line: 1079, column: 27, scope: !5635)
!5909 = !DILocation(line: 1079, column: 37, scope: !5635)
!5910 = !DILocation(line: 1079, column: 47, scope: !5635)
!5911 = !DILocation(line: 1080, column: 19, scope: !5635)
!5912 = !DILocation(line: 1080, column: 5, scope: !5635)
!5913 = !DILocation(line: 1080, column: 27, scope: !5635)
!5914 = !DILocation(line: 1079, column: 3, scope: !5635)
!5915 = !DILocation(line: 1078, column: 8, scope: !5635)
!5916 = !DILocation(line: 1081, column: 7, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1081, column: 6)
!5918 = !DILocation(line: 1081, column: 13, scope: !5917)
!5919 = !DILocation(line: 1081, column: 17, scope: !5917)
!5920 = !DILocation(line: 1081, column: 6, scope: !5635)
!5921 = !DILocation(line: 1082, column: 7, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 1082, column: 7)
!5923 = distinct !DILexicalBlock(scope: !5917, file: !3, line: 1081, column: 24)
!5924 = !DILocation(line: 1082, column: 12, scope: !5922)
!5925 = !DILocation(line: 1082, column: 17, scope: !5922)
!5926 = !DILocation(line: 1082, column: 21, scope: !5922)
!5927 = !DILocation(line: 1082, column: 28, scope: !5922)
!5928 = !DILocation(line: 1082, column: 34, scope: !5922)
!5929 = !DILocation(line: 1082, column: 37, scope: !5922)
!5930 = !DILocation(line: 1082, column: 44, scope: !5922)
!5931 = !DILocation(line: 1082, column: 7, scope: !5923)
!5932 = !DILocation(line: 1083, column: 4, scope: !5922)
!5933 = !DILocation(line: 1085, column: 3, scope: !5923)
!5934 = !DILocation(line: 1085, column: 10, scope: !5923)
!5935 = !DILocation(line: 1085, column: 16, scope: !5923)
!5936 = !DILocation(line: 1086, column: 3, scope: !5923)
!5937 = !DILocation(line: 1088, column: 17, scope: !5635)
!5938 = !DILocation(line: 1088, column: 2, scope: !5635)
!5939 = !DILocation(line: 1088, column: 9, scope: !5635)
!5940 = !DILocation(line: 1088, column: 15, scope: !5635)
!5941 = !DILocation(line: 1089, column: 15, scope: !5635)
!5942 = !DILocation(line: 1089, column: 23, scope: !5635)
!5943 = !DILocation(line: 1089, column: 21, scope: !5635)
!5944 = !DILocation(line: 1089, column: 33, scope: !5635)
!5945 = !DILocation(line: 1089, column: 2, scope: !5635)
!5946 = !DILocation(line: 1089, column: 9, scope: !5635)
!5947 = !DILocation(line: 1089, column: 13, scope: !5635)
!5948 = !DILocation(line: 1090, column: 2, scope: !5635)
!5949 = !DILocation(line: 1090, column: 9, scope: !5635)
!5950 = !DILocation(line: 1090, column: 15, scope: !5635)
!5951 = !DILocation(line: 1091, column: 6, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 1091, column: 6)
!5953 = !DILocation(line: 1091, column: 11, scope: !5952)
!5954 = !DILocation(line: 1091, column: 16, scope: !5952)
!5955 = !DILocation(line: 1091, column: 19, scope: !5952)
!5956 = !DILocation(line: 1091, column: 27, scope: !5952)
!5957 = !DILocation(line: 1091, column: 25, scope: !5952)
!5958 = !DILocation(line: 1091, column: 33, scope: !5952)
!5959 = !DILocation(line: 1091, column: 36, scope: !5952)
!5960 = !DILocation(line: 1091, column: 6, scope: !5635)
!5961 = !DILocation(line: 1092, column: 15, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 1091, column: 50)
!5963 = !DILocation(line: 1092, column: 29, scope: !5962)
!5964 = !DILocation(line: 1092, column: 34, scope: !5962)
!5965 = !DILocation(line: 1092, column: 40, scope: !5962)
!5966 = !DILocation(line: 1092, column: 47, scope: !5962)
!5967 = !DILocation(line: 1092, column: 53, scope: !5962)
!5968 = !DILocation(line: 1092, column: 52, scope: !5962)
!5969 = !DILocation(line: 1092, column: 60, scope: !5962)
!5970 = !DILocation(line: 1092, column: 3, scope: !5962)
!5971 = !DILocation(line: 1093, column: 3, scope: !5962)
!5972 = !DILocation(line: 1097, column: 2, scope: !5962)
!5973 = !DILocation(line: 1098, column: 2, scope: !5635)
!5974 = !DILocation(line: 1099, column: 1, scope: !5635)
!5975 = distinct !DISubprogram(name: "pci_bus_size_bridges", scope: !3, file: !3, line: 1332, type: !204, scopeLine: 1333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!5976 = !DILocalVariable(name: "bus", arg: 1, scope: !5975, file: !3, line: 1332, type: !156)
!5977 = !DILocation(line: 1332, column: 43, scope: !5975)
!5978 = !DILocation(line: 1334, column: 25, scope: !5975)
!5979 = !DILocation(line: 1334, column: 2, scope: !5975)
!5980 = !DILocation(line: 1335, column: 1, scope: !5975)
!5981 = distinct !DISubprogram(name: "__pci_bus_assign_resources", scope: !3, file: !3, line: 1379, type: !5982, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!5982 = !DISubroutineType(types: !5983)
!5983 = !{null, !5984, !153, !153}
!5984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5985, size: 64)
!5985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!5986 = !DILocalVariable(name: "bus", arg: 1, scope: !5981, file: !3, line: 1379, type: !5984)
!5987 = !DILocation(line: 1379, column: 55, scope: !5981)
!5988 = !DILocalVariable(name: "realloc_head", arg: 2, scope: !5981, file: !3, line: 1380, type: !153)
!5989 = !DILocation(line: 1380, column: 23, scope: !5981)
!5990 = !DILocalVariable(name: "fail_head", arg: 3, scope: !5981, file: !3, line: 1381, type: !153)
!5991 = !DILocation(line: 1381, column: 23, scope: !5981)
!5992 = !DILocalVariable(name: "b", scope: !5981, file: !3, line: 1383, type: !156)
!5993 = !DILocation(line: 1383, column: 18, scope: !5981)
!5994 = !DILocalVariable(name: "dev", scope: !5981, file: !3, line: 1384, type: !145)
!5995 = !DILocation(line: 1384, column: 18, scope: !5981)
!5996 = !DILocation(line: 1386, column: 31, scope: !5981)
!5997 = !DILocation(line: 1386, column: 36, scope: !5981)
!5998 = !DILocation(line: 1386, column: 50, scope: !5981)
!5999 = !DILocation(line: 1386, column: 2, scope: !5981)
!6000 = !DILocalVariable(name: "__mptr", scope: !6001, file: !3, line: 1388, type: !144)
!6001 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 1388, column: 2)
!6002 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 1388, column: 2)
!6003 = !DILocation(line: 1388, column: 2, scope: !6001)
!6004 = !DILocation(line: 1388, column: 2, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1388, column: 2)
!6006 = !DILocation(line: 1388, column: 2, scope: !6002)
!6007 = !DILocation(line: 1388, column: 2, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 1388, column: 2)
!6009 = !DILocation(line: 1389, column: 31, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1388, column: 52)
!6011 = !DILocation(line: 1389, column: 3, scope: !6010)
!6012 = !DILocation(line: 1391, column: 7, scope: !6010)
!6013 = !DILocation(line: 1391, column: 12, scope: !6010)
!6014 = !DILocation(line: 1391, column: 5, scope: !6010)
!6015 = !DILocation(line: 1392, column: 8, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6010, file: !3, line: 1392, column: 7)
!6017 = !DILocation(line: 1392, column: 7, scope: !6010)
!6018 = !DILocation(line: 1393, column: 4, scope: !6016)
!6019 = !DILocation(line: 1395, column: 30, scope: !6010)
!6020 = !DILocation(line: 1395, column: 33, scope: !6010)
!6021 = !DILocation(line: 1395, column: 47, scope: !6010)
!6022 = !DILocation(line: 1395, column: 3, scope: !6010)
!6023 = !DILocation(line: 1397, column: 11, scope: !6010)
!6024 = !DILocation(line: 1397, column: 16, scope: !6010)
!6025 = !DILocation(line: 1397, column: 3, scope: !6010)
!6026 = !DILocation(line: 1399, column: 24, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 1399, column: 8)
!6028 = distinct !DILexicalBlock(scope: !6010, file: !3, line: 1397, column: 26)
!6029 = !DILocation(line: 1399, column: 9, scope: !6027)
!6030 = !DILocation(line: 1399, column: 8, scope: !6028)
!6031 = !DILocation(line: 1400, column: 22, scope: !6027)
!6032 = !DILocation(line: 1400, column: 5, scope: !6027)
!6033 = !DILocation(line: 1401, column: 4, scope: !6028)
!6034 = !DILocation(line: 1404, column: 22, scope: !6028)
!6035 = !DILocation(line: 1404, column: 4, scope: !6028)
!6036 = !DILocation(line: 1405, column: 4, scope: !6028)
!6037 = !DILocation(line: 1408, column: 4, scope: !6028)
!6038 = !DILocation(line: 1410, column: 4, scope: !6028)
!6039 = !DILocation(line: 1412, column: 2, scope: !6010)
!6040 = !DILocalVariable(name: "__mptr", scope: !6041, file: !3, line: 1388, type: !144)
!6041 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1388, column: 2)
!6042 = !DILocation(line: 1388, column: 2, scope: !6041)
!6043 = !DILocation(line: 1388, column: 2, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 1388, column: 2)
!6045 = distinct !{!6045, !6006, !6046}
!6046 = !DILocation(line: 1412, column: 2, scope: !6002)
!6047 = !DILocation(line: 1413, column: 1, scope: !5981)
!6048 = distinct !DISubprogram(name: "pbus_assign_resources_sorted", scope: !3, file: !3, line: 493, type: !5982, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6049 = !DILocalVariable(name: "bus", arg: 1, scope: !6048, file: !3, line: 493, type: !5984)
!6050 = !DILocation(line: 493, column: 64, scope: !6048)
!6051 = !DILocalVariable(name: "realloc_head", arg: 2, scope: !6048, file: !3, line: 494, type: !153)
!6052 = !DILocation(line: 494, column: 25, scope: !6048)
!6053 = !DILocalVariable(name: "fail_head", arg: 3, scope: !6048, file: !3, line: 495, type: !153)
!6054 = !DILocation(line: 495, column: 25, scope: !6048)
!6055 = !DILocalVariable(name: "dev", scope: !6048, file: !3, line: 497, type: !145)
!6056 = !DILocation(line: 497, column: 18, scope: !6048)
!6057 = !DILocalVariable(name: "head", scope: !6048, file: !3, line: 498, type: !149)
!6058 = !DILocation(line: 498, column: 2, scope: !6048)
!6059 = !DILocalVariable(name: "__mptr", scope: !6060, file: !3, line: 500, type: !144)
!6060 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 500, column: 2)
!6061 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 500, column: 2)
!6062 = !DILocation(line: 500, column: 2, scope: !6060)
!6063 = !DILocation(line: 500, column: 2, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 500, column: 2)
!6065 = !DILocation(line: 500, column: 2, scope: !6061)
!6066 = !DILocation(line: 500, column: 2, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 500, column: 2)
!6068 = !DILocation(line: 501, column: 24, scope: !6067)
!6069 = !DILocation(line: 501, column: 3, scope: !6067)
!6070 = !DILocalVariable(name: "__mptr", scope: !6071, file: !3, line: 500, type: !144)
!6071 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 500, column: 2)
!6072 = !DILocation(line: 500, column: 2, scope: !6071)
!6073 = !DILocation(line: 500, column: 2, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 500, column: 2)
!6075 = distinct !{!6075, !6065, !6076}
!6076 = !DILocation(line: 501, column: 34, scope: !6061)
!6077 = !DILocation(line: 503, column: 35, scope: !6048)
!6078 = !DILocation(line: 503, column: 49, scope: !6048)
!6079 = !DILocation(line: 503, column: 2, scope: !6048)
!6080 = !DILocation(line: 504, column: 1, scope: !6048)
!6081 = distinct !DISubprogram(name: "pdev_assign_fixed_resources", scope: !3, file: !3, line: 1359, type: !3995, scopeLine: 1360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6082 = !DILocalVariable(name: "dev", arg: 1, scope: !6081, file: !3, line: 1359, type: !145)
!6083 = !DILocation(line: 1359, column: 57, scope: !6081)
!6084 = !DILocalVariable(name: "i", scope: !6081, file: !3, line: 1361, type: !120)
!6085 = !DILocation(line: 1361, column: 6, scope: !6081)
!6086 = !DILocation(line: 1363, column: 9, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6081, file: !3, line: 1363, column: 2)
!6088 = !DILocation(line: 1363, column: 7, scope: !6087)
!6089 = !DILocation(line: 1363, column: 14, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 1363, column: 2)
!6091 = !DILocation(line: 1363, column: 16, scope: !6090)
!6092 = !DILocation(line: 1363, column: 2, scope: !6087)
!6093 = !DILocalVariable(name: "b", scope: !6094, file: !3, line: 1364, type: !156)
!6094 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 1363, column: 43)
!6095 = !DILocation(line: 1364, column: 19, scope: !6094)
!6096 = !DILocalVariable(name: "r", scope: !6094, file: !3, line: 1365, type: !167)
!6097 = !DILocation(line: 1365, column: 20, scope: !6094)
!6098 = !DILocation(line: 1365, column: 25, scope: !6094)
!6099 = !DILocation(line: 1365, column: 30, scope: !6094)
!6100 = !DILocation(line: 1365, column: 39, scope: !6094)
!6101 = !DILocation(line: 1367, column: 7, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 1367, column: 7)
!6103 = !DILocation(line: 1367, column: 10, scope: !6102)
!6104 = !DILocation(line: 1367, column: 17, scope: !6102)
!6105 = !DILocation(line: 1367, column: 22, scope: !6102)
!6106 = !DILocation(line: 1367, column: 25, scope: !6102)
!6107 = !DILocation(line: 1367, column: 31, scope: !6102)
!6108 = !DILocation(line: 1367, column: 55, scope: !6102)
!6109 = !DILocation(line: 1368, column: 9, scope: !6102)
!6110 = !DILocation(line: 1368, column: 12, scope: !6102)
!6111 = !DILocation(line: 1368, column: 18, scope: !6102)
!6112 = !DILocation(line: 1367, column: 7, scope: !6094)
!6113 = !DILocation(line: 1369, column: 4, scope: !6102)
!6114 = !DILocation(line: 1371, column: 7, scope: !6094)
!6115 = !DILocation(line: 1371, column: 12, scope: !6094)
!6116 = !DILocation(line: 1371, column: 5, scope: !6094)
!6117 = !DILocation(line: 1372, column: 3, scope: !6094)
!6118 = !DILocation(line: 1372, column: 10, scope: !6094)
!6119 = !DILocation(line: 1372, column: 12, scope: !6094)
!6120 = !DILocation(line: 1372, column: 16, scope: !6094)
!6121 = !DILocation(line: 1372, column: 19, scope: !6094)
!6122 = !DILocation(line: 1372, column: 15, scope: !6094)
!6123 = !DILocation(line: 0, scope: !6094)
!6124 = !DILocation(line: 1373, column: 33, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 1372, column: 27)
!6126 = !DILocation(line: 1373, column: 36, scope: !6125)
!6127 = !DILocation(line: 1373, column: 4, scope: !6125)
!6128 = !DILocation(line: 1374, column: 8, scope: !6125)
!6129 = !DILocation(line: 1374, column: 11, scope: !6125)
!6130 = !DILocation(line: 1374, column: 6, scope: !6125)
!6131 = distinct !{!6131, !6117, !6132}
!6132 = !DILocation(line: 1375, column: 3, scope: !6094)
!6133 = !DILocation(line: 1376, column: 2, scope: !6094)
!6134 = !DILocation(line: 1363, column: 39, scope: !6090)
!6135 = !DILocation(line: 1363, column: 2, scope: !6090)
!6136 = distinct !{!6136, !6092, !6137}
!6137 = !DILocation(line: 1376, column: 2, scope: !6087)
!6138 = !DILocation(line: 1377, column: 1, scope: !6081)
!6139 = distinct !DISubprogram(name: "pci_is_enabled", scope: !108, file: !108, line: 1175, type: !4003, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6140 = !DILocalVariable(name: "v", arg: 1, scope: !6141, file: !6142, line: 23, type: !6145)
!6141 = distinct !DISubprogram(name: "arch_atomic_read", scope: !6142, file: !6142, line: 23, type: !6143, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6142 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!6143 = !DISubroutineType(types: !6144)
!6144 = !{!120, !6145}
!6145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6146, size: 64)
!6146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !768)
!6147 = !DILocation(line: 23, column: 61, scope: !6141, inlinedAt: !6148)
!6148 = distinct !DILocation(line: 28, column: 9, scope: !6149, inlinedAt: !6151)
!6149 = distinct !DISubprogram(name: "atomic_read", scope: !6150, file: !6150, line: 25, type: !6143, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6150 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6151 = distinct !DILocation(line: 1177, column: 10, scope: !6139)
!6152 = !DILocalVariable(name: "v", arg: 1, scope: !6153, file: !6154, line: 69, type: !6157)
!6153 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !6154, file: !6154, line: 69, type: !6155, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6154 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6155 = !DISubroutineType(types: !6156)
!6156 = !{null, !6157, !347}
!6157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6158, size: 64)
!6158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6159)
!6159 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!6160 = !DILocation(line: 69, column: 73, scope: !6153, inlinedAt: !6161)
!6161 = distinct !DILocation(line: 27, column: 2, scope: !6149, inlinedAt: !6151)
!6162 = !DILocalVariable(name: "size", arg: 2, scope: !6153, file: !6154, line: 69, type: !347)
!6163 = !DILocation(line: 69, column: 83, scope: !6153, inlinedAt: !6161)
!6164 = !DILocalVariable(name: "v", arg: 1, scope: !6149, file: !6150, line: 25, type: !6145)
!6165 = !DILocation(line: 25, column: 29, scope: !6149, inlinedAt: !6151)
!6166 = !DILocalVariable(name: "pdev", arg: 1, scope: !6139, file: !108, line: 1175, type: !145)
!6167 = !DILocation(line: 1175, column: 50, scope: !6139)
!6168 = !DILocation(line: 1177, column: 23, scope: !6139)
!6169 = !DILocation(line: 1177, column: 29, scope: !6139)
!6170 = !DILocation(line: 27, column: 25, scope: !6149, inlinedAt: !6151)
!6171 = !DILocation(line: 71, column: 19, scope: !6153, inlinedAt: !6161)
!6172 = !DILocation(line: 71, column: 22, scope: !6153, inlinedAt: !6161)
!6173 = !DILocation(line: 71, column: 2, scope: !6153, inlinedAt: !6161)
!6174 = !DILocation(line: 72, column: 2, scope: !6153, inlinedAt: !6161)
!6175 = !DILocation(line: 28, column: 26, scope: !6149, inlinedAt: !6151)
!6176 = !DILocation(line: 29, column: 9, scope: !6141, inlinedAt: !6148)
!6177 = !DILocation(line: 1177, column: 41, scope: !6139)
!6178 = !DILocation(line: 1177, column: 2, scope: !6139)
!6179 = distinct !DISubprogram(name: "pci_domain_nr", scope: !6180, file: !6180, line: 44, type: !200, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6180 = !DIFile(filename: "./arch/x86/include/asm/pci.h", directory: "/home/lizy2001/genbc/linux")
!6181 = !DILocalVariable(name: "bus", arg: 1, scope: !6179, file: !6180, line: 44, type: !156)
!6182 = !DILocation(line: 44, column: 49, scope: !6179)
!6183 = !DILocation(line: 46, column: 24, scope: !6179)
!6184 = !DILocation(line: 46, column: 9, scope: !6179)
!6185 = !DILocation(line: 46, column: 30, scope: !6179)
!6186 = !DILocation(line: 46, column: 2, scope: !6179)
!6187 = distinct !DISubprogram(name: "pci_bus_assign_resources", scope: !3, file: !3, line: 1415, type: !6188, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6188 = !DISubroutineType(types: !6189)
!6189 = !{null, !5984}
!6190 = !DILocalVariable(name: "bus", arg: 1, scope: !6187, file: !3, line: 1415, type: !5984)
!6191 = !DILocation(line: 1415, column: 53, scope: !6187)
!6192 = !DILocation(line: 1417, column: 29, scope: !6187)
!6193 = !DILocation(line: 1417, column: 2, scope: !6187)
!6194 = !DILocation(line: 1418, column: 1, scope: !6187)
!6195 = distinct !DISubprogram(name: "pci_bus_claim_resources", scope: !3, file: !3, line: 1481, type: !204, scopeLine: 1482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6196 = !DILocalVariable(name: "b", arg: 1, scope: !6195, file: !3, line: 1481, type: !156)
!6197 = !DILocation(line: 1481, column: 46, scope: !6195)
!6198 = !DILocation(line: 1483, column: 29, scope: !6195)
!6199 = !DILocation(line: 1483, column: 2, scope: !6195)
!6200 = !DILocation(line: 1484, column: 33, scope: !6195)
!6201 = !DILocation(line: 1484, column: 2, scope: !6195)
!6202 = !DILocation(line: 1485, column: 1, scope: !6195)
!6203 = distinct !DISubprogram(name: "pci_bus_allocate_resources", scope: !3, file: !3, line: 1463, type: !204, scopeLine: 1464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6204 = !DILocalVariable(name: "b", arg: 1, scope: !6203, file: !3, line: 1463, type: !156)
!6205 = !DILocation(line: 1463, column: 56, scope: !6203)
!6206 = !DILocalVariable(name: "child", scope: !6203, file: !3, line: 1465, type: !156)
!6207 = !DILocation(line: 1465, column: 18, scope: !6203)
!6208 = !DILocation(line: 1472, column: 6, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 1472, column: 6)
!6210 = !DILocation(line: 1472, column: 9, scope: !6209)
!6211 = !DILocation(line: 1472, column: 6, scope: !6203)
!6212 = !DILocation(line: 1473, column: 25, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 1472, column: 15)
!6214 = !DILocation(line: 1473, column: 3, scope: !6213)
!6215 = !DILocation(line: 1474, column: 30, scope: !6213)
!6216 = !DILocation(line: 1474, column: 33, scope: !6213)
!6217 = !DILocation(line: 1474, column: 3, scope: !6213)
!6218 = !DILocation(line: 1475, column: 2, scope: !6213)
!6219 = !DILocalVariable(name: "__mptr", scope: !6220, file: !3, line: 1477, type: !144)
!6220 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1477, column: 2)
!6221 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 1477, column: 2)
!6222 = !DILocation(line: 1477, column: 2, scope: !6220)
!6223 = !DILocation(line: 1477, column: 2, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 1477, column: 2)
!6225 = !DILocation(line: 1477, column: 2, scope: !6221)
!6226 = !DILocation(line: 1477, column: 2, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1477, column: 2)
!6228 = !DILocation(line: 1478, column: 30, scope: !6227)
!6229 = !DILocation(line: 1478, column: 3, scope: !6227)
!6230 = !DILocalVariable(name: "__mptr", scope: !6231, file: !3, line: 1477, type: !144)
!6231 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 1477, column: 2)
!6232 = !DILocation(line: 1477, column: 2, scope: !6231)
!6233 = !DILocation(line: 1477, column: 2, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6231, file: !3, line: 1477, column: 2)
!6235 = distinct !{!6235, !6225, !6236}
!6236 = !DILocation(line: 1478, column: 35, scope: !6221)
!6237 = !DILocation(line: 1479, column: 1, scope: !6203)
!6238 = distinct !DISubprogram(name: "pci_bus_allocate_dev_resources", scope: !3, file: !3, line: 1449, type: !204, scopeLine: 1450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6239 = !DILocalVariable(name: "b", arg: 1, scope: !6238, file: !3, line: 1449, type: !156)
!6240 = !DILocation(line: 1449, column: 60, scope: !6238)
!6241 = !DILocalVariable(name: "dev", scope: !6238, file: !3, line: 1451, type: !145)
!6242 = !DILocation(line: 1451, column: 18, scope: !6238)
!6243 = !DILocalVariable(name: "child", scope: !6238, file: !3, line: 1452, type: !156)
!6244 = !DILocation(line: 1452, column: 18, scope: !6238)
!6245 = !DILocalVariable(name: "__mptr", scope: !6246, file: !3, line: 1454, type: !144)
!6246 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 1454, column: 2)
!6247 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1454, column: 2)
!6248 = !DILocation(line: 1454, column: 2, scope: !6246)
!6249 = !DILocation(line: 1454, column: 2, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 1454, column: 2)
!6251 = !DILocation(line: 1454, column: 2, scope: !6247)
!6252 = !DILocation(line: 1454, column: 2, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 1454, column: 2)
!6254 = !DILocation(line: 1455, column: 30, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 1454, column: 50)
!6256 = !DILocation(line: 1455, column: 3, scope: !6255)
!6257 = !DILocation(line: 1457, column: 11, scope: !6255)
!6258 = !DILocation(line: 1457, column: 16, scope: !6255)
!6259 = !DILocation(line: 1457, column: 9, scope: !6255)
!6260 = !DILocation(line: 1458, column: 7, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 1458, column: 7)
!6262 = !DILocation(line: 1458, column: 7, scope: !6255)
!6263 = !DILocation(line: 1459, column: 35, scope: !6261)
!6264 = !DILocation(line: 1459, column: 4, scope: !6261)
!6265 = !DILocation(line: 1460, column: 2, scope: !6255)
!6266 = !DILocalVariable(name: "__mptr", scope: !6267, file: !3, line: 1454, type: !144)
!6267 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 1454, column: 2)
!6268 = !DILocation(line: 1454, column: 2, scope: !6267)
!6269 = !DILocation(line: 1454, column: 2, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 1454, column: 2)
!6271 = distinct !{!6271, !6251, !6272}
!6272 = !DILocation(line: 1460, column: 2, scope: !6247)
!6273 = !DILocation(line: 1461, column: 1, scope: !6238)
!6274 = distinct !DISubprogram(name: "pci_realloc_get_opt", scope: !3, file: !3, line: 1685, type: !6275, scopeLine: 1686, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6275 = !DISubroutineType(types: !6276)
!6276 = !{null, !301}
!6277 = !DILocalVariable(name: "str", arg: 1, scope: !6274, file: !3, line: 1685, type: !301)
!6278 = !DILocation(line: 1685, column: 39, scope: !6274)
!6279 = !DILocation(line: 1687, column: 15, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 1687, column: 6)
!6281 = !DILocation(line: 1687, column: 7, scope: !6280)
!6282 = !DILocation(line: 1687, column: 6, scope: !6274)
!6283 = !DILocation(line: 1688, column: 22, scope: !6280)
!6284 = !DILocation(line: 1688, column: 3, scope: !6280)
!6285 = !DILocation(line: 1689, column: 20, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 1689, column: 11)
!6287 = !DILocation(line: 1689, column: 12, scope: !6286)
!6288 = !DILocation(line: 1689, column: 11, scope: !6280)
!6289 = !DILocation(line: 1690, column: 22, scope: !6286)
!6290 = !DILocation(line: 1690, column: 3, scope: !6286)
!6291 = !DILocation(line: 1691, column: 1, scope: !6274)
!6292 = distinct !DISubprogram(name: "pci_assign_unassigned_root_bus_resources", scope: !3, file: !3, line: 1753, type: !204, scopeLine: 1754, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6293 = !DILocalVariable(name: "bus", arg: 1, scope: !6292, file: !3, line: 1753, type: !156)
!6294 = !DILocation(line: 1753, column: 63, scope: !6292)
!6295 = !DILocalVariable(name: "realloc_head", scope: !6292, file: !3, line: 1755, type: !149)
!6296 = !DILocation(line: 1755, column: 2, scope: !6292)
!6297 = !DILocalVariable(name: "add_list", scope: !6292, file: !3, line: 1757, type: !153)
!6298 = !DILocation(line: 1757, column: 20, scope: !6292)
!6299 = !DILocalVariable(name: "tried_times", scope: !6292, file: !3, line: 1758, type: !120)
!6300 = !DILocation(line: 1758, column: 6, scope: !6292)
!6301 = !DILocalVariable(name: "rel_type", scope: !6292, file: !3, line: 1759, type: !127)
!6302 = !DILocation(line: 1759, column: 20, scope: !6292)
!6303 = !DILocalVariable(name: "fail_head", scope: !6292, file: !3, line: 1760, type: !149)
!6304 = !DILocation(line: 1760, column: 2, scope: !6292)
!6305 = !DILocalVariable(name: "fail_res", scope: !6292, file: !3, line: 1761, type: !4208)
!6306 = !DILocation(line: 1761, column: 27, scope: !6292)
!6307 = !DILocalVariable(name: "pci_try_num", scope: !6292, file: !3, line: 1762, type: !120)
!6308 = !DILocation(line: 1762, column: 6, scope: !6292)
!6309 = !DILocalVariable(name: "enable_local", scope: !6292, file: !3, line: 1763, type: !119)
!6310 = !DILocation(line: 1763, column: 19, scope: !6292)
!6311 = !DILocation(line: 1766, column: 36, scope: !6292)
!6312 = !DILocation(line: 1766, column: 41, scope: !6292)
!6313 = !DILocation(line: 1766, column: 17, scope: !6292)
!6314 = !DILocation(line: 1766, column: 15, scope: !6292)
!6315 = !DILocation(line: 1767, column: 26, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1767, column: 6)
!6317 = !DILocation(line: 1767, column: 6, scope: !6316)
!6318 = !DILocation(line: 1767, column: 6, scope: !6292)
!6319 = !DILocalVariable(name: "max_depth", scope: !6320, file: !3, line: 1768, type: !120)
!6320 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 1767, column: 41)
!6321 = !DILocation(line: 1768, column: 7, scope: !6320)
!6322 = !DILocation(line: 1768, column: 37, scope: !6320)
!6323 = !DILocation(line: 1768, column: 19, scope: !6320)
!6324 = !DILocation(line: 1770, column: 17, scope: !6320)
!6325 = !DILocation(line: 1770, column: 27, scope: !6320)
!6326 = !DILocation(line: 1770, column: 15, scope: !6320)
!6327 = !DILocation(line: 1771, column: 3, scope: !6320)
!6328 = !DILocation(line: 1773, column: 2, scope: !6320)
!6329 = !DILocation(line: 1767, column: 38, scope: !6316)
!6330 = !DILabel(scope: !6292, name: "again", file: !3, line: 1775)
!6331 = !DILocation(line: 1775, column: 1, scope: !6292)
!6332 = !DILocation(line: 1780, column: 6, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1780, column: 6)
!6334 = !DILocation(line: 1780, column: 18, scope: !6333)
!6335 = !DILocation(line: 1780, column: 25, scope: !6333)
!6336 = !DILocation(line: 1780, column: 22, scope: !6333)
!6337 = !DILocation(line: 1780, column: 6, scope: !6292)
!6338 = !DILocation(line: 1781, column: 12, scope: !6333)
!6339 = !DILocation(line: 1781, column: 3, scope: !6333)
!6340 = !DILocation(line: 1785, column: 25, scope: !6292)
!6341 = !DILocation(line: 1785, column: 30, scope: !6292)
!6342 = !DILocation(line: 1785, column: 2, scope: !6292)
!6343 = !DILocation(line: 1788, column: 29, scope: !6292)
!6344 = !DILocation(line: 1788, column: 34, scope: !6292)
!6345 = !DILocation(line: 1788, column: 2, scope: !6292)
!6346 = !DILocation(line: 1789, column: 6, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1789, column: 6)
!6348 = !DILocation(line: 1789, column: 6, scope: !6292)
!6349 = !DILocation(line: 1790, column: 3, scope: !6347)
!6350 = !DILocation(line: 1790, column: 3, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 1790, column: 3)
!6352 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 1790, column: 3)
!6353 = !DILocation(line: 1790, column: 3, scope: !6352)
!6354 = !DILocation(line: 1790, column: 3, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 1790, column: 3)
!6356 = !DILocation(line: 1790, column: 3, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1790, column: 3)
!6358 = !DILocation(line: 1790, column: 3, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1790, column: 3)
!6360 = !{i32 -2140949398, i32 -2140949369, i32 -2140949323, i32 -2140949265, i32 -2140949211, i32 -2140949157, i32 -2140949102, i32 -2140949071}
!6361 = !DILocation(line: 1790, column: 3, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 1790, column: 3)
!6363 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1790, column: 3)
!6364 = !{i32 -2140948624, i32 -2140948617, i32 -2140948563, i32 -2140948532, i32 -2140948502}
!6365 = !DILocation(line: 1790, column: 3, scope: !6363)
!6366 = !DILocation(line: 1791, column: 13, scope: !6292)
!6367 = !DILocation(line: 1794, column: 6, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1794, column: 6)
!6369 = !DILocation(line: 1794, column: 6, scope: !6292)
!6370 = !DILocation(line: 1795, column: 3, scope: !6368)
!6371 = !DILocation(line: 1797, column: 6, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1797, column: 6)
!6373 = !DILocation(line: 1797, column: 21, scope: !6372)
!6374 = !DILocation(line: 1797, column: 18, scope: !6372)
!6375 = !DILocation(line: 1797, column: 6, scope: !6292)
!6376 = !DILocation(line: 1798, column: 7, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 1798, column: 7)
!6378 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 1797, column: 34)
!6379 = !DILocation(line: 1798, column: 20, scope: !6377)
!6380 = !DILocation(line: 1798, column: 7, scope: !6378)
!6381 = !DILocation(line: 1799, column: 4, scope: !6377)
!6382 = !DILocation(line: 1800, column: 12, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 1800, column: 12)
!6384 = !DILocation(line: 1800, column: 25, scope: !6383)
!6385 = !DILocation(line: 1800, column: 12, scope: !6377)
!6386 = !DILocation(line: 1801, column: 4, scope: !6383)
!6387 = !DILocation(line: 1803, column: 3, scope: !6378)
!6388 = !DILocation(line: 1804, column: 3, scope: !6378)
!6389 = !DILocation(line: 1807, column: 2, scope: !6292)
!6390 = !DILocation(line: 1811, column: 7, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1811, column: 6)
!6392 = !DILocation(line: 1811, column: 19, scope: !6391)
!6393 = !DILocation(line: 1811, column: 24, scope: !6391)
!6394 = !DILocation(line: 1811, column: 6, scope: !6292)
!6395 = !DILocation(line: 1812, column: 12, scope: !6391)
!6396 = !DILocation(line: 1812, column: 3, scope: !6391)
!6397 = !DILocalVariable(name: "__mptr", scope: !6398, file: !3, line: 1818, type: !144)
!6398 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 1818, column: 2)
!6399 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1818, column: 2)
!6400 = !DILocation(line: 1818, column: 2, scope: !6398)
!6401 = !DILocation(line: 1818, column: 2, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 1818, column: 2)
!6403 = !DILocation(line: 1818, column: 2, scope: !6399)
!6404 = !DILocation(line: 1818, column: 2, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 1818, column: 2)
!6406 = !DILocation(line: 1819, column: 36, scope: !6405)
!6407 = !DILocation(line: 1819, column: 46, scope: !6405)
!6408 = !DILocation(line: 1819, column: 51, scope: !6405)
!6409 = !DILocation(line: 1820, column: 8, scope: !6405)
!6410 = !DILocation(line: 1820, column: 18, scope: !6405)
!6411 = !DILocation(line: 1820, column: 24, scope: !6405)
!6412 = !DILocation(line: 1821, column: 8, scope: !6405)
!6413 = !DILocation(line: 1819, column: 3, scope: !6405)
!6414 = !DILocalVariable(name: "__mptr", scope: !6415, file: !3, line: 1818, type: !144)
!6415 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 1818, column: 2)
!6416 = !DILocation(line: 1818, column: 2, scope: !6415)
!6417 = !DILocation(line: 1818, column: 2, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 1818, column: 2)
!6419 = distinct !{!6419, !6403, !6420}
!6420 = !DILocation(line: 1821, column: 16, scope: !6399)
!6421 = !DILocalVariable(name: "__mptr", scope: !6422, file: !3, line: 1824, type: !144)
!6422 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 1824, column: 2)
!6423 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1824, column: 2)
!6424 = !DILocation(line: 1824, column: 2, scope: !6422)
!6425 = !DILocation(line: 1824, column: 2, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 1824, column: 2)
!6427 = !DILocation(line: 1824, column: 2, scope: !6423)
!6428 = !DILocation(line: 1824, column: 2, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 1824, column: 2)
!6430 = !DILocalVariable(name: "res", scope: !6431, file: !3, line: 1825, type: !167)
!6431 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 1824, column: 50)
!6432 = !DILocation(line: 1825, column: 20, scope: !6431)
!6433 = !DILocation(line: 1825, column: 26, scope: !6431)
!6434 = !DILocation(line: 1825, column: 36, scope: !6431)
!6435 = !DILocalVariable(name: "idx", scope: !6431, file: !3, line: 1826, type: !120)
!6436 = !DILocation(line: 1826, column: 7, scope: !6431)
!6437 = !DILocation(line: 1828, column: 16, scope: !6431)
!6438 = !DILocation(line: 1828, column: 26, scope: !6431)
!6439 = !DILocation(line: 1828, column: 3, scope: !6431)
!6440 = !DILocation(line: 1828, column: 8, scope: !6431)
!6441 = !DILocation(line: 1828, column: 14, scope: !6431)
!6442 = !DILocation(line: 1829, column: 14, scope: !6431)
!6443 = !DILocation(line: 1829, column: 24, scope: !6431)
!6444 = !DILocation(line: 1829, column: 3, scope: !6431)
!6445 = !DILocation(line: 1829, column: 8, scope: !6431)
!6446 = !DILocation(line: 1829, column: 12, scope: !6431)
!6447 = !DILocation(line: 1830, column: 16, scope: !6431)
!6448 = !DILocation(line: 1830, column: 26, scope: !6431)
!6449 = !DILocation(line: 1830, column: 3, scope: !6431)
!6450 = !DILocation(line: 1830, column: 8, scope: !6431)
!6451 = !DILocation(line: 1830, column: 14, scope: !6431)
!6452 = !DILocation(line: 1832, column: 21, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 1832, column: 7)
!6454 = !DILocation(line: 1832, column: 31, scope: !6453)
!6455 = !DILocation(line: 1832, column: 7, scope: !6453)
!6456 = !DILocation(line: 1832, column: 7, scope: !6431)
!6457 = !DILocation(line: 1833, column: 10, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 1832, column: 37)
!6459 = !DILocation(line: 1833, column: 17, scope: !6458)
!6460 = !DILocation(line: 1833, column: 27, scope: !6458)
!6461 = !DILocation(line: 1833, column: 32, scope: !6458)
!6462 = !DILocation(line: 1833, column: 14, scope: !6458)
!6463 = !DILocation(line: 1833, column: 8, scope: !6458)
!6464 = !DILocation(line: 1834, column: 8, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 1834, column: 8)
!6466 = !DILocation(line: 1834, column: 12, scope: !6465)
!6467 = !DILocation(line: 1834, column: 36, scope: !6465)
!6468 = !DILocation(line: 1835, column: 8, scope: !6465)
!6469 = !DILocation(line: 1835, column: 12, scope: !6465)
!6470 = !DILocation(line: 1834, column: 8, scope: !6458)
!6471 = !DILocation(line: 1836, column: 5, scope: !6465)
!6472 = !DILocation(line: 1836, column: 10, scope: !6465)
!6473 = !DILocation(line: 1836, column: 16, scope: !6465)
!6474 = !DILocation(line: 1837, column: 3, scope: !6458)
!6475 = !DILocation(line: 1838, column: 2, scope: !6431)
!6476 = !DILocalVariable(name: "__mptr", scope: !6477, file: !3, line: 1824, type: !144)
!6477 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 1824, column: 2)
!6478 = !DILocation(line: 1824, column: 2, scope: !6477)
!6479 = !DILocation(line: 1824, column: 2, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 1824, column: 2)
!6481 = distinct !{!6481, !6427, !6482}
!6482 = !DILocation(line: 1838, column: 2, scope: !6423)
!6483 = !DILocation(line: 1839, column: 2, scope: !6292)
!6484 = !DILocation(line: 1841, column: 2, scope: !6292)
!6485 = !DILabel(scope: !6292, name: "dump", file: !3, line: 1843)
!6486 = !DILocation(line: 1843, column: 1, scope: !6292)
!6487 = !DILocation(line: 1845, column: 25, scope: !6292)
!6488 = !DILocation(line: 1845, column: 2, scope: !6292)
!6489 = !DILocation(line: 1846, column: 1, scope: !6292)
!6490 = distinct !DISubprogram(name: "pci_realloc_detect", scope: !3, file: !3, line: 1741, type: !6491, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6491 = !DISubroutineType(types: !6492)
!6492 = !{!119, !156, !119}
!6493 = !DILocalVariable(name: "bus", arg: 1, scope: !6490, file: !3, line: 1741, type: !156)
!6494 = !DILocation(line: 1741, column: 60, scope: !6490)
!6495 = !DILocalVariable(name: "enable_local", arg: 2, scope: !6490, file: !3, line: 1742, type: !119)
!6496 = !DILocation(line: 1742, column: 26, scope: !6490)
!6497 = !DILocation(line: 1744, column: 9, scope: !6490)
!6498 = !DILocation(line: 1744, column: 2, scope: !6490)
!6499 = distinct !DISubprogram(name: "pci_realloc_enabled", scope: !3, file: !3, line: 1692, type: !6500, scopeLine: 1693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6500 = !DISubroutineType(types: !6501)
!6501 = !{!507, !119}
!6502 = !DILocalVariable(name: "enable", arg: 1, scope: !6499, file: !3, line: 1692, type: !119)
!6503 = !DILocation(line: 1692, column: 50, scope: !6499)
!6504 = !DILocation(line: 1694, column: 9, scope: !6499)
!6505 = !DILocation(line: 1694, column: 16, scope: !6499)
!6506 = !DILocation(line: 1694, column: 2, scope: !6499)
!6507 = distinct !DISubprogram(name: "pci_bus_get_depth", scope: !3, file: !3, line: 1653, type: !200, scopeLine: 1654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6508 = !DILocalVariable(name: "bus", arg: 1, scope: !6507, file: !3, line: 1653, type: !156)
!6509 = !DILocation(line: 1653, column: 46, scope: !6507)
!6510 = !DILocalVariable(name: "depth", scope: !6507, file: !3, line: 1655, type: !120)
!6511 = !DILocation(line: 1655, column: 6, scope: !6507)
!6512 = !DILocalVariable(name: "child_bus", scope: !6507, file: !3, line: 1656, type: !156)
!6513 = !DILocation(line: 1656, column: 18, scope: !6507)
!6514 = !DILocalVariable(name: "__mptr", scope: !6515, file: !3, line: 1658, type: !144)
!6515 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 1658, column: 2)
!6516 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 1658, column: 2)
!6517 = !DILocation(line: 1658, column: 2, scope: !6515)
!6518 = !DILocation(line: 1658, column: 2, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 1658, column: 2)
!6520 = !DILocation(line: 1658, column: 2, scope: !6516)
!6521 = !DILocation(line: 1658, column: 2, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 1658, column: 2)
!6523 = !DILocalVariable(name: "ret", scope: !6524, file: !3, line: 1659, type: !120)
!6524 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 1658, column: 55)
!6525 = !DILocation(line: 1659, column: 7, scope: !6524)
!6526 = !DILocation(line: 1661, column: 27, scope: !6524)
!6527 = !DILocation(line: 1661, column: 9, scope: !6524)
!6528 = !DILocation(line: 1661, column: 7, scope: !6524)
!6529 = !DILocation(line: 1662, column: 7, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 1662, column: 7)
!6531 = !DILocation(line: 1662, column: 11, scope: !6530)
!6532 = !DILocation(line: 1662, column: 17, scope: !6530)
!6533 = !DILocation(line: 1662, column: 15, scope: !6530)
!6534 = !DILocation(line: 1662, column: 7, scope: !6524)
!6535 = !DILocation(line: 1663, column: 12, scope: !6530)
!6536 = !DILocation(line: 1663, column: 16, scope: !6530)
!6537 = !DILocation(line: 1663, column: 10, scope: !6530)
!6538 = !DILocation(line: 1663, column: 4, scope: !6530)
!6539 = !DILocation(line: 1664, column: 2, scope: !6524)
!6540 = !DILocalVariable(name: "__mptr", scope: !6541, file: !3, line: 1658, type: !144)
!6541 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 1658, column: 2)
!6542 = !DILocation(line: 1658, column: 2, scope: !6541)
!6543 = !DILocation(line: 1658, column: 2, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 1658, column: 2)
!6545 = distinct !{!6545, !6520, !6546}
!6546 = !DILocation(line: 1664, column: 2, scope: !6516)
!6547 = !DILocation(line: 1666, column: 9, scope: !6507)
!6548 = !DILocation(line: 1666, column: 2, scope: !6507)
!6549 = distinct !DISubprogram(name: "list_empty", scope: !6550, file: !6550, line: 280, type: !6551, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6550 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!6551 = !DISubroutineType(types: !6552)
!6552 = !{!120, !6553}
!6553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6554, size: 64)
!6554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !149)
!6555 = !DILocalVariable(name: "head", arg: 1, scope: !6549, file: !6550, line: 280, type: !6553)
!6556 = !DILocation(line: 280, column: 54, scope: !6549)
!6557 = !DILocation(line: 282, column: 9, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6549, file: !6550, line: 282, column: 9)
!6559 = !DILocation(line: 282, column: 9, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6558, file: !6550, line: 282, column: 9)
!6561 = !DILocation(line: 282, column: 34, scope: !6549)
!6562 = !DILocation(line: 282, column: 31, scope: !6549)
!6563 = !DILocation(line: 282, column: 2, scope: !6549)
!6564 = distinct !DISubprogram(name: "free_list", scope: !3, file: !3, line: 42, type: !6565, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6565 = !DISubroutineType(types: !6566)
!6566 = !{null, !153}
!6567 = !DILocalVariable(name: "head", arg: 1, scope: !6564, file: !3, line: 42, type: !153)
!6568 = !DILocation(line: 42, column: 41, scope: !6564)
!6569 = !DILocalVariable(name: "dev_res", scope: !6564, file: !3, line: 44, type: !4208)
!6570 = !DILocation(line: 44, column: 27, scope: !6564)
!6571 = !DILocalVariable(name: "tmp", scope: !6564, file: !3, line: 44, type: !4208)
!6572 = !DILocation(line: 44, column: 37, scope: !6564)
!6573 = !DILocalVariable(name: "__mptr", scope: !6574, file: !3, line: 46, type: !144)
!6574 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 46, column: 2)
!6575 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 46, column: 2)
!6576 = !DILocation(line: 46, column: 2, scope: !6574)
!6577 = !DILocation(line: 46, column: 2, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 46, column: 2)
!6579 = !DILocation(line: 46, column: 2, scope: !6575)
!6580 = !DILocalVariable(name: "__mptr", scope: !6581, file: !3, line: 46, type: !144)
!6581 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 46, column: 2)
!6582 = !DILocation(line: 46, column: 2, scope: !6581)
!6583 = !DILocation(line: 46, column: 2, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 46, column: 2)
!6585 = !DILocation(line: 46, column: 2, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 46, column: 2)
!6587 = !DILocation(line: 47, column: 13, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 46, column: 53)
!6589 = !DILocation(line: 47, column: 22, scope: !6588)
!6590 = !DILocation(line: 47, column: 3, scope: !6588)
!6591 = !DILocation(line: 48, column: 9, scope: !6588)
!6592 = !DILocation(line: 48, column: 3, scope: !6588)
!6593 = !DILocation(line: 49, column: 2, scope: !6588)
!6594 = !DILocalVariable(name: "__mptr", scope: !6595, file: !3, line: 46, type: !144)
!6595 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 46, column: 2)
!6596 = !DILocation(line: 46, column: 2, scope: !6595)
!6597 = !DILocation(line: 46, column: 2, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 46, column: 2)
!6599 = distinct !{!6599, !6579, !6600}
!6600 = !DILocation(line: 49, column: 2, scope: !6575)
!6601 = !DILocation(line: 50, column: 1, scope: !6564)
!6602 = distinct !DISubprogram(name: "pci_bus_release_bridge_resources", scope: !3, file: !3, line: 1591, type: !6603, scopeLine: 1594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6603 = !DISubroutineType(types: !6604)
!6604 = !{null, !156, !185, !127}
!6605 = !DILocalVariable(name: "bus", arg: 1, scope: !6602, file: !3, line: 1591, type: !156)
!6606 = !DILocation(line: 1591, column: 62, scope: !6602)
!6607 = !DILocalVariable(name: "type", arg: 2, scope: !6602, file: !3, line: 1592, type: !185)
!6608 = !DILocation(line: 1592, column: 25, scope: !6602)
!6609 = !DILocalVariable(name: "rel_type", arg: 3, scope: !6602, file: !3, line: 1593, type: !127)
!6610 = !DILocation(line: 1593, column: 29, scope: !6602)
!6611 = !DILocalVariable(name: "dev", scope: !6602, file: !3, line: 1595, type: !145)
!6612 = !DILocation(line: 1595, column: 18, scope: !6602)
!6613 = !DILocalVariable(name: "is_leaf_bridge", scope: !6602, file: !3, line: 1596, type: !507)
!6614 = !DILocation(line: 1596, column: 7, scope: !6602)
!6615 = !DILocalVariable(name: "__mptr", scope: !6616, file: !3, line: 1598, type: !144)
!6616 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1598, column: 2)
!6617 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 1598, column: 2)
!6618 = !DILocation(line: 1598, column: 2, scope: !6616)
!6619 = !DILocation(line: 1598, column: 2, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 1598, column: 2)
!6621 = !DILocation(line: 1598, column: 2, scope: !6617)
!6622 = !DILocation(line: 1598, column: 2, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1598, column: 2)
!6624 = !DILocalVariable(name: "b", scope: !6625, file: !3, line: 1599, type: !156)
!6625 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 1598, column: 52)
!6626 = !DILocation(line: 1599, column: 19, scope: !6625)
!6627 = !DILocation(line: 1599, column: 23, scope: !6625)
!6628 = !DILocation(line: 1599, column: 28, scope: !6625)
!6629 = !DILocation(line: 1600, column: 8, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 1600, column: 7)
!6631 = !DILocation(line: 1600, column: 7, scope: !6625)
!6632 = !DILocation(line: 1601, column: 4, scope: !6630)
!6633 = !DILocation(line: 1603, column: 18, scope: !6625)
!6634 = !DILocation(line: 1605, column: 8, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 1605, column: 7)
!6636 = !DILocation(line: 1605, column: 13, scope: !6635)
!6637 = !DILocation(line: 1605, column: 19, scope: !6635)
!6638 = !DILocation(line: 1605, column: 25, scope: !6635)
!6639 = !DILocation(line: 1605, column: 7, scope: !6625)
!6640 = !DILocation(line: 1606, column: 4, scope: !6635)
!6641 = !DILocation(line: 1608, column: 7, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 1608, column: 7)
!6643 = !DILocation(line: 1608, column: 16, scope: !6642)
!6644 = !DILocation(line: 1608, column: 7, scope: !6625)
!6645 = !DILocation(line: 1609, column: 37, scope: !6642)
!6646 = !DILocation(line: 1609, column: 40, scope: !6642)
!6647 = !DILocation(line: 1609, column: 4, scope: !6642)
!6648 = !DILocation(line: 1611, column: 2, scope: !6625)
!6649 = !DILocalVariable(name: "__mptr", scope: !6650, file: !3, line: 1598, type: !144)
!6650 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 1598, column: 2)
!6651 = !DILocation(line: 1598, column: 2, scope: !6650)
!6652 = !DILocation(line: 1598, column: 2, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 1598, column: 2)
!6654 = distinct !{!6654, !6621, !6655}
!6655 = !DILocation(line: 1611, column: 2, scope: !6617)
!6656 = !DILocation(line: 1613, column: 22, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 1613, column: 6)
!6658 = !DILocation(line: 1613, column: 6, scope: !6657)
!6659 = !DILocation(line: 1613, column: 6, scope: !6602)
!6660 = !DILocation(line: 1614, column: 3, scope: !6657)
!6661 = !DILocation(line: 1616, column: 7, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 1616, column: 6)
!6663 = !DILocation(line: 1616, column: 12, scope: !6662)
!6664 = !DILocation(line: 1616, column: 18, scope: !6662)
!6665 = !DILocation(line: 1616, column: 24, scope: !6662)
!6666 = !DILocation(line: 1616, column: 30, scope: !6662)
!6667 = !DILocation(line: 1616, column: 6, scope: !6602)
!6668 = !DILocation(line: 1617, column: 3, scope: !6662)
!6669 = !DILocation(line: 1619, column: 7, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 1619, column: 6)
!6671 = !DILocation(line: 1619, column: 16, scope: !6670)
!6672 = !DILocation(line: 1619, column: 34, scope: !6670)
!6673 = !DILocation(line: 1619, column: 37, scope: !6670)
!6674 = !DILocation(line: 1619, column: 6, scope: !6602)
!6675 = !DILocation(line: 1620, column: 32, scope: !6670)
!6676 = !DILocation(line: 1620, column: 37, scope: !6670)
!6677 = !DILocation(line: 1620, column: 3, scope: !6670)
!6678 = !DILocation(line: 1621, column: 1, scope: !6602)
!6679 = distinct !DISubprogram(name: "pci_is_bridge", scope: !108, file: !108, line: 668, type: !6680, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6680 = !DISubroutineType(types: !6681)
!6681 = !{!507, !145}
!6682 = !DILocalVariable(name: "dev", arg: 1, scope: !6679, file: !108, line: 668, type: !145)
!6683 = !DILocation(line: 668, column: 50, scope: !6679)
!6684 = !DILocation(line: 670, column: 9, scope: !6679)
!6685 = !DILocation(line: 670, column: 14, scope: !6679)
!6686 = !DILocation(line: 670, column: 23, scope: !6679)
!6687 = !DILocation(line: 670, column: 49, scope: !6679)
!6688 = !DILocation(line: 671, column: 3, scope: !6679)
!6689 = !DILocation(line: 671, column: 8, scope: !6679)
!6690 = !DILocation(line: 671, column: 17, scope: !6679)
!6691 = !DILocation(line: 670, column: 2, scope: !6679)
!6692 = distinct !DISubprogram(name: "pci_bus_dump_resources", scope: !3, file: !3, line: 1636, type: !204, scopeLine: 1637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6693 = !DILocalVariable(name: "bus", arg: 1, scope: !6692, file: !3, line: 1636, type: !156)
!6694 = !DILocation(line: 1636, column: 52, scope: !6692)
!6695 = !DILocalVariable(name: "b", scope: !6692, file: !3, line: 1638, type: !156)
!6696 = !DILocation(line: 1638, column: 18, scope: !6692)
!6697 = !DILocalVariable(name: "dev", scope: !6692, file: !3, line: 1639, type: !145)
!6698 = !DILocation(line: 1639, column: 18, scope: !6692)
!6699 = !DILocation(line: 1642, column: 19, scope: !6692)
!6700 = !DILocation(line: 1642, column: 2, scope: !6692)
!6701 = !DILocalVariable(name: "__mptr", scope: !6702, file: !3, line: 1644, type: !144)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 1644, column: 2)
!6703 = distinct !DILexicalBlock(scope: !6692, file: !3, line: 1644, column: 2)
!6704 = !DILocation(line: 1644, column: 2, scope: !6702)
!6705 = !DILocation(line: 1644, column: 2, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 1644, column: 2)
!6707 = !DILocation(line: 1644, column: 2, scope: !6703)
!6708 = !DILocation(line: 1644, column: 2, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 1644, column: 2)
!6710 = !DILocation(line: 1645, column: 7, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 1644, column: 52)
!6712 = !DILocation(line: 1645, column: 12, scope: !6711)
!6713 = !DILocation(line: 1645, column: 5, scope: !6711)
!6714 = !DILocation(line: 1646, column: 8, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 1646, column: 7)
!6716 = !DILocation(line: 1646, column: 7, scope: !6711)
!6717 = !DILocation(line: 1647, column: 4, scope: !6715)
!6718 = !DILocation(line: 1649, column: 26, scope: !6711)
!6719 = !DILocation(line: 1649, column: 3, scope: !6711)
!6720 = !DILocation(line: 1650, column: 2, scope: !6711)
!6721 = !DILocalVariable(name: "__mptr", scope: !6722, file: !3, line: 1644, type: !144)
!6722 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 1644, column: 2)
!6723 = !DILocation(line: 1644, column: 2, scope: !6722)
!6724 = !DILocation(line: 1644, column: 2, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 1644, column: 2)
!6726 = distinct !{!6726, !6707, !6727}
!6727 = !DILocation(line: 1650, column: 2, scope: !6703)
!6728 = !DILocation(line: 1651, column: 1, scope: !6692)
!6729 = distinct !DISubprogram(name: "pci_assign_unassigned_resources", scope: !3, file: !3, line: 1848, type: !1898, scopeLine: 1849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6730 = !DILocalVariable(name: "root_bus", scope: !6729, file: !3, line: 1850, type: !156)
!6731 = !DILocation(line: 1850, column: 18, scope: !6729)
!6732 = !DILocalVariable(name: "__mptr", scope: !6733, file: !3, line: 1852, type: !144)
!6733 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 1852, column: 2)
!6734 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 1852, column: 2)
!6735 = !DILocation(line: 1852, column: 2, scope: !6733)
!6736 = !DILocation(line: 1852, column: 2, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 1852, column: 2)
!6738 = !DILocation(line: 1852, column: 2, scope: !6734)
!6739 = !DILocation(line: 1852, column: 2, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 1852, column: 2)
!6741 = !DILocation(line: 1853, column: 44, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 1852, column: 55)
!6743 = !DILocation(line: 1853, column: 3, scope: !6742)
!6744 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !6745, file: !3, line: 1856, type: !3697)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1856, column: 7)
!6746 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 1856, column: 7)
!6747 = !DILocation(line: 1856, column: 7, scope: !6745)
!6748 = !DILocalVariable(name: "__mptr", scope: !6749, file: !3, line: 1856, type: !144)
!6749 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 1856, column: 7)
!6750 = !DILocation(line: 1856, column: 7, scope: !6749)
!6751 = !DILocation(line: 1856, column: 7, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 1856, column: 7)
!6753 = !DILocation(line: 1856, column: 7, scope: !6746)
!6754 = !DILocation(line: 1856, column: 7, scope: !6742)
!6755 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !6756, file: !3, line: 1857, type: !3697)
!6756 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1857, column: 20)
!6757 = !DILocation(line: 1857, column: 20, scope: !6756)
!6758 = !DILocalVariable(name: "__mptr", scope: !6759, file: !3, line: 1857, type: !144)
!6759 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 1857, column: 20)
!6760 = !DILocation(line: 1857, column: 20, scope: !6759)
!6761 = !DILocation(line: 1857, column: 20, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 1857, column: 20)
!6763 = !DILocation(line: 1857, column: 20, scope: !6746)
!6764 = !DILocation(line: 1857, column: 4, scope: !6746)
!6765 = !DILocation(line: 1858, column: 2, scope: !6742)
!6766 = !DILocalVariable(name: "__mptr", scope: !6767, file: !3, line: 1852, type: !144)
!6767 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 1852, column: 2)
!6768 = !DILocation(line: 1852, column: 2, scope: !6767)
!6769 = !DILocation(line: 1852, column: 2, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 1852, column: 2)
!6771 = distinct !{!6771, !6738, !6772}
!6772 = !DILocation(line: 1858, column: 2, scope: !6734)
!6773 = !DILocation(line: 1859, column: 1, scope: !6729)
!6774 = distinct !DISubprogram(name: "acpi_device_handle", scope: !6775, file: !6775, line: 38, type: !6776, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6775 = !DIFile(filename: "./include/linux/acpi.h", directory: "/home/lizy2001/genbc/linux")
!6776 = !DISubroutineType(types: !6777)
!6777 = !{!4225, !4219}
!6778 = !DILocalVariable(name: "adev", arg: 1, scope: !6774, file: !6775, line: 38, type: !4219)
!6779 = !DILocation(line: 38, column: 66, scope: !6774)
!6780 = !DILocation(line: 40, column: 9, scope: !6774)
!6781 = !DILocation(line: 40, column: 16, scope: !6774)
!6782 = !DILocation(line: 40, column: 22, scope: !6774)
!6783 = !DILocation(line: 40, column: 2, scope: !6774)
!6784 = distinct !DISubprogram(name: "pci_assign_unassigned_bridge_resources", scope: !3, file: !3, line: 2050, type: !3995, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6785 = !DILocalVariable(name: "bridge", arg: 1, scope: !6784, file: !3, line: 2050, type: !145)
!6786 = !DILocation(line: 2050, column: 61, scope: !6784)
!6787 = !DILocalVariable(name: "parent", scope: !6784, file: !3, line: 2052, type: !156)
!6788 = !DILocation(line: 2052, column: 18, scope: !6784)
!6789 = !DILocation(line: 2052, column: 27, scope: !6784)
!6790 = !DILocation(line: 2052, column: 35, scope: !6784)
!6791 = !DILocalVariable(name: "add_list", scope: !6784, file: !3, line: 2054, type: !149)
!6792 = !DILocation(line: 2054, column: 2, scope: !6784)
!6793 = !DILocalVariable(name: "tried_times", scope: !6784, file: !3, line: 2056, type: !120)
!6794 = !DILocation(line: 2056, column: 6, scope: !6784)
!6795 = !DILocalVariable(name: "fail_head", scope: !6784, file: !3, line: 2057, type: !149)
!6796 = !DILocation(line: 2057, column: 2, scope: !6784)
!6797 = !DILocalVariable(name: "fail_res", scope: !6784, file: !3, line: 2058, type: !4208)
!6798 = !DILocation(line: 2058, column: 27, scope: !6784)
!6799 = !DILocalVariable(name: "retval", scope: !6784, file: !3, line: 2059, type: !120)
!6800 = !DILocation(line: 2059, column: 6, scope: !6784)
!6801 = !DILocation(line: 2059, column: 2, scope: !6784)
!6802 = !DILabel(scope: !6784, name: "again", file: !3, line: 2061)
!6803 = !DILocation(line: 2061, column: 1, scope: !6784)
!6804 = !DILocation(line: 2062, column: 25, scope: !6784)
!6805 = !DILocation(line: 2062, column: 2, scope: !6784)
!6806 = !DILocation(line: 2069, column: 44, scope: !6784)
!6807 = !DILocation(line: 2069, column: 2, scope: !6784)
!6808 = !DILocation(line: 2071, column: 32, scope: !6784)
!6809 = !DILocation(line: 2071, column: 2, scope: !6784)
!6810 = !DILocation(line: 2072, column: 2, scope: !6784)
!6811 = !DILocation(line: 2072, column: 2, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 2072, column: 2)
!6813 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 2072, column: 2)
!6814 = !DILocation(line: 2072, column: 2, scope: !6813)
!6815 = !DILocation(line: 2072, column: 2, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2072, column: 2)
!6817 = !DILocation(line: 2072, column: 2, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 2072, column: 2)
!6819 = !DILocation(line: 2072, column: 2, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 2072, column: 2)
!6821 = !{i32 -2140900202, i32 -2140900173, i32 -2140900127, i32 -2140900069, i32 -2140900015, i32 -2140899961, i32 -2140899906, i32 -2140899875}
!6822 = !DILocation(line: 2072, column: 2, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 2072, column: 2)
!6824 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 2072, column: 2)
!6825 = !{i32 -2140899428, i32 -2140899421, i32 -2140899367, i32 -2140899336, i32 -2140899306}
!6826 = !DILocation(line: 2072, column: 2, scope: !6824)
!6827 = !DILocation(line: 2073, column: 13, scope: !6784)
!6828 = !DILocation(line: 2075, column: 6, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 2075, column: 6)
!6830 = !DILocation(line: 2075, column: 6, scope: !6784)
!6831 = !DILocation(line: 2076, column: 3, scope: !6829)
!6832 = !DILocation(line: 2078, column: 6, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 2078, column: 6)
!6834 = !DILocation(line: 2078, column: 18, scope: !6833)
!6835 = !DILocation(line: 2078, column: 6, scope: !6784)
!6836 = !DILocation(line: 2080, column: 3, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 2078, column: 24)
!6838 = !DILocation(line: 2081, column: 3, scope: !6837)
!6839 = !DILocation(line: 2085, column: 5, scope: !6784)
!6840 = !DILocation(line: 2085, column: 17, scope: !6784)
!6841 = !DILocation(line: 2084, column: 2, scope: !6784)
!6842 = !DILocalVariable(name: "__mptr", scope: !6843, file: !3, line: 2091, type: !144)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !3, line: 2091, column: 2)
!6844 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 2091, column: 2)
!6845 = !DILocation(line: 2091, column: 2, scope: !6843)
!6846 = !DILocation(line: 2091, column: 2, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 2091, column: 2)
!6848 = !DILocation(line: 2091, column: 2, scope: !6844)
!6849 = !DILocation(line: 2091, column: 2, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6844, file: !3, line: 2091, column: 2)
!6851 = !DILocation(line: 2092, column: 36, scope: !6850)
!6852 = !DILocation(line: 2092, column: 46, scope: !6850)
!6853 = !DILocation(line: 2092, column: 51, scope: !6850)
!6854 = !DILocation(line: 2093, column: 8, scope: !6850)
!6855 = !DILocation(line: 2093, column: 18, scope: !6850)
!6856 = !DILocation(line: 2093, column: 24, scope: !6850)
!6857 = !DILocation(line: 2092, column: 3, scope: !6850)
!6858 = !DILocalVariable(name: "__mptr", scope: !6859, file: !3, line: 2091, type: !144)
!6859 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 2091, column: 2)
!6860 = !DILocation(line: 2091, column: 2, scope: !6859)
!6861 = !DILocation(line: 2091, column: 2, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 2091, column: 2)
!6863 = distinct !{!6863, !6848, !6864}
!6864 = !DILocation(line: 2094, column: 21, scope: !6844)
!6865 = !DILocalVariable(name: "__mptr", scope: !6866, file: !3, line: 2097, type: !144)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 2097, column: 2)
!6867 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 2097, column: 2)
!6868 = !DILocation(line: 2097, column: 2, scope: !6866)
!6869 = !DILocation(line: 2097, column: 2, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6866, file: !3, line: 2097, column: 2)
!6871 = !DILocation(line: 2097, column: 2, scope: !6867)
!6872 = !DILocation(line: 2097, column: 2, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 2097, column: 2)
!6874 = !DILocalVariable(name: "res", scope: !6875, file: !3, line: 2098, type: !167)
!6875 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 2097, column: 50)
!6876 = !DILocation(line: 2098, column: 20, scope: !6875)
!6877 = !DILocation(line: 2098, column: 26, scope: !6875)
!6878 = !DILocation(line: 2098, column: 36, scope: !6875)
!6879 = !DILocalVariable(name: "idx", scope: !6875, file: !3, line: 2099, type: !120)
!6880 = !DILocation(line: 2099, column: 7, scope: !6875)
!6881 = !DILocation(line: 2101, column: 16, scope: !6875)
!6882 = !DILocation(line: 2101, column: 26, scope: !6875)
!6883 = !DILocation(line: 2101, column: 3, scope: !6875)
!6884 = !DILocation(line: 2101, column: 8, scope: !6875)
!6885 = !DILocation(line: 2101, column: 14, scope: !6875)
!6886 = !DILocation(line: 2102, column: 14, scope: !6875)
!6887 = !DILocation(line: 2102, column: 24, scope: !6875)
!6888 = !DILocation(line: 2102, column: 3, scope: !6875)
!6889 = !DILocation(line: 2102, column: 8, scope: !6875)
!6890 = !DILocation(line: 2102, column: 12, scope: !6875)
!6891 = !DILocation(line: 2103, column: 16, scope: !6875)
!6892 = !DILocation(line: 2103, column: 26, scope: !6875)
!6893 = !DILocation(line: 2103, column: 3, scope: !6875)
!6894 = !DILocation(line: 2103, column: 8, scope: !6875)
!6895 = !DILocation(line: 2103, column: 14, scope: !6875)
!6896 = !DILocation(line: 2105, column: 21, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 2105, column: 7)
!6898 = !DILocation(line: 2105, column: 31, scope: !6897)
!6899 = !DILocation(line: 2105, column: 7, scope: !6897)
!6900 = !DILocation(line: 2105, column: 7, scope: !6875)
!6901 = !DILocation(line: 2106, column: 10, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 2105, column: 37)
!6903 = !DILocation(line: 2106, column: 17, scope: !6902)
!6904 = !DILocation(line: 2106, column: 27, scope: !6902)
!6905 = !DILocation(line: 2106, column: 32, scope: !6902)
!6906 = !DILocation(line: 2106, column: 14, scope: !6902)
!6907 = !DILocation(line: 2106, column: 8, scope: !6902)
!6908 = !DILocation(line: 2107, column: 8, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 2107, column: 8)
!6910 = !DILocation(line: 2107, column: 12, scope: !6909)
!6911 = !DILocation(line: 2107, column: 36, scope: !6909)
!6912 = !DILocation(line: 2108, column: 8, scope: !6909)
!6913 = !DILocation(line: 2108, column: 12, scope: !6909)
!6914 = !DILocation(line: 2107, column: 8, scope: !6902)
!6915 = !DILocation(line: 2109, column: 5, scope: !6909)
!6916 = !DILocation(line: 2109, column: 10, scope: !6909)
!6917 = !DILocation(line: 2109, column: 16, scope: !6909)
!6918 = !DILocation(line: 2110, column: 3, scope: !6902)
!6919 = !DILocation(line: 2111, column: 2, scope: !6875)
!6920 = !DILocalVariable(name: "__mptr", scope: !6921, file: !3, line: 2097, type: !144)
!6921 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 2097, column: 2)
!6922 = !DILocation(line: 2097, column: 2, scope: !6921)
!6923 = !DILocation(line: 2097, column: 2, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6921, file: !3, line: 2097, column: 2)
!6925 = distinct !{!6925, !6871, !6926}
!6926 = !DILocation(line: 2111, column: 2, scope: !6867)
!6927 = !DILocation(line: 2112, column: 2, scope: !6784)
!6928 = !DILocation(line: 2114, column: 2, scope: !6784)
!6929 = !DILabel(scope: !6784, name: "enable_all", file: !3, line: 2116)
!6930 = !DILocation(line: 2116, column: 1, scope: !6784)
!6931 = !DILocation(line: 2117, column: 31, scope: !6784)
!6932 = !DILocation(line: 2117, column: 11, scope: !6784)
!6933 = !DILocation(line: 2117, column: 9, scope: !6784)
!6934 = !DILocation(line: 2118, column: 6, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 2118, column: 6)
!6936 = !DILocation(line: 2118, column: 6, scope: !6784)
!6937 = !DILocation(line: 2119, column: 3, scope: !6935)
!6938 = !DILocation(line: 2120, column: 17, scope: !6784)
!6939 = !DILocation(line: 2120, column: 2, scope: !6784)
!6940 = !DILocation(line: 2121, column: 1, scope: !6784)
!6941 = distinct !DISubprogram(name: "pci_bridge_distribute_available_resources", scope: !3, file: !3, line: 2031, type: !6942, scopeLine: 2033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6942 = !DISubroutineType(types: !6943)
!6943 = !{null, !145, !153}
!6944 = !DILocalVariable(name: "bridge", arg: 1, scope: !6941, file: !3, line: 2031, type: !145)
!6945 = !DILocation(line: 2031, column: 71, scope: !6941)
!6946 = !DILocalVariable(name: "add_list", arg: 2, scope: !6941, file: !3, line: 2032, type: !153)
!6947 = !DILocation(line: 2032, column: 30, scope: !6941)
!6948 = !DILocalVariable(name: "available_io", scope: !6941, file: !3, line: 2034, type: !168)
!6949 = !DILocation(line: 2034, column: 18, scope: !6941)
!6950 = !DILocalVariable(name: "available_mmio", scope: !6941, file: !3, line: 2034, type: !168)
!6951 = !DILocation(line: 2034, column: 32, scope: !6941)
!6952 = !DILocalVariable(name: "available_mmio_pref", scope: !6941, file: !3, line: 2034, type: !168)
!6953 = !DILocation(line: 2034, column: 48, scope: !6941)
!6954 = !DILocation(line: 2036, column: 7, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 2036, column: 6)
!6956 = !DILocation(line: 2036, column: 15, scope: !6955)
!6957 = !DILocation(line: 2036, column: 6, scope: !6941)
!6958 = !DILocation(line: 2037, column: 3, scope: !6955)
!6959 = !DILocation(line: 2040, column: 17, scope: !6941)
!6960 = !DILocation(line: 2040, column: 25, scope: !6941)
!6961 = !DILocation(line: 2041, column: 19, scope: !6941)
!6962 = !DILocation(line: 2041, column: 27, scope: !6941)
!6963 = !DILocation(line: 2042, column: 24, scope: !6941)
!6964 = !DILocation(line: 2042, column: 32, scope: !6941)
!6965 = !DILocation(line: 2044, column: 41, scope: !6941)
!6966 = !DILocation(line: 2044, column: 49, scope: !6941)
!6967 = !DILocation(line: 2045, column: 13, scope: !6941)
!6968 = !DILocation(line: 2044, column: 2, scope: !6941)
!6969 = !DILocation(line: 2048, column: 1, scope: !6941)
!6970 = distinct !DISubprogram(name: "__pci_bridge_assign_resources", scope: !3, file: !3, line: 1488, type: !6971, scopeLine: 1491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!6971 = !DISubroutineType(types: !6972)
!6972 = !{null, !4183, !153, !153}
!6973 = !DILocalVariable(name: "bridge", arg: 1, scope: !6970, file: !3, line: 1488, type: !4183)
!6974 = !DILocation(line: 1488, column: 65, scope: !6970)
!6975 = !DILocalVariable(name: "add_head", arg: 2, scope: !6970, file: !3, line: 1489, type: !153)
!6976 = !DILocation(line: 1489, column: 26, scope: !6970)
!6977 = !DILocalVariable(name: "fail_head", arg: 3, scope: !6970, file: !3, line: 1490, type: !153)
!6978 = !DILocation(line: 1490, column: 26, scope: !6970)
!6979 = !DILocalVariable(name: "b", scope: !6970, file: !3, line: 1492, type: !156)
!6980 = !DILocation(line: 1492, column: 18, scope: !6970)
!6981 = !DILocation(line: 1494, column: 49, scope: !6970)
!6982 = !DILocation(line: 1495, column: 7, scope: !6970)
!6983 = !DILocation(line: 1495, column: 17, scope: !6970)
!6984 = !DILocation(line: 1494, column: 2, scope: !6970)
!6985 = !DILocation(line: 1497, column: 6, scope: !6970)
!6986 = !DILocation(line: 1497, column: 14, scope: !6970)
!6987 = !DILocation(line: 1497, column: 4, scope: !6970)
!6988 = !DILocation(line: 1498, column: 7, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 1498, column: 6)
!6990 = !DILocation(line: 1498, column: 6, scope: !6970)
!6991 = !DILocation(line: 1499, column: 3, scope: !6989)
!6992 = !DILocation(line: 1501, column: 29, scope: !6970)
!6993 = !DILocation(line: 1501, column: 32, scope: !6970)
!6994 = !DILocation(line: 1501, column: 42, scope: !6970)
!6995 = !DILocation(line: 1501, column: 2, scope: !6970)
!6996 = !DILocation(line: 1503, column: 10, scope: !6970)
!6997 = !DILocation(line: 1503, column: 18, scope: !6970)
!6998 = !DILocation(line: 1503, column: 24, scope: !6970)
!6999 = !DILocation(line: 1503, column: 2, scope: !6970)
!7000 = !DILocation(line: 1505, column: 20, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 1503, column: 30)
!7002 = !DILocation(line: 1505, column: 3, scope: !7001)
!7003 = !DILocation(line: 1506, column: 3, scope: !7001)
!7004 = !DILocation(line: 1509, column: 21, scope: !7001)
!7005 = !DILocation(line: 1509, column: 3, scope: !7001)
!7006 = !DILocation(line: 1510, column: 3, scope: !7001)
!7007 = !DILocation(line: 1513, column: 3, scope: !7001)
!7008 = !DILocation(line: 1515, column: 3, scope: !7001)
!7009 = !DILocation(line: 1517, column: 1, scope: !6970)
!7010 = distinct !DISubprogram(name: "pci_reassign_bridge_resources", scope: !3, file: !3, line: 2124, type: !7011, scopeLine: 2125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7011 = !DISubroutineType(types: !7012)
!7012 = !{!120, !145, !185}
!7013 = !DILocalVariable(name: "bridge", arg: 1, scope: !7010, file: !3, line: 2124, type: !145)
!7014 = !DILocation(line: 2124, column: 51, scope: !7010)
!7015 = !DILocalVariable(name: "type", arg: 2, scope: !7010, file: !3, line: 2124, type: !185)
!7016 = !DILocation(line: 2124, column: 73, scope: !7010)
!7017 = !DILocalVariable(name: "dev_res", scope: !7010, file: !3, line: 2126, type: !4208)
!7018 = !DILocation(line: 2126, column: 27, scope: !7010)
!7019 = !DILocalVariable(name: "next", scope: !7010, file: !3, line: 2127, type: !145)
!7020 = !DILocation(line: 2127, column: 18, scope: !7010)
!7021 = !DILocalVariable(name: "saved", scope: !7010, file: !3, line: 2128, type: !149)
!7022 = !DILocation(line: 2128, column: 2, scope: !7010)
!7023 = !DILocalVariable(name: "added", scope: !7010, file: !3, line: 2129, type: !149)
!7024 = !DILocation(line: 2129, column: 2, scope: !7010)
!7025 = !DILocalVariable(name: "failed", scope: !7010, file: !3, line: 2130, type: !149)
!7026 = !DILocation(line: 2130, column: 2, scope: !7010)
!7027 = !DILocalVariable(name: "i", scope: !7010, file: !3, line: 2131, type: !7)
!7028 = !DILocation(line: 2131, column: 15, scope: !7010)
!7029 = !DILocalVariable(name: "ret", scope: !7010, file: !3, line: 2132, type: !120)
!7030 = !DILocation(line: 2132, column: 6, scope: !7010)
!7031 = !DILocation(line: 2134, column: 2, scope: !7010)
!7032 = !DILocation(line: 2137, column: 9, scope: !7010)
!7033 = !DILocation(line: 2137, column: 7, scope: !7010)
!7034 = !DILocation(line: 2138, column: 2, scope: !7010)
!7035 = !DILocation(line: 2139, column: 12, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 2138, column: 5)
!7037 = !DILocation(line: 2139, column: 10, scope: !7036)
!7038 = !DILocation(line: 2140, column: 10, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 2140, column: 3)
!7040 = !DILocation(line: 2140, column: 8, scope: !7039)
!7041 = !DILocation(line: 2140, column: 34, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7039, file: !3, line: 2140, column: 3)
!7043 = !DILocation(line: 2140, column: 36, scope: !7042)
!7044 = !DILocation(line: 2140, column: 3, scope: !7039)
!7045 = !DILocalVariable(name: "res", scope: !7046, file: !3, line: 2142, type: !167)
!7046 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 2141, column: 13)
!7047 = !DILocation(line: 2142, column: 21, scope: !7046)
!7048 = !DILocation(line: 2142, column: 28, scope: !7046)
!7049 = !DILocation(line: 2142, column: 36, scope: !7046)
!7050 = !DILocation(line: 2142, column: 45, scope: !7046)
!7051 = !DILocation(line: 2144, column: 9, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 2144, column: 8)
!7053 = !DILocation(line: 2144, column: 14, scope: !7052)
!7054 = !DILocation(line: 2144, column: 22, scope: !7052)
!7055 = !DILocation(line: 2144, column: 20, scope: !7052)
!7056 = !DILocation(line: 2144, column: 28, scope: !7052)
!7057 = !DILocation(line: 2144, column: 8, scope: !7046)
!7058 = !DILocation(line: 2145, column: 5, scope: !7052)
!7059 = !DILocation(line: 2148, column: 8, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 2148, column: 8)
!7061 = !DILocation(line: 2148, column: 13, scope: !7060)
!7062 = !DILocation(line: 2148, column: 8, scope: !7046)
!7063 = !DILocation(line: 2149, column: 5, scope: !7060)
!7064 = !DILocation(line: 2151, column: 30, scope: !7046)
!7065 = !DILocation(line: 2151, column: 38, scope: !7046)
!7066 = !DILocation(line: 2151, column: 10, scope: !7046)
!7067 = !DILocation(line: 2151, column: 8, scope: !7046)
!7068 = !DILocation(line: 2152, column: 8, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 2152, column: 8)
!7070 = !DILocation(line: 2152, column: 8, scope: !7046)
!7071 = !DILocation(line: 2153, column: 5, scope: !7069)
!7072 = !DILocation(line: 2155, column: 4, scope: !7046)
!7073 = !DILocation(line: 2158, column: 8, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 2158, column: 8)
!7075 = !DILocation(line: 2158, column: 13, scope: !7074)
!7076 = !DILocation(line: 2158, column: 8, scope: !7046)
!7077 = !DILocation(line: 2159, column: 22, scope: !7074)
!7078 = !DILocation(line: 2159, column: 5, scope: !7074)
!7079 = !DILocation(line: 2160, column: 4, scope: !7046)
!7080 = !DILocation(line: 2160, column: 9, scope: !7046)
!7081 = !DILocation(line: 2160, column: 15, scope: !7046)
!7082 = !DILocation(line: 2161, column: 4, scope: !7046)
!7083 = !DILocation(line: 2161, column: 9, scope: !7046)
!7084 = !DILocation(line: 2161, column: 13, scope: !7046)
!7085 = !DILocation(line: 2162, column: 4, scope: !7046)
!7086 = !DILocation(line: 2141, column: 9, scope: !7042)
!7087 = !DILocation(line: 2140, column: 3, scope: !7042)
!7088 = distinct !{!7088, !7044, !7089}
!7089 = !DILocation(line: 2163, column: 3, scope: !7039)
!7090 = !DILocation(line: 2164, column: 7, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 2164, column: 7)
!7092 = !DILocation(line: 2164, column: 9, scope: !7091)
!7093 = !DILocation(line: 2164, column: 7, scope: !7036)
!7094 = !DILocation(line: 2165, column: 4, scope: !7091)
!7095 = !DILocation(line: 2167, column: 10, scope: !7036)
!7096 = !DILocation(line: 2167, column: 18, scope: !7036)
!7097 = !DILocation(line: 2167, column: 24, scope: !7036)
!7098 = !DILocation(line: 2167, column: 32, scope: !7036)
!7099 = !DILocation(line: 2167, column: 37, scope: !7036)
!7100 = !DILocation(line: 2167, column: 8, scope: !7036)
!7101 = !DILocation(line: 2168, column: 2, scope: !7036)
!7102 = !DILocation(line: 2168, column: 11, scope: !7010)
!7103 = distinct !{!7103, !7034, !7104}
!7104 = !DILocation(line: 2168, column: 15, scope: !7010)
!7105 = !DILocation(line: 2170, column: 6, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 2170, column: 6)
!7107 = !DILocation(line: 2170, column: 6, scope: !7010)
!7108 = !DILocation(line: 2171, column: 3, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 2170, column: 26)
!7110 = !DILocation(line: 2172, column: 3, scope: !7109)
!7111 = !DILocation(line: 2175, column: 25, scope: !7010)
!7112 = !DILocation(line: 2175, column: 33, scope: !7010)
!7113 = !DILocation(line: 2175, column: 2, scope: !7010)
!7114 = !DILocation(line: 2176, column: 32, scope: !7010)
!7115 = !DILocation(line: 2176, column: 2, scope: !7010)
!7116 = !DILocation(line: 2177, column: 2, scope: !7010)
!7117 = !DILocation(line: 2177, column: 2, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 2177, column: 2)
!7119 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 2177, column: 2)
!7120 = !DILocation(line: 2177, column: 2, scope: !7119)
!7121 = !DILocation(line: 2177, column: 2, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7118, file: !3, line: 2177, column: 2)
!7123 = !DILocation(line: 2177, column: 2, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 2177, column: 2)
!7125 = !DILocation(line: 2177, column: 2, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 2177, column: 2)
!7127 = !{i32 -2140889949, i32 -2140889920, i32 -2140889874, i32 -2140889816, i32 -2140889762, i32 -2140889708, i32 -2140889653, i32 -2140889622}
!7128 = !DILocation(line: 2177, column: 2, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 2177, column: 2)
!7130 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 2177, column: 2)
!7131 = !{i32 -2140889175, i32 -2140889168, i32 -2140889114, i32 -2140889083, i32 -2140889053}
!7132 = !DILocation(line: 2177, column: 2, scope: !7130)
!7133 = !DILocation(line: 2179, column: 7, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 2179, column: 6)
!7135 = !DILocation(line: 2179, column: 6, scope: !7010)
!7136 = !DILocation(line: 2180, column: 7, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 2179, column: 28)
!7138 = !DILocation(line: 2181, column: 3, scope: !7137)
!7139 = !DILocalVariable(name: "__mptr", scope: !7140, file: !3, line: 2184, type: !144)
!7140 = distinct !DILexicalBlock(scope: !7141, file: !3, line: 2184, column: 2)
!7141 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 2184, column: 2)
!7142 = !DILocation(line: 2184, column: 2, scope: !7140)
!7143 = !DILocation(line: 2184, column: 2, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7140, file: !3, line: 2184, column: 2)
!7145 = !DILocation(line: 2184, column: 2, scope: !7141)
!7146 = !DILocation(line: 2184, column: 2, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7141, file: !3, line: 2184, column: 2)
!7148 = !DILocation(line: 2186, column: 7, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 2186, column: 7)
!7150 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 2184, column: 45)
!7151 = !DILocation(line: 2186, column: 17, scope: !7149)
!7152 = !DILocation(line: 2186, column: 26, scope: !7149)
!7153 = !DILocation(line: 2186, column: 14, scope: !7149)
!7154 = !DILocation(line: 2186, column: 7, scope: !7150)
!7155 = !DILocation(line: 2187, column: 4, scope: !7149)
!7156 = !DILocation(line: 2189, column: 12, scope: !7150)
!7157 = !DILocation(line: 2189, column: 21, scope: !7150)
!7158 = !DILocation(line: 2189, column: 10, scope: !7150)
!7159 = !DILocation(line: 2190, column: 20, scope: !7150)
!7160 = !DILocation(line: 2190, column: 28, scope: !7150)
!7161 = !DILocation(line: 2190, column: 3, scope: !7150)
!7162 = !DILocation(line: 2191, column: 2, scope: !7150)
!7163 = !DILocalVariable(name: "__mptr", scope: !7164, file: !3, line: 2184, type: !144)
!7164 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 2184, column: 2)
!7165 = !DILocation(line: 2184, column: 2, scope: !7164)
!7166 = !DILocation(line: 2184, column: 2, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 2184, column: 2)
!7168 = distinct !{!7168, !7145, !7169}
!7169 = !DILocation(line: 2191, column: 2, scope: !7141)
!7170 = !DILocation(line: 2193, column: 2, scope: !7010)
!7171 = !DILocation(line: 2194, column: 2, scope: !7010)
!7172 = !DILocation(line: 2195, column: 2, scope: !7010)
!7173 = !DILabel(scope: !7010, name: "cleanup", file: !3, line: 2197)
!7174 = !DILocation(line: 2197, column: 1, scope: !7010)
!7175 = !DILocalVariable(name: "__mptr", scope: !7176, file: !3, line: 2199, type: !144)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 2199, column: 2)
!7177 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 2199, column: 2)
!7178 = !DILocation(line: 2199, column: 2, scope: !7176)
!7179 = !DILocation(line: 2199, column: 2, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7176, file: !3, line: 2199, column: 2)
!7181 = !DILocation(line: 2199, column: 2, scope: !7177)
!7182 = !DILocation(line: 2199, column: 2, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 2199, column: 2)
!7184 = !DILocalVariable(name: "res", scope: !7185, file: !3, line: 2200, type: !167)
!7185 = distinct !DILexicalBlock(scope: !7183, file: !3, line: 2199, column: 46)
!7186 = !DILocation(line: 2200, column: 20, scope: !7185)
!7187 = !DILocation(line: 2200, column: 26, scope: !7185)
!7188 = !DILocation(line: 2200, column: 35, scope: !7185)
!7189 = !DILocation(line: 2202, column: 16, scope: !7185)
!7190 = !DILocation(line: 2202, column: 25, scope: !7185)
!7191 = !DILocation(line: 2202, column: 3, scope: !7185)
!7192 = !DILocation(line: 2202, column: 8, scope: !7185)
!7193 = !DILocation(line: 2202, column: 14, scope: !7185)
!7194 = !DILocation(line: 2203, column: 14, scope: !7185)
!7195 = !DILocation(line: 2203, column: 23, scope: !7185)
!7196 = !DILocation(line: 2203, column: 3, scope: !7185)
!7197 = !DILocation(line: 2203, column: 8, scope: !7185)
!7198 = !DILocation(line: 2203, column: 12, scope: !7185)
!7199 = !DILocation(line: 2204, column: 16, scope: !7185)
!7200 = !DILocation(line: 2204, column: 25, scope: !7185)
!7201 = !DILocation(line: 2204, column: 3, scope: !7185)
!7202 = !DILocation(line: 2204, column: 8, scope: !7185)
!7203 = !DILocation(line: 2204, column: 14, scope: !7185)
!7204 = !DILocation(line: 2205, column: 2, scope: !7185)
!7205 = !DILocalVariable(name: "__mptr", scope: !7206, file: !3, line: 2199, type: !144)
!7206 = distinct !DILexicalBlock(scope: !7183, file: !3, line: 2199, column: 2)
!7207 = !DILocation(line: 2199, column: 2, scope: !7206)
!7208 = !DILocation(line: 2199, column: 2, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 2199, column: 2)
!7210 = distinct !{!7210, !7181, !7211}
!7211 = !DILocation(line: 2205, column: 2, scope: !7177)
!7212 = !DILocation(line: 2206, column: 2, scope: !7010)
!7213 = !DILocalVariable(name: "__mptr", scope: !7214, file: !3, line: 2209, type: !144)
!7214 = distinct !DILexicalBlock(scope: !7215, file: !3, line: 2209, column: 2)
!7215 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 2209, column: 2)
!7216 = !DILocation(line: 2209, column: 2, scope: !7214)
!7217 = !DILocation(line: 2209, column: 2, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 2209, column: 2)
!7219 = !DILocation(line: 2209, column: 2, scope: !7215)
!7220 = !DILocation(line: 2209, column: 2, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7215, file: !3, line: 2209, column: 2)
!7222 = !DILocalVariable(name: "res", scope: !7223, file: !3, line: 2210, type: !167)
!7223 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 2209, column: 45)
!7224 = !DILocation(line: 2210, column: 20, scope: !7223)
!7225 = !DILocation(line: 2210, column: 26, scope: !7223)
!7226 = !DILocation(line: 2210, column: 35, scope: !7223)
!7227 = !DILocation(line: 2212, column: 12, scope: !7223)
!7228 = !DILocation(line: 2212, column: 21, scope: !7223)
!7229 = !DILocation(line: 2212, column: 10, scope: !7223)
!7230 = !DILocation(line: 2213, column: 7, scope: !7223)
!7231 = !DILocation(line: 2213, column: 13, scope: !7223)
!7232 = !DILocation(line: 2213, column: 21, scope: !7223)
!7233 = !DILocation(line: 2213, column: 11, scope: !7223)
!7234 = !DILocation(line: 2213, column: 5, scope: !7223)
!7235 = !DILocation(line: 2215, column: 16, scope: !7223)
!7236 = !DILocation(line: 2215, column: 25, scope: !7223)
!7237 = !DILocation(line: 2215, column: 3, scope: !7223)
!7238 = !DILocation(line: 2215, column: 8, scope: !7223)
!7239 = !DILocation(line: 2215, column: 14, scope: !7223)
!7240 = !DILocation(line: 2216, column: 14, scope: !7223)
!7241 = !DILocation(line: 2216, column: 23, scope: !7223)
!7242 = !DILocation(line: 2216, column: 3, scope: !7223)
!7243 = !DILocation(line: 2216, column: 8, scope: !7223)
!7244 = !DILocation(line: 2216, column: 12, scope: !7223)
!7245 = !DILocation(line: 2217, column: 16, scope: !7223)
!7246 = !DILocation(line: 2217, column: 25, scope: !7223)
!7247 = !DILocation(line: 2217, column: 3, scope: !7223)
!7248 = !DILocation(line: 2217, column: 8, scope: !7223)
!7249 = !DILocation(line: 2217, column: 14, scope: !7223)
!7250 = !DILocation(line: 2219, column: 22, scope: !7223)
!7251 = !DILocation(line: 2219, column: 30, scope: !7223)
!7252 = !DILocation(line: 2219, column: 3, scope: !7223)
!7253 = !DILocation(line: 2220, column: 20, scope: !7223)
!7254 = !DILocation(line: 2220, column: 28, scope: !7223)
!7255 = !DILocation(line: 2220, column: 3, scope: !7223)
!7256 = !DILocation(line: 2221, column: 2, scope: !7223)
!7257 = !DILocalVariable(name: "__mptr", scope: !7258, file: !3, line: 2209, type: !144)
!7258 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 2209, column: 2)
!7259 = !DILocation(line: 2209, column: 2, scope: !7258)
!7260 = !DILocation(line: 2209, column: 2, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7258, file: !3, line: 2209, column: 2)
!7262 = distinct !{!7262, !7219, !7263}
!7263 = !DILocation(line: 2221, column: 2, scope: !7215)
!7264 = !DILocation(line: 2222, column: 2, scope: !7010)
!7265 = !DILocation(line: 2223, column: 2, scope: !7010)
!7266 = !DILocation(line: 2225, column: 9, scope: !7010)
!7267 = !DILocation(line: 2225, column: 2, scope: !7010)
!7268 = !DILocation(line: 2226, column: 1, scope: !7010)
!7269 = distinct !DISubprogram(name: "add_to_list", scope: !3, file: !3, line: 60, type: !7270, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7270 = !DISubroutineType(types: !7271)
!7271 = !{!120, !153, !145, !167, !172, !172}
!7272 = !DILocalVariable(name: "head", arg: 1, scope: !7269, file: !3, line: 60, type: !153)
!7273 = !DILocation(line: 60, column: 42, scope: !7269)
!7274 = !DILocalVariable(name: "dev", arg: 2, scope: !7269, file: !3, line: 60, type: !145)
!7275 = !DILocation(line: 60, column: 64, scope: !7269)
!7276 = !DILocalVariable(name: "res", arg: 3, scope: !7269, file: !3, line: 61, type: !167)
!7277 = !DILocation(line: 61, column: 27, scope: !7269)
!7278 = !DILocalVariable(name: "add_size", arg: 4, scope: !7269, file: !3, line: 61, type: !172)
!7279 = !DILocation(line: 61, column: 48, scope: !7269)
!7280 = !DILocalVariable(name: "min_align", arg: 5, scope: !7269, file: !3, line: 62, type: !172)
!7281 = !DILocation(line: 62, column: 26, scope: !7269)
!7282 = !DILocalVariable(name: "tmp", scope: !7269, file: !3, line: 64, type: !4208)
!7283 = !DILocation(line: 64, column: 27, scope: !7269)
!7284 = !DILocation(line: 66, column: 8, scope: !7269)
!7285 = !DILocation(line: 66, column: 6, scope: !7269)
!7286 = !DILocation(line: 67, column: 7, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 67, column: 6)
!7288 = !DILocation(line: 67, column: 6, scope: !7269)
!7289 = !DILocation(line: 68, column: 3, scope: !7287)
!7290 = !DILocation(line: 70, column: 13, scope: !7269)
!7291 = !DILocation(line: 70, column: 2, scope: !7269)
!7292 = !DILocation(line: 70, column: 7, scope: !7269)
!7293 = !DILocation(line: 70, column: 11, scope: !7269)
!7294 = !DILocation(line: 71, column: 13, scope: !7269)
!7295 = !DILocation(line: 71, column: 2, scope: !7269)
!7296 = !DILocation(line: 71, column: 7, scope: !7269)
!7297 = !DILocation(line: 71, column: 11, scope: !7269)
!7298 = !DILocation(line: 72, column: 15, scope: !7269)
!7299 = !DILocation(line: 72, column: 20, scope: !7269)
!7300 = !DILocation(line: 72, column: 2, scope: !7269)
!7301 = !DILocation(line: 72, column: 7, scope: !7269)
!7302 = !DILocation(line: 72, column: 13, scope: !7269)
!7303 = !DILocation(line: 73, column: 13, scope: !7269)
!7304 = !DILocation(line: 73, column: 18, scope: !7269)
!7305 = !DILocation(line: 73, column: 2, scope: !7269)
!7306 = !DILocation(line: 73, column: 7, scope: !7269)
!7307 = !DILocation(line: 73, column: 11, scope: !7269)
!7308 = !DILocation(line: 74, column: 15, scope: !7269)
!7309 = !DILocation(line: 74, column: 20, scope: !7269)
!7310 = !DILocation(line: 74, column: 2, scope: !7269)
!7311 = !DILocation(line: 74, column: 7, scope: !7269)
!7312 = !DILocation(line: 74, column: 13, scope: !7269)
!7313 = !DILocation(line: 75, column: 18, scope: !7269)
!7314 = !DILocation(line: 75, column: 2, scope: !7269)
!7315 = !DILocation(line: 75, column: 7, scope: !7269)
!7316 = !DILocation(line: 75, column: 16, scope: !7269)
!7317 = !DILocation(line: 76, column: 19, scope: !7269)
!7318 = !DILocation(line: 76, column: 2, scope: !7269)
!7319 = !DILocation(line: 76, column: 7, scope: !7269)
!7320 = !DILocation(line: 76, column: 17, scope: !7269)
!7321 = !DILocation(line: 78, column: 12, scope: !7269)
!7322 = !DILocation(line: 78, column: 17, scope: !7269)
!7323 = !DILocation(line: 78, column: 23, scope: !7269)
!7324 = !DILocation(line: 78, column: 2, scope: !7269)
!7325 = !DILocation(line: 80, column: 2, scope: !7269)
!7326 = !DILocation(line: 81, column: 1, scope: !7269)
!7327 = distinct !DISubprogram(name: "pci_assign_unassigned_bus_resources", scope: !3, file: !3, line: 2228, type: !204, scopeLine: 2229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7328 = !DILocalVariable(name: "bus", arg: 1, scope: !7327, file: !3, line: 2228, type: !156)
!7329 = !DILocation(line: 2228, column: 58, scope: !7327)
!7330 = !DILocalVariable(name: "dev", scope: !7327, file: !3, line: 2230, type: !145)
!7331 = !DILocation(line: 2230, column: 18, scope: !7327)
!7332 = !DILocalVariable(name: "add_list", scope: !7327, file: !3, line: 2232, type: !149)
!7333 = !DILocation(line: 2232, column: 2, scope: !7327)
!7334 = !DILocation(line: 2234, column: 2, scope: !7327)
!7335 = !DILocalVariable(name: "__mptr", scope: !7336, file: !3, line: 2235, type: !144)
!7336 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 2235, column: 2)
!7337 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 2235, column: 2)
!7338 = !DILocation(line: 2235, column: 2, scope: !7336)
!7339 = !DILocation(line: 2235, column: 2, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 2235, column: 2)
!7341 = !DILocation(line: 2235, column: 2, scope: !7337)
!7342 = !DILocation(line: 2235, column: 2, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 2235, column: 2)
!7344 = !DILocation(line: 2235, column: 2, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 2235, column: 2)
!7346 = !DILocation(line: 2235, column: 2, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 2235, column: 2)
!7348 = !DILocation(line: 2236, column: 27, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 2236, column: 7)
!7350 = !DILocation(line: 2236, column: 7, scope: !7349)
!7351 = !DILocation(line: 2236, column: 7, scope: !7345)
!7352 = !DILocation(line: 2237, column: 27, scope: !7349)
!7353 = !DILocation(line: 2237, column: 32, scope: !7349)
!7354 = !DILocation(line: 2237, column: 4, scope: !7349)
!7355 = !DILocalVariable(name: "__mptr", scope: !7356, file: !3, line: 2235, type: !144)
!7356 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 2235, column: 2)
!7357 = !DILocation(line: 2235, column: 2, scope: !7356)
!7358 = !DILocation(line: 2235, column: 2, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 2235, column: 2)
!7360 = distinct !{!7360, !7341, !7361}
!7361 = !DILocation(line: 2237, column: 54, scope: !7337)
!7362 = !DILocation(line: 2238, column: 2, scope: !7327)
!7363 = !DILocation(line: 2239, column: 29, scope: !7327)
!7364 = !DILocation(line: 2239, column: 2, scope: !7327)
!7365 = !DILocation(line: 2240, column: 2, scope: !7327)
!7366 = !DILocation(line: 2240, column: 2, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 2240, column: 2)
!7368 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 2240, column: 2)
!7369 = !DILocation(line: 2240, column: 2, scope: !7368)
!7370 = !DILocation(line: 2240, column: 2, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7367, file: !3, line: 2240, column: 2)
!7372 = !DILocation(line: 2240, column: 2, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 2240, column: 2)
!7374 = !DILocation(line: 2240, column: 2, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 2240, column: 2)
!7376 = !{i32 -2140872938, i32 -2140872909, i32 -2140872863, i32 -2140872805, i32 -2140872751, i32 -2140872697, i32 -2140872642, i32 -2140872611}
!7377 = !DILocation(line: 2240, column: 2, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 2240, column: 2)
!7379 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 2240, column: 2)
!7380 = !{i32 -2140872164, i32 -2140872157, i32 -2140872103, i32 -2140872072, i32 -2140872042}
!7381 = !DILocation(line: 2240, column: 2, scope: !7379)
!7382 = !DILocation(line: 2241, column: 1, scope: !7327)
!7383 = distinct !DISubprogram(name: "pci_has_subordinate", scope: !4130, file: !4130, line: 119, type: !6680, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7384 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !7383, file: !4130, line: 119, type: !145)
!7385 = !DILocation(line: 119, column: 56, scope: !7383)
!7386 = !DILocation(line: 121, column: 12, scope: !7383)
!7387 = !DILocation(line: 121, column: 21, scope: !7383)
!7388 = !DILocation(line: 121, column: 10, scope: !7383)
!7389 = !DILocation(line: 121, column: 9, scope: !7383)
!7390 = !DILocation(line: 121, column: 2, scope: !7383)
!7391 = distinct !DISubprogram(name: "find_bus_resource_of_type", scope: !3, file: !3, line: 771, type: !7392, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7392 = !DISubroutineType(types: !7393)
!7393 = !{!167, !156, !185, !185}
!7394 = !DILocalVariable(name: "bus", arg: 1, scope: !7391, file: !3, line: 771, type: !156)
!7395 = !DILocation(line: 771, column: 67, scope: !7391)
!7396 = !DILocalVariable(name: "type_mask", arg: 2, scope: !7391, file: !3, line: 772, type: !185)
!7397 = !DILocation(line: 772, column: 23, scope: !7391)
!7398 = !DILocalVariable(name: "type", arg: 3, scope: !7391, file: !3, line: 773, type: !185)
!7399 = !DILocation(line: 773, column: 23, scope: !7391)
!7400 = !DILocalVariable(name: "r", scope: !7391, file: !3, line: 775, type: !167)
!7401 = !DILocation(line: 775, column: 19, scope: !7391)
!7402 = !DILocalVariable(name: "r_assigned", scope: !7391, file: !3, line: 775, type: !167)
!7403 = !DILocation(line: 775, column: 23, scope: !7391)
!7404 = !DILocalVariable(name: "i", scope: !7391, file: !3, line: 776, type: !120)
!7405 = !DILocation(line: 776, column: 6, scope: !7391)
!7406 = !DILocation(line: 778, column: 2, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 778, column: 2)
!7408 = !DILocation(line: 778, column: 2, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 778, column: 2)
!7410 = !DILocation(line: 779, column: 7, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7412, file: !3, line: 779, column: 7)
!7412 = distinct !DILexicalBlock(scope: !7409, file: !3, line: 778, column: 39)
!7413 = !DILocation(line: 779, column: 9, scope: !7411)
!7414 = !DILocation(line: 779, column: 29, scope: !7411)
!7415 = !DILocation(line: 779, column: 32, scope: !7411)
!7416 = !DILocation(line: 779, column: 34, scope: !7411)
!7417 = !DILocation(line: 779, column: 7, scope: !7412)
!7418 = !DILocation(line: 780, column: 4, scope: !7411)
!7419 = !DILocation(line: 781, column: 7, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7412, file: !3, line: 781, column: 7)
!7421 = !DILocation(line: 781, column: 9, scope: !7420)
!7422 = !DILocation(line: 781, column: 13, scope: !7420)
!7423 = !DILocation(line: 781, column: 16, scope: !7420)
!7424 = !DILocation(line: 781, column: 24, scope: !7420)
!7425 = !DILocation(line: 781, column: 22, scope: !7420)
!7426 = !DILocation(line: 781, column: 38, scope: !7420)
!7427 = !DILocation(line: 781, column: 35, scope: !7420)
!7428 = !DILocation(line: 781, column: 43, scope: !7420)
!7429 = !DILocation(line: 781, column: 47, scope: !7420)
!7430 = !DILocation(line: 781, column: 50, scope: !7420)
!7431 = !DILocation(line: 781, column: 7, scope: !7412)
!7432 = !DILocation(line: 782, column: 11, scope: !7420)
!7433 = !DILocation(line: 782, column: 4, scope: !7420)
!7434 = !DILocation(line: 783, column: 7, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7412, file: !3, line: 783, column: 7)
!7436 = !DILocation(line: 783, column: 9, scope: !7435)
!7437 = !DILocation(line: 783, column: 13, scope: !7435)
!7438 = !DILocation(line: 783, column: 16, scope: !7435)
!7439 = !DILocation(line: 783, column: 24, scope: !7435)
!7440 = !DILocation(line: 783, column: 22, scope: !7435)
!7441 = !DILocation(line: 783, column: 38, scope: !7435)
!7442 = !DILocation(line: 783, column: 35, scope: !7435)
!7443 = !DILocation(line: 783, column: 43, scope: !7435)
!7444 = !DILocation(line: 783, column: 47, scope: !7435)
!7445 = !DILocation(line: 783, column: 7, scope: !7412)
!7446 = !DILocation(line: 784, column: 17, scope: !7435)
!7447 = !DILocation(line: 784, column: 15, scope: !7435)
!7448 = !DILocation(line: 784, column: 4, scope: !7435)
!7449 = !DILocation(line: 785, column: 2, scope: !7412)
!7450 = distinct !{!7450, !7406, !7451}
!7451 = !DILocation(line: 785, column: 2, scope: !7407)
!7452 = !DILocation(line: 786, column: 9, scope: !7391)
!7453 = !DILocation(line: 786, column: 2, scope: !7391)
!7454 = !DILocation(line: 787, column: 1, scope: !7391)
!7455 = distinct !DISubprogram(name: "window_alignment", scope: !3, file: !3, line: 844, type: !4912, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7456 = !DILocalVariable(name: "bus", arg: 1, scope: !7455, file: !3, line: 844, type: !156)
!7457 = !DILocation(line: 844, column: 57, scope: !7455)
!7458 = !DILocalVariable(name: "type", arg: 2, scope: !7455, file: !3, line: 844, type: !185)
!7459 = !DILocation(line: 844, column: 76, scope: !7455)
!7460 = !DILocalVariable(name: "align", scope: !7455, file: !3, line: 846, type: !172)
!7461 = !DILocation(line: 846, column: 18, scope: !7455)
!7462 = !DILocalVariable(name: "arch_align", scope: !7455, file: !3, line: 846, type: !172)
!7463 = !DILocation(line: 846, column: 29, scope: !7455)
!7464 = !DILocation(line: 848, column: 6, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 848, column: 6)
!7466 = !DILocation(line: 848, column: 11, scope: !7465)
!7467 = !DILocation(line: 848, column: 6, scope: !7455)
!7468 = !DILocation(line: 849, column: 9, scope: !7465)
!7469 = !DILocation(line: 849, column: 3, scope: !7465)
!7470 = !DILocation(line: 850, column: 11, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 850, column: 11)
!7472 = !DILocation(line: 850, column: 16, scope: !7471)
!7473 = !DILocation(line: 850, column: 11, scope: !7465)
!7474 = !DILocation(line: 855, column: 7, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 855, column: 7)
!7476 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 850, column: 33)
!7477 = !DILocation(line: 855, column: 12, scope: !7475)
!7478 = !DILocation(line: 855, column: 17, scope: !7475)
!7479 = !DILocation(line: 855, column: 20, scope: !7475)
!7480 = !DILocation(line: 855, column: 25, scope: !7475)
!7481 = !DILocation(line: 855, column: 31, scope: !7475)
!7482 = !DILocation(line: 855, column: 7, scope: !7476)
!7483 = !DILocation(line: 856, column: 10, scope: !7475)
!7484 = !DILocation(line: 856, column: 4, scope: !7475)
!7485 = !DILocation(line: 858, column: 10, scope: !7475)
!7486 = !DILocation(line: 859, column: 2, scope: !7476)
!7487 = !DILocation(line: 861, column: 40, scope: !7455)
!7488 = !DILocation(line: 861, column: 45, scope: !7455)
!7489 = !DILocation(line: 861, column: 15, scope: !7455)
!7490 = !DILocation(line: 861, column: 13, scope: !7455)
!7491 = !DILocalVariable(name: "__UNIQUE_ID___x279", scope: !7492, file: !3, line: 862, type: !172)
!7492 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 862, column: 9)
!7493 = !DILocation(line: 862, column: 9, scope: !7492)
!7494 = !DILocalVariable(name: "__UNIQUE_ID___y280", scope: !7492, file: !3, line: 862, type: !172)
!7495 = !DILocation(line: 862, column: 2, scope: !7455)
!7496 = distinct !DISubprogram(name: "resource_size", scope: !169, file: !169, line: 210, type: !7497, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7497 = !DISubroutineType(types: !7498)
!7498 = !{!172, !4205}
!7499 = !DILocalVariable(name: "res", arg: 1, scope: !7496, file: !169, line: 210, type: !4205)
!7500 = !DILocation(line: 210, column: 68, scope: !7496)
!7501 = !DILocation(line: 212, column: 9, scope: !7496)
!7502 = !DILocation(line: 212, column: 14, scope: !7496)
!7503 = !DILocation(line: 212, column: 20, scope: !7496)
!7504 = !DILocation(line: 212, column: 25, scope: !7496)
!7505 = !DILocation(line: 212, column: 18, scope: !7496)
!7506 = !DILocation(line: 212, column: 31, scope: !7496)
!7507 = !DILocation(line: 212, column: 2, scope: !7496)
!7508 = distinct !DISubprogram(name: "pci_resource_alignment", scope: !4130, file: !4130, line: 521, type: !7509, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7509 = !DISubroutineType(types: !7510)
!7510 = !{!172, !145, !167}
!7511 = !DILocalVariable(name: "dev", arg: 1, scope: !7508, file: !4130, line: 521, type: !145)
!7512 = !DILocation(line: 521, column: 70, scope: !7508)
!7513 = !DILocalVariable(name: "res", arg: 2, scope: !7508, file: !4130, line: 522, type: !167)
!7514 = !DILocation(line: 522, column: 29, scope: !7508)
!7515 = !DILocalVariable(name: "resno", scope: !7508, file: !4130, line: 525, type: !120)
!7516 = !DILocation(line: 525, column: 6, scope: !7508)
!7517 = !DILocation(line: 525, column: 14, scope: !7508)
!7518 = !DILocation(line: 525, column: 20, scope: !7508)
!7519 = !DILocation(line: 525, column: 25, scope: !7508)
!7520 = !DILocation(line: 525, column: 18, scope: !7508)
!7521 = !DILocation(line: 527, column: 6, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7508, file: !4130, line: 527, column: 6)
!7523 = !DILocation(line: 527, column: 12, scope: !7522)
!7524 = !DILocation(line: 527, column: 33, scope: !7522)
!7525 = !DILocation(line: 527, column: 36, scope: !7522)
!7526 = !DILocation(line: 527, column: 42, scope: !7522)
!7527 = !DILocation(line: 527, column: 6, scope: !7508)
!7528 = !DILocation(line: 528, column: 39, scope: !7522)
!7529 = !DILocation(line: 528, column: 44, scope: !7522)
!7530 = !DILocation(line: 528, column: 10, scope: !7522)
!7531 = !DILocation(line: 528, column: 3, scope: !7522)
!7532 = !DILocation(line: 530, column: 6, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7508, file: !4130, line: 530, column: 6)
!7534 = !DILocation(line: 530, column: 11, scope: !7533)
!7535 = !DILocation(line: 530, column: 17, scope: !7533)
!7536 = !DILocation(line: 530, column: 22, scope: !7533)
!7537 = !DILocation(line: 530, column: 6, scope: !7508)
!7538 = !DILocation(line: 531, column: 41, scope: !7533)
!7539 = !DILocation(line: 531, column: 10, scope: !7533)
!7540 = !DILocation(line: 531, column: 3, scope: !7533)
!7541 = !DILocation(line: 532, column: 28, scope: !7508)
!7542 = !DILocation(line: 532, column: 9, scope: !7508)
!7543 = !DILocation(line: 532, column: 2, scope: !7508)
!7544 = !DILocation(line: 533, column: 1, scope: !7508)
!7545 = distinct !DISubprogram(name: "get_res_add_size", scope: !3, file: !3, line: 109, type: !7546, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7546 = !DISubroutineType(types: !7547)
!7547 = !{!172, !153, !167}
!7548 = !DILocalVariable(name: "head", arg: 1, scope: !7545, file: !3, line: 109, type: !153)
!7549 = !DILocation(line: 109, column: 59, scope: !7545)
!7550 = !DILocalVariable(name: "res", arg: 2, scope: !7545, file: !3, line: 110, type: !167)
!7551 = !DILocation(line: 110, column: 23, scope: !7545)
!7552 = !DILocalVariable(name: "dev_res", scope: !7545, file: !3, line: 112, type: !4208)
!7553 = !DILocation(line: 112, column: 27, scope: !7545)
!7554 = !DILocation(line: 114, column: 27, scope: !7545)
!7555 = !DILocation(line: 114, column: 33, scope: !7545)
!7556 = !DILocation(line: 114, column: 12, scope: !7545)
!7557 = !DILocation(line: 114, column: 10, scope: !7545)
!7558 = !DILocation(line: 115, column: 9, scope: !7545)
!7559 = !DILocation(line: 115, column: 19, scope: !7545)
!7560 = !DILocation(line: 115, column: 28, scope: !7545)
!7561 = !DILocation(line: 115, column: 2, scope: !7545)
!7562 = distinct !DISubprogram(name: "calculate_iosize", scope: !3, file: !3, line: 789, type: !7563, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{!172, !172, !172, !172, !172, !172, !172, !172}
!7565 = !DILocalVariable(name: "size", arg: 1, scope: !7562, file: !3, line: 789, type: !172)
!7566 = !DILocation(line: 789, column: 57, scope: !7562)
!7567 = !DILocalVariable(name: "min_size", arg: 2, scope: !7562, file: !3, line: 790, type: !172)
!7568 = !DILocation(line: 790, column: 22, scope: !7562)
!7569 = !DILocalVariable(name: "size1", arg: 3, scope: !7562, file: !3, line: 791, type: !172)
!7570 = !DILocation(line: 791, column: 22, scope: !7562)
!7571 = !DILocalVariable(name: "add_size", arg: 4, scope: !7562, file: !3, line: 792, type: !172)
!7572 = !DILocation(line: 792, column: 22, scope: !7562)
!7573 = !DILocalVariable(name: "children_add_size", arg: 5, scope: !7562, file: !3, line: 793, type: !172)
!7574 = !DILocation(line: 793, column: 22, scope: !7562)
!7575 = !DILocalVariable(name: "old_size", arg: 6, scope: !7562, file: !3, line: 794, type: !172)
!7576 = !DILocation(line: 794, column: 22, scope: !7562)
!7577 = !DILocalVariable(name: "align", arg: 7, scope: !7562, file: !3, line: 795, type: !172)
!7578 = !DILocation(line: 795, column: 22, scope: !7562)
!7579 = !DILocation(line: 797, column: 6, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7562, file: !3, line: 797, column: 6)
!7581 = !DILocation(line: 797, column: 13, scope: !7580)
!7582 = !DILocation(line: 797, column: 11, scope: !7580)
!7583 = !DILocation(line: 797, column: 6, scope: !7562)
!7584 = !DILocation(line: 798, column: 10, scope: !7580)
!7585 = !DILocation(line: 798, column: 8, scope: !7580)
!7586 = !DILocation(line: 798, column: 3, scope: !7580)
!7587 = !DILocation(line: 799, column: 6, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7562, file: !3, line: 799, column: 6)
!7589 = !DILocation(line: 799, column: 15, scope: !7588)
!7590 = !DILocation(line: 799, column: 6, scope: !7562)
!7591 = !DILocation(line: 800, column: 12, scope: !7588)
!7592 = !DILocation(line: 800, column: 3, scope: !7588)
!7593 = !DILocation(line: 808, column: 9, scope: !7562)
!7594 = !DILocation(line: 808, column: 16, scope: !7562)
!7595 = !DILocation(line: 808, column: 14, scope: !7562)
!7596 = !DILocation(line: 808, column: 7, scope: !7562)
!7597 = !DILocation(line: 809, column: 6, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7562, file: !3, line: 809, column: 6)
!7599 = !DILocation(line: 809, column: 13, scope: !7598)
!7600 = !DILocation(line: 809, column: 11, scope: !7598)
!7601 = !DILocation(line: 809, column: 6, scope: !7562)
!7602 = !DILocation(line: 810, column: 10, scope: !7598)
!7603 = !DILocation(line: 810, column: 8, scope: !7598)
!7604 = !DILocation(line: 810, column: 3, scope: !7598)
!7605 = !DILocalVariable(name: "__UNIQUE_ID___x275", scope: !7606, file: !3, line: 812, type: !172)
!7606 = distinct !DILexicalBlock(scope: !7562, file: !3, line: 812, column: 9)
!7607 = !DILocation(line: 812, column: 9, scope: !7606)
!7608 = !DILocalVariable(name: "__UNIQUE_ID___y276", scope: !7606, file: !3, line: 812, type: !172)
!7609 = !DILocation(line: 812, column: 9, scope: !7562)
!7610 = !DILocation(line: 812, column: 7, scope: !7562)
!7611 = !DILocation(line: 813, column: 9, scope: !7562)
!7612 = !DILocation(line: 813, column: 2, scope: !7562)
!7613 = distinct !DISubprogram(name: "res_to_dev_res", scope: !3, file: !3, line: 96, type: !7614, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7614 = !DISubroutineType(types: !7615)
!7615 = !{!4208, !153, !167}
!7616 = !DILocalVariable(name: "head", arg: 1, scope: !7613, file: !3, line: 96, type: !153)
!7617 = !DILocation(line: 96, column: 66, scope: !7613)
!7618 = !DILocalVariable(name: "res", arg: 2, scope: !7613, file: !3, line: 97, type: !167)
!7619 = !DILocation(line: 97, column: 30, scope: !7613)
!7620 = !DILocalVariable(name: "dev_res", scope: !7613, file: !3, line: 99, type: !4208)
!7621 = !DILocation(line: 99, column: 27, scope: !7613)
!7622 = !DILocalVariable(name: "__mptr", scope: !7623, file: !3, line: 101, type: !144)
!7623 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 101, column: 2)
!7624 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 101, column: 2)
!7625 = !DILocation(line: 101, column: 2, scope: !7623)
!7626 = !DILocation(line: 101, column: 2, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 101, column: 2)
!7628 = !DILocation(line: 101, column: 2, scope: !7624)
!7629 = !DILocation(line: 101, column: 2, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 101, column: 2)
!7631 = !DILocation(line: 102, column: 7, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 102, column: 7)
!7633 = distinct !DILexicalBlock(scope: !7630, file: !3, line: 101, column: 43)
!7634 = !DILocation(line: 102, column: 16, scope: !7632)
!7635 = !DILocation(line: 102, column: 23, scope: !7632)
!7636 = !DILocation(line: 102, column: 20, scope: !7632)
!7637 = !DILocation(line: 102, column: 7, scope: !7633)
!7638 = !DILocation(line: 103, column: 11, scope: !7632)
!7639 = !DILocation(line: 103, column: 4, scope: !7632)
!7640 = !DILocation(line: 104, column: 2, scope: !7633)
!7641 = !DILocalVariable(name: "__mptr", scope: !7642, file: !3, line: 101, type: !144)
!7642 = distinct !DILexicalBlock(scope: !7630, file: !3, line: 101, column: 2)
!7643 = !DILocation(line: 101, column: 2, scope: !7642)
!7644 = !DILocation(line: 101, column: 2, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 101, column: 2)
!7646 = distinct !{!7646, !7628, !7647}
!7647 = !DILocation(line: 104, column: 2, scope: !7624)
!7648 = !DILocation(line: 106, column: 2, scope: !7613)
!7649 = !DILocation(line: 107, column: 1, scope: !7613)
!7650 = distinct !DISubprogram(name: "get_res_add_align", scope: !3, file: !3, line: 118, type: !7546, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7651 = !DILocalVariable(name: "head", arg: 1, scope: !7650, file: !3, line: 118, type: !153)
!7652 = !DILocation(line: 118, column: 60, scope: !7650)
!7653 = !DILocalVariable(name: "res", arg: 2, scope: !7650, file: !3, line: 119, type: !167)
!7654 = !DILocation(line: 119, column: 24, scope: !7650)
!7655 = !DILocalVariable(name: "dev_res", scope: !7650, file: !3, line: 121, type: !4208)
!7656 = !DILocation(line: 121, column: 27, scope: !7650)
!7657 = !DILocation(line: 123, column: 27, scope: !7650)
!7658 = !DILocation(line: 123, column: 33, scope: !7650)
!7659 = !DILocation(line: 123, column: 12, scope: !7650)
!7660 = !DILocation(line: 123, column: 10, scope: !7650)
!7661 = !DILocation(line: 124, column: 9, scope: !7650)
!7662 = !DILocation(line: 124, column: 19, scope: !7650)
!7663 = !DILocation(line: 124, column: 28, scope: !7650)
!7664 = !DILocation(line: 124, column: 2, scope: !7650)
!7665 = distinct !DISubprogram(name: "calculate_mem_align", scope: !3, file: !3, line: 948, type: !7666, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7666 = !DISubroutineType(types: !7667)
!7667 = !{!172, !7668, !120}
!7668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!7669 = !DILocalVariable(name: "aligns", arg: 1, scope: !7665, file: !3, line: 948, type: !7668)
!7670 = !DILocation(line: 948, column: 68, scope: !7665)
!7671 = !DILocalVariable(name: "max_order", arg: 2, scope: !7665, file: !3, line: 949, type: !120)
!7672 = !DILocation(line: 949, column: 13, scope: !7665)
!7673 = !DILocalVariable(name: "align", scope: !7665, file: !3, line: 951, type: !172)
!7674 = !DILocation(line: 951, column: 18, scope: !7665)
!7675 = !DILocalVariable(name: "min_align", scope: !7665, file: !3, line: 952, type: !172)
!7676 = !DILocation(line: 952, column: 18, scope: !7665)
!7677 = !DILocalVariable(name: "order", scope: !7665, file: !3, line: 953, type: !120)
!7678 = !DILocation(line: 953, column: 6, scope: !7665)
!7679 = !DILocation(line: 955, column: 13, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 955, column: 2)
!7681 = !DILocation(line: 955, column: 7, scope: !7680)
!7682 = !DILocation(line: 955, column: 18, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7680, file: !3, line: 955, column: 2)
!7684 = !DILocation(line: 955, column: 27, scope: !7683)
!7685 = !DILocation(line: 955, column: 24, scope: !7683)
!7686 = !DILocation(line: 955, column: 2, scope: !7680)
!7687 = !DILocalVariable(name: "align1", scope: !7688, file: !3, line: 956, type: !172)
!7688 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 955, column: 47)
!7689 = !DILocation(line: 956, column: 19, scope: !7688)
!7690 = !DILocation(line: 958, column: 15, scope: !7688)
!7691 = !DILocation(line: 958, column: 21, scope: !7688)
!7692 = !DILocation(line: 958, column: 10, scope: !7688)
!7693 = !DILocation(line: 960, column: 8, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 960, column: 7)
!7695 = !DILocation(line: 960, column: 7, scope: !7688)
!7696 = !DILocation(line: 961, column: 16, scope: !7694)
!7697 = !DILocation(line: 961, column: 14, scope: !7694)
!7698 = !DILocation(line: 961, column: 4, scope: !7694)
!7699 = !DILocation(line: 962, column: 12, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 962, column: 12)
!7701 = !DILocation(line: 962, column: 50, scope: !7700)
!7702 = !DILocation(line: 962, column: 48, scope: !7700)
!7703 = !DILocation(line: 962, column: 12, scope: !7694)
!7704 = !DILocation(line: 963, column: 16, scope: !7700)
!7705 = !DILocation(line: 963, column: 23, scope: !7700)
!7706 = !DILocation(line: 963, column: 14, scope: !7700)
!7707 = !DILocation(line: 963, column: 4, scope: !7700)
!7708 = !DILocation(line: 964, column: 12, scope: !7688)
!7709 = !DILocation(line: 964, column: 19, scope: !7688)
!7710 = !DILocation(line: 964, column: 9, scope: !7688)
!7711 = !DILocation(line: 965, column: 2, scope: !7688)
!7712 = !DILocation(line: 955, column: 43, scope: !7683)
!7713 = !DILocation(line: 955, column: 2, scope: !7683)
!7714 = distinct !{!7714, !7686, !7715}
!7715 = !DILocation(line: 965, column: 2, scope: !7680)
!7716 = !DILocation(line: 967, column: 9, scope: !7665)
!7717 = !DILocation(line: 967, column: 2, scope: !7665)
!7718 = distinct !DISubprogram(name: "calculate_memsize", scope: !3, file: !3, line: 816, type: !7719, scopeLine: 822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7719 = !DISubroutineType(types: !7720)
!7720 = !{!172, !172, !172, !172, !172, !172, !172}
!7721 = !DILocalVariable(name: "size", arg: 1, scope: !7718, file: !3, line: 816, type: !172)
!7722 = !DILocation(line: 816, column: 58, scope: !7718)
!7723 = !DILocalVariable(name: "min_size", arg: 2, scope: !7718, file: !3, line: 817, type: !172)
!7724 = !DILocation(line: 817, column: 23, scope: !7718)
!7725 = !DILocalVariable(name: "add_size", arg: 3, scope: !7718, file: !3, line: 818, type: !172)
!7726 = !DILocation(line: 818, column: 23, scope: !7718)
!7727 = !DILocalVariable(name: "children_add_size", arg: 4, scope: !7718, file: !3, line: 819, type: !172)
!7728 = !DILocation(line: 819, column: 23, scope: !7718)
!7729 = !DILocalVariable(name: "old_size", arg: 5, scope: !7718, file: !3, line: 820, type: !172)
!7730 = !DILocation(line: 820, column: 23, scope: !7718)
!7731 = !DILocalVariable(name: "align", arg: 6, scope: !7718, file: !3, line: 821, type: !172)
!7732 = !DILocation(line: 821, column: 23, scope: !7718)
!7733 = !DILocation(line: 823, column: 6, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 823, column: 6)
!7735 = !DILocation(line: 823, column: 13, scope: !7734)
!7736 = !DILocation(line: 823, column: 11, scope: !7734)
!7737 = !DILocation(line: 823, column: 6, scope: !7718)
!7738 = !DILocation(line: 824, column: 10, scope: !7734)
!7739 = !DILocation(line: 824, column: 8, scope: !7734)
!7740 = !DILocation(line: 824, column: 3, scope: !7734)
!7741 = !DILocation(line: 825, column: 6, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 825, column: 6)
!7743 = !DILocation(line: 825, column: 15, scope: !7742)
!7744 = !DILocation(line: 825, column: 6, scope: !7718)
!7745 = !DILocation(line: 826, column: 12, scope: !7742)
!7746 = !DILocation(line: 826, column: 3, scope: !7742)
!7747 = !DILocation(line: 827, column: 6, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 827, column: 6)
!7749 = !DILocation(line: 827, column: 13, scope: !7748)
!7750 = !DILocation(line: 827, column: 11, scope: !7748)
!7751 = !DILocation(line: 827, column: 6, scope: !7718)
!7752 = !DILocation(line: 828, column: 10, scope: !7748)
!7753 = !DILocation(line: 828, column: 8, scope: !7748)
!7754 = !DILocation(line: 828, column: 3, scope: !7748)
!7755 = !DILocalVariable(name: "__UNIQUE_ID___x277", scope: !7756, file: !3, line: 830, type: !172)
!7756 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 830, column: 9)
!7757 = !DILocation(line: 830, column: 9, scope: !7756)
!7758 = !DILocalVariable(name: "__UNIQUE_ID___y278", scope: !7756, file: !3, line: 830, type: !172)
!7759 = !DILocation(line: 830, column: 9, scope: !7718)
!7760 = !DILocation(line: 830, column: 7, scope: !7718)
!7761 = !DILocation(line: 831, column: 9, scope: !7718)
!7762 = !DILocation(line: 831, column: 2, scope: !7718)
!7763 = distinct !DISubprogram(name: "__dev_sort_resources", scope: !3, file: !3, line: 178, type: !6942, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7764 = !DILocalVariable(name: "dev", arg: 1, scope: !7763, file: !3, line: 178, type: !145)
!7765 = !DILocation(line: 178, column: 50, scope: !7763)
!7766 = !DILocalVariable(name: "head", arg: 2, scope: !7763, file: !3, line: 178, type: !153)
!7767 = !DILocation(line: 178, column: 73, scope: !7763)
!7768 = !DILocalVariable(name: "class", scope: !7763, file: !3, line: 180, type: !880)
!7769 = !DILocation(line: 180, column: 6, scope: !7763)
!7770 = !DILocation(line: 180, column: 14, scope: !7763)
!7771 = !DILocation(line: 180, column: 19, scope: !7763)
!7772 = !DILocation(line: 180, column: 25, scope: !7763)
!7773 = !DILocation(line: 183, column: 6, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 183, column: 6)
!7775 = !DILocation(line: 183, column: 12, scope: !7774)
!7776 = !DILocation(line: 183, column: 37, scope: !7774)
!7777 = !DILocation(line: 183, column: 40, scope: !7774)
!7778 = !DILocation(line: 183, column: 46, scope: !7774)
!7779 = !DILocation(line: 183, column: 6, scope: !7763)
!7780 = !DILocation(line: 184, column: 3, scope: !7774)
!7781 = !DILocation(line: 187, column: 6, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 187, column: 6)
!7783 = !DILocation(line: 187, column: 12, scope: !7782)
!7784 = !DILocation(line: 187, column: 6, scope: !7763)
!7785 = !DILocalVariable(name: "command", scope: !7786, file: !3, line: 188, type: !880)
!7786 = distinct !DILexicalBlock(scope: !7782, file: !3, line: 187, column: 37)
!7787 = !DILocation(line: 188, column: 7, scope: !7786)
!7788 = !DILocation(line: 189, column: 24, scope: !7786)
!7789 = !DILocation(line: 189, column: 3, scope: !7786)
!7790 = !DILocation(line: 190, column: 7, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7786, file: !3, line: 190, column: 7)
!7792 = !DILocation(line: 190, column: 15, scope: !7791)
!7793 = !DILocation(line: 190, column: 7, scope: !7786)
!7794 = !DILocation(line: 191, column: 4, scope: !7791)
!7795 = !DILocation(line: 192, column: 2, scope: !7786)
!7796 = !DILocation(line: 194, column: 22, scope: !7763)
!7797 = !DILocation(line: 194, column: 27, scope: !7763)
!7798 = !DILocation(line: 194, column: 2, scope: !7763)
!7799 = !DILocation(line: 195, column: 1, scope: !7763)
!7800 = distinct !DISubprogram(name: "__assign_resources_sorted", scope: !3, file: !3, line: 345, type: !7801, scopeLine: 348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!7801 = !DISubroutineType(types: !7802)
!7802 = !{null, !153, !153, !153}
!7803 = !DILocalVariable(name: "head", arg: 1, scope: !7800, file: !3, line: 345, type: !153)
!7804 = !DILocation(line: 345, column: 57, scope: !7800)
!7805 = !DILocalVariable(name: "realloc_head", arg: 2, scope: !7800, file: !3, line: 346, type: !153)
!7806 = !DILocation(line: 346, column: 29, scope: !7800)
!7807 = !DILocalVariable(name: "fail_head", arg: 3, scope: !7800, file: !3, line: 347, type: !153)
!7808 = !DILocation(line: 347, column: 29, scope: !7800)
!7809 = !DILocalVariable(name: "save_head", scope: !7800, file: !3, line: 370, type: !149)
!7810 = !DILocation(line: 370, column: 2, scope: !7800)
!7811 = !DILocalVariable(name: "local_fail_head", scope: !7800, file: !3, line: 371, type: !149)
!7812 = !DILocation(line: 371, column: 2, scope: !7800)
!7813 = !DILocalVariable(name: "save_res", scope: !7800, file: !3, line: 372, type: !4208)
!7814 = !DILocation(line: 372, column: 27, scope: !7800)
!7815 = !DILocalVariable(name: "dev_res", scope: !7800, file: !3, line: 373, type: !4208)
!7816 = !DILocation(line: 373, column: 27, scope: !7800)
!7817 = !DILocalVariable(name: "tmp_res", scope: !7800, file: !3, line: 373, type: !4208)
!7818 = !DILocation(line: 373, column: 37, scope: !7800)
!7819 = !DILocalVariable(name: "dev_res2", scope: !7800, file: !3, line: 373, type: !4208)
!7820 = !DILocation(line: 373, column: 47, scope: !7800)
!7821 = !DILocalVariable(name: "fail_type", scope: !7800, file: !3, line: 374, type: !185)
!7822 = !DILocation(line: 374, column: 16, scope: !7800)
!7823 = !DILocalVariable(name: "add_align", scope: !7800, file: !3, line: 375, type: !172)
!7824 = !DILocation(line: 375, column: 18, scope: !7800)
!7825 = !DILocalVariable(name: "align", scope: !7800, file: !3, line: 375, type: !172)
!7826 = !DILocation(line: 375, column: 29, scope: !7800)
!7827 = !DILocation(line: 378, column: 7, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 378, column: 6)
!7829 = !DILocation(line: 378, column: 20, scope: !7828)
!7830 = !DILocation(line: 378, column: 34, scope: !7828)
!7831 = !DILocation(line: 378, column: 23, scope: !7828)
!7832 = !DILocation(line: 378, column: 6, scope: !7800)
!7833 = !DILocation(line: 379, column: 3, scope: !7828)
!7834 = !DILocalVariable(name: "__mptr", scope: !7835, file: !3, line: 382, type: !144)
!7835 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 382, column: 2)
!7836 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 382, column: 2)
!7837 = !DILocation(line: 382, column: 2, scope: !7835)
!7838 = !DILocation(line: 382, column: 2, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 382, column: 2)
!7840 = !DILocation(line: 382, column: 2, scope: !7836)
!7841 = !DILocation(line: 382, column: 2, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 382, column: 2)
!7843 = !DILocation(line: 383, column: 31, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !3, line: 383, column: 7)
!7845 = distinct !DILexicalBlock(scope: !7842, file: !3, line: 382, column: 43)
!7846 = !DILocation(line: 383, column: 40, scope: !7844)
!7847 = !DILocation(line: 383, column: 45, scope: !7844)
!7848 = !DILocation(line: 383, column: 54, scope: !7844)
!7849 = !DILocation(line: 383, column: 7, scope: !7844)
!7850 = !DILocation(line: 383, column: 7, scope: !7845)
!7851 = !DILocation(line: 384, column: 4, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 383, column: 66)
!7853 = !DILocation(line: 385, column: 4, scope: !7852)
!7854 = !DILocation(line: 387, column: 2, scope: !7845)
!7855 = !DILocalVariable(name: "__mptr", scope: !7856, file: !3, line: 382, type: !144)
!7856 = distinct !DILexicalBlock(scope: !7842, file: !3, line: 382, column: 2)
!7857 = !DILocation(line: 382, column: 2, scope: !7856)
!7858 = !DILocation(line: 382, column: 2, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 382, column: 2)
!7860 = distinct !{!7860, !7840, !7861}
!7861 = !DILocation(line: 387, column: 2, scope: !7836)
!7862 = !DILocalVariable(name: "__mptr", scope: !7863, file: !3, line: 390, type: !144)
!7863 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 390, column: 2)
!7864 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 390, column: 2)
!7865 = !DILocation(line: 390, column: 2, scope: !7863)
!7866 = !DILocation(line: 390, column: 2, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7863, file: !3, line: 390, column: 2)
!7868 = !DILocation(line: 390, column: 2, scope: !7864)
!7869 = !DILocalVariable(name: "__mptr", scope: !7870, file: !3, line: 390, type: !144)
!7870 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 390, column: 2)
!7871 = !DILocation(line: 390, column: 2, scope: !7870)
!7872 = !DILocation(line: 390, column: 2, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7870, file: !3, line: 390, column: 2)
!7874 = !DILocation(line: 390, column: 2, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 390, column: 2)
!7876 = !DILocation(line: 391, column: 41, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7875, file: !3, line: 390, column: 57)
!7878 = !DILocation(line: 392, column: 8, scope: !7877)
!7879 = !DILocation(line: 392, column: 17, scope: !7877)
!7880 = !DILocation(line: 391, column: 24, scope: !7877)
!7881 = !DILocation(line: 391, column: 3, scope: !7877)
!7882 = !DILocation(line: 391, column: 12, scope: !7877)
!7883 = !DILocation(line: 391, column: 17, scope: !7877)
!7884 = !DILocation(line: 391, column: 21, scope: !7877)
!7885 = !DILocation(line: 400, column: 9, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 400, column: 7)
!7887 = !DILocation(line: 400, column: 18, scope: !7886)
!7888 = !DILocation(line: 400, column: 23, scope: !7886)
!7889 = !DILocation(line: 400, column: 29, scope: !7886)
!7890 = !DILocation(line: 400, column: 7, scope: !7877)
!7891 = !DILocation(line: 401, column: 4, scope: !7886)
!7892 = !DILocation(line: 403, column: 33, scope: !7877)
!7893 = !DILocation(line: 403, column: 47, scope: !7877)
!7894 = !DILocation(line: 403, column: 56, scope: !7877)
!7895 = !DILocation(line: 403, column: 15, scope: !7877)
!7896 = !DILocation(line: 403, column: 13, scope: !7877)
!7897 = !DILocation(line: 412, column: 7, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 412, column: 7)
!7899 = !DILocation(line: 412, column: 19, scope: !7898)
!7900 = !DILocation(line: 412, column: 28, scope: !7898)
!7901 = !DILocation(line: 412, column: 33, scope: !7898)
!7902 = !DILocation(line: 412, column: 17, scope: !7898)
!7903 = !DILocation(line: 412, column: 7, scope: !7877)
!7904 = !DILocalVariable(name: "r_size", scope: !7905, file: !3, line: 413, type: !172)
!7905 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 412, column: 40)
!7906 = !DILocation(line: 413, column: 20, scope: !7905)
!7907 = !DILocation(line: 413, column: 43, scope: !7905)
!7908 = !DILocation(line: 413, column: 52, scope: !7905)
!7909 = !DILocation(line: 413, column: 29, scope: !7905)
!7910 = !DILocation(line: 415, column: 26, scope: !7905)
!7911 = !DILocation(line: 415, column: 4, scope: !7905)
!7912 = !DILocation(line: 415, column: 13, scope: !7905)
!7913 = !DILocation(line: 415, column: 18, scope: !7905)
!7914 = !DILocation(line: 415, column: 24, scope: !7905)
!7915 = !DILocation(line: 416, column: 24, scope: !7905)
!7916 = !DILocation(line: 416, column: 36, scope: !7905)
!7917 = !DILocation(line: 416, column: 34, scope: !7905)
!7918 = !DILocation(line: 416, column: 43, scope: !7905)
!7919 = !DILocation(line: 416, column: 4, scope: !7905)
!7920 = !DILocation(line: 416, column: 13, scope: !7905)
!7921 = !DILocation(line: 416, column: 18, scope: !7905)
!7922 = !DILocation(line: 416, column: 22, scope: !7905)
!7923 = !DILocalVariable(name: "__mptr", scope: !7924, file: !3, line: 418, type: !144)
!7924 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 418, column: 4)
!7925 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 418, column: 4)
!7926 = !DILocation(line: 418, column: 4, scope: !7924)
!7927 = !DILocation(line: 418, column: 4, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7924, file: !3, line: 418, column: 4)
!7929 = !DILocation(line: 418, column: 4, scope: !7925)
!7930 = !DILocation(line: 418, column: 4, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 418, column: 4)
!7932 = !DILocation(line: 419, column: 36, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 418, column: 46)
!7934 = !DILocation(line: 419, column: 46, scope: !7933)
!7935 = !DILocation(line: 420, column: 15, scope: !7933)
!7936 = !DILocation(line: 420, column: 25, scope: !7933)
!7937 = !DILocation(line: 419, column: 13, scope: !7933)
!7938 = !DILocation(line: 419, column: 11, scope: !7933)
!7939 = !DILocation(line: 421, column: 9, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 421, column: 9)
!7941 = !DILocation(line: 421, column: 21, scope: !7940)
!7942 = !DILocation(line: 421, column: 19, scope: !7940)
!7943 = !DILocation(line: 421, column: 9, scope: !7933)
!7944 = !DILocation(line: 422, column: 22, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 421, column: 28)
!7946 = !DILocation(line: 422, column: 31, scope: !7945)
!7947 = !DILocation(line: 423, column: 15, scope: !7945)
!7948 = !DILocation(line: 423, column: 25, scope: !7945)
!7949 = !DILocation(line: 422, column: 6, scope: !7945)
!7950 = !DILocation(line: 424, column: 6, scope: !7945)
!7951 = !DILocation(line: 426, column: 4, scope: !7933)
!7952 = !DILocalVariable(name: "__mptr", scope: !7953, file: !3, line: 418, type: !144)
!7953 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 418, column: 4)
!7954 = !DILocation(line: 418, column: 4, scope: !7953)
!7955 = !DILocation(line: 418, column: 4, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7953, file: !3, line: 418, column: 4)
!7957 = distinct !{!7957, !7929, !7958}
!7958 = !DILocation(line: 426, column: 4, scope: !7925)
!7959 = !DILocation(line: 427, column: 3, scope: !7905)
!7960 = !DILocation(line: 429, column: 2, scope: !7877)
!7961 = !DILocalVariable(name: "__mptr", scope: !7962, file: !3, line: 390, type: !144)
!7962 = distinct !DILexicalBlock(scope: !7875, file: !3, line: 390, column: 2)
!7963 = !DILocation(line: 390, column: 2, scope: !7962)
!7964 = !DILocation(line: 390, column: 2, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 390, column: 2)
!7966 = distinct !{!7966, !7868, !7967}
!7967 = !DILocation(line: 429, column: 2, scope: !7864)
!7968 = !DILocation(line: 432, column: 36, scope: !7800)
!7969 = !DILocation(line: 432, column: 2, scope: !7800)
!7970 = !DILocation(line: 435, column: 6, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 435, column: 6)
!7972 = !DILocation(line: 435, column: 6, scope: !7800)
!7973 = !DILocalVariable(name: "__mptr", scope: !7974, file: !3, line: 437, type: !144)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 437, column: 3)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !3, line: 437, column: 3)
!7976 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 435, column: 36)
!7977 = !DILocation(line: 437, column: 3, scope: !7974)
!7978 = !DILocation(line: 437, column: 3, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 437, column: 3)
!7980 = !DILocation(line: 437, column: 3, scope: !7975)
!7981 = !DILocation(line: 437, column: 3, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 437, column: 3)
!7983 = !DILocation(line: 438, column: 21, scope: !7982)
!7984 = !DILocation(line: 438, column: 35, scope: !7982)
!7985 = !DILocation(line: 438, column: 44, scope: !7982)
!7986 = !DILocation(line: 438, column: 4, scope: !7982)
!7987 = !DILocalVariable(name: "__mptr", scope: !7988, file: !3, line: 437, type: !144)
!7988 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 437, column: 3)
!7989 = !DILocation(line: 437, column: 3, scope: !7988)
!7990 = !DILocation(line: 437, column: 3, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7988, file: !3, line: 437, column: 3)
!7992 = distinct !{!7992, !7980, !7993}
!7993 = !DILocation(line: 438, column: 47, scope: !7975)
!7994 = !DILocation(line: 439, column: 3, scope: !7976)
!7995 = !DILocation(line: 440, column: 13, scope: !7976)
!7996 = !DILocation(line: 440, column: 3, scope: !7976)
!7997 = !DILocation(line: 441, column: 3, scope: !7976)
!7998 = !DILocation(line: 445, column: 14, scope: !7800)
!7999 = !DILocation(line: 445, column: 12, scope: !7800)
!8000 = !DILocalVariable(name: "__mptr", scope: !8001, file: !3, line: 447, type: !144)
!8001 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 447, column: 2)
!8002 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 447, column: 2)
!8003 = !DILocation(line: 447, column: 2, scope: !8001)
!8004 = !DILocation(line: 447, column: 2, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 447, column: 2)
!8006 = !DILocation(line: 447, column: 2, scope: !8002)
!8007 = !DILocalVariable(name: "__mptr", scope: !8008, file: !3, line: 447, type: !144)
!8008 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 447, column: 2)
!8009 = !DILocation(line: 447, column: 2, scope: !8008)
!8010 = !DILocation(line: 447, column: 2, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 447, column: 2)
!8012 = !DILocation(line: 447, column: 2, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 447, column: 2)
!8014 = !DILocation(line: 448, column: 7, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8013, file: !3, line: 448, column: 7)
!8016 = !DILocation(line: 448, column: 16, scope: !8015)
!8017 = !DILocation(line: 448, column: 21, scope: !8015)
!8018 = !DILocation(line: 448, column: 28, scope: !8015)
!8019 = !DILocation(line: 449, column: 28, scope: !8015)
!8020 = !DILocation(line: 449, column: 39, scope: !8015)
!8021 = !DILocation(line: 449, column: 48, scope: !8015)
!8022 = !DILocation(line: 449, column: 8, scope: !8015)
!8023 = !DILocation(line: 448, column: 7, scope: !8013)
!8024 = !DILocation(line: 451, column: 21, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8015, file: !3, line: 449, column: 54)
!8026 = !DILocation(line: 451, column: 35, scope: !8025)
!8027 = !DILocation(line: 451, column: 44, scope: !8025)
!8028 = !DILocation(line: 451, column: 4, scope: !8025)
!8029 = !DILocation(line: 452, column: 33, scope: !8025)
!8030 = !DILocation(line: 452, column: 42, scope: !8025)
!8031 = !DILocation(line: 452, column: 4, scope: !8025)
!8032 = !DILocation(line: 453, column: 14, scope: !8025)
!8033 = !DILocation(line: 453, column: 23, scope: !8025)
!8034 = !DILocation(line: 453, column: 4, scope: !8025)
!8035 = !DILocation(line: 454, column: 10, scope: !8025)
!8036 = !DILocation(line: 454, column: 4, scope: !8025)
!8037 = !DILocation(line: 455, column: 3, scope: !8025)
!8038 = !DILocation(line: 449, column: 51, scope: !8015)
!8039 = !DILocalVariable(name: "__mptr", scope: !8040, file: !3, line: 447, type: !144)
!8040 = distinct !DILexicalBlock(scope: !8013, file: !3, line: 447, column: 2)
!8041 = !DILocation(line: 447, column: 2, scope: !8040)
!8042 = !DILocation(line: 447, column: 2, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 447, column: 2)
!8044 = distinct !{!8044, !8006, !8045}
!8045 = !DILocation(line: 455, column: 3, scope: !8002)
!8046 = !DILocation(line: 457, column: 2, scope: !7800)
!8047 = !DILocalVariable(name: "__mptr", scope: !8048, file: !3, line: 459, type: !144)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 459, column: 2)
!8049 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 459, column: 2)
!8050 = !DILocation(line: 459, column: 2, scope: !8048)
!8051 = !DILocation(line: 459, column: 2, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 459, column: 2)
!8053 = !DILocation(line: 459, column: 2, scope: !8049)
!8054 = !DILocation(line: 459, column: 2, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 459, column: 2)
!8056 = !DILocation(line: 460, column: 7, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 460, column: 7)
!8058 = !DILocation(line: 460, column: 16, scope: !8057)
!8059 = !DILocation(line: 460, column: 21, scope: !8057)
!8060 = !DILocation(line: 460, column: 7, scope: !8055)
!8061 = !DILocation(line: 461, column: 21, scope: !8057)
!8062 = !DILocation(line: 461, column: 30, scope: !8057)
!8063 = !DILocation(line: 461, column: 4, scope: !8057)
!8064 = !DILocalVariable(name: "__mptr", scope: !8065, file: !3, line: 459, type: !144)
!8065 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 459, column: 2)
!8066 = !DILocation(line: 459, column: 2, scope: !8065)
!8067 = !DILocation(line: 459, column: 2, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 459, column: 2)
!8069 = distinct !{!8069, !8053, !8070}
!8070 = !DILocation(line: 461, column: 33, scope: !8049)
!8071 = !DILocalVariable(name: "__mptr", scope: !8072, file: !3, line: 463, type: !144)
!8072 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 463, column: 2)
!8073 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 463, column: 2)
!8074 = !DILocation(line: 463, column: 2, scope: !8072)
!8075 = !DILocation(line: 463, column: 2, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 463, column: 2)
!8077 = !DILocation(line: 463, column: 2, scope: !8073)
!8078 = !DILocation(line: 463, column: 2, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 463, column: 2)
!8080 = !DILocalVariable(name: "res", scope: !8081, file: !3, line: 464, type: !167)
!8081 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 463, column: 50)
!8082 = !DILocation(line: 464, column: 20, scope: !8081)
!8083 = !DILocation(line: 464, column: 26, scope: !8081)
!8084 = !DILocation(line: 464, column: 36, scope: !8081)
!8085 = !DILocation(line: 466, column: 16, scope: !8081)
!8086 = !DILocation(line: 466, column: 26, scope: !8081)
!8087 = !DILocation(line: 466, column: 3, scope: !8081)
!8088 = !DILocation(line: 466, column: 8, scope: !8081)
!8089 = !DILocation(line: 466, column: 14, scope: !8081)
!8090 = !DILocation(line: 467, column: 14, scope: !8081)
!8091 = !DILocation(line: 467, column: 24, scope: !8081)
!8092 = !DILocation(line: 467, column: 3, scope: !8081)
!8093 = !DILocation(line: 467, column: 8, scope: !8081)
!8094 = !DILocation(line: 467, column: 12, scope: !8081)
!8095 = !DILocation(line: 468, column: 16, scope: !8081)
!8096 = !DILocation(line: 468, column: 26, scope: !8081)
!8097 = !DILocation(line: 468, column: 3, scope: !8081)
!8098 = !DILocation(line: 468, column: 8, scope: !8081)
!8099 = !DILocation(line: 468, column: 14, scope: !8081)
!8100 = !DILocation(line: 469, column: 2, scope: !8081)
!8101 = !DILocalVariable(name: "__mptr", scope: !8102, file: !3, line: 463, type: !144)
!8102 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 463, column: 2)
!8103 = !DILocation(line: 463, column: 2, scope: !8102)
!8104 = !DILocation(line: 463, column: 2, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 463, column: 2)
!8106 = distinct !{!8106, !8077, !8107}
!8107 = !DILocation(line: 469, column: 2, scope: !8073)
!8108 = !DILocation(line: 470, column: 2, scope: !7800)
!8109 = !DILabel(scope: !7800, name: "requested_and_reassign", file: !3, line: 472)
!8110 = !DILocation(line: 472, column: 1, scope: !7800)
!8111 = !DILocation(line: 474, column: 36, scope: !7800)
!8112 = !DILocation(line: 474, column: 42, scope: !7800)
!8113 = !DILocation(line: 474, column: 2, scope: !7800)
!8114 = !DILocation(line: 477, column: 6, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 477, column: 6)
!8116 = !DILocation(line: 477, column: 6, scope: !7800)
!8117 = !DILocation(line: 478, column: 29, scope: !8115)
!8118 = !DILocation(line: 478, column: 43, scope: !8115)
!8119 = !DILocation(line: 478, column: 3, scope: !8115)
!8120 = !DILocation(line: 479, column: 12, scope: !7800)
!8121 = !DILocation(line: 479, column: 2, scope: !7800)
!8122 = !DILocation(line: 480, column: 1, scope: !7800)
!8123 = distinct !DISubprogram(name: "pdev_sort_resources", scope: !3, file: !3, line: 129, type: !6942, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8124 = !DILocalVariable(name: "dev", arg: 1, scope: !8123, file: !3, line: 129, type: !145)
!8125 = !DILocation(line: 129, column: 49, scope: !8123)
!8126 = !DILocalVariable(name: "head", arg: 2, scope: !8123, file: !3, line: 129, type: !153)
!8127 = !DILocation(line: 129, column: 72, scope: !8123)
!8128 = !DILocalVariable(name: "i", scope: !8123, file: !3, line: 131, type: !120)
!8129 = !DILocation(line: 131, column: 6, scope: !8123)
!8130 = !DILocation(line: 133, column: 9, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 133, column: 2)
!8132 = !DILocation(line: 133, column: 7, scope: !8131)
!8133 = !DILocation(line: 133, column: 14, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 133, column: 2)
!8135 = !DILocation(line: 133, column: 16, scope: !8134)
!8136 = !DILocation(line: 133, column: 2, scope: !8131)
!8137 = !DILocalVariable(name: "r", scope: !8138, file: !3, line: 134, type: !167)
!8138 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 133, column: 42)
!8139 = !DILocation(line: 134, column: 20, scope: !8138)
!8140 = !DILocalVariable(name: "dev_res", scope: !8138, file: !3, line: 135, type: !4208)
!8141 = !DILocation(line: 135, column: 28, scope: !8138)
!8142 = !DILocalVariable(name: "tmp", scope: !8138, file: !3, line: 135, type: !4208)
!8143 = !DILocation(line: 135, column: 38, scope: !8138)
!8144 = !DILocalVariable(name: "r_align", scope: !8138, file: !3, line: 136, type: !172)
!8145 = !DILocation(line: 136, column: 19, scope: !8138)
!8146 = !DILocalVariable(name: "n", scope: !8138, file: !3, line: 137, type: !153)
!8147 = !DILocation(line: 137, column: 21, scope: !8138)
!8148 = !DILocation(line: 139, column: 8, scope: !8138)
!8149 = !DILocation(line: 139, column: 13, scope: !8138)
!8150 = !DILocation(line: 139, column: 22, scope: !8138)
!8151 = !DILocation(line: 139, column: 5, scope: !8138)
!8152 = !DILocation(line: 141, column: 7, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 141, column: 7)
!8154 = !DILocation(line: 141, column: 10, scope: !8153)
!8155 = !DILocation(line: 141, column: 16, scope: !8153)
!8156 = !DILocation(line: 141, column: 7, scope: !8138)
!8157 = !DILocation(line: 142, column: 4, scope: !8153)
!8158 = !DILocation(line: 144, column: 9, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 144, column: 7)
!8160 = !DILocation(line: 144, column: 12, scope: !8159)
!8161 = !DILocation(line: 144, column: 8, scope: !8159)
!8162 = !DILocation(line: 144, column: 19, scope: !8159)
!8163 = !DILocation(line: 144, column: 22, scope: !8159)
!8164 = !DILocation(line: 144, column: 25, scope: !8159)
!8165 = !DILocation(line: 144, column: 7, scope: !8138)
!8166 = !DILocation(line: 145, column: 4, scope: !8159)
!8167 = !DILocation(line: 147, column: 36, scope: !8138)
!8168 = !DILocation(line: 147, column: 41, scope: !8138)
!8169 = !DILocation(line: 147, column: 13, scope: !8138)
!8170 = !DILocation(line: 147, column: 11, scope: !8138)
!8171 = !DILocation(line: 148, column: 8, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 148, column: 7)
!8173 = !DILocation(line: 148, column: 7, scope: !8138)
!8174 = !DILocation(line: 149, column: 4, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8172, file: !3, line: 148, column: 17)
!8176 = !DILocation(line: 151, column: 4, scope: !8175)
!8177 = !DILocation(line: 154, column: 9, scope: !8138)
!8178 = !DILocation(line: 154, column: 7, scope: !8138)
!8179 = !DILocation(line: 155, column: 8, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 155, column: 7)
!8181 = !DILocation(line: 155, column: 7, scope: !8138)
!8182 = !DILocation(line: 156, column: 4, scope: !8180)
!8183 = !DILocation(line: 157, column: 14, scope: !8138)
!8184 = !DILocation(line: 157, column: 3, scope: !8138)
!8185 = !DILocation(line: 157, column: 8, scope: !8138)
!8186 = !DILocation(line: 157, column: 12, scope: !8138)
!8187 = !DILocation(line: 158, column: 14, scope: !8138)
!8188 = !DILocation(line: 158, column: 3, scope: !8138)
!8189 = !DILocation(line: 158, column: 8, scope: !8138)
!8190 = !DILocation(line: 158, column: 12, scope: !8138)
!8191 = !DILocation(line: 161, column: 7, scope: !8138)
!8192 = !DILocation(line: 161, column: 5, scope: !8138)
!8193 = !DILocalVariable(name: "__mptr", scope: !8194, file: !3, line: 162, type: !144)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 162, column: 3)
!8195 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 162, column: 3)
!8196 = !DILocation(line: 162, column: 3, scope: !8194)
!8197 = !DILocation(line: 162, column: 3, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 162, column: 3)
!8199 = !DILocation(line: 162, column: 3, scope: !8195)
!8200 = !DILocation(line: 162, column: 3, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 162, column: 3)
!8202 = !DILocalVariable(name: "align", scope: !8203, file: !3, line: 163, type: !172)
!8203 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 162, column: 44)
!8204 = !DILocation(line: 163, column: 20, scope: !8203)
!8205 = !DILocation(line: 165, column: 35, scope: !8203)
!8206 = !DILocation(line: 165, column: 44, scope: !8203)
!8207 = !DILocation(line: 166, column: 9, scope: !8203)
!8208 = !DILocation(line: 166, column: 18, scope: !8203)
!8209 = !DILocation(line: 165, column: 12, scope: !8203)
!8210 = !DILocation(line: 165, column: 10, scope: !8203)
!8211 = !DILocation(line: 168, column: 8, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 168, column: 8)
!8213 = !DILocation(line: 168, column: 18, scope: !8212)
!8214 = !DILocation(line: 168, column: 16, scope: !8212)
!8215 = !DILocation(line: 168, column: 8, scope: !8203)
!8216 = !DILocation(line: 169, column: 10, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 168, column: 25)
!8218 = !DILocation(line: 169, column: 19, scope: !8217)
!8219 = !DILocation(line: 169, column: 7, scope: !8217)
!8220 = !DILocation(line: 170, column: 5, scope: !8217)
!8221 = !DILocation(line: 172, column: 3, scope: !8203)
!8222 = !DILocalVariable(name: "__mptr", scope: !8223, file: !3, line: 162, type: !144)
!8223 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 162, column: 3)
!8224 = !DILocation(line: 162, column: 3, scope: !8223)
!8225 = !DILocation(line: 162, column: 3, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 162, column: 3)
!8227 = distinct !{!8227, !8199, !8228}
!8228 = !DILocation(line: 172, column: 3, scope: !8195)
!8229 = !DILocation(line: 174, column: 18, scope: !8138)
!8230 = !DILocation(line: 174, column: 23, scope: !8138)
!8231 = !DILocation(line: 174, column: 29, scope: !8138)
!8232 = !DILocation(line: 174, column: 3, scope: !8138)
!8233 = !DILocation(line: 175, column: 2, scope: !8138)
!8234 = !DILocation(line: 133, column: 38, scope: !8134)
!8235 = !DILocation(line: 133, column: 2, scope: !8134)
!8236 = distinct !{!8236, !8136, !8237}
!8237 = !DILocation(line: 175, column: 2, scope: !8131)
!8238 = !DILocation(line: 176, column: 1, scope: !8123)
!8239 = distinct !DISubprogram(name: "kzalloc", scope: !132, file: !132, line: 662, type: !8240, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8240 = !DISubroutineType(types: !8241)
!8241 = !{!144, !347, !764}
!8242 = !DILocalVariable(name: "s", arg: 1, scope: !8243, file: !132, line: 445, type: !956)
!8243 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !132, file: !132, line: 445, type: !8244, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8244 = !DISubroutineType(types: !8245)
!8245 = !{!144, !956, !764, !347}
!8246 = !DILocation(line: 445, column: 72, scope: !8243, inlinedAt: !8247)
!8247 = distinct !DILocation(line: 552, column: 10, scope: !8248, inlinedAt: !8251)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !132, line: 540, column: 34)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !132, line: 540, column: 6)
!8250 = distinct !DISubprogram(name: "kmalloc", scope: !132, file: !132, line: 538, type: !8240, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8251 = distinct !DILocation(line: 664, column: 9, scope: !8239)
!8252 = !DILocalVariable(name: "flags", arg: 2, scope: !8243, file: !132, line: 446, type: !764)
!8253 = !DILocation(line: 446, column: 9, scope: !8243, inlinedAt: !8247)
!8254 = !DILocalVariable(name: "size", arg: 3, scope: !8243, file: !132, line: 446, type: !347)
!8255 = !DILocation(line: 446, column: 23, scope: !8243, inlinedAt: !8247)
!8256 = !DILocalVariable(name: "ret", scope: !8243, file: !132, line: 448, type: !144)
!8257 = !DILocation(line: 448, column: 8, scope: !8243, inlinedAt: !8247)
!8258 = !DILocalVariable(name: "flags", arg: 1, scope: !8259, file: !132, line: 318, type: !764)
!8259 = distinct !DISubprogram(name: "kmalloc_type", scope: !132, file: !132, line: 318, type: !8260, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8260 = !DISubroutineType(types: !8261)
!8261 = !{!131, !764}
!8262 = !DILocation(line: 318, column: 67, scope: !8259, inlinedAt: !8263)
!8263 = distinct !DILocation(line: 553, column: 20, scope: !8248, inlinedAt: !8251)
!8264 = !DILocalVariable(name: "size", arg: 1, scope: !8265, file: !132, line: 346, type: !347)
!8265 = distinct !DISubprogram(name: "kmalloc_index", scope: !132, file: !132, line: 346, type: !8266, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{!7, !347}
!8268 = !DILocation(line: 346, column: 58, scope: !8265, inlinedAt: !8269)
!8269 = distinct !DILocation(line: 547, column: 11, scope: !8248, inlinedAt: !8251)
!8270 = !DILocalVariable(name: "size", arg: 1, scope: !8271, file: !132, line: 472, type: !347)
!8271 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !132, file: !132, line: 472, type: !8272, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8272 = !DISubroutineType(types: !8273)
!8273 = !{!144, !347, !764, !7}
!8274 = !DILocation(line: 472, column: 28, scope: !8271, inlinedAt: !8275)
!8275 = distinct !DILocation(line: 481, column: 9, scope: !8276, inlinedAt: !8277)
!8276 = distinct !DISubprogram(name: "kmalloc_large", scope: !132, file: !132, line: 478, type: !8240, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8277 = distinct !DILocation(line: 545, column: 11, scope: !8278, inlinedAt: !8251)
!8278 = distinct !DILexicalBlock(scope: !8248, file: !132, line: 544, column: 7)
!8279 = !DILocalVariable(name: "flags", arg: 2, scope: !8271, file: !132, line: 472, type: !764)
!8280 = !DILocation(line: 472, column: 40, scope: !8271, inlinedAt: !8275)
!8281 = !DILocalVariable(name: "order", arg: 3, scope: !8271, file: !132, line: 472, type: !7)
!8282 = !DILocation(line: 472, column: 60, scope: !8271, inlinedAt: !8275)
!8283 = !DILocalVariable(name: "size", arg: 1, scope: !8276, file: !132, line: 478, type: !347)
!8284 = !DILocation(line: 478, column: 51, scope: !8276, inlinedAt: !8277)
!8285 = !DILocalVariable(name: "flags", arg: 2, scope: !8276, file: !132, line: 478, type: !764)
!8286 = !DILocation(line: 478, column: 63, scope: !8276, inlinedAt: !8277)
!8287 = !DILocalVariable(name: "order", scope: !8276, file: !132, line: 480, type: !7)
!8288 = !DILocation(line: 480, column: 15, scope: !8276, inlinedAt: !8277)
!8289 = !DILocalVariable(name: "size", arg: 1, scope: !8250, file: !132, line: 538, type: !347)
!8290 = !DILocation(line: 538, column: 45, scope: !8250, inlinedAt: !8251)
!8291 = !DILocalVariable(name: "flags", arg: 2, scope: !8250, file: !132, line: 538, type: !764)
!8292 = !DILocation(line: 538, column: 57, scope: !8250, inlinedAt: !8251)
!8293 = !DILocalVariable(name: "index", scope: !8248, file: !132, line: 542, type: !7)
!8294 = !DILocation(line: 542, column: 16, scope: !8248, inlinedAt: !8251)
!8295 = !DILocalVariable(name: "size", arg: 1, scope: !8239, file: !132, line: 662, type: !347)
!8296 = !DILocation(line: 662, column: 36, scope: !8239)
!8297 = !DILocalVariable(name: "flags", arg: 2, scope: !8239, file: !132, line: 662, type: !764)
!8298 = !DILocation(line: 662, column: 48, scope: !8239)
!8299 = !DILocation(line: 664, column: 17, scope: !8239)
!8300 = !DILocation(line: 664, column: 23, scope: !8239)
!8301 = !DILocation(line: 664, column: 29, scope: !8239)
!8302 = !DILocation(line: 540, column: 27, scope: !8249, inlinedAt: !8251)
!8303 = !DILocation(line: 540, column: 6, scope: !8249, inlinedAt: !8251)
!8304 = !DILocation(line: 540, column: 6, scope: !8250, inlinedAt: !8251)
!8305 = !DILocation(line: 544, column: 7, scope: !8278, inlinedAt: !8251)
!8306 = !DILocation(line: 544, column: 12, scope: !8278, inlinedAt: !8251)
!8307 = !DILocation(line: 544, column: 7, scope: !8248, inlinedAt: !8251)
!8308 = !DILocation(line: 545, column: 25, scope: !8278, inlinedAt: !8251)
!8309 = !DILocation(line: 545, column: 31, scope: !8278, inlinedAt: !8251)
!8310 = !DILocation(line: 480, column: 33, scope: !8276, inlinedAt: !8277)
!8311 = !DILocation(line: 480, column: 23, scope: !8276, inlinedAt: !8277)
!8312 = !DILocation(line: 481, column: 29, scope: !8276, inlinedAt: !8277)
!8313 = !DILocation(line: 481, column: 35, scope: !8276, inlinedAt: !8277)
!8314 = !DILocation(line: 481, column: 42, scope: !8276, inlinedAt: !8277)
!8315 = !DILocation(line: 474, column: 23, scope: !8271, inlinedAt: !8275)
!8316 = !DILocation(line: 474, column: 29, scope: !8271, inlinedAt: !8275)
!8317 = !DILocation(line: 474, column: 36, scope: !8271, inlinedAt: !8275)
!8318 = !DILocation(line: 474, column: 9, scope: !8271, inlinedAt: !8275)
!8319 = !DILocation(line: 545, column: 4, scope: !8278, inlinedAt: !8251)
!8320 = !DILocation(line: 547, column: 25, scope: !8248, inlinedAt: !8251)
!8321 = !DILocation(line: 348, column: 7, scope: !8322, inlinedAt: !8269)
!8322 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 348, column: 6)
!8323 = !DILocation(line: 348, column: 6, scope: !8265, inlinedAt: !8269)
!8324 = !DILocation(line: 349, column: 3, scope: !8322, inlinedAt: !8269)
!8325 = !DILocation(line: 351, column: 6, scope: !8326, inlinedAt: !8269)
!8326 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 351, column: 6)
!8327 = !DILocation(line: 351, column: 11, scope: !8326, inlinedAt: !8269)
!8328 = !DILocation(line: 351, column: 6, scope: !8265, inlinedAt: !8269)
!8329 = !DILocation(line: 352, column: 3, scope: !8326, inlinedAt: !8269)
!8330 = !DILocation(line: 354, column: 32, scope: !8331, inlinedAt: !8269)
!8331 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 354, column: 6)
!8332 = !DILocation(line: 354, column: 37, scope: !8331, inlinedAt: !8269)
!8333 = !DILocation(line: 354, column: 42, scope: !8331, inlinedAt: !8269)
!8334 = !DILocation(line: 354, column: 45, scope: !8331, inlinedAt: !8269)
!8335 = !DILocation(line: 354, column: 50, scope: !8331, inlinedAt: !8269)
!8336 = !DILocation(line: 354, column: 6, scope: !8265, inlinedAt: !8269)
!8337 = !DILocation(line: 355, column: 3, scope: !8331, inlinedAt: !8269)
!8338 = !DILocation(line: 356, column: 32, scope: !8339, inlinedAt: !8269)
!8339 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 356, column: 6)
!8340 = !DILocation(line: 356, column: 37, scope: !8339, inlinedAt: !8269)
!8341 = !DILocation(line: 356, column: 43, scope: !8339, inlinedAt: !8269)
!8342 = !DILocation(line: 356, column: 46, scope: !8339, inlinedAt: !8269)
!8343 = !DILocation(line: 356, column: 51, scope: !8339, inlinedAt: !8269)
!8344 = !DILocation(line: 356, column: 6, scope: !8265, inlinedAt: !8269)
!8345 = !DILocation(line: 357, column: 3, scope: !8339, inlinedAt: !8269)
!8346 = !DILocation(line: 358, column: 6, scope: !8347, inlinedAt: !8269)
!8347 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 358, column: 6)
!8348 = !DILocation(line: 358, column: 11, scope: !8347, inlinedAt: !8269)
!8349 = !DILocation(line: 358, column: 6, scope: !8265, inlinedAt: !8269)
!8350 = !DILocation(line: 358, column: 26, scope: !8347, inlinedAt: !8269)
!8351 = !DILocation(line: 359, column: 6, scope: !8352, inlinedAt: !8269)
!8352 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 359, column: 6)
!8353 = !DILocation(line: 359, column: 11, scope: !8352, inlinedAt: !8269)
!8354 = !DILocation(line: 359, column: 6, scope: !8265, inlinedAt: !8269)
!8355 = !DILocation(line: 359, column: 26, scope: !8352, inlinedAt: !8269)
!8356 = !DILocation(line: 360, column: 6, scope: !8357, inlinedAt: !8269)
!8357 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 360, column: 6)
!8358 = !DILocation(line: 360, column: 11, scope: !8357, inlinedAt: !8269)
!8359 = !DILocation(line: 360, column: 6, scope: !8265, inlinedAt: !8269)
!8360 = !DILocation(line: 360, column: 26, scope: !8357, inlinedAt: !8269)
!8361 = !DILocation(line: 361, column: 6, scope: !8362, inlinedAt: !8269)
!8362 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 361, column: 6)
!8363 = !DILocation(line: 361, column: 11, scope: !8362, inlinedAt: !8269)
!8364 = !DILocation(line: 361, column: 6, scope: !8265, inlinedAt: !8269)
!8365 = !DILocation(line: 361, column: 26, scope: !8362, inlinedAt: !8269)
!8366 = !DILocation(line: 362, column: 6, scope: !8367, inlinedAt: !8269)
!8367 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 362, column: 6)
!8368 = !DILocation(line: 362, column: 11, scope: !8367, inlinedAt: !8269)
!8369 = !DILocation(line: 362, column: 6, scope: !8265, inlinedAt: !8269)
!8370 = !DILocation(line: 362, column: 26, scope: !8367, inlinedAt: !8269)
!8371 = !DILocation(line: 363, column: 6, scope: !8372, inlinedAt: !8269)
!8372 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 363, column: 6)
!8373 = !DILocation(line: 363, column: 11, scope: !8372, inlinedAt: !8269)
!8374 = !DILocation(line: 363, column: 6, scope: !8265, inlinedAt: !8269)
!8375 = !DILocation(line: 363, column: 26, scope: !8372, inlinedAt: !8269)
!8376 = !DILocation(line: 364, column: 6, scope: !8377, inlinedAt: !8269)
!8377 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 364, column: 6)
!8378 = !DILocation(line: 364, column: 11, scope: !8377, inlinedAt: !8269)
!8379 = !DILocation(line: 364, column: 6, scope: !8265, inlinedAt: !8269)
!8380 = !DILocation(line: 364, column: 26, scope: !8377, inlinedAt: !8269)
!8381 = !DILocation(line: 365, column: 6, scope: !8382, inlinedAt: !8269)
!8382 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 365, column: 6)
!8383 = !DILocation(line: 365, column: 11, scope: !8382, inlinedAt: !8269)
!8384 = !DILocation(line: 365, column: 6, scope: !8265, inlinedAt: !8269)
!8385 = !DILocation(line: 365, column: 26, scope: !8382, inlinedAt: !8269)
!8386 = !DILocation(line: 366, column: 6, scope: !8387, inlinedAt: !8269)
!8387 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 366, column: 6)
!8388 = !DILocation(line: 366, column: 11, scope: !8387, inlinedAt: !8269)
!8389 = !DILocation(line: 366, column: 6, scope: !8265, inlinedAt: !8269)
!8390 = !DILocation(line: 366, column: 26, scope: !8387, inlinedAt: !8269)
!8391 = !DILocation(line: 367, column: 6, scope: !8392, inlinedAt: !8269)
!8392 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 367, column: 6)
!8393 = !DILocation(line: 367, column: 11, scope: !8392, inlinedAt: !8269)
!8394 = !DILocation(line: 367, column: 6, scope: !8265, inlinedAt: !8269)
!8395 = !DILocation(line: 367, column: 26, scope: !8392, inlinedAt: !8269)
!8396 = !DILocation(line: 368, column: 6, scope: !8397, inlinedAt: !8269)
!8397 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 368, column: 6)
!8398 = !DILocation(line: 368, column: 11, scope: !8397, inlinedAt: !8269)
!8399 = !DILocation(line: 368, column: 6, scope: !8265, inlinedAt: !8269)
!8400 = !DILocation(line: 368, column: 26, scope: !8397, inlinedAt: !8269)
!8401 = !DILocation(line: 369, column: 6, scope: !8402, inlinedAt: !8269)
!8402 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 369, column: 6)
!8403 = !DILocation(line: 369, column: 11, scope: !8402, inlinedAt: !8269)
!8404 = !DILocation(line: 369, column: 6, scope: !8265, inlinedAt: !8269)
!8405 = !DILocation(line: 369, column: 26, scope: !8402, inlinedAt: !8269)
!8406 = !DILocation(line: 370, column: 6, scope: !8407, inlinedAt: !8269)
!8407 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 370, column: 6)
!8408 = !DILocation(line: 370, column: 11, scope: !8407, inlinedAt: !8269)
!8409 = !DILocation(line: 370, column: 6, scope: !8265, inlinedAt: !8269)
!8410 = !DILocation(line: 370, column: 26, scope: !8407, inlinedAt: !8269)
!8411 = !DILocation(line: 371, column: 6, scope: !8412, inlinedAt: !8269)
!8412 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 371, column: 6)
!8413 = !DILocation(line: 371, column: 11, scope: !8412, inlinedAt: !8269)
!8414 = !DILocation(line: 371, column: 6, scope: !8265, inlinedAt: !8269)
!8415 = !DILocation(line: 371, column: 26, scope: !8412, inlinedAt: !8269)
!8416 = !DILocation(line: 372, column: 6, scope: !8417, inlinedAt: !8269)
!8417 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 372, column: 6)
!8418 = !DILocation(line: 372, column: 11, scope: !8417, inlinedAt: !8269)
!8419 = !DILocation(line: 372, column: 6, scope: !8265, inlinedAt: !8269)
!8420 = !DILocation(line: 372, column: 26, scope: !8417, inlinedAt: !8269)
!8421 = !DILocation(line: 373, column: 6, scope: !8422, inlinedAt: !8269)
!8422 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 373, column: 6)
!8423 = !DILocation(line: 373, column: 11, scope: !8422, inlinedAt: !8269)
!8424 = !DILocation(line: 373, column: 6, scope: !8265, inlinedAt: !8269)
!8425 = !DILocation(line: 373, column: 26, scope: !8422, inlinedAt: !8269)
!8426 = !DILocation(line: 374, column: 6, scope: !8427, inlinedAt: !8269)
!8427 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 374, column: 6)
!8428 = !DILocation(line: 374, column: 11, scope: !8427, inlinedAt: !8269)
!8429 = !DILocation(line: 374, column: 6, scope: !8265, inlinedAt: !8269)
!8430 = !DILocation(line: 374, column: 26, scope: !8427, inlinedAt: !8269)
!8431 = !DILocation(line: 375, column: 6, scope: !8432, inlinedAt: !8269)
!8432 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 375, column: 6)
!8433 = !DILocation(line: 375, column: 11, scope: !8432, inlinedAt: !8269)
!8434 = !DILocation(line: 375, column: 6, scope: !8265, inlinedAt: !8269)
!8435 = !DILocation(line: 375, column: 27, scope: !8432, inlinedAt: !8269)
!8436 = !DILocation(line: 376, column: 6, scope: !8437, inlinedAt: !8269)
!8437 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 376, column: 6)
!8438 = !DILocation(line: 376, column: 11, scope: !8437, inlinedAt: !8269)
!8439 = !DILocation(line: 376, column: 6, scope: !8265, inlinedAt: !8269)
!8440 = !DILocation(line: 376, column: 32, scope: !8437, inlinedAt: !8269)
!8441 = !DILocation(line: 377, column: 6, scope: !8442, inlinedAt: !8269)
!8442 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 377, column: 6)
!8443 = !DILocation(line: 377, column: 11, scope: !8442, inlinedAt: !8269)
!8444 = !DILocation(line: 377, column: 6, scope: !8265, inlinedAt: !8269)
!8445 = !DILocation(line: 377, column: 32, scope: !8442, inlinedAt: !8269)
!8446 = !DILocation(line: 378, column: 6, scope: !8447, inlinedAt: !8269)
!8447 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 378, column: 6)
!8448 = !DILocation(line: 378, column: 11, scope: !8447, inlinedAt: !8269)
!8449 = !DILocation(line: 378, column: 6, scope: !8265, inlinedAt: !8269)
!8450 = !DILocation(line: 378, column: 32, scope: !8447, inlinedAt: !8269)
!8451 = !DILocation(line: 379, column: 6, scope: !8452, inlinedAt: !8269)
!8452 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 379, column: 6)
!8453 = !DILocation(line: 379, column: 11, scope: !8452, inlinedAt: !8269)
!8454 = !DILocation(line: 379, column: 6, scope: !8265, inlinedAt: !8269)
!8455 = !DILocation(line: 379, column: 33, scope: !8452, inlinedAt: !8269)
!8456 = !DILocation(line: 380, column: 6, scope: !8457, inlinedAt: !8269)
!8457 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 380, column: 6)
!8458 = !DILocation(line: 380, column: 11, scope: !8457, inlinedAt: !8269)
!8459 = !DILocation(line: 380, column: 6, scope: !8265, inlinedAt: !8269)
!8460 = !DILocation(line: 380, column: 33, scope: !8457, inlinedAt: !8269)
!8461 = !DILocation(line: 381, column: 6, scope: !8462, inlinedAt: !8269)
!8462 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 381, column: 6)
!8463 = !DILocation(line: 381, column: 11, scope: !8462, inlinedAt: !8269)
!8464 = !DILocation(line: 381, column: 6, scope: !8265, inlinedAt: !8269)
!8465 = !DILocation(line: 381, column: 33, scope: !8462, inlinedAt: !8269)
!8466 = !DILocation(line: 382, column: 2, scope: !8467, inlinedAt: !8269)
!8467 = distinct !DILexicalBlock(scope: !8468, file: !132, line: 382, column: 2)
!8468 = distinct !DILexicalBlock(scope: !8265, file: !132, line: 382, column: 2)
!8469 = !{i32 -2143220273, i32 -2143220244, i32 -2143220198, i32 -2143220140, i32 -2143220086, i32 -2143220032, i32 -2143219977, i32 -2143219946}
!8470 = !DILocation(line: 382, column: 2, scope: !8471, inlinedAt: !8269)
!8471 = distinct !DILexicalBlock(scope: !8472, file: !132, line: 382, column: 2)
!8472 = distinct !DILexicalBlock(scope: !8468, file: !132, line: 382, column: 2)
!8473 = !{i32 -2143219503, i32 -2143219496, i32 -2143219442, i32 -2143219411, i32 -2143219381}
!8474 = !DILocation(line: 382, column: 2, scope: !8472, inlinedAt: !8269)
!8475 = !DILocation(line: 386, column: 1, scope: !8265, inlinedAt: !8269)
!8476 = !DILocation(line: 547, column: 9, scope: !8248, inlinedAt: !8251)
!8477 = !DILocation(line: 549, column: 8, scope: !8478, inlinedAt: !8251)
!8478 = distinct !DILexicalBlock(scope: !8248, file: !132, line: 549, column: 7)
!8479 = !DILocation(line: 549, column: 7, scope: !8248, inlinedAt: !8251)
!8480 = !DILocation(line: 550, column: 4, scope: !8478, inlinedAt: !8251)
!8481 = !DILocation(line: 553, column: 33, scope: !8248, inlinedAt: !8251)
!8482 = !DILocation(line: 325, column: 6, scope: !8483, inlinedAt: !8263)
!8483 = distinct !DILexicalBlock(scope: !8259, file: !132, line: 325, column: 6)
!8484 = !DILocation(line: 325, column: 6, scope: !8259, inlinedAt: !8263)
!8485 = !DILocation(line: 326, column: 3, scope: !8483, inlinedAt: !8263)
!8486 = !DILocation(line: 332, column: 9, scope: !8259, inlinedAt: !8263)
!8487 = !DILocation(line: 332, column: 15, scope: !8259, inlinedAt: !8263)
!8488 = !DILocation(line: 332, column: 2, scope: !8259, inlinedAt: !8263)
!8489 = !DILocation(line: 336, column: 1, scope: !8259, inlinedAt: !8263)
!8490 = !DILocation(line: 553, column: 5, scope: !8248, inlinedAt: !8251)
!8491 = !DILocation(line: 553, column: 41, scope: !8248, inlinedAt: !8251)
!8492 = !DILocation(line: 554, column: 5, scope: !8248, inlinedAt: !8251)
!8493 = !DILocation(line: 554, column: 12, scope: !8248, inlinedAt: !8251)
!8494 = !DILocation(line: 448, column: 31, scope: !8243, inlinedAt: !8247)
!8495 = !DILocation(line: 448, column: 34, scope: !8243, inlinedAt: !8247)
!8496 = !DILocation(line: 448, column: 14, scope: !8243, inlinedAt: !8247)
!8497 = !DILocation(line: 450, column: 22, scope: !8243, inlinedAt: !8247)
!8498 = !DILocation(line: 450, column: 25, scope: !8243, inlinedAt: !8247)
!8499 = !DILocation(line: 450, column: 30, scope: !8243, inlinedAt: !8247)
!8500 = !DILocation(line: 450, column: 36, scope: !8243, inlinedAt: !8247)
!8501 = !DILocation(line: 450, column: 8, scope: !8243, inlinedAt: !8247)
!8502 = !DILocation(line: 450, column: 6, scope: !8243, inlinedAt: !8247)
!8503 = !DILocation(line: 451, column: 9, scope: !8243, inlinedAt: !8247)
!8504 = !DILocation(line: 552, column: 3, scope: !8248, inlinedAt: !8251)
!8505 = !DILocation(line: 557, column: 19, scope: !8250, inlinedAt: !8251)
!8506 = !DILocation(line: 557, column: 25, scope: !8250, inlinedAt: !8251)
!8507 = !DILocation(line: 557, column: 9, scope: !8250, inlinedAt: !8251)
!8508 = !DILocation(line: 557, column: 2, scope: !8250, inlinedAt: !8251)
!8509 = !DILocation(line: 558, column: 1, scope: !8250, inlinedAt: !8251)
!8510 = !DILocation(line: 664, column: 2, scope: !8239)
!8511 = distinct !DISubprogram(name: "list_add_tail", scope: !6550, file: !6550, line: 98, type: !8512, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8512 = !DISubroutineType(types: !8513)
!8513 = !{null, !153, !153}
!8514 = !DILocalVariable(name: "new", arg: 1, scope: !8511, file: !6550, line: 98, type: !153)
!8515 = !DILocation(line: 98, column: 52, scope: !8511)
!8516 = !DILocalVariable(name: "head", arg: 2, scope: !8511, file: !6550, line: 98, type: !153)
!8517 = !DILocation(line: 98, column: 75, scope: !8511)
!8518 = !DILocation(line: 100, column: 13, scope: !8511)
!8519 = !DILocation(line: 100, column: 18, scope: !8511)
!8520 = !DILocation(line: 100, column: 24, scope: !8511)
!8521 = !DILocation(line: 100, column: 30, scope: !8511)
!8522 = !DILocation(line: 100, column: 2, scope: !8511)
!8523 = !DILocation(line: 101, column: 1, scope: !8511)
!8524 = distinct !DISubprogram(name: "get_order", scope: !8525, file: !8525, line: 29, type: !8526, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8525 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!8526 = !DISubroutineType(types: !8527)
!8527 = !{!120, !185}
!8528 = !DILocalVariable(name: "x", arg: 1, scope: !8529, file: !5640, line: 366, type: !176)
!8529 = distinct !DISubprogram(name: "fls64", scope: !5640, file: !5640, line: 366, type: !8530, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8530 = !DISubroutineType(types: !8531)
!8531 = !{!120, !176}
!8532 = !DILocation(line: 366, column: 40, scope: !8529, inlinedAt: !8533)
!8533 = distinct !DILocation(line: 46, column: 9, scope: !8524)
!8534 = !DILocalVariable(name: "bitpos", scope: !8529, file: !5640, line: 368, type: !120)
!8535 = !DILocation(line: 368, column: 6, scope: !8529, inlinedAt: !8533)
!8536 = !DILocalVariable(name: "size", arg: 1, scope: !8524, file: !8525, line: 29, type: !185)
!8537 = !DILocation(line: 29, column: 63, scope: !8524)
!8538 = !DILocation(line: 31, column: 27, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8524, file: !8525, line: 31, column: 6)
!8540 = !DILocation(line: 31, column: 6, scope: !8539)
!8541 = !DILocation(line: 31, column: 6, scope: !8524)
!8542 = !DILocation(line: 32, column: 8, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !8525, line: 32, column: 7)
!8544 = distinct !DILexicalBlock(scope: !8539, file: !8525, line: 31, column: 34)
!8545 = !DILocation(line: 32, column: 7, scope: !8544)
!8546 = !DILocation(line: 33, column: 4, scope: !8543)
!8547 = !DILocation(line: 35, column: 7, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8544, file: !8525, line: 35, column: 7)
!8549 = !DILocation(line: 35, column: 12, scope: !8548)
!8550 = !DILocation(line: 35, column: 7, scope: !8544)
!8551 = !DILocation(line: 36, column: 4, scope: !8548)
!8552 = !DILocation(line: 38, column: 10, scope: !8544)
!8553 = !DILocation(line: 38, column: 28, scope: !8544)
!8554 = !DILocation(line: 38, column: 41, scope: !8544)
!8555 = !DILocation(line: 38, column: 3, scope: !8544)
!8556 = !DILocation(line: 41, column: 6, scope: !8524)
!8557 = !DILocation(line: 42, column: 7, scope: !8524)
!8558 = !DILocation(line: 46, column: 15, scope: !8524)
!8559 = !DILocation(line: 374, column: 2, scope: !8529, inlinedAt: !8533)
!8560 = !DILocation(line: 376, column: 14, scope: !8529, inlinedAt: !8533)
!8561 = !{i32 309869}
!8562 = !DILocation(line: 377, column: 9, scope: !8529, inlinedAt: !8533)
!8563 = !DILocation(line: 377, column: 16, scope: !8529, inlinedAt: !8533)
!8564 = !DILocation(line: 46, column: 2, scope: !8524)
!8565 = !DILocation(line: 48, column: 1, scope: !8524)
!8566 = distinct !DISubprogram(name: "__ilog2_u64", scope: !8567, file: !8567, line: 30, type: !8568, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8567 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!8568 = !DISubroutineType(types: !8569)
!8569 = !{!120, !174}
!8570 = !DILocation(line: 366, column: 40, scope: !8529, inlinedAt: !8571)
!8571 = distinct !DILocation(line: 32, column: 9, scope: !8566)
!8572 = !DILocation(line: 368, column: 6, scope: !8529, inlinedAt: !8571)
!8573 = !DILocalVariable(name: "n", arg: 1, scope: !8566, file: !8567, line: 30, type: !174)
!8574 = !DILocation(line: 30, column: 21, scope: !8566)
!8575 = !DILocation(line: 32, column: 15, scope: !8566)
!8576 = !DILocation(line: 374, column: 2, scope: !8529, inlinedAt: !8571)
!8577 = !DILocation(line: 376, column: 14, scope: !8529, inlinedAt: !8571)
!8578 = !DILocation(line: 377, column: 9, scope: !8529, inlinedAt: !8571)
!8579 = !DILocation(line: 377, column: 16, scope: !8529, inlinedAt: !8571)
!8580 = !DILocation(line: 32, column: 18, scope: !8566)
!8581 = !DILocation(line: 32, column: 2, scope: !8566)
!8582 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8583, file: !8583, line: 137, type: !8584, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8583 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8584 = !DISubroutineType(types: !8585)
!8585 = !{!144, !956, !2146, !347, !764}
!8586 = !DILocalVariable(name: "s", arg: 1, scope: !8582, file: !8583, line: 137, type: !956)
!8587 = !DILocation(line: 137, column: 54, scope: !8582)
!8588 = !DILocalVariable(name: "object", arg: 2, scope: !8582, file: !8583, line: 137, type: !2146)
!8589 = !DILocation(line: 137, column: 69, scope: !8582)
!8590 = !DILocalVariable(name: "size", arg: 3, scope: !8582, file: !8583, line: 138, type: !347)
!8591 = !DILocation(line: 138, column: 12, scope: !8582)
!8592 = !DILocalVariable(name: "flags", arg: 4, scope: !8582, file: !8583, line: 138, type: !764)
!8593 = !DILocation(line: 138, column: 24, scope: !8582)
!8594 = !DILocation(line: 140, column: 17, scope: !8582)
!8595 = !DILocation(line: 140, column: 2, scope: !8582)
!8596 = distinct !DISubprogram(name: "__list_add", scope: !6550, file: !6550, line: 63, type: !7801, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8597 = !DILocalVariable(name: "new", arg: 1, scope: !8596, file: !6550, line: 63, type: !153)
!8598 = !DILocation(line: 63, column: 49, scope: !8596)
!8599 = !DILocalVariable(name: "prev", arg: 2, scope: !8596, file: !6550, line: 64, type: !153)
!8600 = !DILocation(line: 64, column: 28, scope: !8596)
!8601 = !DILocalVariable(name: "next", arg: 3, scope: !8596, file: !6550, line: 65, type: !153)
!8602 = !DILocation(line: 65, column: 28, scope: !8596)
!8603 = !DILocation(line: 67, column: 24, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8596, file: !6550, line: 67, column: 6)
!8605 = !DILocation(line: 67, column: 29, scope: !8604)
!8606 = !DILocation(line: 67, column: 35, scope: !8604)
!8607 = !DILocation(line: 67, column: 7, scope: !8604)
!8608 = !DILocation(line: 67, column: 6, scope: !8596)
!8609 = !DILocation(line: 68, column: 3, scope: !8604)
!8610 = !DILocation(line: 70, column: 15, scope: !8596)
!8611 = !DILocation(line: 70, column: 2, scope: !8596)
!8612 = !DILocation(line: 70, column: 8, scope: !8596)
!8613 = !DILocation(line: 70, column: 13, scope: !8596)
!8614 = !DILocation(line: 71, column: 14, scope: !8596)
!8615 = !DILocation(line: 71, column: 2, scope: !8596)
!8616 = !DILocation(line: 71, column: 7, scope: !8596)
!8617 = !DILocation(line: 71, column: 12, scope: !8596)
!8618 = !DILocation(line: 72, column: 14, scope: !8596)
!8619 = !DILocation(line: 72, column: 2, scope: !8596)
!8620 = !DILocation(line: 72, column: 7, scope: !8596)
!8621 = !DILocation(line: 72, column: 12, scope: !8596)
!8622 = !DILocation(line: 73, column: 2, scope: !8596)
!8623 = !DILocation(line: 73, column: 2, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8596, file: !6550, line: 73, column: 2)
!8625 = !DILocation(line: 73, column: 2, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8624, file: !6550, line: 73, column: 2)
!8627 = !DILocation(line: 73, column: 2, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8624, file: !6550, line: 73, column: 2)
!8629 = !DILocation(line: 74, column: 1, scope: !8596)
!8630 = distinct !DISubprogram(name: "__list_add_valid", scope: !6550, file: !6550, line: 45, type: !8631, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8631 = !DISubroutineType(types: !8632)
!8632 = !{!507, !153, !153, !153}
!8633 = !DILocalVariable(name: "new", arg: 1, scope: !8630, file: !6550, line: 45, type: !153)
!8634 = !DILocation(line: 45, column: 55, scope: !8630)
!8635 = !DILocalVariable(name: "prev", arg: 2, scope: !8630, file: !6550, line: 46, type: !153)
!8636 = !DILocation(line: 46, column: 23, scope: !8630)
!8637 = !DILocalVariable(name: "next", arg: 3, scope: !8630, file: !6550, line: 47, type: !153)
!8638 = !DILocation(line: 47, column: 23, scope: !8630)
!8639 = !DILocation(line: 49, column: 2, scope: !8630)
!8640 = distinct !DISubprogram(name: "list_move_tail", scope: !6550, file: !6550, line: 224, type: !8512, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8641 = !DILocalVariable(name: "list", arg: 1, scope: !8640, file: !6550, line: 224, type: !153)
!8642 = !DILocation(line: 224, column: 53, scope: !8640)
!8643 = !DILocalVariable(name: "head", arg: 2, scope: !8640, file: !6550, line: 225, type: !153)
!8644 = !DILocation(line: 225, column: 25, scope: !8640)
!8645 = !DILocation(line: 227, column: 19, scope: !8640)
!8646 = !DILocation(line: 227, column: 2, scope: !8640)
!8647 = !DILocation(line: 228, column: 16, scope: !8640)
!8648 = !DILocation(line: 228, column: 22, scope: !8640)
!8649 = !DILocation(line: 228, column: 2, scope: !8640)
!8650 = !DILocation(line: 229, column: 1, scope: !8640)
!8651 = distinct !DISubprogram(name: "assign_requested_resources_sorted", scope: !3, file: !3, line: 275, type: !8512, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8652 = !DILocalVariable(name: "head", arg: 1, scope: !8651, file: !3, line: 275, type: !153)
!8653 = !DILocation(line: 275, column: 65, scope: !8651)
!8654 = !DILocalVariable(name: "fail_head", arg: 2, scope: !8651, file: !3, line: 276, type: !153)
!8655 = !DILocation(line: 276, column: 24, scope: !8651)
!8656 = !DILocalVariable(name: "res", scope: !8651, file: !3, line: 278, type: !167)
!8657 = !DILocation(line: 278, column: 19, scope: !8651)
!8658 = !DILocalVariable(name: "dev_res", scope: !8651, file: !3, line: 279, type: !4208)
!8659 = !DILocation(line: 279, column: 27, scope: !8651)
!8660 = !DILocalVariable(name: "idx", scope: !8651, file: !3, line: 280, type: !120)
!8661 = !DILocation(line: 280, column: 6, scope: !8651)
!8662 = !DILocalVariable(name: "__mptr", scope: !8663, file: !3, line: 282, type: !144)
!8663 = distinct !DILexicalBlock(scope: !8664, file: !3, line: 282, column: 2)
!8664 = distinct !DILexicalBlock(scope: !8651, file: !3, line: 282, column: 2)
!8665 = !DILocation(line: 282, column: 2, scope: !8663)
!8666 = !DILocation(line: 282, column: 2, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8663, file: !3, line: 282, column: 2)
!8668 = !DILocation(line: 282, column: 2, scope: !8664)
!8669 = !DILocation(line: 282, column: 2, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8664, file: !3, line: 282, column: 2)
!8671 = !DILocation(line: 283, column: 9, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 282, column: 43)
!8673 = !DILocation(line: 283, column: 18, scope: !8672)
!8674 = !DILocation(line: 283, column: 7, scope: !8672)
!8675 = !DILocation(line: 284, column: 9, scope: !8672)
!8676 = !DILocation(line: 284, column: 16, scope: !8672)
!8677 = !DILocation(line: 284, column: 25, scope: !8672)
!8678 = !DILocation(line: 284, column: 30, scope: !8672)
!8679 = !DILocation(line: 284, column: 13, scope: !8672)
!8680 = !DILocation(line: 284, column: 7, scope: !8672)
!8681 = !DILocation(line: 285, column: 21, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 285, column: 7)
!8683 = !DILocation(line: 285, column: 7, scope: !8682)
!8684 = !DILocation(line: 285, column: 26, scope: !8682)
!8685 = !DILocation(line: 286, column: 27, scope: !8682)
!8686 = !DILocation(line: 286, column: 36, scope: !8682)
!8687 = !DILocation(line: 286, column: 41, scope: !8682)
!8688 = !DILocation(line: 286, column: 7, scope: !8682)
!8689 = !DILocation(line: 285, column: 7, scope: !8672)
!8690 = !DILocation(line: 287, column: 8, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8692, file: !3, line: 287, column: 8)
!8692 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 286, column: 47)
!8693 = !DILocation(line: 287, column: 8, scope: !8692)
!8694 = !DILocation(line: 293, column: 12, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 293, column: 9)
!8696 = distinct !DILexicalBlock(scope: !8691, file: !3, line: 287, column: 19)
!8697 = !DILocation(line: 293, column: 16, scope: !8695)
!8698 = !DILocation(line: 293, column: 37, scope: !8695)
!8699 = !DILocation(line: 294, column: 14, scope: !8695)
!8700 = !DILocation(line: 294, column: 19, scope: !8695)
!8701 = !DILocation(line: 294, column: 25, scope: !8695)
!8702 = !DILocation(line: 293, column: 9, scope: !8696)
!8703 = !DILocation(line: 295, column: 18, scope: !8695)
!8704 = !DILocation(line: 296, column: 11, scope: !8695)
!8705 = !DILocation(line: 296, column: 20, scope: !8695)
!8706 = !DILocation(line: 296, column: 25, scope: !8695)
!8707 = !DILocation(line: 295, column: 6, scope: !8695)
!8708 = !DILocation(line: 299, column: 4, scope: !8696)
!8709 = !DILocation(line: 300, column: 19, scope: !8692)
!8710 = !DILocation(line: 300, column: 4, scope: !8692)
!8711 = !DILocation(line: 301, column: 3, scope: !8692)
!8712 = !DILocation(line: 302, column: 2, scope: !8672)
!8713 = !DILocalVariable(name: "__mptr", scope: !8714, file: !3, line: 282, type: !144)
!8714 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 282, column: 2)
!8715 = !DILocation(line: 282, column: 2, scope: !8714)
!8716 = !DILocation(line: 282, column: 2, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 282, column: 2)
!8718 = distinct !{!8718, !8668, !8719}
!8719 = !DILocation(line: 302, column: 2, scope: !8664)
!8720 = !DILocation(line: 303, column: 1, scope: !8651)
!8721 = distinct !DISubprogram(name: "remove_from_list", scope: !3, file: !3, line: 83, type: !8722, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8722 = !DISubroutineType(types: !8723)
!8723 = !{null, !153, !167}
!8724 = !DILocalVariable(name: "head", arg: 1, scope: !8721, file: !3, line: 83, type: !153)
!8725 = !DILocation(line: 83, column: 48, scope: !8721)
!8726 = !DILocalVariable(name: "res", arg: 2, scope: !8721, file: !3, line: 83, type: !167)
!8727 = !DILocation(line: 83, column: 71, scope: !8721)
!8728 = !DILocalVariable(name: "dev_res", scope: !8721, file: !3, line: 85, type: !4208)
!8729 = !DILocation(line: 85, column: 27, scope: !8721)
!8730 = !DILocalVariable(name: "tmp", scope: !8721, file: !3, line: 85, type: !4208)
!8731 = !DILocation(line: 85, column: 37, scope: !8721)
!8732 = !DILocalVariable(name: "__mptr", scope: !8733, file: !3, line: 87, type: !144)
!8733 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 87, column: 2)
!8734 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 87, column: 2)
!8735 = !DILocation(line: 87, column: 2, scope: !8733)
!8736 = !DILocation(line: 87, column: 2, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 87, column: 2)
!8738 = !DILocation(line: 87, column: 2, scope: !8734)
!8739 = !DILocalVariable(name: "__mptr", scope: !8740, file: !3, line: 87, type: !144)
!8740 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 87, column: 2)
!8741 = !DILocation(line: 87, column: 2, scope: !8740)
!8742 = !DILocation(line: 87, column: 2, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8740, file: !3, line: 87, column: 2)
!8744 = !DILocation(line: 87, column: 2, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 87, column: 2)
!8746 = !DILocation(line: 88, column: 7, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 88, column: 7)
!8748 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 87, column: 53)
!8749 = !DILocation(line: 88, column: 16, scope: !8747)
!8750 = !DILocation(line: 88, column: 23, scope: !8747)
!8751 = !DILocation(line: 88, column: 20, scope: !8747)
!8752 = !DILocation(line: 88, column: 7, scope: !8748)
!8753 = !DILocation(line: 89, column: 14, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 88, column: 28)
!8755 = !DILocation(line: 89, column: 23, scope: !8754)
!8756 = !DILocation(line: 89, column: 4, scope: !8754)
!8757 = !DILocation(line: 90, column: 10, scope: !8754)
!8758 = !DILocation(line: 90, column: 4, scope: !8754)
!8759 = !DILocation(line: 91, column: 4, scope: !8754)
!8760 = !DILocation(line: 93, column: 2, scope: !8748)
!8761 = !DILocalVariable(name: "__mptr", scope: !8762, file: !3, line: 87, type: !144)
!8762 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 87, column: 2)
!8763 = !DILocation(line: 87, column: 2, scope: !8762)
!8764 = !DILocation(line: 87, column: 2, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8762, file: !3, line: 87, column: 2)
!8766 = distinct !{!8766, !8738, !8767}
!8767 = !DILocation(line: 93, column: 2, scope: !8734)
!8768 = !DILocation(line: 94, column: 1, scope: !8721)
!8769 = distinct !DISubprogram(name: "pci_fail_res_type_mask", scope: !3, file: !3, line: 305, type: !8770, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8770 = !DISubroutineType(types: !8771)
!8771 = !{!185, !153}
!8772 = !DILocalVariable(name: "fail_head", arg: 1, scope: !8769, file: !3, line: 305, type: !153)
!8773 = !DILocation(line: 305, column: 63, scope: !8769)
!8774 = !DILocalVariable(name: "fail_res", scope: !8769, file: !3, line: 307, type: !4208)
!8775 = !DILocation(line: 307, column: 27, scope: !8769)
!8776 = !DILocalVariable(name: "mask", scope: !8769, file: !3, line: 308, type: !185)
!8777 = !DILocation(line: 308, column: 16, scope: !8769)
!8778 = !DILocalVariable(name: "__mptr", scope: !8779, file: !3, line: 311, type: !144)
!8779 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 311, column: 2)
!8780 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 311, column: 2)
!8781 = !DILocation(line: 311, column: 2, scope: !8779)
!8782 = !DILocation(line: 311, column: 2, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 311, column: 2)
!8784 = !DILocation(line: 311, column: 2, scope: !8780)
!8785 = !DILocation(line: 311, column: 2, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 311, column: 2)
!8787 = !DILocation(line: 312, column: 11, scope: !8786)
!8788 = !DILocation(line: 312, column: 21, scope: !8786)
!8789 = !DILocation(line: 312, column: 8, scope: !8786)
!8790 = !DILocation(line: 312, column: 3, scope: !8786)
!8791 = !DILocalVariable(name: "__mptr", scope: !8792, file: !3, line: 311, type: !144)
!8792 = distinct !DILexicalBlock(scope: !8786, file: !3, line: 311, column: 2)
!8793 = !DILocation(line: 311, column: 2, scope: !8792)
!8794 = !DILocation(line: 311, column: 2, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 311, column: 2)
!8796 = distinct !{!8796, !8784, !8797}
!8797 = !DILocation(line: 312, column: 21, scope: !8780)
!8798 = !DILocation(line: 319, column: 9, scope: !8769)
!8799 = !DILocation(line: 319, column: 14, scope: !8769)
!8800 = !DILocation(line: 319, column: 2, scope: !8769)
!8801 = distinct !DISubprogram(name: "pci_need_to_release", scope: !3, file: !3, line: 322, type: !8802, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8802 = !DISubroutineType(types: !8803)
!8803 = !{!507, !185, !167}
!8804 = !DILocalVariable(name: "mask", arg: 1, scope: !8801, file: !3, line: 322, type: !185)
!8805 = !DILocation(line: 322, column: 47, scope: !8801)
!8806 = !DILocalVariable(name: "res", arg: 2, scope: !8801, file: !3, line: 322, type: !167)
!8807 = !DILocation(line: 322, column: 70, scope: !8801)
!8808 = !DILocation(line: 324, column: 6, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 324, column: 6)
!8810 = !DILocation(line: 324, column: 11, scope: !8809)
!8811 = !DILocation(line: 324, column: 17, scope: !8809)
!8812 = !DILocation(line: 324, column: 6, scope: !8801)
!8813 = !DILocation(line: 325, column: 13, scope: !8809)
!8814 = !DILocation(line: 325, column: 18, scope: !8809)
!8815 = !DILocation(line: 325, column: 11, scope: !8809)
!8816 = !DILocation(line: 325, column: 10, scope: !8809)
!8817 = !DILocation(line: 325, column: 3, scope: !8809)
!8818 = !DILocation(line: 328, column: 6, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 328, column: 6)
!8820 = !DILocation(line: 328, column: 11, scope: !8819)
!8821 = !DILocation(line: 328, column: 17, scope: !8819)
!8822 = !DILocation(line: 328, column: 6, scope: !8801)
!8823 = !DILocation(line: 329, column: 7, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8825, file: !3, line: 329, column: 7)
!8825 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 328, column: 40)
!8826 = !DILocation(line: 329, column: 12, scope: !8824)
!8827 = !DILocation(line: 329, column: 7, scope: !8825)
!8828 = !DILocation(line: 330, column: 4, scope: !8824)
!8829 = !DILocation(line: 332, column: 13, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 332, column: 12)
!8831 = !DILocation(line: 332, column: 18, scope: !8830)
!8832 = !DILocation(line: 332, column: 36, scope: !8830)
!8833 = !DILocation(line: 333, column: 7, scope: !8830)
!8834 = !DILocation(line: 333, column: 12, scope: !8830)
!8835 = !DILocation(line: 333, column: 20, scope: !8830)
!8836 = !DILocation(line: 333, column: 26, scope: !8830)
!8837 = !DILocation(line: 332, column: 12, scope: !8824)
!8838 = !DILocation(line: 334, column: 4, scope: !8830)
!8839 = !DILocation(line: 336, column: 4, scope: !8830)
!8840 = !DILocation(line: 339, column: 6, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 339, column: 6)
!8842 = !DILocation(line: 339, column: 11, scope: !8841)
!8843 = !DILocation(line: 339, column: 17, scope: !8841)
!8844 = !DILocation(line: 339, column: 6, scope: !8801)
!8845 = !DILocation(line: 340, column: 13, scope: !8841)
!8846 = !DILocation(line: 340, column: 18, scope: !8841)
!8847 = !DILocation(line: 340, column: 11, scope: !8841)
!8848 = !DILocation(line: 340, column: 10, scope: !8841)
!8849 = !DILocation(line: 340, column: 3, scope: !8841)
!8850 = !DILocation(line: 342, column: 2, scope: !8801)
!8851 = !DILocation(line: 343, column: 1, scope: !8801)
!8852 = distinct !DISubprogram(name: "list_del", scope: !6550, file: !6550, line: 144, type: !6565, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8853 = !DILocalVariable(name: "entry", arg: 1, scope: !8852, file: !6550, line: 144, type: !153)
!8854 = !DILocation(line: 144, column: 47, scope: !8852)
!8855 = !DILocation(line: 146, column: 19, scope: !8852)
!8856 = !DILocation(line: 146, column: 2, scope: !8852)
!8857 = !DILocation(line: 147, column: 2, scope: !8852)
!8858 = !DILocation(line: 147, column: 9, scope: !8852)
!8859 = !DILocation(line: 147, column: 14, scope: !8852)
!8860 = !DILocation(line: 148, column: 2, scope: !8852)
!8861 = !DILocation(line: 148, column: 9, scope: !8852)
!8862 = !DILocation(line: 148, column: 14, scope: !8852)
!8863 = !DILocation(line: 149, column: 1, scope: !8852)
!8864 = distinct !DISubprogram(name: "reassign_resources_sorted", scope: !3, file: !3, line: 215, type: !8512, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!8865 = !DILocalVariable(name: "realloc_head", arg: 1, scope: !8864, file: !3, line: 215, type: !153)
!8866 = !DILocation(line: 215, column: 57, scope: !8864)
!8867 = !DILocalVariable(name: "head", arg: 2, scope: !8864, file: !3, line: 216, type: !153)
!8868 = !DILocation(line: 216, column: 29, scope: !8864)
!8869 = !DILocalVariable(name: "res", scope: !8864, file: !3, line: 218, type: !167)
!8870 = !DILocation(line: 218, column: 19, scope: !8864)
!8871 = !DILocalVariable(name: "add_res", scope: !8864, file: !3, line: 219, type: !4208)
!8872 = !DILocation(line: 219, column: 27, scope: !8864)
!8873 = !DILocalVariable(name: "tmp", scope: !8864, file: !3, line: 219, type: !4208)
!8874 = !DILocation(line: 219, column: 37, scope: !8864)
!8875 = !DILocalVariable(name: "dev_res", scope: !8864, file: !3, line: 220, type: !4208)
!8876 = !DILocation(line: 220, column: 27, scope: !8864)
!8877 = !DILocalVariable(name: "add_size", scope: !8864, file: !3, line: 221, type: !172)
!8878 = !DILocation(line: 221, column: 18, scope: !8864)
!8879 = !DILocalVariable(name: "align", scope: !8864, file: !3, line: 221, type: !172)
!8880 = !DILocation(line: 221, column: 28, scope: !8864)
!8881 = !DILocalVariable(name: "idx", scope: !8864, file: !3, line: 222, type: !120)
!8882 = !DILocation(line: 222, column: 6, scope: !8864)
!8883 = !DILocalVariable(name: "__mptr", scope: !8884, file: !3, line: 224, type: !144)
!8884 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 224, column: 2)
!8885 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 224, column: 2)
!8886 = !DILocation(line: 224, column: 2, scope: !8884)
!8887 = !DILocation(line: 224, column: 2, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8884, file: !3, line: 224, column: 2)
!8889 = !DILocation(line: 224, column: 2, scope: !8885)
!8890 = !DILocalVariable(name: "__mptr", scope: !8891, file: !3, line: 224, type: !144)
!8891 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 224, column: 2)
!8892 = !DILocation(line: 224, column: 2, scope: !8891)
!8893 = !DILocation(line: 224, column: 2, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 224, column: 2)
!8895 = !DILocation(line: 224, column: 2, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 224, column: 2)
!8897 = !DILocalVariable(name: "found_match", scope: !8898, file: !3, line: 225, type: !507)
!8898 = distinct !DILexicalBlock(scope: !8896, file: !3, line: 224, column: 61)
!8899 = !DILocation(line: 225, column: 8, scope: !8898)
!8900 = !DILocation(line: 227, column: 9, scope: !8898)
!8901 = !DILocation(line: 227, column: 18, scope: !8898)
!8902 = !DILocation(line: 227, column: 7, scope: !8898)
!8903 = !DILocation(line: 229, column: 8, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8898, file: !3, line: 229, column: 7)
!8905 = !DILocation(line: 229, column: 13, scope: !8904)
!8906 = !DILocation(line: 229, column: 7, scope: !8898)
!8907 = !DILocation(line: 230, column: 4, scope: !8904)
!8908 = !DILocalVariable(name: "__mptr", scope: !8909, file: !3, line: 233, type: !144)
!8909 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 233, column: 3)
!8910 = distinct !DILexicalBlock(scope: !8898, file: !3, line: 233, column: 3)
!8911 = !DILocation(line: 233, column: 3, scope: !8909)
!8912 = !DILocation(line: 233, column: 3, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 233, column: 3)
!8914 = !DILocation(line: 233, column: 3, scope: !8910)
!8915 = !DILocation(line: 233, column: 3, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 233, column: 3)
!8917 = !DILocation(line: 234, column: 8, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 234, column: 8)
!8919 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 233, column: 44)
!8920 = !DILocation(line: 234, column: 17, scope: !8918)
!8921 = !DILocation(line: 234, column: 24, scope: !8918)
!8922 = !DILocation(line: 234, column: 21, scope: !8918)
!8923 = !DILocation(line: 234, column: 8, scope: !8919)
!8924 = !DILocation(line: 235, column: 17, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 234, column: 29)
!8926 = !DILocation(line: 236, column: 5, scope: !8925)
!8927 = !DILocation(line: 238, column: 3, scope: !8919)
!8928 = !DILocalVariable(name: "__mptr", scope: !8929, file: !3, line: 233, type: !144)
!8929 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 233, column: 3)
!8930 = !DILocation(line: 233, column: 3, scope: !8929)
!8931 = !DILocation(line: 233, column: 3, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 233, column: 3)
!8933 = distinct !{!8933, !8914, !8934}
!8934 = !DILocation(line: 238, column: 3, scope: !8910)
!8935 = !DILocation(line: 239, column: 8, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8898, file: !3, line: 239, column: 7)
!8937 = !DILocation(line: 239, column: 7, scope: !8898)
!8938 = !DILocation(line: 240, column: 4, scope: !8936)
!8939 = !DILocation(line: 242, column: 9, scope: !8898)
!8940 = !DILocation(line: 242, column: 16, scope: !8898)
!8941 = !DILocation(line: 242, column: 25, scope: !8898)
!8942 = !DILocation(line: 242, column: 30, scope: !8898)
!8943 = !DILocation(line: 242, column: 13, scope: !8898)
!8944 = !DILocation(line: 242, column: 7, scope: !8898)
!8945 = !DILocation(line: 243, column: 14, scope: !8898)
!8946 = !DILocation(line: 243, column: 23, scope: !8898)
!8947 = !DILocation(line: 243, column: 12, scope: !8898)
!8948 = !DILocation(line: 244, column: 11, scope: !8898)
!8949 = !DILocation(line: 244, column: 20, scope: !8898)
!8950 = !DILocation(line: 244, column: 9, scope: !8898)
!8951 = !DILocation(line: 245, column: 22, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8898, file: !3, line: 245, column: 7)
!8953 = !DILocation(line: 245, column: 8, scope: !8952)
!8954 = !DILocation(line: 245, column: 7, scope: !8898)
!8955 = !DILocation(line: 246, column: 17, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8952, file: !3, line: 245, column: 28)
!8957 = !DILocation(line: 246, column: 4, scope: !8956)
!8958 = !DILocation(line: 246, column: 9, scope: !8956)
!8959 = !DILocation(line: 246, column: 15, scope: !8956)
!8960 = !DILocation(line: 247, column: 15, scope: !8956)
!8961 = !DILocation(line: 247, column: 20, scope: !8956)
!8962 = !DILocation(line: 247, column: 28, scope: !8956)
!8963 = !DILocation(line: 247, column: 26, scope: !8956)
!8964 = !DILocation(line: 247, column: 37, scope: !8956)
!8965 = !DILocation(line: 247, column: 4, scope: !8956)
!8966 = !DILocation(line: 247, column: 9, scope: !8956)
!8967 = !DILocation(line: 247, column: 13, scope: !8956)
!8968 = !DILocation(line: 248, column: 28, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8956, file: !3, line: 248, column: 8)
!8970 = !DILocation(line: 248, column: 37, scope: !8969)
!8971 = !DILocation(line: 248, column: 42, scope: !8969)
!8972 = !DILocation(line: 248, column: 8, scope: !8969)
!8973 = !DILocation(line: 248, column: 8, scope: !8956)
!8974 = !DILocation(line: 249, column: 20, scope: !8969)
!8975 = !DILocation(line: 249, column: 5, scope: !8969)
!8976 = !DILocation(line: 250, column: 3, scope: !8956)
!8977 = !DILocation(line: 251, column: 18, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8952, file: !3, line: 250, column: 10)
!8979 = !DILocation(line: 251, column: 27, scope: !8978)
!8980 = !DILocation(line: 251, column: 33, scope: !8978)
!8981 = !DILocation(line: 251, column: 4, scope: !8978)
!8982 = !DILocation(line: 251, column: 9, scope: !8978)
!8983 = !DILocation(line: 251, column: 15, scope: !8978)
!8984 = !DILocation(line: 253, column: 30, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8978, file: !3, line: 253, column: 8)
!8986 = !DILocation(line: 253, column: 39, scope: !8985)
!8987 = !DILocation(line: 253, column: 44, scope: !8985)
!8988 = !DILocation(line: 254, column: 9, scope: !8985)
!8989 = !DILocation(line: 254, column: 19, scope: !8985)
!8990 = !DILocation(line: 253, column: 8, scope: !8985)
!8991 = !DILocation(line: 253, column: 8, scope: !8978)
!8992 = !DILocation(line: 255, column: 5, scope: !8985)
!8993 = !DILocation(line: 245, column: 25, scope: !8952)
!8994 = !DILabel(scope: !8898, name: "out", file: !3, line: 259)
!8995 = !DILocation(line: 259, column: 1, scope: !8898)
!8996 = !DILocation(line: 260, column: 13, scope: !8898)
!8997 = !DILocation(line: 260, column: 22, scope: !8898)
!8998 = !DILocation(line: 260, column: 3, scope: !8898)
!8999 = !DILocation(line: 261, column: 9, scope: !8898)
!9000 = !DILocation(line: 261, column: 3, scope: !8898)
!9001 = !DILocation(line: 262, column: 2, scope: !8898)
!9002 = !DILocalVariable(name: "__mptr", scope: !9003, file: !3, line: 224, type: !144)
!9003 = distinct !DILexicalBlock(scope: !8896, file: !3, line: 224, column: 2)
!9004 = !DILocation(line: 224, column: 2, scope: !9003)
!9005 = !DILocation(line: 224, column: 2, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9003, file: !3, line: 224, column: 2)
!9007 = distinct !{!9007, !8889, !9008}
!9008 = !DILocation(line: 262, column: 2, scope: !8885)
!9009 = !DILocation(line: 263, column: 1, scope: !8864)
!9010 = distinct !DISubprogram(name: "__list_del_entry", scope: !6550, file: !6550, line: 130, type: !6565, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9011 = !DILocalVariable(name: "entry", arg: 1, scope: !9010, file: !6550, line: 130, type: !153)
!9012 = !DILocation(line: 130, column: 55, scope: !9010)
!9013 = !DILocation(line: 132, column: 30, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9010, file: !6550, line: 132, column: 6)
!9015 = !DILocation(line: 132, column: 7, scope: !9014)
!9016 = !DILocation(line: 132, column: 6, scope: !9010)
!9017 = !DILocation(line: 133, column: 3, scope: !9014)
!9018 = !DILocation(line: 135, column: 13, scope: !9010)
!9019 = !DILocation(line: 135, column: 20, scope: !9010)
!9020 = !DILocation(line: 135, column: 26, scope: !9010)
!9021 = !DILocation(line: 135, column: 33, scope: !9010)
!9022 = !DILocation(line: 135, column: 2, scope: !9010)
!9023 = !DILocation(line: 136, column: 1, scope: !9010)
!9024 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !6550, file: !6550, line: 51, type: !9025, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9025 = !DISubroutineType(types: !9026)
!9026 = !{!507, !153}
!9027 = !DILocalVariable(name: "entry", arg: 1, scope: !9024, file: !6550, line: 51, type: !153)
!9028 = !DILocation(line: 51, column: 61, scope: !9024)
!9029 = !DILocation(line: 53, column: 2, scope: !9024)
!9030 = distinct !DISubprogram(name: "__list_del", scope: !6550, file: !6550, line: 110, type: !8512, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9031 = !DILocalVariable(name: "prev", arg: 1, scope: !9030, file: !6550, line: 110, type: !153)
!9032 = !DILocation(line: 110, column: 50, scope: !9030)
!9033 = !DILocalVariable(name: "next", arg: 2, scope: !9030, file: !6550, line: 110, type: !153)
!9034 = !DILocation(line: 110, column: 75, scope: !9030)
!9035 = !DILocation(line: 112, column: 15, scope: !9030)
!9036 = !DILocation(line: 112, column: 2, scope: !9030)
!9037 = !DILocation(line: 112, column: 8, scope: !9030)
!9038 = !DILocation(line: 112, column: 13, scope: !9030)
!9039 = !DILocation(line: 113, column: 2, scope: !9030)
!9040 = !DILocation(line: 113, column: 2, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9030, file: !6550, line: 113, column: 2)
!9042 = !DILocation(line: 113, column: 2, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9041, file: !6550, line: 113, column: 2)
!9044 = !DILocation(line: 113, column: 2, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9041, file: !6550, line: 113, column: 2)
!9046 = !DILocation(line: 114, column: 1, scope: !9030)
!9047 = distinct !DISubprogram(name: "reset_resource", scope: !3, file: !3, line: 197, type: !9048, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9048 = !DISubroutineType(types: !9049)
!9049 = !{null, !167}
!9050 = !DILocalVariable(name: "res", arg: 1, scope: !9047, file: !3, line: 197, type: !167)
!9051 = !DILocation(line: 197, column: 52, scope: !9047)
!9052 = !DILocation(line: 199, column: 2, scope: !9047)
!9053 = !DILocation(line: 199, column: 7, scope: !9047)
!9054 = !DILocation(line: 199, column: 13, scope: !9047)
!9055 = !DILocation(line: 200, column: 2, scope: !9047)
!9056 = !DILocation(line: 200, column: 7, scope: !9047)
!9057 = !DILocation(line: 200, column: 11, scope: !9047)
!9058 = !DILocation(line: 201, column: 2, scope: !9047)
!9059 = !DILocation(line: 201, column: 7, scope: !9047)
!9060 = !DILocation(line: 201, column: 13, scope: !9047)
!9061 = !DILocation(line: 202, column: 1, scope: !9047)
!9062 = distinct !DISubprogram(name: "assign_fixed_resource_on_bus", scope: !3, file: !3, line: 1338, type: !9063, scopeLine: 1339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9063 = !DISubroutineType(types: !9064)
!9064 = !{null, !156, !167}
!9065 = !DILocalVariable(name: "b", arg: 1, scope: !9062, file: !3, line: 1338, type: !156)
!9066 = !DILocation(line: 1338, column: 58, scope: !9062)
!9067 = !DILocalVariable(name: "r", arg: 2, scope: !9062, file: !3, line: 1338, type: !167)
!9068 = !DILocation(line: 1338, column: 78, scope: !9062)
!9069 = !DILocalVariable(name: "i", scope: !9062, file: !3, line: 1340, type: !120)
!9070 = !DILocation(line: 1340, column: 6, scope: !9062)
!9071 = !DILocalVariable(name: "parent_r", scope: !9062, file: !3, line: 1341, type: !167)
!9072 = !DILocation(line: 1341, column: 19, scope: !9062)
!9073 = !DILocalVariable(name: "mask", scope: !9062, file: !3, line: 1342, type: !185)
!9074 = !DILocation(line: 1342, column: 16, scope: !9062)
!9075 = !DILocation(line: 1345, column: 2, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 1345, column: 2)
!9077 = !DILocation(line: 1345, column: 2, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 1345, column: 2)
!9079 = !DILocation(line: 1346, column: 8, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9081, file: !3, line: 1346, column: 7)
!9081 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 1345, column: 44)
!9082 = !DILocation(line: 1346, column: 7, scope: !9081)
!9083 = !DILocation(line: 1347, column: 4, scope: !9080)
!9084 = !DILocation(line: 1349, column: 8, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9081, file: !3, line: 1349, column: 7)
!9086 = !DILocation(line: 1349, column: 11, scope: !9085)
!9087 = !DILocation(line: 1349, column: 19, scope: !9085)
!9088 = !DILocation(line: 1349, column: 17, scope: !9085)
!9089 = !DILocation(line: 1349, column: 29, scope: !9085)
!9090 = !DILocation(line: 1349, column: 39, scope: !9085)
!9091 = !DILocation(line: 1349, column: 47, scope: !9085)
!9092 = !DILocation(line: 1349, column: 45, scope: !9085)
!9093 = !DILocation(line: 1349, column: 25, scope: !9085)
!9094 = !DILocation(line: 1349, column: 53, scope: !9085)
!9095 = !DILocation(line: 1350, column: 25, scope: !9085)
!9096 = !DILocation(line: 1350, column: 35, scope: !9085)
!9097 = !DILocation(line: 1350, column: 7, scope: !9085)
!9098 = !DILocation(line: 1349, column: 7, scope: !9081)
!9099 = !DILocation(line: 1351, column: 21, scope: !9085)
!9100 = !DILocation(line: 1351, column: 31, scope: !9085)
!9101 = !DILocation(line: 1351, column: 4, scope: !9085)
!9102 = !DILocation(line: 1352, column: 2, scope: !9081)
!9103 = distinct !{!9103, !9075, !9104}
!9104 = !DILocation(line: 1352, column: 2, scope: !9076)
!9105 = !DILocation(line: 1353, column: 1, scope: !9062)
!9106 = distinct !DISubprogram(name: "resource_contains", scope: !169, file: !169, line: 223, type: !9107, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9107 = !DISubroutineType(types: !9108)
!9108 = !{!507, !167, !167}
!9109 = !DILocalVariable(name: "r1", arg: 1, scope: !9106, file: !169, line: 223, type: !167)
!9110 = !DILocation(line: 223, column: 55, scope: !9106)
!9111 = !DILocalVariable(name: "r2", arg: 2, scope: !9106, file: !169, line: 223, type: !167)
!9112 = !DILocation(line: 223, column: 76, scope: !9106)
!9113 = !DILocation(line: 225, column: 20, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9106, file: !169, line: 225, column: 6)
!9115 = !DILocation(line: 225, column: 6, scope: !9114)
!9116 = !DILocation(line: 225, column: 41, scope: !9114)
!9117 = !DILocation(line: 225, column: 27, scope: !9114)
!9118 = !DILocation(line: 225, column: 24, scope: !9114)
!9119 = !DILocation(line: 225, column: 6, scope: !9106)
!9120 = !DILocation(line: 226, column: 3, scope: !9114)
!9121 = !DILocation(line: 227, column: 6, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9106, file: !169, line: 227, column: 6)
!9123 = !DILocation(line: 227, column: 10, scope: !9122)
!9124 = !DILocation(line: 227, column: 16, scope: !9122)
!9125 = !DILocation(line: 227, column: 35, scope: !9122)
!9126 = !DILocation(line: 227, column: 38, scope: !9122)
!9127 = !DILocation(line: 227, column: 42, scope: !9122)
!9128 = !DILocation(line: 227, column: 48, scope: !9122)
!9129 = !DILocation(line: 227, column: 6, scope: !9106)
!9130 = !DILocation(line: 228, column: 3, scope: !9122)
!9131 = !DILocation(line: 229, column: 9, scope: !9106)
!9132 = !DILocation(line: 229, column: 13, scope: !9106)
!9133 = !DILocation(line: 229, column: 22, scope: !9106)
!9134 = !DILocation(line: 229, column: 26, scope: !9106)
!9135 = !DILocation(line: 229, column: 19, scope: !9106)
!9136 = !DILocation(line: 229, column: 32, scope: !9106)
!9137 = !DILocation(line: 229, column: 35, scope: !9106)
!9138 = !DILocation(line: 229, column: 39, scope: !9106)
!9139 = !DILocation(line: 229, column: 46, scope: !9106)
!9140 = !DILocation(line: 229, column: 50, scope: !9106)
!9141 = !DILocation(line: 229, column: 43, scope: !9106)
!9142 = !DILocation(line: 0, scope: !9106)
!9143 = !DILocation(line: 229, column: 2, scope: !9106)
!9144 = !DILocation(line: 230, column: 1, scope: !9106)
!9145 = distinct !DISubprogram(name: "resource_type", scope: !169, file: !169, line: 214, type: !9146, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9146 = !DISubroutineType(types: !9147)
!9147 = !{!185, !4205}
!9148 = !DILocalVariable(name: "res", arg: 1, scope: !9145, file: !169, line: 214, type: !4205)
!9149 = !DILocation(line: 214, column: 66, scope: !9145)
!9150 = !DILocation(line: 216, column: 9, scope: !9145)
!9151 = !DILocation(line: 216, column: 14, scope: !9145)
!9152 = !DILocation(line: 216, column: 20, scope: !9145)
!9153 = !DILocation(line: 216, column: 2, scope: !9145)
!9154 = distinct !DISubprogram(name: "kasan_check_read", scope: !9155, file: !9155, line: 34, type: !9156, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9155 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!9156 = !DISubroutineType(types: !9157)
!9157 = !{!507, !6157, !7}
!9158 = !DILocalVariable(name: "p", arg: 1, scope: !9154, file: !9155, line: 34, type: !6157)
!9159 = !DILocation(line: 34, column: 58, scope: !9154)
!9160 = !DILocalVariable(name: "size", arg: 2, scope: !9154, file: !9155, line: 34, type: !7)
!9161 = !DILocation(line: 34, column: 74, scope: !9154)
!9162 = !DILocation(line: 36, column: 2, scope: !9154)
!9163 = distinct !DISubprogram(name: "kcsan_check_access", scope: !9164, file: !9164, line: 178, type: !9165, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9164 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!9165 = !DISubroutineType(types: !9166)
!9166 = !{null, !6157, !347, !120}
!9167 = !DILocalVariable(name: "ptr", arg: 1, scope: !9163, file: !9164, line: 178, type: !6157)
!9168 = !DILocation(line: 178, column: 60, scope: !9163)
!9169 = !DILocalVariable(name: "size", arg: 2, scope: !9163, file: !9164, line: 178, type: !347)
!9170 = !DILocation(line: 178, column: 72, scope: !9163)
!9171 = !DILocalVariable(name: "type", arg: 3, scope: !9163, file: !9164, line: 179, type: !120)
!9172 = !DILocation(line: 179, column: 15, scope: !9163)
!9173 = !DILocation(line: 179, column: 23, scope: !9163)
!9174 = distinct !DISubprogram(name: "to_pci_sysdata", scope: !6180, file: !6180, line: 36, type: !9175, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9175 = !DISubroutineType(types: !9176)
!9176 = !{!9177, !5984}
!9177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9178, size: 64)
!9178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sysdata", file: !6180, line: 15, size: 320, elements: !9179)
!9179 = !{!9180, !9181, !9182, !9183, !9184, !9185}
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !9178, file: !6180, line: 16, baseType: !120, size: 32)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9178, file: !6180, line: 17, baseType: !120, size: 32, offset: 32)
!9182 = !DIDerivedType(tag: DW_TAG_member, name: "companion", scope: !9178, file: !6180, line: 19, baseType: !4219, size: 64, offset: 64)
!9183 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !9178, file: !6180, line: 22, baseType: !144, size: 64, offset: 128)
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !9178, file: !6180, line: 25, baseType: !144, size: 64, offset: 192)
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "vmd_dev", scope: !9178, file: !6180, line: 28, baseType: !145, size: 64, offset: 256)
!9186 = !DILocalVariable(name: "bus", arg: 1, scope: !9174, file: !6180, line: 36, type: !5984)
!9187 = !DILocation(line: 36, column: 72, scope: !9174)
!9188 = !DILocation(line: 38, column: 9, scope: !9174)
!9189 = !DILocation(line: 38, column: 14, scope: !9174)
!9190 = !DILocation(line: 38, column: 2, scope: !9174)
!9191 = distinct !DISubprogram(name: "pci_claim_bridge_resources", scope: !3, file: !3, line: 1435, type: !3995, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9192 = !DILocalVariable(name: "dev", arg: 1, scope: !9191, file: !3, line: 1435, type: !145)
!9193 = !DILocation(line: 1435, column: 56, scope: !9191)
!9194 = !DILocalVariable(name: "i", scope: !9191, file: !3, line: 1437, type: !120)
!9195 = !DILocation(line: 1437, column: 6, scope: !9191)
!9196 = !DILocation(line: 1439, column: 9, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 1439, column: 2)
!9198 = !DILocation(line: 1439, column: 7, scope: !9197)
!9199 = !DILocation(line: 1439, column: 33, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 1439, column: 2)
!9201 = !DILocation(line: 1439, column: 35, scope: !9200)
!9202 = !DILocation(line: 1439, column: 2, scope: !9197)
!9203 = !DILocalVariable(name: "r", scope: !9204, file: !3, line: 1440, type: !167)
!9204 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1439, column: 61)
!9205 = !DILocation(line: 1440, column: 20, scope: !9204)
!9206 = !DILocation(line: 1440, column: 25, scope: !9204)
!9207 = !DILocation(line: 1440, column: 30, scope: !9204)
!9208 = !DILocation(line: 1440, column: 39, scope: !9204)
!9209 = !DILocation(line: 1442, column: 8, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9204, file: !3, line: 1442, column: 7)
!9211 = !DILocation(line: 1442, column: 11, scope: !9210)
!9212 = !DILocation(line: 1442, column: 17, scope: !9210)
!9213 = !DILocation(line: 1442, column: 20, scope: !9210)
!9214 = !DILocation(line: 1442, column: 23, scope: !9210)
!9215 = !DILocation(line: 1442, column: 7, scope: !9204)
!9216 = !DILocation(line: 1443, column: 4, scope: !9210)
!9217 = !DILocation(line: 1445, column: 29, scope: !9204)
!9218 = !DILocation(line: 1445, column: 34, scope: !9204)
!9219 = !DILocation(line: 1445, column: 3, scope: !9204)
!9220 = !DILocation(line: 1446, column: 2, scope: !9204)
!9221 = !DILocation(line: 1439, column: 57, scope: !9200)
!9222 = !DILocation(line: 1439, column: 2, scope: !9200)
!9223 = distinct !{!9223, !9202, !9224}
!9224 = !DILocation(line: 1446, column: 2, scope: !9197)
!9225 = !DILocation(line: 1447, column: 1, scope: !9191)
!9226 = distinct !DISubprogram(name: "pci_claim_device_resources", scope: !3, file: !3, line: 1421, type: !3995, scopeLine: 1422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9227 = !DILocalVariable(name: "dev", arg: 1, scope: !9226, file: !3, line: 1421, type: !145)
!9228 = !DILocation(line: 1421, column: 56, scope: !9226)
!9229 = !DILocalVariable(name: "i", scope: !9226, file: !3, line: 1423, type: !120)
!9230 = !DILocation(line: 1423, column: 6, scope: !9226)
!9231 = !DILocation(line: 1425, column: 9, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 1425, column: 2)
!9233 = !DILocation(line: 1425, column: 7, scope: !9232)
!9234 = !DILocation(line: 1425, column: 14, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 1425, column: 2)
!9236 = !DILocation(line: 1425, column: 16, scope: !9235)
!9237 = !DILocation(line: 1425, column: 2, scope: !9232)
!9238 = !DILocalVariable(name: "r", scope: !9239, file: !3, line: 1426, type: !167)
!9239 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 1425, column: 45)
!9240 = !DILocation(line: 1426, column: 20, scope: !9239)
!9241 = !DILocation(line: 1426, column: 25, scope: !9239)
!9242 = !DILocation(line: 1426, column: 30, scope: !9239)
!9243 = !DILocation(line: 1426, column: 39, scope: !9239)
!9244 = !DILocation(line: 1428, column: 8, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 1428, column: 7)
!9246 = !DILocation(line: 1428, column: 11, scope: !9245)
!9247 = !DILocation(line: 1428, column: 17, scope: !9245)
!9248 = !DILocation(line: 1428, column: 20, scope: !9245)
!9249 = !DILocation(line: 1428, column: 23, scope: !9245)
!9250 = !DILocation(line: 1428, column: 7, scope: !9239)
!9251 = !DILocation(line: 1429, column: 4, scope: !9245)
!9252 = !DILocation(line: 1431, column: 22, scope: !9239)
!9253 = !DILocation(line: 1431, column: 27, scope: !9239)
!9254 = !DILocation(line: 1431, column: 3, scope: !9239)
!9255 = !DILocation(line: 1432, column: 2, scope: !9239)
!9256 = !DILocation(line: 1425, column: 41, scope: !9235)
!9257 = !DILocation(line: 1425, column: 2, scope: !9235)
!9258 = distinct !{!9258, !9237, !9259}
!9259 = !DILocation(line: 1432, column: 2, scope: !9232)
!9260 = !DILocation(line: 1433, column: 1, scope: !9226)
!9261 = distinct !DISubprogram(name: "pci_bridge_release_resources", scope: !3, file: !3, line: 1523, type: !4624, scopeLine: 1525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9262 = !DILocalVariable(name: "bus", arg: 1, scope: !9261, file: !3, line: 1523, type: !156)
!9263 = !DILocation(line: 1523, column: 58, scope: !9261)
!9264 = !DILocalVariable(name: "type", arg: 2, scope: !9261, file: !3, line: 1524, type: !185)
!9265 = !DILocation(line: 1524, column: 21, scope: !9261)
!9266 = !DILocalVariable(name: "dev", scope: !9261, file: !3, line: 1526, type: !145)
!9267 = !DILocation(line: 1526, column: 18, scope: !9261)
!9268 = !DILocation(line: 1526, column: 24, scope: !9261)
!9269 = !DILocation(line: 1526, column: 29, scope: !9261)
!9270 = !DILocalVariable(name: "r", scope: !9261, file: !3, line: 1527, type: !167)
!9271 = !DILocation(line: 1527, column: 19, scope: !9261)
!9272 = !DILocalVariable(name: "old_flags", scope: !9261, file: !3, line: 1528, type: !7)
!9273 = !DILocation(line: 1528, column: 11, scope: !9261)
!9274 = !DILocalVariable(name: "b_res", scope: !9261, file: !3, line: 1529, type: !167)
!9275 = !DILocation(line: 1529, column: 19, scope: !9261)
!9276 = !DILocalVariable(name: "idx", scope: !9261, file: !3, line: 1530, type: !120)
!9277 = !DILocation(line: 1530, column: 6, scope: !9261)
!9278 = !DILocation(line: 1532, column: 11, scope: !9261)
!9279 = !DILocation(line: 1532, column: 16, scope: !9261)
!9280 = !DILocation(line: 1532, column: 8, scope: !9261)
!9281 = !DILocation(line: 1544, column: 6, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 1544, column: 6)
!9283 = !DILocation(line: 1544, column: 11, scope: !9282)
!9284 = !DILocation(line: 1544, column: 6, scope: !9261)
!9285 = !DILocation(line: 1545, column: 7, scope: !9282)
!9286 = !DILocation(line: 1545, column: 3, scope: !9282)
!9287 = !DILocation(line: 1546, column: 13, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 1546, column: 11)
!9289 = !DILocation(line: 1546, column: 18, scope: !9288)
!9290 = !DILocation(line: 1546, column: 11, scope: !9282)
!9291 = !DILocation(line: 1547, column: 7, scope: !9288)
!9292 = !DILocation(line: 1547, column: 3, scope: !9288)
!9293 = !DILocation(line: 1548, column: 12, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9288, file: !3, line: 1548, column: 11)
!9295 = !DILocation(line: 1548, column: 17, scope: !9294)
!9296 = !DILocation(line: 1548, column: 38, scope: !9294)
!9297 = !DILocation(line: 1549, column: 5, scope: !9294)
!9298 = !DILocation(line: 1549, column: 14, scope: !9294)
!9299 = !DILocation(line: 1549, column: 20, scope: !9294)
!9300 = !DILocation(line: 1548, column: 11, scope: !9288)
!9301 = !DILocation(line: 1550, column: 7, scope: !9294)
!9302 = !DILocation(line: 1550, column: 3, scope: !9294)
!9303 = !DILocation(line: 1551, column: 13, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9294, file: !3, line: 1551, column: 11)
!9305 = !DILocation(line: 1551, column: 22, scope: !9304)
!9306 = !DILocation(line: 1551, column: 28, scope: !9304)
!9307 = !DILocation(line: 1551, column: 49, scope: !9304)
!9308 = !DILocation(line: 1552, column: 5, scope: !9304)
!9309 = !DILocation(line: 1552, column: 14, scope: !9304)
!9310 = !DILocation(line: 1552, column: 20, scope: !9304)
!9311 = !DILocation(line: 1551, column: 11, scope: !9294)
!9312 = !DILocation(line: 1553, column: 7, scope: !9304)
!9313 = !DILocation(line: 1553, column: 3, scope: !9304)
!9314 = !DILocation(line: 1555, column: 7, scope: !9304)
!9315 = !DILocation(line: 1557, column: 7, scope: !9261)
!9316 = !DILocation(line: 1557, column: 13, scope: !9261)
!9317 = !DILocation(line: 1557, column: 4, scope: !9261)
!9318 = !DILocation(line: 1559, column: 7, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 1559, column: 6)
!9320 = !DILocation(line: 1559, column: 10, scope: !9319)
!9321 = !DILocation(line: 1559, column: 6, scope: !9261)
!9322 = !DILocation(line: 1560, column: 3, scope: !9319)
!9323 = !DILocation(line: 1563, column: 26, scope: !9261)
!9324 = !DILocation(line: 1563, column: 2, scope: !9261)
!9325 = !DILocation(line: 1564, column: 24, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 1564, column: 6)
!9327 = !DILocation(line: 1564, column: 7, scope: !9326)
!9328 = !DILocation(line: 1564, column: 6, scope: !9261)
!9329 = !DILocation(line: 1565, column: 22, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9326, file: !3, line: 1564, column: 28)
!9331 = !DILocation(line: 1565, column: 25, scope: !9330)
!9332 = !DILocation(line: 1565, column: 31, scope: !9330)
!9333 = !DILocation(line: 1565, column: 20, scope: !9330)
!9334 = !DILocation(line: 1565, column: 10, scope: !9330)
!9335 = !DILocation(line: 1565, column: 8, scope: !9330)
!9336 = !DILocation(line: 1566, column: 3, scope: !9330)
!9337 = !DILocation(line: 1569, column: 26, scope: !9330)
!9338 = !DILocation(line: 1569, column: 12, scope: !9330)
!9339 = !DILocation(line: 1569, column: 29, scope: !9330)
!9340 = !DILocation(line: 1569, column: 3, scope: !9330)
!9341 = !DILocation(line: 1569, column: 6, scope: !9330)
!9342 = !DILocation(line: 1569, column: 10, scope: !9330)
!9343 = !DILocation(line: 1570, column: 3, scope: !9330)
!9344 = !DILocation(line: 1570, column: 6, scope: !9330)
!9345 = !DILocation(line: 1570, column: 12, scope: !9330)
!9346 = !DILocation(line: 1571, column: 3, scope: !9330)
!9347 = !DILocation(line: 1571, column: 6, scope: !9330)
!9348 = !DILocation(line: 1571, column: 12, scope: !9330)
!9349 = !DILocation(line: 1574, column: 7, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9330, file: !3, line: 1574, column: 7)
!9351 = !DILocation(line: 1574, column: 12, scope: !9350)
!9352 = !DILocation(line: 1574, column: 7, scope: !9330)
!9353 = !DILocation(line: 1575, column: 9, scope: !9350)
!9354 = !DILocation(line: 1575, column: 4, scope: !9350)
!9355 = !DILocation(line: 1576, column: 22, scope: !9330)
!9356 = !DILocation(line: 1576, column: 27, scope: !9330)
!9357 = !DILocation(line: 1576, column: 3, scope: !9330)
!9358 = !DILocation(line: 1578, column: 14, scope: !9330)
!9359 = !DILocation(line: 1578, column: 3, scope: !9330)
!9360 = !DILocation(line: 1578, column: 6, scope: !9330)
!9361 = !DILocation(line: 1578, column: 12, scope: !9330)
!9362 = !DILocation(line: 1579, column: 2, scope: !9330)
!9363 = !DILocation(line: 1580, column: 1, scope: !9261)
!9364 = distinct !DISubprogram(name: "pci_bus_dump_res", scope: !3, file: !3, line: 1623, type: !204, scopeLine: 1624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9365 = !DILocalVariable(name: "bus", arg: 1, scope: !9364, file: !3, line: 1623, type: !156)
!9366 = !DILocation(line: 1623, column: 46, scope: !9364)
!9367 = !DILocalVariable(name: "res", scope: !9364, file: !3, line: 1625, type: !167)
!9368 = !DILocation(line: 1625, column: 19, scope: !9364)
!9369 = !DILocalVariable(name: "i", scope: !9364, file: !3, line: 1626, type: !120)
!9370 = !DILocation(line: 1626, column: 6, scope: !9364)
!9371 = !DILocation(line: 1628, column: 2, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 1628, column: 2)
!9373 = !DILocation(line: 1628, column: 2, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 1628, column: 2)
!9375 = !DILocation(line: 1629, column: 8, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9377, file: !3, line: 1629, column: 7)
!9377 = distinct !DILexicalBlock(scope: !9374, file: !3, line: 1628, column: 41)
!9378 = !DILocation(line: 1629, column: 12, scope: !9376)
!9379 = !DILocation(line: 1629, column: 16, scope: !9376)
!9380 = !DILocation(line: 1629, column: 21, scope: !9376)
!9381 = !DILocation(line: 1629, column: 25, scope: !9376)
!9382 = !DILocation(line: 1629, column: 29, scope: !9376)
!9383 = !DILocation(line: 1629, column: 34, scope: !9376)
!9384 = !DILocation(line: 1629, column: 7, scope: !9377)
!9385 = !DILocation(line: 1630, column: 4, scope: !9376)
!9386 = !DILocation(line: 1632, column: 3, scope: !9377)
!9387 = !DILocation(line: 1633, column: 2, scope: !9377)
!9388 = distinct !{!9388, !9371, !9389}
!9389 = !DILocation(line: 1633, column: 2, scope: !9372)
!9390 = !DILocation(line: 1634, column: 1, scope: !9364)
!9391 = distinct !DISubprogram(name: "pci_bus_distribute_available_resources", scope: !3, file: !3, line: 1887, type: !9392, scopeLine: 1892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9392 = !DISubroutineType(types: !9393)
!9393 = !{null, !156, !153, !168, !168, !168}
!9394 = !DILocalVariable(name: "bus", arg: 1, scope: !9391, file: !3, line: 1887, type: !156)
!9395 = !DILocation(line: 1887, column: 68, scope: !9391)
!9396 = !DILocalVariable(name: "add_list", arg: 2, scope: !9391, file: !3, line: 1888, type: !153)
!9397 = !DILocation(line: 1888, column: 28, scope: !9391)
!9398 = !DILocalVariable(name: "io", arg: 3, scope: !9391, file: !3, line: 1889, type: !168)
!9399 = !DILocation(line: 1889, column: 26, scope: !9391)
!9400 = !DILocalVariable(name: "mmio", arg: 4, scope: !9391, file: !3, line: 1890, type: !168)
!9401 = !DILocation(line: 1890, column: 26, scope: !9391)
!9402 = !DILocalVariable(name: "mmio_pref", arg: 5, scope: !9391, file: !3, line: 1891, type: !168)
!9403 = !DILocation(line: 1891, column: 26, scope: !9391)
!9404 = !DILocalVariable(name: "normal_bridges", scope: !9391, file: !3, line: 1893, type: !7)
!9405 = !DILocation(line: 1893, column: 15, scope: !9391)
!9406 = !DILocalVariable(name: "hotplug_bridges", scope: !9391, file: !3, line: 1893, type: !7)
!9407 = !DILocation(line: 1893, column: 35, scope: !9391)
!9408 = !DILocalVariable(name: "io_res", scope: !9391, file: !3, line: 1894, type: !167)
!9409 = !DILocation(line: 1894, column: 19, scope: !9391)
!9410 = !DILocalVariable(name: "mmio_res", scope: !9391, file: !3, line: 1894, type: !167)
!9411 = !DILocation(line: 1894, column: 28, scope: !9391)
!9412 = !DILocalVariable(name: "mmio_pref_res", scope: !9391, file: !3, line: 1894, type: !167)
!9413 = !DILocation(line: 1894, column: 39, scope: !9391)
!9414 = !DILocalVariable(name: "dev", scope: !9391, file: !3, line: 1895, type: !145)
!9415 = !DILocation(line: 1895, column: 18, scope: !9391)
!9416 = !DILocalVariable(name: "bridge", scope: !9391, file: !3, line: 1895, type: !145)
!9417 = !DILocation(line: 1895, column: 24, scope: !9391)
!9418 = !DILocation(line: 1895, column: 33, scope: !9391)
!9419 = !DILocation(line: 1895, column: 38, scope: !9391)
!9420 = !DILocalVariable(name: "io_per_hp", scope: !9391, file: !3, line: 1896, type: !172)
!9421 = !DILocation(line: 1896, column: 18, scope: !9391)
!9422 = !DILocalVariable(name: "mmio_per_hp", scope: !9391, file: !3, line: 1896, type: !172)
!9423 = !DILocation(line: 1896, column: 29, scope: !9391)
!9424 = !DILocalVariable(name: "mmio_pref_per_hp", scope: !9391, file: !3, line: 1896, type: !172)
!9425 = !DILocation(line: 1896, column: 42, scope: !9391)
!9426 = !DILocalVariable(name: "align", scope: !9391, file: !3, line: 1896, type: !172)
!9427 = !DILocation(line: 1896, column: 60, scope: !9391)
!9428 = !DILocation(line: 1898, column: 12, scope: !9391)
!9429 = !DILocation(line: 1898, column: 20, scope: !9391)
!9430 = !DILocation(line: 1898, column: 9, scope: !9391)
!9431 = !DILocation(line: 1899, column: 14, scope: !9391)
!9432 = !DILocation(line: 1899, column: 22, scope: !9391)
!9433 = !DILocation(line: 1899, column: 11, scope: !9391)
!9434 = !DILocation(line: 1900, column: 19, scope: !9391)
!9435 = !DILocation(line: 1900, column: 27, scope: !9391)
!9436 = !DILocation(line: 1900, column: 16, scope: !9391)
!9437 = !DILocation(line: 1906, column: 33, scope: !9391)
!9438 = !DILocation(line: 1906, column: 41, scope: !9391)
!9439 = !DILocation(line: 1906, column: 10, scope: !9391)
!9440 = !DILocation(line: 1906, column: 8, scope: !9391)
!9441 = !DILocation(line: 1907, column: 7, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 1907, column: 6)
!9443 = !DILocation(line: 1907, column: 15, scope: !9442)
!9444 = !DILocation(line: 1907, column: 22, scope: !9442)
!9445 = !DILocation(line: 1907, column: 25, scope: !9442)
!9446 = !DILocation(line: 1907, column: 6, scope: !9391)
!9447 = !DILocalVariable(name: "__UNIQUE_ID___x319", scope: !9448, file: !3, line: 1908, type: !178)
!9448 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 1908, column: 14)
!9449 = !DILocation(line: 1908, column: 14, scope: !9448)
!9450 = !DILocalVariable(name: "__UNIQUE_ID___y320", scope: !9448, file: !3, line: 1908, type: !178)
!9451 = !DILocation(line: 1908, column: 6, scope: !9442)
!9452 = !DILocation(line: 1908, column: 12, scope: !9442)
!9453 = !DILocation(line: 1908, column: 3, scope: !9442)
!9454 = !DILocation(line: 1910, column: 33, scope: !9391)
!9455 = !DILocation(line: 1910, column: 41, scope: !9391)
!9456 = !DILocation(line: 1910, column: 10, scope: !9391)
!9457 = !DILocation(line: 1910, column: 8, scope: !9391)
!9458 = !DILocation(line: 1911, column: 7, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 1911, column: 6)
!9460 = !DILocation(line: 1911, column: 17, scope: !9459)
!9461 = !DILocation(line: 1911, column: 24, scope: !9459)
!9462 = !DILocation(line: 1911, column: 27, scope: !9459)
!9463 = !DILocation(line: 1911, column: 6, scope: !9391)
!9464 = !DILocalVariable(name: "__UNIQUE_ID___x321", scope: !9465, file: !3, line: 1912, type: !178)
!9465 = distinct !DILexicalBlock(scope: !9459, file: !3, line: 1912, column: 16)
!9466 = !DILocation(line: 1912, column: 16, scope: !9465)
!9467 = !DILocalVariable(name: "__UNIQUE_ID___y322", scope: !9465, file: !3, line: 1912, type: !178)
!9468 = !DILocation(line: 1912, column: 8, scope: !9459)
!9469 = !DILocation(line: 1912, column: 14, scope: !9459)
!9470 = !DILocation(line: 1912, column: 3, scope: !9459)
!9471 = !DILocation(line: 1914, column: 33, scope: !9391)
!9472 = !DILocation(line: 1914, column: 41, scope: !9391)
!9473 = !DILocation(line: 1914, column: 10, scope: !9391)
!9474 = !DILocation(line: 1914, column: 8, scope: !9391)
!9475 = !DILocation(line: 1915, column: 7, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 1915, column: 6)
!9477 = !DILocation(line: 1915, column: 22, scope: !9476)
!9478 = !DILocation(line: 1915, column: 29, scope: !9476)
!9479 = !DILocation(line: 1915, column: 32, scope: !9476)
!9480 = !DILocation(line: 1915, column: 6, scope: !9391)
!9481 = !DILocalVariable(name: "__UNIQUE_ID___x323", scope: !9482, file: !3, line: 1916, type: !178)
!9482 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 1916, column: 21)
!9483 = !DILocation(line: 1916, column: 21, scope: !9482)
!9484 = !DILocalVariable(name: "__UNIQUE_ID___y324", scope: !9482, file: !3, line: 1916, type: !178)
!9485 = !DILocation(line: 1916, column: 13, scope: !9476)
!9486 = !DILocation(line: 1916, column: 19, scope: !9476)
!9487 = !DILocation(line: 1916, column: 3, scope: !9476)
!9488 = !DILocation(line: 1923, column: 23, scope: !9391)
!9489 = !DILocation(line: 1923, column: 31, scope: !9391)
!9490 = !DILocation(line: 1923, column: 39, scope: !9391)
!9491 = !DILocation(line: 1923, column: 49, scope: !9391)
!9492 = !DILocation(line: 1923, column: 2, scope: !9391)
!9493 = !DILocation(line: 1924, column: 23, scope: !9391)
!9494 = !DILocation(line: 1924, column: 31, scope: !9391)
!9495 = !DILocation(line: 1924, column: 41, scope: !9391)
!9496 = !DILocation(line: 1924, column: 51, scope: !9391)
!9497 = !DILocation(line: 1924, column: 2, scope: !9391)
!9498 = !DILocation(line: 1925, column: 23, scope: !9391)
!9499 = !DILocation(line: 1925, column: 31, scope: !9391)
!9500 = !DILocation(line: 1925, column: 46, scope: !9391)
!9501 = !DILocation(line: 1926, column: 9, scope: !9391)
!9502 = !DILocation(line: 1925, column: 2, scope: !9391)
!9503 = !DILocalVariable(name: "__mptr", scope: !9504, file: !3, line: 1933, type: !144)
!9504 = distinct !DILexicalBlock(scope: !9505, file: !3, line: 1933, column: 2)
!9505 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 1933, column: 2)
!9506 = !DILocation(line: 1933, column: 2, scope: !9504)
!9507 = !DILocation(line: 1933, column: 2, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 1933, column: 2)
!9509 = !DILocation(line: 1933, column: 2, scope: !9505)
!9510 = !DILocation(line: 1933, column: 2, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9505, file: !3, line: 1933, column: 2)
!9512 = !DILocation(line: 1933, column: 2, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 1933, column: 2)
!9514 = !DILocation(line: 1933, column: 2, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9513, file: !3, line: 1933, column: 2)
!9516 = !DILocation(line: 1934, column: 7, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 1934, column: 7)
!9518 = distinct !DILexicalBlock(scope: !9513, file: !3, line: 1933, column: 32)
!9519 = !DILocation(line: 1934, column: 12, scope: !9517)
!9520 = !DILocation(line: 1934, column: 7, scope: !9518)
!9521 = !DILocation(line: 1935, column: 19, scope: !9517)
!9522 = !DILocation(line: 1935, column: 4, scope: !9517)
!9523 = !DILocation(line: 1937, column: 18, scope: !9517)
!9524 = !DILocalVariable(name: "__mptr", scope: !9525, file: !3, line: 1933, type: !144)
!9525 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 1933, column: 2)
!9526 = !DILocation(line: 1933, column: 2, scope: !9525)
!9527 = !DILocation(line: 1933, column: 2, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9525, file: !3, line: 1933, column: 2)
!9529 = distinct !{!9529, !9509, !9530}
!9530 = !DILocation(line: 1938, column: 2, scope: !9505)
!9531 = !DILocation(line: 1945, column: 6, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 1945, column: 6)
!9533 = !DILocation(line: 1945, column: 24, scope: !9532)
!9534 = !DILocation(line: 1945, column: 22, scope: !9532)
!9535 = !DILocation(line: 1945, column: 39, scope: !9532)
!9536 = !DILocation(line: 1945, column: 6, scope: !9391)
!9537 = !DILocalVariable(name: "__mptr", scope: !9538, file: !3, line: 1946, type: !144)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 1946, column: 9)
!9539 = distinct !DILexicalBlock(scope: !9532, file: !3, line: 1945, column: 45)
!9540 = !DILocation(line: 1946, column: 9, scope: !9538)
!9541 = !DILocation(line: 1946, column: 9, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 1946, column: 9)
!9543 = !DILocation(line: 1946, column: 7, scope: !9539)
!9544 = !DILocation(line: 1947, column: 7, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 1947, column: 7)
!9546 = !DILocation(line: 1947, column: 12, scope: !9545)
!9547 = !DILocation(line: 1947, column: 7, scope: !9539)
!9548 = !DILocation(line: 1948, column: 43, scope: !9545)
!9549 = !DILocation(line: 1948, column: 48, scope: !9545)
!9550 = !DILocation(line: 1949, column: 5, scope: !9545)
!9551 = !DILocation(line: 1948, column: 4, scope: !9545)
!9552 = !DILocation(line: 1950, column: 3, scope: !9539)
!9553 = !DILocation(line: 1953, column: 6, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 1953, column: 6)
!9555 = !DILocation(line: 1953, column: 22, scope: !9554)
!9556 = !DILocation(line: 1953, column: 6, scope: !9391)
!9557 = !DILocation(line: 1954, column: 3, scope: !9554)
!9558 = !DILocalVariable(name: "__mptr", scope: !9559, file: !3, line: 1962, type: !144)
!9559 = distinct !DILexicalBlock(scope: !9560, file: !3, line: 1962, column: 2)
!9560 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 1962, column: 2)
!9561 = !DILocation(line: 1962, column: 2, scope: !9559)
!9562 = !DILocation(line: 1962, column: 2, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 1962, column: 2)
!9564 = !DILocation(line: 1962, column: 2, scope: !9560)
!9565 = !DILocation(line: 1962, column: 2, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9560, file: !3, line: 1962, column: 2)
!9567 = !DILocation(line: 1962, column: 2, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 1962, column: 2)
!9569 = !DILocation(line: 1962, column: 2, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 1962, column: 2)
!9571 = !DILocalVariable(name: "used_size", scope: !9572, file: !3, line: 1963, type: !172)
!9572 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 1962, column: 32)
!9573 = !DILocation(line: 1963, column: 19, scope: !9572)
!9574 = !DILocalVariable(name: "res", scope: !9572, file: !3, line: 1964, type: !167)
!9575 = !DILocation(line: 1964, column: 20, scope: !9572)
!9576 = !DILocation(line: 1966, column: 7, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 1966, column: 7)
!9578 = !DILocation(line: 1966, column: 12, scope: !9577)
!9579 = !DILocation(line: 1966, column: 7, scope: !9572)
!9580 = !DILocation(line: 1967, column: 4, scope: !9577)
!9581 = !DILocation(line: 1973, column: 10, scope: !9572)
!9582 = !DILocation(line: 1973, column: 15, scope: !9572)
!9583 = !DILocation(line: 1973, column: 7, scope: !9572)
!9584 = !DILocation(line: 1974, column: 34, scope: !9572)
!9585 = !DILocation(line: 1974, column: 39, scope: !9572)
!9586 = !DILocation(line: 1974, column: 11, scope: !9572)
!9587 = !DILocation(line: 1974, column: 9, scope: !9572)
!9588 = !DILocation(line: 1975, column: 11, scope: !9572)
!9589 = !DILocation(line: 1975, column: 19, scope: !9572)
!9590 = !DILocation(line: 1975, column: 47, scope: !9572)
!9591 = !DILocation(line: 1975, column: 42, scope: !9572)
!9592 = !DILocation(line: 1975, column: 9, scope: !9572)
!9593 = !DILocation(line: 1976, column: 15, scope: !9572)
!9594 = !DILocation(line: 1976, column: 37, scope: !9572)
!9595 = !DILocation(line: 1976, column: 23, scope: !9572)
!9596 = !DILocation(line: 1976, column: 21, scope: !9572)
!9597 = !DILocation(line: 1976, column: 13, scope: !9572)
!9598 = !DILocation(line: 1977, column: 8, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 1977, column: 7)
!9600 = !DILocation(line: 1977, column: 13, scope: !9599)
!9601 = !DILocation(line: 1977, column: 7, scope: !9572)
!9602 = !DILocalVariable(name: "__UNIQUE_ID___x330", scope: !9603, file: !3, line: 1978, type: !178)
!9603 = distinct !DILexicalBlock(scope: !9599, file: !3, line: 1978, column: 15)
!9604 = !DILocation(line: 1978, column: 15, scope: !9603)
!9605 = !DILocalVariable(name: "__UNIQUE_ID___y331", scope: !9603, file: !3, line: 1978, type: !178)
!9606 = !DILocation(line: 1978, column: 7, scope: !9599)
!9607 = !DILocation(line: 1978, column: 13, scope: !9599)
!9608 = !DILocation(line: 1978, column: 4, scope: !9599)
!9609 = !DILocation(line: 1980, column: 10, scope: !9572)
!9610 = !DILocation(line: 1980, column: 15, scope: !9572)
!9611 = !DILocation(line: 1980, column: 7, scope: !9572)
!9612 = !DILocation(line: 1981, column: 34, scope: !9572)
!9613 = !DILocation(line: 1981, column: 39, scope: !9572)
!9614 = !DILocation(line: 1981, column: 11, scope: !9572)
!9615 = !DILocation(line: 1981, column: 9, scope: !9572)
!9616 = !DILocation(line: 1982, column: 11, scope: !9572)
!9617 = !DILocation(line: 1982, column: 19, scope: !9572)
!9618 = !DILocation(line: 1982, column: 51, scope: !9572)
!9619 = !DILocation(line: 1982, column: 44, scope: !9572)
!9620 = !DILocation(line: 1982, column: 9, scope: !9572)
!9621 = !DILocation(line: 1983, column: 15, scope: !9572)
!9622 = !DILocation(line: 1983, column: 37, scope: !9572)
!9623 = !DILocation(line: 1983, column: 23, scope: !9572)
!9624 = !DILocation(line: 1983, column: 21, scope: !9572)
!9625 = !DILocation(line: 1983, column: 13, scope: !9572)
!9626 = !DILocation(line: 1984, column: 8, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 1984, column: 7)
!9628 = !DILocation(line: 1984, column: 13, scope: !9627)
!9629 = !DILocation(line: 1984, column: 7, scope: !9572)
!9630 = !DILocalVariable(name: "__UNIQUE_ID___x332", scope: !9631, file: !3, line: 1985, type: !178)
!9631 = distinct !DILexicalBlock(scope: !9627, file: !3, line: 1985, column: 17)
!9632 = !DILocation(line: 1985, column: 17, scope: !9631)
!9633 = !DILocalVariable(name: "__UNIQUE_ID___y333", scope: !9631, file: !3, line: 1985, type: !178)
!9634 = !DILocation(line: 1985, column: 9, scope: !9627)
!9635 = !DILocation(line: 1985, column: 15, scope: !9627)
!9636 = !DILocation(line: 1985, column: 4, scope: !9627)
!9637 = !DILocation(line: 1987, column: 10, scope: !9572)
!9638 = !DILocation(line: 1987, column: 15, scope: !9572)
!9639 = !DILocation(line: 1987, column: 7, scope: !9572)
!9640 = !DILocation(line: 1988, column: 34, scope: !9572)
!9641 = !DILocation(line: 1988, column: 39, scope: !9572)
!9642 = !DILocation(line: 1988, column: 11, scope: !9572)
!9643 = !DILocation(line: 1988, column: 9, scope: !9572)
!9644 = !DILocation(line: 1989, column: 11, scope: !9572)
!9645 = !DILocation(line: 1989, column: 19, scope: !9572)
!9646 = !DILocation(line: 1990, column: 14, scope: !9572)
!9647 = !DILocation(line: 1989, column: 49, scope: !9572)
!9648 = !DILocation(line: 1989, column: 9, scope: !9572)
!9649 = !DILocation(line: 1991, column: 15, scope: !9572)
!9650 = !DILocation(line: 1991, column: 37, scope: !9572)
!9651 = !DILocation(line: 1991, column: 23, scope: !9572)
!9652 = !DILocation(line: 1991, column: 21, scope: !9572)
!9653 = !DILocation(line: 1991, column: 13, scope: !9572)
!9654 = !DILocation(line: 1992, column: 8, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 1992, column: 7)
!9656 = !DILocation(line: 1992, column: 13, scope: !9655)
!9657 = !DILocation(line: 1992, column: 7, scope: !9572)
!9658 = !DILocalVariable(name: "__UNIQUE_ID___x334", scope: !9659, file: !3, line: 1993, type: !178)
!9659 = distinct !DILexicalBlock(scope: !9655, file: !3, line: 1993, column: 22)
!9660 = !DILocation(line: 1993, column: 22, scope: !9659)
!9661 = !DILocalVariable(name: "__UNIQUE_ID___y335", scope: !9659, file: !3, line: 1993, type: !178)
!9662 = !DILocation(line: 1993, column: 14, scope: !9655)
!9663 = !DILocation(line: 1993, column: 20, scope: !9655)
!9664 = !DILocation(line: 1993, column: 4, scope: !9655)
!9665 = !DILocalVariable(name: "__mptr", scope: !9666, file: !3, line: 1962, type: !144)
!9666 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 1962, column: 2)
!9667 = !DILocation(line: 1962, column: 2, scope: !9666)
!9668 = !DILocation(line: 1962, column: 2, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 1962, column: 2)
!9670 = distinct !{!9670, !9564, !9671}
!9671 = !DILocation(line: 1995, column: 2, scope: !9560)
!9672 = !DILocation(line: 1997, column: 14, scope: !9391)
!9673 = !DILocation(line: 1997, column: 12, scope: !9391)
!9674 = !DILocation(line: 1998, column: 16, scope: !9391)
!9675 = !DILocation(line: 1998, column: 14, scope: !9391)
!9676 = !DILocation(line: 1999, column: 21, scope: !9391)
!9677 = !DILocation(line: 1999, column: 19, scope: !9391)
!9678 = !DILocalVariable(name: "__mptr", scope: !9679, file: !3, line: 2006, type: !144)
!9679 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 2006, column: 2)
!9680 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 2006, column: 2)
!9681 = !DILocation(line: 2006, column: 2, scope: !9679)
!9682 = !DILocation(line: 2006, column: 2, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9679, file: !3, line: 2006, column: 2)
!9684 = !DILocation(line: 2006, column: 2, scope: !9680)
!9685 = !DILocation(line: 2006, column: 2, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 2006, column: 2)
!9687 = !DILocation(line: 2006, column: 2, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 2006, column: 2)
!9689 = !DILocation(line: 2006, column: 2, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 2006, column: 2)
!9691 = !DILocalVariable(name: "b", scope: !9692, file: !3, line: 2007, type: !156)
!9692 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 2006, column: 32)
!9693 = !DILocation(line: 2007, column: 19, scope: !9692)
!9694 = !DILocation(line: 2009, column: 7, scope: !9692)
!9695 = !DILocation(line: 2009, column: 12, scope: !9692)
!9696 = !DILocation(line: 2009, column: 5, scope: !9692)
!9697 = !DILocation(line: 2010, column: 8, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9692, file: !3, line: 2010, column: 7)
!9699 = !DILocation(line: 2010, column: 10, scope: !9698)
!9700 = !DILocation(line: 2010, column: 14, scope: !9698)
!9701 = !DILocation(line: 2010, column: 19, scope: !9698)
!9702 = !DILocation(line: 2010, column: 7, scope: !9692)
!9703 = !DILocation(line: 2011, column: 4, scope: !9698)
!9704 = !DILocation(line: 2018, column: 15, scope: !9692)
!9705 = !DILocation(line: 2018, column: 23, scope: !9692)
!9706 = !DILocation(line: 2018, column: 21, scope: !9692)
!9707 = !DILocation(line: 2018, column: 33, scope: !9692)
!9708 = !DILocation(line: 2018, column: 6, scope: !9692)
!9709 = !DILocation(line: 2018, column: 10, scope: !9692)
!9710 = !DILocation(line: 2019, column: 19, scope: !9692)
!9711 = !DILocation(line: 2019, column: 27, scope: !9692)
!9712 = !DILocation(line: 2019, column: 25, scope: !9692)
!9713 = !DILocation(line: 2019, column: 39, scope: !9692)
!9714 = !DILocation(line: 2019, column: 8, scope: !9692)
!9715 = !DILocation(line: 2019, column: 12, scope: !9692)
!9716 = !DILocation(line: 2020, column: 29, scope: !9692)
!9717 = !DILocation(line: 2020, column: 37, scope: !9692)
!9718 = !DILocation(line: 2020, column: 35, scope: !9692)
!9719 = !DILocation(line: 2020, column: 54, scope: !9692)
!9720 = !DILocation(line: 2020, column: 13, scope: !9692)
!9721 = !DILocation(line: 2020, column: 17, scope: !9692)
!9722 = !DILocation(line: 2022, column: 42, scope: !9692)
!9723 = !DILocation(line: 2022, column: 45, scope: !9692)
!9724 = !DILocation(line: 2022, column: 3, scope: !9692)
!9725 = !DILocation(line: 2025, column: 15, scope: !9692)
!9726 = !DILocation(line: 2025, column: 6, scope: !9692)
!9727 = !DILocation(line: 2025, column: 12, scope: !9692)
!9728 = !DILocation(line: 2026, column: 17, scope: !9692)
!9729 = !DILocation(line: 2026, column: 8, scope: !9692)
!9730 = !DILocation(line: 2026, column: 14, scope: !9692)
!9731 = !DILocation(line: 2027, column: 22, scope: !9692)
!9732 = !DILocation(line: 2027, column: 13, scope: !9692)
!9733 = !DILocation(line: 2027, column: 19, scope: !9692)
!9734 = !DILocalVariable(name: "__mptr", scope: !9735, file: !3, line: 2006, type: !144)
!9735 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 2006, column: 2)
!9736 = !DILocation(line: 2006, column: 2, scope: !9735)
!9737 = !DILocation(line: 2006, column: 2, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 2006, column: 2)
!9739 = distinct !{!9739, !9684, !9740}
!9740 = !DILocation(line: 2028, column: 2, scope: !9680)
!9741 = !DILocation(line: 2029, column: 1, scope: !9391)
!9742 = distinct !DISubprogram(name: "adjust_bridge_window", scope: !3, file: !3, line: 1861, type: !9743, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9743 = !DISubroutineType(types: !9744)
!9744 = !{null, !145, !167, !153, !172}
!9745 = !DILocalVariable(name: "bridge", arg: 1, scope: !9742, file: !3, line: 1861, type: !145)
!9746 = !DILocation(line: 1861, column: 50, scope: !9742)
!9747 = !DILocalVariable(name: "res", arg: 2, scope: !9742, file: !3, line: 1861, type: !167)
!9748 = !DILocation(line: 1861, column: 75, scope: !9742)
!9749 = !DILocalVariable(name: "add_list", arg: 3, scope: !9742, file: !3, line: 1862, type: !153)
!9750 = !DILocation(line: 1862, column: 24, scope: !9742)
!9751 = !DILocalVariable(name: "new_size", arg: 4, scope: !9742, file: !3, line: 1863, type: !172)
!9752 = !DILocation(line: 1863, column: 22, scope: !9742)
!9753 = !DILocalVariable(name: "add_size", scope: !9742, file: !3, line: 1865, type: !172)
!9754 = !DILocation(line: 1865, column: 18, scope: !9742)
!9755 = !DILocalVariable(name: "size", scope: !9742, file: !3, line: 1865, type: !172)
!9756 = !DILocation(line: 1865, column: 28, scope: !9742)
!9757 = !DILocation(line: 1865, column: 49, scope: !9742)
!9758 = !DILocation(line: 1865, column: 35, scope: !9742)
!9759 = !DILocation(line: 1867, column: 6, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9742, file: !3, line: 1867, column: 6)
!9761 = !DILocation(line: 1867, column: 11, scope: !9760)
!9762 = !DILocation(line: 1867, column: 6, scope: !9742)
!9763 = !DILocation(line: 1868, column: 3, scope: !9760)
!9764 = !DILocation(line: 1870, column: 7, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9742, file: !3, line: 1870, column: 6)
!9766 = !DILocation(line: 1870, column: 6, scope: !9742)
!9767 = !DILocation(line: 1871, column: 3, scope: !9765)
!9768 = !DILocation(line: 1873, column: 6, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9742, file: !3, line: 1873, column: 6)
!9770 = !DILocation(line: 1873, column: 17, scope: !9769)
!9771 = !DILocation(line: 1873, column: 15, scope: !9769)
!9772 = !DILocation(line: 1873, column: 6, scope: !9742)
!9773 = !DILocation(line: 1874, column: 14, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 1873, column: 23)
!9775 = !DILocation(line: 1874, column: 25, scope: !9774)
!9776 = !DILocation(line: 1874, column: 23, scope: !9774)
!9777 = !DILocation(line: 1874, column: 12, scope: !9774)
!9778 = !DILocation(line: 1877, column: 2, scope: !9774)
!9779 = !DILocation(line: 1877, column: 13, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 1877, column: 13)
!9781 = !DILocation(line: 1877, column: 24, scope: !9780)
!9782 = !DILocation(line: 1877, column: 22, scope: !9780)
!9783 = !DILocation(line: 1877, column: 13, scope: !9769)
!9784 = !DILocation(line: 1878, column: 14, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 1877, column: 30)
!9786 = !DILocation(line: 1878, column: 21, scope: !9785)
!9787 = !DILocation(line: 1878, column: 19, scope: !9785)
!9788 = !DILocation(line: 1878, column: 12, scope: !9785)
!9789 = !DILocation(line: 1881, column: 2, scope: !9785)
!9790 = !DILocation(line: 1883, column: 13, scope: !9742)
!9791 = !DILocation(line: 1883, column: 18, scope: !9742)
!9792 = !DILocation(line: 1883, column: 26, scope: !9742)
!9793 = !DILocation(line: 1883, column: 24, scope: !9742)
!9794 = !DILocation(line: 1883, column: 35, scope: !9742)
!9795 = !DILocation(line: 1883, column: 2, scope: !9742)
!9796 = !DILocation(line: 1883, column: 7, scope: !9742)
!9797 = !DILocation(line: 1883, column: 11, scope: !9742)
!9798 = !DILocation(line: 1884, column: 19, scope: !9742)
!9799 = !DILocation(line: 1884, column: 29, scope: !9742)
!9800 = !DILocation(line: 1884, column: 2, scope: !9742)
!9801 = !DILocation(line: 1885, column: 1, scope: !9742)
!9802 = distinct !DISubprogram(name: "div64_u64", scope: !9803, file: !9803, line: 66, type: !9804, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9803 = !DIFile(filename: "./include/linux/math64.h", directory: "/home/lizy2001/genbc/linux")
!9804 = !DISubroutineType(types: !9805)
!9805 = !{!174, !174, !174}
!9806 = !DILocalVariable(name: "dividend", arg: 1, scope: !9802, file: !9803, line: 66, type: !174)
!9807 = !DILocation(line: 66, column: 33, scope: !9802)
!9808 = !DILocalVariable(name: "divisor", arg: 2, scope: !9802, file: !9803, line: 66, type: !174)
!9809 = !DILocation(line: 66, column: 47, scope: !9802)
!9810 = !DILocation(line: 68, column: 9, scope: !9802)
!9811 = !DILocation(line: 68, column: 20, scope: !9802)
!9812 = !DILocation(line: 68, column: 18, scope: !9802)
!9813 = !DILocation(line: 68, column: 2, scope: !9802)
!9814 = distinct !DISubprogram(name: "pdev_assign_resources_sorted", scope: !3, file: !3, line: 482, type: !9815, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9815 = !DISubroutineType(types: !9816)
!9816 = !{null, !145, !153, !153}
!9817 = !DILocalVariable(name: "dev", arg: 1, scope: !9814, file: !3, line: 482, type: !145)
!9818 = !DILocation(line: 482, column: 58, scope: !9814)
!9819 = !DILocalVariable(name: "add_head", arg: 2, scope: !9814, file: !3, line: 483, type: !153)
!9820 = !DILocation(line: 483, column: 25, scope: !9814)
!9821 = !DILocalVariable(name: "fail_head", arg: 3, scope: !9814, file: !3, line: 484, type: !153)
!9822 = !DILocation(line: 484, column: 25, scope: !9814)
!9823 = !DILocalVariable(name: "head", scope: !9814, file: !3, line: 486, type: !149)
!9824 = !DILocation(line: 486, column: 2, scope: !9814)
!9825 = !DILocation(line: 488, column: 23, scope: !9814)
!9826 = !DILocation(line: 488, column: 2, scope: !9814)
!9827 = !DILocation(line: 489, column: 35, scope: !9814)
!9828 = !DILocation(line: 489, column: 45, scope: !9814)
!9829 = !DILocation(line: 489, column: 2, scope: !9814)
!9830 = !DILocation(line: 491, column: 1, scope: !9814)
!9831 = distinct !DISubprogram(name: "list_add", scope: !6550, file: !6550, line: 84, type: !8512, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !274)
!9832 = !DILocalVariable(name: "new", arg: 1, scope: !9831, file: !6550, line: 84, type: !153)
!9833 = !DILocation(line: 84, column: 47, scope: !9831)
!9834 = !DILocalVariable(name: "head", arg: 2, scope: !9831, file: !6550, line: 84, type: !153)
!9835 = !DILocation(line: 84, column: 70, scope: !9831)
!9836 = !DILocation(line: 86, column: 13, scope: !9831)
!9837 = !DILocation(line: 86, column: 18, scope: !9831)
!9838 = !DILocation(line: 86, column: 24, scope: !9831)
!9839 = !DILocation(line: 86, column: 30, scope: !9831)
!9840 = !DILocation(line: 86, column: 2, scope: !9831)
!9841 = !DILocation(line: 87, column: 1, scope: !9831)
