; ModuleID = '../bcout/drivers/pci/pci.llvm.bc'
source_filename = "drivers/pci/pci.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall7.init\22, \22a\22\09"
module asm "__initcall_pci_resource_alignment_sysfs_init7:\09\09\09"
module asm ".long\09pci_resource_alignment_sysfs_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"
module asm ".section\09\22.initcall0.init\22, \22a\22\09"
module asm "__initcall_pci_realloc_setup_params0:\09\09\09"
module asm ".long\09pci_realloc_setup_params - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.obs_kernel_param = type { i8*, i32 (i8*)*, i32 }
%struct.pci_platform_pm_ops = type { i1 (%struct.pci_dev*)*, i1 (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i1)*, i1 (%struct.pci_dev*)* }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.65, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type { %struct.module*, %struct.device*, %struct.device_node*, %struct.list_head, i32 (%struct.msi_controller*, %struct.pci_dev*, %struct.msi_desc*)*, i32 (%struct.msi_controller*, %struct.pci_dev*, i32, i32)*, void (%struct.msi_controller*, i32)* }
%struct.module = type opaque
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.attribute = type { i8*, i16 }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.msi_desc = type { %struct.list_head, i32, i32, %struct.device*, %struct.msi_msg, %struct.irq_affinity_desc*, void (%struct.msi_desc*, i8*)*, i8*, %union.anon.66 }
%struct.msi_msg = type { i32, i32, i32 }
%struct.irq_affinity_desc = type { %struct.cpumask, i8 }
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { i32, %struct.anon.68, %union.anon.69 }
%struct.anon.68 = type { i16, i16, i32 }
%union.anon.69 = type { i8* }
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type { %struct.hotplug_slot_ops*, %struct.list_head, %struct.pci_slot*, %struct.module*, i8* }
%struct.hotplug_slot_ops = type { i32 (%struct.hotplug_slot*)*, i32 (%struct.hotplug_slot*)*, i32 (%struct.hotplug_slot*, i8)*, i32 (%struct.hotplug_slot*, i32)*, i32 (%struct.hotplug_slot*, i8*)*, i32 (%struct.hotplug_slot*, i8*)*, i32 (%struct.hotplug_slot*, i8*)*, i32 (%struct.hotplug_slot*, i8*)*, i32 (%struct.hotplug_slot*, i32)* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.pci_vpd = type opaque
%union.anon.65 = type { %struct.pci_sriov* }
%struct.pci_sriov = type { i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i32, i8, i8, i16, %struct.pci_dev*, %struct.pci_dev*, i32, i8, i16, i16, [6 x i64], i8 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.kmem_cache = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.dmi_system_id = type { {}*, i8*, [4 x %struct.dmi_strmatch], i8* }
%struct.dmi_strmatch = type { i8, [79 x i8] }
%struct.bus_attribute = type { %struct.attribute, i64 (%struct.bus_type*, i8*)*, i64 (%struct.bus_type*, i8*, i64)* }
%struct.pci_cap_saved_state = type { %struct.hlist_node, %struct.pci_cap_saved_data }
%struct.pci_cap_saved_data = type { i16, i8, i32, [0 x i32] }
%struct.pci_saved_state = type { [16 x i32], [0 x %struct.pci_cap_saved_data] }
%struct.pci_devres = type { i8, i32 }
%struct.pci_pme_device = type { %struct.list_head, %struct.pci_dev* }
%struct.acpi_device = type { i32, i8*, %struct.fwnode_handle, %struct.acpi_device*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.acpi_device_status, %struct.acpi_device_flags, %struct.acpi_device_pnp, %struct.acpi_device_power, %struct.acpi_device_wakeup, %struct.acpi_device_perf, %struct.acpi_device_dir, %struct.acpi_device_data, %struct.acpi_scan_handler*, %struct.acpi_hotplug_context*, %struct.acpi_driver*, %struct.acpi_gpio_mapping*, i8*, %struct.device, i32, i32, %struct.list_head, %struct.mutex, void (%struct.acpi_device*)* }
%struct.acpi_device_status = type { i32 }
%struct.acpi_device_flags = type { i32 }
%struct.acpi_device_pnp = type { [8 x i8], %struct.acpi_pnp_type, i64, i8*, %struct.list_head, [40 x i8], [20 x i8], %union.acpi_object* }
%struct.acpi_pnp_type = type { i32 }
%union.acpi_object = type { %struct.anon.75 }
%struct.anon.75 = type { i32, i32, i64, i32 }
%struct.acpi_device_power = type { i32, %struct.acpi_device_power_flags, [5 x %struct.acpi_device_power_state] }
%struct.acpi_device_power_flags = type { i32 }
%struct.acpi_device_power_state = type { %struct.anon.77, i32, i32, %struct.list_head }
%struct.anon.77 = type { i8 }
%struct.acpi_device_wakeup = type { i8*, i64, i64, %struct.list_head, %struct.acpi_device_wakeup_flags, %struct.acpi_device_wakeup_context, %struct.wakeup_source*, i32, i32 }
%struct.acpi_device_wakeup_flags = type { i8 }
%struct.acpi_device_wakeup_context = type { void (%struct.acpi_device_wakeup_context*)*, %struct.device* }
%struct.acpi_device_perf = type { i32, %struct.acpi_device_perf_flags, i32, %struct.acpi_device_perf_state* }
%struct.acpi_device_perf_flags = type { i8 }
%struct.acpi_device_perf_state = type { %struct.anon.78, i8, i8, i32 }
%struct.anon.78 = type { i8 }
%struct.acpi_device_dir = type { %struct.proc_dir_entry* }
%struct.acpi_device_data = type { %union.acpi_object*, %struct.list_head, %union.acpi_object*, %struct.list_head }
%struct.acpi_scan_handler = type { %struct.acpi_device_id*, %struct.list_head, i1 (i8*, %struct.acpi_device_id**)*, i32 (%struct.acpi_device*, %struct.acpi_device_id*)*, void (%struct.acpi_device*)*, void (%struct.device*)*, void (%struct.device*)*, %struct.acpi_hotplug_profile }
%struct.acpi_hotplug_profile = type { %struct.kobject, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*)*, i8 }
%struct.acpi_hotplug_context = type { %struct.acpi_device*, i32 (%struct.acpi_device*, i32)*, void (%struct.acpi_device*, i32)*, void (%struct.acpi_device*)* }
%struct.acpi_driver = type { [80 x i8], [80 x i8], %struct.acpi_device_id*, i32, %struct.acpi_device_ops, %struct.device_driver, %struct.module* }
%struct.acpi_device_ops = type { i32 (%struct.acpi_device*)*, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*, i32)* }
%struct.acpi_gpio_mapping = type opaque
%struct.pci_sysdata = type { i32, i32, %struct.acpi_device*, i8*, i8*, %struct.pci_dev* }

@pci_slot_mutex = dso_local global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @pci_slot_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @pci_slot_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !0
@.str = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"D0\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"D1\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"D2\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"D3hot\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"D3cold\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@pci_power_names = dso_local global [7 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0)], align 16, !dbg !4705
@pci_domains_supported = dso_local global i32 1, align 4, !dbg !4710
@pci_cardbus_io_size = dso_local global i64 256, align 8, !dbg !4712
@pci_cardbus_mem_size = dso_local global i64 67108864, align 8, !dbg !4714
@pci_hotplug_io_size = dso_local global i64 256, align 8, !dbg !4716
@pci_hotplug_mmio_size = dso_local global i64 2097152, align 8, !dbg !4718
@pci_hotplug_mmio_pref_size = dso_local global i64 2097152, align 8, !dbg !4720
@pci_hotplug_bus_size = dso_local global i64 1, align 8, !dbg !4722
@pcie_bus_config = dso_local global i32 1, align 4, !dbg !4724
@pci_dfl_cache_line_size = dso_local global i8 16, align 1, !dbg !4726
@pcibios_max_latency = dso_local global i32 255, align 4, !dbg !4728
@pcie_ats_disabled = internal global i8 0, align 1, !dbg !4767
@__setup_str_pcie_port_pm_setup = internal constant [14 x i8] c"pcie_port_pm=\00", section ".init.rodata", align 1, !dbg !4809
@__setup_pcie_port_pm_setup = internal global %struct.obs_kernel_param { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__setup_str_pcie_port_pm_setup, i32 0, i32 0), i32 (i8*)* @pcie_port_pm_setup, i32 0 }, section ".init.setup", align 8, !dbg !4730
@.str.7 = private unnamed_addr constant [27 x i8] c"can't ioremap BAR %d: %pR\0A\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"drivers/pci/pci.c\00", align 1
@pci_acs_enable = internal global i32 0, align 4, !dbg !4775
@pci_platform_pm = internal global %struct.pci_platform_pm_ops* null, align 8, !dbg !4777
@.str.9 = private unnamed_addr constant [31 x i8] c"unrecognized suspend event %d\0A\00", align 1
@pci_disable_device.__warned = internal global i8 0, section ".data.once", align 1, !dbg !4741
@.str.10 = private unnamed_addr constant [41 x i8] c"%s %s: disabling already-disabled device\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"can't enable PME#\0A\00", align 1
@pci_pme_list_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @pci_pme_list_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @pci_pme_list_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4822
@pci_pme_list = internal global %struct.list_head { %struct.list_head* @pci_pme_list, %struct.list_head* @pci_pme_list }, align 8, !dbg !4824
@system_freezable_wq = external dso_local global %struct.workqueue_struct*, align 8
@pci_pme_work = internal global %struct.delayed_work { %struct.work_struct { %struct.atomic64_t { i64 68719476704 }, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.delayed_work* @pci_pme_work to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.delayed_work* @pci_pme_work to i8*), i64 8) to %struct.list_head*) }, void (%struct.work_struct*)* @pci_pme_list_scan }, %struct.timer_list { %struct.hlist_node { %struct.hlist_node* inttoptr (i64 -2401263026318605568 to %struct.hlist_node*), %struct.hlist_node** null }, i64 0, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152 }, %struct.workqueue_struct* null, i32 0 }, align 8, !dbg !4826
@pci_bridge_d3_disable = internal global i8 0, align 1, !dbg !4771
@pci_bridge_d3_force = internal global i8 0, align 1, !dbg !4773
@.str.12 = private unnamed_addr constant [38 x i8] c"unsupported PM cap regs version (%u)\0A\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"supports%s%s\0A\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c" D1\00", align 1
@.str.15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.16 = private unnamed_addr constant [4 x i8] c" D2\00", align 1
@.str.17 = private unnamed_addr constant [31 x i8] c"PME# supported from%s%s%s%s%s\0A\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c" D0\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c" D3hot\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c" D3cold\00", align 1
@.str.21 = private unnamed_addr constant [47 x i8] c"unable to preallocate PCI Express save buffer\0A\00", align 1
@.str.22 = private unnamed_addr constant [41 x i8] c"unable to preallocate PCI-X save buffer\0A\00", align 1
@.str.23 = private unnamed_addr constant [43 x i8] c"unable to allocate suspend buffer for LTR\0A\00", align 1
@pcie_ari_disabled = internal global i8 0, align 1, !dbg !4765
@ioport_resource = external dso_local global %struct.resource, align 8
@iomem_resource = external dso_local global %struct.resource, align 8
@pci_remap_iospace.__warned = internal global i8 0, section ".data.once", align 1, !dbg !4744
@.str.24 = private unnamed_addr constant [54 x i8] c"This architecture does not support memory mapped I/O\0A\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"invalid resource\0A\00", align 1
@.str.26 = private unnamed_addr constant [39 x i8] c"can't request region for resource %pR\0A\00", align 1
@.str.27 = private unnamed_addr constant [33 x i8] c"ioremap failed for resource %pR\0A\00", align 1
@pci_cache_line_size = dso_local global i8 0, align 1, !dbg !4763
@.str.28 = private unnamed_addr constant [40 x i8] c"cache line size of %d is not supported\0A\00", align 1
@.str.29 = private unnamed_addr constant [83 x i8] c"timed out waiting for pending transaction; performing function level reset anyway\0A\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"FLR\00", align 1
@pci_bus_sem = external dso_local global %struct.rw_semaphore, align 8
@.str.31 = private unnamed_addr constant [50 x i8] c"Data Link Layer Link Active not set in 1000 msec\0A\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"bus reset\00", align 1
@pcie_link_speed = external dso_local constant [0 x i8], align 1
@.str.33 = private unnamed_addr constant [53 x i8] c"%u.%03u Gb/s available PCIe bandwidth (%s x%d link)\0A\00", align 1
@.str.34 = private unnamed_addr constant [112 x i8] c"%u.%03u Gb/s available PCIe bandwidth, limited by %s x%d link at %s (capable of %u.%03u Gb/s with %s x%d link)\0A\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"<unknown>\00", align 1
@arch_set_vga_state = internal global i32 (%struct.pci_dev*, i1, i32, i32)* null, align 8, !dbg !4803
@acpi_disabled = external dso_local global i32, align 4
@.str.36 = private unnamed_addr constant [5 x i8] c"_PR3\00", align 1
@.str.37 = private unnamed_addr constant [35 x i8] c"Unable to allocate DMA alias mask\0A\00", align 1
@.str.38 = private unnamed_addr constant [37 x i8] c"Enabling fixed DMA alias to %02x.%d\0A\00", align 1
@.str.39 = private unnamed_addr constant [66 x i8] c"Enabling fixed DMA alias for devfn range from %02x.%d to %02x.%d\0A\00", align 1
@.str.40 = private unnamed_addr constant [41 x i8] c"Can't reassign resources to host bridge\0A\00", align 1
@__UNIQUE_ID___addressable_pci_resource_alignment_sysfs_init308 = internal global i8* bitcast (i32 ()* @pci_resource_alignment_sysfs_init to i8*), section ".discard.addressable", align 8, !dbg !4751
@__setup_str_pci_setup = internal constant [4 x i8] c"pci\00", section ".init.rodata", align 1, !dbg !4879
@__setup_pci_setup = internal global %struct.obs_kernel_param { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__setup_str_pci_setup, i32 0, i32 0), i32 (i8*)* @pci_setup, i32 1 }, section ".init.setup", align 8, !dbg !4753
@__UNIQUE_ID___addressable_pci_realloc_setup_params309 = internal global i8* bitcast (i32 ()* @pci_realloc_setup_params to i8*), section ".discard.addressable", align 8, !dbg !4755
@isa_dma_bridge_buggy = dso_local global i32 0, align 4, !dbg !4757
@pci_pci_problems = dso_local global i32 0, align 4, !dbg !4759
@pci_pm_d3hot_delay = dso_local global i32 0, align 4, !dbg !4761
@pci_early_dump = dso_local global i8 0, align 1, !dbg !4769
@.str.41 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.43 = private unnamed_addr constant [42 x i8] c"invalid power transition (from %s to %s)\0A\00", align 1
@.str.44 = private unnamed_addr constant [68 x i8] c"can't change power state from %s to %s (config space inaccessible)\0A\00", align 1
@pci_raw_set_power_state._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !4814
@__func__.pci_raw_set_power_state = private unnamed_addr constant [24 x i8] c"pci_raw_set_power_state\00", align 1
@.str.45 = private unnamed_addr constant [45 x i8] c"refused to change power state from %s to %s\0A\00", align 1
@.str.46 = private unnamed_addr constant [24 x i8] c"buffer not found in %s\0A\00", align 1
@__func__.pci_save_pcie_state = private unnamed_addr constant [20 x i8] c"pci_save_pcie_state\00", align 1
@__func__.pci_save_pcix_state = private unnamed_addr constant [20 x i8] c"pci_save_pcix_state\00", align 1
@.str.47 = private unnamed_addr constant [62 x i8] c"no suspend buffer for LTR; ASPM issues possible after resume\0A\00", align 1
@disable_acs_redir_param = internal global i8* null, align 8, !dbg !4820
@pci_disable_acs_redir.__print_once = internal global i8 0, section ".data.once", align 1, !dbg !4817
@.str.48 = private unnamed_addr constant [52 x i8] c"\016PCI: Can't parse disable_acs_redir parameter: %s\0A\00", align 1
@.str.49 = private unnamed_addr constant [84 x i8] c"cannot disable ACS redirect for this hardware as it does not have ACS capabilities\0A\00", align 1
@.str.50 = private unnamed_addr constant [23 x i8] c"disabled ACS redirect\0A\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"pci:\00", align 1
@.str.52 = private unnamed_addr constant [18 x i8] c"%hx:%hx:%hx:%hx%n\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"%hx:%hx%n\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"/%x.%x%c\00", align 1
@.str.55 = private unnamed_addr constant [14 x i8] c"%x:%x:%x.%x%c\00", align 1
@.str.56 = private unnamed_addr constant [11 x i8] c"%x:%x.%x%c\00", align 1
@.str.57 = private unnamed_addr constant [40 x i8] c"Error enabling bridge (%d), continuing\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.58 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.59 = private unnamed_addr constant [21 x i8] c"X299 DESIGNARE EX-CF\00", align 1
@bridge_d3_blacklist = internal constant [2 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }] [{ i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 13, [79 x i8] c"Gigabyte Technology Co., Ltd.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 14, [79 x i8] c"X299 DESIGNARE EX-CF\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } zeroinitializer], align 16, !dbg !4834
@.str.61 = private unnamed_addr constant [30 x i8] c"Unsupported EA entry BEI: %u\0A\00", align 1
@.str.62 = private unnamed_addr constant [32 x i8] c"Unsupported EA properties: %#x\0A\00", align 1
@.str.63 = private unnamed_addr constant [35 x i8] c"EA Entry crosses address boundary\0A\00", align 1
@.str.64 = private unnamed_addr constant [52 x i8] c"EA Entry Size (%d) does not match length read (%d)\0A\00", align 1
@.str.65 = private unnamed_addr constant [58 x i8] c"BAR %d: %pR (from Enhanced Allocation, properties %#02x)\0A\00", align 1
@.str.66 = private unnamed_addr constant [55 x i8] c"ROM: %pR (from Enhanced Allocation, properties %#02x)\0A\00", align 1
@.str.67 = private unnamed_addr constant [61 x i8] c"VF BAR %d: %pR (from Enhanced Allocation, properties %#02x)\0A\00", align 1
@.str.68 = private unnamed_addr constant [62 x i8] c"BEI %d res: %pR (from Enhanced Allocation, properties %#02x)\0A\00", align 1
@.str.69 = private unnamed_addr constant [27 x i8] c"BAR %d: can't reserve %pR\0A\00", align 1
@pci_lock = external dso_local global %struct.raw_spinlock, align 1
@.str.70 = private unnamed_addr constant [36 x i8] c"not ready %dms after %s; giving up\0A\00", align 1
@.str.71 = private unnamed_addr constant [34 x i8] c"not ready %dms after %s; waiting\0A\00", align 1
@.str.72 = private unnamed_addr constant [21 x i8] c"ready %dms after %s\0A\00", align 1
@.str.73 = private unnamed_addr constant [86 x i8] c"timed out waiting for pending transaction; performing AF function level reset anyway\0A\00", align 1
@.str.74 = private unnamed_addr constant [7 x i8] c"AF_FLR\00", align 1
@.str.75 = private unnamed_addr constant [13 x i8] c"PM D3hot->D0\00", align 1
@resource_alignment_lock = internal global %struct.spinlock undef, align 1, !dbg !4862
@resource_alignment_param = internal global i8* null, align 8, !dbg !4864
@pci_specified_resource_alignment.__print_once = internal global i8 0, section ".data.once", align 1, !dbg !4857
@.str.76 = private unnamed_addr constant [55 x i8] c"\016PCI: Ignoring requested alignments (PCI_PROBE_ONLY)\0A\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"%d%n\00", align 1
@.str.78 = private unnamed_addr constant [53 x i8] c"\013PCI: Can't parse resource_alignment parameter: %s\0A\00", align 1
@pci_flags = external dso_local global i32, align 4
@.str.79 = private unnamed_addr constant [47 x i8] c"BAR%d %pR: ignoring requested alignment %#llx\0A\00", align 1
@.str.80 = private unnamed_addr constant [42 x i8] c"BAR%d %pR: requesting alignment to %#llx\0A\00", align 1
@pci_bus_type = external dso_local global %struct.bus_type, align 8
@bus_attr_resource_alignment = internal global %struct.bus_attribute { %struct.attribute { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.81, i32 0, i32 0), i16 420 }, i64 (%struct.bus_type*, i8*)* @resource_alignment_show, i64 (%struct.bus_type*, i8*, i64)* @resource_alignment_store }, align 8, !dbg !4866
@.str.81 = private unnamed_addr constant [19 x i8] c"resource_alignment\00", align 1
@.str.82 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"nomsi\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"noats\00", align 1
@.str.85 = private unnamed_addr constant [25 x i8] c"\016PCIe: ATS is disabled\0A\00", align 1
@.str.86 = private unnamed_addr constant [6 x i8] c"noaer\00", align 1
@.str.87 = private unnamed_addr constant [10 x i8] c"earlydump\00", align 1
@.str.88 = private unnamed_addr constant [9 x i8] c"realloc=\00", align 1
@.str.89 = private unnamed_addr constant [8 x i8] c"realloc\00", align 1
@.str.90 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.91 = private unnamed_addr constant [10 x i8] c"nodomains\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"noari\00", align 1
@.str.93 = private unnamed_addr constant [10 x i8] c"cbiosize=\00", align 1
@.str.94 = private unnamed_addr constant [11 x i8] c"cbmemsize=\00", align 1
@.str.95 = private unnamed_addr constant [20 x i8] c"resource_alignment=\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"ecrc=\00", align 1
@.str.97 = private unnamed_addr constant [10 x i8] c"hpiosize=\00", align 1
@.str.98 = private unnamed_addr constant [12 x i8] c"hpmmiosize=\00", align 1
@.str.99 = private unnamed_addr constant [16 x i8] c"hpmmioprefsize=\00", align 1
@.str.100 = private unnamed_addr constant [11 x i8] c"hpmemsize=\00", align 1
@.str.101 = private unnamed_addr constant [11 x i8] c"hpbussize=\00", align 1
@.str.102 = private unnamed_addr constant [18 x i8] c"pcie_bus_tune_off\00", align 1
@.str.103 = private unnamed_addr constant [14 x i8] c"pcie_bus_safe\00", align 1
@.str.104 = private unnamed_addr constant [14 x i8] c"pcie_bus_perf\00", align 1
@.str.105 = private unnamed_addr constant [19 x i8] c"pcie_bus_peer2peer\00", align 1
@.str.106 = private unnamed_addr constant [14 x i8] c"pcie_scan_all\00", align 1
@.str.107 = private unnamed_addr constant [19 x i8] c"disable_acs_redir=\00", align 1
@.str.108 = private unnamed_addr constant [28 x i8] c"\013PCI: Unknown option `%s'\0A\00", align 1
@llvm.used = appending global [4 x i8*] [i8* bitcast (%struct.obs_kernel_param* @__setup_pcie_port_pm_setup to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_resource_alignment_sysfs_init308 to i8*), i8* bitcast (%struct.obs_kernel_param* @__setup_pci_setup to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_pci_realloc_setup_params309 to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_ats_disabled() #0 !dbg !4888 {
entry:
  %0 = load i8, i8* @pcie_ats_disabled, align 1, !dbg !4889
  %tobool = trunc i8 %0 to i1, !dbg !4889
  ret i1 %tobool, !dbg !4890
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @pcie_port_pm_setup(i8* %str) #1 section ".init.text" !dbg !4891 {
entry:
  %str.addr = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !4892, metadata !DIExpression()), !dbg !4893
  %0 = load i8*, i8** %str.addr, align 8, !dbg !4894
  %call = call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0)) #11, !dbg !4896
  %tobool = icmp ne i32 %call, 0, !dbg !4896
  br i1 %tobool, label %if.else, label %if.then, !dbg !4897

if.then:                                          ; preds = %entry
  store i8 1, i8* @pci_bridge_d3_disable, align 1, !dbg !4898
  br label %if.end4, !dbg !4899

if.else:                                          ; preds = %entry
  %1 = load i8*, i8** %str.addr, align 8, !dbg !4900
  %call1 = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0)) #11, !dbg !4902
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4902
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !4903

if.then3:                                         ; preds = %if.else
  store i8 1, i8* @pci_bridge_d3_force, align 1, !dbg !4904
  br label %if.end, !dbg !4905

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  ret i32 1, !dbg !4906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @pci_bus_max_busnr(%struct.pci_bus* %bus) #0 !dbg !4907 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %tmp = alloca %struct.pci_bus*, align 8
  %max = alloca i8, align 1
  %n = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.pci_bus*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp13 = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !4910, metadata !DIExpression()), !dbg !4911
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %tmp, metadata !4912, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.declare(metadata i8* %max, metadata !4914, metadata !DIExpression()), !dbg !4915
  call void @llvm.dbg.declare(metadata i8* %n, metadata !4916, metadata !DIExpression()), !dbg !4917
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4918
  %busn_res = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 8, !dbg !4919
  %end = getelementptr inbounds %struct.resource, %struct.resource* %busn_res, i32 0, i32 1, !dbg !4920
  %1 = load i64, i64* %end, align 8, !dbg !4920
  %conv = trunc i64 %1 to i8, !dbg !4918
  store i8 %conv, i8* %max, align 1, !dbg !4921
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4922, metadata !DIExpression()), !dbg !4925
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4925
  %children = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 2, !dbg !4925
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %children, i32 0, i32 0, !dbg !4925
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4925
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !4925
  store i8* %4, i8** %__mptr, align 8, !dbg !4925
  br label %do.body, !dbg !4925

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4926

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !4925
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !4925
  %6 = bitcast i8* %add.ptr to %struct.pci_bus*, !dbg !4925
  store %struct.pci_bus* %6, %struct.pci_bus** %tmp1, align 8, !dbg !4926
  %7 = load %struct.pci_bus*, %struct.pci_bus** %tmp1, align 8, !dbg !4925
  store %struct.pci_bus* %7, %struct.pci_bus** %tmp, align 8, !dbg !4928
  br label %for.cond, !dbg !4928

for.cond:                                         ; preds = %do.end12, %do.end
  %8 = load %struct.pci_bus*, %struct.pci_bus** %tmp, align 8, !dbg !4929
  %node = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 0, !dbg !4929
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !4929
  %children2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %9, i32 0, i32 2, !dbg !4929
  %cmp = icmp eq %struct.list_head* %node, %children2, !dbg !4929
  %lnot = xor i1 %cmp, true, !dbg !4929
  br i1 %lnot, label %for.body, label %for.end, !dbg !4928

for.body:                                         ; preds = %for.cond
  %10 = load %struct.pci_bus*, %struct.pci_bus** %tmp, align 8, !dbg !4931
  %call = call zeroext i8 @pci_bus_max_busnr(%struct.pci_bus* %10) #11, !dbg !4933
  store i8 %call, i8* %n, align 1, !dbg !4934
  %11 = load i8, i8* %n, align 1, !dbg !4935
  %conv4 = zext i8 %11 to i32, !dbg !4935
  %12 = load i8, i8* %max, align 1, !dbg !4937
  %conv5 = zext i8 %12 to i32, !dbg !4937
  %cmp6 = icmp sgt i32 %conv4, %conv5, !dbg !4938
  br i1 %cmp6, label %if.then, label %if.end, !dbg !4939

if.then:                                          ; preds = %for.body
  %13 = load i8, i8* %n, align 1, !dbg !4940
  store i8 %13, i8* %max, align 1, !dbg !4941
  br label %if.end, !dbg !4942

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4943

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !4944, metadata !DIExpression()), !dbg !4946
  %14 = load %struct.pci_bus*, %struct.pci_bus** %tmp, align 8, !dbg !4946
  %node9 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %14, i32 0, i32 0, !dbg !4946
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %node9, i32 0, i32 0, !dbg !4946
  %15 = load %struct.list_head*, %struct.list_head** %next10, align 8, !dbg !4946
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !4946
  store i8* %16, i8** %__mptr8, align 8, !dbg !4946
  br label %do.body11, !dbg !4946

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !4947

do.end12:                                         ; preds = %do.body11
  %17 = load i8*, i8** %__mptr8, align 8, !dbg !4946
  %add.ptr14 = getelementptr i8, i8* %17, i64 0, !dbg !4946
  %18 = bitcast i8* %add.ptr14 to %struct.pci_bus*, !dbg !4946
  store %struct.pci_bus* %18, %struct.pci_bus** %tmp13, align 8, !dbg !4947
  %19 = load %struct.pci_bus*, %struct.pci_bus** %tmp13, align 8, !dbg !4946
  store %struct.pci_bus* %19, %struct.pci_bus** %tmp, align 8, !dbg !4929
  br label %for.cond, !dbg !4929, !llvm.loop !4949

for.end:                                          ; preds = %for.cond
  %20 = load i8, i8* %max, align 1, !dbg !4951
  ret i8 %20, !dbg !4952
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_status_get_and_clear_errors(%struct.pci_dev* %pdev) #0 !dbg !4953 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %status = alloca i16, align 2
  %ret = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !4954, metadata !DIExpression()), !dbg !4955
  call void @llvm.dbg.declare(metadata i16* %status, metadata !4956, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4958, metadata !DIExpression()), !dbg !4959
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4960
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %0, i32 6, i16* %status) #11, !dbg !4961
  store i32 %call, i32* %ret, align 4, !dbg !4962
  %1 = load i32, i32* %ret, align 4, !dbg !4963
  %cmp = icmp ne i32 %1, 0, !dbg !4965
  br i1 %cmp, label %if.then, label %if.end, !dbg !4966

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !4967
  br label %return, !dbg !4967

if.end:                                           ; preds = %entry
  %2 = load i16, i16* %status, align 2, !dbg !4968
  %conv = zext i16 %2 to i32, !dbg !4968
  %and = and i32 %conv, 63744, !dbg !4968
  %conv1 = trunc i32 %and to i16, !dbg !4968
  store i16 %conv1, i16* %status, align 2, !dbg !4968
  %3 = load i16, i16* %status, align 2, !dbg !4969
  %tobool = icmp ne i16 %3, 0, !dbg !4969
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !4971

if.then2:                                         ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4972
  %5 = load i16, i16* %status, align 2, !dbg !4973
  %call3 = call i32 @pci_write_config_word(%struct.pci_dev* %4, i32 6, i16 zeroext %5) #11, !dbg !4974
  br label %if.end4, !dbg !4974

if.end4:                                          ; preds = %if.then2, %if.end
  %6 = load i16, i16* %status, align 2, !dbg !4975
  %conv5 = zext i16 %6 to i32, !dbg !4975
  store i32 %conv5, i32* %retval, align 4, !dbg !4976
  br label %return, !dbg !4976

return:                                           ; preds = %if.end4, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !4977
  ret i32 %7, !dbg !4977
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_word(%struct.pci_dev*, i32, i16 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @pci_ioremap_bar(%struct.pci_dev* %pdev, i32 %bar) #0 !dbg !4978 {
entry:
  %retval = alloca i8*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bar.addr = alloca i32, align 4
  %res = alloca %struct.resource*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !4981, metadata !DIExpression()), !dbg !4982
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !4983, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !4985, metadata !DIExpression()), !dbg !4986
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4987
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 44, !dbg !4988
  %1 = load i32, i32* %bar.addr, align 4, !dbg !4989
  %idxprom = sext i32 %1 to i64, !dbg !4987
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !4987
  store %struct.resource* %arrayidx, %struct.resource** %res, align 8, !dbg !4986
  %2 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4990
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %2, i32 0, i32 3, !dbg !4992
  %3 = load i64, i64* %flags, align 8, !dbg !4992
  %and = and i64 %3, 536870912, !dbg !4993
  %tobool = icmp ne i64 %and, 0, !dbg !4993
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4994

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4995
  %flags1 = getelementptr inbounds %struct.resource, %struct.resource* %4, i32 0, i32 3, !dbg !4996
  %5 = load i64, i64* %flags1, align 8, !dbg !4996
  %and2 = and i64 %5, 512, !dbg !4997
  %tobool3 = icmp ne i64 %and2, 0, !dbg !4997
  br i1 %tobool3, label %if.end, label %if.then, !dbg !4998

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !4999
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !4999
  %7 = load i32, i32* %bar.addr, align 4, !dbg !4999
  %8 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !4999
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i32 %7, %struct.resource* %8) #12, !dbg !4999
  store i8* null, i8** %retval, align 8, !dbg !5001
  br label %return, !dbg !5001

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5002
  %start = getelementptr inbounds %struct.resource, %struct.resource* %9, i32 0, i32 0, !dbg !5003
  %10 = load i64, i64* %start, align 8, !dbg !5003
  %11 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5004
  %call = call i64 @resource_size(%struct.resource* %11) #11, !dbg !5005
  %call4 = call i8* @ioremap(i64 %10, i64 %call) #11, !dbg !5006
  store i8* %call4, i8** %retval, align 8, !dbg !5007
  br label %return, !dbg !5007

return:                                           ; preds = %if.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !5008
  ret i8* %12, !dbg !5008
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @resource_size(%struct.resource* %res) #0 !dbg !5009 {
entry:
  %res.addr = alloca %struct.resource*, align 8
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !5012, metadata !DIExpression()), !dbg !5013
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !5014
  %end = getelementptr inbounds %struct.resource, %struct.resource* %0, i32 0, i32 1, !dbg !5015
  %1 = load i64, i64* %end, align 8, !dbg !5015
  %2 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !5016
  %start = getelementptr inbounds %struct.resource, %struct.resource* %2, i32 0, i32 0, !dbg !5017
  %3 = load i64, i64* %start, align 8, !dbg !5017
  %sub = sub i64 %1, %3, !dbg !5018
  %add = add i64 %sub, 1, !dbg !5019
  ret i64 %add, !dbg !5020
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @pci_ioremap_wc_bar(%struct.pci_dev* %pdev, i32 %bar) #0 !dbg !5021 {
entry:
  %retval = alloca i8*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bar.addr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5022, metadata !DIExpression()), !dbg !5023
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !5024, metadata !DIExpression()), !dbg !5025
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5026
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 44, !dbg !5026
  %1 = load i32, i32* %bar.addr, align 4, !dbg !5026
  %idxprom = sext i32 %1 to i64, !dbg !5026
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !5026
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 3, !dbg !5026
  %2 = load i64, i64* %flags, align 8, !dbg !5026
  %and = and i64 %2, 512, !dbg !5028
  %tobool = icmp ne i64 %and, 0, !dbg !5028
  br i1 %tobool, label %if.end17, label %if.then, !dbg !5029

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5030, metadata !DIExpression()), !dbg !5033
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !5033
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !5034
  %tobool1 = icmp ne i32 %3, 0, !dbg !5034
  %lnot = xor i1 %tobool1, true, !dbg !5034
  %lnot2 = xor i1 %lnot, true, !dbg !5034
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5034
  %conv = sext i32 %lnot.ext to i64, !dbg !5034
  %tobool3 = icmp ne i64 %conv, 0, !dbg !5034
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !5033

if.then4:                                         ; preds = %if.then
  br label %do.body, !dbg !5034

do.body:                                          ; preds = %if.then4
  br label %do.body5, !dbg !5036

do.body5:                                         ; preds = %do.body
  br label %do.end, !dbg !5038

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !5036

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i32 230, i32 2305, i64 12) #10, !dbg !5040, !srcloc !5042
  br label %do.end7, !dbg !5040

do.end7:                                          ; preds = %do.body6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 243) #10, !dbg !5043, !srcloc !5045
  br label %do.body8, !dbg !5036

do.body8:                                         ; preds = %do.end7
  br label %do.end9, !dbg !5046

do.end9:                                          ; preds = %do.body8
  br label %do.end10, !dbg !5036

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !5036

if.end:                                           ; preds = %do.end10, %if.then
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !5033
  %tobool11 = icmp ne i32 %4, 0, !dbg !5033
  %lnot12 = xor i1 %tobool11, true, !dbg !5033
  %lnot14 = xor i1 %lnot12, true, !dbg !5033
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !5033
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !5033
  store i64 %conv16, i64* %tmp, align 8, !dbg !5034
  %5 = load i64, i64* %tmp, align 8, !dbg !5033
  store i8* null, i8** %retval, align 8, !dbg !5048
  br label %return, !dbg !5048

if.end17:                                         ; preds = %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5049
  %resource18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 44, !dbg !5049
  %7 = load i32, i32* %bar.addr, align 4, !dbg !5049
  %idxprom19 = sext i32 %7 to i64, !dbg !5049
  %arrayidx20 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource18, i64 0, i64 %idxprom19, !dbg !5049
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx20, i32 0, i32 0, !dbg !5049
  %8 = load i64, i64* %start, align 8, !dbg !5049
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5050
  %resource21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 44, !dbg !5050
  %10 = load i32, i32* %bar.addr, align 4, !dbg !5050
  %idxprom22 = sext i32 %10 to i64, !dbg !5050
  %arrayidx23 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource21, i64 0, i64 %idxprom22, !dbg !5050
  %start24 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx23, i32 0, i32 0, !dbg !5050
  %11 = load i64, i64* %start24, align 8, !dbg !5050
  %cmp = icmp eq i64 %11, 0, !dbg !5050
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !5050

land.lhs.true:                                    ; preds = %if.end17
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5050
  %resource26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 44, !dbg !5050
  %13 = load i32, i32* %bar.addr, align 4, !dbg !5050
  %idxprom27 = sext i32 %13 to i64, !dbg !5050
  %arrayidx28 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource26, i64 0, i64 %idxprom27, !dbg !5050
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx28, i32 0, i32 1, !dbg !5050
  %14 = load i64, i64* %end, align 8, !dbg !5050
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5050
  %resource29 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 44, !dbg !5050
  %16 = load i32, i32* %bar.addr, align 4, !dbg !5050
  %idxprom30 = sext i32 %16 to i64, !dbg !5050
  %arrayidx31 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource29, i64 0, i64 %idxprom30, !dbg !5050
  %start32 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx31, i32 0, i32 0, !dbg !5050
  %17 = load i64, i64* %start32, align 8, !dbg !5050
  %cmp33 = icmp eq i64 %14, %17, !dbg !5050
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !5050

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !5050

cond.false:                                       ; preds = %land.lhs.true, %if.end17
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5050
  %resource35 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 44, !dbg !5050
  %19 = load i32, i32* %bar.addr, align 4, !dbg !5050
  %idxprom36 = sext i32 %19 to i64, !dbg !5050
  %arrayidx37 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource35, i64 0, i64 %idxprom36, !dbg !5050
  %end38 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx37, i32 0, i32 1, !dbg !5050
  %20 = load i64, i64* %end38, align 8, !dbg !5050
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5050
  %resource39 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 44, !dbg !5050
  %22 = load i32, i32* %bar.addr, align 4, !dbg !5050
  %idxprom40 = sext i32 %22 to i64, !dbg !5050
  %arrayidx41 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource39, i64 0, i64 %idxprom40, !dbg !5050
  %start42 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx41, i32 0, i32 0, !dbg !5050
  %23 = load i64, i64* %start42, align 8, !dbg !5050
  %sub = sub i64 %20, %23, !dbg !5050
  %add = add i64 %sub, 1, !dbg !5050
  br label %cond.end, !dbg !5050

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !5050
  %call = call i8* @ioremap_wc(i64 %8, i64 %cond) #11, !dbg !5051
  store i8* %call, i8** %retval, align 8, !dbg !5052
  br label %return, !dbg !5052

return:                                           ; preds = %cond.end, %if.end
  %24 = load i8*, i8** %retval, align 8, !dbg !5053
  ret i8* %24, !dbg !5053
}

; Function Attrs: noredzone
declare dso_local i8* @ioremap_wc(i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_find_next_capability(%struct.pci_dev* %dev, i8 zeroext %pos, i32 %cap) #0 !dbg !5054 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos.addr = alloca i8, align 1
  %cap.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5057, metadata !DIExpression()), !dbg !5058
  store i8 %pos, i8* %pos.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pos.addr, metadata !5059, metadata !DIExpression()), !dbg !5060
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !5061, metadata !DIExpression()), !dbg !5062
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5063
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !5064
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !5064
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5065
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 6, !dbg !5066
  %3 = load i32, i32* %devfn, align 8, !dbg !5066
  %4 = load i8, i8* %pos.addr, align 1, !dbg !5067
  %conv = zext i8 %4 to i32, !dbg !5067
  %add = add i32 %conv, 1, !dbg !5068
  %conv1 = trunc i32 %add to i8, !dbg !5067
  %5 = load i32, i32* %cap.addr, align 4, !dbg !5069
  %call = call i32 @__pci_find_next_cap(%struct.pci_bus* %1, i32 %3, i8 zeroext %conv1, i32 %5) #11, !dbg !5070
  ret i32 %call, !dbg !5071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__pci_find_next_cap(%struct.pci_bus* %bus, i32 %devfn, i8 zeroext %pos, i32 %cap) #0 !dbg !5072 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %devfn.addr = alloca i32, align 4
  %pos.addr = alloca i8, align 1
  %cap.addr = alloca i32, align 4
  %ttl = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5075, metadata !DIExpression()), !dbg !5076
  store i32 %devfn, i32* %devfn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devfn.addr, metadata !5077, metadata !DIExpression()), !dbg !5078
  store i8 %pos, i8* %pos.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pos.addr, metadata !5079, metadata !DIExpression()), !dbg !5080
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !5081, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.declare(metadata i32* %ttl, metadata !5083, metadata !DIExpression()), !dbg !5084
  store i32 48, i32* %ttl, align 4, !dbg !5084
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5085
  %1 = load i32, i32* %devfn.addr, align 4, !dbg !5086
  %2 = load i8, i8* %pos.addr, align 1, !dbg !5087
  %3 = load i32, i32* %cap.addr, align 4, !dbg !5088
  %call = call i32 @__pci_find_next_cap_ttl(%struct.pci_bus* %0, i32 %1, i8 zeroext %2, i32 %3, i32* %ttl) #11, !dbg !5089
  ret i32 %call, !dbg !5090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_find_capability(%struct.pci_dev* %dev, i32 %cap) #0 !dbg !5091 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cap.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5092, metadata !DIExpression()), !dbg !5093
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !5094, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5096, metadata !DIExpression()), !dbg !5097
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5098
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !5099
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !5099
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5100
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 6, !dbg !5101
  %3 = load i32, i32* %devfn, align 8, !dbg !5101
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5102
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 13, !dbg !5103
  %5 = load i8, i8* %hdr_type, align 1, !dbg !5103
  %call = call i32 @__pci_bus_find_cap_start(%struct.pci_bus* %1, i32 %3, i8 zeroext %5) #11, !dbg !5104
  store i32 %call, i32* %pos, align 4, !dbg !5105
  %6 = load i32, i32* %pos, align 4, !dbg !5106
  %tobool = icmp ne i32 %6, 0, !dbg !5106
  br i1 %tobool, label %if.then, label %if.end, !dbg !5108

if.then:                                          ; preds = %entry
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5109
  %bus1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 1, !dbg !5110
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !5110
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5111
  %devfn2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 6, !dbg !5112
  %10 = load i32, i32* %devfn2, align 8, !dbg !5112
  %11 = load i32, i32* %pos, align 4, !dbg !5113
  %conv = trunc i32 %11 to i8, !dbg !5113
  %12 = load i32, i32* %cap.addr, align 4, !dbg !5114
  %call3 = call i32 @__pci_find_next_cap(%struct.pci_bus* %8, i32 %10, i8 zeroext %conv, i32 %12) #11, !dbg !5115
  store i32 %call3, i32* %pos, align 4, !dbg !5116
  br label %if.end, !dbg !5117

if.end:                                           ; preds = %if.then, %entry
  %13 = load i32, i32* %pos, align 4, !dbg !5118
  ret i32 %13, !dbg !5119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__pci_bus_find_cap_start(%struct.pci_bus* %bus, i32 %devfn, i8 zeroext %hdr_type) #0 !dbg !5120 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.pci_bus*, align 8
  %devfn.addr = alloca i32, align 4
  %hdr_type.addr = alloca i8, align 1
  %status = alloca i16, align 2
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5123, metadata !DIExpression()), !dbg !5124
  store i32 %devfn, i32* %devfn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devfn.addr, metadata !5125, metadata !DIExpression()), !dbg !5126
  store i8 %hdr_type, i8* %hdr_type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hdr_type.addr, metadata !5127, metadata !DIExpression()), !dbg !5128
  call void @llvm.dbg.declare(metadata i16* %status, metadata !5129, metadata !DIExpression()), !dbg !5130
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5131
  %1 = load i32, i32* %devfn.addr, align 4, !dbg !5132
  %call = call i32 @pci_bus_read_config_word(%struct.pci_bus* %0, i32 %1, i32 6, i16* %status) #11, !dbg !5133
  %2 = load i16, i16* %status, align 2, !dbg !5134
  %conv = zext i16 %2 to i32, !dbg !5134
  %and = and i32 %conv, 16, !dbg !5136
  %tobool = icmp ne i32 %and, 0, !dbg !5136
  br i1 %tobool, label %if.end, label %if.then, !dbg !5137

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5138
  br label %return, !dbg !5138

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %hdr_type.addr, align 1, !dbg !5139
  %conv1 = zext i8 %3 to i32, !dbg !5139
  switch i32 %conv1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
  ], !dbg !5140

sw.bb:                                            ; preds = %if.end, %if.end
  store i32 52, i32* %retval, align 4, !dbg !5141
  br label %return, !dbg !5141

sw.bb2:                                           ; preds = %if.end
  store i32 20, i32* %retval, align 4, !dbg !5143
  br label %return, !dbg !5143

sw.epilog:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5144
  br label %return, !dbg !5144

return:                                           ; preds = %sw.epilog, %sw.bb2, %sw.bb, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !5145
  ret i32 %4, !dbg !5145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_bus_find_capability(%struct.pci_bus* %bus, i32 %devfn, i32 %cap) #0 !dbg !5146 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %devfn.addr = alloca i32, align 4
  %cap.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %hdr_type = alloca i8, align 1
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5149, metadata !DIExpression()), !dbg !5150
  store i32 %devfn, i32* %devfn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devfn.addr, metadata !5151, metadata !DIExpression()), !dbg !5152
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !5153, metadata !DIExpression()), !dbg !5154
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5155, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.declare(metadata i8* %hdr_type, metadata !5157, metadata !DIExpression()), !dbg !5158
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5159
  %1 = load i32, i32* %devfn.addr, align 4, !dbg !5160
  %call = call i32 @pci_bus_read_config_byte(%struct.pci_bus* %0, i32 %1, i32 14, i8* %hdr_type) #11, !dbg !5161
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5162
  %3 = load i32, i32* %devfn.addr, align 4, !dbg !5163
  %4 = load i8, i8* %hdr_type, align 1, !dbg !5164
  %conv = zext i8 %4 to i32, !dbg !5164
  %and = and i32 %conv, 127, !dbg !5165
  %conv1 = trunc i32 %and to i8, !dbg !5164
  %call2 = call i32 @__pci_bus_find_cap_start(%struct.pci_bus* %2, i32 %3, i8 zeroext %conv1) #11, !dbg !5166
  store i32 %call2, i32* %pos, align 4, !dbg !5167
  %5 = load i32, i32* %pos, align 4, !dbg !5168
  %tobool = icmp ne i32 %5, 0, !dbg !5168
  br i1 %tobool, label %if.then, label %if.end, !dbg !5170

if.then:                                          ; preds = %entry
  %6 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5171
  %7 = load i32, i32* %devfn.addr, align 4, !dbg !5172
  %8 = load i32, i32* %pos, align 4, !dbg !5173
  %conv3 = trunc i32 %8 to i8, !dbg !5173
  %9 = load i32, i32* %cap.addr, align 4, !dbg !5174
  %call4 = call i32 @__pci_find_next_cap(%struct.pci_bus* %6, i32 %7, i8 zeroext %conv3, i32 %9) #11, !dbg !5175
  store i32 %call4, i32* %pos, align 4, !dbg !5176
  br label %if.end, !dbg !5177

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %pos, align 4, !dbg !5178
  ret i32 %10, !dbg !5179
}

; Function Attrs: noredzone
declare dso_local i32 @pci_bus_read_config_byte(%struct.pci_bus*, i32, i32, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_find_next_ext_capability(%struct.pci_dev* %dev, i32 %start, i32 %cap) #0 !dbg !5180 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %start.addr = alloca i32, align 4
  %cap.addr = alloca i32, align 4
  %header = alloca i32, align 4
  %ttl = alloca i32, align 4
  %pos = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5183, metadata !DIExpression()), !dbg !5184
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !5185, metadata !DIExpression()), !dbg !5186
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !5187, metadata !DIExpression()), !dbg !5188
  call void @llvm.dbg.declare(metadata i32* %header, metadata !5189, metadata !DIExpression()), !dbg !5190
  call void @llvm.dbg.declare(metadata i32* %ttl, metadata !5191, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5193, metadata !DIExpression()), !dbg !5194
  store i32 256, i32* %pos, align 4, !dbg !5194
  store i32 480, i32* %ttl, align 4, !dbg !5195
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5196
  %cfg_size = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 42, !dbg !5198
  %1 = load i32, i32* %cfg_size, align 8, !dbg !5198
  %cmp = icmp sle i32 %1, 256, !dbg !5199
  br i1 %cmp, label %if.then, label %if.end, !dbg !5200

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5201
  br label %return, !dbg !5201

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %start.addr, align 4, !dbg !5202
  %tobool = icmp ne i32 %2, 0, !dbg !5202
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !5204

if.then1:                                         ; preds = %if.end
  %3 = load i32, i32* %start.addr, align 4, !dbg !5205
  store i32 %3, i32* %pos, align 4, !dbg !5206
  br label %if.end2, !dbg !5207

if.end2:                                          ; preds = %if.then1, %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5208
  %5 = load i32, i32* %pos, align 4, !dbg !5210
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %4, i32 %5, i32* %header) #11, !dbg !5211
  %cmp3 = icmp ne i32 %call, 0, !dbg !5212
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !5213

if.then4:                                         ; preds = %if.end2
  store i32 0, i32* %retval, align 4, !dbg !5214
  br label %return, !dbg !5214

if.end5:                                          ; preds = %if.end2
  %6 = load i32, i32* %header, align 4, !dbg !5215
  %cmp6 = icmp eq i32 %6, 0, !dbg !5217
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !5218

if.then7:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !5219
  br label %return, !dbg !5219

if.end8:                                          ; preds = %if.end5
  br label %while.cond, !dbg !5220

while.cond:                                       ; preds = %if.end21, %if.end8
  %7 = load i32, i32* %ttl, align 4, !dbg !5221
  %dec = add i32 %7, -1, !dbg !5221
  store i32 %dec, i32* %ttl, align 4, !dbg !5221
  %cmp9 = icmp sgt i32 %7, 0, !dbg !5222
  br i1 %cmp9, label %while.body, label %while.end, !dbg !5220

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %header, align 4, !dbg !5223
  %and = and i32 %8, 65535, !dbg !5223
  %9 = load i32, i32* %cap.addr, align 4, !dbg !5226
  %cmp10 = icmp eq i32 %and, %9, !dbg !5227
  br i1 %cmp10, label %land.lhs.true, label %if.end13, !dbg !5228

land.lhs.true:                                    ; preds = %while.body
  %10 = load i32, i32* %pos, align 4, !dbg !5229
  %11 = load i32, i32* %start.addr, align 4, !dbg !5230
  %cmp11 = icmp ne i32 %10, %11, !dbg !5231
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !5232

if.then12:                                        ; preds = %land.lhs.true
  %12 = load i32, i32* %pos, align 4, !dbg !5233
  store i32 %12, i32* %retval, align 4, !dbg !5234
  br label %return, !dbg !5234

if.end13:                                         ; preds = %land.lhs.true, %while.body
  %13 = load i32, i32* %header, align 4, !dbg !5235
  %shr = lshr i32 %13, 20, !dbg !5235
  %and14 = and i32 %shr, 4092, !dbg !5235
  store i32 %and14, i32* %pos, align 4, !dbg !5236
  %14 = load i32, i32* %pos, align 4, !dbg !5237
  %cmp15 = icmp slt i32 %14, 256, !dbg !5239
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !5240

if.then16:                                        ; preds = %if.end13
  br label %while.end, !dbg !5241

if.end17:                                         ; preds = %if.end13
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5242
  %16 = load i32, i32* %pos, align 4, !dbg !5244
  %call18 = call i32 @pci_read_config_dword(%struct.pci_dev* %15, i32 %16, i32* %header) #11, !dbg !5245
  %cmp19 = icmp ne i32 %call18, 0, !dbg !5246
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !5247

if.then20:                                        ; preds = %if.end17
  br label %while.end, !dbg !5248

if.end21:                                         ; preds = %if.end17
  br label %while.cond, !dbg !5220, !llvm.loop !5249

while.end:                                        ; preds = %if.then20, %if.then16, %while.cond
  store i32 0, i32* %retval, align 4, !dbg !5251
  br label %return, !dbg !5251

return:                                           ; preds = %while.end, %if.then12, %if.then7, %if.then4, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !5252
  ret i32 %17, !dbg !5252
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_dword(%struct.pci_dev*, i32, i32*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_find_ext_capability(%struct.pci_dev* %dev, i32 %cap) #0 !dbg !5253 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cap.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5254, metadata !DIExpression()), !dbg !5255
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !5256, metadata !DIExpression()), !dbg !5257
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5258
  %1 = load i32, i32* %cap.addr, align 4, !dbg !5259
  %call = call i32 @pci_find_next_ext_capability(%struct.pci_dev* %0, i32 0, i32 %1) #11, !dbg !5260
  ret i32 %call, !dbg !5261
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @pci_get_dsn(%struct.pci_dev* %dev) #0 !dbg !5262 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %dword = alloca i32, align 4
  %dsn = alloca i64, align 8
  %pos = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5265, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.declare(metadata i32* %dword, metadata !5267, metadata !DIExpression()), !dbg !5268
  call void @llvm.dbg.declare(metadata i64* %dsn, metadata !5269, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5271, metadata !DIExpression()), !dbg !5272
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5273
  %call = call i32 @pci_find_ext_capability(%struct.pci_dev* %0, i32 3) #11, !dbg !5274
  store i32 %call, i32* %pos, align 4, !dbg !5275
  %1 = load i32, i32* %pos, align 4, !dbg !5276
  %tobool = icmp ne i32 %1, 0, !dbg !5276
  br i1 %tobool, label %if.end, label %if.then, !dbg !5278

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !5279
  br label %return, !dbg !5279

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %pos, align 4, !dbg !5280
  %add = add i32 %2, 4, !dbg !5280
  store i32 %add, i32* %pos, align 4, !dbg !5280
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5281
  %4 = load i32, i32* %pos, align 4, !dbg !5282
  %call1 = call i32 @pci_read_config_dword(%struct.pci_dev* %3, i32 %4, i32* %dword) #11, !dbg !5283
  %5 = load i32, i32* %dword, align 4, !dbg !5284
  %conv = zext i32 %5 to i64, !dbg !5285
  store i64 %conv, i64* %dsn, align 8, !dbg !5286
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5287
  %7 = load i32, i32* %pos, align 4, !dbg !5288
  %add2 = add i32 %7, 4, !dbg !5289
  %call3 = call i32 @pci_read_config_dword(%struct.pci_dev* %6, i32 %add2, i32* %dword) #11, !dbg !5290
  %8 = load i32, i32* %dword, align 4, !dbg !5291
  %conv4 = zext i32 %8 to i64, !dbg !5292
  %shl = shl i64 %conv4, 32, !dbg !5293
  %9 = load i64, i64* %dsn, align 8, !dbg !5294
  %or = or i64 %9, %shl, !dbg !5294
  store i64 %or, i64* %dsn, align 8, !dbg !5294
  %10 = load i64, i64* %dsn, align 8, !dbg !5295
  store i64 %10, i64* %retval, align 8, !dbg !5296
  br label %return, !dbg !5296

return:                                           ; preds = %if.end, %if.then
  %11 = load i64, i64* %retval, align 8, !dbg !5297
  ret i64 %11, !dbg !5297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_find_next_ht_capability(%struct.pci_dev* %dev, i32 %pos, i32 %ht_cap) #0 !dbg !5298 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos.addr = alloca i32, align 4
  %ht_cap.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5299, metadata !DIExpression()), !dbg !5300
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !5301, metadata !DIExpression()), !dbg !5302
  store i32 %ht_cap, i32* %ht_cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ht_cap.addr, metadata !5303, metadata !DIExpression()), !dbg !5304
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5305
  %1 = load i32, i32* %pos.addr, align 4, !dbg !5306
  %add = add i32 %1, 1, !dbg !5307
  %2 = load i32, i32* %ht_cap.addr, align 4, !dbg !5308
  %call = call i32 @__pci_find_next_ht_cap(%struct.pci_dev* %0, i32 %add, i32 %2) #11, !dbg !5309
  ret i32 %call, !dbg !5310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__pci_find_next_ht_cap(%struct.pci_dev* %dev, i32 %pos, i32 %ht_cap) #0 !dbg !5311 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos.addr = alloca i32, align 4
  %ht_cap.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  %ttl = alloca i32, align 4
  %cap = alloca i8, align 1
  %mask = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5312, metadata !DIExpression()), !dbg !5313
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !5314, metadata !DIExpression()), !dbg !5315
  store i32 %ht_cap, i32* %ht_cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ht_cap.addr, metadata !5316, metadata !DIExpression()), !dbg !5317
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !5318, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.declare(metadata i32* %ttl, metadata !5320, metadata !DIExpression()), !dbg !5321
  store i32 48, i32* %ttl, align 4, !dbg !5321
  call void @llvm.dbg.declare(metadata i8* %cap, metadata !5322, metadata !DIExpression()), !dbg !5323
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !5324, metadata !DIExpression()), !dbg !5325
  %0 = load i32, i32* %ht_cap.addr, align 4, !dbg !5326
  %cmp = icmp eq i32 %0, 0, !dbg !5328
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5329

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %ht_cap.addr, align 4, !dbg !5330
  %cmp1 = icmp eq i32 %1, 32, !dbg !5331
  br i1 %cmp1, label %if.then, label %if.else, !dbg !5332

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8 -32, i8* %mask, align 1, !dbg !5333
  br label %if.end, !dbg !5334

if.else:                                          ; preds = %lor.lhs.false
  store i8 -8, i8* %mask, align 1, !dbg !5335
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5336
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 1, !dbg !5337
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !5337
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5338
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 6, !dbg !5339
  %5 = load i32, i32* %devfn, align 8, !dbg !5339
  %6 = load i32, i32* %pos.addr, align 4, !dbg !5340
  %conv = trunc i32 %6 to i8, !dbg !5340
  %call = call i32 @__pci_find_next_cap_ttl(%struct.pci_bus* %3, i32 %5, i8 zeroext %conv, i32 8, i32* %ttl) #11, !dbg !5341
  store i32 %call, i32* %pos.addr, align 4, !dbg !5342
  br label %while.cond, !dbg !5343

while.cond:                                       ; preds = %if.end12, %if.end
  %7 = load i32, i32* %pos.addr, align 4, !dbg !5344
  %tobool = icmp ne i32 %7, 0, !dbg !5343
  br i1 %tobool, label %while.body, label %while.end, !dbg !5343

while.body:                                       ; preds = %while.cond
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5345
  %9 = load i32, i32* %pos.addr, align 4, !dbg !5347
  %add = add i32 %9, 3, !dbg !5348
  %call2 = call i32 @pci_read_config_byte(%struct.pci_dev* %8, i32 %add, i8* %cap) #11, !dbg !5349
  store i32 %call2, i32* %rc, align 4, !dbg !5350
  %10 = load i32, i32* %rc, align 4, !dbg !5351
  %cmp3 = icmp ne i32 %10, 0, !dbg !5353
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !5354

if.then5:                                         ; preds = %while.body
  store i32 0, i32* %retval, align 4, !dbg !5355
  br label %return, !dbg !5355

if.end6:                                          ; preds = %while.body
  %11 = load i8, i8* %cap, align 1, !dbg !5356
  %conv7 = zext i8 %11 to i32, !dbg !5356
  %12 = load i8, i8* %mask, align 1, !dbg !5358
  %conv8 = zext i8 %12 to i32, !dbg !5358
  %and = and i32 %conv7, %conv8, !dbg !5359
  %13 = load i32, i32* %ht_cap.addr, align 4, !dbg !5360
  %cmp9 = icmp eq i32 %and, %13, !dbg !5361
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !5362

if.then11:                                        ; preds = %if.end6
  %14 = load i32, i32* %pos.addr, align 4, !dbg !5363
  store i32 %14, i32* %retval, align 4, !dbg !5364
  br label %return, !dbg !5364

if.end12:                                         ; preds = %if.end6
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5365
  %bus13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 1, !dbg !5366
  %16 = load %struct.pci_bus*, %struct.pci_bus** %bus13, align 8, !dbg !5366
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5367
  %devfn14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 6, !dbg !5368
  %18 = load i32, i32* %devfn14, align 8, !dbg !5368
  %19 = load i32, i32* %pos.addr, align 4, !dbg !5369
  %add15 = add i32 %19, 1, !dbg !5370
  %conv16 = trunc i32 %add15 to i8, !dbg !5369
  %call17 = call i32 @__pci_find_next_cap_ttl(%struct.pci_bus* %16, i32 %18, i8 zeroext %conv16, i32 8, i32* %ttl) #11, !dbg !5371
  store i32 %call17, i32* %pos.addr, align 4, !dbg !5372
  br label %while.cond, !dbg !5343, !llvm.loop !5373

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !5375
  br label %return, !dbg !5375

return:                                           ; preds = %while.end, %if.then11, %if.then5
  %20 = load i32, i32* %retval, align 4, !dbg !5376
  ret i32 %20, !dbg !5376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_find_ht_capability(%struct.pci_dev* %dev, i32 %ht_cap) #0 !dbg !5377 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ht_cap.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5378, metadata !DIExpression()), !dbg !5379
  store i32 %ht_cap, i32* %ht_cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ht_cap.addr, metadata !5380, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5382, metadata !DIExpression()), !dbg !5383
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5384
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !5385
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !5385
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5386
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 6, !dbg !5387
  %3 = load i32, i32* %devfn, align 8, !dbg !5387
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5388
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 13, !dbg !5389
  %5 = load i8, i8* %hdr_type, align 1, !dbg !5389
  %call = call i32 @__pci_bus_find_cap_start(%struct.pci_bus* %1, i32 %3, i8 zeroext %5) #11, !dbg !5390
  store i32 %call, i32* %pos, align 4, !dbg !5391
  %6 = load i32, i32* %pos, align 4, !dbg !5392
  %tobool = icmp ne i32 %6, 0, !dbg !5392
  br i1 %tobool, label %if.then, label %if.end, !dbg !5394

if.then:                                          ; preds = %entry
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5395
  %8 = load i32, i32* %pos, align 4, !dbg !5396
  %9 = load i32, i32* %ht_cap.addr, align 4, !dbg !5397
  %call1 = call i32 @__pci_find_next_ht_cap(%struct.pci_dev* %7, i32 %8, i32 %9) #11, !dbg !5398
  store i32 %call1, i32* %pos, align 4, !dbg !5399
  br label %if.end, !dbg !5400

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %pos, align 4, !dbg !5401
  ret i32 %10, !dbg !5402
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.resource* @pci_find_parent_resource(%struct.pci_dev* %dev, %struct.resource* %res) #0 !dbg !5403 {
entry:
  %retval = alloca %struct.resource*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %res.addr = alloca %struct.resource*, align 8
  %bus = alloca %struct.pci_bus*, align 8
  %r = alloca %struct.resource*, align 8
  %i = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5406, metadata !DIExpression()), !dbg !5407
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !5408, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus, metadata !5410, metadata !DIExpression()), !dbg !5413
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5414
  %bus1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !5415
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !5415
  store %struct.pci_bus* %1, %struct.pci_bus** %bus, align 8, !dbg !5413
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !5416, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5418, metadata !DIExpression()), !dbg !5419
  store i32 0, i32* %i, align 4, !dbg !5420
  br label %for.cond, !dbg !5420

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !5422
  %3 = load i32, i32* %i, align 4, !dbg !5422
  %call = call %struct.resource* @pci_bus_resource_n(%struct.pci_bus* %2, i32 %3) #11, !dbg !5422
  store %struct.resource* %call, %struct.resource** %r, align 8, !dbg !5422
  %tobool = icmp ne %struct.resource* %call, null, !dbg !5422
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !5422

lor.rhs:                                          ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !5422
  %cmp = icmp slt i32 %4, 4, !dbg !5422
  br label %lor.end, !dbg !5422

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %5 = phi i1 [ true, %for.cond ], [ %cmp, %lor.rhs ]
  br i1 %5, label %for.body, label %for.end, !dbg !5420

for.body:                                         ; preds = %lor.end
  %6 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5424
  %tobool2 = icmp ne %struct.resource* %6, null, !dbg !5424
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5427

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !5428

if.end:                                           ; preds = %for.body
  %7 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5429
  %8 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !5431
  %call3 = call zeroext i1 @resource_contains(%struct.resource* %7, %struct.resource* %8) #11, !dbg !5432
  br i1 %call3, label %if.then4, label %if.end11, !dbg !5433

if.then4:                                         ; preds = %if.end
  %9 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5434
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %9, i32 0, i32 3, !dbg !5437
  %10 = load i64, i64* %flags, align 8, !dbg !5437
  %and = and i64 %10, 8192, !dbg !5438
  %tobool5 = icmp ne i64 %and, 0, !dbg !5438
  br i1 %tobool5, label %land.lhs.true, label %if.end10, !dbg !5439

land.lhs.true:                                    ; preds = %if.then4
  %11 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !5440
  %flags6 = getelementptr inbounds %struct.resource, %struct.resource* %11, i32 0, i32 3, !dbg !5441
  %12 = load i64, i64* %flags6, align 8, !dbg !5441
  %and7 = and i64 %12, 8192, !dbg !5442
  %tobool8 = icmp ne i64 %and7, 0, !dbg !5442
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !5443

if.then9:                                         ; preds = %land.lhs.true
  store %struct.resource* null, %struct.resource** %retval, align 8, !dbg !5444
  br label %return, !dbg !5444

if.end10:                                         ; preds = %land.lhs.true, %if.then4
  %13 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5445
  store %struct.resource* %13, %struct.resource** %retval, align 8, !dbg !5446
  br label %return, !dbg !5446

if.end11:                                         ; preds = %if.end
  br label %for.inc, !dbg !5447

for.inc:                                          ; preds = %if.end11, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !5422
  %inc = add i32 %14, 1, !dbg !5422
  store i32 %inc, i32* %i, align 4, !dbg !5422
  br label %for.cond, !dbg !5422, !llvm.loop !5448

for.end:                                          ; preds = %lor.end
  store %struct.resource* null, %struct.resource** %retval, align 8, !dbg !5450
  br label %return, !dbg !5450

return:                                           ; preds = %for.end, %if.end10, %if.then9
  %15 = load %struct.resource*, %struct.resource** %retval, align 8, !dbg !5451
  ret %struct.resource* %15, !dbg !5451
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @pci_bus_resource_n(%struct.pci_bus*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @resource_contains(%struct.resource* %r1, %struct.resource* %r2) #0 !dbg !5452 {
entry:
  %retval = alloca i1, align 1
  %r1.addr = alloca %struct.resource*, align 8
  %r2.addr = alloca %struct.resource*, align 8
  store %struct.resource* %r1, %struct.resource** %r1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %r1.addr, metadata !5455, metadata !DIExpression()), !dbg !5456
  store %struct.resource* %r2, %struct.resource** %r2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %r2.addr, metadata !5457, metadata !DIExpression()), !dbg !5458
  %0 = load %struct.resource*, %struct.resource** %r1.addr, align 8, !dbg !5459
  %call = call i64 @resource_type(%struct.resource* %0) #11, !dbg !5461
  %1 = load %struct.resource*, %struct.resource** %r2.addr, align 8, !dbg !5462
  %call1 = call i64 @resource_type(%struct.resource* %1) #11, !dbg !5463
  %cmp = icmp ne i64 %call, %call1, !dbg !5464
  br i1 %cmp, label %if.then, label %if.end, !dbg !5465

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !5466
  br label %return, !dbg !5466

if.end:                                           ; preds = %entry
  %2 = load %struct.resource*, %struct.resource** %r1.addr, align 8, !dbg !5467
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %2, i32 0, i32 3, !dbg !5469
  %3 = load i64, i64* %flags, align 8, !dbg !5469
  %and = and i64 %3, 536870912, !dbg !5470
  %tobool = icmp ne i64 %and, 0, !dbg !5470
  br i1 %tobool, label %if.then5, label %lor.lhs.false, !dbg !5471

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.resource*, %struct.resource** %r2.addr, align 8, !dbg !5472
  %flags2 = getelementptr inbounds %struct.resource, %struct.resource* %4, i32 0, i32 3, !dbg !5473
  %5 = load i64, i64* %flags2, align 8, !dbg !5473
  %and3 = and i64 %5, 536870912, !dbg !5474
  %tobool4 = icmp ne i64 %and3, 0, !dbg !5474
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !5475

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  store i1 false, i1* %retval, align 1, !dbg !5476
  br label %return, !dbg !5476

if.end6:                                          ; preds = %lor.lhs.false
  %6 = load %struct.resource*, %struct.resource** %r1.addr, align 8, !dbg !5477
  %start = getelementptr inbounds %struct.resource, %struct.resource* %6, i32 0, i32 0, !dbg !5478
  %7 = load i64, i64* %start, align 8, !dbg !5478
  %8 = load %struct.resource*, %struct.resource** %r2.addr, align 8, !dbg !5479
  %start7 = getelementptr inbounds %struct.resource, %struct.resource* %8, i32 0, i32 0, !dbg !5480
  %9 = load i64, i64* %start7, align 8, !dbg !5480
  %cmp8 = icmp ule i64 %7, %9, !dbg !5481
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !5482

land.rhs:                                         ; preds = %if.end6
  %10 = load %struct.resource*, %struct.resource** %r1.addr, align 8, !dbg !5483
  %end = getelementptr inbounds %struct.resource, %struct.resource* %10, i32 0, i32 1, !dbg !5484
  %11 = load i64, i64* %end, align 8, !dbg !5484
  %12 = load %struct.resource*, %struct.resource** %r2.addr, align 8, !dbg !5485
  %end9 = getelementptr inbounds %struct.resource, %struct.resource* %12, i32 0, i32 1, !dbg !5486
  %13 = load i64, i64* %end9, align 8, !dbg !5486
  %cmp10 = icmp uge i64 %11, %13, !dbg !5487
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end6
  %14 = phi i1 [ false, %if.end6 ], [ %cmp10, %land.rhs ], !dbg !5488
  store i1 %14, i1* %retval, align 1, !dbg !5489
  br label %return, !dbg !5489

return:                                           ; preds = %land.end, %if.then5, %if.then
  %15 = load i1, i1* %retval, align 1, !dbg !5490
  ret i1 %15, !dbg !5490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.resource* @pci_find_resource(%struct.pci_dev* %dev, %struct.resource* %res) #0 !dbg !5491 {
entry:
  %retval = alloca %struct.resource*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %res.addr = alloca %struct.resource*, align 8
  %i = alloca i32, align 4
  %r = alloca %struct.resource*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5494, metadata !DIExpression()), !dbg !5495
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !5496, metadata !DIExpression()), !dbg !5497
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5498, metadata !DIExpression()), !dbg !5499
  store i32 0, i32* %i, align 4, !dbg !5500
  br label %for.cond, !dbg !5502

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5503
  %cmp = icmp slt i32 %0, 6, !dbg !5505
  br i1 %cmp, label %for.body, label %for.end, !dbg !5506

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !5507, metadata !DIExpression()), !dbg !5509
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5510
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 44, !dbg !5511
  %2 = load i32, i32* %i, align 4, !dbg !5512
  %idxprom = sext i32 %2 to i64, !dbg !5510
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !5510
  store %struct.resource* %arrayidx, %struct.resource** %r, align 8, !dbg !5509
  %3 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5513
  %start = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 0, !dbg !5515
  %4 = load i64, i64* %start, align 8, !dbg !5515
  %tobool = icmp ne i64 %4, 0, !dbg !5513
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5516

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5517
  %6 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !5518
  %call = call zeroext i1 @resource_contains(%struct.resource* %5, %struct.resource* %6) #11, !dbg !5519
  br i1 %call, label %if.then, label %if.end, !dbg !5520

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !5521
  store %struct.resource* %7, %struct.resource** %retval, align 8, !dbg !5522
  br label %return, !dbg !5522

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !5523

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !5524
  %inc = add i32 %8, 1, !dbg !5524
  store i32 %inc, i32* %i, align 4, !dbg !5524
  br label %for.cond, !dbg !5525, !llvm.loop !5526

for.end:                                          ; preds = %for.cond
  store %struct.resource* null, %struct.resource** %retval, align 8, !dbg !5528
  br label %return, !dbg !5528

return:                                           ; preds = %for.end, %if.then
  %9 = load %struct.resource*, %struct.resource** %retval, align 8, !dbg !5529
  ret %struct.resource* %9, !dbg !5529
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_wait_for_pending(%struct.pci_dev* %dev, i32 %pos, i16 zeroext %mask) #0 !dbg !5530 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos.addr = alloca i32, align 4
  %mask.addr = alloca i16, align 2
  %i = alloca i32, align 4
  %status = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5533, metadata !DIExpression()), !dbg !5534
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !5535, metadata !DIExpression()), !dbg !5536
  store i16 %mask, i16* %mask.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mask.addr, metadata !5537, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5539, metadata !DIExpression()), !dbg !5540
  store i32 0, i32* %i, align 4, !dbg !5541
  br label %for.cond, !dbg !5543

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5544
  %cmp = icmp slt i32 %0, 4, !dbg !5546
  br i1 %cmp, label %for.body, label %for.end, !dbg !5547

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %status, metadata !5548, metadata !DIExpression()), !dbg !5550
  %1 = load i32, i32* %i, align 4, !dbg !5551
  %tobool = icmp ne i32 %1, 0, !dbg !5551
  br i1 %tobool, label %if.then, label %if.end, !dbg !5553

if.then:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !5554
  %sub = sub i32 %2, 1, !dbg !5555
  %shl = shl i32 1, %sub, !dbg !5556
  %mul = mul i32 %shl, 100, !dbg !5557
  call void @msleep(i32 %mul) #11, !dbg !5558
  br label %if.end, !dbg !5558

if.end:                                           ; preds = %if.then, %for.body
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5559
  %4 = load i32, i32* %pos.addr, align 4, !dbg !5560
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %3, i32 %4, i16* %status) #11, !dbg !5561
  %5 = load i16, i16* %status, align 2, !dbg !5562
  %conv = zext i16 %5 to i32, !dbg !5562
  %6 = load i16, i16* %mask.addr, align 2, !dbg !5564
  %conv1 = zext i16 %6 to i32, !dbg !5564
  %and = and i32 %conv, %conv1, !dbg !5565
  %tobool2 = icmp ne i32 %and, 0, !dbg !5565
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !5566

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !5567
  br label %return, !dbg !5567

if.end4:                                          ; preds = %if.end
  br label %for.inc, !dbg !5568

for.inc:                                          ; preds = %if.end4
  %7 = load i32, i32* %i, align 4, !dbg !5569
  %inc = add i32 %7, 1, !dbg !5569
  store i32 %inc, i32* %i, align 4, !dbg !5569
  br label %for.cond, !dbg !5570, !llvm.loop !5571

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5573
  br label %return, !dbg !5573

return:                                           ; preds = %for.end, %if.then3
  %8 = load i32, i32* %retval, align 4, !dbg !5574
  ret i32 %8, !dbg !5574
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_request_acs() #0 !dbg !5575 {
entry:
  store i32 1, i32* @pci_acs_enable, align 4, !dbg !5576
  ret void, !dbg !5577
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_set_platform_pm(%struct.pci_platform_pm_ops* %ops) #0 !dbg !5578 {
entry:
  %retval = alloca i32, align 4
  %ops.addr = alloca %struct.pci_platform_pm_ops*, align 8
  store %struct.pci_platform_pm_ops* %ops, %struct.pci_platform_pm_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_platform_pm_ops** %ops.addr, metadata !5581, metadata !DIExpression()), !dbg !5582
  %0 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** %ops.addr, align 8, !dbg !5583
  %is_manageable = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %0, i32 0, i32 1, !dbg !5585
  %1 = load i1 (%struct.pci_dev*)*, i1 (%struct.pci_dev*)** %is_manageable, align 8, !dbg !5585
  %tobool = icmp ne i1 (%struct.pci_dev*)* %1, null, !dbg !5583
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5586

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** %ops.addr, align 8, !dbg !5587
  %set_state = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %2, i32 0, i32 2, !dbg !5588
  %3 = load i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*, i32)** %set_state, align 8, !dbg !5588
  %tobool1 = icmp ne i32 (%struct.pci_dev*, i32)* %3, null, !dbg !5587
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !5589

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** %ops.addr, align 8, !dbg !5590
  %get_state = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %4, i32 0, i32 3, !dbg !5591
  %5 = load i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)** %get_state, align 8, !dbg !5591
  %tobool3 = icmp ne i32 (%struct.pci_dev*)* %5, null, !dbg !5590
  br i1 %tobool3, label %lor.lhs.false4, label %if.then, !dbg !5592

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %6 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** %ops.addr, align 8, !dbg !5593
  %choose_state = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %6, i32 0, i32 5, !dbg !5594
  %7 = load i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)** %choose_state, align 8, !dbg !5594
  %tobool5 = icmp ne i32 (%struct.pci_dev*)* %7, null, !dbg !5593
  br i1 %tobool5, label %lor.lhs.false6, label %if.then, !dbg !5595

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %8 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** %ops.addr, align 8, !dbg !5596
  %set_wakeup = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %8, i32 0, i32 6, !dbg !5597
  %9 = load i32 (%struct.pci_dev*, i1)*, i32 (%struct.pci_dev*, i1)** %set_wakeup, align 8, !dbg !5597
  %tobool7 = icmp ne i32 (%struct.pci_dev*, i1)* %9, null, !dbg !5596
  br i1 %tobool7, label %lor.lhs.false8, label %if.then, !dbg !5598

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %10 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** %ops.addr, align 8, !dbg !5599
  %need_resume = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %10, i32 0, i32 7, !dbg !5600
  %11 = load i1 (%struct.pci_dev*)*, i1 (%struct.pci_dev*)** %need_resume, align 8, !dbg !5600
  %tobool9 = icmp ne i1 (%struct.pci_dev*)* %11, null, !dbg !5599
  br i1 %tobool9, label %if.end, label %if.then, !dbg !5601

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !5602
  br label %return, !dbg !5602

if.end:                                           ; preds = %lor.lhs.false8
  %12 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** %ops.addr, align 8, !dbg !5603
  store %struct.pci_platform_pm_ops* %12, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !5604
  store i32 0, i32* %retval, align 4, !dbg !5605
  br label %return, !dbg !5605

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !5606
  ret i32 %13, !dbg !5606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_update_current_state(%struct.pci_dev* %dev, i32 %state) #0 !dbg !5607 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %state.addr = alloca i32, align 4
  %pmcsr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5610, metadata !DIExpression()), !dbg !5611
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !5612, metadata !DIExpression()), !dbg !5613
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5614
  %call = call i32 @platform_pci_get_power_state(%struct.pci_dev* %0) #11, !dbg !5616
  %cmp = icmp eq i32 %call, 4, !dbg !5617
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5618

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5619
  %call1 = call zeroext i1 @pci_device_is_present(%struct.pci_dev* %1) #11, !dbg !5620
  br i1 %call1, label %if.else, label %if.then, !dbg !5621

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5622
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 26, !dbg !5624
  store i32 4, i32* %current_state, align 8, !dbg !5625
  br label %if.end9, !dbg !5626

if.else:                                          ; preds = %lor.lhs.false
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5627
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 28, !dbg !5629
  %4 = load i8, i8* %pm_cap, align 1, !dbg !5629
  %tobool = icmp ne i8 %4, 0, !dbg !5627
  br i1 %tobool, label %if.then2, label %if.else7, !dbg !5630

if.then2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i16* %pmcsr, metadata !5631, metadata !DIExpression()), !dbg !5633
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5634
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5635
  %pm_cap3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 28, !dbg !5636
  %7 = load i8, i8* %pm_cap3, align 1, !dbg !5636
  %conv = zext i8 %7 to i32, !dbg !5635
  %add = add i32 %conv, 4, !dbg !5637
  %call4 = call i32 @pci_read_config_word(%struct.pci_dev* %5, i32 %add, i16* %pmcsr) #11, !dbg !5638
  %8 = load i16, i16* %pmcsr, align 2, !dbg !5639
  %conv5 = zext i16 %8 to i32, !dbg !5639
  %and = and i32 %conv5, 3, !dbg !5640
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5641
  %current_state6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 26, !dbg !5642
  store i32 %and, i32* %current_state6, align 8, !dbg !5643
  br label %if.end, !dbg !5644

if.else7:                                         ; preds = %if.else
  %10 = load i32, i32* %state.addr, align 4, !dbg !5645
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5647
  %current_state8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 26, !dbg !5648
  store i32 %10, i32* %current_state8, align 8, !dbg !5649
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then2
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  ret void, !dbg !5650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @platform_pci_get_power_state(%struct.pci_dev* %dev) #0 !dbg !5651 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5652, metadata !DIExpression()), !dbg !5653
  %0 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !5654
  %tobool = icmp ne %struct.pci_platform_pm_ops* %0, null, !dbg !5654
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5654

cond.true:                                        ; preds = %entry
  %1 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !5655
  %get_state = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %1, i32 0, i32 3, !dbg !5656
  %2 = load i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)** %get_state, align 8, !dbg !5656
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5657
  %call = call i32 %2(%struct.pci_dev* %3) #11, !dbg !5655
  br label %cond.end, !dbg !5654

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5654

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 5, %cond.false ], !dbg !5654
  ret i32 %cond, !dbg !5658
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_device_is_present(%struct.pci_dev* %pdev) #0 !dbg !5659 {
entry:
  %retval = alloca i1, align 1
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %v = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5660, metadata !DIExpression()), !dbg !5661
  call void @llvm.dbg.declare(metadata i32* %v, metadata !5662, metadata !DIExpression()), !dbg !5663
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5664
  %call = call zeroext i1 @pci_dev_is_disconnected(%struct.pci_dev* %0) #11, !dbg !5666
  br i1 %call, label %if.then, label %if.end, !dbg !5667

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !5668
  br label %return, !dbg !5668

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5669
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 1, !dbg !5670
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !5670
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5671
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 6, !dbg !5672
  %4 = load i32, i32* %devfn, align 8, !dbg !5672
  %call1 = call zeroext i1 @pci_bus_read_dev_vendor_id(%struct.pci_bus* %2, i32 %4, i32* %v, i32 0) #11, !dbg !5673
  store i1 %call1, i1* %retval, align 1, !dbg !5674
  br label %return, !dbg !5674

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !5675
  ret i1 %5, !dbg !5675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_refresh_power_state(%struct.pci_dev* %dev) #0 !dbg !5676 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5677, metadata !DIExpression()), !dbg !5678
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5679
  %call = call zeroext i1 @platform_pci_power_manageable(%struct.pci_dev* %0) #11, !dbg !5681
  br i1 %call, label %if.then, label %if.end, !dbg !5682

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5683
  call void @platform_pci_refresh_power_state(%struct.pci_dev* %1) #11, !dbg !5684
  br label %if.end, !dbg !5684

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5685
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5686
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 26, !dbg !5687
  %4 = load i32, i32* %current_state, align 8, !dbg !5687
  call void @pci_update_current_state(%struct.pci_dev* %2, i32 %4) #11, !dbg !5688
  ret void, !dbg !5689
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @platform_pci_power_manageable(%struct.pci_dev* %dev) #0 !dbg !5690 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5691, metadata !DIExpression()), !dbg !5692
  %0 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !5693
  %tobool = icmp ne %struct.pci_platform_pm_ops* %0, null, !dbg !5693
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5693

cond.true:                                        ; preds = %entry
  %1 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !5694
  %is_manageable = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %1, i32 0, i32 1, !dbg !5695
  %2 = load i1 (%struct.pci_dev*)*, i1 (%struct.pci_dev*)** %is_manageable, align 8, !dbg !5695
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5696
  %call = call zeroext i1 %2(%struct.pci_dev* %3) #11, !dbg !5694
  %conv = zext i1 %call to i32, !dbg !5694
  br label %cond.end, !dbg !5693

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5693

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !5693
  %tobool1 = icmp ne i32 %cond, 0, !dbg !5693
  ret i1 %tobool1, !dbg !5697
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @platform_pci_refresh_power_state(%struct.pci_dev* %dev) #0 !dbg !5698 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5699, metadata !DIExpression()), !dbg !5700
  %0 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !5701
  %tobool = icmp ne %struct.pci_platform_pm_ops* %0, null, !dbg !5701
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5703

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !5704
  %refresh_state = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %1, i32 0, i32 4, !dbg !5705
  %2 = load void (%struct.pci_dev*)*, void (%struct.pci_dev*)** %refresh_state, align 8, !dbg !5705
  %tobool1 = icmp ne void (%struct.pci_dev*)* %2, null, !dbg !5704
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5706

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !5707
  %refresh_state2 = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %3, i32 0, i32 4, !dbg !5708
  %4 = load void (%struct.pci_dev*)*, void (%struct.pci_dev*)** %refresh_state2, align 8, !dbg !5708
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5709
  call void %4(%struct.pci_dev* %5) #11, !dbg !5707
  br label %if.end, !dbg !5707

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !5710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_platform_power_transition(%struct.pci_dev* %dev, i32 %state) #0 !dbg !5711 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %state.addr = alloca i32, align 4
  %error = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5712, metadata !DIExpression()), !dbg !5713
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !5714, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.declare(metadata i32* %error, metadata !5716, metadata !DIExpression()), !dbg !5717
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5718
  %call = call zeroext i1 @platform_pci_power_manageable(%struct.pci_dev* %0) #11, !dbg !5720
  br i1 %call, label %if.then, label %if.else, !dbg !5721

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5722
  %2 = load i32, i32* %state.addr, align 4, !dbg !5724
  %call1 = call i32 @platform_pci_set_power_state(%struct.pci_dev* %1, i32 %2) #11, !dbg !5725
  store i32 %call1, i32* %error, align 4, !dbg !5726
  %3 = load i32, i32* %error, align 4, !dbg !5727
  %tobool = icmp ne i32 %3, 0, !dbg !5727
  br i1 %tobool, label %if.end, label %if.then2, !dbg !5729

if.then2:                                         ; preds = %if.then
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5730
  %5 = load i32, i32* %state.addr, align 4, !dbg !5731
  call void @pci_update_current_state(%struct.pci_dev* %4, i32 %5) #11, !dbg !5732
  br label %if.end, !dbg !5732

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !5733

if.else:                                          ; preds = %entry
  store i32 -19, i32* %error, align 4, !dbg !5734
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.end
  %6 = load i32, i32* %error, align 4, !dbg !5735
  %tobool4 = icmp ne i32 %6, 0, !dbg !5735
  br i1 %tobool4, label %land.lhs.true, label %if.end7, !dbg !5737

land.lhs.true:                                    ; preds = %if.end3
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5738
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 28, !dbg !5739
  %8 = load i8, i8* %pm_cap, align 1, !dbg !5739
  %tobool5 = icmp ne i8 %8, 0, !dbg !5738
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !5740

if.then6:                                         ; preds = %land.lhs.true
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5741
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 26, !dbg !5742
  store i32 0, i32* %current_state, align 8, !dbg !5743
  br label %if.end7, !dbg !5741

if.end7:                                          ; preds = %if.then6, %land.lhs.true, %if.end3
  %10 = load i32, i32* %error, align 4, !dbg !5744
  ret i32 %10, !dbg !5745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @platform_pci_set_power_state(%struct.pci_dev* %dev, i32 %t) #0 !dbg !5746 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %t.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5747, metadata !DIExpression()), !dbg !5748
  store i32 %t, i32* %t.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t.addr, metadata !5749, metadata !DIExpression()), !dbg !5750
  %0 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !5751
  %tobool = icmp ne %struct.pci_platform_pm_ops* %0, null, !dbg !5751
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5751

cond.true:                                        ; preds = %entry
  %1 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !5752
  %set_state = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %1, i32 0, i32 2, !dbg !5753
  %2 = load i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*, i32)** %set_state, align 8, !dbg !5753
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5754
  %4 = load i32, i32* %t.addr, align 4, !dbg !5755
  %call = call i32 %2(%struct.pci_dev* %3, i32 %4) #11, !dbg !5752
  br label %cond.end, !dbg !5751

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5751

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ -38, %cond.false ], !dbg !5751
  ret i32 %cond, !dbg !5756
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_wakeup_bus(%struct.pci_bus* %bus) #0 !dbg !5757 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5758, metadata !DIExpression()), !dbg !5759
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5760
  %tobool = icmp ne %struct.pci_bus* %0, null, !dbg !5760
  br i1 %tobool, label %if.then, label %if.end, !dbg !5762

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5763
  call void @pci_walk_bus(%struct.pci_bus* %1, i32 (%struct.pci_dev*, i8*)* @pci_wakeup, i8* null) #11, !dbg !5764
  br label %if.end, !dbg !5764

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5765
}

; Function Attrs: noredzone
declare dso_local void @pci_walk_bus(%struct.pci_bus*, i32 (%struct.pci_dev*, i8*)*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_wakeup(%struct.pci_dev* %pci_dev, i8* %ign) #0 !dbg !5766 {
entry:
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  %ign.addr = alloca i8*, align 8
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !5769, metadata !DIExpression()), !dbg !5770
  store i8* %ign, i8** %ign.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ign.addr, metadata !5771, metadata !DIExpression()), !dbg !5772
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !5773
  call void @pci_wakeup_event(%struct.pci_dev* %0) #11, !dbg !5774
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !5775
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !5776
  %call = call i32 @pm_request_resume(%struct.device* %dev) #11, !dbg !5777
  ret i32 0, !dbg !5778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_power_up(%struct.pci_dev* %dev) #0 !dbg !5779 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5780, metadata !DIExpression()), !dbg !5781
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5782
  %call = call i32 @pci_platform_power_transition(%struct.pci_dev* %0, i32 0) #11, !dbg !5783
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5784
  %runtime_d3cold = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 29, !dbg !5786
  %2 = bitcast i24* %runtime_d3cold to i32*, !dbg !5786
  %bf.load = load i32, i32* %2, align 2, !dbg !5786
  %bf.lshr = lshr i32 %bf.load, 14, !dbg !5786
  %bf.clear = and i32 %bf.lshr, 1, !dbg !5786
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !5784
  br i1 %tobool, label %if.then, label %if.end, !dbg !5787

if.then:                                          ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5788
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 2, !dbg !5790
  %4 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !5790
  call void @pci_wakeup_bus(%struct.pci_bus* %4) #11, !dbg !5791
  br label %if.end, !dbg !5792

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5793
  %call1 = call i32 @pci_raw_set_power_state(%struct.pci_dev* %5, i32 0) #11, !dbg !5794
  ret i32 %call1, !dbg !5795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_raw_set_power_state(%struct.pci_dev* %dev, i32 %state) #0 !dbg !4816 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %state.addr = alloca i32, align 4
  %pmcsr = alloca i16, align 2
  %need_restore = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5796, metadata !DIExpression()), !dbg !5797
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !5798, metadata !DIExpression()), !dbg !5799
  call void @llvm.dbg.declare(metadata i16* %pmcsr, metadata !5800, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.declare(metadata i8* %need_restore, metadata !5802, metadata !DIExpression()), !dbg !5803
  store i8 0, i8* %need_restore, align 1, !dbg !5803
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5804
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 26, !dbg !5806
  %1 = load i32, i32* %current_state, align 8, !dbg !5806
  %2 = load i32, i32* %state.addr, align 4, !dbg !5807
  %cmp = icmp eq i32 %1, %2, !dbg !5808
  br i1 %cmp, label %if.then, label %if.end, !dbg !5809

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5810
  br label %return, !dbg !5810

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5811
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 28, !dbg !5813
  %4 = load i8, i8* %pm_cap, align 1, !dbg !5813
  %tobool = icmp ne i8 %4, 0, !dbg !5811
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !5814

if.then1:                                         ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !5815
  br label %return, !dbg !5815

if.end2:                                          ; preds = %if.end
  %5 = load i32, i32* %state.addr, align 4, !dbg !5816
  %cmp3 = icmp slt i32 %5, 0, !dbg !5818
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !5819

lor.lhs.false:                                    ; preds = %if.end2
  %6 = load i32, i32* %state.addr, align 4, !dbg !5820
  %cmp4 = icmp sgt i32 %6, 3, !dbg !5821
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5822

if.then5:                                         ; preds = %lor.lhs.false, %if.end2
  store i32 -22, i32* %retval, align 4, !dbg !5823
  br label %return, !dbg !5823

if.end6:                                          ; preds = %lor.lhs.false
  %7 = load i32, i32* %state.addr, align 4, !dbg !5824
  %cmp7 = icmp ne i32 %7, 0, !dbg !5826
  br i1 %cmp7, label %land.lhs.true, label %if.end17, !dbg !5827

land.lhs.true:                                    ; preds = %if.end6
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5828
  %current_state8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 26, !dbg !5829
  %9 = load i32, i32* %current_state8, align 8, !dbg !5829
  %cmp9 = icmp sle i32 %9, 4, !dbg !5830
  br i1 %cmp9, label %land.lhs.true10, label %if.end17, !dbg !5831

land.lhs.true10:                                  ; preds = %land.lhs.true
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5832
  %current_state11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 26, !dbg !5833
  %11 = load i32, i32* %current_state11, align 8, !dbg !5833
  %12 = load i32, i32* %state.addr, align 4, !dbg !5834
  %cmp12 = icmp sgt i32 %11, %12, !dbg !5835
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !5836

if.then13:                                        ; preds = %land.lhs.true10
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5837
  %dev14 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !5837
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5837
  %current_state15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 26, !dbg !5837
  %15 = load i32, i32* %current_state15, align 8, !dbg !5837
  %call = call i8* @pci_power_name(i32 %15) #11, !dbg !5837
  %16 = load i32, i32* %state.addr, align 4, !dbg !5837
  %call16 = call i8* @pci_power_name(i32 %16) #11, !dbg !5837
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev14, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.43, i64 0, i64 0), i8* %call, i8* %call16) #12, !dbg !5837
  store i32 -22, i32* %retval, align 4, !dbg !5839
  br label %return, !dbg !5839

if.end17:                                         ; preds = %land.lhs.true10, %land.lhs.true, %if.end6
  %17 = load i32, i32* %state.addr, align 4, !dbg !5840
  %cmp18 = icmp eq i32 %17, 1, !dbg !5842
  br i1 %cmp18, label %land.lhs.true19, label %lor.lhs.false21, !dbg !5843

land.lhs.true19:                                  ; preds = %if.end17
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5844
  %d1_support = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 29, !dbg !5845
  %19 = bitcast i24* %d1_support to i32*, !dbg !5845
  %bf.load = load i32, i32* %19, align 2, !dbg !5845
  %bf.lshr = lshr i32 %bf.load, 6, !dbg !5845
  %bf.clear = and i32 %bf.lshr, 1, !dbg !5845
  %tobool20 = icmp ne i32 %bf.clear, 0, !dbg !5844
  br i1 %tobool20, label %lor.lhs.false21, label %if.then28, !dbg !5846

lor.lhs.false21:                                  ; preds = %land.lhs.true19, %if.end17
  %20 = load i32, i32* %state.addr, align 4, !dbg !5847
  %cmp22 = icmp eq i32 %20, 2, !dbg !5848
  br i1 %cmp22, label %land.lhs.true23, label %if.end29, !dbg !5849

land.lhs.true23:                                  ; preds = %lor.lhs.false21
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5850
  %d2_support = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 29, !dbg !5851
  %22 = bitcast i24* %d2_support to i32*, !dbg !5851
  %bf.load24 = load i32, i32* %22, align 2, !dbg !5851
  %bf.lshr25 = lshr i32 %bf.load24, 7, !dbg !5851
  %bf.clear26 = and i32 %bf.lshr25, 1, !dbg !5851
  %tobool27 = icmp ne i32 %bf.clear26, 0, !dbg !5850
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !5852

if.then28:                                        ; preds = %land.lhs.true23, %land.lhs.true19
  store i32 -5, i32* %retval, align 4, !dbg !5853
  br label %return, !dbg !5853

if.end29:                                         ; preds = %land.lhs.true23, %lor.lhs.false21
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5854
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5855
  %pm_cap30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 28, !dbg !5856
  %25 = load i8, i8* %pm_cap30, align 1, !dbg !5856
  %conv = zext i8 %25 to i32, !dbg !5855
  %add = add i32 %conv, 4, !dbg !5857
  %call31 = call i32 @pci_read_config_word(%struct.pci_dev* %23, i32 %add, i16* %pmcsr) #11, !dbg !5858
  %26 = load i16, i16* %pmcsr, align 2, !dbg !5859
  %conv32 = zext i16 %26 to i32, !dbg !5859
  %cmp33 = icmp eq i32 %conv32, 65535, !dbg !5861
  br i1 %cmp33, label %if.then35, label %if.end40, !dbg !5862

if.then35:                                        ; preds = %if.end29
  %27 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5863
  %dev36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 41, !dbg !5863
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5863
  %current_state37 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 26, !dbg !5863
  %29 = load i32, i32* %current_state37, align 8, !dbg !5863
  %call38 = call i8* @pci_power_name(i32 %29) #11, !dbg !5863
  %30 = load i32, i32* %state.addr, align 4, !dbg !5863
  %call39 = call i8* @pci_power_name(i32 %30) #11, !dbg !5863
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev36, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.44, i64 0, i64 0), i8* %call38, i8* %call39) #12, !dbg !5863
  store i32 -5, i32* %retval, align 4, !dbg !5865
  br label %return, !dbg !5865

if.end40:                                         ; preds = %if.end29
  %31 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5866
  %current_state41 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 26, !dbg !5867
  %32 = load i32, i32* %current_state41, align 8, !dbg !5867
  switch i32 %32, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb46
    i32 4, label %sw.bb46
    i32 5, label %sw.bb46
  ], !dbg !5868

sw.bb:                                            ; preds = %if.end40, %if.end40, %if.end40
  %33 = load i16, i16* %pmcsr, align 2, !dbg !5869
  %conv42 = zext i16 %33 to i32, !dbg !5869
  %and = and i32 %conv42, -4, !dbg !5869
  %conv43 = trunc i32 %and to i16, !dbg !5869
  store i16 %conv43, i16* %pmcsr, align 2, !dbg !5869
  %34 = load i32, i32* %state.addr, align 4, !dbg !5871
  %35 = load i16, i16* %pmcsr, align 2, !dbg !5872
  %conv44 = zext i16 %35 to i32, !dbg !5872
  %or = or i32 %conv44, %34, !dbg !5872
  %conv45 = trunc i32 %or to i16, !dbg !5872
  store i16 %conv45, i16* %pmcsr, align 2, !dbg !5872
  br label %sw.epilog, !dbg !5873

sw.bb46:                                          ; preds = %if.end40, %if.end40, %if.end40
  %36 = load i16, i16* %pmcsr, align 2, !dbg !5874
  %conv47 = zext i16 %36 to i32, !dbg !5874
  %and48 = and i32 %conv47, 3, !dbg !5876
  %cmp49 = icmp eq i32 %and48, 3, !dbg !5877
  br i1 %cmp49, label %land.lhs.true51, label %if.end56, !dbg !5878

land.lhs.true51:                                  ; preds = %sw.bb46
  %37 = load i16, i16* %pmcsr, align 2, !dbg !5879
  %conv52 = zext i16 %37 to i32, !dbg !5879
  %and53 = and i32 %conv52, 8, !dbg !5880
  %tobool54 = icmp ne i32 %and53, 0, !dbg !5880
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !5881

if.then55:                                        ; preds = %land.lhs.true51
  store i8 1, i8* %need_restore, align 1, !dbg !5882
  br label %if.end56, !dbg !5883

if.end56:                                         ; preds = %if.then55, %land.lhs.true51, %sw.bb46
  br label %sw.default, !dbg !5884

sw.default:                                       ; preds = %if.end40, %if.end56
  store i16 0, i16* %pmcsr, align 2, !dbg !5885
  br label %sw.epilog, !dbg !5886

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %38 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5887
  %39 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5888
  %pm_cap57 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 28, !dbg !5889
  %40 = load i8, i8* %pm_cap57, align 1, !dbg !5889
  %conv58 = zext i8 %40 to i32, !dbg !5888
  %add59 = add i32 %conv58, 4, !dbg !5890
  %41 = load i16, i16* %pmcsr, align 2, !dbg !5891
  %call60 = call i32 @pci_write_config_word(%struct.pci_dev* %38, i32 %add59, i16 zeroext %41) #11, !dbg !5892
  %42 = load i32, i32* %state.addr, align 4, !dbg !5893
  %cmp61 = icmp eq i32 %42, 3, !dbg !5895
  br i1 %cmp61, label %if.then67, label %lor.lhs.false63, !dbg !5896

lor.lhs.false63:                                  ; preds = %sw.epilog
  %43 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5897
  %current_state64 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 26, !dbg !5898
  %44 = load i32, i32* %current_state64, align 8, !dbg !5898
  %cmp65 = icmp eq i32 %44, 3, !dbg !5899
  br i1 %cmp65, label %if.then67, label %if.else, !dbg !5900

if.then67:                                        ; preds = %lor.lhs.false63, %sw.epilog
  %45 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5901
  call void @pci_dev_d3_sleep(%struct.pci_dev* %45) #11, !dbg !5902
  br label %if.end76, !dbg !5902

if.else:                                          ; preds = %lor.lhs.false63
  %46 = load i32, i32* %state.addr, align 4, !dbg !5903
  %cmp68 = icmp eq i32 %46, 2, !dbg !5905
  br i1 %cmp68, label %if.then74, label %lor.lhs.false70, !dbg !5906

lor.lhs.false70:                                  ; preds = %if.else
  %47 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5907
  %current_state71 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %47, i32 0, i32 26, !dbg !5908
  %48 = load i32, i32* %current_state71, align 8, !dbg !5908
  %cmp72 = icmp eq i32 %48, 2, !dbg !5909
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !5910

if.then74:                                        ; preds = %lor.lhs.false70, %if.else
  call void @__const_udelay(i64 859000) #11, !dbg !5911
  br label %if.end75, !dbg !5916

if.end75:                                         ; preds = %if.then74, %lor.lhs.false70
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then67
  %49 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5917
  %50 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5918
  %pm_cap77 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %50, i32 0, i32 28, !dbg !5919
  %51 = load i8, i8* %pm_cap77, align 1, !dbg !5919
  %conv78 = zext i8 %51 to i32, !dbg !5918
  %add79 = add i32 %conv78, 4, !dbg !5920
  %call80 = call i32 @pci_read_config_word(%struct.pci_dev* %49, i32 %add79, i16* %pmcsr) #11, !dbg !5921
  %52 = load i16, i16* %pmcsr, align 2, !dbg !5922
  %conv81 = zext i16 %52 to i32, !dbg !5922
  %and82 = and i32 %conv81, 3, !dbg !5923
  %53 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5924
  %current_state83 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %53, i32 0, i32 26, !dbg !5925
  store i32 %and82, i32* %current_state83, align 8, !dbg !5926
  %54 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5927
  %current_state84 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 26, !dbg !5929
  %55 = load i32, i32* %current_state84, align 8, !dbg !5929
  %56 = load i32, i32* %state.addr, align 4, !dbg !5930
  %cmp85 = icmp ne i32 %55, %56, !dbg !5931
  br i1 %cmp85, label %if.then87, label %if.end96, !dbg !5932

if.then87:                                        ; preds = %if.end76
  br label %do.body, !dbg !5933

do.body:                                          ; preds = %if.then87
  %call88 = call i32 @___ratelimit(%struct.ratelimit_state* @pci_raw_set_power_state._rs, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.pci_raw_set_power_state, i64 0, i64 0)) #11, !dbg !5934
  %tobool89 = icmp ne i32 %call88, 0, !dbg !5934
  br i1 %tobool89, label %if.then90, label %if.end95, !dbg !5937

if.then90:                                        ; preds = %do.body
  %57 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5934
  %dev91 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %57, i32 0, i32 41, !dbg !5934
  %58 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5934
  %current_state92 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %58, i32 0, i32 26, !dbg !5934
  %59 = load i32, i32* %current_state92, align 8, !dbg !5934
  %call93 = call i8* @pci_power_name(i32 %59) #11, !dbg !5934
  %60 = load i32, i32* %state.addr, align 4, !dbg !5934
  %call94 = call i8* @pci_power_name(i32 %60) #11, !dbg !5934
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev91, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.45, i64 0, i64 0), i8* %call93, i8* %call94) #12, !dbg !5934
  br label %if.end95, !dbg !5934

if.end95:                                         ; preds = %if.then90, %do.body
  br label %do.end, !dbg !5937

do.end:                                           ; preds = %if.end95
  br label %if.end96, !dbg !5937

if.end96:                                         ; preds = %do.end, %if.end76
  %61 = load i8, i8* %need_restore, align 1, !dbg !5938
  %tobool97 = trunc i8 %61 to i1, !dbg !5938
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !5940

if.then98:                                        ; preds = %if.end96
  %62 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5941
  call void @pci_restore_bars(%struct.pci_dev* %62) #11, !dbg !5942
  br label %if.end99, !dbg !5942

if.end99:                                         ; preds = %if.then98, %if.end96
  %63 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5943
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %63, i32 0, i32 1, !dbg !5945
  %64 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !5945
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %64, i32 0, i32 4, !dbg !5946
  %65 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !5946
  %tobool100 = icmp ne %struct.pci_dev* %65, null, !dbg !5943
  br i1 %tobool100, label %if.then101, label %if.end104, !dbg !5947

if.then101:                                       ; preds = %if.end99
  %66 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5948
  %bus102 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %66, i32 0, i32 1, !dbg !5949
  %67 = load %struct.pci_bus*, %struct.pci_bus** %bus102, align 8, !dbg !5949
  %self103 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %67, i32 0, i32 4, !dbg !5950
  %68 = load %struct.pci_dev*, %struct.pci_dev** %self103, align 8, !dbg !5950
  call void @pcie_aspm_pm_state_change(%struct.pci_dev* %68) #11, !dbg !5951
  br label %if.end104, !dbg !5951

if.end104:                                        ; preds = %if.then101, %if.end99
  store i32 0, i32* %retval, align 4, !dbg !5952
  br label %return, !dbg !5952

return:                                           ; preds = %if.end104, %if.then35, %if.then28, %if.then13, %if.then5, %if.then1, %if.then
  %69 = load i32, i32* %retval, align 4, !dbg !5953
  ret i32 %69, !dbg !5953
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_bus_set_current_state(%struct.pci_bus* %bus, i32 %state) #0 !dbg !5954 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %state.addr = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !5957, metadata !DIExpression()), !dbg !5958
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !5959, metadata !DIExpression()), !dbg !5960
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5961
  %tobool = icmp ne %struct.pci_bus* %0, null, !dbg !5961
  br i1 %tobool, label %if.then, label %if.end, !dbg !5963

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !5964
  %2 = bitcast i32* %state.addr to i8*, !dbg !5965
  call void @pci_walk_bus(%struct.pci_bus* %1, i32 (%struct.pci_dev*, i8*)* @__pci_dev_set_current_state, i8* %2) #11, !dbg !5966
  br label %if.end, !dbg !5966

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__pci_dev_set_current_state(%struct.pci_dev* %dev, i8* %data) #0 !dbg !5968 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  %state = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5969, metadata !DIExpression()), !dbg !5970
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5971, metadata !DIExpression()), !dbg !5972
  call void @llvm.dbg.declare(metadata i32* %state, metadata !5973, metadata !DIExpression()), !dbg !5974
  %0 = load i8*, i8** %data.addr, align 8, !dbg !5975
  %1 = bitcast i8* %0 to i32*, !dbg !5976
  %2 = load i32, i32* %1, align 4, !dbg !5977
  store i32 %2, i32* %state, align 4, !dbg !5974
  %3 = load i32, i32* %state, align 4, !dbg !5978
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !5979
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 26, !dbg !5980
  store i32 %3, i32* %current_state, align 8, !dbg !5981
  ret i32 0, !dbg !5982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_set_power_state(%struct.pci_dev* %dev, i32 %state) #0 !dbg !5983 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %state.addr = alloca i32, align 4
  %error = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !5984, metadata !DIExpression()), !dbg !5985
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !5986, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.declare(metadata i32* %error, metadata !5988, metadata !DIExpression()), !dbg !5989
  %0 = load i32, i32* %state.addr, align 4, !dbg !5990
  %cmp = icmp sgt i32 %0, 4, !dbg !5992
  br i1 %cmp, label %if.then, label %if.else, !dbg !5993

if.then:                                          ; preds = %entry
  store i32 4, i32* %state.addr, align 4, !dbg !5994
  br label %if.end8, !dbg !5995

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %state.addr, align 4, !dbg !5996
  %cmp1 = icmp slt i32 %1, 0, !dbg !5998
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !5999

if.then2:                                         ; preds = %if.else
  store i32 0, i32* %state.addr, align 4, !dbg !6000
  br label %if.end7, !dbg !6001

if.else3:                                         ; preds = %if.else
  %2 = load i32, i32* %state.addr, align 4, !dbg !6002
  %cmp4 = icmp eq i32 %2, 1, !dbg !6004
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false, !dbg !6005

lor.lhs.false:                                    ; preds = %if.else3
  %3 = load i32, i32* %state.addr, align 4, !dbg !6006
  %cmp5 = icmp eq i32 %3, 2, !dbg !6007
  br i1 %cmp5, label %land.lhs.true, label %if.end, !dbg !6008

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else3
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6009
  %call = call i32 @pci_no_d1d2(%struct.pci_dev* %4) #11, !dbg !6010
  %tobool = icmp ne i32 %call, 0, !dbg !6010
  br i1 %tobool, label %if.then6, label %if.end, !dbg !6011

if.then6:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !6012
  br label %return, !dbg !6012

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then2
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6013
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 26, !dbg !6015
  %6 = load i32, i32* %current_state, align 8, !dbg !6015
  %7 = load i32, i32* %state.addr, align 4, !dbg !6016
  %cmp9 = icmp eq i32 %6, %7, !dbg !6017
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !6018

if.then10:                                        ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !6019
  br label %return, !dbg !6019

if.end11:                                         ; preds = %if.end8
  %8 = load i32, i32* %state.addr, align 4, !dbg !6020
  %cmp12 = icmp eq i32 %8, 0, !dbg !6022
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !6023

if.then13:                                        ; preds = %if.end11
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6024
  %call14 = call i32 @pci_power_up(%struct.pci_dev* %9) #11, !dbg !6025
  store i32 %call14, i32* %retval, align 4, !dbg !6026
  br label %return, !dbg !6026

if.end15:                                         ; preds = %if.end11
  %10 = load i32, i32* %state.addr, align 4, !dbg !6027
  %cmp16 = icmp sge i32 %10, 3, !dbg !6029
  br i1 %cmp16, label %land.lhs.true17, label %if.end20, !dbg !6030

land.lhs.true17:                                  ; preds = %if.end15
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6031
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 47, !dbg !6032
  %12 = load i16, i16* %dev_flags, align 2, !dbg !6032
  %conv = zext i16 %12 to i32, !dbg !6031
  %and = and i32 %conv, 2, !dbg !6033
  %tobool18 = icmp ne i32 %and, 0, !dbg !6033
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !6034

if.then19:                                        ; preds = %land.lhs.true17
  store i32 0, i32* %retval, align 4, !dbg !6035
  br label %return, !dbg !6035

if.end20:                                         ; preds = %land.lhs.true17, %if.end15
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6036
  %14 = load i32, i32* %state.addr, align 4, !dbg !6037
  %cmp21 = icmp sgt i32 %14, 3, !dbg !6038
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !6037

cond.true:                                        ; preds = %if.end20
  br label %cond.end, !dbg !6037

cond.false:                                       ; preds = %if.end20
  %15 = load i32, i32* %state.addr, align 4, !dbg !6039
  br label %cond.end, !dbg !6037

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 3, %cond.true ], [ %15, %cond.false ], !dbg !6037
  %call23 = call i32 @pci_raw_set_power_state(%struct.pci_dev* %13, i32 %cond) #11, !dbg !6040
  store i32 %call23, i32* %error, align 4, !dbg !6041
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6042
  %17 = load i32, i32* %state.addr, align 4, !dbg !6044
  %call24 = call i32 @pci_platform_power_transition(%struct.pci_dev* %16, i32 %17) #11, !dbg !6045
  %tobool25 = icmp ne i32 %call24, 0, !dbg !6045
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !6046

if.then26:                                        ; preds = %cond.end
  %18 = load i32, i32* %error, align 4, !dbg !6047
  store i32 %18, i32* %retval, align 4, !dbg !6048
  br label %return, !dbg !6048

if.end27:                                         ; preds = %cond.end
  %19 = load i32, i32* %state.addr, align 4, !dbg !6049
  %cmp28 = icmp eq i32 %19, 4, !dbg !6051
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !6052

if.then30:                                        ; preds = %if.end27
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6053
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 2, !dbg !6054
  %21 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !6054
  call void @pci_bus_set_current_state(%struct.pci_bus* %21, i32 4) #11, !dbg !6055
  br label %if.end31, !dbg !6055

if.end31:                                         ; preds = %if.then30, %if.end27
  store i32 0, i32* %retval, align 4, !dbg !6056
  br label %return, !dbg !6056

return:                                           ; preds = %if.end31, %if.then26, %if.then19, %if.then13, %if.then10, %if.then6
  %22 = load i32, i32* %retval, align 4, !dbg !6057
  ret i32 %22, !dbg !6057
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_no_d1d2(%struct.pci_dev* %dev) #0 !dbg !6058 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %parent_dstates = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6059, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.declare(metadata i32* %parent_dstates, metadata !6061, metadata !DIExpression()), !dbg !6062
  store i32 0, i32* %parent_dstates, align 4, !dbg !6062
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6063
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !6065
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6065
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 4, !dbg !6066
  %2 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !6066
  %tobool = icmp ne %struct.pci_dev* %2, null, !dbg !6063
  br i1 %tobool, label %if.then, label %if.end, !dbg !6067

if.then:                                          ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6068
  %bus1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 1, !dbg !6069
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !6069
  %self2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 4, !dbg !6070
  %5 = load %struct.pci_dev*, %struct.pci_dev** %self2, align 8, !dbg !6070
  %no_d1d2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 29, !dbg !6071
  %6 = bitcast i24* %no_d1d2 to i32*, !dbg !6071
  %bf.load = load i32, i32* %6, align 2, !dbg !6071
  %bf.lshr = lshr i32 %bf.load, 8, !dbg !6071
  %bf.clear = and i32 %bf.lshr, 1, !dbg !6071
  store i32 %bf.clear, i32* %parent_dstates, align 4, !dbg !6072
  br label %if.end, !dbg !6073

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6074
  %no_d1d23 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 29, !dbg !6075
  %8 = bitcast i24* %no_d1d23 to i32*, !dbg !6075
  %bf.load4 = load i32, i32* %8, align 2, !dbg !6075
  %bf.lshr5 = lshr i32 %bf.load4, 8, !dbg !6075
  %bf.clear6 = and i32 %bf.lshr5, 1, !dbg !6075
  %tobool7 = icmp ne i32 %bf.clear6, 0, !dbg !6074
  br i1 %tobool7, label %lor.end, label %lor.rhs, !dbg !6076

lor.rhs:                                          ; preds = %if.end
  %9 = load i32, i32* %parent_dstates, align 4, !dbg !6077
  %tobool8 = icmp ne i32 %9, 0, !dbg !6076
  br label %lor.end, !dbg !6076

lor.end:                                          ; preds = %lor.rhs, %if.end
  %10 = phi i1 [ true, %if.end ], [ %tobool8, %lor.rhs ]
  %lor.ext = zext i1 %10 to i32, !dbg !6076
  ret i32 %lor.ext, !dbg !6078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_choose_state(%struct.pci_dev* %dev, i32 %state.coerce) #0 !dbg !6079 {
entry:
  %retval = alloca i32, align 4
  %state = alloca %struct.pm_message, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ret = alloca i32, align 4
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %state, i32 0, i32 0
  store i32 %state.coerce, i32* %coerce.dive, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6082, metadata !DIExpression()), !dbg !6083
  call void @llvm.dbg.declare(metadata %struct.pm_message* %state, metadata !6084, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6086, metadata !DIExpression()), !dbg !6087
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6088
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 28, !dbg !6090
  %1 = load i8, i8* %pm_cap, align 1, !dbg !6090
  %tobool = icmp ne i8 %1, 0, !dbg !6088
  br i1 %tobool, label %if.end, label %if.then, !dbg !6091

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6092
  br label %return, !dbg !6092

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6093
  %call = call i32 @platform_pci_choose_state(%struct.pci_dev* %2) #11, !dbg !6094
  store i32 %call, i32* %ret, align 4, !dbg !6095
  %3 = load i32, i32* %ret, align 4, !dbg !6096
  %cmp = icmp ne i32 %3, -1, !dbg !6098
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !6099

if.then1:                                         ; preds = %if.end
  %4 = load i32, i32* %ret, align 4, !dbg !6100
  store i32 %4, i32* %retval, align 4, !dbg !6101
  br label %return, !dbg !6101

if.end2:                                          ; preds = %if.end
  %event = getelementptr inbounds %struct.pm_message, %struct.pm_message* %state, i32 0, i32 0, !dbg !6102
  %5 = load i32, i32* %event, align 4, !dbg !6102
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 8, label %sw.bb3
    i32 2, label %sw.bb3
    i32 4, label %sw.bb3
  ], !dbg !6103

sw.bb:                                            ; preds = %if.end2
  store i32 0, i32* %retval, align 4, !dbg !6104
  br label %return, !dbg !6104

sw.bb3:                                           ; preds = %if.end2, %if.end2, %if.end2, %if.end2
  store i32 3, i32* %retval, align 4, !dbg !6106
  br label %return, !dbg !6106

sw.default:                                       ; preds = %if.end2
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6107
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !6107
  %event5 = getelementptr inbounds %struct.pm_message, %struct.pm_message* %state, i32 0, i32 0, !dbg !6107
  %7 = load i32, i32* %event5, align 4, !dbg !6107
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i64 0, i64 0), i32 %7) #12, !dbg !6107
  br label %do.body, !dbg !6108

do.body:                                          ; preds = %sw.default
  br label %do.body6, !dbg !6109

do.body6:                                         ; preds = %do.body
  br label %do.end, !dbg !6111

do.end:                                           ; preds = %do.body6
  br label %do.body7, !dbg !6109

do.body7:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i32 1389, i32 0, i64 12) #10, !dbg !6113, !srcloc !6115
  br label %do.end8, !dbg !6113

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !6109

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 244) #10, !dbg !6116, !srcloc !6119
  unreachable, !dbg !6120

do.end10:                                         ; No predecessors!
  br label %do.end11, !dbg !6109

do.end11:                                         ; preds = %do.end10
  br label %sw.epilog, !dbg !6121

sw.epilog:                                        ; preds = %do.end11
  store i32 0, i32* %retval, align 4, !dbg !6122
  br label %return, !dbg !6122

return:                                           ; preds = %sw.epilog, %sw.bb3, %sw.bb, %if.then1, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !6123
  ret i32 %8, !dbg !6123
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @platform_pci_choose_state(%struct.pci_dev* %dev) #0 !dbg !6124 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6125, metadata !DIExpression()), !dbg !6126
  %0 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !6127
  %tobool = icmp ne %struct.pci_platform_pm_ops* %0, null, !dbg !6127
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6127

cond.true:                                        ; preds = %entry
  %1 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !6128
  %choose_state = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %1, i32 0, i32 5, !dbg !6129
  %2 = load i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)** %choose_state, align 8, !dbg !6129
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6130
  %call = call i32 %2(%struct.pci_dev* %3) #11, !dbg !6128
  br label %cond.end, !dbg !6127

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6127

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ -1, %cond.false ], !dbg !6127
  ret i32 %cond, !dbg !6131
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.pci_cap_saved_state* @pci_find_saved_cap(%struct.pci_dev* %dev, i8 signext %cap) #0 !dbg !6132 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cap.addr = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6135, metadata !DIExpression()), !dbg !6136
  store i8 %cap, i8* %cap.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cap.addr, metadata !6137, metadata !DIExpression()), !dbg !6138
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6139
  %1 = load i8, i8* %cap.addr, align 1, !dbg !6140
  %conv = sext i8 %1 to i16, !dbg !6140
  %call = call %struct.pci_cap_saved_state* @_pci_find_saved_cap(%struct.pci_dev* %0, i16 zeroext %conv, i1 zeroext false) #11, !dbg !6141
  ret %struct.pci_cap_saved_state* %call, !dbg !6142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_cap_saved_state* @_pci_find_saved_cap(%struct.pci_dev* %pci_dev, i16 zeroext %cap, i1 zeroext %extended) #0 !dbg !6143 {
entry:
  %retval = alloca %struct.pci_cap_saved_state*, align 8
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  %cap.addr = alloca i16, align 2
  %extended.addr = alloca i8, align 1
  %tmp = alloca %struct.pci_cap_saved_state*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp1 = alloca %struct.pci_cap_saved_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp2 = alloca %struct.pci_cap_saved_state*, align 8
  %____ptr14 = alloca %struct.hlist_node*, align 8
  %tmp16 = alloca %struct.pci_cap_saved_state*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp22 = alloca %struct.pci_cap_saved_state*, align 8
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !6146, metadata !DIExpression()), !dbg !6147
  store i16 %cap, i16* %cap.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cap.addr, metadata !6148, metadata !DIExpression()), !dbg !6149
  %frombool = zext i1 %extended to i8
  store i8 %frombool, i8* %extended.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %extended.addr, metadata !6150, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_state** %tmp, metadata !6152, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !6154, metadata !DIExpression()), !dbg !6157
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !6157
  %saved_cap_space = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 51, !dbg !6157
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %saved_cap_space, i32 0, i32 0, !dbg !6157
  %1 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !6157
  store %struct.hlist_node* %1, %struct.hlist_node** %____ptr, align 8, !dbg !6157
  %2 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !6157
  %tobool = icmp ne %struct.hlist_node* %2, null, !dbg !6157
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6157

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6158, metadata !DIExpression()), !dbg !6160
  %3 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !6160
  %4 = bitcast %struct.hlist_node* %3 to i8*, !dbg !6160
  store i8* %4, i8** %__mptr, align 8, !dbg !6160
  br label %do.body, !dbg !6160

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !6161

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !6160
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !6160
  %6 = bitcast i8* %add.ptr to %struct.pci_cap_saved_state*, !dbg !6160
  store %struct.pci_cap_saved_state* %6, %struct.pci_cap_saved_state** %tmp2, align 8, !dbg !6161
  %7 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp2, align 8, !dbg !6160
  br label %cond.end, !dbg !6157

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6157

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.pci_cap_saved_state* [ %7, %do.end ], [ null, %cond.false ], !dbg !6157
  store %struct.pci_cap_saved_state* %cond, %struct.pci_cap_saved_state** %tmp1, align 8, !dbg !6157
  %8 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp1, align 8, !dbg !6157
  store %struct.pci_cap_saved_state* %8, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6163
  br label %for.cond, !dbg !6163

for.cond:                                         ; preds = %cond.end25, %cond.end
  %9 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6164
  %tobool3 = icmp ne %struct.pci_cap_saved_state* %9, null, !dbg !6163
  br i1 %tobool3, label %for.body, label %for.end, !dbg !6163

for.body:                                         ; preds = %for.cond
  %10 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6166
  %cap4 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %10, i32 0, i32 1, !dbg !6169
  %cap_extended = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap4, i32 0, i32 1, !dbg !6170
  %11 = load i8, i8* %cap_extended, align 2, !dbg !6170
  %tobool5 = trunc i8 %11 to i1, !dbg !6170
  %conv = zext i1 %tobool5 to i32, !dbg !6166
  %12 = load i8, i8* %extended.addr, align 1, !dbg !6171
  %tobool6 = trunc i8 %12 to i1, !dbg !6171
  %conv7 = zext i1 %tobool6 to i32, !dbg !6171
  %cmp = icmp eq i32 %conv, %conv7, !dbg !6172
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6173

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6174
  %cap9 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %13, i32 0, i32 1, !dbg !6175
  %cap_nr = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap9, i32 0, i32 0, !dbg !6176
  %14 = load i16, i16* %cap_nr, align 8, !dbg !6176
  %conv10 = zext i16 %14 to i32, !dbg !6174
  %15 = load i16, i16* %cap.addr, align 2, !dbg !6177
  %conv11 = zext i16 %15 to i32, !dbg !6177
  %cmp12 = icmp eq i32 %conv10, %conv11, !dbg !6178
  br i1 %cmp12, label %if.then, label %if.end, !dbg !6179

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6180
  store %struct.pci_cap_saved_state* %16, %struct.pci_cap_saved_state** %retval, align 8, !dbg !6181
  br label %return, !dbg !6181

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !6182

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr14, metadata !6183, metadata !DIExpression()), !dbg !6185
  %17 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6185
  %next = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %17, i32 0, i32 0, !dbg !6185
  %next15 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %next, i32 0, i32 0, !dbg !6185
  %18 = load %struct.hlist_node*, %struct.hlist_node** %next15, align 8, !dbg !6185
  store %struct.hlist_node* %18, %struct.hlist_node** %____ptr14, align 8, !dbg !6185
  %19 = load %struct.hlist_node*, %struct.hlist_node** %____ptr14, align 8, !dbg !6185
  %tobool17 = icmp ne %struct.hlist_node* %19, null, !dbg !6185
  br i1 %tobool17, label %cond.true18, label %cond.false24, !dbg !6185

cond.true18:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !6186, metadata !DIExpression()), !dbg !6188
  %20 = load %struct.hlist_node*, %struct.hlist_node** %____ptr14, align 8, !dbg !6188
  %21 = bitcast %struct.hlist_node* %20 to i8*, !dbg !6188
  store i8* %21, i8** %__mptr19, align 8, !dbg !6188
  br label %do.body20, !dbg !6188

do.body20:                                        ; preds = %cond.true18
  br label %do.end21, !dbg !6189

do.end21:                                         ; preds = %do.body20
  %22 = load i8*, i8** %__mptr19, align 8, !dbg !6188
  %add.ptr23 = getelementptr i8, i8* %22, i64 0, !dbg !6188
  %23 = bitcast i8* %add.ptr23 to %struct.pci_cap_saved_state*, !dbg !6188
  store %struct.pci_cap_saved_state* %23, %struct.pci_cap_saved_state** %tmp22, align 8, !dbg !6189
  %24 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp22, align 8, !dbg !6188
  br label %cond.end25, !dbg !6185

cond.false24:                                     ; preds = %for.inc
  br label %cond.end25, !dbg !6185

cond.end25:                                       ; preds = %cond.false24, %do.end21
  %cond26 = phi %struct.pci_cap_saved_state* [ %24, %do.end21 ], [ null, %cond.false24 ], !dbg !6185
  store %struct.pci_cap_saved_state* %cond26, %struct.pci_cap_saved_state** %tmp16, align 8, !dbg !6185
  %25 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp16, align 8, !dbg !6185
  store %struct.pci_cap_saved_state* %25, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6164
  br label %for.cond, !dbg !6164, !llvm.loop !6191

for.end:                                          ; preds = %for.cond
  store %struct.pci_cap_saved_state* null, %struct.pci_cap_saved_state** %retval, align 8, !dbg !6193
  br label %return, !dbg !6193

return:                                           ; preds = %for.end, %if.then
  %26 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %retval, align 8, !dbg !6194
  ret %struct.pci_cap_saved_state* %26, !dbg !6194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.pci_cap_saved_state* @pci_find_saved_ext_cap(%struct.pci_dev* %dev, i16 zeroext %cap) #0 !dbg !6195 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cap.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6198, metadata !DIExpression()), !dbg !6199
  store i16 %cap, i16* %cap.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cap.addr, metadata !6200, metadata !DIExpression()), !dbg !6201
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6202
  %1 = load i16, i16* %cap.addr, align 2, !dbg !6203
  %call = call %struct.pci_cap_saved_state* @_pci_find_saved_cap(%struct.pci_dev* %0, i16 zeroext %1, i1 zeroext true) #11, !dbg !6204
  ret %struct.pci_cap_saved_state* %call, !dbg !6205
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_save_state(%struct.pci_dev* %dev) #0 !dbg !6206 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6207, metadata !DIExpression()), !dbg !6208
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6209, metadata !DIExpression()), !dbg !6210
  store i32 0, i32* %i, align 4, !dbg !6211
  br label %for.cond, !dbg !6213

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6214
  %cmp = icmp slt i32 %0, 16, !dbg !6216
  br i1 %cmp, label %for.body, label %for.end, !dbg !6217

for.body:                                         ; preds = %for.cond
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6218
  %2 = load i32, i32* %i, align 4, !dbg !6220
  %mul = mul i32 %2, 4, !dbg !6221
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6222
  %saved_config_space = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 49, !dbg !6223
  %4 = load i32, i32* %i, align 4, !dbg !6224
  %idxprom = sext i32 %4 to i64, !dbg !6222
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %saved_config_space, i64 0, i64 %idxprom, !dbg !6222
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %1, i32 %mul, i32* %arrayidx) #11, !dbg !6225
  br label %for.inc, !dbg !6226

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !6227
  %inc = add i32 %5, 1, !dbg !6227
  store i32 %inc, i32* %i, align 4, !dbg !6227
  br label %for.cond, !dbg !6228, !llvm.loop !6229

for.end:                                          ; preds = %for.cond
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6231
  %state_saved = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 46, !dbg !6232
  %7 = bitcast [5 x i8]* %state_saved to i40*, !dbg !6232
  %bf.load = load i40, i40* %7, align 1, !dbg !6233
  %bf.clear = and i40 %bf.load, -1048577, !dbg !6233
  %bf.set = or i40 %bf.clear, 1048576, !dbg !6233
  store i40 %bf.set, i40* %7, align 1, !dbg !6233
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6234
  %call1 = call i32 @pci_save_pcie_state(%struct.pci_dev* %8) #11, !dbg !6235
  store i32 %call1, i32* %i, align 4, !dbg !6236
  %9 = load i32, i32* %i, align 4, !dbg !6237
  %cmp2 = icmp ne i32 %9, 0, !dbg !6239
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6240

if.then:                                          ; preds = %for.end
  %10 = load i32, i32* %i, align 4, !dbg !6241
  store i32 %10, i32* %retval, align 4, !dbg !6242
  br label %return, !dbg !6242

if.end:                                           ; preds = %for.end
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6243
  %call3 = call i32 @pci_save_pcix_state(%struct.pci_dev* %11) #11, !dbg !6244
  store i32 %call3, i32* %i, align 4, !dbg !6245
  %12 = load i32, i32* %i, align 4, !dbg !6246
  %cmp4 = icmp ne i32 %12, 0, !dbg !6248
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !6249

if.then5:                                         ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !6250
  store i32 %13, i32* %retval, align 4, !dbg !6251
  br label %return, !dbg !6251

if.end6:                                          ; preds = %if.end
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6252
  call void @pci_save_ltr_state(%struct.pci_dev* %14) #11, !dbg !6253
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6254
  call void @pci_save_dpc_state(%struct.pci_dev* %15) #11, !dbg !6255
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6256
  call void @pci_save_aer_state(%struct.pci_dev* %16) #11, !dbg !6257
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6258
  %call7 = call i32 @pci_save_vc_state(%struct.pci_dev* %17) #11, !dbg !6259
  store i32 %call7, i32* %retval, align 4, !dbg !6260
  br label %return, !dbg !6260

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !6261
  ret i32 %18, !dbg !6261
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_save_pcie_state(%struct.pci_dev* %dev) #0 !dbg !6262 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  %save_state = alloca %struct.pci_cap_saved_state*, align 8
  %cap = alloca i16*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6263, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6265, metadata !DIExpression()), !dbg !6266
  store i32 0, i32* %i, align 4, !dbg !6266
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_state** %save_state, metadata !6267, metadata !DIExpression()), !dbg !6268
  call void @llvm.dbg.declare(metadata i16** %cap, metadata !6269, metadata !DIExpression()), !dbg !6270
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6271
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %0) #11, !dbg !6273
  br i1 %call, label %if.end, label %if.then, !dbg !6274

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6275
  br label %return, !dbg !6275

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6276
  %call1 = call %struct.pci_cap_saved_state* @pci_find_saved_cap(%struct.pci_dev* %1, i8 signext 16) #11, !dbg !6277
  store %struct.pci_cap_saved_state* %call1, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6278
  %2 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6279
  %tobool = icmp ne %struct.pci_cap_saved_state* %2, null, !dbg !6279
  br i1 %tobool, label %if.end4, label %if.then2, !dbg !6281

if.then2:                                         ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6282
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !6282
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.pci_save_pcie_state, i64 0, i64 0)) #12, !dbg !6282
  store i32 -12, i32* %retval, align 4, !dbg !6284
  br label %return, !dbg !6284

if.end4:                                          ; preds = %if.end
  %4 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6285
  %cap5 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %4, i32 0, i32 1, !dbg !6286
  %data = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap5, i32 0, i32 3, !dbg !6287
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %data, i64 0, i64 0, !dbg !6285
  %5 = bitcast i32* %arrayidx to i16*, !dbg !6288
  store i16* %5, i16** %cap, align 8, !dbg !6289
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6290
  %7 = load i16*, i16** %cap, align 8, !dbg !6291
  %8 = load i32, i32* %i, align 4, !dbg !6292
  %inc = add i32 %8, 1, !dbg !6292
  store i32 %inc, i32* %i, align 4, !dbg !6292
  %idxprom = sext i32 %8 to i64, !dbg !6291
  %arrayidx6 = getelementptr i16, i16* %7, i64 %idxprom, !dbg !6291
  %call7 = call i32 @pcie_capability_read_word(%struct.pci_dev* %6, i32 8, i16* %arrayidx6) #11, !dbg !6293
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6294
  %10 = load i16*, i16** %cap, align 8, !dbg !6295
  %11 = load i32, i32* %i, align 4, !dbg !6296
  %inc8 = add i32 %11, 1, !dbg !6296
  store i32 %inc8, i32* %i, align 4, !dbg !6296
  %idxprom9 = sext i32 %11 to i64, !dbg !6295
  %arrayidx10 = getelementptr i16, i16* %10, i64 %idxprom9, !dbg !6295
  %call11 = call i32 @pcie_capability_read_word(%struct.pci_dev* %9, i32 16, i16* %arrayidx10) #11, !dbg !6297
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6298
  %13 = load i16*, i16** %cap, align 8, !dbg !6299
  %14 = load i32, i32* %i, align 4, !dbg !6300
  %inc12 = add i32 %14, 1, !dbg !6300
  store i32 %inc12, i32* %i, align 4, !dbg !6300
  %idxprom13 = sext i32 %14 to i64, !dbg !6299
  %arrayidx14 = getelementptr i16, i16* %13, i64 %idxprom13, !dbg !6299
  %call15 = call i32 @pcie_capability_read_word(%struct.pci_dev* %12, i32 24, i16* %arrayidx14) #11, !dbg !6301
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6302
  %16 = load i16*, i16** %cap, align 8, !dbg !6303
  %17 = load i32, i32* %i, align 4, !dbg !6304
  %inc16 = add i32 %17, 1, !dbg !6304
  store i32 %inc16, i32* %i, align 4, !dbg !6304
  %idxprom17 = sext i32 %17 to i64, !dbg !6303
  %arrayidx18 = getelementptr i16, i16* %16, i64 %idxprom17, !dbg !6303
  %call19 = call i32 @pcie_capability_read_word(%struct.pci_dev* %15, i32 28, i16* %arrayidx18) #11, !dbg !6305
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6306
  %19 = load i16*, i16** %cap, align 8, !dbg !6307
  %20 = load i32, i32* %i, align 4, !dbg !6308
  %inc20 = add i32 %20, 1, !dbg !6308
  store i32 %inc20, i32* %i, align 4, !dbg !6308
  %idxprom21 = sext i32 %20 to i64, !dbg !6307
  %arrayidx22 = getelementptr i16, i16* %19, i64 %idxprom21, !dbg !6307
  %call23 = call i32 @pcie_capability_read_word(%struct.pci_dev* %18, i32 40, i16* %arrayidx22) #11, !dbg !6309
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6310
  %22 = load i16*, i16** %cap, align 8, !dbg !6311
  %23 = load i32, i32* %i, align 4, !dbg !6312
  %inc24 = add i32 %23, 1, !dbg !6312
  store i32 %inc24, i32* %i, align 4, !dbg !6312
  %idxprom25 = sext i32 %23 to i64, !dbg !6311
  %arrayidx26 = getelementptr i16, i16* %22, i64 %idxprom25, !dbg !6311
  %call27 = call i32 @pcie_capability_read_word(%struct.pci_dev* %21, i32 48, i16* %arrayidx26) #11, !dbg !6313
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6314
  %25 = load i16*, i16** %cap, align 8, !dbg !6315
  %26 = load i32, i32* %i, align 4, !dbg !6316
  %inc28 = add i32 %26, 1, !dbg !6316
  store i32 %inc28, i32* %i, align 4, !dbg !6316
  %idxprom29 = sext i32 %26 to i64, !dbg !6315
  %arrayidx30 = getelementptr i16, i16* %25, i64 %idxprom29, !dbg !6315
  %call31 = call i32 @pcie_capability_read_word(%struct.pci_dev* %24, i32 56, i16* %arrayidx30) #11, !dbg !6317
  store i32 0, i32* %retval, align 4, !dbg !6318
  br label %return, !dbg !6318

return:                                           ; preds = %if.end4, %if.then2, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !6319
  ret i32 %27, !dbg !6319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_save_pcix_state(%struct.pci_dev* %dev) #0 !dbg !6320 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %save_state = alloca %struct.pci_cap_saved_state*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6321, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6323, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_state** %save_state, metadata !6325, metadata !DIExpression()), !dbg !6326
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6327
  %call = call i32 @pci_find_capability(%struct.pci_dev* %0, i32 7) #11, !dbg !6328
  store i32 %call, i32* %pos, align 4, !dbg !6329
  %1 = load i32, i32* %pos, align 4, !dbg !6330
  %tobool = icmp ne i32 %1, 0, !dbg !6330
  br i1 %tobool, label %if.end, label %if.then, !dbg !6332

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6333
  br label %return, !dbg !6333

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6334
  %call1 = call %struct.pci_cap_saved_state* @pci_find_saved_cap(%struct.pci_dev* %2, i8 signext 7) #11, !dbg !6335
  store %struct.pci_cap_saved_state* %call1, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6336
  %3 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6337
  %tobool2 = icmp ne %struct.pci_cap_saved_state* %3, null, !dbg !6337
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !6339

if.then3:                                         ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6340
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !6340
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.pci_save_pcix_state, i64 0, i64 0)) #12, !dbg !6340
  store i32 -12, i32* %retval, align 4, !dbg !6342
  br label %return, !dbg !6342

if.end5:                                          ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6343
  %6 = load i32, i32* %pos, align 4, !dbg !6344
  %add = add i32 %6, 2, !dbg !6345
  %7 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6346
  %cap = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %7, i32 0, i32 1, !dbg !6347
  %data = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap, i32 0, i32 3, !dbg !6348
  %arraydecay = getelementptr inbounds [0 x i32], [0 x i32]* %data, i64 0, i64 0, !dbg !6346
  %8 = bitcast i32* %arraydecay to i16*, !dbg !6349
  %call6 = call i32 @pci_read_config_word(%struct.pci_dev* %5, i32 %add, i16* %8) #11, !dbg !6350
  store i32 0, i32* %retval, align 4, !dbg !6351
  br label %return, !dbg !6351

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !6352
  ret i32 %9, !dbg !6352
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_save_ltr_state(%struct.pci_dev* %dev) #0 !dbg !6353 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ltr = alloca i32, align 4
  %save_state = alloca %struct.pci_cap_saved_state*, align 8
  %cap = alloca i16*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6354, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.declare(metadata i32* %ltr, metadata !6356, metadata !DIExpression()), !dbg !6357
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_state** %save_state, metadata !6358, metadata !DIExpression()), !dbg !6359
  call void @llvm.dbg.declare(metadata i16** %cap, metadata !6360, metadata !DIExpression()), !dbg !6361
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6362
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %0) #11, !dbg !6364
  br i1 %call, label %if.end, label %if.then, !dbg !6365

if.then:                                          ; preds = %entry
  br label %return, !dbg !6366

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6367
  %call1 = call i32 @pci_find_ext_capability(%struct.pci_dev* %1, i32 24) #11, !dbg !6368
  store i32 %call1, i32* %ltr, align 4, !dbg !6369
  %2 = load i32, i32* %ltr, align 4, !dbg !6370
  %tobool = icmp ne i32 %2, 0, !dbg !6370
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !6372

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !6373

if.end3:                                          ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6374
  %call4 = call %struct.pci_cap_saved_state* @pci_find_saved_ext_cap(%struct.pci_dev* %3, i16 zeroext 24) #11, !dbg !6375
  store %struct.pci_cap_saved_state* %call4, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6376
  %4 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6377
  %tobool5 = icmp ne %struct.pci_cap_saved_state* %4, null, !dbg !6377
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !6379

if.then6:                                         ; preds = %if.end3
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6380
  %dev7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !6380
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev7, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.47, i64 0, i64 0)) #12, !dbg !6380
  br label %return, !dbg !6382

if.end8:                                          ; preds = %if.end3
  %6 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6383
  %cap9 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %6, i32 0, i32 1, !dbg !6384
  %data = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap9, i32 0, i32 3, !dbg !6385
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %data, i64 0, i64 0, !dbg !6383
  %7 = bitcast i32* %arrayidx to i16*, !dbg !6386
  store i16* %7, i16** %cap, align 8, !dbg !6387
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6388
  %9 = load i32, i32* %ltr, align 4, !dbg !6389
  %add = add i32 %9, 4, !dbg !6390
  %10 = load i16*, i16** %cap, align 8, !dbg !6391
  %incdec.ptr = getelementptr i16, i16* %10, i32 1, !dbg !6391
  store i16* %incdec.ptr, i16** %cap, align 8, !dbg !6391
  %call10 = call i32 @pci_read_config_word(%struct.pci_dev* %8, i32 %add, i16* %10) #11, !dbg !6392
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6393
  %12 = load i32, i32* %ltr, align 4, !dbg !6394
  %add11 = add i32 %12, 6, !dbg !6395
  %13 = load i16*, i16** %cap, align 8, !dbg !6396
  %incdec.ptr12 = getelementptr i16, i16* %13, i32 1, !dbg !6396
  store i16* %incdec.ptr12, i16** %cap, align 8, !dbg !6396
  %call13 = call i32 @pci_read_config_word(%struct.pci_dev* %11, i32 %add11, i16* %13) #11, !dbg !6397
  br label %return, !dbg !6398

return:                                           ; preds = %if.end8, %if.then6, %if.then2, %if.then
  ret void, !dbg !6398
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_save_dpc_state(%struct.pci_dev* %dev) #0 !dbg !6399 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6400, metadata !DIExpression()), !dbg !6401
  ret void, !dbg !6402
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_save_aer_state(%struct.pci_dev* %dev) #0 !dbg !6403 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6405, metadata !DIExpression()), !dbg !6406
  ret void, !dbg !6407
}

; Function Attrs: noredzone
declare dso_local i32 @pci_save_vc_state(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_restore_state(%struct.pci_dev* %dev) #0 !dbg !6408 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6409, metadata !DIExpression()), !dbg !6410
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6411
  %state_saved = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !6413
  %1 = bitcast [5 x i8]* %state_saved to i40*, !dbg !6413
  %bf.load = load i40, i40* %1, align 1, !dbg !6413
  %bf.lshr = lshr i40 %bf.load, 20, !dbg !6413
  %bf.clear = and i40 %bf.lshr, 1, !dbg !6413
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !6413
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6411
  br i1 %tobool, label %if.end, label %if.then, !dbg !6414

if.then:                                          ; preds = %entry
  br label %return, !dbg !6415

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6416
  call void @pci_restore_ltr_state(%struct.pci_dev* %2) #11, !dbg !6417
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6418
  call void @pci_restore_pcie_state(%struct.pci_dev* %3) #11, !dbg !6419
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6420
  call void @pci_restore_pasid_state(%struct.pci_dev* %4) #11, !dbg !6421
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6422
  call void @pci_restore_pri_state(%struct.pci_dev* %5) #11, !dbg !6423
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6424
  call void @pci_restore_ats_state(%struct.pci_dev* %6) #11, !dbg !6425
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6426
  call void @pci_restore_vc_state(%struct.pci_dev* %7) #11, !dbg !6427
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6428
  call void @pci_restore_rebar_state(%struct.pci_dev* %8) #11, !dbg !6429
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6430
  call void @pci_restore_dpc_state(%struct.pci_dev* %9) #11, !dbg !6431
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6432
  %call = call i32 @pci_aer_clear_status(%struct.pci_dev* %10) #11, !dbg !6433
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6434
  call void @pci_restore_aer_state(%struct.pci_dev* %11) #11, !dbg !6435
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6436
  call void @pci_restore_config_space(%struct.pci_dev* %12) #11, !dbg !6437
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6438
  call void @pci_restore_pcix_state(%struct.pci_dev* %13) #11, !dbg !6439
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6440
  call void @pci_restore_msi_state(%struct.pci_dev* %14) #11, !dbg !6441
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6442
  call void @pci_enable_acs(%struct.pci_dev* %15) #11, !dbg !6443
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6444
  call void @pci_restore_iov_state(%struct.pci_dev* %16) #11, !dbg !6445
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6446
  %state_saved1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 46, !dbg !6447
  %18 = bitcast [5 x i8]* %state_saved1 to i40*, !dbg !6447
  %bf.load2 = load i40, i40* %18, align 1, !dbg !6448
  %bf.clear3 = and i40 %bf.load2, -1048577, !dbg !6448
  store i40 %bf.clear3, i40* %18, align 1, !dbg !6448
  br label %return, !dbg !6449

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_restore_ltr_state(%struct.pci_dev* %dev) #0 !dbg !6450 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %save_state = alloca %struct.pci_cap_saved_state*, align 8
  %ltr = alloca i32, align 4
  %cap = alloca i16*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6451, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_state** %save_state, metadata !6453, metadata !DIExpression()), !dbg !6454
  call void @llvm.dbg.declare(metadata i32* %ltr, metadata !6455, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.declare(metadata i16** %cap, metadata !6457, metadata !DIExpression()), !dbg !6458
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6459
  %call = call %struct.pci_cap_saved_state* @pci_find_saved_ext_cap(%struct.pci_dev* %0, i16 zeroext 24) #11, !dbg !6460
  store %struct.pci_cap_saved_state* %call, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6461
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6462
  %call1 = call i32 @pci_find_ext_capability(%struct.pci_dev* %1, i32 24) #11, !dbg !6463
  store i32 %call1, i32* %ltr, align 4, !dbg !6464
  %2 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6465
  %tobool = icmp ne %struct.pci_cap_saved_state* %2, null, !dbg !6465
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6467

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %ltr, align 4, !dbg !6468
  %tobool2 = icmp ne i32 %3, 0, !dbg !6468
  br i1 %tobool2, label %if.end, label %if.then, !dbg !6469

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !6470

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6471
  %cap3 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %4, i32 0, i32 1, !dbg !6472
  %data = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap3, i32 0, i32 3, !dbg !6473
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %data, i64 0, i64 0, !dbg !6471
  %5 = bitcast i32* %arrayidx to i16*, !dbg !6474
  store i16* %5, i16** %cap, align 8, !dbg !6475
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6476
  %7 = load i32, i32* %ltr, align 4, !dbg !6477
  %add = add i32 %7, 4, !dbg !6478
  %8 = load i16*, i16** %cap, align 8, !dbg !6479
  %incdec.ptr = getelementptr i16, i16* %8, i32 1, !dbg !6479
  store i16* %incdec.ptr, i16** %cap, align 8, !dbg !6479
  %9 = load i16, i16* %8, align 2, !dbg !6480
  %call4 = call i32 @pci_write_config_word(%struct.pci_dev* %6, i32 %add, i16 zeroext %9) #11, !dbg !6481
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6482
  %11 = load i32, i32* %ltr, align 4, !dbg !6483
  %add5 = add i32 %11, 6, !dbg !6484
  %12 = load i16*, i16** %cap, align 8, !dbg !6485
  %incdec.ptr6 = getelementptr i16, i16* %12, i32 1, !dbg !6485
  store i16* %incdec.ptr6, i16** %cap, align 8, !dbg !6485
  %13 = load i16, i16* %12, align 2, !dbg !6486
  %call7 = call i32 @pci_write_config_word(%struct.pci_dev* %10, i32 %add5, i16 zeroext %13) #11, !dbg !6487
  br label %return, !dbg !6488

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6488
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_restore_pcie_state(%struct.pci_dev* %dev) #0 !dbg !6489 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  %save_state = alloca %struct.pci_cap_saved_state*, align 8
  %cap = alloca i16*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6490, metadata !DIExpression()), !dbg !6491
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6492, metadata !DIExpression()), !dbg !6493
  store i32 0, i32* %i, align 4, !dbg !6493
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_state** %save_state, metadata !6494, metadata !DIExpression()), !dbg !6495
  call void @llvm.dbg.declare(metadata i16** %cap, metadata !6496, metadata !DIExpression()), !dbg !6497
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6498
  %call = call %struct.pci_cap_saved_state* @pci_find_saved_cap(%struct.pci_dev* %0, i8 signext 16) #11, !dbg !6499
  store %struct.pci_cap_saved_state* %call, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6500
  %1 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6501
  %tobool = icmp ne %struct.pci_cap_saved_state* %1, null, !dbg !6501
  br i1 %tobool, label %if.end, label %if.then, !dbg !6503

if.then:                                          ; preds = %entry
  br label %return, !dbg !6504

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6505
  %cap1 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %2, i32 0, i32 1, !dbg !6506
  %data = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap1, i32 0, i32 3, !dbg !6507
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %data, i64 0, i64 0, !dbg !6505
  %3 = bitcast i32* %arrayidx to i16*, !dbg !6508
  store i16* %3, i16** %cap, align 8, !dbg !6509
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6510
  %5 = load i16*, i16** %cap, align 8, !dbg !6511
  %6 = load i32, i32* %i, align 4, !dbg !6512
  %inc = add i32 %6, 1, !dbg !6512
  store i32 %inc, i32* %i, align 4, !dbg !6512
  %idxprom = sext i32 %6 to i64, !dbg !6511
  %arrayidx2 = getelementptr i16, i16* %5, i64 %idxprom, !dbg !6511
  %7 = load i16, i16* %arrayidx2, align 2, !dbg !6511
  %call3 = call i32 @pcie_capability_write_word(%struct.pci_dev* %4, i32 8, i16 zeroext %7) #11, !dbg !6513
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6514
  %9 = load i16*, i16** %cap, align 8, !dbg !6515
  %10 = load i32, i32* %i, align 4, !dbg !6516
  %inc4 = add i32 %10, 1, !dbg !6516
  store i32 %inc4, i32* %i, align 4, !dbg !6516
  %idxprom5 = sext i32 %10 to i64, !dbg !6515
  %arrayidx6 = getelementptr i16, i16* %9, i64 %idxprom5, !dbg !6515
  %11 = load i16, i16* %arrayidx6, align 2, !dbg !6515
  %call7 = call i32 @pcie_capability_write_word(%struct.pci_dev* %8, i32 16, i16 zeroext %11) #11, !dbg !6517
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6518
  %13 = load i16*, i16** %cap, align 8, !dbg !6519
  %14 = load i32, i32* %i, align 4, !dbg !6520
  %inc8 = add i32 %14, 1, !dbg !6520
  store i32 %inc8, i32* %i, align 4, !dbg !6520
  %idxprom9 = sext i32 %14 to i64, !dbg !6519
  %arrayidx10 = getelementptr i16, i16* %13, i64 %idxprom9, !dbg !6519
  %15 = load i16, i16* %arrayidx10, align 2, !dbg !6519
  %call11 = call i32 @pcie_capability_write_word(%struct.pci_dev* %12, i32 24, i16 zeroext %15) #11, !dbg !6521
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6522
  %17 = load i16*, i16** %cap, align 8, !dbg !6523
  %18 = load i32, i32* %i, align 4, !dbg !6524
  %inc12 = add i32 %18, 1, !dbg !6524
  store i32 %inc12, i32* %i, align 4, !dbg !6524
  %idxprom13 = sext i32 %18 to i64, !dbg !6523
  %arrayidx14 = getelementptr i16, i16* %17, i64 %idxprom13, !dbg !6523
  %19 = load i16, i16* %arrayidx14, align 2, !dbg !6523
  %call15 = call i32 @pcie_capability_write_word(%struct.pci_dev* %16, i32 28, i16 zeroext %19) #11, !dbg !6525
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6526
  %21 = load i16*, i16** %cap, align 8, !dbg !6527
  %22 = load i32, i32* %i, align 4, !dbg !6528
  %inc16 = add i32 %22, 1, !dbg !6528
  store i32 %inc16, i32* %i, align 4, !dbg !6528
  %idxprom17 = sext i32 %22 to i64, !dbg !6527
  %arrayidx18 = getelementptr i16, i16* %21, i64 %idxprom17, !dbg !6527
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !6527
  %call19 = call i32 @pcie_capability_write_word(%struct.pci_dev* %20, i32 40, i16 zeroext %23) #11, !dbg !6529
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6530
  %25 = load i16*, i16** %cap, align 8, !dbg !6531
  %26 = load i32, i32* %i, align 4, !dbg !6532
  %inc20 = add i32 %26, 1, !dbg !6532
  store i32 %inc20, i32* %i, align 4, !dbg !6532
  %idxprom21 = sext i32 %26 to i64, !dbg !6531
  %arrayidx22 = getelementptr i16, i16* %25, i64 %idxprom21, !dbg !6531
  %27 = load i16, i16* %arrayidx22, align 2, !dbg !6531
  %call23 = call i32 @pcie_capability_write_word(%struct.pci_dev* %24, i32 48, i16 zeroext %27) #11, !dbg !6533
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6534
  %29 = load i16*, i16** %cap, align 8, !dbg !6535
  %30 = load i32, i32* %i, align 4, !dbg !6536
  %inc24 = add i32 %30, 1, !dbg !6536
  store i32 %inc24, i32* %i, align 4, !dbg !6536
  %idxprom25 = sext i32 %30 to i64, !dbg !6535
  %arrayidx26 = getelementptr i16, i16* %29, i64 %idxprom25, !dbg !6535
  %31 = load i16, i16* %arrayidx26, align 2, !dbg !6535
  %call27 = call i32 @pcie_capability_write_word(%struct.pci_dev* %28, i32 56, i16 zeroext %31) #11, !dbg !6537
  br label %return, !dbg !6538

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6538
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_restore_pasid_state(%struct.pci_dev* %pdev) #0 !dbg !6539 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6540, metadata !DIExpression()), !dbg !6541
  ret void, !dbg !6542
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_restore_pri_state(%struct.pci_dev* %pdev) #0 !dbg !6543 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6544, metadata !DIExpression()), !dbg !6545
  ret void, !dbg !6546
}

; Function Attrs: noredzone
declare dso_local void @pci_restore_ats_state(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local void @pci_restore_vc_state(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_restore_rebar_state(%struct.pci_dev* %pdev) #0 !dbg !6547 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %nbars = alloca i32, align 4
  %i = alloca i32, align 4
  %ctrl = alloca i32, align 4
  %res = alloca %struct.resource*, align 8
  %bar_idx = alloca i32, align 4
  %size = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6548, metadata !DIExpression()), !dbg !6549
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6550, metadata !DIExpression()), !dbg !6551
  call void @llvm.dbg.declare(metadata i32* %nbars, metadata !6552, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6554, metadata !DIExpression()), !dbg !6555
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !6556, metadata !DIExpression()), !dbg !6557
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6558
  %call = call i32 @pci_find_ext_capability(%struct.pci_dev* %0, i32 21) #11, !dbg !6559
  store i32 %call, i32* %pos, align 4, !dbg !6560
  %1 = load i32, i32* %pos, align 4, !dbg !6561
  %tobool = icmp ne i32 %1, 0, !dbg !6561
  br i1 %tobool, label %if.end, label %if.then, !dbg !6563

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !6564

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6565
  %3 = load i32, i32* %pos, align 4, !dbg !6566
  %add = add i32 %3, 8, !dbg !6567
  %call1 = call i32 @pci_read_config_dword(%struct.pci_dev* %2, i32 %add, i32* %ctrl) #11, !dbg !6568
  %4 = load i32, i32* %ctrl, align 4, !dbg !6569
  %and = and i32 %4, 224, !dbg !6570
  %shr = lshr i32 %and, 5, !dbg !6571
  store i32 %shr, i32* %nbars, align 4, !dbg !6572
  store i32 0, i32* %i, align 4, !dbg !6573
  br label %for.cond, !dbg !6575

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !6576
  %6 = load i32, i32* %nbars, align 4, !dbg !6578
  %cmp = icmp ult i32 %5, %6, !dbg !6579
  br i1 %cmp, label %for.body, label %for.end, !dbg !6580

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !6581, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.declare(metadata i32* %bar_idx, metadata !6584, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.declare(metadata i32* %size, metadata !6586, metadata !DIExpression()), !dbg !6587
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6588
  %8 = load i32, i32* %pos, align 4, !dbg !6589
  %add2 = add i32 %8, 8, !dbg !6590
  %call3 = call i32 @pci_read_config_dword(%struct.pci_dev* %7, i32 %add2, i32* %ctrl) #11, !dbg !6591
  %9 = load i32, i32* %ctrl, align 4, !dbg !6592
  %and4 = and i32 %9, 7, !dbg !6593
  store i32 %and4, i32* %bar_idx, align 4, !dbg !6594
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6595
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 44, !dbg !6596
  %arraydecay = getelementptr inbounds [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !6595
  %11 = load i32, i32* %bar_idx, align 4, !dbg !6597
  %idx.ext = sext i32 %11 to i64, !dbg !6598
  %add.ptr = getelementptr %struct.resource, %struct.resource* %arraydecay, i64 %idx.ext, !dbg !6598
  store %struct.resource* %add.ptr, %struct.resource** %res, align 8, !dbg !6599
  %12 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !6600
  %call5 = call i64 @resource_size(%struct.resource* %12) #11, !dbg !6600
  %call6 = call i32 @__ilog2_u64(i64 %call5) #13, !dbg !6600
  %sub = sub i32 %call6, 20, !dbg !6601
  store i32 %sub, i32* %size, align 4, !dbg !6602
  %13 = load i32, i32* %ctrl, align 4, !dbg !6603
  %and7 = and i32 %13, -7937, !dbg !6603
  store i32 %and7, i32* %ctrl, align 4, !dbg !6603
  %14 = load i32, i32* %size, align 4, !dbg !6604
  %shl = shl i32 %14, 8, !dbg !6605
  %15 = load i32, i32* %ctrl, align 4, !dbg !6606
  %or = or i32 %15, %shl, !dbg !6606
  store i32 %or, i32* %ctrl, align 4, !dbg !6606
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6607
  %17 = load i32, i32* %pos, align 4, !dbg !6608
  %add8 = add i32 %17, 8, !dbg !6609
  %18 = load i32, i32* %ctrl, align 4, !dbg !6610
  %call9 = call i32 @pci_write_config_dword(%struct.pci_dev* %16, i32 %add8, i32 %18) #11, !dbg !6611
  br label %for.inc, !dbg !6612

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !6613
  %inc = add i32 %19, 1, !dbg !6613
  store i32 %inc, i32* %i, align 4, !dbg !6613
  %20 = load i32, i32* %pos, align 4, !dbg !6614
  %add10 = add i32 %20, 8, !dbg !6614
  store i32 %add10, i32* %pos, align 4, !dbg !6614
  br label %for.cond, !dbg !6615, !llvm.loop !6616

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !6618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_restore_dpc_state(%struct.pci_dev* %dev) #0 !dbg !6619 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6620, metadata !DIExpression()), !dbg !6621
  ret void, !dbg !6622
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_aer_clear_status(%struct.pci_dev* %dev) #0 !dbg !6623 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6624, metadata !DIExpression()), !dbg !6625
  ret i32 -22, !dbg !6626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_restore_aer_state(%struct.pci_dev* %dev) #0 !dbg !6627 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6628, metadata !DIExpression()), !dbg !6629
  ret void, !dbg !6630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_restore_config_space(%struct.pci_dev* %pdev) #0 !dbg !6631 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6632, metadata !DIExpression()), !dbg !6633
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6634
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 13, !dbg !6636
  %1 = load i8, i8* %hdr_type, align 1, !dbg !6636
  %conv = zext i8 %1 to i32, !dbg !6634
  %cmp = icmp eq i32 %conv, 0, !dbg !6637
  br i1 %cmp, label %if.then, label %if.else, !dbg !6638

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6639
  call void @pci_restore_config_space_range(%struct.pci_dev* %2, i32 10, i32 15, i32 0, i1 zeroext false) #11, !dbg !6641
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6642
  call void @pci_restore_config_space_range(%struct.pci_dev* %3, i32 4, i32 9, i32 10, i1 zeroext false) #11, !dbg !6643
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6644
  call void @pci_restore_config_space_range(%struct.pci_dev* %4, i32 0, i32 3, i32 0, i1 zeroext false) #11, !dbg !6645
  br label %if.end8, !dbg !6646

if.else:                                          ; preds = %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6647
  %hdr_type2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 13, !dbg !6649
  %6 = load i8, i8* %hdr_type2, align 1, !dbg !6649
  %conv3 = zext i8 %6 to i32, !dbg !6647
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !6650
  br i1 %cmp4, label %if.then6, label %if.else7, !dbg !6651

if.then6:                                         ; preds = %if.else
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6652
  call void @pci_restore_config_space_range(%struct.pci_dev* %7, i32 12, i32 15, i32 0, i1 zeroext false) #11, !dbg !6654
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6655
  call void @pci_restore_config_space_range(%struct.pci_dev* %8, i32 9, i32 11, i32 0, i1 zeroext true) #11, !dbg !6656
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6657
  call void @pci_restore_config_space_range(%struct.pci_dev* %9, i32 0, i32 8, i32 0, i1 zeroext false) #11, !dbg !6658
  br label %if.end, !dbg !6659

if.else7:                                         ; preds = %if.else
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6660
  call void @pci_restore_config_space_range(%struct.pci_dev* %10, i32 0, i32 15, i32 0, i1 zeroext false) #11, !dbg !6662
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then6
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  ret void, !dbg !6663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_restore_pcix_state(%struct.pci_dev* %dev) #0 !dbg !6664 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  %pos = alloca i32, align 4
  %save_state = alloca %struct.pci_cap_saved_state*, align 8
  %cap = alloca i16*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6665, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6667, metadata !DIExpression()), !dbg !6668
  store i32 0, i32* %i, align 4, !dbg !6668
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6669, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_state** %save_state, metadata !6671, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.declare(metadata i16** %cap, metadata !6673, metadata !DIExpression()), !dbg !6674
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6675
  %call = call %struct.pci_cap_saved_state* @pci_find_saved_cap(%struct.pci_dev* %0, i8 signext 7) #11, !dbg !6676
  store %struct.pci_cap_saved_state* %call, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6677
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6678
  %call1 = call i32 @pci_find_capability(%struct.pci_dev* %1, i32 7) #11, !dbg !6679
  store i32 %call1, i32* %pos, align 4, !dbg !6680
  %2 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6681
  %tobool = icmp ne %struct.pci_cap_saved_state* %2, null, !dbg !6681
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6683

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %pos, align 4, !dbg !6684
  %tobool2 = icmp ne i32 %3, 0, !dbg !6684
  br i1 %tobool2, label %if.end, label %if.then, !dbg !6685

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !6686

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !6687
  %cap3 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %4, i32 0, i32 1, !dbg !6688
  %data = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap3, i32 0, i32 3, !dbg !6689
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %data, i64 0, i64 0, !dbg !6687
  %5 = bitcast i32* %arrayidx to i16*, !dbg !6690
  store i16* %5, i16** %cap, align 8, !dbg !6691
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6692
  %7 = load i32, i32* %pos, align 4, !dbg !6693
  %add = add i32 %7, 2, !dbg !6694
  %8 = load i16*, i16** %cap, align 8, !dbg !6695
  %9 = load i32, i32* %i, align 4, !dbg !6696
  %inc = add i32 %9, 1, !dbg !6696
  store i32 %inc, i32* %i, align 4, !dbg !6696
  %idxprom = sext i32 %9 to i64, !dbg !6695
  %arrayidx4 = getelementptr i16, i16* %8, i64 %idxprom, !dbg !6695
  %10 = load i16, i16* %arrayidx4, align 2, !dbg !6695
  %call5 = call i32 @pci_write_config_word(%struct.pci_dev* %6, i32 %add, i16 zeroext %10) #11, !dbg !6697
  br label %return, !dbg !6698

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6698
}

; Function Attrs: noredzone
declare dso_local void @pci_restore_msi_state(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_enable_acs(%struct.pci_dev* %dev) #0 !dbg !6699 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6700, metadata !DIExpression()), !dbg !6701
  %0 = load i32, i32* @pci_acs_enable, align 4, !dbg !6702
  %tobool = icmp ne i32 %0, 0, !dbg !6702
  br i1 %tobool, label %if.end, label %if.then, !dbg !6704

if.then:                                          ; preds = %entry
  br label %disable_acs_redir, !dbg !6705

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6706
  %call = call i32 @pci_dev_specific_enable_acs(%struct.pci_dev* %1) #11, !dbg !6708
  %tobool1 = icmp ne i32 %call, 0, !dbg !6708
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6709

if.then2:                                         ; preds = %if.end
  br label %disable_acs_redir, !dbg !6710

if.end3:                                          ; preds = %if.end
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6711
  call void @pci_std_enable_acs(%struct.pci_dev* %2) #11, !dbg !6712
  br label %disable_acs_redir, !dbg !6712

disable_acs_redir:                                ; preds = %if.end3, %if.then2, %if.then
  call void @llvm.dbg.label(metadata !6713), !dbg !6714
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6715
  call void @pci_disable_acs_redir(%struct.pci_dev* %3) #11, !dbg !6716
  ret void, !dbg !6717
}

; Function Attrs: noredzone
declare dso_local void @pci_restore_iov_state(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.pci_saved_state* @pci_store_saved_state(%struct.pci_dev* %dev) #0 !dbg !6718 {
entry:
  %retval = alloca %struct.pci_saved_state*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %state = alloca %struct.pci_saved_state*, align 8
  %tmp = alloca %struct.pci_cap_saved_state*, align 8
  %cap = alloca %struct.pci_cap_saved_data*, align 8
  %size = alloca i64, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp1 = alloca %struct.pci_cap_saved_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp3 = alloca %struct.pci_cap_saved_state*, align 8
  %____ptr8 = alloca %struct.hlist_node*, align 8
  %tmp10 = alloca %struct.pci_cap_saved_state*, align 8
  %__mptr13 = alloca i8*, align 8
  %tmp16 = alloca %struct.pci_cap_saved_state*, align 8
  %____ptr27 = alloca %struct.hlist_node*, align 8
  %tmp30 = alloca %struct.pci_cap_saved_state*, align 8
  %__mptr33 = alloca i8*, align 8
  %tmp36 = alloca %struct.pci_cap_saved_state*, align 8
  %len = alloca i64, align 8
  %____ptr51 = alloca %struct.hlist_node*, align 8
  %tmp54 = alloca %struct.pci_cap_saved_state*, align 8
  %__mptr57 = alloca i8*, align 8
  %tmp60 = alloca %struct.pci_cap_saved_state*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !6727, metadata !DIExpression()), !dbg !6728
  call void @llvm.dbg.declare(metadata %struct.pci_saved_state** %state, metadata !6729, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_state** %tmp, metadata !6731, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_data** %cap, metadata !6733, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.declare(metadata i64* %size, metadata !6735, metadata !DIExpression()), !dbg !6736
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6737
  %state_saved = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !6739
  %1 = bitcast [5 x i8]* %state_saved to i40*, !dbg !6739
  %bf.load = load i40, i40* %1, align 1, !dbg !6739
  %bf.lshr = lshr i40 %bf.load, 20, !dbg !6739
  %bf.clear = and i40 %bf.lshr, 1, !dbg !6739
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !6739
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6737
  br i1 %tobool, label %if.end, label %if.then, !dbg !6740

if.then:                                          ; preds = %entry
  store %struct.pci_saved_state* null, %struct.pci_saved_state** %retval, align 8, !dbg !6741
  br label %return, !dbg !6741

if.end:                                           ; preds = %entry
  store i64 72, i64* %size, align 8, !dbg !6742
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !6743, metadata !DIExpression()), !dbg !6746
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6746
  %saved_cap_space = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 51, !dbg !6746
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %saved_cap_space, i32 0, i32 0, !dbg !6746
  %3 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !6746
  store %struct.hlist_node* %3, %struct.hlist_node** %____ptr, align 8, !dbg !6746
  %4 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !6746
  %tobool2 = icmp ne %struct.hlist_node* %4, null, !dbg !6746
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !6746

cond.true:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6747, metadata !DIExpression()), !dbg !6749
  %5 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !6749
  %6 = bitcast %struct.hlist_node* %5 to i8*, !dbg !6749
  store i8* %6, i8** %__mptr, align 8, !dbg !6749
  br label %do.body, !dbg !6749

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !6750

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !6749
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !6749
  %8 = bitcast i8* %add.ptr to %struct.pci_cap_saved_state*, !dbg !6749
  store %struct.pci_cap_saved_state* %8, %struct.pci_cap_saved_state** %tmp3, align 8, !dbg !6750
  %9 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp3, align 8, !dbg !6749
  br label %cond.end, !dbg !6746

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !6746

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.pci_cap_saved_state* [ %9, %do.end ], [ null, %cond.false ], !dbg !6746
  store %struct.pci_cap_saved_state* %cond, %struct.pci_cap_saved_state** %tmp1, align 8, !dbg !6746
  %10 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp1, align 8, !dbg !6746
  store %struct.pci_cap_saved_state* %10, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6752
  br label %for.cond, !dbg !6752

for.cond:                                         ; preds = %cond.end19, %cond.end
  %11 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6753
  %tobool4 = icmp ne %struct.pci_cap_saved_state* %11, null, !dbg !6752
  br i1 %tobool4, label %for.body, label %for.end, !dbg !6752

for.body:                                         ; preds = %for.cond
  %12 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6755
  %cap5 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %12, i32 0, i32 1, !dbg !6756
  %size6 = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap5, i32 0, i32 2, !dbg !6757
  %13 = load i32, i32* %size6, align 4, !dbg !6757
  %conv = zext i32 %13 to i64, !dbg !6755
  %add = add i64 8, %conv, !dbg !6758
  %14 = load i64, i64* %size, align 8, !dbg !6759
  %add7 = add i64 %14, %add, !dbg !6759
  store i64 %add7, i64* %size, align 8, !dbg !6759
  br label %for.inc, !dbg !6760

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr8, metadata !6761, metadata !DIExpression()), !dbg !6763
  %15 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6763
  %next = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %15, i32 0, i32 0, !dbg !6763
  %next9 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %next, i32 0, i32 0, !dbg !6763
  %16 = load %struct.hlist_node*, %struct.hlist_node** %next9, align 8, !dbg !6763
  store %struct.hlist_node* %16, %struct.hlist_node** %____ptr8, align 8, !dbg !6763
  %17 = load %struct.hlist_node*, %struct.hlist_node** %____ptr8, align 8, !dbg !6763
  %tobool11 = icmp ne %struct.hlist_node* %17, null, !dbg !6763
  br i1 %tobool11, label %cond.true12, label %cond.false18, !dbg !6763

cond.true12:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr13, metadata !6764, metadata !DIExpression()), !dbg !6766
  %18 = load %struct.hlist_node*, %struct.hlist_node** %____ptr8, align 8, !dbg !6766
  %19 = bitcast %struct.hlist_node* %18 to i8*, !dbg !6766
  store i8* %19, i8** %__mptr13, align 8, !dbg !6766
  br label %do.body14, !dbg !6766

do.body14:                                        ; preds = %cond.true12
  br label %do.end15, !dbg !6767

do.end15:                                         ; preds = %do.body14
  %20 = load i8*, i8** %__mptr13, align 8, !dbg !6766
  %add.ptr17 = getelementptr i8, i8* %20, i64 0, !dbg !6766
  %21 = bitcast i8* %add.ptr17 to %struct.pci_cap_saved_state*, !dbg !6766
  store %struct.pci_cap_saved_state* %21, %struct.pci_cap_saved_state** %tmp16, align 8, !dbg !6767
  %22 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp16, align 8, !dbg !6766
  br label %cond.end19, !dbg !6763

cond.false18:                                     ; preds = %for.inc
  br label %cond.end19, !dbg !6763

cond.end19:                                       ; preds = %cond.false18, %do.end15
  %cond20 = phi %struct.pci_cap_saved_state* [ %22, %do.end15 ], [ null, %cond.false18 ], !dbg !6763
  store %struct.pci_cap_saved_state* %cond20, %struct.pci_cap_saved_state** %tmp10, align 8, !dbg !6763
  %23 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp10, align 8, !dbg !6763
  store %struct.pci_cap_saved_state* %23, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6753
  br label %for.cond, !dbg !6753, !llvm.loop !6769

for.end:                                          ; preds = %for.cond
  %24 = load i64, i64* %size, align 8, !dbg !6771
  %call = call i8* @kzalloc(i64 %24, i32 3264) #11, !dbg !6772
  %25 = bitcast i8* %call to %struct.pci_saved_state*, !dbg !6772
  store %struct.pci_saved_state* %25, %struct.pci_saved_state** %state, align 8, !dbg !6773
  %26 = load %struct.pci_saved_state*, %struct.pci_saved_state** %state, align 8, !dbg !6774
  %tobool21 = icmp ne %struct.pci_saved_state* %26, null, !dbg !6774
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !6776

if.then22:                                        ; preds = %for.end
  store %struct.pci_saved_state* null, %struct.pci_saved_state** %retval, align 8, !dbg !6777
  br label %return, !dbg !6777

if.end23:                                         ; preds = %for.end
  %27 = load %struct.pci_saved_state*, %struct.pci_saved_state** %state, align 8, !dbg !6778
  %config_space = getelementptr inbounds %struct.pci_saved_state, %struct.pci_saved_state* %27, i32 0, i32 0, !dbg !6779
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %config_space, i64 0, i64 0, !dbg !6780
  %28 = bitcast i32* %arraydecay to i8*, !dbg !6780
  %29 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6781
  %saved_config_space = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 49, !dbg !6782
  %arraydecay24 = getelementptr inbounds [16 x i32], [16 x i32]* %saved_config_space, i64 0, i64 0, !dbg !6780
  %30 = bitcast i32* %arraydecay24 to i8*, !dbg !6780
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %30, i64 64, i1 false), !dbg !6780
  %31 = load %struct.pci_saved_state*, %struct.pci_saved_state** %state, align 8, !dbg !6783
  %cap25 = getelementptr inbounds %struct.pci_saved_state, %struct.pci_saved_state* %31, i32 0, i32 1, !dbg !6784
  %arraydecay26 = getelementptr inbounds [0 x %struct.pci_cap_saved_data], [0 x %struct.pci_cap_saved_data]* %cap25, i64 0, i64 0, !dbg !6783
  store %struct.pci_cap_saved_data* %arraydecay26, %struct.pci_cap_saved_data** %cap, align 8, !dbg !6785
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr27, metadata !6786, metadata !DIExpression()), !dbg !6789
  %32 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !6789
  %saved_cap_space28 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %32, i32 0, i32 51, !dbg !6789
  %first29 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %saved_cap_space28, i32 0, i32 0, !dbg !6789
  %33 = load %struct.hlist_node*, %struct.hlist_node** %first29, align 8, !dbg !6789
  store %struct.hlist_node* %33, %struct.hlist_node** %____ptr27, align 8, !dbg !6789
  %34 = load %struct.hlist_node*, %struct.hlist_node** %____ptr27, align 8, !dbg !6789
  %tobool31 = icmp ne %struct.hlist_node* %34, null, !dbg !6789
  br i1 %tobool31, label %cond.true32, label %cond.false38, !dbg !6789

cond.true32:                                      ; preds = %if.end23
  call void @llvm.dbg.declare(metadata i8** %__mptr33, metadata !6790, metadata !DIExpression()), !dbg !6792
  %35 = load %struct.hlist_node*, %struct.hlist_node** %____ptr27, align 8, !dbg !6792
  %36 = bitcast %struct.hlist_node* %35 to i8*, !dbg !6792
  store i8* %36, i8** %__mptr33, align 8, !dbg !6792
  br label %do.body34, !dbg !6792

do.body34:                                        ; preds = %cond.true32
  br label %do.end35, !dbg !6793

do.end35:                                         ; preds = %do.body34
  %37 = load i8*, i8** %__mptr33, align 8, !dbg !6792
  %add.ptr37 = getelementptr i8, i8* %37, i64 0, !dbg !6792
  %38 = bitcast i8* %add.ptr37 to %struct.pci_cap_saved_state*, !dbg !6792
  store %struct.pci_cap_saved_state* %38, %struct.pci_cap_saved_state** %tmp36, align 8, !dbg !6793
  %39 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp36, align 8, !dbg !6792
  br label %cond.end39, !dbg !6789

cond.false38:                                     ; preds = %if.end23
  br label %cond.end39, !dbg !6789

cond.end39:                                       ; preds = %cond.false38, %do.end35
  %cond40 = phi %struct.pci_cap_saved_state* [ %39, %do.end35 ], [ null, %cond.false38 ], !dbg !6789
  store %struct.pci_cap_saved_state* %cond40, %struct.pci_cap_saved_state** %tmp30, align 8, !dbg !6789
  %40 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp30, align 8, !dbg !6789
  store %struct.pci_cap_saved_state* %40, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6795
  br label %for.cond41, !dbg !6795

for.cond41:                                       ; preds = %cond.end63, %cond.end39
  %41 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6796
  %tobool42 = icmp ne %struct.pci_cap_saved_state* %41, null, !dbg !6795
  br i1 %tobool42, label %for.body43, label %for.end65, !dbg !6795

for.body43:                                       ; preds = %for.cond41
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6798, metadata !DIExpression()), !dbg !6800
  %42 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6801
  %cap44 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %42, i32 0, i32 1, !dbg !6802
  %size45 = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap44, i32 0, i32 2, !dbg !6803
  %43 = load i32, i32* %size45, align 4, !dbg !6803
  %conv46 = zext i32 %43 to i64, !dbg !6801
  %add47 = add i64 8, %conv46, !dbg !6804
  store i64 %add47, i64* %len, align 8, !dbg !6800
  %44 = load %struct.pci_cap_saved_data*, %struct.pci_cap_saved_data** %cap, align 8, !dbg !6805
  %45 = bitcast %struct.pci_cap_saved_data* %44 to i8*, !dbg !6806
  %46 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6807
  %cap48 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %46, i32 0, i32 1, !dbg !6808
  %47 = bitcast %struct.pci_cap_saved_data* %cap48 to i8*, !dbg !6806
  %48 = load i64, i64* %len, align 8, !dbg !6809
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 8 %47, i64 %48, i1 false), !dbg !6806
  %49 = load %struct.pci_cap_saved_data*, %struct.pci_cap_saved_data** %cap, align 8, !dbg !6810
  %50 = bitcast %struct.pci_cap_saved_data* %49 to i8*, !dbg !6811
  %51 = load i64, i64* %len, align 8, !dbg !6812
  %add.ptr49 = getelementptr i8, i8* %50, i64 %51, !dbg !6813
  %52 = bitcast i8* %add.ptr49 to %struct.pci_cap_saved_data*, !dbg !6814
  store %struct.pci_cap_saved_data* %52, %struct.pci_cap_saved_data** %cap, align 8, !dbg !6815
  br label %for.inc50, !dbg !6816

for.inc50:                                        ; preds = %for.body43
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr51, metadata !6817, metadata !DIExpression()), !dbg !6819
  %53 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6819
  %next52 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %53, i32 0, i32 0, !dbg !6819
  %next53 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %next52, i32 0, i32 0, !dbg !6819
  %54 = load %struct.hlist_node*, %struct.hlist_node** %next53, align 8, !dbg !6819
  store %struct.hlist_node* %54, %struct.hlist_node** %____ptr51, align 8, !dbg !6819
  %55 = load %struct.hlist_node*, %struct.hlist_node** %____ptr51, align 8, !dbg !6819
  %tobool55 = icmp ne %struct.hlist_node* %55, null, !dbg !6819
  br i1 %tobool55, label %cond.true56, label %cond.false62, !dbg !6819

cond.true56:                                      ; preds = %for.inc50
  call void @llvm.dbg.declare(metadata i8** %__mptr57, metadata !6820, metadata !DIExpression()), !dbg !6822
  %56 = load %struct.hlist_node*, %struct.hlist_node** %____ptr51, align 8, !dbg !6822
  %57 = bitcast %struct.hlist_node* %56 to i8*, !dbg !6822
  store i8* %57, i8** %__mptr57, align 8, !dbg !6822
  br label %do.body58, !dbg !6822

do.body58:                                        ; preds = %cond.true56
  br label %do.end59, !dbg !6823

do.end59:                                         ; preds = %do.body58
  %58 = load i8*, i8** %__mptr57, align 8, !dbg !6822
  %add.ptr61 = getelementptr i8, i8* %58, i64 0, !dbg !6822
  %59 = bitcast i8* %add.ptr61 to %struct.pci_cap_saved_state*, !dbg !6822
  store %struct.pci_cap_saved_state* %59, %struct.pci_cap_saved_state** %tmp60, align 8, !dbg !6823
  %60 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp60, align 8, !dbg !6822
  br label %cond.end63, !dbg !6819

cond.false62:                                     ; preds = %for.inc50
  br label %cond.end63, !dbg !6819

cond.end63:                                       ; preds = %cond.false62, %do.end59
  %cond64 = phi %struct.pci_cap_saved_state* [ %60, %do.end59 ], [ null, %cond.false62 ], !dbg !6819
  store %struct.pci_cap_saved_state* %cond64, %struct.pci_cap_saved_state** %tmp54, align 8, !dbg !6819
  %61 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp54, align 8, !dbg !6819
  store %struct.pci_cap_saved_state* %61, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !6796
  br label %for.cond41, !dbg !6796, !llvm.loop !6825

for.end65:                                        ; preds = %for.cond41
  %62 = load %struct.pci_saved_state*, %struct.pci_saved_state** %state, align 8, !dbg !6827
  store %struct.pci_saved_state* %62, %struct.pci_saved_state** %retval, align 8, !dbg !6828
  br label %return, !dbg !6828

return:                                           ; preds = %for.end65, %if.then22, %if.then
  %63 = load %struct.pci_saved_state*, %struct.pci_saved_state** %retval, align 8, !dbg !6829
  ret %struct.pci_saved_state* %63, !dbg !6829
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !6830 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6833, metadata !DIExpression()), !dbg !6837
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6843, metadata !DIExpression()), !dbg !6844
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6845, metadata !DIExpression()), !dbg !6846
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6847, metadata !DIExpression()), !dbg !6848
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6849, metadata !DIExpression()), !dbg !6853
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6855, metadata !DIExpression()), !dbg !6859
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6861, metadata !DIExpression()), !dbg !6865
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6870, metadata !DIExpression()), !dbg !6871
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6872, metadata !DIExpression()), !dbg !6873
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6874, metadata !DIExpression()), !dbg !6875
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6876, metadata !DIExpression()), !dbg !6877
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6878, metadata !DIExpression()), !dbg !6879
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6880, metadata !DIExpression()), !dbg !6881
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6882, metadata !DIExpression()), !dbg !6883
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6884, metadata !DIExpression()), !dbg !6885
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6886, metadata !DIExpression()), !dbg !6887
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6888, metadata !DIExpression()), !dbg !6889
  %0 = load i64, i64* %size.addr, align 8, !dbg !6890
  %1 = load i32, i32* %flags.addr, align 4, !dbg !6891
  %or = or i32 %1, 256, !dbg !6892
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !6893
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !6894
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !6895

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !6896
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !6897
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6898

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !6899
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !6900
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !6901
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !6902
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6879
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !6903
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6904
  %10 = load i32, i32* %order.i.i, align 4, !dbg !6905
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6906
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6907
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6908
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !6909
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6909
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6909
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6909
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !6909
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6910
  br label %kmalloc.exit, !dbg !6910

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !6911
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6912
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !6912
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6914

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !6915
  br label %kmalloc_index.exit.i, !dbg !6915

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6916
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !6918
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !6919

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6920
  br label %kmalloc_index.exit.i, !dbg !6920

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6921
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !6923
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !6924

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6925
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !6926
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !6927

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !6928
  br label %kmalloc_index.exit.i, !dbg !6928

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6929
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !6931
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !6932

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6933
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !6934
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !6935

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !6936
  br label %kmalloc_index.exit.i, !dbg !6936

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6937
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !6939
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !6940

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6941
  br label %kmalloc_index.exit.i, !dbg !6941

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6942
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !6944
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !6945

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !6946
  br label %kmalloc_index.exit.i, !dbg !6946

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6947
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !6949
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !6950

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !6951
  br label %kmalloc_index.exit.i, !dbg !6951

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6952
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !6954
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !6955

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !6956
  br label %kmalloc_index.exit.i, !dbg !6956

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6957
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !6959
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !6960

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !6961
  br label %kmalloc_index.exit.i, !dbg !6961

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6962
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !6964
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !6965

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !6966
  br label %kmalloc_index.exit.i, !dbg !6966

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6967
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !6969
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !6970

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6971
  br label %kmalloc_index.exit.i, !dbg !6971

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6972
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !6974
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6975

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6976
  br label %kmalloc_index.exit.i, !dbg !6976

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6977
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !6979
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6980

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6981
  br label %kmalloc_index.exit.i, !dbg !6981

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6982
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !6984
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6985

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !6986
  br label %kmalloc_index.exit.i, !dbg !6986

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6987
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !6989
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !6990

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !6991
  br label %kmalloc_index.exit.i, !dbg !6991

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6992
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !6994
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !6995

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !6996
  br label %kmalloc_index.exit.i, !dbg !6996

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6997
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !6999
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7000

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7001
  br label %kmalloc_index.exit.i, !dbg !7001

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7002
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !7004
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7005

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7006
  br label %kmalloc_index.exit.i, !dbg !7006

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7007
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !7009
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7010

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7011
  br label %kmalloc_index.exit.i, !dbg !7011

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7012
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !7014
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7015

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7016
  br label %kmalloc_index.exit.i, !dbg !7016

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7017
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !7019
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7020

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7021
  br label %kmalloc_index.exit.i, !dbg !7021

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7022
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !7024
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7025

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7026
  br label %kmalloc_index.exit.i, !dbg !7026

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7027
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !7029
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7030

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7031
  br label %kmalloc_index.exit.i, !dbg !7031

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7032
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !7034
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7035

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7036
  br label %kmalloc_index.exit.i, !dbg !7036

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7037
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !7039
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7040

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7041
  br label %kmalloc_index.exit.i, !dbg !7041

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7042
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !7044
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7045

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7046
  br label %kmalloc_index.exit.i, !dbg !7046

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7047
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !7049
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7050

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7051
  br label %kmalloc_index.exit.i, !dbg !7051

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7052
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !7054
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7055

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7056
  br label %kmalloc_index.exit.i, !dbg !7056

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.58, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !7057, !srcloc !7060
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 102) #10, !dbg !7061, !srcloc !7064
  unreachable, !dbg !7065

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !7066
  store i32 %45, i32* %index.i, align 4, !dbg !7067
  %46 = load i32, i32* %index.i, align 4, !dbg !7068
  %tobool.i = icmp ne i32 %46, 0, !dbg !7068
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7070

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7071
  br label %kmalloc.exit, !dbg !7071

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !7072
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7073
  %and.i.i = and i32 %48, 17, !dbg !7073
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7073
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7073
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7073
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7073
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7075

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7076
  br label %kmalloc_type.exit.i, !dbg !7076

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7077
  %and2.i.i = and i32 %49, 1, !dbg !7078
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7077
  %50 = zext i1 %tobool3.i.i to i64, !dbg !7077
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7077
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7079
  br label %kmalloc_type.exit.i, !dbg !7079

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !7080
  %idxprom.i = zext i32 %51 to i64, !dbg !7081
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7081
  %52 = load i32, i32* %index.i, align 4, !dbg !7082
  %idxprom6.i = zext i32 %52 to i64, !dbg !7081
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7081
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7081
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !7083
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !7084
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7085
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7086
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !7087
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7087
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7087
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7087
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !7087
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6848
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7088
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !7089
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7090
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7091
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !7092
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7093
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !7094
  store i8* %62, i8** %retval.i, align 8, !dbg !7095
  br label %kmalloc.exit, !dbg !7095

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !7096
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !7097
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !7098
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7098
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7098
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7098
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !7098
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7099
  br label %kmalloc.exit, !dbg !7099

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !7100
  ret i8* %65, !dbg !7101
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_load_saved_state(%struct.pci_dev* %dev, %struct.pci_saved_state* %state) #0 !dbg !7102 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %state.addr = alloca %struct.pci_saved_state*, align 8
  %cap = alloca %struct.pci_cap_saved_data*, align 8
  %tmp = alloca %struct.pci_cap_saved_state*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7105, metadata !DIExpression()), !dbg !7106
  store %struct.pci_saved_state* %state, %struct.pci_saved_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_saved_state** %state.addr, metadata !7107, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_data** %cap, metadata !7109, metadata !DIExpression()), !dbg !7110
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7111
  %state_saved = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !7112
  %1 = bitcast [5 x i8]* %state_saved to i40*, !dbg !7112
  %bf.load = load i40, i40* %1, align 1, !dbg !7113
  %bf.clear = and i40 %bf.load, -1048577, !dbg !7113
  store i40 %bf.clear, i40* %1, align 1, !dbg !7113
  %2 = load %struct.pci_saved_state*, %struct.pci_saved_state** %state.addr, align 8, !dbg !7114
  %tobool = icmp ne %struct.pci_saved_state* %2, null, !dbg !7114
  br i1 %tobool, label %if.end, label %if.then, !dbg !7116

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7117
  br label %return, !dbg !7117

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7118
  %saved_config_space = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 49, !dbg !7119
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %saved_config_space, i64 0, i64 0, !dbg !7120
  %4 = bitcast i32* %arraydecay to i8*, !dbg !7120
  %5 = load %struct.pci_saved_state*, %struct.pci_saved_state** %state.addr, align 8, !dbg !7121
  %config_space = getelementptr inbounds %struct.pci_saved_state, %struct.pci_saved_state* %5, i32 0, i32 0, !dbg !7122
  %arraydecay1 = getelementptr inbounds [16 x i32], [16 x i32]* %config_space, i64 0, i64 0, !dbg !7120
  %6 = bitcast i32* %arraydecay1 to i8*, !dbg !7120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %6, i64 64, i1 false), !dbg !7120
  %7 = load %struct.pci_saved_state*, %struct.pci_saved_state** %state.addr, align 8, !dbg !7123
  %cap2 = getelementptr inbounds %struct.pci_saved_state, %struct.pci_saved_state* %7, i32 0, i32 1, !dbg !7124
  %arraydecay3 = getelementptr inbounds [0 x %struct.pci_cap_saved_data], [0 x %struct.pci_cap_saved_data]* %cap2, i64 0, i64 0, !dbg !7123
  store %struct.pci_cap_saved_data* %arraydecay3, %struct.pci_cap_saved_data** %cap, align 8, !dbg !7125
  br label %while.cond, !dbg !7126

while.cond:                                       ; preds = %if.end11, %if.end
  %8 = load %struct.pci_cap_saved_data*, %struct.pci_cap_saved_data** %cap, align 8, !dbg !7127
  %size = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %8, i32 0, i32 2, !dbg !7128
  %9 = load i32, i32* %size, align 4, !dbg !7128
  %tobool4 = icmp ne i32 %9, 0, !dbg !7126
  br i1 %tobool4, label %while.body, label %while.end, !dbg !7126

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_state** %tmp, metadata !7129, metadata !DIExpression()), !dbg !7131
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7132
  %11 = load %struct.pci_cap_saved_data*, %struct.pci_cap_saved_data** %cap, align 8, !dbg !7133
  %cap_nr = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %11, i32 0, i32 0, !dbg !7134
  %12 = load i16, i16* %cap_nr, align 4, !dbg !7134
  %13 = load %struct.pci_cap_saved_data*, %struct.pci_cap_saved_data** %cap, align 8, !dbg !7135
  %cap_extended = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %13, i32 0, i32 1, !dbg !7136
  %14 = load i8, i8* %cap_extended, align 2, !dbg !7136
  %tobool5 = trunc i8 %14 to i1, !dbg !7136
  %call = call %struct.pci_cap_saved_state* @_pci_find_saved_cap(%struct.pci_dev* %10, i16 zeroext %12, i1 zeroext %tobool5) #11, !dbg !7137
  store %struct.pci_cap_saved_state* %call, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !7138
  %15 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !7139
  %tobool6 = icmp ne %struct.pci_cap_saved_state* %15, null, !dbg !7139
  br i1 %tobool6, label %lor.lhs.false, label %if.then10, !dbg !7141

lor.lhs.false:                                    ; preds = %while.body
  %16 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !7142
  %cap7 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %16, i32 0, i32 1, !dbg !7143
  %size8 = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap7, i32 0, i32 2, !dbg !7144
  %17 = load i32, i32* %size8, align 4, !dbg !7144
  %18 = load %struct.pci_cap_saved_data*, %struct.pci_cap_saved_data** %cap, align 8, !dbg !7145
  %size9 = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %18, i32 0, i32 2, !dbg !7146
  %19 = load i32, i32* %size9, align 4, !dbg !7146
  %cmp = icmp ne i32 %17, %19, !dbg !7147
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !7148

if.then10:                                        ; preds = %lor.lhs.false, %while.body
  store i32 -22, i32* %retval, align 4, !dbg !7149
  br label %return, !dbg !7149

if.end11:                                         ; preds = %lor.lhs.false
  %20 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !7150
  %cap12 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %20, i32 0, i32 1, !dbg !7151
  %data = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap12, i32 0, i32 3, !dbg !7152
  %arraydecay13 = getelementptr inbounds [0 x i32], [0 x i32]* %data, i64 0, i64 0, !dbg !7153
  %21 = bitcast i32* %arraydecay13 to i8*, !dbg !7153
  %22 = load %struct.pci_cap_saved_data*, %struct.pci_cap_saved_data** %cap, align 8, !dbg !7154
  %data14 = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %22, i32 0, i32 3, !dbg !7155
  %arraydecay15 = getelementptr inbounds [0 x i32], [0 x i32]* %data14, i64 0, i64 0, !dbg !7153
  %23 = bitcast i32* %arraydecay15 to i8*, !dbg !7153
  %24 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !7156
  %cap16 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %24, i32 0, i32 1, !dbg !7157
  %size17 = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap16, i32 0, i32 2, !dbg !7158
  %25 = load i32, i32* %size17, align 4, !dbg !7158
  %conv = zext i32 %25 to i64, !dbg !7156
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %23, i64 %conv, i1 false), !dbg !7153
  %26 = load %struct.pci_cap_saved_data*, %struct.pci_cap_saved_data** %cap, align 8, !dbg !7159
  %27 = bitcast %struct.pci_cap_saved_data* %26 to i8*, !dbg !7160
  %add.ptr = getelementptr i8, i8* %27, i64 8, !dbg !7161
  %28 = load %struct.pci_cap_saved_data*, %struct.pci_cap_saved_data** %cap, align 8, !dbg !7162
  %size18 = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %28, i32 0, i32 2, !dbg !7163
  %29 = load i32, i32* %size18, align 4, !dbg !7163
  %idx.ext = zext i32 %29 to i64, !dbg !7164
  %add.ptr19 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !7164
  %30 = bitcast i8* %add.ptr19 to %struct.pci_cap_saved_data*, !dbg !7165
  store %struct.pci_cap_saved_data* %30, %struct.pci_cap_saved_data** %cap, align 8, !dbg !7166
  br label %while.cond, !dbg !7126, !llvm.loop !7167

while.end:                                        ; preds = %while.cond
  %31 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7169
  %state_saved20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 46, !dbg !7170
  %32 = bitcast [5 x i8]* %state_saved20 to i40*, !dbg !7170
  %bf.load21 = load i40, i40* %32, align 1, !dbg !7171
  %bf.clear22 = and i40 %bf.load21, -1048577, !dbg !7171
  %bf.set = or i40 %bf.clear22, 1048576, !dbg !7171
  store i40 %bf.set, i40* %32, align 1, !dbg !7171
  store i32 0, i32* %retval, align 4, !dbg !7172
  br label %return, !dbg !7172

return:                                           ; preds = %while.end, %if.then10, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !7173
  ret i32 %33, !dbg !7173
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_load_and_free_saved_state(%struct.pci_dev* %dev, %struct.pci_saved_state** %state) #0 !dbg !7174 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %state.addr = alloca %struct.pci_saved_state**, align 8
  %ret = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7178, metadata !DIExpression()), !dbg !7179
  store %struct.pci_saved_state** %state, %struct.pci_saved_state*** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_saved_state*** %state.addr, metadata !7180, metadata !DIExpression()), !dbg !7181
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7182, metadata !DIExpression()), !dbg !7183
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7184
  %1 = load %struct.pci_saved_state**, %struct.pci_saved_state*** %state.addr, align 8, !dbg !7185
  %2 = load %struct.pci_saved_state*, %struct.pci_saved_state** %1, align 8, !dbg !7186
  %call = call i32 @pci_load_saved_state(%struct.pci_dev* %0, %struct.pci_saved_state* %2) #11, !dbg !7187
  store i32 %call, i32* %ret, align 4, !dbg !7183
  %3 = load %struct.pci_saved_state**, %struct.pci_saved_state*** %state.addr, align 8, !dbg !7188
  %4 = load %struct.pci_saved_state*, %struct.pci_saved_state** %3, align 8, !dbg !7189
  %5 = bitcast %struct.pci_saved_state* %4 to i8*, !dbg !7189
  call void @kfree(i8* %5) #11, !dbg !7190
  %6 = load %struct.pci_saved_state**, %struct.pci_saved_state*** %state.addr, align 8, !dbg !7191
  store %struct.pci_saved_state* null, %struct.pci_saved_state** %6, align 8, !dbg !7192
  %7 = load i32, i32* %ret, align 4, !dbg !7193
  ret i32 %7, !dbg !7194
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local i32 @pcibios_enable_device(%struct.pci_dev* %dev, i32 %bars) #0 !dbg !7195 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bars.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7196, metadata !DIExpression()), !dbg !7197
  store i32 %bars, i32* %bars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bars.addr, metadata !7198, metadata !DIExpression()), !dbg !7199
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7200
  %1 = load i32, i32* %bars.addr, align 4, !dbg !7201
  %call = call i32 @pci_enable_resources(%struct.pci_dev* %0, i32 %1) #11, !dbg !7202
  ret i32 %call, !dbg !7203
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_resources(%struct.pci_dev*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_reenable_device(%struct.pci_dev* %dev) #0 !dbg !7204 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7205, metadata !DIExpression()), !dbg !7206
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7207
  %call = call i32 @pci_is_enabled(%struct.pci_dev* %0) #11, !dbg !7209
  %tobool = icmp ne i32 %call, 0, !dbg !7209
  br i1 %tobool, label %if.then, label %if.end, !dbg !7210

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7211
  %call1 = call i32 @do_pci_enable_device(%struct.pci_dev* %1, i32 131071) #11, !dbg !7212
  store i32 %call1, i32* %retval, align 4, !dbg !7213
  br label %return, !dbg !7213

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7214
  br label %return, !dbg !7214

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !7215
  ret i32 %2, !dbg !7215
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_is_enabled(%struct.pci_dev* %pdev) #0 !dbg !7216 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7217, metadata !DIExpression()), !dbg !7224
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7229, metadata !DIExpression()), !dbg !7237
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7239, metadata !DIExpression()), !dbg !7240
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7241, metadata !DIExpression()), !dbg !7242
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7243, metadata !DIExpression()), !dbg !7244
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7245
  %enable_cnt = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 48, !dbg !7246
  store %struct.atomic_t* %enable_cnt, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7247
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !7247
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7248
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !7249
  %conv.i.i = trunc i64 %4 to i32, !dbg !7249
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #14, !dbg !7250
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7251
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !7251
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !7251
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7252
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7253
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !7253
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !7253
  %cmp = icmp sgt i32 %9, 0, !dbg !7254
  %conv = zext i1 %cmp to i32, !dbg !7254
  ret i32 %conv, !dbg !7255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_pci_enable_device(%struct.pci_dev* %dev, i32 %bars) #0 !dbg !7256 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bars.addr = alloca i32, align 4
  %err = alloca i32, align 4
  %bridge = alloca %struct.pci_dev*, align 8
  %cmd = alloca i16, align 2
  %pin = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7257, metadata !DIExpression()), !dbg !7258
  store i32 %bars, i32* %bars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bars.addr, metadata !7259, metadata !DIExpression()), !dbg !7260
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7261, metadata !DIExpression()), !dbg !7262
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !7263, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !7265, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.declare(metadata i8* %pin, metadata !7267, metadata !DIExpression()), !dbg !7268
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7269
  %call = call i32 @pci_set_power_state(%struct.pci_dev* %0, i32 0) #11, !dbg !7270
  store i32 %call, i32* %err, align 4, !dbg !7271
  %1 = load i32, i32* %err, align 4, !dbg !7272
  %cmp = icmp slt i32 %1, 0, !dbg !7274
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7275

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !7276
  %cmp1 = icmp ne i32 %2, -5, !dbg !7277
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7278

if.then:                                          ; preds = %land.lhs.true
  %3 = load i32, i32* %err, align 4, !dbg !7279
  store i32 %3, i32* %retval, align 4, !dbg !7280
  br label %return, !dbg !7280

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7281
  %call2 = call %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %4) #11, !dbg !7282
  store %struct.pci_dev* %call2, %struct.pci_dev** %bridge, align 8, !dbg !7283
  %5 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !7284
  %tobool = icmp ne %struct.pci_dev* %5, null, !dbg !7284
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !7286

if.then3:                                         ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !7287
  call void @pcie_aspm_powersave_config_link(%struct.pci_dev* %6) #11, !dbg !7288
  br label %if.end4, !dbg !7288

if.end4:                                          ; preds = %if.then3, %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7289
  %8 = load i32, i32* %bars.addr, align 4, !dbg !7290
  %call5 = call i32 @pcibios_enable_device(%struct.pci_dev* %7, i32 %8) #11, !dbg !7291
  store i32 %call5, i32* %err, align 4, !dbg !7292
  %9 = load i32, i32* %err, align 4, !dbg !7293
  %cmp6 = icmp slt i32 %9, 0, !dbg !7295
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !7296

if.then7:                                         ; preds = %if.end4
  %10 = load i32, i32* %err, align 4, !dbg !7297
  store i32 %10, i32* %retval, align 4, !dbg !7298
  br label %return, !dbg !7298

if.end8:                                          ; preds = %if.end4
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7299
  call void @pci_fixup_device(i32 3, %struct.pci_dev* %11) #11, !dbg !7300
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7301
  %msi_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 46, !dbg !7303
  %13 = bitcast [5 x i8]* %msi_enabled to i40*, !dbg !7303
  %bf.load = load i40, i40* %13, align 1, !dbg !7303
  %bf.lshr = lshr i40 %bf.load, 12, !dbg !7303
  %bf.clear = and i40 %bf.lshr, 1, !dbg !7303
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !7303
  %tobool9 = icmp ne i32 %bf.cast, 0, !dbg !7301
  br i1 %tobool9, label %if.then15, label %lor.lhs.false, !dbg !7304

lor.lhs.false:                                    ; preds = %if.end8
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7305
  %msix_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 46, !dbg !7306
  %15 = bitcast [5 x i8]* %msix_enabled to i40*, !dbg !7306
  %bf.load10 = load i40, i40* %15, align 1, !dbg !7306
  %bf.lshr11 = lshr i40 %bf.load10, 13, !dbg !7306
  %bf.clear12 = and i40 %bf.lshr11, 1, !dbg !7306
  %bf.cast13 = trunc i40 %bf.clear12 to i32, !dbg !7306
  %tobool14 = icmp ne i32 %bf.cast13, 0, !dbg !7305
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !7307

if.then15:                                        ; preds = %lor.lhs.false, %if.end8
  store i32 0, i32* %retval, align 4, !dbg !7308
  br label %return, !dbg !7308

if.end16:                                         ; preds = %lor.lhs.false
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7309
  %call17 = call i32 @pci_read_config_byte(%struct.pci_dev* %16, i32 61, i8* %pin) #11, !dbg !7310
  %17 = load i8, i8* %pin, align 1, !dbg !7311
  %tobool18 = icmp ne i8 %17, 0, !dbg !7311
  br i1 %tobool18, label %if.then19, label %if.end28, !dbg !7313

if.then19:                                        ; preds = %if.end16
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7314
  %call20 = call i32 @pci_read_config_word(%struct.pci_dev* %18, i32 4, i16* %cmd) #11, !dbg !7316
  %19 = load i16, i16* %cmd, align 2, !dbg !7317
  %conv = zext i16 %19 to i32, !dbg !7317
  %and = and i32 %conv, 1024, !dbg !7319
  %tobool21 = icmp ne i32 %and, 0, !dbg !7319
  br i1 %tobool21, label %if.then22, label %if.end27, !dbg !7320

if.then22:                                        ; preds = %if.then19
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7321
  %21 = load i16, i16* %cmd, align 2, !dbg !7322
  %conv23 = zext i16 %21 to i32, !dbg !7322
  %and24 = and i32 %conv23, -1025, !dbg !7323
  %conv25 = trunc i32 %and24 to i16, !dbg !7322
  %call26 = call i32 @pci_write_config_word(%struct.pci_dev* %20, i32 4, i16 zeroext %conv25) #11, !dbg !7324
  br label %if.end27, !dbg !7324

if.end27:                                         ; preds = %if.then22, %if.then19
  br label %if.end28, !dbg !7325

if.end28:                                         ; preds = %if.end27, %if.end16
  store i32 0, i32* %retval, align 4, !dbg !7326
  br label %return, !dbg !7326

return:                                           ; preds = %if.end28, %if.then15, %if.then7, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !7327
  ret i32 %22, !dbg !7327
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_enable_device_io(%struct.pci_dev* %dev) #0 !dbg !7328 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7329, metadata !DIExpression()), !dbg !7330
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7331
  %call = call i32 @pci_enable_device_flags(%struct.pci_dev* %0, i64 256) #11, !dbg !7332
  ret i32 %call, !dbg !7333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_enable_device_flags(%struct.pci_dev* %dev, i64 %flags) #0 !dbg !7334 {
entry:
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !7337, metadata !DIExpression()), !dbg !7342
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !7352, metadata !DIExpression()), !dbg !7353
  %__ret.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i, metadata !7354, metadata !DIExpression()), !dbg !7356
  %tmp.i.i.i = alloca i32, align 4
  %v.addr.i1.i41 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i41, metadata !7357, metadata !DIExpression()), !dbg !7358
  %v.addr.i.i42 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i42, metadata !7359, metadata !DIExpression()), !dbg !7361
  %size.addr.i.i43 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i43, metadata !7363, metadata !DIExpression()), !dbg !7364
  %v.addr.i44 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i44, metadata !7365, metadata !DIExpression()), !dbg !7366
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7367, metadata !DIExpression()), !dbg !7371
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7359, metadata !DIExpression()), !dbg !7376
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7363, metadata !DIExpression()), !dbg !7378
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7379, metadata !DIExpression()), !dbg !7380
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %flags.addr = alloca i64, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %bars = alloca i32, align 4
  %pmcsr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7381, metadata !DIExpression()), !dbg !7382
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !7383, metadata !DIExpression()), !dbg !7384
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !7385, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7387, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7389, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.declare(metadata i32* %bars, metadata !7391, metadata !DIExpression()), !dbg !7392
  store i32 0, i32* %bars, align 4, !dbg !7392
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7393
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 28, !dbg !7395
  %1 = load i8, i8* %pm_cap, align 1, !dbg !7395
  %tobool = icmp ne i8 %1, 0, !dbg !7393
  br i1 %tobool, label %if.then, label %if.end, !dbg !7396

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pmcsr, metadata !7397, metadata !DIExpression()), !dbg !7399
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7400
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7401
  %pm_cap1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 28, !dbg !7402
  %4 = load i8, i8* %pm_cap1, align 1, !dbg !7402
  %conv = zext i8 %4 to i32, !dbg !7401
  %add = add i32 %conv, 4, !dbg !7403
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 %add, i16* %pmcsr) #11, !dbg !7404
  %5 = load i16, i16* %pmcsr, align 2, !dbg !7405
  %conv2 = zext i16 %5 to i32, !dbg !7405
  %and = and i32 %conv2, 3, !dbg !7406
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7407
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 26, !dbg !7408
  store i32 %and, i32* %current_state, align 8, !dbg !7409
  br label %if.end, !dbg !7410

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7411
  %enable_cnt = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 48, !dbg !7412
  store %struct.atomic_t* %enable_cnt, %struct.atomic_t** %v.addr.i44, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i44, align 8, !dbg !7413
  %9 = bitcast %struct.atomic_t* %8 to i8*, !dbg !7413
  store i8* %9, i8** %v.addr.i.i42, align 8
  store i64 4, i64* %size.addr.i.i43, align 8
  %10 = load i8*, i8** %v.addr.i.i42, align 8, !dbg !7414
  %11 = load i64, i64* %size.addr.i.i43, align 8, !dbg !7415
  %conv.i.i45 = trunc i64 %11 to i32, !dbg !7415
  %call.i.i46 = call zeroext i1 @kasan_check_write(i8* %10, i32 %conv.i.i45) #14, !dbg !7416
  %12 = load i8*, i8** %v.addr.i.i42, align 8, !dbg !7417
  %13 = load i64, i64* %size.addr.i.i43, align 8, !dbg !7417
  call void @kcsan_check_access(i8* %12, i64 %13, i32 7) #14, !dbg !7417
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i44, align 8, !dbg !7418
  store %struct.atomic_t* %14, %struct.atomic_t** %v.addr.i1.i41, align 8
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i41, align 8, !dbg !7419
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %15, %struct.atomic_t** %v.addr.i.i.i, align 8
  %16 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !7420
  %17 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !7356
  store i32 %17, i32* %__ret.i.i.i, align 4, !dbg !7356
  %18 = load i32, i32* %__ret.i.i.i, align 4, !dbg !7356
  %19 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !7356
  %counter.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %19, i32 0, i32 0, !dbg !7356
  %20 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i, i32 %18, i32* %counter.i.i.i) #10, !dbg !7356, !srcloc !7421
  store i32 %20, i32* %__ret.i.i.i, align 4, !dbg !7356
  %21 = load i32, i32* %__ret.i.i.i, align 4, !dbg !7356
  store i32 %21, i32* %tmp.i.i.i, align 4, !dbg !7356
  %22 = load i32, i32* %tmp.i.i.i, align 4, !dbg !7356
  %add.i.i.i = add i32 %16, %22, !dbg !7422
  %cmp = icmp sgt i32 %add.i.i.i, 1, !dbg !7423
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !7424

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7425
  br label %return, !dbg !7425

if.end6:                                          ; preds = %if.end
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7426
  %call7 = call %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %23) #11, !dbg !7427
  store %struct.pci_dev* %call7, %struct.pci_dev** %bridge, align 8, !dbg !7428
  %24 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !7429
  %tobool8 = icmp ne %struct.pci_dev* %24, null, !dbg !7429
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7431

if.then9:                                         ; preds = %if.end6
  %25 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !7432
  call void @pci_enable_bridge(%struct.pci_dev* %25) #11, !dbg !7433
  br label %if.end10, !dbg !7433

if.end10:                                         ; preds = %if.then9, %if.end6
  store i32 0, i32* %i, align 4, !dbg !7434
  br label %for.cond, !dbg !7436

for.cond:                                         ; preds = %for.inc, %if.end10
  %26 = load i32, i32* %i, align 4, !dbg !7437
  %cmp11 = icmp sle i32 %26, 6, !dbg !7439
  br i1 %cmp11, label %for.body, label %for.end, !dbg !7440

for.body:                                         ; preds = %for.cond
  %27 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7441
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 44, !dbg !7443
  %28 = load i32, i32* %i, align 4, !dbg !7444
  %idxprom = sext i32 %28 to i64, !dbg !7441
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !7441
  %flags13 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 3, !dbg !7445
  %29 = load i64, i64* %flags13, align 8, !dbg !7445
  %30 = load i64, i64* %flags.addr, align 8, !dbg !7446
  %and14 = and i64 %29, %30, !dbg !7447
  %tobool15 = icmp ne i64 %and14, 0, !dbg !7447
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !7448

if.then16:                                        ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !7449
  %shl = shl i32 1, %31, !dbg !7450
  %32 = load i32, i32* %bars, align 4, !dbg !7451
  %or = or i32 %32, %shl, !dbg !7451
  store i32 %or, i32* %bars, align 4, !dbg !7451
  br label %if.end17, !dbg !7452

if.end17:                                         ; preds = %if.then16, %for.body
  br label %for.inc, !dbg !7446

for.inc:                                          ; preds = %if.end17
  %33 = load i32, i32* %i, align 4, !dbg !7453
  %inc = add i32 %33, 1, !dbg !7453
  store i32 %inc, i32* %i, align 4, !dbg !7453
  br label %for.cond, !dbg !7454, !llvm.loop !7455

for.end:                                          ; preds = %for.cond
  store i32 13, i32* %i, align 4, !dbg !7457
  br label %for.cond18, !dbg !7459

for.cond18:                                       ; preds = %for.inc32, %for.end
  %34 = load i32, i32* %i, align 4, !dbg !7460
  %cmp19 = icmp slt i32 %34, 17, !dbg !7462
  br i1 %cmp19, label %for.body21, label %for.end34, !dbg !7463

for.body21:                                       ; preds = %for.cond18
  %35 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7464
  %resource22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %35, i32 0, i32 44, !dbg !7466
  %36 = load i32, i32* %i, align 4, !dbg !7467
  %idxprom23 = sext i32 %36 to i64, !dbg !7464
  %arrayidx24 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource22, i64 0, i64 %idxprom23, !dbg !7464
  %flags25 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx24, i32 0, i32 3, !dbg !7468
  %37 = load i64, i64* %flags25, align 8, !dbg !7468
  %38 = load i64, i64* %flags.addr, align 8, !dbg !7469
  %and26 = and i64 %37, %38, !dbg !7470
  %tobool27 = icmp ne i64 %and26, 0, !dbg !7470
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !7471

if.then28:                                        ; preds = %for.body21
  %39 = load i32, i32* %i, align 4, !dbg !7472
  %shl29 = shl i32 1, %39, !dbg !7473
  %40 = load i32, i32* %bars, align 4, !dbg !7474
  %or30 = or i32 %40, %shl29, !dbg !7474
  store i32 %or30, i32* %bars, align 4, !dbg !7474
  br label %if.end31, !dbg !7475

if.end31:                                         ; preds = %if.then28, %for.body21
  br label %for.inc32, !dbg !7469

for.inc32:                                        ; preds = %if.end31
  %41 = load i32, i32* %i, align 4, !dbg !7476
  %inc33 = add i32 %41, 1, !dbg !7476
  store i32 %inc33, i32* %i, align 4, !dbg !7476
  br label %for.cond18, !dbg !7477, !llvm.loop !7478

for.end34:                                        ; preds = %for.cond18
  %42 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7480
  %43 = load i32, i32* %bars, align 4, !dbg !7481
  %call35 = call i32 @do_pci_enable_device(%struct.pci_dev* %42, i32 %43) #11, !dbg !7482
  store i32 %call35, i32* %err, align 4, !dbg !7483
  %44 = load i32, i32* %err, align 4, !dbg !7484
  %cmp36 = icmp slt i32 %44, 0, !dbg !7485
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !7486

if.then38:                                        ; preds = %for.end34
  %45 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7487
  %enable_cnt39 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %45, i32 0, i32 48, !dbg !7488
  store %struct.atomic_t* %enable_cnt39, %struct.atomic_t** %v.addr.i, align 8
  %46 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7489
  %47 = bitcast %struct.atomic_t* %46 to i8*, !dbg !7489
  store i8* %47, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %48 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7490
  %49 = load i64, i64* %size.addr.i.i, align 8, !dbg !7491
  %conv.i.i = trunc i64 %49 to i32, !dbg !7491
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %48, i32 %conv.i.i) #14, !dbg !7492
  %50 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7493
  %51 = load i64, i64* %size.addr.i.i, align 8, !dbg !7493
  call void @kcsan_check_access(i8* %50, i64 %51, i32 7) #14, !dbg !7493
  %52 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7494
  store %struct.atomic_t* %52, %struct.atomic_t** %v.addr.i1.i, align 8
  %53 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7495
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %53, i32 0, i32 0, !dbg !7496
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #10, !dbg !7497, !srcloc !7498
  br label %if.end40, !dbg !7499

if.end40:                                         ; preds = %if.then38, %for.end34
  %54 = load i32, i32* %err, align 4, !dbg !7500
  store i32 %54, i32* %retval, align 4, !dbg !7501
  br label %return, !dbg !7501

return:                                           ; preds = %if.end40, %if.then5
  %55 = load i32, i32* %retval, align 4, !dbg !7502
  ret i32 %55, !dbg !7502
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_enable_device_mem(%struct.pci_dev* %dev) #0 !dbg !7503 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7504, metadata !DIExpression()), !dbg !7505
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7506
  %call = call i32 @pci_enable_device_flags(%struct.pci_dev* %0, i64 512) #11, !dbg !7507
  ret i32 %call, !dbg !7508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_enable_device(%struct.pci_dev* %dev) #0 !dbg !7509 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7510, metadata !DIExpression()), !dbg !7511
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7512
  %call = call i32 @pci_enable_device_flags(%struct.pci_dev* %0, i64 768) #11, !dbg !7513
  ret i32 %call, !dbg !7514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcim_enable_device(%struct.pci_dev* %pdev) #0 !dbg !7515 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dr = alloca %struct.pci_devres*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7516, metadata !DIExpression()), !dbg !7517
  call void @llvm.dbg.declare(metadata %struct.pci_devres** %dr, metadata !7518, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7529, metadata !DIExpression()), !dbg !7530
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7531
  %call = call %struct.pci_devres* @get_pci_dr(%struct.pci_dev* %0) #11, !dbg !7532
  store %struct.pci_devres* %call, %struct.pci_devres** %dr, align 8, !dbg !7533
  %1 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !7534
  %tobool = icmp ne %struct.pci_devres* %1, null, !dbg !7534
  %lnot = xor i1 %tobool, true, !dbg !7534
  %lnot1 = xor i1 %lnot, true, !dbg !7534
  %lnot2 = xor i1 %lnot1, true, !dbg !7534
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7534
  %conv = sext i32 %lnot.ext to i64, !dbg !7534
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7534
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7536

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7537
  br label %return, !dbg !7537

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !7538
  %3 = bitcast %struct.pci_devres* %2 to i8*, !dbg !7540
  %bf.load = load i8, i8* %3, align 4, !dbg !7540
  %bf.clear = and i8 %bf.load, 1, !dbg !7540
  %bf.cast = zext i8 %bf.clear to i32, !dbg !7540
  %tobool4 = icmp ne i32 %bf.cast, 0, !dbg !7538
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !7541

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7542
  br label %return, !dbg !7542

if.end6:                                          ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7543
  %call7 = call i32 @pci_enable_device(%struct.pci_dev* %4) #11, !dbg !7544
  store i32 %call7, i32* %rc, align 4, !dbg !7545
  %5 = load i32, i32* %rc, align 4, !dbg !7546
  %tobool8 = icmp ne i32 %5, 0, !dbg !7546
  br i1 %tobool8, label %if.end15, label %if.then9, !dbg !7548

if.then9:                                         ; preds = %if.end6
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7549
  %is_managed = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 46, !dbg !7551
  %7 = bitcast [5 x i8]* %is_managed to i40*, !dbg !7551
  %bf.load10 = load i40, i40* %7, align 1, !dbg !7552
  %bf.clear11 = and i40 %bf.load10, -262145, !dbg !7552
  %bf.set = or i40 %bf.clear11, 262144, !dbg !7552
  store i40 %bf.set, i40* %7, align 1, !dbg !7552
  %8 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !7553
  %9 = bitcast %struct.pci_devres* %8 to i8*, !dbg !7554
  %bf.load12 = load i8, i8* %9, align 4, !dbg !7555
  %bf.clear13 = and i8 %bf.load12, -2, !dbg !7555
  %bf.set14 = or i8 %bf.clear13, 1, !dbg !7555
  store i8 %bf.set14, i8* %9, align 4, !dbg !7555
  br label %if.end15, !dbg !7556

if.end15:                                         ; preds = %if.then9, %if.end6
  %10 = load i32, i32* %rc, align 4, !dbg !7557
  store i32 %10, i32* %retval, align 4, !dbg !7558
  br label %return, !dbg !7558

return:                                           ; preds = %if.end15, %if.then5, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !7559
  ret i32 %11, !dbg !7559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_devres* @get_pci_dr(%struct.pci_dev* %pdev) #0 !dbg !7560 {
entry:
  %retval = alloca %struct.pci_devres*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dr = alloca %struct.pci_devres*, align 8
  %new_dr = alloca %struct.pci_devres*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7563, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.declare(metadata %struct.pci_devres** %dr, metadata !7565, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.declare(metadata %struct.pci_devres** %new_dr, metadata !7567, metadata !DIExpression()), !dbg !7568
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7569
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !7570
  %call = call i8* @devres_find(%struct.device* %dev, void (%struct.device*, i8*)* @pcim_release, i32 (%struct.device*, i8*, i8*)* null, i8* null) #11, !dbg !7571
  %1 = bitcast i8* %call to %struct.pci_devres*, !dbg !7571
  store %struct.pci_devres* %1, %struct.pci_devres** %dr, align 8, !dbg !7572
  %2 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !7573
  %tobool = icmp ne %struct.pci_devres* %2, null, !dbg !7573
  br i1 %tobool, label %if.then, label %if.end, !dbg !7575

if.then:                                          ; preds = %entry
  %3 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !7576
  store %struct.pci_devres* %3, %struct.pci_devres** %retval, align 8, !dbg !7577
  br label %return, !dbg !7577

if.end:                                           ; preds = %entry
  %call1 = call i8* @devres_alloc(void (%struct.device*, i8*)* @pcim_release, i64 8, i32 3264) #11, !dbg !7578
  %4 = bitcast i8* %call1 to %struct.pci_devres*, !dbg !7578
  store %struct.pci_devres* %4, %struct.pci_devres** %new_dr, align 8, !dbg !7579
  %5 = load %struct.pci_devres*, %struct.pci_devres** %new_dr, align 8, !dbg !7580
  %tobool2 = icmp ne %struct.pci_devres* %5, null, !dbg !7580
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !7582

if.then3:                                         ; preds = %if.end
  store %struct.pci_devres* null, %struct.pci_devres** %retval, align 8, !dbg !7583
  br label %return, !dbg !7583

if.end4:                                          ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7584
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !7585
  %7 = load %struct.pci_devres*, %struct.pci_devres** %new_dr, align 8, !dbg !7586
  %8 = bitcast %struct.pci_devres* %7 to i8*, !dbg !7586
  %call6 = call i8* @devres_get(%struct.device* %dev5, i8* %8, i32 (%struct.device*, i8*, i8*)* null, i8* null) #11, !dbg !7587
  %9 = bitcast i8* %call6 to %struct.pci_devres*, !dbg !7587
  store %struct.pci_devres* %9, %struct.pci_devres** %retval, align 8, !dbg !7588
  br label %return, !dbg !7588

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %10 = load %struct.pci_devres*, %struct.pci_devres** %retval, align 8, !dbg !7589
  ret %struct.pci_devres* %10, !dbg !7589
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pcim_pin_device(%struct.pci_dev* %pdev) #0 !dbg !7590 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dr = alloca %struct.pci_devres*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7591, metadata !DIExpression()), !dbg !7592
  call void @llvm.dbg.declare(metadata %struct.pci_devres** %dr, metadata !7593, metadata !DIExpression()), !dbg !7594
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7595
  %call = call %struct.pci_devres* @find_pci_dr(%struct.pci_dev* %0) #11, !dbg !7596
  store %struct.pci_devres* %call, %struct.pci_devres** %dr, align 8, !dbg !7597
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7598, metadata !DIExpression()), !dbg !7600
  %1 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !7600
  %tobool = icmp ne %struct.pci_devres* %1, null, !dbg !7600
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7600

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !7600
  %3 = bitcast %struct.pci_devres* %2 to i8*, !dbg !7600
  %bf.load = load i8, i8* %3, align 4, !dbg !7600
  %bf.clear = and i8 %bf.load, 1, !dbg !7600
  %bf.cast = zext i8 %bf.clear to i32, !dbg !7600
  %tobool1 = icmp ne i32 %bf.cast, 0, !dbg !7600
  %lnot = xor i1 %tobool1, true, !dbg !7600
  br label %lor.end, !dbg !7600

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %4, true, !dbg !7600
  %lnot3 = xor i1 %lnot2, true, !dbg !7600
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7600
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7600
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !7601
  %tobool4 = icmp ne i32 %5, 0, !dbg !7601
  %lnot5 = xor i1 %tobool4, true, !dbg !7601
  %lnot7 = xor i1 %lnot5, true, !dbg !7601
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7601
  %conv = sext i32 %lnot.ext8 to i64, !dbg !7601
  %tobool9 = icmp ne i64 %conv, 0, !dbg !7601
  br i1 %tobool9, label %if.then, label %if.end, !dbg !7600

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !7601

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !7603

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !7605

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !7603

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i32 2055, i32 2305, i64 12) #10, !dbg !7607, !srcloc !7609
  br label %do.end12, !dbg !7607

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 252) #10, !dbg !7610, !srcloc !7612
  br label %do.body13, !dbg !7603

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !7613

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !7603

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !7603

if.end:                                           ; preds = %do.end15, %lor.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !7600
  %tobool16 = icmp ne i32 %6, 0, !dbg !7600
  %lnot17 = xor i1 %tobool16, true, !dbg !7600
  %lnot19 = xor i1 %lnot17, true, !dbg !7600
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !7600
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !7600
  store i64 %conv21, i64* %tmp, align 8, !dbg !7601
  %7 = load i64, i64* %tmp, align 8, !dbg !7600
  %8 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !7615
  %tobool22 = icmp ne %struct.pci_devres* %8, null, !dbg !7615
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !7617

if.then23:                                        ; preds = %if.end
  %9 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !7618
  %10 = bitcast %struct.pci_devres* %9 to i8*, !dbg !7619
  %bf.load24 = load i8, i8* %10, align 4, !dbg !7620
  %bf.clear25 = and i8 %bf.load24, -3, !dbg !7620
  %bf.set = or i8 %bf.clear25, 2, !dbg !7620
  store i8 %bf.set, i8* %10, align 4, !dbg !7620
  br label %if.end26, !dbg !7618

if.end26:                                         ; preds = %if.then23, %if.end
  ret void, !dbg !7621
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_devres* @find_pci_dr(%struct.pci_dev* %pdev) #0 !dbg !7622 {
entry:
  %retval = alloca %struct.pci_devres*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7623, metadata !DIExpression()), !dbg !7624
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7625
  %call = call i32 @pci_is_managed(%struct.pci_dev* %0) #11, !dbg !7627
  %tobool = icmp ne i32 %call, 0, !dbg !7627
  br i1 %tobool, label %if.then, label %if.end, !dbg !7628

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7629
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !7630
  %call1 = call i8* @devres_find(%struct.device* %dev, void (%struct.device*, i8*)* @pcim_release, i32 (%struct.device*, i8*, i8*)* null, i8* null) #11, !dbg !7631
  %2 = bitcast i8* %call1 to %struct.pci_devres*, !dbg !7631
  store %struct.pci_devres* %2, %struct.pci_devres** %retval, align 8, !dbg !7632
  br label %return, !dbg !7632

if.end:                                           ; preds = %entry
  store %struct.pci_devres* null, %struct.pci_devres** %retval, align 8, !dbg !7633
  br label %return, !dbg !7633

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.pci_devres*, %struct.pci_devres** %retval, align 8, !dbg !7634
  ret %struct.pci_devres* %3, !dbg !7634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local i32 @pcibios_add_device(%struct.pci_dev* %dev) #0 !dbg !7635 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7636, metadata !DIExpression()), !dbg !7637
  ret i32 0, !dbg !7638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local void @pcibios_release_device(%struct.pci_dev* %dev) #0 !dbg !7639 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7640, metadata !DIExpression()), !dbg !7641
  ret void, !dbg !7642
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local void @pcibios_disable_device(%struct.pci_dev* %dev) #0 !dbg !7643 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7644, metadata !DIExpression()), !dbg !7645
  ret void, !dbg !7646
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local void @pcibios_penalize_isa_irq(i32 %irq, i32 %active) #0 !dbg !7647 {
entry:
  %irq.addr = alloca i32, align 4
  %active.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7650, metadata !DIExpression()), !dbg !7651
  store i32 %active, i32* %active.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %active.addr, metadata !7652, metadata !DIExpression()), !dbg !7653
  ret void, !dbg !7654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_disable_enabled_device(%struct.pci_dev* %dev) #0 !dbg !7655 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7656, metadata !DIExpression()), !dbg !7657
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7658
  %call = call i32 @pci_is_enabled(%struct.pci_dev* %0) #11, !dbg !7660
  %tobool = icmp ne i32 %call, 0, !dbg !7660
  br i1 %tobool, label %if.then, label %if.end, !dbg !7661

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7662
  call void @do_pci_disable_device(%struct.pci_dev* %1) #11, !dbg !7663
  br label %if.end, !dbg !7663

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @do_pci_disable_device(%struct.pci_dev* %dev) #0 !dbg !7665 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pci_command = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7666, metadata !DIExpression()), !dbg !7667
  call void @llvm.dbg.declare(metadata i16* %pci_command, metadata !7668, metadata !DIExpression()), !dbg !7669
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7670
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %0, i32 4, i16* %pci_command) #11, !dbg !7671
  %1 = load i16, i16* %pci_command, align 2, !dbg !7672
  %conv = zext i16 %1 to i32, !dbg !7672
  %and = and i32 %conv, 4, !dbg !7674
  %tobool = icmp ne i32 %and, 0, !dbg !7674
  br i1 %tobool, label %if.then, label %if.end, !dbg !7675

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %pci_command, align 2, !dbg !7676
  %conv1 = zext i16 %2 to i32, !dbg !7676
  %and2 = and i32 %conv1, -5, !dbg !7676
  %conv3 = trunc i32 %and2 to i16, !dbg !7676
  store i16 %conv3, i16* %pci_command, align 2, !dbg !7676
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7678
  %4 = load i16, i16* %pci_command, align 2, !dbg !7679
  %call4 = call i32 @pci_write_config_word(%struct.pci_dev* %3, i32 4, i16 zeroext %4) #11, !dbg !7680
  br label %if.end, !dbg !7681

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7682
  call void @pcibios_disable_device(%struct.pci_dev* %5) #11, !dbg !7683
  ret void, !dbg !7684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_disable_device(%struct.pci_dev* %dev) #0 !dbg !4743 {
entry:
  %i.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i.i, metadata !7337, metadata !DIExpression()), !dbg !7685
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !7352, metadata !DIExpression()), !dbg !7694
  %__ret.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i.i, metadata !7354, metadata !DIExpression()), !dbg !7695
  %tmp.i.i.i.i = alloca i32, align 4
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !7696, metadata !DIExpression()), !dbg !7697
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !7698, metadata !DIExpression()), !dbg !7699
  %v.addr.i1.i60 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i60, metadata !7700, metadata !DIExpression()), !dbg !7701
  %v.addr.i.i61 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i61, metadata !7359, metadata !DIExpression()), !dbg !7702
  %size.addr.i.i62 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i62, metadata !7363, metadata !DIExpression()), !dbg !7704
  %v.addr.i63 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i63, metadata !7705, metadata !DIExpression()), !dbg !7706
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7217, metadata !DIExpression()), !dbg !7707
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7229, metadata !DIExpression()), !dbg !7711
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7239, metadata !DIExpression()), !dbg !7713
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7241, metadata !DIExpression()), !dbg !7714
  %dev.addr = alloca %struct.pci_dev*, align 8
  %dr = alloca %struct.pci_devres*, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp45 = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7715, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.declare(metadata %struct.pci_devres** %dr, metadata !7717, metadata !DIExpression()), !dbg !7718
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7719
  %call = call %struct.pci_devres* @find_pci_dr(%struct.pci_dev* %0) #11, !dbg !7720
  store %struct.pci_devres* %call, %struct.pci_devres** %dr, align 8, !dbg !7721
  %1 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !7722
  %tobool = icmp ne %struct.pci_devres* %1, null, !dbg !7722
  br i1 %tobool, label %if.then, label %if.end, !dbg !7724

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !7725
  %3 = bitcast %struct.pci_devres* %2 to i8*, !dbg !7726
  %bf.load = load i8, i8* %3, align 4, !dbg !7727
  %bf.clear = and i8 %bf.load, -2, !dbg !7727
  store i8 %bf.clear, i8* %3, align 4, !dbg !7727
  br label %if.end, !dbg !7725

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !7728, metadata !DIExpression()), !dbg !7729
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7729
  %enable_cnt = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 48, !dbg !7729
  store %struct.atomic_t* %enable_cnt, %struct.atomic_t** %v.addr.i, align 8
  %5 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7730
  %6 = bitcast %struct.atomic_t* %5 to i8*, !dbg !7730
  store i8* %6, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7731
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7732
  %conv.i.i = trunc i64 %8 to i32, !dbg !7732
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %7, i32 %conv.i.i) #14, !dbg !7733
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7734
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !7734
  call void @kcsan_check_access(i8* %9, i64 %10, i32 4) #14, !dbg !7734
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7735
  store %struct.atomic_t* %11, %struct.atomic_t** %v.addr.i1.i, align 8
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7736
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !7736
  %13 = load volatile i32, i32* %counter.i.i, align 4, !dbg !7736
  %cmp = icmp sle i32 %13, 0, !dbg !7729
  %lnot = xor i1 %cmp, true, !dbg !7729
  %lnot2 = xor i1 %lnot, true, !dbg !7729
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7729
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !7729
  %14 = load i32, i32* %__ret_warn_once, align 4, !dbg !7737
  %tobool3 = icmp ne i32 %14, 0, !dbg !7737
  br i1 %tobool3, label %land.rhs, label %land.end, !dbg !7737

land.rhs:                                         ; preds = %if.end
  %15 = load i8, i8* @pci_disable_device.__warned, align 1, !dbg !7737
  %tobool4 = trunc i8 %15 to i1, !dbg !7737
  %lnot5 = xor i1 %tobool4, true, !dbg !7737
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %16 = phi i1 [ false, %if.end ], [ %lnot5, %land.rhs ], !dbg !7739
  %lnot7 = xor i1 %16, true, !dbg !7737
  %lnot9 = xor i1 %lnot7, true, !dbg !7737
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !7737
  %conv = sext i32 %lnot.ext10 to i64, !dbg !7737
  %tobool11 = icmp ne i64 %conv, 0, !dbg !7737
  br i1 %tobool11, label %if.then12, label %if.end44, !dbg !7729

if.then12:                                        ; preds = %land.end
  store i8 1, i8* @pci_disable_device.__warned, align 1, !dbg !7740
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7742, metadata !DIExpression()), !dbg !7744
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !7744
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !7745
  %tobool13 = icmp ne i32 %17, 0, !dbg !7745
  %lnot14 = xor i1 %tobool13, true, !dbg !7745
  %lnot16 = xor i1 %lnot14, true, !dbg !7745
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !7745
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !7745
  %tobool19 = icmp ne i64 %conv18, 0, !dbg !7745
  br i1 %tobool19, label %if.then20, label %if.end37, !dbg !7744

if.then20:                                        ; preds = %if.then12
  br label %do.body, !dbg !7745

do.body:                                          ; preds = %if.then20
  br label %do.body21, !dbg !7747

do.body21:                                        ; preds = %do.body
  br label %do.end, !dbg !7749

do.end:                                           ; preds = %do.body21
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7747
  %dev22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 41, !dbg !7747
  %call23 = call i8* @dev_driver_string(%struct.device* %dev22) #11, !dbg !7747
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7747
  %dev24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !7747
  %call25 = call i8* @dev_name(%struct.device* %dev24) #11, !dbg !7747
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0), i8* %call23, i8* %call25) #11, !dbg !7747
  br label %do.body26, !dbg !7747

do.body26:                                        ; preds = %do.end
  br label %do.body27, !dbg !7751

do.body27:                                        ; preds = %do.body26
  br label %do.end28, !dbg !7753

do.end28:                                         ; preds = %do.body27
  br label %do.body29, !dbg !7751

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i32 2151, i32 2313, i64 12) #10, !dbg !7755, !srcloc !7757
  br label %do.end30, !dbg !7755

do.end30:                                         ; preds = %do.body29
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 253) #10, !dbg !7758, !srcloc !7760
  br label %do.body31, !dbg !7751

do.body31:                                        ; preds = %do.end30
  br label %do.end32, !dbg !7761

do.end32:                                         ; preds = %do.body31
  br label %do.end33, !dbg !7751

do.end33:                                         ; preds = %do.end32
  br label %do.body34, !dbg !7747

do.body34:                                        ; preds = %do.end33
  br label %do.end35, !dbg !7763

do.end35:                                         ; preds = %do.body34
  br label %do.end36, !dbg !7747

do.end36:                                         ; preds = %do.end35
  br label %if.end37, !dbg !7747

if.end37:                                         ; preds = %do.end36, %if.then12
  %20 = load i32, i32* %__ret_warn_on, align 4, !dbg !7744
  %tobool38 = icmp ne i32 %20, 0, !dbg !7744
  %lnot39 = xor i1 %tobool38, true, !dbg !7744
  %lnot41 = xor i1 %lnot39, true, !dbg !7744
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !7744
  %conv43 = sext i32 %lnot.ext42 to i64, !dbg !7744
  store i64 %conv43, i64* %tmp, align 8, !dbg !7745
  %21 = load i64, i64* %tmp, align 8, !dbg !7744
  br label %if.end44, !dbg !7740

if.end44:                                         ; preds = %if.end37, %land.end
  %22 = load i32, i32* %__ret_warn_once, align 4, !dbg !7729
  %tobool46 = icmp ne i32 %22, 0, !dbg !7729
  %lnot47 = xor i1 %tobool46, true, !dbg !7729
  %lnot49 = xor i1 %lnot47, true, !dbg !7729
  %lnot.ext50 = zext i1 %lnot49 to i32, !dbg !7729
  %conv51 = sext i32 %lnot.ext50 to i64, !dbg !7729
  store i64 %conv51, i64* %tmp45, align 8, !dbg !7737
  %23 = load i64, i64* %tmp45, align 8, !dbg !7729
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7765
  %enable_cnt52 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 48, !dbg !7766
  store %struct.atomic_t* %enable_cnt52, %struct.atomic_t** %v.addr.i63, align 8
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i63, align 8, !dbg !7767
  %26 = bitcast %struct.atomic_t* %25 to i8*, !dbg !7767
  store i8* %26, i8** %v.addr.i.i61, align 8
  store i64 4, i64* %size.addr.i.i62, align 8
  %27 = load i8*, i8** %v.addr.i.i61, align 8, !dbg !7768
  %28 = load i64, i64* %size.addr.i.i62, align 8, !dbg !7769
  %conv.i.i64 = trunc i64 %28 to i32, !dbg !7769
  %call.i.i65 = call zeroext i1 @kasan_check_write(i8* %27, i32 %conv.i.i64) #14, !dbg !7770
  %29 = load i8*, i8** %v.addr.i.i61, align 8, !dbg !7771
  %30 = load i64, i64* %size.addr.i.i62, align 8, !dbg !7771
  call void @kcsan_check_access(i8* %29, i64 %30, i32 7) #14, !dbg !7771
  %31 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i63, align 8, !dbg !7772
  store %struct.atomic_t* %31, %struct.atomic_t** %v.addr.i1.i60, align 8
  %32 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i60, align 8, !dbg !7773
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %32, %struct.atomic_t** %v.addr.i.i.i, align 8
  %33 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !7774
  %sub.i.i.i = sub i32 0, %33, !dbg !7775
  %34 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !7776
  store i32 %sub.i.i.i, i32* %i.addr.i.i.i.i, align 4
  store %struct.atomic_t* %34, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %35 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !7777
  %36 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !7695
  store i32 %36, i32* %__ret.i.i.i.i, align 4, !dbg !7695
  %37 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !7695
  %38 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !7695
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %38, i32 0, i32 0, !dbg !7695
  %39 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i.i, i32 %37, i32* %counter.i.i.i.i) #10, !dbg !7695, !srcloc !7421
  store i32 %39, i32* %__ret.i.i.i.i, align 4, !dbg !7695
  %40 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !7695
  store i32 %40, i32* %tmp.i.i.i.i, align 4, !dbg !7695
  %41 = load i32, i32* %tmp.i.i.i.i, align 4, !dbg !7695
  %add.i.i.i.i = add i32 %35, %41, !dbg !7778
  %cmp54 = icmp ne i32 %add.i.i.i.i, 0, !dbg !7779
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !7780

if.then56:                                        ; preds = %if.end44
  br label %return, !dbg !7781

if.end57:                                         ; preds = %if.end44
  %42 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7782
  call void @do_pci_disable_device(%struct.pci_dev* %42) #11, !dbg !7783
  %43 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7784
  %is_busmaster = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 46, !dbg !7785
  %44 = bitcast [5 x i8]* %is_busmaster to i40*, !dbg !7785
  %bf.load58 = load i40, i40* %44, align 1, !dbg !7786
  %bf.clear59 = and i40 %bf.load58, -33, !dbg !7786
  store i40 %bf.clear59, i40* %44, align 1, !dbg !7786
  br label %return, !dbg !7787

return:                                           ; preds = %if.end57, %if.then56
  ret void, !dbg !7787
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !7788 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7791, metadata !DIExpression()), !dbg !7792
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7793
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !7795
  %1 = load i8*, i8** %init_name, align 8, !dbg !7795
  %tobool = icmp ne i8* %1, null, !dbg !7793
  br i1 %tobool, label %if.then, label %if.end, !dbg !7796

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7797
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !7798
  %3 = load i8*, i8** %init_name1, align 8, !dbg !7798
  store i8* %3, i8** %retval, align 8, !dbg !7799
  br label %return, !dbg !7799

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7800
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !7801
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !7802
  store i8* %call, i8** %retval, align 8, !dbg !7803
  br label %return, !dbg !7803

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !7804
  ret i8* %5, !dbg !7804
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local i32 @pcibios_set_pcie_reset_state(%struct.pci_dev* %dev, i32 %state) #0 !dbg !7805 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %state.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7808, metadata !DIExpression()), !dbg !7809
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !7810, metadata !DIExpression()), !dbg !7811
  ret i32 -22, !dbg !7812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_set_pcie_reset_state(%struct.pci_dev* %dev, i32 %state) #0 !dbg !7813 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %state.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7814, metadata !DIExpression()), !dbg !7815
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !7816, metadata !DIExpression()), !dbg !7817
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7818
  %1 = load i32, i32* %state.addr, align 4, !dbg !7819
  %call = call i32 @pcibios_set_pcie_reset_state(%struct.pci_dev* %0, i32 %1) #11, !dbg !7820
  ret i32 %call, !dbg !7821
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pcie_clear_device_status(%struct.pci_dev* %dev) #0 !dbg !7822 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %sta = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7823, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.declare(metadata i16* %sta, metadata !7825, metadata !DIExpression()), !dbg !7826
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7827
  %call = call i32 @pcie_capability_read_word(%struct.pci_dev* %0, i32 10, i16* %sta) #11, !dbg !7828
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7829
  %2 = load i16, i16* %sta, align 2, !dbg !7830
  %call1 = call i32 @pcie_capability_write_word(%struct.pci_dev* %1, i32 10, i16 zeroext %2) #11, !dbg !7831
  ret void, !dbg !7832
}

; Function Attrs: noredzone
declare dso_local i32 @pcie_capability_read_word(%struct.pci_dev*, i32, i16*) #3

; Function Attrs: noredzone
declare dso_local i32 @pcie_capability_write_word(%struct.pci_dev*, i32, i16 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pcie_clear_root_pme_status(%struct.pci_dev* %dev) #0 !dbg !7833 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7834, metadata !DIExpression()), !dbg !7835
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7836
  %call = call i32 @pcie_capability_set_dword(%struct.pci_dev* %0, i32 32, i32 65536) #11, !dbg !7837
  ret void, !dbg !7838
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcie_capability_set_dword(%struct.pci_dev* %dev, i32 %pos, i32 %set) #0 !dbg !7839 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos.addr = alloca i32, align 4
  %set.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7842, metadata !DIExpression()), !dbg !7843
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !7844, metadata !DIExpression()), !dbg !7845
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !7846, metadata !DIExpression()), !dbg !7847
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7848
  %1 = load i32, i32* %pos.addr, align 4, !dbg !7849
  %2 = load i32, i32* %set.addr, align 4, !dbg !7850
  %call = call i32 @pcie_capability_clear_and_set_dword(%struct.pci_dev* %0, i32 %1, i32 0, i32 %2) #11, !dbg !7851
  ret i32 %call, !dbg !7852
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_check_pme_status(%struct.pci_dev* %dev) #0 !dbg !7853 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pmcsr_pos = alloca i32, align 4
  %pmcsr = alloca i16, align 2
  %ret = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7854, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.declare(metadata i32* %pmcsr_pos, metadata !7856, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.declare(metadata i16* %pmcsr, metadata !7858, metadata !DIExpression()), !dbg !7859
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !7860, metadata !DIExpression()), !dbg !7861
  store i8 0, i8* %ret, align 1, !dbg !7861
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7862
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 28, !dbg !7864
  %1 = load i8, i8* %pm_cap, align 1, !dbg !7864
  %tobool = icmp ne i8 %1, 0, !dbg !7862
  br i1 %tobool, label %if.end, label %if.then, !dbg !7865

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !7866
  br label %return, !dbg !7866

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7867
  %pm_cap1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 28, !dbg !7868
  %3 = load i8, i8* %pm_cap1, align 1, !dbg !7868
  %conv = zext i8 %3 to i32, !dbg !7867
  %add = add i32 %conv, 4, !dbg !7869
  store i32 %add, i32* %pmcsr_pos, align 4, !dbg !7870
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7871
  %5 = load i32, i32* %pmcsr_pos, align 4, !dbg !7872
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %4, i32 %5, i16* %pmcsr) #11, !dbg !7873
  %6 = load i16, i16* %pmcsr, align 2, !dbg !7874
  %conv2 = zext i16 %6 to i32, !dbg !7874
  %and = and i32 %conv2, 32768, !dbg !7876
  %tobool3 = icmp ne i32 %and, 0, !dbg !7876
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !7877

if.then4:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !7878
  br label %return, !dbg !7878

if.end5:                                          ; preds = %if.end
  %7 = load i16, i16* %pmcsr, align 2, !dbg !7879
  %conv6 = zext i16 %7 to i32, !dbg !7879
  %or = or i32 %conv6, 32768, !dbg !7879
  %conv7 = trunc i32 %or to i16, !dbg !7879
  store i16 %conv7, i16* %pmcsr, align 2, !dbg !7879
  %8 = load i16, i16* %pmcsr, align 2, !dbg !7880
  %conv8 = zext i16 %8 to i32, !dbg !7880
  %and9 = and i32 %conv8, 256, !dbg !7882
  %tobool10 = icmp ne i32 %and9, 0, !dbg !7882
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !7883

if.then11:                                        ; preds = %if.end5
  %9 = load i16, i16* %pmcsr, align 2, !dbg !7884
  %conv12 = zext i16 %9 to i32, !dbg !7884
  %and13 = and i32 %conv12, -257, !dbg !7884
  %conv14 = trunc i32 %and13 to i16, !dbg !7884
  store i16 %conv14, i16* %pmcsr, align 2, !dbg !7884
  store i8 1, i8* %ret, align 1, !dbg !7886
  br label %if.end15, !dbg !7887

if.end15:                                         ; preds = %if.then11, %if.end5
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7888
  %11 = load i32, i32* %pmcsr_pos, align 4, !dbg !7889
  %12 = load i16, i16* %pmcsr, align 2, !dbg !7890
  %call16 = call i32 @pci_write_config_word(%struct.pci_dev* %10, i32 %11, i16 zeroext %12) #11, !dbg !7891
  %13 = load i8, i8* %ret, align 1, !dbg !7892
  %tobool17 = trunc i8 %13 to i1, !dbg !7892
  store i1 %tobool17, i1* %retval, align 1, !dbg !7893
  br label %return, !dbg !7893

return:                                           ; preds = %if.end15, %if.then4, %if.then
  %14 = load i1, i1* %retval, align 1, !dbg !7894
  ret i1 %14, !dbg !7894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_pme_wakeup_bus(%struct.pci_bus* %bus) #0 !dbg !7895 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !7896, metadata !DIExpression()), !dbg !7897
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7898
  %tobool = icmp ne %struct.pci_bus* %0, null, !dbg !7898
  br i1 %tobool, label %if.then, label %if.end, !dbg !7900

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !7901
  call void @pci_walk_bus(%struct.pci_bus* %1, i32 (%struct.pci_dev*, i8*)* @pci_pme_wakeup, i8* inttoptr (i64 1 to i8*)) #11, !dbg !7902
  br label %if.end, !dbg !7902

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7903
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_pme_wakeup(%struct.pci_dev* %dev, i8* %pme_poll_reset) #0 !dbg !7904 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pme_poll_reset.addr = alloca i8*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7905, metadata !DIExpression()), !dbg !7906
  store i8* %pme_poll_reset, i8** %pme_poll_reset.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pme_poll_reset.addr, metadata !7907, metadata !DIExpression()), !dbg !7908
  %0 = load i8*, i8** %pme_poll_reset.addr, align 8, !dbg !7909
  %tobool = icmp ne i8* %0, null, !dbg !7909
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7911

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7912
  %pme_poll = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 29, !dbg !7913
  %2 = bitcast i24* %pme_poll to i32*, !dbg !7913
  %bf.load = load i32, i32* %2, align 2, !dbg !7913
  %bf.lshr = lshr i32 %bf.load, 5, !dbg !7913
  %bf.clear = and i32 %bf.lshr, 1, !dbg !7913
  %tobool1 = icmp ne i32 %bf.clear, 0, !dbg !7912
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7914

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7915
  %pme_poll2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 29, !dbg !7916
  %4 = bitcast i24* %pme_poll2 to i32*, !dbg !7916
  %bf.load3 = load i32, i32* %4, align 2, !dbg !7917
  %bf.clear4 = and i32 %bf.load3, -33, !dbg !7917
  store i32 %bf.clear4, i32* %4, align 2, !dbg !7917
  br label %if.end, !dbg !7915

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7918
  %call = call zeroext i1 @pci_check_pme_status(%struct.pci_dev* %5) #11, !dbg !7920
  br i1 %call, label %if.then5, label %if.end8, !dbg !7921

if.then5:                                         ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7922
  call void @pci_wakeup_event(%struct.pci_dev* %6) #11, !dbg !7924
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7925
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !7926
  %call7 = call i32 @pm_request_resume(%struct.device* %dev6) #11, !dbg !7927
  br label %if.end8, !dbg !7928

if.end8:                                          ; preds = %if.then5, %if.end
  ret i32 0, !dbg !7929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_pme_capable(%struct.pci_dev* %dev, i32 %state) #0 !dbg !7930 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.pci_dev*, align 8
  %state.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7933, metadata !DIExpression()), !dbg !7934
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !7935, metadata !DIExpression()), !dbg !7936
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7937
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 28, !dbg !7939
  %1 = load i8, i8* %pm_cap, align 1, !dbg !7939
  %tobool = icmp ne i8 %1, 0, !dbg !7937
  br i1 %tobool, label %if.end, label %if.then, !dbg !7940

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !7941
  br label %return, !dbg !7941

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7942
  %pme_support = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 29, !dbg !7943
  %3 = bitcast i24* %pme_support to i32*, !dbg !7943
  %bf.load = load i32, i32* %3, align 2, !dbg !7943
  %bf.clear = and i32 %bf.load, 31, !dbg !7943
  %4 = load i32, i32* %state.addr, align 4, !dbg !7944
  %shl = shl i32 1, %4, !dbg !7945
  %and = and i32 %bf.clear, %shl, !dbg !7946
  %tobool1 = icmp ne i32 %and, 0, !dbg !7947
  %lnot = xor i1 %tobool1, true, !dbg !7947
  %lnot2 = xor i1 %lnot, true, !dbg !7948
  store i1 %lnot2, i1* %retval, align 1, !dbg !7949
  br label %return, !dbg !7949

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !7950
  ret i1 %5, !dbg !7950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_pme_restore(%struct.pci_dev* %dev) #0 !dbg !7951 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pmcsr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7952, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.declare(metadata i16* %pmcsr, metadata !7954, metadata !DIExpression()), !dbg !7955
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7956
  %pme_support = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 29, !dbg !7958
  %1 = bitcast i24* %pme_support to i32*, !dbg !7958
  %bf.load = load i32, i32* %1, align 2, !dbg !7958
  %bf.clear = and i32 %bf.load, 31, !dbg !7958
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !7956
  br i1 %tobool, label %if.end, label %if.then, !dbg !7959

if.then:                                          ; preds = %entry
  br label %return, !dbg !7960

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7961
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7962
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 28, !dbg !7963
  %4 = load i8, i8* %pm_cap, align 1, !dbg !7963
  %conv = zext i8 %4 to i32, !dbg !7962
  %add = add i32 %conv, 4, !dbg !7964
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 %add, i16* %pmcsr) #11, !dbg !7965
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7966
  %wakeup_prepared = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 29, !dbg !7968
  %6 = bitcast i24* %wakeup_prepared to i32*, !dbg !7968
  %bf.load1 = load i32, i32* %6, align 2, !dbg !7968
  %bf.lshr = lshr i32 %bf.load1, 13, !dbg !7968
  %bf.clear2 = and i32 %bf.lshr, 1, !dbg !7968
  %tobool3 = icmp ne i32 %bf.clear2, 0, !dbg !7966
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !7969

if.then4:                                         ; preds = %if.end
  %7 = load i16, i16* %pmcsr, align 2, !dbg !7970
  %conv5 = zext i16 %7 to i32, !dbg !7970
  %or = or i32 %conv5, 256, !dbg !7970
  %conv6 = trunc i32 %or to i16, !dbg !7970
  store i16 %conv6, i16* %pmcsr, align 2, !dbg !7970
  %8 = load i16, i16* %pmcsr, align 2, !dbg !7972
  %conv7 = zext i16 %8 to i32, !dbg !7972
  %and = and i32 %conv7, -32769, !dbg !7972
  %conv8 = trunc i32 %and to i16, !dbg !7972
  store i16 %conv8, i16* %pmcsr, align 2, !dbg !7972
  br label %if.end15, !dbg !7973

if.else:                                          ; preds = %if.end
  %9 = load i16, i16* %pmcsr, align 2, !dbg !7974
  %conv9 = zext i16 %9 to i32, !dbg !7974
  %and10 = and i32 %conv9, -257, !dbg !7974
  %conv11 = trunc i32 %and10 to i16, !dbg !7974
  store i16 %conv11, i16* %pmcsr, align 2, !dbg !7974
  %10 = load i16, i16* %pmcsr, align 2, !dbg !7976
  %conv12 = zext i16 %10 to i32, !dbg !7976
  %or13 = or i32 %conv12, 32768, !dbg !7976
  %conv14 = trunc i32 %or13 to i16, !dbg !7976
  store i16 %conv14, i16* %pmcsr, align 2, !dbg !7976
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then4
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7977
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !7978
  %pm_cap16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 28, !dbg !7979
  %13 = load i8, i8* %pm_cap16, align 1, !dbg !7979
  %conv17 = zext i8 %13 to i32, !dbg !7978
  %add18 = add i32 %conv17, 4, !dbg !7980
  %14 = load i16, i16* %pmcsr, align 2, !dbg !7981
  %call19 = call i32 @pci_write_config_word(%struct.pci_dev* %11, i32 %add18, i16 zeroext %14) #11, !dbg !7982
  br label %return, !dbg !7983

return:                                           ; preds = %if.end15, %if.then
  ret void, !dbg !7983
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_pme_active(%struct.pci_dev* %dev, i1 zeroext %enable) #0 !dbg !7984 {
entry:
  %retval.i28 = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7987, metadata !DIExpression()), !dbg !7992
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6833, metadata !DIExpression()), !dbg !7999
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6843, metadata !DIExpression()), !dbg !8002
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6845, metadata !DIExpression()), !dbg !8003
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6847, metadata !DIExpression()), !dbg !8004
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6849, metadata !DIExpression()), !dbg !8005
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6855, metadata !DIExpression()), !dbg !8007
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6861, metadata !DIExpression()), !dbg !8009
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6870, metadata !DIExpression()), !dbg !8012
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6872, metadata !DIExpression()), !dbg !8013
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6874, metadata !DIExpression()), !dbg !8014
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6876, metadata !DIExpression()), !dbg !8015
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6878, metadata !DIExpression()), !dbg !8016
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6880, metadata !DIExpression()), !dbg !8017
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6882, metadata !DIExpression()), !dbg !8018
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6884, metadata !DIExpression()), !dbg !8019
  %dev.addr = alloca %struct.pci_dev*, align 8
  %enable.addr = alloca i8, align 1
  %pme_dev = alloca %struct.pci_pme_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_pme_device*, align 8
  %__mptr20 = alloca i8*, align 8
  %tmp24 = alloca %struct.pci_pme_device*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8020, metadata !DIExpression()), !dbg !8021
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !8022, metadata !DIExpression()), !dbg !8023
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8024
  %1 = load i8, i8* %enable.addr, align 1, !dbg !8025
  %tobool = trunc i8 %1 to i1, !dbg !8025
  call void @__pci_pme_active(%struct.pci_dev* %0, i1 zeroext %tobool) #11, !dbg !8026
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8027
  %pme_poll = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 29, !dbg !8028
  %3 = bitcast i24* %pme_poll to i32*, !dbg !8028
  %bf.load = load i32, i32* %3, align 2, !dbg !8028
  %bf.lshr = lshr i32 %bf.load, 5, !dbg !8028
  %bf.clear = and i32 %bf.lshr, 1, !dbg !8028
  %tobool1 = icmp ne i32 %bf.clear, 0, !dbg !8027
  br i1 %tobool1, label %if.then, label %if.end27, !dbg !8029

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.pci_pme_device** %pme_dev, metadata !8030, metadata !DIExpression()), !dbg !8031
  %4 = load i8, i8* %enable.addr, align 1, !dbg !8032
  %tobool2 = trunc i8 %4 to i1, !dbg !8032
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !8033

if.then3:                                         ; preds = %if.then
  store i64 24, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !8034
  %6 = call i1 @llvm.is.constant.i64(i64 %5) #10, !dbg !8035
  br i1 %6, label %if.then.i, label %if.end9.i, !dbg !8036

if.then.i:                                        ; preds = %if.then3
  %7 = load i64, i64* %size.addr.i, align 8, !dbg !8037
  %cmp.i = icmp ugt i64 %7, 8192, !dbg !8038
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8039

if.then1.i:                                       ; preds = %if.then.i
  %8 = load i64, i64* %size.addr.i, align 8, !dbg !8040
  %9 = load i32, i32* %flags.addr.i, align 4, !dbg !8041
  store i64 %8, i64* %size.addr.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i, align 4
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !8042
  %call.i.i = call i32 @get_order(i64 %10) #13, !dbg !8043
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8016
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !8044
  %12 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8045
  %13 = load i32, i32* %order.i.i, align 4, !dbg !8046
  store i64 %11, i64* %size.addr.i.i.i, align 8
  store i32 %12, i32* %flags.addr.i.i.i, align 4
  store i32 %13, i32* %order.addr.i.i.i, align 4
  %14 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8047
  %15 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8048
  %16 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8049
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %14, i32 %15, i32 %16) #14, !dbg !8050
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8050
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8050
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8050
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !8050
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8051
  br label %kmalloc.exit, !dbg !8051

if.end.i:                                         ; preds = %if.then.i
  %17 = load i64, i64* %size.addr.i, align 8, !dbg !8052
  store i64 %17, i64* %size.addr.i11.i, align 8
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8053
  %tobool.i.i = icmp ne i64 %18, 0, !dbg !8053
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8054

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8055
  br label %kmalloc_index.exit.i, !dbg !8055

if.end.i.i:                                       ; preds = %if.end.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8056
  %cmp.i.i = icmp ule i64 %19, 8, !dbg !8057
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8058

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8059
  br label %kmalloc_index.exit.i, !dbg !8059

if.end2.i.i:                                      ; preds = %if.end.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8060
  %cmp3.i.i = icmp ugt i64 %20, 64, !dbg !8061
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8062

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8063
  %cmp4.i.i = icmp ule i64 %21, 96, !dbg !8064
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8065

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8066
  br label %kmalloc_index.exit.i, !dbg !8066

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8067
  %cmp7.i.i = icmp ugt i64 %22, 128, !dbg !8068
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8069

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8070
  %cmp9.i.i = icmp ule i64 %23, 192, !dbg !8071
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8072

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8073
  br label %kmalloc_index.exit.i, !dbg !8073

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8074
  %cmp12.i.i = icmp ule i64 %24, 8, !dbg !8075
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8076

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8077
  br label %kmalloc_index.exit.i, !dbg !8077

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8078
  %cmp15.i.i = icmp ule i64 %25, 16, !dbg !8079
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8080

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8081
  br label %kmalloc_index.exit.i, !dbg !8081

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8082
  %cmp18.i.i = icmp ule i64 %26, 32, !dbg !8083
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8084

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8085
  br label %kmalloc_index.exit.i, !dbg !8085

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8086
  %cmp21.i.i = icmp ule i64 %27, 64, !dbg !8087
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8088

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8089
  br label %kmalloc_index.exit.i, !dbg !8089

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8090
  %cmp24.i.i = icmp ule i64 %28, 128, !dbg !8091
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8092

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8093
  br label %kmalloc_index.exit.i, !dbg !8093

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8094
  %cmp27.i.i = icmp ule i64 %29, 256, !dbg !8095
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8096

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8097
  br label %kmalloc_index.exit.i, !dbg !8097

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8098
  %cmp30.i.i = icmp ule i64 %30, 512, !dbg !8099
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8100

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8101
  br label %kmalloc_index.exit.i, !dbg !8101

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8102
  %cmp33.i.i = icmp ule i64 %31, 1024, !dbg !8103
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8104

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8105
  br label %kmalloc_index.exit.i, !dbg !8105

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8106
  %cmp36.i.i = icmp ule i64 %32, 2048, !dbg !8107
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8108

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8109
  br label %kmalloc_index.exit.i, !dbg !8109

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8110
  %cmp39.i.i = icmp ule i64 %33, 4096, !dbg !8111
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8112

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8113
  br label %kmalloc_index.exit.i, !dbg !8113

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8114
  %cmp42.i.i = icmp ule i64 %34, 8192, !dbg !8115
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8116

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8117
  br label %kmalloc_index.exit.i, !dbg !8117

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8118
  %cmp45.i.i = icmp ule i64 %35, 16384, !dbg !8119
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8120

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8121
  br label %kmalloc_index.exit.i, !dbg !8121

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8122
  %cmp48.i.i = icmp ule i64 %36, 32768, !dbg !8123
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8124

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8125
  br label %kmalloc_index.exit.i, !dbg !8125

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8126
  %cmp51.i.i = icmp ule i64 %37, 65536, !dbg !8127
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8128

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8129
  br label %kmalloc_index.exit.i, !dbg !8129

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8130
  %cmp54.i.i = icmp ule i64 %38, 131072, !dbg !8131
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8132

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8133
  br label %kmalloc_index.exit.i, !dbg !8133

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8134
  %cmp57.i.i = icmp ule i64 %39, 262144, !dbg !8135
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8136

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8137
  br label %kmalloc_index.exit.i, !dbg !8137

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8138
  %cmp60.i.i = icmp ule i64 %40, 524288, !dbg !8139
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8140

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8141
  br label %kmalloc_index.exit.i, !dbg !8141

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8142
  %cmp63.i.i = icmp ule i64 %41, 1048576, !dbg !8143
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8144

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8145
  br label %kmalloc_index.exit.i, !dbg !8145

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8146
  %cmp66.i.i = icmp ule i64 %42, 2097152, !dbg !8147
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8148

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8149
  br label %kmalloc_index.exit.i, !dbg !8149

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8150
  %cmp69.i.i = icmp ule i64 %43, 4194304, !dbg !8151
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8152

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8153
  br label %kmalloc_index.exit.i, !dbg !8153

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8154
  %cmp72.i.i = icmp ule i64 %44, 8388608, !dbg !8155
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8156

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8157
  br label %kmalloc_index.exit.i, !dbg !8157

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8158
  %cmp75.i.i = icmp ule i64 %45, 16777216, !dbg !8159
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8160

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8161
  br label %kmalloc_index.exit.i, !dbg !8161

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8162
  %cmp78.i.i = icmp ule i64 %46, 33554432, !dbg !8163
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8164

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8165
  br label %kmalloc_index.exit.i, !dbg !8165

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8166
  %cmp81.i.i = icmp ule i64 %47, 67108864, !dbg !8167
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8168

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8169
  br label %kmalloc_index.exit.i, !dbg !8169

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.58, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !8170, !srcloc !7060
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 102) #10, !dbg !8171, !srcloc !7064
  unreachable, !dbg !8172

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %48 = load i32, i32* %retval.i.i, align 4, !dbg !8173
  store i32 %48, i32* %index.i, align 4, !dbg !8174
  %49 = load i32, i32* %index.i, align 4, !dbg !8175
  %tobool.i = icmp ne i32 %49, 0, !dbg !8175
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8176

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8177
  br label %kmalloc.exit, !dbg !8177

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %50 = load i32, i32* %flags.addr.i, align 4, !dbg !8178
  store i32 %50, i32* %flags.addr.i13.i, align 4
  %51 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8179
  %and.i.i = and i32 %51, 17, !dbg !8179
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8179
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8179
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8179
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8179
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8180

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8181
  br label %kmalloc_type.exit.i, !dbg !8181

if.end.i16.i:                                     ; preds = %if.end4.i
  %52 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8182
  %and2.i.i = and i32 %52, 1, !dbg !8183
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8182
  %53 = zext i1 %tobool3.i.i to i64, !dbg !8182
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8182
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8184
  br label %kmalloc_type.exit.i, !dbg !8184

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %54 = load i32, i32* %retval.i12.i, align 4, !dbg !8185
  %idxprom.i = zext i32 %54 to i64, !dbg !8186
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8186
  %55 = load i32, i32* %index.i, align 4, !dbg !8187
  %idxprom6.i = zext i32 %55 to i64, !dbg !8186
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8186
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8186
  %57 = load i32, i32* %flags.addr.i, align 4, !dbg !8188
  %58 = load i64, i64* %size.addr.i, align 8, !dbg !8189
  store %struct.kmem_cache* %56, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %57, i32* %flags.addr.i17.i, align 4
  store i64 %58, i64* %size.addr.i18.i, align 8
  %59 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8190
  %60 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8191
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %59, i32 %60) #14, !dbg !8192
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8192
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8192
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8192
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !8192
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8004
  %61 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8193
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !8194
  %63 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8195
  %64 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8196
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %61, i8* %62, i64 %63, i32 %64) #14, !dbg !8197
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8198
  %65 = load i8*, i8** %ret.i.i, align 8, !dbg !8199
  store i8* %65, i8** %retval.i, align 8, !dbg !8200
  br label %kmalloc.exit, !dbg !8200

if.end9.i:                                        ; preds = %if.then3
  %66 = load i64, i64* %size.addr.i, align 8, !dbg !8201
  %67 = load i32, i32* %flags.addr.i, align 4, !dbg !8202
  %call10.i = call noalias i8* @__kmalloc(i64 %66, i32 %67) #14, !dbg !8203
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8203
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8203
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8203
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !8203
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8204
  br label %kmalloc.exit, !dbg !8204

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %68 = load i8*, i8** %retval.i, align 8, !dbg !8205
  %69 = bitcast i8* %68 to %struct.pci_pme_device*, !dbg !8206
  store %struct.pci_pme_device* %69, %struct.pci_pme_device** %pme_dev, align 8, !dbg !8207
  %70 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !8208
  %tobool4 = icmp ne %struct.pci_pme_device* %70, null, !dbg !8208
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !8210

if.then5:                                         ; preds = %kmalloc.exit
  %71 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8211
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %71, i32 0, i32 41, !dbg !8211
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !8211
  br label %if.end27, !dbg !8213

if.end:                                           ; preds = %kmalloc.exit
  %72 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8214
  %73 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !8215
  %dev7 = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %73, i32 0, i32 1, !dbg !8216
  store %struct.pci_dev* %72, %struct.pci_dev** %dev7, align 8, !dbg !8217
  call void @mutex_lock(%struct.mutex* @pci_pme_list_mutex) #11, !dbg !8218
  %74 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !8219
  %list = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %74, i32 0, i32 0, !dbg !8220
  call void @list_add(%struct.list_head* %list, %struct.list_head* @pci_pme_list) #11, !dbg !8221
  %call8 = call i32 @list_is_singular(%struct.list_head* @pci_pme_list) #11, !dbg !8222
  %tobool9 = icmp ne i32 %call8, 0, !dbg !8222
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !8223

if.then10:                                        ; preds = %if.end
  %75 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_freezable_wq, align 8, !dbg !8224
  store i32 1000, i32* %m.addr.i, align 4
  %76 = load i32, i32* %m.addr.i, align 4, !dbg !8225
  %77 = call i1 @llvm.is.constant.i32(i32 %76) #10, !dbg !8227
  br i1 %77, label %if.then.i30, label %if.else.i, !dbg !8228

if.then.i30:                                      ; preds = %if.then10
  %78 = load i32, i32* %m.addr.i, align 4, !dbg !8229
  %cmp.i29 = icmp slt i32 %78, 0, !dbg !8232
  br i1 %cmp.i29, label %if.then1.i31, label %if.end.i32, !dbg !8233

if.then1.i31:                                     ; preds = %if.then.i30
  store i64 4611686018427387902, i64* %retval.i28, align 8, !dbg !8234
  br label %msecs_to_jiffies.exit, !dbg !8234

if.end.i32:                                       ; preds = %if.then.i30
  %79 = load i32, i32* %m.addr.i, align 4, !dbg !8235
  %call.i = call i64 @_msecs_to_jiffies(i32 %79) #14, !dbg !8236
  store i64 %call.i, i64* %retval.i28, align 8, !dbg !8237
  br label %msecs_to_jiffies.exit, !dbg !8237

if.else.i:                                        ; preds = %if.then10
  %80 = load i32, i32* %m.addr.i, align 4, !dbg !8238
  %call2.i = call i64 @__msecs_to_jiffies(i32 %80) #14, !dbg !8240
  store i64 %call2.i, i64* %retval.i28, align 8, !dbg !8241
  br label %msecs_to_jiffies.exit, !dbg !8241

msecs_to_jiffies.exit:                            ; preds = %if.then1.i31, %if.end.i32, %if.else.i
  %81 = load i64, i64* %retval.i28, align 8, !dbg !8242
  %call12 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %75, %struct.delayed_work* @pci_pme_work, i64 %81) #11, !dbg !8243
  br label %if.end13, !dbg !8243

if.end13:                                         ; preds = %msecs_to_jiffies.exit, %if.end
  call void @mutex_unlock(%struct.mutex* @pci_pme_list_mutex) #11, !dbg !8244
  br label %if.end26, !dbg !8245

if.else:                                          ; preds = %if.then
  call void @mutex_lock(%struct.mutex* @pci_pme_list_mutex) #11, !dbg !8246
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8248, metadata !DIExpression()), !dbg !8251
  %82 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @pci_pme_list, i32 0, i32 0), align 8, !dbg !8251
  %83 = bitcast %struct.list_head* %82 to i8*, !dbg !8251
  store i8* %83, i8** %__mptr, align 8, !dbg !8251
  br label %do.body, !dbg !8251

do.body:                                          ; preds = %if.else
  br label %do.end, !dbg !8252

do.end:                                           ; preds = %do.body
  %84 = load i8*, i8** %__mptr, align 8, !dbg !8251
  %add.ptr = getelementptr i8, i8* %84, i64 0, !dbg !8251
  %85 = bitcast i8* %add.ptr to %struct.pci_pme_device*, !dbg !8251
  store %struct.pci_pme_device* %85, %struct.pci_pme_device** %tmp, align 8, !dbg !8252
  %86 = load %struct.pci_pme_device*, %struct.pci_pme_device** %tmp, align 8, !dbg !8251
  store %struct.pci_pme_device* %86, %struct.pci_pme_device** %pme_dev, align 8, !dbg !8254
  br label %for.cond, !dbg !8254

for.cond:                                         ; preds = %do.end23, %do.end
  %87 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !8255
  %list14 = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %87, i32 0, i32 0, !dbg !8255
  %cmp = icmp eq %struct.list_head* %list14, @pci_pme_list, !dbg !8255
  %lnot = xor i1 %cmp, true, !dbg !8255
  br i1 %lnot, label %for.body, label %for.end, !dbg !8254

for.body:                                         ; preds = %for.cond
  %88 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !8257
  %dev15 = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %88, i32 0, i32 1, !dbg !8260
  %89 = load %struct.pci_dev*, %struct.pci_dev** %dev15, align 8, !dbg !8260
  %90 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8261
  %cmp16 = icmp eq %struct.pci_dev* %89, %90, !dbg !8262
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !8263

if.then17:                                        ; preds = %for.body
  %91 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !8264
  %list18 = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %91, i32 0, i32 0, !dbg !8266
  call void @list_del(%struct.list_head* %list18) #11, !dbg !8267
  %92 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !8268
  %93 = bitcast %struct.pci_pme_device* %92 to i8*, !dbg !8268
  call void @kfree(i8* %93) #11, !dbg !8269
  br label %for.end, !dbg !8270

if.end19:                                         ; preds = %for.body
  br label %for.inc, !dbg !8271

for.inc:                                          ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i8** %__mptr20, metadata !8272, metadata !DIExpression()), !dbg !8274
  %94 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !8274
  %list21 = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %94, i32 0, i32 0, !dbg !8274
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list21, i32 0, i32 0, !dbg !8274
  %95 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8274
  %96 = bitcast %struct.list_head* %95 to i8*, !dbg !8274
  store i8* %96, i8** %__mptr20, align 8, !dbg !8274
  br label %do.body22, !dbg !8274

do.body22:                                        ; preds = %for.inc
  br label %do.end23, !dbg !8275

do.end23:                                         ; preds = %do.body22
  %97 = load i8*, i8** %__mptr20, align 8, !dbg !8274
  %add.ptr25 = getelementptr i8, i8* %97, i64 0, !dbg !8274
  %98 = bitcast i8* %add.ptr25 to %struct.pci_pme_device*, !dbg !8274
  store %struct.pci_pme_device* %98, %struct.pci_pme_device** %tmp24, align 8, !dbg !8275
  %99 = load %struct.pci_pme_device*, %struct.pci_pme_device** %tmp24, align 8, !dbg !8274
  store %struct.pci_pme_device* %99, %struct.pci_pme_device** %pme_dev, align 8, !dbg !8255
  br label %for.cond, !dbg !8255, !llvm.loop !8277

for.end:                                          ; preds = %if.then17, %for.cond
  call void @mutex_unlock(%struct.mutex* @pci_pme_list_mutex) #11, !dbg !8279
  br label %if.end26

if.end26:                                         ; preds = %for.end, %if.end13
  br label %if.end27, !dbg !8280

if.end27:                                         ; preds = %if.then5, %if.end26, %entry
  ret void, !dbg !8281
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__pci_pme_active(%struct.pci_dev* %dev, i1 zeroext %enable) #0 !dbg !8282 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %enable.addr = alloca i8, align 1
  %pmcsr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !8285, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.declare(metadata i16* %pmcsr, metadata !8287, metadata !DIExpression()), !dbg !8288
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8289
  %pme_support = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 29, !dbg !8291
  %1 = bitcast i24* %pme_support to i32*, !dbg !8291
  %bf.load = load i32, i32* %1, align 2, !dbg !8291
  %bf.clear = and i32 %bf.load, 31, !dbg !8291
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !8289
  br i1 %tobool, label %if.end, label %if.then, !dbg !8292

if.then:                                          ; preds = %entry
  br label %return, !dbg !8293

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8294
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8295
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 28, !dbg !8296
  %4 = load i8, i8* %pm_cap, align 1, !dbg !8296
  %conv = zext i8 %4 to i32, !dbg !8295
  %add = add i32 %conv, 4, !dbg !8297
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 %add, i16* %pmcsr) #11, !dbg !8298
  %5 = load i16, i16* %pmcsr, align 2, !dbg !8299
  %conv1 = zext i16 %5 to i32, !dbg !8299
  %or = or i32 %conv1, 33024, !dbg !8299
  %conv2 = trunc i32 %or to i16, !dbg !8299
  store i16 %conv2, i16* %pmcsr, align 2, !dbg !8299
  %6 = load i8, i8* %enable.addr, align 1, !dbg !8300
  %tobool3 = trunc i8 %6 to i1, !dbg !8300
  br i1 %tobool3, label %if.end7, label %if.then4, !dbg !8302

if.then4:                                         ; preds = %if.end
  %7 = load i16, i16* %pmcsr, align 2, !dbg !8303
  %conv5 = zext i16 %7 to i32, !dbg !8303
  %and = and i32 %conv5, -257, !dbg !8303
  %conv6 = trunc i32 %and to i16, !dbg !8303
  store i16 %conv6, i16* %pmcsr, align 2, !dbg !8303
  br label %if.end7, !dbg !8304

if.end7:                                          ; preds = %if.then4, %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8305
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8306
  %pm_cap8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 28, !dbg !8307
  %10 = load i8, i8* %pm_cap8, align 1, !dbg !8307
  %conv9 = zext i8 %10 to i32, !dbg !8306
  %add10 = add i32 %conv9, 4, !dbg !8308
  %11 = load i16, i16* %pmcsr, align 2, !dbg !8309
  %call11 = call i32 @pci_write_config_word(%struct.pci_dev* %8, i32 %add10, i16 zeroext %11) #11, !dbg !8310
  br label %return, !dbg !8311

return:                                           ; preds = %if.end7, %if.then
  ret void, !dbg !8311
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !8312 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8316, metadata !DIExpression()), !dbg !8317
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8318, metadata !DIExpression()), !dbg !8319
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8320
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8321
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8322
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !8323
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8323
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !8324
  ret void, !dbg !8325
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_is_singular(%struct.list_head* %head) #0 !dbg !8326 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8331, metadata !DIExpression()), !dbg !8332
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8333
  %call = call i32 @list_empty(%struct.list_head* %0) #11, !dbg !8334
  %tobool = icmp ne i32 %call, 0, !dbg !8334
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !8335

land.rhs:                                         ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8336
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8337
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8337
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8338
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !8339
  %4 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8339
  %cmp = icmp eq %struct.list_head* %2, %4, !dbg !8340
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !8341
  %land.ext = zext i1 %5 to i32, !dbg !8335
  ret i32 %land.ext, !dbg !8342
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #0 !dbg !8343 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !8347, metadata !DIExpression()), !dbg !8348
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !8349, metadata !DIExpression()), !dbg !8350
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !8351, metadata !DIExpression()), !dbg !8352
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !8353
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !8354
  %2 = load i64, i64* %delay.addr, align 8, !dbg !8355
  %call = call zeroext i1 @queue_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #11, !dbg !8356
  ret i1 %call, !dbg !8357
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !8358 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8361, metadata !DIExpression()), !dbg !8362
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8363
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !8364
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8365
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8366
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !8367
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8368
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !8369
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !8370
  ret void, !dbg !8371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_enable_wake(%struct.pci_dev* %pci_dev, i32 %state, i1 zeroext %enable) #0 !dbg !8372 {
entry:
  %retval = alloca i32, align 4
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  %state.addr = alloca i32, align 4
  %enable.addr = alloca i8, align 1
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !8375, metadata !DIExpression()), !dbg !8376
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !8377, metadata !DIExpression()), !dbg !8378
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !8379, metadata !DIExpression()), !dbg !8380
  %0 = load i8, i8* %enable.addr, align 1, !dbg !8381
  %tobool = trunc i8 %0 to i1, !dbg !8381
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8383

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8384
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !8385
  %call = call zeroext i1 @device_may_wakeup(%struct.device* %dev) #11, !dbg !8386
  br i1 %call, label %if.end, label %if.then, !dbg !8387

if.then:                                          ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !8388
  br label %return, !dbg !8388

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8389
  %3 = load i32, i32* %state.addr, align 4, !dbg !8390
  %4 = load i8, i8* %enable.addr, align 1, !dbg !8391
  %tobool1 = trunc i8 %4 to i1, !dbg !8391
  %call2 = call i32 @__pci_enable_wake(%struct.pci_dev* %2, i32 %3, i1 zeroext %tobool1) #11, !dbg !8392
  store i32 %call2, i32* %retval, align 4, !dbg !8393
  br label %return, !dbg !8393

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8394
  ret i32 %5, !dbg !8394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_may_wakeup(%struct.device* %dev) #0 !dbg !8395 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8398, metadata !DIExpression()), !dbg !8399
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8400
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !8401
  %can_wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !8402
  %bf.load = load i16, i16* %can_wakeup, align 4, !dbg !8402
  %bf.clear = and i16 %bf.load, 1, !dbg !8402
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8402
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8400
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8403

land.rhs:                                         ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8404
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !8405
  %wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 6, !dbg !8406
  %2 = load %struct.wakeup_source*, %struct.wakeup_source** %wakeup, align 8, !dbg !8406
  %tobool2 = icmp ne %struct.wakeup_source* %2, null, !dbg !8407
  %lnot = xor i1 %tobool2, true, !dbg !8407
  %lnot3 = xor i1 %lnot, true, !dbg !8408
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !8409
  ret i1 %3, !dbg !8410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__pci_enable_wake(%struct.pci_dev* %dev, i32 %state, i1 zeroext %enable) #0 !dbg !8411 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %state.addr = alloca i32, align 4
  %enable.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %error = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8412, metadata !DIExpression()), !dbg !8413
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !8414, metadata !DIExpression()), !dbg !8415
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !8416, metadata !DIExpression()), !dbg !8417
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8418, metadata !DIExpression()), !dbg !8419
  store i32 0, i32* %ret, align 4, !dbg !8419
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8420
  %call = call zeroext i1 @pci_power_manageable(%struct.pci_dev* %0) #11, !dbg !8422
  br i1 %call, label %if.end, label %if.then, !dbg !8423

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8424
  br label %return, !dbg !8424

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %enable.addr, align 1, !dbg !8425
  %tobool = trunc i8 %1 to i1, !dbg !8425
  %lnot = xor i1 %tobool, true, !dbg !8427
  %lnot1 = xor i1 %lnot, true, !dbg !8428
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8428
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8429
  %wakeup_prepared = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 29, !dbg !8430
  %3 = bitcast i24* %wakeup_prepared to i32*, !dbg !8430
  %bf.load = load i32, i32* %3, align 2, !dbg !8430
  %bf.lshr = lshr i32 %bf.load, 13, !dbg !8430
  %bf.clear = and i32 %bf.lshr, 1, !dbg !8430
  %tobool2 = icmp ne i32 %bf.clear, 0, !dbg !8431
  %lnot3 = xor i1 %tobool2, true, !dbg !8431
  %lnot5 = xor i1 %lnot3, true, !dbg !8432
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !8432
  %cmp = icmp eq i32 %lnot.ext, %lnot.ext6, !dbg !8433
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !8434

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8435
  br label %return, !dbg !8435

if.end8:                                          ; preds = %if.end
  %4 = load i8, i8* %enable.addr, align 1, !dbg !8436
  %tobool9 = trunc i8 %4 to i1, !dbg !8436
  br i1 %tobool9, label %if.then10, label %if.else24, !dbg !8438

if.then10:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i32* %error, metadata !8439, metadata !DIExpression()), !dbg !8441
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8442
  %6 = load i32, i32* %state.addr, align 4, !dbg !8444
  %call11 = call zeroext i1 @pci_pme_capable(%struct.pci_dev* %5, i32 %6) #11, !dbg !8445
  br i1 %call11, label %if.then12, label %if.else, !dbg !8446

if.then12:                                        ; preds = %if.then10
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8447
  call void @pci_pme_active(%struct.pci_dev* %7, i1 zeroext true) #11, !dbg !8448
  br label %if.end13, !dbg !8448

if.else:                                          ; preds = %if.then10
  store i32 1, i32* %ret, align 4, !dbg !8449
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8450
  %call14 = call i32 @platform_pci_set_wakeup(%struct.pci_dev* %8, i1 zeroext true) #11, !dbg !8451
  store i32 %call14, i32* %error, align 4, !dbg !8452
  %9 = load i32, i32* %ret, align 4, !dbg !8453
  %tobool15 = icmp ne i32 %9, 0, !dbg !8453
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !8455

if.then16:                                        ; preds = %if.end13
  %10 = load i32, i32* %error, align 4, !dbg !8456
  store i32 %10, i32* %ret, align 4, !dbg !8457
  br label %if.end17, !dbg !8458

if.end17:                                         ; preds = %if.then16, %if.end13
  %11 = load i32, i32* %ret, align 4, !dbg !8459
  %tobool18 = icmp ne i32 %11, 0, !dbg !8459
  br i1 %tobool18, label %if.end23, label %if.then19, !dbg !8461

if.then19:                                        ; preds = %if.end17
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8462
  %wakeup_prepared20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 29, !dbg !8463
  %13 = bitcast i24* %wakeup_prepared20 to i32*, !dbg !8463
  %bf.load21 = load i32, i32* %13, align 2, !dbg !8464
  %bf.clear22 = and i32 %bf.load21, -8193, !dbg !8464
  %bf.set = or i32 %bf.clear22, 8192, !dbg !8464
  store i32 %bf.set, i32* %13, align 2, !dbg !8464
  br label %if.end23, !dbg !8462

if.end23:                                         ; preds = %if.then19, %if.end17
  br label %if.end29, !dbg !8465

if.else24:                                        ; preds = %if.end8
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8466
  %call25 = call i32 @platform_pci_set_wakeup(%struct.pci_dev* %14, i1 zeroext false) #11, !dbg !8468
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8469
  call void @pci_pme_active(%struct.pci_dev* %15, i1 zeroext false) #11, !dbg !8470
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8471
  %wakeup_prepared26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 29, !dbg !8472
  %17 = bitcast i24* %wakeup_prepared26 to i32*, !dbg !8472
  %bf.load27 = load i32, i32* %17, align 2, !dbg !8473
  %bf.clear28 = and i32 %bf.load27, -8193, !dbg !8473
  store i32 %bf.clear28, i32* %17, align 2, !dbg !8473
  br label %if.end29

if.end29:                                         ; preds = %if.else24, %if.end23
  %18 = load i32, i32* %ret, align 4, !dbg !8474
  store i32 %18, i32* %retval, align 4, !dbg !8475
  br label %return, !dbg !8475

return:                                           ; preds = %if.end29, %if.then7, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !8476
  ret i32 %19, !dbg !8476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_wake_from_d3(%struct.pci_dev* %dev, i1 zeroext %enable) #0 !dbg !8477 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %enable.addr = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8478, metadata !DIExpression()), !dbg !8479
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !8480, metadata !DIExpression()), !dbg !8481
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8482
  %call = call zeroext i1 @pci_pme_capable(%struct.pci_dev* %0, i32 4) #11, !dbg !8483
  br i1 %call, label %cond.true, label %cond.false, !dbg !8483

cond.true:                                        ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8484
  %2 = load i8, i8* %enable.addr, align 1, !dbg !8485
  %tobool = trunc i8 %2 to i1, !dbg !8485
  %call1 = call i32 @pci_enable_wake(%struct.pci_dev* %1, i32 4, i1 zeroext %tobool) #11, !dbg !8486
  br label %cond.end, !dbg !8483

cond.false:                                       ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8487
  %4 = load i8, i8* %enable.addr, align 1, !dbg !8488
  %tobool2 = trunc i8 %4 to i1, !dbg !8488
  %call3 = call i32 @pci_enable_wake(%struct.pci_dev* %3, i32 3, i1 zeroext %tobool2) #11, !dbg !8489
  br label %cond.end, !dbg !8483

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ %call3, %cond.false ], !dbg !8483
  ret i32 %cond, !dbg !8490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_prepare_to_sleep(%struct.pci_dev* %dev) #0 !dbg !8491 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %wakeup = alloca i8, align 1
  %target_state = alloca i32, align 4
  %error = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8492, metadata !DIExpression()), !dbg !8493
  call void @llvm.dbg.declare(metadata i8* %wakeup, metadata !8494, metadata !DIExpression()), !dbg !8495
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8496
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !8497
  %call = call zeroext i1 @device_may_wakeup(%struct.device* %dev1) #11, !dbg !8498
  %frombool = zext i1 %call to i8, !dbg !8495
  store i8 %frombool, i8* %wakeup, align 1, !dbg !8495
  call void @llvm.dbg.declare(metadata i32* %target_state, metadata !8499, metadata !DIExpression()), !dbg !8500
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8501
  %2 = load i8, i8* %wakeup, align 1, !dbg !8502
  %tobool = trunc i8 %2 to i1, !dbg !8502
  %call2 = call i32 @pci_target_state(%struct.pci_dev* %1, i1 zeroext %tobool) #11, !dbg !8503
  store i32 %call2, i32* %target_state, align 4, !dbg !8500
  call void @llvm.dbg.declare(metadata i32* %error, metadata !8504, metadata !DIExpression()), !dbg !8505
  %3 = load i32, i32* %target_state, align 4, !dbg !8506
  %cmp = icmp eq i32 %3, -1, !dbg !8508
  br i1 %cmp, label %if.then, label %if.end, !dbg !8509

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !8510
  br label %return, !dbg !8510

if.end:                                           ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8511
  %5 = load i32, i32* %target_state, align 4, !dbg !8512
  %6 = load i8, i8* %wakeup, align 1, !dbg !8513
  %tobool3 = trunc i8 %6 to i1, !dbg !8513
  %call4 = call i32 @pci_enable_wake(%struct.pci_dev* %4, i32 %5, i1 zeroext %tobool3) #11, !dbg !8514
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8515
  %8 = load i32, i32* %target_state, align 4, !dbg !8516
  %call5 = call i32 @pci_set_power_state(%struct.pci_dev* %7, i32 %8) #11, !dbg !8517
  store i32 %call5, i32* %error, align 4, !dbg !8518
  %9 = load i32, i32* %error, align 4, !dbg !8519
  %tobool6 = icmp ne i32 %9, 0, !dbg !8519
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !8521

if.then7:                                         ; preds = %if.end
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8522
  %11 = load i32, i32* %target_state, align 4, !dbg !8523
  %call8 = call i32 @pci_enable_wake(%struct.pci_dev* %10, i32 %11, i1 zeroext false) #11, !dbg !8524
  br label %if.end9, !dbg !8524

if.end9:                                          ; preds = %if.then7, %if.end
  %12 = load i32, i32* %error, align 4, !dbg !8525
  store i32 %12, i32* %retval, align 4, !dbg !8526
  br label %return, !dbg !8526

return:                                           ; preds = %if.end9, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8527
  ret i32 %13, !dbg !8527
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_target_state(%struct.pci_dev* %dev, i1 zeroext %wakeup) #0 !dbg !8528 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %wakeup.addr = alloca i8, align 1
  %target_state = alloca i32, align 4
  %state = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8531, metadata !DIExpression()), !dbg !8532
  %frombool = zext i1 %wakeup to i8
  store i8 %frombool, i8* %wakeup.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %wakeup.addr, metadata !8533, metadata !DIExpression()), !dbg !8534
  call void @llvm.dbg.declare(metadata i32* %target_state, metadata !8535, metadata !DIExpression()), !dbg !8536
  store i32 3, i32* %target_state, align 4, !dbg !8536
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8537
  %call = call zeroext i1 @platform_pci_power_manageable(%struct.pci_dev* %0) #11, !dbg !8539
  br i1 %call, label %if.then, label %if.end5, !dbg !8540

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %state, metadata !8541, metadata !DIExpression()), !dbg !8543
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8544
  %call1 = call i32 @platform_pci_choose_state(%struct.pci_dev* %1) #11, !dbg !8545
  store i32 %call1, i32* %state, align 4, !dbg !8543
  %2 = load i32, i32* %state, align 4, !dbg !8546
  switch i32 %2, label %sw.default [
    i32 -1, label %sw.bb
    i32 5, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb2
  ], !dbg !8547

sw.bb:                                            ; preds = %if.then, %if.then
  br label %sw.epilog, !dbg !8548

sw.bb2:                                           ; preds = %if.then, %if.then
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8550
  %call3 = call i32 @pci_no_d1d2(%struct.pci_dev* %3) #11, !dbg !8552
  %tobool = icmp ne i32 %call3, 0, !dbg !8552
  br i1 %tobool, label %if.then4, label %if.end, !dbg !8553

if.then4:                                         ; preds = %sw.bb2
  br label %sw.epilog, !dbg !8554

if.end:                                           ; preds = %sw.bb2
  br label %sw.default, !dbg !8555

sw.default:                                       ; preds = %if.then, %if.end
  %4 = load i32, i32* %state, align 4, !dbg !8556
  store i32 %4, i32* %target_state, align 4, !dbg !8557
  br label %sw.epilog, !dbg !8558

sw.epilog:                                        ; preds = %sw.default, %if.then4, %sw.bb
  %5 = load i32, i32* %target_state, align 4, !dbg !8559
  store i32 %5, i32* %retval, align 4, !dbg !8560
  br label %return, !dbg !8560

if.end5:                                          ; preds = %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8561
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 28, !dbg !8563
  %7 = load i8, i8* %pm_cap, align 1, !dbg !8563
  %tobool6 = icmp ne i8 %7, 0, !dbg !8561
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !8564

if.then7:                                         ; preds = %if.end5
  store i32 0, i32* %target_state, align 4, !dbg !8565
  br label %if.end8, !dbg !8566

if.end8:                                          ; preds = %if.then7, %if.end5
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8567
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 26, !dbg !8569
  %9 = load i32, i32* %current_state, align 8, !dbg !8569
  %cmp = icmp eq i32 %9, 4, !dbg !8570
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !8571

if.then9:                                         ; preds = %if.end8
  store i32 4, i32* %target_state, align 4, !dbg !8572
  br label %if.end10, !dbg !8573

if.end10:                                         ; preds = %if.then9, %if.end8
  %10 = load i8, i8* %wakeup.addr, align 1, !dbg !8574
  %tobool11 = trunc i8 %10 to i1, !dbg !8574
  br i1 %tobool11, label %if.then12, label %if.end21, !dbg !8576

if.then12:                                        ; preds = %if.end10
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8577
  %pme_support = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 29, !dbg !8580
  %12 = bitcast i24* %pme_support to i32*, !dbg !8580
  %bf.load = load i32, i32* %12, align 2, !dbg !8580
  %bf.clear = and i32 %bf.load, 31, !dbg !8580
  %tobool13 = icmp ne i32 %bf.clear, 0, !dbg !8577
  br i1 %tobool13, label %if.then14, label %if.end20, !dbg !8581

if.then14:                                        ; preds = %if.then12
  br label %while.cond, !dbg !8582

while.cond:                                       ; preds = %while.body, %if.then14
  %13 = load i32, i32* %target_state, align 4, !dbg !8584
  %tobool15 = icmp ne i32 %13, 0, !dbg !8584
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !8585

land.rhs:                                         ; preds = %while.cond
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8586
  %pme_support16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 29, !dbg !8587
  %15 = bitcast i24* %pme_support16 to i32*, !dbg !8587
  %bf.load17 = load i32, i32* %15, align 2, !dbg !8587
  %bf.clear18 = and i32 %bf.load17, 31, !dbg !8587
  %16 = load i32, i32* %target_state, align 4, !dbg !8588
  %shl = shl i32 1, %16, !dbg !8589
  %and = and i32 %bf.clear18, %shl, !dbg !8590
  %tobool19 = icmp ne i32 %and, 0, !dbg !8591
  %lnot = xor i1 %tobool19, true, !dbg !8591
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %17 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !8592
  br i1 %17, label %while.body, label %while.end, !dbg !8582

while.body:                                       ; preds = %land.end
  %18 = load i32, i32* %target_state, align 4, !dbg !8593
  %dec = add i32 %18, -1, !dbg !8593
  store i32 %dec, i32* %target_state, align 4, !dbg !8593
  br label %while.cond, !dbg !8582, !llvm.loop !8594

while.end:                                        ; preds = %land.end
  br label %if.end20, !dbg !8595

if.end20:                                         ; preds = %while.end, %if.then12
  br label %if.end21, !dbg !8596

if.end21:                                         ; preds = %if.end20, %if.end10
  %19 = load i32, i32* %target_state, align 4, !dbg !8597
  store i32 %19, i32* %retval, align 4, !dbg !8598
  br label %return, !dbg !8598

return:                                           ; preds = %if.end21, %sw.epilog
  %20 = load i32, i32* %retval, align 4, !dbg !8599
  ret i32 %20, !dbg !8599
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_back_from_sleep(%struct.pci_dev* %dev) #0 !dbg !8600 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8601, metadata !DIExpression()), !dbg !8602
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8603
  %call = call i32 @pci_enable_wake(%struct.pci_dev* %0, i32 0, i1 zeroext false) #11, !dbg !8604
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8605
  %call1 = call i32 @pci_set_power_state(%struct.pci_dev* %1, i32 0) #11, !dbg !8606
  ret i32 %call1, !dbg !8607
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_finish_runtime_suspend(%struct.pci_dev* %dev) #0 !dbg !8608 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %target_state = alloca i32, align 4
  %error = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8609, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.declare(metadata i32* %target_state, metadata !8611, metadata !DIExpression()), !dbg !8612
  call void @llvm.dbg.declare(metadata i32* %error, metadata !8613, metadata !DIExpression()), !dbg !8614
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8615
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8616
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !8617
  %call = call zeroext i1 @device_can_wakeup(%struct.device* %dev1) #11, !dbg !8618
  %call2 = call i32 @pci_target_state(%struct.pci_dev* %0, i1 zeroext %call) #11, !dbg !8619
  store i32 %call2, i32* %target_state, align 4, !dbg !8620
  %2 = load i32, i32* %target_state, align 4, !dbg !8621
  %cmp = icmp eq i32 %2, -1, !dbg !8623
  br i1 %cmp, label %if.then, label %if.end, !dbg !8624

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !8625
  br label %return, !dbg !8625

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %target_state, align 4, !dbg !8626
  %cmp3 = icmp eq i32 %3, 4, !dbg !8627
  %conv = zext i1 %cmp3 to i32, !dbg !8627
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8628
  %runtime_d3cold = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 29, !dbg !8629
  %5 = bitcast i24* %runtime_d3cold to i32*, !dbg !8629
  %bf.load = load i32, i32* %5, align 2, !dbg !8630
  %bf.value = and i32 %conv, 1, !dbg !8630
  %bf.shl = shl i32 %bf.value, 14, !dbg !8630
  %bf.clear = and i32 %bf.load, -16385, !dbg !8630
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !8630
  store i32 %bf.set, i32* %5, align 2, !dbg !8630
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8631
  %7 = load i32, i32* %target_state, align 4, !dbg !8632
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8633
  %call4 = call zeroext i1 @pci_dev_run_wake(%struct.pci_dev* %8) #11, !dbg !8634
  %call5 = call i32 @__pci_enable_wake(%struct.pci_dev* %6, i32 %7, i1 zeroext %call4) #11, !dbg !8635
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8636
  %10 = load i32, i32* %target_state, align 4, !dbg !8637
  %call6 = call i32 @pci_set_power_state(%struct.pci_dev* %9, i32 %10) #11, !dbg !8638
  store i32 %call6, i32* %error, align 4, !dbg !8639
  %11 = load i32, i32* %error, align 4, !dbg !8640
  %tobool = icmp ne i32 %11, 0, !dbg !8640
  br i1 %tobool, label %if.then7, label %if.end12, !dbg !8642

if.then7:                                         ; preds = %if.end
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8643
  %13 = load i32, i32* %target_state, align 4, !dbg !8645
  %call8 = call i32 @pci_enable_wake(%struct.pci_dev* %12, i32 %13, i1 zeroext false) #11, !dbg !8646
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8647
  %runtime_d3cold9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 29, !dbg !8648
  %15 = bitcast i24* %runtime_d3cold9 to i32*, !dbg !8648
  %bf.load10 = load i32, i32* %15, align 2, !dbg !8649
  %bf.clear11 = and i32 %bf.load10, -16385, !dbg !8649
  store i32 %bf.clear11, i32* %15, align 2, !dbg !8649
  br label %if.end12, !dbg !8650

if.end12:                                         ; preds = %if.then7, %if.end
  %16 = load i32, i32* %error, align 4, !dbg !8651
  store i32 %16, i32* %retval, align 4, !dbg !8652
  br label %return, !dbg !8652

return:                                           ; preds = %if.end12, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !8653
  ret i32 %17, !dbg !8653
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_can_wakeup(%struct.device* %dev) #0 !dbg !8654 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8655, metadata !DIExpression()), !dbg !8656
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8657
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !8658
  %can_wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !8659
  %bf.load = load i16, i16* %can_wakeup, align 4, !dbg !8659
  %bf.clear = and i16 %bf.load, 1, !dbg !8659
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8659
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8657
  ret i1 %tobool, !dbg !8660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_dev_run_wake(%struct.pci_dev* %dev) #0 !dbg !8661 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bus = alloca %struct.pci_bus*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8662, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus, metadata !8664, metadata !DIExpression()), !dbg !8665
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8666
  %bus1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !8667
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !8667
  store %struct.pci_bus* %1, %struct.pci_bus** %bus, align 8, !dbg !8665
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8668
  %pme_support = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 29, !dbg !8670
  %3 = bitcast i24* %pme_support to i32*, !dbg !8670
  %bf.load = load i32, i32* %3, align 2, !dbg !8670
  %bf.clear = and i32 %bf.load, 31, !dbg !8670
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !8668
  br i1 %tobool, label %if.end, label %if.then, !dbg !8671

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8672
  br label %return, !dbg !8672

if.end:                                           ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8673
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8675
  %call = call i32 @pci_target_state(%struct.pci_dev* %5, i1 zeroext true) #11, !dbg !8676
  %call2 = call zeroext i1 @pci_pme_capable(%struct.pci_dev* %4, i32 %call) #11, !dbg !8677
  br i1 %call2, label %if.end4, label %if.then3, !dbg !8678

if.then3:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !8679
  br label %return, !dbg !8679

if.end4:                                          ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8680
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !8682
  %call6 = call zeroext i1 @device_can_wakeup(%struct.device* %dev5) #11, !dbg !8683
  br i1 %call6, label %if.then7, label %if.end8, !dbg !8684

if.then7:                                         ; preds = %if.end4
  store i1 true, i1* %retval, align 1, !dbg !8685
  br label %return, !dbg !8685

if.end8:                                          ; preds = %if.end4
  br label %while.cond, !dbg !8686

while.cond:                                       ; preds = %if.end13, %if.end8
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8687
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 1, !dbg !8688
  %8 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !8688
  %tobool9 = icmp ne %struct.pci_bus* %8, null, !dbg !8686
  br i1 %tobool9, label %while.body, label %while.end, !dbg !8686

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !8689, metadata !DIExpression()), !dbg !8691
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8692
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %9, i32 0, i32 4, !dbg !8693
  %10 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !8693
  store %struct.pci_dev* %10, %struct.pci_dev** %bridge, align 8, !dbg !8691
  %11 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !8694
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !8696
  %call11 = call zeroext i1 @device_can_wakeup(%struct.device* %dev10) #11, !dbg !8697
  br i1 %call11, label %if.then12, label %if.end13, !dbg !8698

if.then12:                                        ; preds = %while.body
  store i1 true, i1* %retval, align 1, !dbg !8699
  br label %return, !dbg !8699

if.end13:                                         ; preds = %while.body
  %12 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8700
  %parent14 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %12, i32 0, i32 1, !dbg !8701
  %13 = load %struct.pci_bus*, %struct.pci_bus** %parent14, align 8, !dbg !8701
  store %struct.pci_bus* %13, %struct.pci_bus** %bus, align 8, !dbg !8702
  br label %while.cond, !dbg !8686, !llvm.loop !8703

while.end:                                        ; preds = %while.cond
  %14 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8705
  %bridge15 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %14, i32 0, i32 20, !dbg !8707
  %15 = load %struct.device*, %struct.device** %bridge15, align 8, !dbg !8707
  %tobool16 = icmp ne %struct.device* %15, null, !dbg !8705
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !8708

if.then17:                                        ; preds = %while.end
  %16 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !8709
  %bridge18 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %16, i32 0, i32 20, !dbg !8710
  %17 = load %struct.device*, %struct.device** %bridge18, align 8, !dbg !8710
  %call19 = call zeroext i1 @device_can_wakeup(%struct.device* %17) #11, !dbg !8711
  store i1 %call19, i1* %retval, align 1, !dbg !8712
  br label %return, !dbg !8712

if.end20:                                         ; preds = %while.end
  store i1 false, i1* %retval, align 1, !dbg !8713
  br label %return, !dbg !8713

return:                                           ; preds = %if.end20, %if.then17, %if.then12, %if.then7, %if.then3, %if.then
  %18 = load i1, i1* %retval, align 1, !dbg !8714
  ret i1 %18, !dbg !8714
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_dev_need_resume(%struct.pci_dev* %pci_dev) #0 !dbg !8715 {
entry:
  %retval = alloca i1, align 1
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.device*, align 8
  %target_state = alloca i32, align 4
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !8716, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !8718, metadata !DIExpression()), !dbg !8719
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8720
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !8721
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !8719
  call void @llvm.dbg.declare(metadata i32* %target_state, metadata !8722, metadata !DIExpression()), !dbg !8723
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8724
  %call = call zeroext i1 @pm_runtime_suspended(%struct.device* %1) #11, !dbg !8726
  br i1 %call, label %lor.lhs.false, label %if.then, !dbg !8727

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8728
  %call2 = call zeroext i1 @platform_pci_need_resume(%struct.pci_dev* %2) #11, !dbg !8729
  br i1 %call2, label %if.then, label %if.end, !dbg !8730

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 true, i1* %retval, align 1, !dbg !8731
  br label %return, !dbg !8731

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8732
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8733
  %call3 = call zeroext i1 @device_may_wakeup(%struct.device* %4) #11, !dbg !8734
  %call4 = call i32 @pci_target_state(%struct.pci_dev* %3, i1 zeroext %call3) #11, !dbg !8735
  store i32 %call4, i32* %target_state, align 4, !dbg !8736
  %5 = load i32, i32* %target_state, align 4, !dbg !8737
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8738
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 26, !dbg !8739
  %7 = load i32, i32* %current_state, align 8, !dbg !8739
  %cmp = icmp ne i32 %5, %7, !dbg !8740
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !8741

land.lhs.true:                                    ; preds = %if.end
  %8 = load i32, i32* %target_state, align 4, !dbg !8742
  %cmp5 = icmp ne i32 %8, 4, !dbg !8743
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !8744

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8745
  %current_state6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 26, !dbg !8746
  %10 = load i32, i32* %current_state6, align 8, !dbg !8746
  %cmp7 = icmp ne i32 %10, 3, !dbg !8747
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %if.end
  %11 = phi i1 [ false, %land.lhs.true ], [ false, %if.end ], [ %cmp7, %land.rhs ], !dbg !8748
  store i1 %11, i1* %retval, align 1, !dbg !8749
  br label %return, !dbg !8749

return:                                           ; preds = %land.end, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !8750
  ret i1 %12, !dbg !8750
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pm_runtime_suspended(%struct.device* %dev) #0 !dbg !8751 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8753, metadata !DIExpression()), !dbg !8754
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8755
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !8756
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 18, !dbg !8757
  %1 = load i32, i32* %runtime_status, align 4, !dbg !8757
  %cmp = icmp eq i32 %1, 2, !dbg !8758
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8759

land.rhs:                                         ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8760
  %power1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !8761
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 15, !dbg !8762
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !8762
  %bf.clear = and i16 %bf.load, 7, !dbg !8762
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8762
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8763
  %lnot = xor i1 %tobool, true, !dbg !8763
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !8764
  ret i1 %3, !dbg !8765
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @platform_pci_need_resume(%struct.pci_dev* %dev) #0 !dbg !8766 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8767, metadata !DIExpression()), !dbg !8768
  %0 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !8769
  %tobool = icmp ne %struct.pci_platform_pm_ops* %0, null, !dbg !8769
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8769

cond.true:                                        ; preds = %entry
  %1 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !8770
  %need_resume = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %1, i32 0, i32 7, !dbg !8771
  %2 = load i1 (%struct.pci_dev*)*, i1 (%struct.pci_dev*)** %need_resume, align 8, !dbg !8771
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8772
  %call = call zeroext i1 %2(%struct.pci_dev* %3) #11, !dbg !8770
  %conv = zext i1 %call to i32, !dbg !8770
  br label %cond.end, !dbg !8769

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8769

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !8769
  %tobool1 = icmp ne i32 %cond, 0, !dbg !8769
  ret i1 %tobool1, !dbg !8773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_dev_adjust_pme(%struct.pci_dev* %pci_dev) #0 !dbg !8774 {
entry:
  %lock.addr.i6 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i6, metadata !8775, metadata !DIExpression()), !dbg !8780
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8782, metadata !DIExpression()), !dbg !8784
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.device*, align 8
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !8786, metadata !DIExpression()), !dbg !8787
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !8788, metadata !DIExpression()), !dbg !8789
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8790
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !8791
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !8789
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8792
  %power = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !8793
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !8794
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !8795
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8798, !srcloc !8800
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8801
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !8801
  %rlock.i = bitcast %union.anon* %3 to %struct.raw_spinlock*, !dbg !8801
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8803
  %call = call zeroext i1 @pm_runtime_suspended(%struct.device* %4) #11, !dbg !8805
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !8806

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8807
  %call2 = call zeroext i1 @device_may_wakeup(%struct.device* %5) #11, !dbg !8808
  br i1 %call2, label %if.end, label %land.lhs.true3, !dbg !8809

land.lhs.true3:                                   ; preds = %land.lhs.true
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8810
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 26, !dbg !8811
  %7 = load i32, i32* %current_state, align 8, !dbg !8811
  %cmp = icmp slt i32 %7, 4, !dbg !8812
  br i1 %cmp, label %if.then, label %if.end, !dbg !8813

if.then:                                          ; preds = %land.lhs.true3
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8814
  call void @__pci_pme_active(%struct.pci_dev* %8, i1 zeroext false) #11, !dbg !8815
  br label %if.end, !dbg !8815

if.end:                                           ; preds = %if.then, %land.lhs.true3, %land.lhs.true, %entry
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8816
  %power4 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 11, !dbg !8817
  %lock5 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power4, i32 0, i32 3, !dbg !8818
  store %struct.spinlock* %lock5, %struct.spinlock** %lock.addr.i6, align 8
  call void @arch_local_irq_enable() #14, !dbg !8819
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8822, !srcloc !8824
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i6, align 8, !dbg !8825
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !8825
  %rlock.i7 = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !8825
  ret void, !dbg !8827
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_dev_complete_resume(%struct.pci_dev* %pci_dev) #0 !dbg !8828 {
entry:
  %lock.addr.i7 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i7, metadata !8775, metadata !DIExpression()), !dbg !8829
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8782, metadata !DIExpression()), !dbg !8831
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.device*, align 8
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !8833, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !8835, metadata !DIExpression()), !dbg !8836
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8837
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !8838
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !8836
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8839
  %call = call zeroext i1 @pci_dev_run_wake(%struct.pci_dev* %1) #11, !dbg !8841
  br i1 %call, label %if.end, label %if.then, !dbg !8842

if.then:                                          ; preds = %entry
  br label %return, !dbg !8843

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8844
  %power = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !8845
  %lock = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 3, !dbg !8846
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !8847
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8848, !srcloc !8800
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8849
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8849
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !8849
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8850
  %call2 = call zeroext i1 @pm_runtime_suspended(%struct.device* %5) #11, !dbg !8852
  br i1 %call2, label %land.lhs.true, label %if.end4, !dbg !8853

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8854
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 26, !dbg !8855
  %7 = load i32, i32* %current_state, align 8, !dbg !8855
  %cmp = icmp slt i32 %7, 4, !dbg !8856
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !8857

if.then3:                                         ; preds = %land.lhs.true
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !8858
  call void @__pci_pme_active(%struct.pci_dev* %8, i1 zeroext true) #11, !dbg !8859
  br label %if.end4, !dbg !8859

if.end4:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8860
  %power5 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 11, !dbg !8861
  %lock6 = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power5, i32 0, i32 3, !dbg !8862
  store %struct.spinlock* %lock6, %struct.spinlock** %lock.addr.i7, align 8
  call void @arch_local_irq_enable() #14, !dbg !8863
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8864, !srcloc !8824
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i7, align 8, !dbg !8865
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !8865
  %rlock.i8 = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !8865
  br label %return, !dbg !8866

return:                                           ; preds = %if.end4, %if.then
  ret void, !dbg !8866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_config_pm_runtime_get(%struct.pci_dev* %pdev) #0 !dbg !8867 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.device*, align 8
  %parent = alloca %struct.device*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8868, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !8870, metadata !DIExpression()), !dbg !8871
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8872
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !8873
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !8871
  call void @llvm.dbg.declare(metadata %struct.device** %parent, metadata !8874, metadata !DIExpression()), !dbg !8875
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8876
  %parent2 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 1, !dbg !8877
  %2 = load %struct.device*, %struct.device** %parent2, align 8, !dbg !8877
  store %struct.device* %2, %struct.device** %parent, align 8, !dbg !8875
  %3 = load %struct.device*, %struct.device** %parent, align 8, !dbg !8878
  %tobool = icmp ne %struct.device* %3, null, !dbg !8878
  br i1 %tobool, label %if.then, label %if.end, !dbg !8880

if.then:                                          ; preds = %entry
  %4 = load %struct.device*, %struct.device** %parent, align 8, !dbg !8881
  %call = call i32 @pm_runtime_get_sync(%struct.device* %4) #11, !dbg !8882
  br label %if.end, !dbg !8882

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8883
  call void @pm_runtime_get_noresume(%struct.device* %5) #11, !dbg !8884
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8885
  %call3 = call i32 @pm_runtime_barrier(%struct.device* %6) #11, !dbg !8886
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8887
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 26, !dbg !8889
  %8 = load i32, i32* %current_state, align 8, !dbg !8889
  %cmp = icmp eq i32 %8, 4, !dbg !8890
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !8891

if.then4:                                         ; preds = %if.end
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8892
  %call5 = call i32 @pm_runtime_resume(%struct.device* %9) #11, !dbg !8893
  br label %if.end6, !dbg !8893

if.end6:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !8894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_get_sync(%struct.device* %dev) #0 !dbg !8895 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8896, metadata !DIExpression()), !dbg !8897
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8898
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 4) #11, !dbg !8899
  ret i32 %call, !dbg !8900
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_get_noresume(%struct.device* %dev) #0 !dbg !8901 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8902, metadata !DIExpression()), !dbg !8904
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7359, metadata !DIExpression()), !dbg !8908
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7363, metadata !DIExpression()), !dbg !8910
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8911, metadata !DIExpression()), !dbg !8912
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8913, metadata !DIExpression()), !dbg !8914
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8915
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !8916
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !8917
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8918
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !8918
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8919
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !8920
  %conv.i.i = trunc i64 %4 to i32, !dbg !8920
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #14, !dbg !8921
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8922
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !8922
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !8922
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8923
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8924
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !8925
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #10, !dbg !8926, !srcloc !8927
  ret void, !dbg !8928
}

; Function Attrs: noredzone
declare dso_local i32 @pm_runtime_barrier(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_resume(%struct.device* %dev) #0 !dbg !8929 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8930, metadata !DIExpression()), !dbg !8931
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8932
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 0) #11, !dbg !8933
  ret i32 %call, !dbg !8934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_config_pm_runtime_put(%struct.pci_dev* %pdev) #0 !dbg !8935 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dev = alloca %struct.device*, align 8
  %parent = alloca %struct.device*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8936, metadata !DIExpression()), !dbg !8937
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !8938, metadata !DIExpression()), !dbg !8939
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8940
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !8941
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !8939
  call void @llvm.dbg.declare(metadata %struct.device** %parent, metadata !8942, metadata !DIExpression()), !dbg !8943
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8944
  %parent2 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 1, !dbg !8945
  %2 = load %struct.device*, %struct.device** %parent2, align 8, !dbg !8945
  store %struct.device* %2, %struct.device** %parent, align 8, !dbg !8943
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8946
  %call = call i32 @pm_runtime_put(%struct.device* %3) #11, !dbg !8947
  %4 = load %struct.device*, %struct.device** %parent, align 8, !dbg !8948
  %tobool = icmp ne %struct.device* %4, null, !dbg !8948
  br i1 %tobool, label %if.then, label %if.end, !dbg !8950

if.then:                                          ; preds = %entry
  %5 = load %struct.device*, %struct.device** %parent, align 8, !dbg !8951
  %call3 = call i32 @pm_runtime_put_sync(%struct.device* %5) #11, !dbg !8952
  br label %if.end, !dbg !8952

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8953
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put(%struct.device* %dev) #0 !dbg !8954 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8955, metadata !DIExpression()), !dbg !8956
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8957
  %call = call i32 @__pm_runtime_idle(%struct.device* %0, i32 5) #11, !dbg !8958
  ret i32 %call, !dbg !8959
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put_sync(%struct.device* %dev) #0 !dbg !8960 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8961, metadata !DIExpression()), !dbg !8962
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8963
  %call = call i32 @__pm_runtime_idle(%struct.device* %0, i32 4) #11, !dbg !8964
  ret i32 %call, !dbg !8965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_bridge_d3_possible(%struct.pci_dev* %bridge) #0 !dbg !8966 {
entry:
  %retval = alloca i1, align 1
  %bridge.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !8967, metadata !DIExpression()), !dbg !8968
  %0 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !8969
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %0) #11, !dbg !8971
  br i1 %call, label %if.end, label %if.then, !dbg !8972

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8973
  br label %return, !dbg !8973

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !8974
  %call1 = call i32 @pci_pcie_type(%struct.pci_dev* %1) #11, !dbg !8975
  switch i32 %call1, label %sw.epilog [
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
  ], !dbg !8976

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %2 = load i8, i8* @pci_bridge_d3_disable, align 1, !dbg !8977
  %tobool = trunc i8 %2 to i1, !dbg !8977
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !8980

if.then2:                                         ; preds = %sw.bb
  store i1 false, i1* %retval, align 1, !dbg !8981
  br label %return, !dbg !8981

if.end3:                                          ; preds = %sw.bb
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !8982
  %is_hotplug_bridge = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 46, !dbg !8984
  %4 = bitcast [5 x i8]* %is_hotplug_bridge to i40*, !dbg !8984
  %bf.load = load i40, i40* %4, align 1, !dbg !8984
  %bf.lshr = lshr i40 %bf.load, 24, !dbg !8984
  %bf.clear = and i40 %bf.lshr, 1, !dbg !8984
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !8984
  %tobool4 = icmp ne i32 %bf.cast, 0, !dbg !8982
  br i1 %tobool4, label %land.lhs.true, label %if.end7, !dbg !8985

land.lhs.true:                                    ; preds = %if.end3
  %5 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !8986
  %call5 = call zeroext i1 @pciehp_is_native(%struct.pci_dev* %5) #11, !dbg !8987
  br i1 %call5, label %if.end7, label %if.then6, !dbg !8988

if.then6:                                         ; preds = %land.lhs.true
  store i1 false, i1* %retval, align 1, !dbg !8989
  br label %return, !dbg !8989

if.end7:                                          ; preds = %land.lhs.true, %if.end3
  %6 = load i8, i8* @pci_bridge_d3_force, align 1, !dbg !8990
  %tobool8 = trunc i8 %6 to i1, !dbg !8990
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8992

if.then9:                                         ; preds = %if.end7
  store i1 true, i1* %retval, align 1, !dbg !8993
  br label %return, !dbg !8993

if.end10:                                         ; preds = %if.end7
  %7 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !8994
  %is_thunderbolt = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 46, !dbg !8996
  %8 = bitcast [5 x i8]* %is_thunderbolt to i40*, !dbg !8996
  %bf.load11 = load i40, i40* %8, align 1, !dbg !8996
  %bf.lshr12 = lshr i40 %bf.load11, 26, !dbg !8996
  %bf.clear13 = and i40 %bf.lshr12, 1, !dbg !8996
  %bf.cast14 = trunc i40 %bf.clear13 to i32, !dbg !8996
  %tobool15 = icmp ne i32 %bf.cast14, 0, !dbg !8994
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !8997

if.then16:                                        ; preds = %if.end10
  store i1 true, i1* %retval, align 1, !dbg !8998
  br label %return, !dbg !8998

if.end17:                                         ; preds = %if.end10
  %9 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !8999
  %call18 = call zeroext i1 @platform_pci_bridge_d3(%struct.pci_dev* %9) #11, !dbg !9001
  br i1 %call18, label %if.then19, label %if.end20, !dbg !9002

if.then19:                                        ; preds = %if.end17
  store i1 true, i1* %retval, align 1, !dbg !9003
  br label %return, !dbg !9003

if.end20:                                         ; preds = %if.end17
  %10 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !9004
  %is_hotplug_bridge21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 46, !dbg !9006
  %11 = bitcast [5 x i8]* %is_hotplug_bridge21 to i40*, !dbg !9006
  %bf.load22 = load i40, i40* %11, align 1, !dbg !9006
  %bf.lshr23 = lshr i40 %bf.load22, 24, !dbg !9006
  %bf.clear24 = and i40 %bf.lshr23, 1, !dbg !9006
  %bf.cast25 = trunc i40 %bf.clear24 to i32, !dbg !9006
  %tobool26 = icmp ne i32 %bf.cast25, 0, !dbg !9004
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !9007

if.then27:                                        ; preds = %if.end20
  store i1 false, i1* %retval, align 1, !dbg !9008
  br label %return, !dbg !9008

if.end28:                                         ; preds = %if.end20
  %call29 = call i32 @dmi_check_system(%struct.dmi_system_id* getelementptr inbounds ([2 x %struct.dmi_system_id], [2 x %struct.dmi_system_id]* bitcast ([2 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }]* @bridge_d3_blacklist to [2 x %struct.dmi_system_id]*), i64 0, i64 0)) #11, !dbg !9009
  %tobool30 = icmp ne i32 %call29, 0, !dbg !9009
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !9011

if.then31:                                        ; preds = %if.end28
  store i1 false, i1* %retval, align 1, !dbg !9012
  br label %return, !dbg !9012

if.end32:                                         ; preds = %if.end28
  %call33 = call i32 @dmi_get_bios_year() #11, !dbg !9013
  %cmp = icmp sge i32 %call33, 2015, !dbg !9015
  br i1 %cmp, label %if.then34, label %if.end35, !dbg !9016

if.then34:                                        ; preds = %if.end32
  store i1 true, i1* %retval, align 1, !dbg !9017
  br label %return, !dbg !9017

if.end35:                                         ; preds = %if.end32
  br label %sw.epilog, !dbg !9018

sw.epilog:                                        ; preds = %if.end, %if.end35
  store i1 false, i1* %retval, align 1, !dbg !9019
  br label %return, !dbg !9019

return:                                           ; preds = %sw.epilog, %if.then34, %if.then31, %if.then27, %if.then19, %if.then16, %if.then9, %if.then6, %if.then2, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !9020
  ret i1 %12, !dbg !9020
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_is_pcie(%struct.pci_dev* %dev) #0 !dbg !9021 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9022, metadata !DIExpression()), !dbg !9023
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9024
  %call = call i32 @pci_pcie_cap(%struct.pci_dev* %0) #11, !dbg !9025
  %tobool = icmp ne i32 %call, 0, !dbg !9025
  ret i1 %tobool, !dbg !9026
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_pcie_type(%struct.pci_dev* %dev) #0 !dbg !9027 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9030, metadata !DIExpression()), !dbg !9031
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9032
  %call = call zeroext i16 @pcie_caps_reg(%struct.pci_dev* %0) #11, !dbg !9033
  %conv = zext i16 %call to i32, !dbg !9033
  %and = and i32 %conv, 240, !dbg !9034
  %shr = ashr i32 %and, 4, !dbg !9035
  ret i32 %shr, !dbg !9036
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @pciehp_is_native(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @platform_pci_bridge_d3(%struct.pci_dev* %dev) #0 !dbg !9037 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9038, metadata !DIExpression()), !dbg !9039
  %0 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !9040
  %tobool = icmp ne %struct.pci_platform_pm_ops* %0, null, !dbg !9040
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9042

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !9043
  %bridge_d3 = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %1, i32 0, i32 0, !dbg !9044
  %2 = load i1 (%struct.pci_dev*)*, i1 (%struct.pci_dev*)** %bridge_d3, align 8, !dbg !9044
  %tobool1 = icmp ne i1 (%struct.pci_dev*)* %2, null, !dbg !9043
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9045

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !9046
  %bridge_d32 = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %3, i32 0, i32 0, !dbg !9047
  %4 = load i1 (%struct.pci_dev*)*, i1 (%struct.pci_dev*)** %bridge_d32, align 8, !dbg !9047
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9048
  %call = call zeroext i1 %4(%struct.pci_dev* %5) #11, !dbg !9046
  store i1 %call, i1* %retval, align 1, !dbg !9049
  br label %return, !dbg !9049

if.end:                                           ; preds = %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !9050
  br label %return, !dbg !9050

return:                                           ; preds = %if.end, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !9051
  ret i1 %6, !dbg !9051
}

; Function Attrs: noredzone
declare dso_local i32 @dmi_check_system(%struct.dmi_system_id*) #3

; Function Attrs: noredzone
declare dso_local i32 @dmi_get_bios_year() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_bridge_d3_update(%struct.pci_dev* %dev) #0 !dbg !9052 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %remove = alloca i8, align 1
  %bridge = alloca %struct.pci_dev*, align 8
  %d3cold_ok = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9053, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.declare(metadata i8* %remove, metadata !9055, metadata !DIExpression()), !dbg !9056
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9057
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9058
  %call = call i32 @device_is_registered(%struct.device* %dev1) #11, !dbg !9059
  %tobool = icmp ne i32 %call, 0, !dbg !9060
  %lnot = xor i1 %tobool, true, !dbg !9060
  %frombool = zext i1 %lnot to i8, !dbg !9056
  store i8 %frombool, i8* %remove, align 1, !dbg !9056
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !9061, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.declare(metadata i8* %d3cold_ok, metadata !9063, metadata !DIExpression()), !dbg !9064
  store i8 1, i8* %d3cold_ok, align 1, !dbg !9064
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9065
  %call2 = call %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %1) #11, !dbg !9066
  store %struct.pci_dev* %call2, %struct.pci_dev** %bridge, align 8, !dbg !9067
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9068
  %tobool3 = icmp ne %struct.pci_dev* %2, null, !dbg !9068
  br i1 %tobool3, label %lor.lhs.false, label %if.then, !dbg !9070

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9071
  %call4 = call zeroext i1 @pci_bridge_d3_possible(%struct.pci_dev* %3) #11, !dbg !9072
  br i1 %call4, label %if.end, label %if.then, !dbg !9073

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end34, !dbg !9074

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8, i8* %remove, align 1, !dbg !9075
  %tobool5 = trunc i8 %4 to i1, !dbg !9075
  br i1 %tobool5, label %land.lhs.true, label %if.end8, !dbg !9077

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9078
  %bridge_d3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 29, !dbg !9079
  %6 = bitcast i24* %bridge_d3 to i32*, !dbg !9079
  %bf.load = load i32, i32* %6, align 2, !dbg !9079
  %bf.lshr = lshr i32 %bf.load, 10, !dbg !9079
  %bf.clear = and i32 %bf.lshr, 1, !dbg !9079
  %tobool6 = icmp ne i32 %bf.clear, 0, !dbg !9078
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !9080

if.then7:                                         ; preds = %land.lhs.true
  br label %if.end34, !dbg !9081

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %7 = load i8, i8* %remove, align 1, !dbg !9082
  %tobool9 = trunc i8 %7 to i1, !dbg !9082
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !9084

if.then10:                                        ; preds = %if.end8
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9085
  %call11 = call i32 @pci_dev_check_d3cold(%struct.pci_dev* %8, i8* %d3cold_ok) #11, !dbg !9086
  br label %if.end12, !dbg !9086

if.end12:                                         ; preds = %if.then10, %if.end8
  %9 = load i8, i8* %d3cold_ok, align 1, !dbg !9087
  %tobool13 = trunc i8 %9 to i1, !dbg !9087
  br i1 %tobool13, label %land.lhs.true14, label %if.end21, !dbg !9089

land.lhs.true14:                                  ; preds = %if.end12
  %10 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9090
  %bridge_d315 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 29, !dbg !9091
  %11 = bitcast i24* %bridge_d315 to i32*, !dbg !9091
  %bf.load16 = load i32, i32* %11, align 2, !dbg !9091
  %bf.lshr17 = lshr i32 %bf.load16, 10, !dbg !9091
  %bf.clear18 = and i32 %bf.lshr17, 1, !dbg !9091
  %tobool19 = icmp ne i32 %bf.clear18, 0, !dbg !9090
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !9092

if.then20:                                        ; preds = %land.lhs.true14
  %12 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9093
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 2, !dbg !9094
  %13 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !9094
  call void @pci_walk_bus(%struct.pci_bus* %13, i32 (%struct.pci_dev*, i8*)* @pci_dev_check_d3cold, i8* %d3cold_ok) #11, !dbg !9095
  br label %if.end21, !dbg !9095

if.end21:                                         ; preds = %if.then20, %land.lhs.true14, %if.end12
  %14 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9096
  %bridge_d322 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 29, !dbg !9098
  %15 = bitcast i24* %bridge_d322 to i32*, !dbg !9098
  %bf.load23 = load i32, i32* %15, align 2, !dbg !9098
  %bf.lshr24 = lshr i32 %bf.load23, 10, !dbg !9098
  %bf.clear25 = and i32 %bf.lshr24, 1, !dbg !9098
  %16 = load i8, i8* %d3cold_ok, align 1, !dbg !9099
  %tobool26 = trunc i8 %16 to i1, !dbg !9099
  %conv = zext i1 %tobool26 to i32, !dbg !9099
  %cmp = icmp ne i32 %bf.clear25, %conv, !dbg !9100
  br i1 %cmp, label %if.then28, label %if.end34, !dbg !9101

if.then28:                                        ; preds = %if.end21
  %17 = load i8, i8* %d3cold_ok, align 1, !dbg !9102
  %tobool29 = trunc i8 %17 to i1, !dbg !9102
  %conv30 = zext i1 %tobool29 to i32, !dbg !9102
  %18 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9104
  %bridge_d331 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 29, !dbg !9105
  %19 = bitcast i24* %bridge_d331 to i32*, !dbg !9105
  %bf.load32 = load i32, i32* %19, align 2, !dbg !9106
  %bf.value = and i32 %conv30, 1, !dbg !9106
  %bf.shl = shl i32 %bf.value, 10, !dbg !9106
  %bf.clear33 = and i32 %bf.load32, -1025, !dbg !9106
  %bf.set = or i32 %bf.clear33, %bf.shl, !dbg !9106
  store i32 %bf.set, i32* %19, align 2, !dbg !9106
  %20 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9107
  call void @pci_bridge_d3_update(%struct.pci_dev* %20) #11, !dbg !9108
  br label %if.end34, !dbg !9109

if.end34:                                         ; preds = %if.then, %if.then7, %if.then28, %if.end21
  ret void, !dbg !9110
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_is_registered(%struct.device* %dev) #0 !dbg !9111 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9112, metadata !DIExpression()), !dbg !9113
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9114
  %kobj = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !9115
  %state_in_sysfs = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 7, !dbg !9116
  %bf.load = load i8, i8* %state_in_sysfs, align 4, !dbg !9116
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !9116
  %bf.clear = and i8 %bf.lshr, 1, !dbg !9116
  %bf.cast = zext i8 %bf.clear to i32, !dbg !9116
  ret i32 %bf.cast, !dbg !9117
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %dev) #0 !dbg !9118 {
entry:
  %retval = alloca %struct.pci_dev*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9121, metadata !DIExpression()), !dbg !9122
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9123
  %call = call %struct.pci_dev* @pci_physfn(%struct.pci_dev* %0) #11, !dbg !9124
  store %struct.pci_dev* %call, %struct.pci_dev** %dev.addr, align 8, !dbg !9125
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9126
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 1, !dbg !9128
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !9128
  %call1 = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %2) #11, !dbg !9129
  br i1 %call1, label %if.then, label %if.end, !dbg !9130

if.then:                                          ; preds = %entry
  store %struct.pci_dev* null, %struct.pci_dev** %retval, align 8, !dbg !9131
  br label %return, !dbg !9131

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9132
  %bus2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 1, !dbg !9133
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus2, align 8, !dbg !9133
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 4, !dbg !9134
  %5 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !9134
  store %struct.pci_dev* %5, %struct.pci_dev** %retval, align 8, !dbg !9135
  br label %return, !dbg !9135

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.pci_dev*, %struct.pci_dev** %retval, align 8, !dbg !9136
  ret %struct.pci_dev* %6, !dbg !9136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_dev_check_d3cold(%struct.pci_dev* %dev, i8* %data) #0 !dbg !9137 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  %d3cold_ok = alloca i8*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9138, metadata !DIExpression()), !dbg !9139
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9140, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.declare(metadata i8** %d3cold_ok, metadata !9142, metadata !DIExpression()), !dbg !9143
  %0 = load i8*, i8** %data.addr, align 8, !dbg !9144
  store i8* %0, i8** %d3cold_ok, align 8, !dbg !9143
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9145
  %no_d3cold = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 29, !dbg !9147
  %2 = bitcast i24* %no_d3cold to i32*, !dbg !9147
  %bf.load = load i32, i32* %2, align 2, !dbg !9147
  %bf.lshr = lshr i32 %bf.load, 9, !dbg !9147
  %bf.clear = and i32 %bf.lshr, 1, !dbg !9147
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !9145
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9148

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9149
  %d3cold_allowed = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 29, !dbg !9150
  %4 = bitcast i24* %d3cold_allowed to i32*, !dbg !9150
  %bf.load1 = load i32, i32* %4, align 2, !dbg !9150
  %bf.lshr2 = lshr i32 %bf.load1, 11, !dbg !9150
  %bf.clear3 = and i32 %bf.lshr2, 1, !dbg !9150
  %tobool4 = icmp ne i32 %bf.clear3, 0, !dbg !9149
  br i1 %tobool4, label %lor.lhs.false5, label %if.then, !dbg !9151

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9152
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !9153
  %call = call zeroext i1 @device_may_wakeup(%struct.device* %dev6) #11, !dbg !9154
  br i1 %call, label %land.lhs.true, label %lor.lhs.false8, !dbg !9155

land.lhs.true:                                    ; preds = %lor.lhs.false5
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9156
  %call7 = call zeroext i1 @pci_pme_capable(%struct.pci_dev* %6, i32 4) #11, !dbg !9157
  br i1 %call7, label %lor.lhs.false8, label %if.then, !dbg !9158

lor.lhs.false8:                                   ; preds = %land.lhs.true, %lor.lhs.false5
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9159
  %call9 = call zeroext i1 @pci_power_manageable(%struct.pci_dev* %7) #11, !dbg !9160
  br i1 %call9, label %if.end, label %if.then, !dbg !9161

if.then:                                          ; preds = %lor.lhs.false8, %land.lhs.true, %lor.lhs.false, %entry
  %8 = load i8*, i8** %d3cold_ok, align 8, !dbg !9162
  store i8 0, i8* %8, align 1, !dbg !9163
  br label %if.end, !dbg !9164

if.end:                                           ; preds = %if.then, %lor.lhs.false8
  %9 = load i8*, i8** %d3cold_ok, align 8, !dbg !9165
  %10 = load i8, i8* %9, align 1, !dbg !9166
  %tobool10 = trunc i8 %10 to i1, !dbg !9166
  %lnot = xor i1 %tobool10, true, !dbg !9167
  %lnot.ext = zext i1 %lnot to i32, !dbg !9167
  ret i32 %lnot.ext, !dbg !9168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_d3cold_enable(%struct.pci_dev* %dev) #0 !dbg !9169 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9170, metadata !DIExpression()), !dbg !9171
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9172
  %no_d3cold = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 29, !dbg !9174
  %1 = bitcast i24* %no_d3cold to i32*, !dbg !9174
  %bf.load = load i32, i32* %1, align 2, !dbg !9174
  %bf.lshr = lshr i32 %bf.load, 9, !dbg !9174
  %bf.clear = and i32 %bf.lshr, 1, !dbg !9174
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !9172
  br i1 %tobool, label %if.then, label %if.end, !dbg !9175

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9176
  %no_d3cold1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 29, !dbg !9178
  %3 = bitcast i24* %no_d3cold1 to i32*, !dbg !9178
  %bf.load2 = load i32, i32* %3, align 2, !dbg !9179
  %bf.clear3 = and i32 %bf.load2, -513, !dbg !9179
  store i32 %bf.clear3, i32* %3, align 2, !dbg !9179
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9180
  call void @pci_bridge_d3_update(%struct.pci_dev* %4) #11, !dbg !9181
  br label %if.end, !dbg !9182

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_d3cold_disable(%struct.pci_dev* %dev) #0 !dbg !9184 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9185, metadata !DIExpression()), !dbg !9186
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9187
  %no_d3cold = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 29, !dbg !9189
  %1 = bitcast i24* %no_d3cold to i32*, !dbg !9189
  %bf.load = load i32, i32* %1, align 2, !dbg !9189
  %bf.lshr = lshr i32 %bf.load, 9, !dbg !9189
  %bf.clear = and i32 %bf.lshr, 1, !dbg !9189
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !9187
  br i1 %tobool, label %if.end, label %if.then, !dbg !9190

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9191
  %no_d3cold1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 29, !dbg !9193
  %3 = bitcast i24* %no_d3cold1 to i32*, !dbg !9193
  %bf.load2 = load i32, i32* %3, align 2, !dbg !9194
  %bf.clear3 = and i32 %bf.load2, -513, !dbg !9194
  %bf.set = or i32 %bf.clear3, 512, !dbg !9194
  store i32 %bf.set, i32* %3, align 2, !dbg !9194
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9195
  call void @pci_bridge_d3_update(%struct.pci_dev* %4) #11, !dbg !9196
  br label %if.end, !dbg !9197

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9198
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_pm_init(%struct.pci_dev* %dev) #0 !dbg !9199 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pm = alloca i32, align 4
  %status = alloca i16, align 2
  %pmc = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9200, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.declare(metadata i32* %pm, metadata !9202, metadata !DIExpression()), !dbg !9203
  call void @llvm.dbg.declare(metadata i16* %status, metadata !9204, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.declare(metadata i16* %pmc, metadata !9206, metadata !DIExpression()), !dbg !9207
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9208
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9209
  call void @pm_runtime_forbid(%struct.device* %dev1) #11, !dbg !9210
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9211
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !9212
  %call = call i32 @pm_runtime_set_active(%struct.device* %dev2) #11, !dbg !9213
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9214
  %dev3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !9215
  call void @pm_runtime_enable(%struct.device* %dev3) #11, !dbg !9216
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9217
  %dev4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !9218
  call void @device_enable_async_suspend(%struct.device* %dev4) #11, !dbg !9219
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9220
  %wakeup_prepared = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 29, !dbg !9221
  %5 = bitcast i24* %wakeup_prepared to i32*, !dbg !9221
  %bf.load = load i32, i32* %5, align 2, !dbg !9222
  %bf.clear = and i32 %bf.load, -8193, !dbg !9222
  store i32 %bf.clear, i32* %5, align 2, !dbg !9222
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9223
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 28, !dbg !9224
  store i8 0, i8* %pm_cap, align 1, !dbg !9225
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9226
  %pme_support = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 29, !dbg !9227
  %8 = bitcast i24* %pme_support to i32*, !dbg !9227
  %bf.load5 = load i32, i32* %8, align 2, !dbg !9228
  %bf.clear6 = and i32 %bf.load5, -32, !dbg !9228
  store i32 %bf.clear6, i32* %8, align 2, !dbg !9228
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9229
  %call7 = call i32 @pci_find_capability(%struct.pci_dev* %9, i32 1) #11, !dbg !9230
  store i32 %call7, i32* %pm, align 4, !dbg !9231
  %10 = load i32, i32* %pm, align 4, !dbg !9232
  %tobool = icmp ne i32 %10, 0, !dbg !9232
  br i1 %tobool, label %if.end, label %if.then, !dbg !9234

if.then:                                          ; preds = %entry
  br label %if.end118, !dbg !9235

if.end:                                           ; preds = %entry
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9236
  %12 = load i32, i32* %pm, align 4, !dbg !9237
  %add = add i32 %12, 2, !dbg !9238
  %call8 = call i32 @pci_read_config_word(%struct.pci_dev* %11, i32 %add, i16* %pmc) #11, !dbg !9239
  %13 = load i16, i16* %pmc, align 2, !dbg !9240
  %conv = zext i16 %13 to i32, !dbg !9240
  %and = and i32 %conv, 7, !dbg !9242
  %cmp = icmp sgt i32 %and, 3, !dbg !9243
  br i1 %cmp, label %if.then10, label %if.end14, !dbg !9244

if.then10:                                        ; preds = %if.end
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9245
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !9245
  %15 = load i16, i16* %pmc, align 2, !dbg !9245
  %conv12 = zext i16 %15 to i32, !dbg !9245
  %and13 = and i32 %conv12, 7, !dbg !9245
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0), i32 %and13) #12, !dbg !9245
  br label %if.end118, !dbg !9247

if.end14:                                         ; preds = %if.end
  %16 = load i32, i32* %pm, align 4, !dbg !9248
  %conv15 = trunc i32 %16 to i8, !dbg !9248
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9249
  %pm_cap16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 28, !dbg !9250
  store i8 %conv15, i8* %pm_cap16, align 1, !dbg !9251
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9252
  %d3hot_delay = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 31, !dbg !9253
  store i32 10, i32* %d3hot_delay, align 4, !dbg !9254
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9255
  %d3cold_delay = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 32, !dbg !9256
  store i32 100, i32* %d3cold_delay, align 8, !dbg !9257
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9258
  %call17 = call zeroext i1 @pci_bridge_d3_possible(%struct.pci_dev* %20) #11, !dbg !9259
  %conv18 = zext i1 %call17 to i32, !dbg !9259
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9260
  %bridge_d3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 29, !dbg !9261
  %22 = bitcast i24* %bridge_d3 to i32*, !dbg !9261
  %bf.load19 = load i32, i32* %22, align 2, !dbg !9262
  %bf.value = and i32 %conv18, 1, !dbg !9262
  %bf.shl = shl i32 %bf.value, 10, !dbg !9262
  %bf.clear20 = and i32 %bf.load19, -1025, !dbg !9262
  %bf.set = or i32 %bf.clear20, %bf.shl, !dbg !9262
  store i32 %bf.set, i32* %22, align 2, !dbg !9262
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9263
  %d3cold_allowed = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 29, !dbg !9264
  %24 = bitcast i24* %d3cold_allowed to i32*, !dbg !9264
  %bf.load21 = load i32, i32* %24, align 2, !dbg !9265
  %bf.clear22 = and i32 %bf.load21, -2049, !dbg !9265
  %bf.set23 = or i32 %bf.clear22, 2048, !dbg !9265
  store i32 %bf.set23, i32* %24, align 2, !dbg !9265
  %25 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9266
  %d1_support = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 29, !dbg !9267
  %26 = bitcast i24* %d1_support to i32*, !dbg !9267
  %bf.load24 = load i32, i32* %26, align 2, !dbg !9268
  %bf.clear25 = and i32 %bf.load24, -65, !dbg !9268
  store i32 %bf.clear25, i32* %26, align 2, !dbg !9268
  %27 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9269
  %d2_support = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 29, !dbg !9270
  %28 = bitcast i24* %d2_support to i32*, !dbg !9270
  %bf.load26 = load i32, i32* %28, align 2, !dbg !9271
  %bf.clear27 = and i32 %bf.load26, -129, !dbg !9271
  store i32 %bf.clear27, i32* %28, align 2, !dbg !9271
  %29 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9272
  %call28 = call i32 @pci_no_d1d2(%struct.pci_dev* %29) #11, !dbg !9274
  %tobool29 = icmp ne i32 %call28, 0, !dbg !9274
  br i1 %tobool29, label %if.end72, label %if.then30, !dbg !9275

if.then30:                                        ; preds = %if.end14
  %30 = load i16, i16* %pmc, align 2, !dbg !9276
  %conv31 = zext i16 %30 to i32, !dbg !9276
  %and32 = and i32 %conv31, 512, !dbg !9279
  %tobool33 = icmp ne i32 %and32, 0, !dbg !9279
  br i1 %tobool33, label %if.then34, label %if.end39, !dbg !9280

if.then34:                                        ; preds = %if.then30
  %31 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9281
  %d1_support35 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 29, !dbg !9282
  %32 = bitcast i24* %d1_support35 to i32*, !dbg !9282
  %bf.load36 = load i32, i32* %32, align 2, !dbg !9283
  %bf.clear37 = and i32 %bf.load36, -65, !dbg !9283
  %bf.set38 = or i32 %bf.clear37, 64, !dbg !9283
  store i32 %bf.set38, i32* %32, align 2, !dbg !9283
  br label %if.end39, !dbg !9281

if.end39:                                         ; preds = %if.then34, %if.then30
  %33 = load i16, i16* %pmc, align 2, !dbg !9284
  %conv40 = zext i16 %33 to i32, !dbg !9284
  %and41 = and i32 %conv40, 1024, !dbg !9286
  %tobool42 = icmp ne i32 %and41, 0, !dbg !9286
  br i1 %tobool42, label %if.then43, label %if.end48, !dbg !9287

if.then43:                                        ; preds = %if.end39
  %34 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9288
  %d2_support44 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 29, !dbg !9289
  %35 = bitcast i24* %d2_support44 to i32*, !dbg !9289
  %bf.load45 = load i32, i32* %35, align 2, !dbg !9290
  %bf.clear46 = and i32 %bf.load45, -129, !dbg !9290
  %bf.set47 = or i32 %bf.clear46, 128, !dbg !9290
  store i32 %bf.set47, i32* %35, align 2, !dbg !9290
  br label %if.end48, !dbg !9288

if.end48:                                         ; preds = %if.then43, %if.end39
  %36 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9291
  %d1_support49 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 29, !dbg !9293
  %37 = bitcast i24* %d1_support49 to i32*, !dbg !9293
  %bf.load50 = load i32, i32* %37, align 2, !dbg !9293
  %bf.lshr = lshr i32 %bf.load50, 6, !dbg !9293
  %bf.clear51 = and i32 %bf.lshr, 1, !dbg !9293
  %tobool52 = icmp ne i32 %bf.clear51, 0, !dbg !9291
  br i1 %tobool52, label %if.then58, label %lor.lhs.false, !dbg !9294

lor.lhs.false:                                    ; preds = %if.end48
  %38 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9295
  %d2_support53 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 29, !dbg !9296
  %39 = bitcast i24* %d2_support53 to i32*, !dbg !9296
  %bf.load54 = load i32, i32* %39, align 2, !dbg !9296
  %bf.lshr55 = lshr i32 %bf.load54, 7, !dbg !9296
  %bf.clear56 = and i32 %bf.lshr55, 1, !dbg !9296
  %tobool57 = icmp ne i32 %bf.clear56, 0, !dbg !9295
  br i1 %tobool57, label %if.then58, label %if.end71, !dbg !9297

if.then58:                                        ; preds = %lor.lhs.false, %if.end48
  %40 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9298
  %dev59 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 41, !dbg !9298
  %41 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9298
  %d1_support60 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 29, !dbg !9298
  %42 = bitcast i24* %d1_support60 to i32*, !dbg !9298
  %bf.load61 = load i32, i32* %42, align 2, !dbg !9298
  %bf.lshr62 = lshr i32 %bf.load61, 6, !dbg !9298
  %bf.clear63 = and i32 %bf.lshr62, 1, !dbg !9298
  %tobool64 = icmp ne i32 %bf.clear63, 0, !dbg !9298
  %43 = zext i1 %tobool64 to i64, !dbg !9298
  %cond = select i1 %tobool64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), !dbg !9298
  %44 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9298
  %d2_support65 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %44, i32 0, i32 29, !dbg !9298
  %45 = bitcast i24* %d2_support65 to i32*, !dbg !9298
  %bf.load66 = load i32, i32* %45, align 2, !dbg !9298
  %bf.lshr67 = lshr i32 %bf.load66, 7, !dbg !9298
  %bf.clear68 = and i32 %bf.lshr67, 1, !dbg !9298
  %tobool69 = icmp ne i32 %bf.clear68, 0, !dbg !9298
  %46 = zext i1 %tobool69 to i64, !dbg !9298
  %cond70 = select i1 %tobool69, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), !dbg !9298
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev59, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* %cond, i8* %cond70) #12, !dbg !9298
  br label %if.end71, !dbg !9298

if.end71:                                         ; preds = %if.then58, %lor.lhs.false
  br label %if.end72, !dbg !9299

if.end72:                                         ; preds = %if.end71, %if.end14
  %47 = load i16, i16* %pmc, align 2, !dbg !9300
  %conv73 = zext i16 %47 to i32, !dbg !9300
  %and74 = and i32 %conv73, 63488, !dbg !9300
  %conv75 = trunc i32 %and74 to i16, !dbg !9300
  store i16 %conv75, i16* %pmc, align 2, !dbg !9300
  %48 = load i16, i16* %pmc, align 2, !dbg !9301
  %tobool76 = icmp ne i16 %48, 0, !dbg !9301
  br i1 %tobool76, label %if.then77, label %if.end109, !dbg !9303

if.then77:                                        ; preds = %if.end72
  %49 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9304
  %dev78 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %49, i32 0, i32 41, !dbg !9304
  %50 = load i16, i16* %pmc, align 2, !dbg !9304
  %conv79 = zext i16 %50 to i32, !dbg !9304
  %and80 = and i32 %conv79, 2048, !dbg !9304
  %tobool81 = icmp ne i32 %and80, 0, !dbg !9304
  %51 = zext i1 %tobool81 to i64, !dbg !9304
  %cond82 = select i1 %tobool81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), !dbg !9304
  %52 = load i16, i16* %pmc, align 2, !dbg !9304
  %conv83 = zext i16 %52 to i32, !dbg !9304
  %and84 = and i32 %conv83, 4096, !dbg !9304
  %tobool85 = icmp ne i32 %and84, 0, !dbg !9304
  %53 = zext i1 %tobool85 to i64, !dbg !9304
  %cond86 = select i1 %tobool85, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), !dbg !9304
  %54 = load i16, i16* %pmc, align 2, !dbg !9304
  %conv87 = zext i16 %54 to i32, !dbg !9304
  %and88 = and i32 %conv87, 8192, !dbg !9304
  %tobool89 = icmp ne i32 %and88, 0, !dbg !9304
  %55 = zext i1 %tobool89 to i64, !dbg !9304
  %cond90 = select i1 %tobool89, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), !dbg !9304
  %56 = load i16, i16* %pmc, align 2, !dbg !9304
  %conv91 = zext i16 %56 to i32, !dbg !9304
  %and92 = and i32 %conv91, 16384, !dbg !9304
  %tobool93 = icmp ne i32 %and92, 0, !dbg !9304
  %57 = zext i1 %tobool93 to i64, !dbg !9304
  %cond94 = select i1 %tobool93, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), !dbg !9304
  %58 = load i16, i16* %pmc, align 2, !dbg !9304
  %conv95 = zext i16 %58 to i32, !dbg !9304
  %and96 = and i32 %conv95, 32768, !dbg !9304
  %tobool97 = icmp ne i32 %and96, 0, !dbg !9304
  %59 = zext i1 %tobool97 to i64, !dbg !9304
  %cond98 = select i1 %tobool97, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), !dbg !9304
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev78, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.17, i64 0, i64 0), i8* %cond82, i8* %cond86, i8* %cond90, i8* %cond94, i8* %cond98) #12, !dbg !9304
  %60 = load i16, i16* %pmc, align 2, !dbg !9306
  %conv99 = zext i16 %60 to i32, !dbg !9306
  %shr = ashr i32 %conv99, 11, !dbg !9307
  %61 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9308
  %pme_support100 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %61, i32 0, i32 29, !dbg !9309
  %62 = bitcast i24* %pme_support100 to i32*, !dbg !9309
  %bf.load101 = load i32, i32* %62, align 2, !dbg !9310
  %bf.value102 = and i32 %shr, 31, !dbg !9310
  %bf.clear103 = and i32 %bf.load101, -32, !dbg !9310
  %bf.set104 = or i32 %bf.clear103, %bf.value102, !dbg !9310
  store i32 %bf.set104, i32* %62, align 2, !dbg !9310
  %63 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9311
  %pme_poll = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %63, i32 0, i32 29, !dbg !9312
  %64 = bitcast i24* %pme_poll to i32*, !dbg !9312
  %bf.load105 = load i32, i32* %64, align 2, !dbg !9313
  %bf.clear106 = and i32 %bf.load105, -33, !dbg !9313
  %bf.set107 = or i32 %bf.clear106, 32, !dbg !9313
  store i32 %bf.set107, i32* %64, align 2, !dbg !9313
  %65 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9314
  %dev108 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %65, i32 0, i32 41, !dbg !9315
  call void @device_set_wakeup_capable(%struct.device* %dev108, i1 zeroext true) #11, !dbg !9316
  %66 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9317
  call void @pci_pme_active(%struct.pci_dev* %66, i1 zeroext false) #11, !dbg !9318
  br label %if.end109, !dbg !9319

if.end109:                                        ; preds = %if.then77, %if.end72
  %67 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9320
  %call110 = call i32 @pci_read_config_word(%struct.pci_dev* %67, i32 6, i16* %status) #11, !dbg !9321
  %68 = load i16, i16* %status, align 2, !dbg !9322
  %conv111 = zext i16 %68 to i32, !dbg !9322
  %and112 = and i32 %conv111, 1, !dbg !9324
  %tobool113 = icmp ne i32 %and112, 0, !dbg !9324
  br i1 %tobool113, label %if.then114, label %if.end118, !dbg !9325

if.then114:                                       ; preds = %if.end109
  %69 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9326
  %imm_ready = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %69, i32 0, i32 27, !dbg !9327
  %bf.load115 = load i8, i8* %imm_ready, align 4, !dbg !9328
  %bf.clear116 = and i8 %bf.load115, -2, !dbg !9328
  %bf.set117 = or i8 %bf.clear116, 1, !dbg !9328
  store i8 %bf.set117, i8* %imm_ready, align 4, !dbg !9328
  br label %if.end118, !dbg !9326

if.end118:                                        ; preds = %if.then, %if.then10, %if.then114, %if.end109
  ret void, !dbg !9329
}

; Function Attrs: noredzone
declare dso_local void @pm_runtime_forbid(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_set_active(%struct.device* %dev) #0 !dbg !9330 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9331, metadata !DIExpression()), !dbg !9332
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9333
  %call = call i32 @__pm_runtime_set_status(%struct.device* %0, i32 0) #11, !dbg !9334
  ret i32 %call, !dbg !9335
}

; Function Attrs: noredzone
declare dso_local void @pm_runtime_enable(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_enable_async_suspend(%struct.device* %dev) #0 !dbg !9336 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9337, metadata !DIExpression()), !dbg !9338
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9339
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !9341
  %is_prepared = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !9342
  %bf.load = load i16, i16* %is_prepared, align 4, !dbg !9342
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !9342
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9342
  %bf.cast = trunc i16 %bf.clear to i1, !dbg !9342
  br i1 %bf.cast, label %if.end, label %if.then, !dbg !9343

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9344
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !9345
  %async_suspend = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 1, !dbg !9346
  %bf.load2 = load i16, i16* %async_suspend, align 4, !dbg !9347
  %bf.clear3 = and i16 %bf.load2, -3, !dbg !9347
  %bf.set = or i16 %bf.clear3, 2, !dbg !9347
  store i16 %bf.set, i16* %async_suspend, align 4, !dbg !9347
  br label %if.end, !dbg !9344

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9348
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @device_set_wakeup_capable(%struct.device*, i1 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_ea_init(%struct.pci_dev* %dev) #0 !dbg !9349 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ea = alloca i32, align 4
  %num_ent = alloca i8, align 1
  %offset = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9350, metadata !DIExpression()), !dbg !9351
  call void @llvm.dbg.declare(metadata i32* %ea, metadata !9352, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.declare(metadata i8* %num_ent, metadata !9354, metadata !DIExpression()), !dbg !9355
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !9356, metadata !DIExpression()), !dbg !9357
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9358, metadata !DIExpression()), !dbg !9359
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9360
  %call = call i32 @pci_find_capability(%struct.pci_dev* %0, i32 20) #11, !dbg !9361
  store i32 %call, i32* %ea, align 4, !dbg !9362
  %1 = load i32, i32* %ea, align 4, !dbg !9363
  %tobool = icmp ne i32 %1, 0, !dbg !9363
  br i1 %tobool, label %if.end, label %if.then, !dbg !9365

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !9366

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9367
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 1, !dbg !9368
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !9368
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9369
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 6, !dbg !9370
  %5 = load i32, i32* %devfn, align 8, !dbg !9370
  %6 = load i32, i32* %ea, align 4, !dbg !9371
  %add = add i32 %6, 2, !dbg !9372
  %call1 = call i32 @pci_bus_read_config_byte(%struct.pci_bus* %3, i32 %5, i32 %add, i8* %num_ent) #11, !dbg !9373
  %7 = load i8, i8* %num_ent, align 1, !dbg !9374
  %conv = zext i8 %7 to i32, !dbg !9374
  %and = and i32 %conv, 63, !dbg !9374
  %conv2 = trunc i32 %and to i8, !dbg !9374
  store i8 %conv2, i8* %num_ent, align 1, !dbg !9374
  %8 = load i32, i32* %ea, align 4, !dbg !9375
  %add3 = add i32 %8, 4, !dbg !9376
  store i32 %add3, i32* %offset, align 4, !dbg !9377
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9378
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 13, !dbg !9380
  %10 = load i8, i8* %hdr_type, align 1, !dbg !9380
  %conv4 = zext i8 %10 to i32, !dbg !9378
  %cmp = icmp eq i32 %conv4, 1, !dbg !9381
  br i1 %cmp, label %if.then6, label %if.end8, !dbg !9382

if.then6:                                         ; preds = %if.end
  %11 = load i32, i32* %offset, align 4, !dbg !9383
  %add7 = add i32 %11, 4, !dbg !9383
  store i32 %add7, i32* %offset, align 4, !dbg !9383
  br label %if.end8, !dbg !9384

if.end8:                                          ; preds = %if.then6, %if.end
  store i32 0, i32* %i, align 4, !dbg !9385
  br label %for.cond, !dbg !9387

for.cond:                                         ; preds = %for.inc, %if.end8
  %12 = load i32, i32* %i, align 4, !dbg !9388
  %13 = load i8, i8* %num_ent, align 1, !dbg !9390
  %conv9 = zext i8 %13 to i32, !dbg !9390
  %cmp10 = icmp slt i32 %12, %conv9, !dbg !9391
  br i1 %cmp10, label %for.body, label %for.end, !dbg !9392

for.body:                                         ; preds = %for.cond
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9393
  %15 = load i32, i32* %offset, align 4, !dbg !9394
  %call12 = call i32 @pci_ea_read(%struct.pci_dev* %14, i32 %15) #11, !dbg !9395
  store i32 %call12, i32* %offset, align 4, !dbg !9396
  br label %for.inc, !dbg !9397

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !9398
  %inc = add i32 %16, 1, !dbg !9398
  store i32 %inc, i32* %i, align 4, !dbg !9398
  br label %for.cond, !dbg !9399, !llvm.loop !9400

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !9402
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_ea_read(%struct.pci_dev* %dev, i32 %offset) #0 !dbg !9403 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %offset.addr = alloca i32, align 4
  %res = alloca %struct.resource*, align 8
  %ent_size = alloca i32, align 4
  %ent_offset = alloca i32, align 4
  %start = alloca i64, align 8
  %end = alloca i64, align 8
  %flags = alloca i64, align 8
  %dw0 = alloca i32, align 4
  %bei = alloca i32, align 4
  %base = alloca i32, align 4
  %max_offset = alloca i32, align 4
  %prop = alloca i8, align 1
  %support_64 = alloca i8, align 1
  %base_upper = alloca i32, align 4
  %max_offset_upper = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9404, metadata !DIExpression()), !dbg !9405
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9406, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !9408, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.declare(metadata i32* %ent_size, metadata !9410, metadata !DIExpression()), !dbg !9411
  call void @llvm.dbg.declare(metadata i32* %ent_offset, metadata !9412, metadata !DIExpression()), !dbg !9413
  %0 = load i32, i32* %offset.addr, align 4, !dbg !9414
  store i32 %0, i32* %ent_offset, align 4, !dbg !9413
  call void @llvm.dbg.declare(metadata i64* %start, metadata !9415, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.declare(metadata i64* %end, metadata !9417, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9419, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.declare(metadata i32* %dw0, metadata !9421, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.declare(metadata i32* %bei, metadata !9423, metadata !DIExpression()), !dbg !9424
  call void @llvm.dbg.declare(metadata i32* %base, metadata !9425, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.declare(metadata i32* %max_offset, metadata !9427, metadata !DIExpression()), !dbg !9428
  call void @llvm.dbg.declare(metadata i8* %prop, metadata !9429, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.declare(metadata i8* %support_64, metadata !9431, metadata !DIExpression()), !dbg !9432
  store i8 1, i8* %support_64, align 1, !dbg !9432
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9433
  %2 = load i32, i32* %ent_offset, align 4, !dbg !9434
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %1, i32 %2, i32* %dw0) #11, !dbg !9435
  %3 = load i32, i32* %ent_offset, align 4, !dbg !9436
  %add = add i32 %3, 4, !dbg !9436
  store i32 %add, i32* %ent_offset, align 4, !dbg !9436
  %4 = load i32, i32* %dw0, align 4, !dbg !9437
  %and = and i32 %4, 7, !dbg !9438
  %add1 = add i32 %and, 1, !dbg !9439
  %shl = shl i32 %add1, 2, !dbg !9440
  store i32 %shl, i32* %ent_size, align 4, !dbg !9441
  %5 = load i32, i32* %dw0, align 4, !dbg !9442
  %and2 = and i32 %5, -2147483648, !dbg !9444
  %tobool = icmp ne i32 %and2, 0, !dbg !9444
  br i1 %tobool, label %if.end, label %if.then, !dbg !9445

if.then:                                          ; preds = %entry
  br label %out, !dbg !9446

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %dw0, align 4, !dbg !9447
  %and3 = and i32 %6, 240, !dbg !9448
  %shr = lshr i32 %and3, 4, !dbg !9449
  store i32 %shr, i32* %bei, align 4, !dbg !9450
  %7 = load i32, i32* %dw0, align 4, !dbg !9451
  %and4 = and i32 %7, 65280, !dbg !9452
  %shr5 = lshr i32 %and4, 8, !dbg !9453
  %conv = trunc i32 %shr5 to i8, !dbg !9454
  store i8 %conv, i8* %prop, align 1, !dbg !9455
  %8 = load i8, i8* %prop, align 1, !dbg !9456
  %conv6 = zext i8 %8 to i32, !dbg !9456
  %cmp = icmp sgt i32 %conv6, 7, !dbg !9458
  br i1 %cmp, label %land.lhs.true, label %if.end15, !dbg !9459

land.lhs.true:                                    ; preds = %if.end
  %9 = load i8, i8* %prop, align 1, !dbg !9460
  %conv8 = zext i8 %9 to i32, !dbg !9460
  %cmp9 = icmp slt i32 %conv8, 253, !dbg !9461
  br i1 %cmp9, label %if.then11, label %if.end15, !dbg !9462

if.then11:                                        ; preds = %land.lhs.true
  %10 = load i32, i32* %dw0, align 4, !dbg !9463
  %and12 = and i32 %10, 16711680, !dbg !9464
  %shr13 = lshr i32 %and12, 16, !dbg !9465
  %conv14 = trunc i32 %shr13 to i8, !dbg !9466
  store i8 %conv14, i8* %prop, align 1, !dbg !9467
  br label %if.end15, !dbg !9468

if.end15:                                         ; preds = %if.then11, %land.lhs.true, %if.end
  %11 = load i8, i8* %prop, align 1, !dbg !9469
  %conv16 = zext i8 %11 to i32, !dbg !9469
  %cmp17 = icmp sgt i32 %conv16, 7, !dbg !9471
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !9472

if.then19:                                        ; preds = %if.end15
  br label %out, !dbg !9473

if.end20:                                         ; preds = %if.end15
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9474
  %13 = load i32, i32* %bei, align 4, !dbg !9475
  %conv21 = trunc i32 %13 to i8, !dbg !9475
  %14 = load i8, i8* %prop, align 1, !dbg !9476
  %call22 = call %struct.resource* @pci_ea_get_resource(%struct.pci_dev* %12, i8 zeroext %conv21, i8 zeroext %14) #11, !dbg !9477
  store %struct.resource* %call22, %struct.resource** %res, align 8, !dbg !9478
  %15 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9479
  %tobool23 = icmp ne %struct.resource* %15, null, !dbg !9479
  br i1 %tobool23, label %if.end26, label %if.then24, !dbg !9481

if.then24:                                        ; preds = %if.end20
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9482
  %dev25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 41, !dbg !9482
  %17 = load i32, i32* %bei, align 4, !dbg !9482
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev25, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 %17) #12, !dbg !9482
  br label %out, !dbg !9484

if.end26:                                         ; preds = %if.end20
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9485
  %19 = load i8, i8* %prop, align 1, !dbg !9486
  %call27 = call i64 @pci_ea_flags(%struct.pci_dev* %18, i8 zeroext %19) #11, !dbg !9487
  store i64 %call27, i64* %flags, align 8, !dbg !9488
  %20 = load i64, i64* %flags, align 8, !dbg !9489
  %tobool28 = icmp ne i64 %20, 0, !dbg !9489
  br i1 %tobool28, label %if.end32, label %if.then29, !dbg !9491

if.then29:                                        ; preds = %if.end26
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9492
  %dev30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 41, !dbg !9492
  %22 = load i8, i8* %prop, align 1, !dbg !9492
  %conv31 = zext i8 %22 to i32, !dbg !9492
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev30, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.62, i64 0, i64 0), i32 %conv31) #12, !dbg !9492
  br label %out, !dbg !9494

if.end32:                                         ; preds = %if.end26
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9495
  %24 = load i32, i32* %ent_offset, align 4, !dbg !9496
  %call33 = call i32 @pci_read_config_dword(%struct.pci_dev* %23, i32 %24, i32* %base) #11, !dbg !9497
  %25 = load i32, i32* %base, align 4, !dbg !9498
  %and34 = and i32 %25, -4, !dbg !9499
  %conv35 = zext i32 %and34 to i64, !dbg !9500
  store i64 %conv35, i64* %start, align 8, !dbg !9501
  %26 = load i32, i32* %ent_offset, align 4, !dbg !9502
  %add36 = add i32 %26, 4, !dbg !9502
  store i32 %add36, i32* %ent_offset, align 4, !dbg !9502
  %27 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9503
  %28 = load i32, i32* %ent_offset, align 4, !dbg !9504
  %call37 = call i32 @pci_read_config_dword(%struct.pci_dev* %27, i32 %28, i32* %max_offset) #11, !dbg !9505
  %29 = load i32, i32* %ent_offset, align 4, !dbg !9506
  %add38 = add i32 %29, 4, !dbg !9506
  store i32 %add38, i32* %ent_offset, align 4, !dbg !9506
  %30 = load i32, i32* %base, align 4, !dbg !9507
  %and39 = and i32 %30, 2, !dbg !9509
  %tobool40 = icmp ne i32 %and39, 0, !dbg !9509
  br i1 %tobool40, label %if.then41, label %if.end55, !dbg !9510

if.then41:                                        ; preds = %if.end32
  call void @llvm.dbg.declare(metadata i32* %base_upper, metadata !9511, metadata !DIExpression()), !dbg !9513
  %31 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9514
  %32 = load i32, i32* %ent_offset, align 4, !dbg !9515
  %call42 = call i32 @pci_read_config_dword(%struct.pci_dev* %31, i32 %32, i32* %base_upper) #11, !dbg !9516
  %33 = load i32, i32* %ent_offset, align 4, !dbg !9517
  %add43 = add i32 %33, 4, !dbg !9517
  store i32 %add43, i32* %ent_offset, align 4, !dbg !9517
  %34 = load i64, i64* %flags, align 8, !dbg !9518
  %or = or i64 %34, 1048576, !dbg !9518
  store i64 %or, i64* %flags, align 8, !dbg !9518
  %35 = load i8, i8* %support_64, align 1, !dbg !9519
  %tobool44 = trunc i8 %35 to i1, !dbg !9519
  br i1 %tobool44, label %if.end48, label %land.lhs.true45, !dbg !9521

land.lhs.true45:                                  ; preds = %if.then41
  %36 = load i32, i32* %base_upper, align 4, !dbg !9522
  %tobool46 = icmp ne i32 %36, 0, !dbg !9522
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !9523

if.then47:                                        ; preds = %land.lhs.true45
  br label %out, !dbg !9524

if.end48:                                         ; preds = %land.lhs.true45, %if.then41
  %37 = load i8, i8* %support_64, align 1, !dbg !9525
  %tobool49 = trunc i8 %37 to i1, !dbg !9525
  br i1 %tobool49, label %if.then50, label %if.end54, !dbg !9527

if.then50:                                        ; preds = %if.end48
  %38 = load i32, i32* %base_upper, align 4, !dbg !9528
  %conv51 = zext i32 %38 to i64, !dbg !9529
  %shl52 = shl i64 %conv51, 32, !dbg !9530
  %39 = load i64, i64* %start, align 8, !dbg !9531
  %or53 = or i64 %39, %shl52, !dbg !9531
  store i64 %or53, i64* %start, align 8, !dbg !9531
  br label %if.end54, !dbg !9532

if.end54:                                         ; preds = %if.then50, %if.end48
  br label %if.end55, !dbg !9533

if.end55:                                         ; preds = %if.end54, %if.end32
  %40 = load i64, i64* %start, align 8, !dbg !9534
  %41 = load i32, i32* %max_offset, align 4, !dbg !9535
  %or56 = or i32 %41, 3, !dbg !9536
  %conv57 = zext i32 %or56 to i64, !dbg !9537
  %add58 = add i64 %40, %conv57, !dbg !9538
  store i64 %add58, i64* %end, align 8, !dbg !9539
  %42 = load i32, i32* %max_offset, align 4, !dbg !9540
  %and59 = and i32 %42, 2, !dbg !9542
  %tobool60 = icmp ne i32 %and59, 0, !dbg !9542
  br i1 %tobool60, label %if.then61, label %if.end76, !dbg !9543

if.then61:                                        ; preds = %if.end55
  call void @llvm.dbg.declare(metadata i32* %max_offset_upper, metadata !9544, metadata !DIExpression()), !dbg !9546
  %43 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9547
  %44 = load i32, i32* %ent_offset, align 4, !dbg !9548
  %call62 = call i32 @pci_read_config_dword(%struct.pci_dev* %43, i32 %44, i32* %max_offset_upper) #11, !dbg !9549
  %45 = load i32, i32* %ent_offset, align 4, !dbg !9550
  %add63 = add i32 %45, 4, !dbg !9550
  store i32 %add63, i32* %ent_offset, align 4, !dbg !9550
  %46 = load i64, i64* %flags, align 8, !dbg !9551
  %or64 = or i64 %46, 1048576, !dbg !9551
  store i64 %or64, i64* %flags, align 8, !dbg !9551
  %47 = load i8, i8* %support_64, align 1, !dbg !9552
  %tobool65 = trunc i8 %47 to i1, !dbg !9552
  br i1 %tobool65, label %if.end69, label %land.lhs.true66, !dbg !9554

land.lhs.true66:                                  ; preds = %if.then61
  %48 = load i32, i32* %max_offset_upper, align 4, !dbg !9555
  %tobool67 = icmp ne i32 %48, 0, !dbg !9555
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !9556

if.then68:                                        ; preds = %land.lhs.true66
  br label %out, !dbg !9557

if.end69:                                         ; preds = %land.lhs.true66, %if.then61
  %49 = load i8, i8* %support_64, align 1, !dbg !9558
  %tobool70 = trunc i8 %49 to i1, !dbg !9558
  br i1 %tobool70, label %if.then71, label %if.end75, !dbg !9560

if.then71:                                        ; preds = %if.end69
  %50 = load i32, i32* %max_offset_upper, align 4, !dbg !9561
  %conv72 = zext i32 %50 to i64, !dbg !9562
  %shl73 = shl i64 %conv72, 32, !dbg !9563
  %51 = load i64, i64* %end, align 8, !dbg !9564
  %add74 = add i64 %51, %shl73, !dbg !9564
  store i64 %add74, i64* %end, align 8, !dbg !9564
  br label %if.end75, !dbg !9565

if.end75:                                         ; preds = %if.then71, %if.end69
  br label %if.end76, !dbg !9566

if.end76:                                         ; preds = %if.end75, %if.end55
  %52 = load i64, i64* %end, align 8, !dbg !9567
  %53 = load i64, i64* %start, align 8, !dbg !9569
  %cmp77 = icmp ult i64 %52, %53, !dbg !9570
  br i1 %cmp77, label %if.then79, label %if.end81, !dbg !9571

if.then79:                                        ; preds = %if.end76
  %54 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9572
  %dev80 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 41, !dbg !9572
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev80, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63, i64 0, i64 0)) #12, !dbg !9572
  br label %out, !dbg !9574

if.end81:                                         ; preds = %if.end76
  %55 = load i32, i32* %ent_size, align 4, !dbg !9575
  %56 = load i32, i32* %ent_offset, align 4, !dbg !9577
  %57 = load i32, i32* %offset.addr, align 4, !dbg !9578
  %sub = sub i32 %56, %57, !dbg !9579
  %cmp82 = icmp ne i32 %55, %sub, !dbg !9580
  br i1 %cmp82, label %if.then84, label %if.end87, !dbg !9581

if.then84:                                        ; preds = %if.end81
  %58 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9582
  %dev85 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %58, i32 0, i32 41, !dbg !9582
  %59 = load i32, i32* %ent_size, align 4, !dbg !9582
  %60 = load i32, i32* %ent_offset, align 4, !dbg !9582
  %61 = load i32, i32* %offset.addr, align 4, !dbg !9582
  %sub86 = sub i32 %60, %61, !dbg !9582
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev85, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.64, i64 0, i64 0), i32 %59, i32 %sub86) #12, !dbg !9582
  br label %out, !dbg !9584

if.end87:                                         ; preds = %if.end81
  %62 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9585
  %call88 = call i8* @pci_name(%struct.pci_dev* %62) #11, !dbg !9586
  %63 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9587
  %name = getelementptr inbounds %struct.resource, %struct.resource* %63, i32 0, i32 2, !dbg !9588
  store i8* %call88, i8** %name, align 8, !dbg !9589
  %64 = load i64, i64* %start, align 8, !dbg !9590
  %65 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9591
  %start89 = getelementptr inbounds %struct.resource, %struct.resource* %65, i32 0, i32 0, !dbg !9592
  store i64 %64, i64* %start89, align 8, !dbg !9593
  %66 = load i64, i64* %end, align 8, !dbg !9594
  %67 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9595
  %end90 = getelementptr inbounds %struct.resource, %struct.resource* %67, i32 0, i32 1, !dbg !9596
  store i64 %66, i64* %end90, align 8, !dbg !9597
  %68 = load i64, i64* %flags, align 8, !dbg !9598
  %69 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9599
  %flags91 = getelementptr inbounds %struct.resource, %struct.resource* %69, i32 0, i32 3, !dbg !9600
  store i64 %68, i64* %flags91, align 8, !dbg !9601
  %70 = load i32, i32* %bei, align 4, !dbg !9602
  %cmp92 = icmp ule i32 %70, 5, !dbg !9604
  br i1 %cmp92, label %if.then94, label %if.else, !dbg !9605

if.then94:                                        ; preds = %if.end87
  %71 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9606
  %dev95 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %71, i32 0, i32 41, !dbg !9606
  %72 = load i32, i32* %bei, align 4, !dbg !9606
  %73 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9606
  %74 = load i8, i8* %prop, align 1, !dbg !9606
  %conv96 = zext i8 %74 to i32, !dbg !9606
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev95, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i64 0, i64 0), i32 %72, %struct.resource* %73, i32 %conv96) #12, !dbg !9606
  br label %if.end117, !dbg !9606

if.else:                                          ; preds = %if.end87
  %75 = load i32, i32* %bei, align 4, !dbg !9607
  %cmp97 = icmp eq i32 %75, 8, !dbg !9609
  br i1 %cmp97, label %if.then99, label %if.else102, !dbg !9610

if.then99:                                        ; preds = %if.else
  %76 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9611
  %dev100 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %76, i32 0, i32 41, !dbg !9611
  %77 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9611
  %78 = load i8, i8* %prop, align 1, !dbg !9611
  %conv101 = zext i8 %78 to i32, !dbg !9611
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev100, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.66, i64 0, i64 0), %struct.resource* %77, i32 %conv101) #12, !dbg !9611
  br label %if.end116, !dbg !9611

if.else102:                                       ; preds = %if.else
  %79 = load i32, i32* %bei, align 4, !dbg !9612
  %cmp103 = icmp uge i32 %79, 9, !dbg !9614
  br i1 %cmp103, label %land.lhs.true105, label %if.else112, !dbg !9615

land.lhs.true105:                                 ; preds = %if.else102
  %80 = load i32, i32* %bei, align 4, !dbg !9616
  %cmp106 = icmp ule i32 %80, 14, !dbg !9617
  br i1 %cmp106, label %if.then108, label %if.else112, !dbg !9618

if.then108:                                       ; preds = %land.lhs.true105
  %81 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9619
  %dev109 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %81, i32 0, i32 41, !dbg !9619
  %82 = load i32, i32* %bei, align 4, !dbg !9619
  %sub110 = sub i32 %82, 9, !dbg !9619
  %83 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9619
  %84 = load i8, i8* %prop, align 1, !dbg !9619
  %conv111 = zext i8 %84 to i32, !dbg !9619
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev109, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.67, i64 0, i64 0), i32 %sub110, %struct.resource* %83, i32 %conv111) #12, !dbg !9619
  br label %if.end115, !dbg !9619

if.else112:                                       ; preds = %land.lhs.true105, %if.else102
  %85 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9620
  %dev113 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %85, i32 0, i32 41, !dbg !9620
  %86 = load i32, i32* %bei, align 4, !dbg !9620
  %87 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9620
  %88 = load i8, i8* %prop, align 1, !dbg !9620
  %conv114 = zext i8 %88 to i32, !dbg !9620
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev113, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.68, i64 0, i64 0), i32 %86, %struct.resource* %87, i32 %conv114) #12, !dbg !9620
  br label %if.end115

if.end115:                                        ; preds = %if.else112, %if.then108
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.then99
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.then94
  br label %out, !dbg !9621

out:                                              ; preds = %if.end117, %if.then84, %if.then79, %if.then68, %if.then47, %if.then29, %if.then24, %if.then19, %if.then
  call void @llvm.dbg.label(metadata !9622), !dbg !9623
  %89 = load i32, i32* %offset.addr, align 4, !dbg !9624
  %90 = load i32, i32* %ent_size, align 4, !dbg !9625
  %add118 = add i32 %89, %90, !dbg !9626
  ret i32 %add118, !dbg !9627
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_add_cap_save_buffer(%struct.pci_dev* %dev, i8 signext %cap, i32 %size) #0 !dbg !9628 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cap.addr = alloca i8, align 1
  %size.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9631, metadata !DIExpression()), !dbg !9632
  store i8 %cap, i8* %cap.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cap.addr, metadata !9633, metadata !DIExpression()), !dbg !9634
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9635, metadata !DIExpression()), !dbg !9636
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9637
  %1 = load i8, i8* %cap.addr, align 1, !dbg !9638
  %conv = sext i8 %1 to i16, !dbg !9638
  %2 = load i32, i32* %size.addr, align 4, !dbg !9639
  %call = call i32 @_pci_add_cap_save_buffer(%struct.pci_dev* %0, i16 zeroext %conv, i1 zeroext false, i32 %2) #11, !dbg !9640
  ret i32 %call, !dbg !9641
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_pci_add_cap_save_buffer(%struct.pci_dev* %dev, i16 zeroext %cap, i1 zeroext %extended, i32 %size) #0 !dbg !9642 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cap.addr = alloca i16, align 2
  %extended.addr = alloca i8, align 1
  %size.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %save_state = alloca %struct.pci_cap_saved_state*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9645, metadata !DIExpression()), !dbg !9646
  store i16 %cap, i16* %cap.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cap.addr, metadata !9647, metadata !DIExpression()), !dbg !9648
  %frombool = zext i1 %extended to i8
  store i8 %frombool, i8* %extended.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %extended.addr, metadata !9649, metadata !DIExpression()), !dbg !9650
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9651, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !9653, metadata !DIExpression()), !dbg !9654
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_state** %save_state, metadata !9655, metadata !DIExpression()), !dbg !9656
  %0 = load i8, i8* %extended.addr, align 1, !dbg !9657
  %tobool = trunc i8 %0 to i1, !dbg !9657
  br i1 %tobool, label %if.then, label %if.else, !dbg !9659

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9660
  %2 = load i16, i16* %cap.addr, align 2, !dbg !9661
  %conv = zext i16 %2 to i32, !dbg !9661
  %call = call i32 @pci_find_ext_capability(%struct.pci_dev* %1, i32 %conv) #11, !dbg !9662
  store i32 %call, i32* %pos, align 4, !dbg !9663
  br label %if.end, !dbg !9664

if.else:                                          ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9665
  %4 = load i16, i16* %cap.addr, align 2, !dbg !9666
  %conv1 = zext i16 %4 to i32, !dbg !9666
  %call2 = call i32 @pci_find_capability(%struct.pci_dev* %3, i32 %conv1) #11, !dbg !9667
  store i32 %call2, i32* %pos, align 4, !dbg !9668
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %pos, align 4, !dbg !9669
  %tobool3 = icmp ne i32 %5, 0, !dbg !9669
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !9671

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9672
  br label %return, !dbg !9672

if.end5:                                          ; preds = %if.end
  %6 = load i32, i32* %size.addr, align 4, !dbg !9673
  %conv6 = zext i32 %6 to i64, !dbg !9673
  %add = add i64 24, %conv6, !dbg !9674
  %call7 = call i8* @kzalloc(i64 %add, i32 3264) #11, !dbg !9675
  %7 = bitcast i8* %call7 to %struct.pci_cap_saved_state*, !dbg !9675
  store %struct.pci_cap_saved_state* %7, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !9676
  %8 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !9677
  %tobool8 = icmp ne %struct.pci_cap_saved_state* %8, null, !dbg !9677
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !9679

if.then9:                                         ; preds = %if.end5
  store i32 -12, i32* %retval, align 4, !dbg !9680
  br label %return, !dbg !9680

if.end10:                                         ; preds = %if.end5
  %9 = load i16, i16* %cap.addr, align 2, !dbg !9681
  %10 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !9682
  %cap11 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %10, i32 0, i32 1, !dbg !9683
  %cap_nr = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap11, i32 0, i32 0, !dbg !9684
  store i16 %9, i16* %cap_nr, align 8, !dbg !9685
  %11 = load i8, i8* %extended.addr, align 1, !dbg !9686
  %tobool12 = trunc i8 %11 to i1, !dbg !9686
  %12 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !9687
  %cap13 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %12, i32 0, i32 1, !dbg !9688
  %cap_extended = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap13, i32 0, i32 1, !dbg !9689
  %frombool14 = zext i1 %tobool12 to i8, !dbg !9690
  store i8 %frombool14, i8* %cap_extended, align 2, !dbg !9690
  %13 = load i32, i32* %size.addr, align 4, !dbg !9691
  %14 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !9692
  %cap15 = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %14, i32 0, i32 1, !dbg !9693
  %size16 = getelementptr inbounds %struct.pci_cap_saved_data, %struct.pci_cap_saved_data* %cap15, i32 0, i32 2, !dbg !9694
  store i32 %13, i32* %size16, align 4, !dbg !9695
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9696
  %16 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %save_state, align 8, !dbg !9697
  call void @pci_add_saved_cap(%struct.pci_dev* %15, %struct.pci_cap_saved_state* %16) #11, !dbg !9698
  store i32 0, i32* %retval, align 4, !dbg !9699
  br label %return, !dbg !9699

return:                                           ; preds = %if.end10, %if.then9, %if.then4
  %17 = load i32, i32* %retval, align 4, !dbg !9700
  ret i32 %17, !dbg !9700
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_add_ext_cap_save_buffer(%struct.pci_dev* %dev, i16 zeroext %cap, i32 %size) #0 !dbg !9701 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cap.addr = alloca i16, align 2
  %size.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9704, metadata !DIExpression()), !dbg !9705
  store i16 %cap, i16* %cap.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cap.addr, metadata !9706, metadata !DIExpression()), !dbg !9707
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9708, metadata !DIExpression()), !dbg !9709
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9710
  %1 = load i16, i16* %cap.addr, align 2, !dbg !9711
  %2 = load i32, i32* %size.addr, align 4, !dbg !9712
  %call = call i32 @_pci_add_cap_save_buffer(%struct.pci_dev* %0, i16 zeroext %1, i1 zeroext true, i32 %2) #11, !dbg !9713
  ret i32 %call, !dbg !9714
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_allocate_cap_save_buffers(%struct.pci_dev* %dev) #0 !dbg !9715 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %error = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9716, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.declare(metadata i32* %error, metadata !9718, metadata !DIExpression()), !dbg !9719
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9720
  %call = call i32 @pci_add_cap_save_buffer(%struct.pci_dev* %0, i8 signext 16, i32 14) #11, !dbg !9721
  store i32 %call, i32* %error, align 4, !dbg !9722
  %1 = load i32, i32* %error, align 4, !dbg !9723
  %tobool = icmp ne i32 %1, 0, !dbg !9723
  br i1 %tobool, label %if.then, label %if.end, !dbg !9725

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9726
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !9726
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.21, i64 0, i64 0)) #12, !dbg !9726
  br label %if.end, !dbg !9726

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9727
  %call2 = call i32 @pci_add_cap_save_buffer(%struct.pci_dev* %3, i8 signext 7, i32 2) #11, !dbg !9728
  store i32 %call2, i32* %error, align 4, !dbg !9729
  %4 = load i32, i32* %error, align 4, !dbg !9730
  %tobool3 = icmp ne i32 %4, 0, !dbg !9730
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !9732

if.then4:                                         ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9733
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !9733
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #12, !dbg !9733
  br label %if.end6, !dbg !9733

if.end6:                                          ; preds = %if.then4, %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9734
  %call7 = call i32 @pci_add_ext_cap_save_buffer(%struct.pci_dev* %6, i16 zeroext 24, i32 4) #11, !dbg !9735
  store i32 %call7, i32* %error, align 4, !dbg !9736
  %7 = load i32, i32* %error, align 4, !dbg !9737
  %tobool8 = icmp ne i32 %7, 0, !dbg !9737
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !9739

if.then9:                                         ; preds = %if.end6
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9740
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !9740
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev10, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.23, i64 0, i64 0)) #12, !dbg !9740
  br label %if.end11, !dbg !9740

if.end11:                                         ; preds = %if.then9, %if.end6
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9741
  call void @pci_allocate_vc_save_buffers(%struct.pci_dev* %9) #11, !dbg !9742
  ret void, !dbg !9743
}

; Function Attrs: noredzone
declare dso_local void @pci_allocate_vc_save_buffers(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_free_cap_save_buffers(%struct.pci_dev* %dev) #0 !dbg !9744 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %tmp = alloca %struct.pci_cap_saved_state*, align 8
  %n = alloca %struct.hlist_node*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp1 = alloca %struct.pci_cap_saved_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp2 = alloca %struct.pci_cap_saved_state*, align 8
  %tmp5 = alloca i32, align 4
  %____ptr7 = alloca %struct.hlist_node*, align 8
  %tmp8 = alloca %struct.pci_cap_saved_state*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp14 = alloca %struct.pci_cap_saved_state*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9745, metadata !DIExpression()), !dbg !9746
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_state** %tmp, metadata !9747, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %n, metadata !9749, metadata !DIExpression()), !dbg !9750
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !9751, metadata !DIExpression()), !dbg !9754
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9754
  %saved_cap_space = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 51, !dbg !9754
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %saved_cap_space, i32 0, i32 0, !dbg !9754
  %1 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !9754
  store %struct.hlist_node* %1, %struct.hlist_node** %____ptr, align 8, !dbg !9754
  %2 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !9754
  %tobool = icmp ne %struct.hlist_node* %2, null, !dbg !9754
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9754

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9755, metadata !DIExpression()), !dbg !9757
  %3 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !9757
  %4 = bitcast %struct.hlist_node* %3 to i8*, !dbg !9757
  store i8* %4, i8** %__mptr, align 8, !dbg !9757
  br label %do.body, !dbg !9757

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !9758

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !9757
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !9757
  %6 = bitcast i8* %add.ptr to %struct.pci_cap_saved_state*, !dbg !9757
  store %struct.pci_cap_saved_state* %6, %struct.pci_cap_saved_state** %tmp2, align 8, !dbg !9758
  %7 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp2, align 8, !dbg !9757
  br label %cond.end, !dbg !9754

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9754

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.pci_cap_saved_state* [ %7, %do.end ], [ null, %cond.false ], !dbg !9754
  store %struct.pci_cap_saved_state* %cond, %struct.pci_cap_saved_state** %tmp1, align 8, !dbg !9754
  %8 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp1, align 8, !dbg !9754
  store %struct.pci_cap_saved_state* %8, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !9760
  br label %for.cond, !dbg !9760

for.cond:                                         ; preds = %cond.end17, %cond.end
  %9 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !9761
  %tobool3 = icmp ne %struct.pci_cap_saved_state* %9, null, !dbg !9761
  br i1 %tobool3, label %land.rhs, label %land.end, !dbg !9761

land.rhs:                                         ; preds = %for.cond
  %10 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !9763
  %next = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %10, i32 0, i32 0, !dbg !9763
  %next4 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %next, i32 0, i32 0, !dbg !9763
  %11 = load %struct.hlist_node*, %struct.hlist_node** %next4, align 8, !dbg !9763
  store %struct.hlist_node* %11, %struct.hlist_node** %n, align 8, !dbg !9763
  store i32 1, i32* %tmp5, align 4, !dbg !9763
  %12 = load i32, i32* %tmp5, align 4, !dbg !9763
  %tobool6 = icmp ne i32 %12, 0, !dbg !9761
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %13 = phi i1 [ false, %for.cond ], [ %tobool6, %land.rhs ], !dbg !9765
  br i1 %13, label %for.body, label %for.end, !dbg !9760

for.body:                                         ; preds = %land.end
  %14 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !9766
  %15 = bitcast %struct.pci_cap_saved_state* %14 to i8*, !dbg !9766
  call void @kfree(i8* %15) #11, !dbg !9767
  br label %for.inc, !dbg !9767

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr7, metadata !9768, metadata !DIExpression()), !dbg !9770
  %16 = load %struct.hlist_node*, %struct.hlist_node** %n, align 8, !dbg !9770
  store %struct.hlist_node* %16, %struct.hlist_node** %____ptr7, align 8, !dbg !9770
  %17 = load %struct.hlist_node*, %struct.hlist_node** %____ptr7, align 8, !dbg !9770
  %tobool9 = icmp ne %struct.hlist_node* %17, null, !dbg !9770
  br i1 %tobool9, label %cond.true10, label %cond.false16, !dbg !9770

cond.true10:                                      ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !9771, metadata !DIExpression()), !dbg !9773
  %18 = load %struct.hlist_node*, %struct.hlist_node** %____ptr7, align 8, !dbg !9773
  %19 = bitcast %struct.hlist_node* %18 to i8*, !dbg !9773
  store i8* %19, i8** %__mptr11, align 8, !dbg !9773
  br label %do.body12, !dbg !9773

do.body12:                                        ; preds = %cond.true10
  br label %do.end13, !dbg !9774

do.end13:                                         ; preds = %do.body12
  %20 = load i8*, i8** %__mptr11, align 8, !dbg !9773
  %add.ptr15 = getelementptr i8, i8* %20, i64 0, !dbg !9773
  %21 = bitcast i8* %add.ptr15 to %struct.pci_cap_saved_state*, !dbg !9773
  store %struct.pci_cap_saved_state* %21, %struct.pci_cap_saved_state** %tmp14, align 8, !dbg !9774
  %22 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp14, align 8, !dbg !9773
  br label %cond.end17, !dbg !9770

cond.false16:                                     ; preds = %for.inc
  br label %cond.end17, !dbg !9770

cond.end17:                                       ; preds = %cond.false16, %do.end13
  %cond18 = phi %struct.pci_cap_saved_state* [ %22, %do.end13 ], [ null, %cond.false16 ], !dbg !9770
  store %struct.pci_cap_saved_state* %cond18, %struct.pci_cap_saved_state** %tmp8, align 8, !dbg !9770
  %23 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %tmp8, align 8, !dbg !9770
  store %struct.pci_cap_saved_state* %23, %struct.pci_cap_saved_state** %tmp, align 8, !dbg !9761
  br label %for.cond, !dbg !9761, !llvm.loop !9776

for.end:                                          ; preds = %land.end
  ret void, !dbg !9778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_configure_ari(%struct.pci_dev* %dev) #0 !dbg !9779 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cap = alloca i32, align 4
  %bridge = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9780, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !9782, metadata !DIExpression()), !dbg !9783
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !9784, metadata !DIExpression()), !dbg !9785
  %0 = load i8, i8* @pcie_ari_disabled, align 1, !dbg !9786
  %tobool = trunc i8 %0 to i1, !dbg !9786
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9788

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9789
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %1) #11, !dbg !9790
  br i1 %call, label %lor.lhs.false1, label %if.then, !dbg !9791

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9792
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 6, !dbg !9793
  %3 = load i32, i32* %devfn, align 8, !dbg !9793
  %tobool2 = icmp ne i32 %3, 0, !dbg !9792
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9794

if.then:                                          ; preds = %lor.lhs.false1, %lor.lhs.false, %entry
  br label %if.end18, !dbg !9795

if.end:                                           ; preds = %lor.lhs.false1
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9796
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 1, !dbg !9797
  %5 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !9797
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 4, !dbg !9798
  %6 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !9798
  store %struct.pci_dev* %6, %struct.pci_dev** %bridge, align 8, !dbg !9799
  %7 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9800
  %tobool3 = icmp ne %struct.pci_dev* %7, null, !dbg !9800
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !9802

if.then4:                                         ; preds = %if.end
  br label %if.end18, !dbg !9803

if.end5:                                          ; preds = %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9804
  %call6 = call i32 @pcie_capability_read_dword(%struct.pci_dev* %8, i32 36, i32* %cap) #11, !dbg !9805
  %9 = load i32, i32* %cap, align 4, !dbg !9806
  %and = and i32 %9, 32, !dbg !9808
  %tobool7 = icmp ne i32 %and, 0, !dbg !9808
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !9809

if.then8:                                         ; preds = %if.end5
  br label %if.end18, !dbg !9810

if.end9:                                          ; preds = %if.end5
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9811
  %call10 = call i32 @pci_find_ext_capability(%struct.pci_dev* %10, i32 14) #11, !dbg !9813
  %tobool11 = icmp ne i32 %call10, 0, !dbg !9813
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !9814

if.then12:                                        ; preds = %if.end9
  %11 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9815
  %call13 = call i32 @pcie_capability_set_word(%struct.pci_dev* %11, i32 40, i16 zeroext 32) #11, !dbg !9817
  %12 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9818
  %ari_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 46, !dbg !9819
  %13 = bitcast [5 x i8]* %ari_enabled to i40*, !dbg !9819
  %bf.load = load i40, i40* %13, align 1, !dbg !9820
  %bf.clear = and i40 %bf.load, -16385, !dbg !9820
  %bf.set = or i40 %bf.clear, 16384, !dbg !9820
  store i40 %bf.set, i40* %13, align 1, !dbg !9820
  br label %if.end18, !dbg !9821

if.else:                                          ; preds = %if.end9
  %14 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9822
  %call14 = call i32 @pcie_capability_clear_word(%struct.pci_dev* %14, i32 40, i16 zeroext 32) #11, !dbg !9824
  %15 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !9825
  %ari_enabled15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 46, !dbg !9826
  %16 = bitcast [5 x i8]* %ari_enabled15 to i40*, !dbg !9826
  %bf.load16 = load i40, i40* %16, align 1, !dbg !9827
  %bf.clear17 = and i40 %bf.load16, -16385, !dbg !9827
  store i40 %bf.clear17, i40* %16, align 1, !dbg !9827
  br label %if.end18

if.end18:                                         ; preds = %if.then, %if.then4, %if.then8, %if.else, %if.then12
  ret void, !dbg !9828
}

; Function Attrs: noredzone
declare dso_local i32 @pcie_capability_read_dword(%struct.pci_dev*, i32, i32*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcie_capability_set_word(%struct.pci_dev* %dev, i32 %pos, i16 zeroext %set) #0 !dbg !9829 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos.addr = alloca i32, align 4
  %set.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9830, metadata !DIExpression()), !dbg !9831
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !9832, metadata !DIExpression()), !dbg !9833
  store i16 %set, i16* %set.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %set.addr, metadata !9834, metadata !DIExpression()), !dbg !9835
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9836
  %1 = load i32, i32* %pos.addr, align 4, !dbg !9837
  %2 = load i16, i16* %set.addr, align 2, !dbg !9838
  %call = call i32 @pcie_capability_clear_and_set_word(%struct.pci_dev* %0, i32 %1, i16 zeroext 0, i16 zeroext %2) #11, !dbg !9839
  ret i32 %call, !dbg !9840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcie_capability_clear_word(%struct.pci_dev* %dev, i32 %pos, i16 zeroext %clear) #0 !dbg !9841 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos.addr = alloca i32, align 4
  %clear.addr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9842, metadata !DIExpression()), !dbg !9843
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !9844, metadata !DIExpression()), !dbg !9845
  store i16 %clear, i16* %clear.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %clear.addr, metadata !9846, metadata !DIExpression()), !dbg !9847
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9848
  %1 = load i32, i32* %pos.addr, align 4, !dbg !9849
  %2 = load i16, i16* %clear.addr, align 2, !dbg !9850
  %call = call i32 @pcie_capability_clear_and_set_word(%struct.pci_dev* %0, i32 %1, i16 zeroext %2, i16 zeroext 0) #11, !dbg !9851
  ret i32 %call, !dbg !9852
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_acs_enabled(%struct.pci_dev* %pdev, i16 zeroext %acs_flags) #0 !dbg !9853 {
entry:
  %retval = alloca i1, align 1
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  %ret = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9856, metadata !DIExpression()), !dbg !9857
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !9858, metadata !DIExpression()), !dbg !9859
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9860, metadata !DIExpression()), !dbg !9861
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9862
  %1 = load i16, i16* %acs_flags.addr, align 2, !dbg !9863
  %call = call i32 @pci_dev_specific_acs_enabled(%struct.pci_dev* %0, i16 zeroext %1) #11, !dbg !9864
  store i32 %call, i32* %ret, align 4, !dbg !9865
  %2 = load i32, i32* %ret, align 4, !dbg !9866
  %cmp = icmp sge i32 %2, 0, !dbg !9868
  br i1 %cmp, label %if.then, label %if.end, !dbg !9869

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !9870
  %cmp1 = icmp sgt i32 %3, 0, !dbg !9871
  store i1 %cmp1, i1* %retval, align 1, !dbg !9872
  br label %return, !dbg !9872

if.end:                                           ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9873
  %call2 = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %4) #11, !dbg !9875
  br i1 %call2, label %if.end4, label %if.then3, !dbg !9876

if.then3:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !9877
  br label %return, !dbg !9877

if.end4:                                          ; preds = %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9878
  %call5 = call i32 @pci_pcie_type(%struct.pci_dev* %5) #11, !dbg !9879
  switch i32 %call5, label %sw.epilog [
    i32 8, label %sw.bb
    i32 7, label %sw.bb
    i32 10, label %sw.bb
    i32 6, label %sw.bb6
    i32 4, label %sw.bb6
    i32 0, label %sw.bb8
    i32 5, label %sw.bb8
    i32 1, label %sw.bb8
    i32 9, label %sw.bb8
  ], !dbg !9880

sw.bb:                                            ; preds = %if.end4, %if.end4, %if.end4
  store i1 false, i1* %retval, align 1, !dbg !9881
  br label %return, !dbg !9881

sw.bb6:                                           ; preds = %if.end4, %if.end4
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9883
  %7 = load i16, i16* %acs_flags.addr, align 2, !dbg !9884
  %call7 = call zeroext i1 @pci_acs_flags_enabled(%struct.pci_dev* %6, i16 zeroext %7) #11, !dbg !9885
  store i1 %call7, i1* %retval, align 1, !dbg !9886
  br label %return, !dbg !9886

sw.bb8:                                           ; preds = %if.end4, %if.end4, %if.end4, %if.end4
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9887
  %multifunction = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 46, !dbg !9889
  %9 = bitcast [5 x i8]* %multifunction to i40*, !dbg !9889
  %bf.load = load i40, i40* %9, align 1, !dbg !9889
  %bf.lshr = lshr i40 %bf.load, 4, !dbg !9889
  %bf.clear = and i40 %bf.lshr, 1, !dbg !9889
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !9889
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9887
  br i1 %tobool, label %if.end10, label %if.then9, !dbg !9890

if.then9:                                         ; preds = %sw.bb8
  br label %sw.epilog, !dbg !9891

if.end10:                                         ; preds = %sw.bb8
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9892
  %11 = load i16, i16* %acs_flags.addr, align 2, !dbg !9893
  %call11 = call zeroext i1 @pci_acs_flags_enabled(%struct.pci_dev* %10, i16 zeroext %11) #11, !dbg !9894
  store i1 %call11, i1* %retval, align 1, !dbg !9895
  br label %return, !dbg !9895

sw.epilog:                                        ; preds = %if.end4, %if.then9
  store i1 true, i1* %retval, align 1, !dbg !9896
  br label %return, !dbg !9896

return:                                           ; preds = %sw.epilog, %if.end10, %sw.bb6, %sw.bb, %if.then3, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !9897
  ret i1 %12, !dbg !9897
}

; Function Attrs: noredzone
declare dso_local i32 @pci_dev_specific_acs_enabled(%struct.pci_dev*, i16 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_acs_flags_enabled(%struct.pci_dev* %pdev, i16 zeroext %acs_flags) #0 !dbg !9898 {
entry:
  %retval = alloca i1, align 1
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  %pos = alloca i32, align 4
  %cap = alloca i16, align 2
  %ctrl = alloca i16, align 2
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9899, metadata !DIExpression()), !dbg !9900
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !9901, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !9903, metadata !DIExpression()), !dbg !9904
  call void @llvm.dbg.declare(metadata i16* %cap, metadata !9905, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !9907, metadata !DIExpression()), !dbg !9908
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9909
  %acs_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 63, !dbg !9910
  %1 = load i16, i16* %acs_cap, align 4, !dbg !9910
  %conv = zext i16 %1 to i32, !dbg !9909
  store i32 %conv, i32* %pos, align 4, !dbg !9911
  %2 = load i32, i32* %pos, align 4, !dbg !9912
  %tobool = icmp ne i32 %2, 0, !dbg !9912
  br i1 %tobool, label %if.end, label %if.then, !dbg !9914

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9915
  br label %return, !dbg !9915

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9916
  %4 = load i32, i32* %pos, align 4, !dbg !9917
  %add = add i32 %4, 4, !dbg !9918
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %3, i32 %add, i16* %cap) #11, !dbg !9919
  %5 = load i16, i16* %cap, align 2, !dbg !9920
  %conv1 = zext i16 %5 to i32, !dbg !9920
  %or = or i32 %conv1, 32, !dbg !9921
  %6 = load i16, i16* %acs_flags.addr, align 2, !dbg !9922
  %conv2 = zext i16 %6 to i32, !dbg !9922
  %and = and i32 %conv2, %or, !dbg !9922
  %conv3 = trunc i32 %and to i16, !dbg !9922
  store i16 %conv3, i16* %acs_flags.addr, align 2, !dbg !9922
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9923
  %8 = load i32, i32* %pos, align 4, !dbg !9924
  %add4 = add i32 %8, 6, !dbg !9925
  %call5 = call i32 @pci_read_config_word(%struct.pci_dev* %7, i32 %add4, i16* %ctrl) #11, !dbg !9926
  %9 = load i16, i16* %ctrl, align 2, !dbg !9927
  %conv6 = zext i16 %9 to i32, !dbg !9927
  %10 = load i16, i16* %acs_flags.addr, align 2, !dbg !9928
  %conv7 = zext i16 %10 to i32, !dbg !9928
  %and8 = and i32 %conv6, %conv7, !dbg !9929
  %11 = load i16, i16* %acs_flags.addr, align 2, !dbg !9930
  %conv9 = zext i16 %11 to i32, !dbg !9930
  %cmp = icmp eq i32 %and8, %conv9, !dbg !9931
  store i1 %cmp, i1* %retval, align 1, !dbg !9932
  br label %return, !dbg !9932

return:                                           ; preds = %if.end, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !9933
  ret i1 %12, !dbg !9933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_acs_path_enabled(%struct.pci_dev* %start, %struct.pci_dev* %end, i16 zeroext %acs_flags) #0 !dbg !9934 {
entry:
  %retval = alloca i1, align 1
  %start.addr = alloca %struct.pci_dev*, align 8
  %end.addr = alloca %struct.pci_dev*, align 8
  %acs_flags.addr = alloca i16, align 2
  %pdev = alloca %struct.pci_dev*, align 8
  %parent = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %start, %struct.pci_dev** %start.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %start.addr, metadata !9937, metadata !DIExpression()), !dbg !9938
  store %struct.pci_dev* %end, %struct.pci_dev** %end.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %end.addr, metadata !9939, metadata !DIExpression()), !dbg !9940
  store i16 %acs_flags, i16* %acs_flags.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %acs_flags.addr, metadata !9941, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !9943, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %parent, metadata !9945, metadata !DIExpression()), !dbg !9946
  %0 = load %struct.pci_dev*, %struct.pci_dev** %start.addr, align 8, !dbg !9947
  store %struct.pci_dev* %0, %struct.pci_dev** %parent, align 8, !dbg !9946
  br label %do.body, !dbg !9948

do.body:                                          ; preds = %do.cond, %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %parent, align 8, !dbg !9949
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !9951
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9952
  %3 = load i16, i16* %acs_flags.addr, align 2, !dbg !9954
  %call = call zeroext i1 @pci_acs_enabled(%struct.pci_dev* %2, i16 zeroext %3) #11, !dbg !9955
  br i1 %call, label %if.end, label %if.then, !dbg !9956

if.then:                                          ; preds = %do.body
  store i1 false, i1* %retval, align 1, !dbg !9957
  br label %return, !dbg !9957

if.end:                                           ; preds = %do.body
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9958
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 1, !dbg !9960
  %5 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !9960
  %call1 = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %5) #11, !dbg !9961
  br i1 %call1, label %if.then2, label %if.end3, !dbg !9962

if.then2:                                         ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %end.addr, align 8, !dbg !9963
  %cmp = icmp eq %struct.pci_dev* %6, null, !dbg !9964
  store i1 %cmp, i1* %retval, align 1, !dbg !9965
  br label %return, !dbg !9965

if.end3:                                          ; preds = %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9966
  %bus4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 1, !dbg !9967
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus4, align 8, !dbg !9967
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 4, !dbg !9968
  %9 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !9968
  store %struct.pci_dev* %9, %struct.pci_dev** %parent, align 8, !dbg !9969
  br label %do.cond, !dbg !9970

do.cond:                                          ; preds = %if.end3
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9971
  %11 = load %struct.pci_dev*, %struct.pci_dev** %end.addr, align 8, !dbg !9972
  %cmp5 = icmp ne %struct.pci_dev* %10, %11, !dbg !9973
  br i1 %cmp5, label %do.body, label %do.end, !dbg !9970, !llvm.loop !9974

do.end:                                           ; preds = %do.cond
  store i1 true, i1* %retval, align 1, !dbg !9976
  br label %return, !dbg !9976

return:                                           ; preds = %do.end, %if.then2, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !9977
  ret i1 %12, !dbg !9977
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_is_root_bus(%struct.pci_bus* %pbus) #0 !dbg !9978 {
entry:
  %pbus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %pbus, %struct.pci_bus** %pbus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %pbus.addr, metadata !9981, metadata !DIExpression()), !dbg !9982
  %0 = load %struct.pci_bus*, %struct.pci_bus** %pbus.addr, align 8, !dbg !9983
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 1, !dbg !9984
  %1 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !9984
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !9985
  %lnot = xor i1 %tobool, true, !dbg !9985
  ret i1 %lnot, !dbg !9986
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_acs_init(%struct.pci_dev* %dev) #0 !dbg !9987 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9988, metadata !DIExpression()), !dbg !9989
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9990
  %call = call i32 @pci_find_ext_capability(%struct.pci_dev* %0, i32 13) #11, !dbg !9991
  %conv = trunc i32 %call to i16, !dbg !9991
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9992
  %acs_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 63, !dbg !9993
  store i16 %conv, i16* %acs_cap, align 4, !dbg !9994
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9995
  call void @pci_enable_acs(%struct.pci_dev* %2) #11, !dbg !9996
  ret void, !dbg !9997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_rebar_get_possible_sizes(%struct.pci_dev* %pdev, i32 %bar) #0 !dbg !9998 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bar.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %cap = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10001, metadata !DIExpression()), !dbg !10002
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !10003, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !10005, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !10007, metadata !DIExpression()), !dbg !10008
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10009
  %1 = load i32, i32* %bar.addr, align 4, !dbg !10010
  %call = call i32 @pci_rebar_find_pos(%struct.pci_dev* %0, i32 %1) #11, !dbg !10011
  store i32 %call, i32* %pos, align 4, !dbg !10012
  %2 = load i32, i32* %pos, align 4, !dbg !10013
  %cmp = icmp slt i32 %2, 0, !dbg !10015
  br i1 %cmp, label %if.then, label %if.end, !dbg !10016

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10017
  br label %return, !dbg !10017

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10018
  %4 = load i32, i32* %pos, align 4, !dbg !10019
  %add = add i32 %4, 4, !dbg !10020
  %call1 = call i32 @pci_read_config_dword(%struct.pci_dev* %3, i32 %add, i32* %cap) #11, !dbg !10021
  %5 = load i32, i32* %cap, align 4, !dbg !10022
  %and = and i32 %5, 16777200, !dbg !10023
  %shr = lshr i32 %and, 4, !dbg !10024
  store i32 %shr, i32* %retval, align 4, !dbg !10025
  br label %return, !dbg !10025

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !10026
  ret i32 %6, !dbg !10026
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_rebar_find_pos(%struct.pci_dev* %pdev, i32 %bar) #0 !dbg !10027 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bar.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %nbars = alloca i32, align 4
  %i = alloca i32, align 4
  %ctrl = alloca i32, align 4
  %bar_idx = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10028, metadata !DIExpression()), !dbg !10029
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !10030, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !10032, metadata !DIExpression()), !dbg !10033
  call void @llvm.dbg.declare(metadata i32* %nbars, metadata !10034, metadata !DIExpression()), !dbg !10035
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10036, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !10038, metadata !DIExpression()), !dbg !10039
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10040
  %call = call i32 @pci_find_ext_capability(%struct.pci_dev* %0, i32 21) #11, !dbg !10041
  store i32 %call, i32* %pos, align 4, !dbg !10042
  %1 = load i32, i32* %pos, align 4, !dbg !10043
  %tobool = icmp ne i32 %1, 0, !dbg !10043
  br i1 %tobool, label %if.end, label %if.then, !dbg !10045

if.then:                                          ; preds = %entry
  store i32 -524, i32* %retval, align 4, !dbg !10046
  br label %return, !dbg !10046

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10047
  %3 = load i32, i32* %pos, align 4, !dbg !10048
  %add = add i32 %3, 8, !dbg !10049
  %call1 = call i32 @pci_read_config_dword(%struct.pci_dev* %2, i32 %add, i32* %ctrl) #11, !dbg !10050
  %4 = load i32, i32* %ctrl, align 4, !dbg !10051
  %and = and i32 %4, 224, !dbg !10052
  %shr = lshr i32 %and, 5, !dbg !10053
  store i32 %shr, i32* %nbars, align 4, !dbg !10054
  store i32 0, i32* %i, align 4, !dbg !10055
  br label %for.cond, !dbg !10057

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !10058
  %6 = load i32, i32* %nbars, align 4, !dbg !10060
  %cmp = icmp ult i32 %5, %6, !dbg !10061
  br i1 %cmp, label %for.body, label %for.end, !dbg !10062

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %bar_idx, metadata !10063, metadata !DIExpression()), !dbg !10065
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10066
  %8 = load i32, i32* %pos, align 4, !dbg !10067
  %add2 = add i32 %8, 8, !dbg !10068
  %call3 = call i32 @pci_read_config_dword(%struct.pci_dev* %7, i32 %add2, i32* %ctrl) #11, !dbg !10069
  %9 = load i32, i32* %ctrl, align 4, !dbg !10070
  %and4 = and i32 %9, 7, !dbg !10071
  store i32 %and4, i32* %bar_idx, align 4, !dbg !10072
  %10 = load i32, i32* %bar_idx, align 4, !dbg !10073
  %11 = load i32, i32* %bar.addr, align 4, !dbg !10075
  %cmp5 = icmp eq i32 %10, %11, !dbg !10076
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10077

if.then6:                                         ; preds = %for.body
  %12 = load i32, i32* %pos, align 4, !dbg !10078
  store i32 %12, i32* %retval, align 4, !dbg !10079
  br label %return, !dbg !10079

if.end7:                                          ; preds = %for.body
  br label %for.inc, !dbg !10080

for.inc:                                          ; preds = %if.end7
  %13 = load i32, i32* %i, align 4, !dbg !10081
  %inc = add i32 %13, 1, !dbg !10081
  store i32 %inc, i32* %i, align 4, !dbg !10081
  %14 = load i32, i32* %pos, align 4, !dbg !10082
  %add8 = add i32 %14, 8, !dbg !10082
  store i32 %add8, i32* %pos, align 4, !dbg !10082
  br label %for.cond, !dbg !10083, !llvm.loop !10084

for.end:                                          ; preds = %for.cond
  store i32 -2, i32* %retval, align 4, !dbg !10086
  br label %return, !dbg !10086

return:                                           ; preds = %for.end, %if.then6, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !10087
  ret i32 %15, !dbg !10087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_rebar_get_current_size(%struct.pci_dev* %pdev, i32 %bar) #0 !dbg !10088 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bar.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %ctrl = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10089, metadata !DIExpression()), !dbg !10090
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !10091, metadata !DIExpression()), !dbg !10092
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !10093, metadata !DIExpression()), !dbg !10094
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !10095, metadata !DIExpression()), !dbg !10096
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10097
  %1 = load i32, i32* %bar.addr, align 4, !dbg !10098
  %call = call i32 @pci_rebar_find_pos(%struct.pci_dev* %0, i32 %1) #11, !dbg !10099
  store i32 %call, i32* %pos, align 4, !dbg !10100
  %2 = load i32, i32* %pos, align 4, !dbg !10101
  %cmp = icmp slt i32 %2, 0, !dbg !10103
  br i1 %cmp, label %if.then, label %if.end, !dbg !10104

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %pos, align 4, !dbg !10105
  store i32 %3, i32* %retval, align 4, !dbg !10106
  br label %return, !dbg !10106

if.end:                                           ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10107
  %5 = load i32, i32* %pos, align 4, !dbg !10108
  %add = add i32 %5, 8, !dbg !10109
  %call1 = call i32 @pci_read_config_dword(%struct.pci_dev* %4, i32 %add, i32* %ctrl) #11, !dbg !10110
  %6 = load i32, i32* %ctrl, align 4, !dbg !10111
  %and = and i32 %6, 7936, !dbg !10112
  %shr = lshr i32 %and, 8, !dbg !10113
  store i32 %shr, i32* %retval, align 4, !dbg !10114
  br label %return, !dbg !10114

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !10115
  ret i32 %7, !dbg !10115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_rebar_set_size(%struct.pci_dev* %pdev, i32 %bar, i32 %size) #0 !dbg !10116 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bar.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %ctrl = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10117, metadata !DIExpression()), !dbg !10118
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !10119, metadata !DIExpression()), !dbg !10120
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10121, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !10123, metadata !DIExpression()), !dbg !10124
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !10125, metadata !DIExpression()), !dbg !10126
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10127
  %1 = load i32, i32* %bar.addr, align 4, !dbg !10128
  %call = call i32 @pci_rebar_find_pos(%struct.pci_dev* %0, i32 %1) #11, !dbg !10129
  store i32 %call, i32* %pos, align 4, !dbg !10130
  %2 = load i32, i32* %pos, align 4, !dbg !10131
  %cmp = icmp slt i32 %2, 0, !dbg !10133
  br i1 %cmp, label %if.then, label %if.end, !dbg !10134

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %pos, align 4, !dbg !10135
  store i32 %3, i32* %retval, align 4, !dbg !10136
  br label %return, !dbg !10136

if.end:                                           ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10137
  %5 = load i32, i32* %pos, align 4, !dbg !10138
  %add = add i32 %5, 8, !dbg !10139
  %call1 = call i32 @pci_read_config_dword(%struct.pci_dev* %4, i32 %add, i32* %ctrl) #11, !dbg !10140
  %6 = load i32, i32* %ctrl, align 4, !dbg !10141
  %and = and i32 %6, -7937, !dbg !10141
  store i32 %and, i32* %ctrl, align 4, !dbg !10141
  %7 = load i32, i32* %size.addr, align 4, !dbg !10142
  %shl = shl i32 %7, 8, !dbg !10143
  %8 = load i32, i32* %ctrl, align 4, !dbg !10144
  %or = or i32 %8, %shl, !dbg !10144
  store i32 %or, i32* %ctrl, align 4, !dbg !10144
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10145
  %10 = load i32, i32* %pos, align 4, !dbg !10146
  %add2 = add i32 %10, 8, !dbg !10147
  %11 = load i32, i32* %ctrl, align 4, !dbg !10148
  %call3 = call i32 @pci_write_config_dword(%struct.pci_dev* %9, i32 %add2, i32 %11) #11, !dbg !10149
  store i32 0, i32* %retval, align 4, !dbg !10150
  br label %return, !dbg !10150

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !10151
  ret i32 %12, !dbg !10151
}

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_dword(%struct.pci_dev*, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_enable_atomic_ops_to_root(%struct.pci_dev* %dev, i32 %cap_mask) #0 !dbg !10152 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cap_mask.addr = alloca i32, align 4
  %bus = alloca %struct.pci_bus*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %cap = alloca i32, align 4
  %ctl2 = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10155, metadata !DIExpression()), !dbg !10156
  store i32 %cap_mask, i32* %cap_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap_mask.addr, metadata !10157, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus, metadata !10159, metadata !DIExpression()), !dbg !10160
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10161
  %bus1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !10162
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !10162
  store %struct.pci_bus* %1, %struct.pci_bus** %bus, align 8, !dbg !10160
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !10163, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !10165, metadata !DIExpression()), !dbg !10166
  call void @llvm.dbg.declare(metadata i32* %ctl2, metadata !10167, metadata !DIExpression()), !dbg !10168
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10169
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %2) #11, !dbg !10171
  br i1 %call, label %if.end, label %if.then, !dbg !10172

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10173
  br label %return, !dbg !10173

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10174
  %call2 = call i32 @pci_pcie_type(%struct.pci_dev* %3) #11, !dbg !10175
  switch i32 %call2, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 9, label %sw.bb
  ], !dbg !10176

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  br label %sw.epilog, !dbg !10177

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !10179
  br label %return, !dbg !10179

sw.epilog:                                        ; preds = %sw.bb
  br label %while.cond, !dbg !10180

while.cond:                                       ; preds = %if.end22, %sw.epilog
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !10181
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 1, !dbg !10182
  %5 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !10182
  %tobool = icmp ne %struct.pci_bus* %5, null, !dbg !10180
  br i1 %tobool, label %while.body, label %while.end, !dbg !10180

while.body:                                       ; preds = %while.cond
  %6 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !10183
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %6, i32 0, i32 4, !dbg !10185
  %7 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !10185
  store %struct.pci_dev* %7, %struct.pci_dev** %bridge, align 8, !dbg !10186
  %8 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10187
  %call3 = call i32 @pcie_capability_read_dword(%struct.pci_dev* %8, i32 36, i32* %cap) #11, !dbg !10188
  %9 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10189
  %call4 = call i32 @pci_pcie_type(%struct.pci_dev* %9) #11, !dbg !10190
  switch i32 %call4, label %sw.epilog13 [
    i32 5, label %sw.bb5
    i32 6, label %sw.bb5
    i32 4, label %sw.bb9
  ], !dbg !10191

sw.bb5:                                           ; preds = %while.body, %while.body
  %10 = load i32, i32* %cap, align 4, !dbg !10192
  %and = and i32 %10, 64, !dbg !10195
  %tobool6 = icmp ne i32 %and, 0, !dbg !10195
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !10196

if.then7:                                         ; preds = %sw.bb5
  store i32 -22, i32* %retval, align 4, !dbg !10197
  br label %return, !dbg !10197

if.end8:                                          ; preds = %sw.bb5
  br label %sw.epilog13, !dbg !10198

sw.bb9:                                           ; preds = %while.body
  %11 = load i32, i32* %cap, align 4, !dbg !10199
  %12 = load i32, i32* %cap_mask.addr, align 4, !dbg !10201
  %and10 = and i32 %11, %12, !dbg !10202
  %13 = load i32, i32* %cap_mask.addr, align 4, !dbg !10203
  %cmp = icmp ne i32 %and10, %13, !dbg !10204
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !10205

if.then11:                                        ; preds = %sw.bb9
  store i32 -22, i32* %retval, align 4, !dbg !10206
  br label %return, !dbg !10206

if.end12:                                         ; preds = %sw.bb9
  br label %sw.epilog13, !dbg !10207

sw.epilog13:                                      ; preds = %while.body, %if.end12, %if.end8
  %14 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10208
  %call14 = call i32 @pci_pcie_type(%struct.pci_dev* %14) #11, !dbg !10210
  %cmp15 = icmp eq i32 %call14, 5, !dbg !10211
  br i1 %cmp15, label %if.then16, label %if.end22, !dbg !10212

if.then16:                                        ; preds = %sw.epilog13
  %15 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !10213
  %call17 = call i32 @pcie_capability_read_dword(%struct.pci_dev* %15, i32 40, i32* %ctl2) #11, !dbg !10215
  %16 = load i32, i32* %ctl2, align 4, !dbg !10216
  %and18 = and i32 %16, 128, !dbg !10218
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10218
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !10219

if.then20:                                        ; preds = %if.then16
  store i32 -22, i32* %retval, align 4, !dbg !10220
  br label %return, !dbg !10220

if.end21:                                         ; preds = %if.then16
  br label %if.end22, !dbg !10221

if.end22:                                         ; preds = %if.end21, %sw.epilog13
  %17 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !10222
  %parent23 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %17, i32 0, i32 1, !dbg !10223
  %18 = load %struct.pci_bus*, %struct.pci_bus** %parent23, align 8, !dbg !10223
  store %struct.pci_bus* %18, %struct.pci_bus** %bus, align 8, !dbg !10224
  br label %while.cond, !dbg !10180, !llvm.loop !10225

while.end:                                        ; preds = %while.cond
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10227
  %call24 = call i32 @pcie_capability_set_word(%struct.pci_dev* %19, i32 40, i16 zeroext 64) #11, !dbg !10228
  store i32 0, i32* %retval, align 4, !dbg !10229
  br label %return, !dbg !10229

return:                                           ; preds = %while.end, %if.then20, %if.then11, %if.then7, %sw.default, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !10230
  ret i32 %20, !dbg !10230
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @pci_swizzle_interrupt_pin(%struct.pci_dev* %dev, i8 zeroext %pin) #0 !dbg !10231 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pin.addr = alloca i8, align 1
  %slot = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10234, metadata !DIExpression()), !dbg !10235
  store i8 %pin, i8* %pin.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pin.addr, metadata !10236, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.declare(metadata i32* %slot, metadata !10238, metadata !DIExpression()), !dbg !10239
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10240
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !10242
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !10242
  %call = call zeroext i1 @pci_ari_enabled(%struct.pci_bus* %1) #11, !dbg !10243
  br i1 %call, label %if.then, label %if.else, !dbg !10244

if.then:                                          ; preds = %entry
  store i32 0, i32* %slot, align 4, !dbg !10245
  br label %if.end, !dbg !10246

if.else:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10247
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 6, !dbg !10247
  %3 = load i32, i32* %devfn, align 8, !dbg !10247
  %shr = lshr i32 %3, 3, !dbg !10247
  %and = and i32 %shr, 31, !dbg !10247
  store i32 %and, i32* %slot, align 4, !dbg !10248
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i8, i8* %pin.addr, align 1, !dbg !10249
  %conv = zext i8 %4 to i32, !dbg !10249
  %sub = sub i32 %conv, 1, !dbg !10250
  %5 = load i32, i32* %slot, align 4, !dbg !10251
  %add = add i32 %sub, %5, !dbg !10252
  %rem = srem i32 %add, 4, !dbg !10253
  %add1 = add i32 %rem, 1, !dbg !10254
  %conv2 = trunc i32 %add1 to i8, !dbg !10255
  ret i8 %conv2, !dbg !10256
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_ari_enabled(%struct.pci_bus* %bus) #0 !dbg !10257 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !10258, metadata !DIExpression()), !dbg !10259
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !10260
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !10261
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !10261
  %tobool = icmp ne %struct.pci_dev* %1, null, !dbg !10260
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10262

land.rhs:                                         ; preds = %entry
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !10263
  %self1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 4, !dbg !10264
  %3 = load %struct.pci_dev*, %struct.pci_dev** %self1, align 8, !dbg !10264
  %ari_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 46, !dbg !10265
  %4 = bitcast [5 x i8]* %ari_enabled to i40*, !dbg !10265
  %bf.load = load i40, i40* %4, align 1, !dbg !10265
  %bf.lshr = lshr i40 %bf.load, 14, !dbg !10265
  %bf.clear = and i40 %bf.lshr, 1, !dbg !10265
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !10265
  %tobool2 = icmp ne i32 %bf.cast, 0, !dbg !10262
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !10266
  ret i1 %5, !dbg !10267
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_get_interrupt_pin(%struct.pci_dev* %dev, %struct.pci_dev** %bridge) #0 !dbg !10268 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bridge.addr = alloca %struct.pci_dev**, align 8
  %pin = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10272, metadata !DIExpression()), !dbg !10273
  store %struct.pci_dev** %bridge, %struct.pci_dev*** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev*** %bridge.addr, metadata !10274, metadata !DIExpression()), !dbg !10275
  call void @llvm.dbg.declare(metadata i8* %pin, metadata !10276, metadata !DIExpression()), !dbg !10277
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10278
  %pin1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 19, !dbg !10279
  %1 = load i8, i8* %pin1, align 1, !dbg !10279
  store i8 %1, i8* %pin, align 1, !dbg !10280
  %2 = load i8, i8* %pin, align 1, !dbg !10281
  %tobool = icmp ne i8 %2, 0, !dbg !10281
  br i1 %tobool, label %if.end, label %if.then, !dbg !10283

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !10284
  br label %return, !dbg !10284

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !10285

while.cond:                                       ; preds = %while.body, %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10286
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 1, !dbg !10287
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !10287
  %call = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %4) #11, !dbg !10288
  %lnot = xor i1 %call, true, !dbg !10289
  br i1 %lnot, label %while.body, label %while.end, !dbg !10285

while.body:                                       ; preds = %while.cond
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10290
  %6 = load i8, i8* %pin, align 1, !dbg !10292
  %call2 = call zeroext i8 @pci_swizzle_interrupt_pin(%struct.pci_dev* %5, i8 zeroext %6) #11, !dbg !10293
  store i8 %call2, i8* %pin, align 1, !dbg !10294
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10295
  %bus3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 1, !dbg !10296
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus3, align 8, !dbg !10296
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 4, !dbg !10297
  %9 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !10297
  store %struct.pci_dev* %9, %struct.pci_dev** %dev.addr, align 8, !dbg !10298
  br label %while.cond, !dbg !10285, !llvm.loop !10299

while.end:                                        ; preds = %while.cond
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10301
  %11 = load %struct.pci_dev**, %struct.pci_dev*** %bridge.addr, align 8, !dbg !10302
  store %struct.pci_dev* %10, %struct.pci_dev** %11, align 8, !dbg !10303
  %12 = load i8, i8* %pin, align 1, !dbg !10304
  %conv = zext i8 %12 to i32, !dbg !10304
  store i32 %conv, i32* %retval, align 4, !dbg !10305
  br label %return, !dbg !10305

return:                                           ; preds = %while.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !10306
  ret i32 %13, !dbg !10306
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @pci_common_swizzle(%struct.pci_dev* %dev, i8* %pinp) #0 !dbg !10307 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pinp.addr = alloca i8*, align 8
  %pin = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10310, metadata !DIExpression()), !dbg !10311
  store i8* %pinp, i8** %pinp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pinp.addr, metadata !10312, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.declare(metadata i8* %pin, metadata !10314, metadata !DIExpression()), !dbg !10315
  %0 = load i8*, i8** %pinp.addr, align 8, !dbg !10316
  %1 = load i8, i8* %0, align 1, !dbg !10317
  store i8 %1, i8* %pin, align 1, !dbg !10315
  br label %while.cond, !dbg !10318

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10319
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 1, !dbg !10320
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !10320
  %call = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %3) #11, !dbg !10321
  %lnot = xor i1 %call, true, !dbg !10322
  br i1 %lnot, label %while.body, label %while.end, !dbg !10318

while.body:                                       ; preds = %while.cond
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10323
  %5 = load i8, i8* %pin, align 1, !dbg !10325
  %call1 = call zeroext i8 @pci_swizzle_interrupt_pin(%struct.pci_dev* %4, i8 zeroext %5) #11, !dbg !10326
  store i8 %call1, i8* %pin, align 1, !dbg !10327
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10328
  %bus2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 1, !dbg !10329
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus2, align 8, !dbg !10329
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 4, !dbg !10330
  %8 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !10330
  store %struct.pci_dev* %8, %struct.pci_dev** %dev.addr, align 8, !dbg !10331
  br label %while.cond, !dbg !10318, !llvm.loop !10332

while.end:                                        ; preds = %while.cond
  %9 = load i8, i8* %pin, align 1, !dbg !10334
  %10 = load i8*, i8** %pinp.addr, align 8, !dbg !10335
  store i8 %9, i8* %10, align 1, !dbg !10336
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10337
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 6, !dbg !10337
  %12 = load i32, i32* %devfn, align 8, !dbg !10337
  %shr = lshr i32 %12, 3, !dbg !10337
  %and = and i32 %shr, 31, !dbg !10337
  %conv = trunc i32 %and to i8, !dbg !10337
  ret i8 %conv, !dbg !10338
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_release_region(%struct.pci_dev* %pdev, i32 %bar) #0 !dbg !10339 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bar.addr = alloca i32, align 4
  %dr = alloca %struct.pci_devres*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10342, metadata !DIExpression()), !dbg !10343
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !10344, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.declare(metadata %struct.pci_devres** %dr, metadata !10346, metadata !DIExpression()), !dbg !10347
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10348
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 44, !dbg !10348
  %1 = load i32, i32* %bar.addr, align 4, !dbg !10348
  %idxprom = sext i32 %1 to i64, !dbg !10348
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !10348
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !10348
  %2 = load i64, i64* %start, align 8, !dbg !10348
  %cmp = icmp eq i64 %2, 0, !dbg !10348
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !10348

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10348
  %resource1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 44, !dbg !10348
  %4 = load i32, i32* %bar.addr, align 4, !dbg !10348
  %idxprom2 = sext i32 %4 to i64, !dbg !10348
  %arrayidx3 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource1, i64 0, i64 %idxprom2, !dbg !10348
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx3, i32 0, i32 1, !dbg !10348
  %5 = load i64, i64* %end, align 8, !dbg !10348
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10348
  %resource4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 44, !dbg !10348
  %7 = load i32, i32* %bar.addr, align 4, !dbg !10348
  %idxprom5 = sext i32 %7 to i64, !dbg !10348
  %arrayidx6 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource4, i64 0, i64 %idxprom5, !dbg !10348
  %start7 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx6, i32 0, i32 0, !dbg !10348
  %8 = load i64, i64* %start7, align 8, !dbg !10348
  %cmp8 = icmp eq i64 %5, %8, !dbg !10348
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !10348

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !10348

cond.false:                                       ; preds = %land.lhs.true, %entry
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10348
  %resource9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 44, !dbg !10348
  %10 = load i32, i32* %bar.addr, align 4, !dbg !10348
  %idxprom10 = sext i32 %10 to i64, !dbg !10348
  %arrayidx11 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource9, i64 0, i64 %idxprom10, !dbg !10348
  %end12 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx11, i32 0, i32 1, !dbg !10348
  %11 = load i64, i64* %end12, align 8, !dbg !10348
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10348
  %resource13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 44, !dbg !10348
  %13 = load i32, i32* %bar.addr, align 4, !dbg !10348
  %idxprom14 = sext i32 %13 to i64, !dbg !10348
  %arrayidx15 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource13, i64 0, i64 %idxprom14, !dbg !10348
  %start16 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx15, i32 0, i32 0, !dbg !10348
  %14 = load i64, i64* %start16, align 8, !dbg !10348
  %sub = sub i64 %11, %14, !dbg !10348
  %add = add i64 %sub, 1, !dbg !10348
  br label %cond.end, !dbg !10348

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !10348
  %cmp17 = icmp eq i64 %cond, 0, !dbg !10350
  br i1 %cmp17, label %if.then, label %if.end, !dbg !10351

if.then:                                          ; preds = %cond.end
  br label %if.end100, !dbg !10352

if.end:                                           ; preds = %cond.end
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10353
  %resource18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 44, !dbg !10353
  %16 = load i32, i32* %bar.addr, align 4, !dbg !10353
  %idxprom19 = sext i32 %16 to i64, !dbg !10353
  %arrayidx20 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource18, i64 0, i64 %idxprom19, !dbg !10353
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx20, i32 0, i32 3, !dbg !10353
  %17 = load i64, i64* %flags, align 8, !dbg !10353
  %and = and i64 %17, 256, !dbg !10355
  %tobool = icmp ne i64 %and, 0, !dbg !10355
  br i1 %tobool, label %if.then21, label %if.else, !dbg !10356

if.then21:                                        ; preds = %if.end
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10357
  %resource22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 44, !dbg !10357
  %19 = load i32, i32* %bar.addr, align 4, !dbg !10357
  %idxprom23 = sext i32 %19 to i64, !dbg !10357
  %arrayidx24 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource22, i64 0, i64 %idxprom23, !dbg !10357
  %start25 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx24, i32 0, i32 0, !dbg !10357
  %20 = load i64, i64* %start25, align 8, !dbg !10357
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10357
  %resource26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 44, !dbg !10357
  %22 = load i32, i32* %bar.addr, align 4, !dbg !10357
  %idxprom27 = sext i32 %22 to i64, !dbg !10357
  %arrayidx28 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource26, i64 0, i64 %idxprom27, !dbg !10357
  %start29 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx28, i32 0, i32 0, !dbg !10357
  %23 = load i64, i64* %start29, align 8, !dbg !10357
  %cmp30 = icmp eq i64 %23, 0, !dbg !10357
  br i1 %cmp30, label %land.lhs.true31, label %cond.false42, !dbg !10357

land.lhs.true31:                                  ; preds = %if.then21
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10357
  %resource32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 44, !dbg !10357
  %25 = load i32, i32* %bar.addr, align 4, !dbg !10357
  %idxprom33 = sext i32 %25 to i64, !dbg !10357
  %arrayidx34 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource32, i64 0, i64 %idxprom33, !dbg !10357
  %end35 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx34, i32 0, i32 1, !dbg !10357
  %26 = load i64, i64* %end35, align 8, !dbg !10357
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10357
  %resource36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 44, !dbg !10357
  %28 = load i32, i32* %bar.addr, align 4, !dbg !10357
  %idxprom37 = sext i32 %28 to i64, !dbg !10357
  %arrayidx38 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource36, i64 0, i64 %idxprom37, !dbg !10357
  %start39 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx38, i32 0, i32 0, !dbg !10357
  %29 = load i64, i64* %start39, align 8, !dbg !10357
  %cmp40 = icmp eq i64 %26, %29, !dbg !10357
  br i1 %cmp40, label %cond.true41, label %cond.false42, !dbg !10357

cond.true41:                                      ; preds = %land.lhs.true31
  br label %cond.end53, !dbg !10357

cond.false42:                                     ; preds = %land.lhs.true31, %if.then21
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10357
  %resource43 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 44, !dbg !10357
  %31 = load i32, i32* %bar.addr, align 4, !dbg !10357
  %idxprom44 = sext i32 %31 to i64, !dbg !10357
  %arrayidx45 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource43, i64 0, i64 %idxprom44, !dbg !10357
  %end46 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx45, i32 0, i32 1, !dbg !10357
  %32 = load i64, i64* %end46, align 8, !dbg !10357
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10357
  %resource47 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 44, !dbg !10357
  %34 = load i32, i32* %bar.addr, align 4, !dbg !10357
  %idxprom48 = sext i32 %34 to i64, !dbg !10357
  %arrayidx49 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource47, i64 0, i64 %idxprom48, !dbg !10357
  %start50 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx49, i32 0, i32 0, !dbg !10357
  %35 = load i64, i64* %start50, align 8, !dbg !10357
  %sub51 = sub i64 %32, %35, !dbg !10357
  %add52 = add i64 %sub51, 1, !dbg !10357
  br label %cond.end53, !dbg !10357

cond.end53:                                       ; preds = %cond.false42, %cond.true41
  %cond54 = phi i64 [ 0, %cond.true41 ], [ %add52, %cond.false42 ], !dbg !10357
  call void @__release_region(%struct.resource* @ioport_resource, i64 %20, i64 %cond54) #11, !dbg !10357
  br label %if.end96, !dbg !10357

if.else:                                          ; preds = %if.end
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10358
  %resource55 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 44, !dbg !10358
  %37 = load i32, i32* %bar.addr, align 4, !dbg !10358
  %idxprom56 = sext i32 %37 to i64, !dbg !10358
  %arrayidx57 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource55, i64 0, i64 %idxprom56, !dbg !10358
  %flags58 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx57, i32 0, i32 3, !dbg !10358
  %38 = load i64, i64* %flags58, align 8, !dbg !10358
  %and59 = and i64 %38, 512, !dbg !10360
  %tobool60 = icmp ne i64 %and59, 0, !dbg !10360
  br i1 %tobool60, label %if.then61, label %if.end95, !dbg !10361

if.then61:                                        ; preds = %if.else
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10362
  %resource62 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 44, !dbg !10362
  %40 = load i32, i32* %bar.addr, align 4, !dbg !10362
  %idxprom63 = sext i32 %40 to i64, !dbg !10362
  %arrayidx64 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource62, i64 0, i64 %idxprom63, !dbg !10362
  %start65 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx64, i32 0, i32 0, !dbg !10362
  %41 = load i64, i64* %start65, align 8, !dbg !10362
  %42 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10362
  %resource66 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 44, !dbg !10362
  %43 = load i32, i32* %bar.addr, align 4, !dbg !10362
  %idxprom67 = sext i32 %43 to i64, !dbg !10362
  %arrayidx68 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource66, i64 0, i64 %idxprom67, !dbg !10362
  %start69 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx68, i32 0, i32 0, !dbg !10362
  %44 = load i64, i64* %start69, align 8, !dbg !10362
  %cmp70 = icmp eq i64 %44, 0, !dbg !10362
  br i1 %cmp70, label %land.lhs.true71, label %cond.false82, !dbg !10362

land.lhs.true71:                                  ; preds = %if.then61
  %45 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10362
  %resource72 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %45, i32 0, i32 44, !dbg !10362
  %46 = load i32, i32* %bar.addr, align 4, !dbg !10362
  %idxprom73 = sext i32 %46 to i64, !dbg !10362
  %arrayidx74 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource72, i64 0, i64 %idxprom73, !dbg !10362
  %end75 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx74, i32 0, i32 1, !dbg !10362
  %47 = load i64, i64* %end75, align 8, !dbg !10362
  %48 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10362
  %resource76 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %48, i32 0, i32 44, !dbg !10362
  %49 = load i32, i32* %bar.addr, align 4, !dbg !10362
  %idxprom77 = sext i32 %49 to i64, !dbg !10362
  %arrayidx78 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource76, i64 0, i64 %idxprom77, !dbg !10362
  %start79 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx78, i32 0, i32 0, !dbg !10362
  %50 = load i64, i64* %start79, align 8, !dbg !10362
  %cmp80 = icmp eq i64 %47, %50, !dbg !10362
  br i1 %cmp80, label %cond.true81, label %cond.false82, !dbg !10362

cond.true81:                                      ; preds = %land.lhs.true71
  br label %cond.end93, !dbg !10362

cond.false82:                                     ; preds = %land.lhs.true71, %if.then61
  %51 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10362
  %resource83 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %51, i32 0, i32 44, !dbg !10362
  %52 = load i32, i32* %bar.addr, align 4, !dbg !10362
  %idxprom84 = sext i32 %52 to i64, !dbg !10362
  %arrayidx85 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource83, i64 0, i64 %idxprom84, !dbg !10362
  %end86 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx85, i32 0, i32 1, !dbg !10362
  %53 = load i64, i64* %end86, align 8, !dbg !10362
  %54 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10362
  %resource87 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 44, !dbg !10362
  %55 = load i32, i32* %bar.addr, align 4, !dbg !10362
  %idxprom88 = sext i32 %55 to i64, !dbg !10362
  %arrayidx89 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource87, i64 0, i64 %idxprom88, !dbg !10362
  %start90 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx89, i32 0, i32 0, !dbg !10362
  %56 = load i64, i64* %start90, align 8, !dbg !10362
  %sub91 = sub i64 %53, %56, !dbg !10362
  %add92 = add i64 %sub91, 1, !dbg !10362
  br label %cond.end93, !dbg !10362

cond.end93:                                       ; preds = %cond.false82, %cond.true81
  %cond94 = phi i64 [ 0, %cond.true81 ], [ %add92, %cond.false82 ], !dbg !10362
  call void @__release_region(%struct.resource* @iomem_resource, i64 %41, i64 %cond94) #11, !dbg !10362
  br label %if.end95, !dbg !10362

if.end95:                                         ; preds = %cond.end93, %if.else
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %cond.end53
  %57 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10363
  %call = call %struct.pci_devres* @find_pci_dr(%struct.pci_dev* %57) #11, !dbg !10364
  store %struct.pci_devres* %call, %struct.pci_devres** %dr, align 8, !dbg !10365
  %58 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !10366
  %tobool97 = icmp ne %struct.pci_devres* %58, null, !dbg !10366
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !10368

if.then98:                                        ; preds = %if.end96
  %59 = load i32, i32* %bar.addr, align 4, !dbg !10369
  %shl = shl i32 1, %59, !dbg !10370
  %neg = xor i32 %shl, -1, !dbg !10371
  %60 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !10372
  %region_mask = getelementptr inbounds %struct.pci_devres, %struct.pci_devres* %60, i32 0, i32 1, !dbg !10373
  %61 = load i32, i32* %region_mask, align 4, !dbg !10374
  %and99 = and i32 %61, %neg, !dbg !10374
  store i32 %and99, i32* %region_mask, align 4, !dbg !10374
  br label %if.end100, !dbg !10372

if.end100:                                        ; preds = %if.then, %if.then98, %if.end96
  ret void, !dbg !10375
}

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_request_region(%struct.pci_dev* %pdev, i32 %bar, i8* %res_name) #0 !dbg !10376 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bar.addr = alloca i32, align 4
  %res_name.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10379, metadata !DIExpression()), !dbg !10380
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !10381, metadata !DIExpression()), !dbg !10382
  store i8* %res_name, i8** %res_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res_name.addr, metadata !10383, metadata !DIExpression()), !dbg !10384
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10385
  %1 = load i32, i32* %bar.addr, align 4, !dbg !10386
  %2 = load i8*, i8** %res_name.addr, align 8, !dbg !10387
  %call = call i32 @__pci_request_region(%struct.pci_dev* %0, i32 %1, i8* %2, i32 0) #11, !dbg !10388
  ret i32 %call, !dbg !10389
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__pci_request_region(%struct.pci_dev* %pdev, i32 %bar, i8* %res_name, i32 %exclusive) #0 !dbg !10390 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bar.addr = alloca i32, align 4
  %res_name.addr = alloca i8*, align 8
  %exclusive.addr = alloca i32, align 4
  %dr = alloca %struct.pci_devres*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10393, metadata !DIExpression()), !dbg !10394
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !10395, metadata !DIExpression()), !dbg !10396
  store i8* %res_name, i8** %res_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res_name.addr, metadata !10397, metadata !DIExpression()), !dbg !10398
  store i32 %exclusive, i32* %exclusive.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exclusive.addr, metadata !10399, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.declare(metadata %struct.pci_devres** %dr, metadata !10401, metadata !DIExpression()), !dbg !10402
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10403
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 44, !dbg !10403
  %1 = load i32, i32* %bar.addr, align 4, !dbg !10403
  %idxprom = sext i32 %1 to i64, !dbg !10403
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !10403
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !10403
  %2 = load i64, i64* %start, align 8, !dbg !10403
  %cmp = icmp eq i64 %2, 0, !dbg !10403
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !10403

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10403
  %resource1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 44, !dbg !10403
  %4 = load i32, i32* %bar.addr, align 4, !dbg !10403
  %idxprom2 = sext i32 %4 to i64, !dbg !10403
  %arrayidx3 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource1, i64 0, i64 %idxprom2, !dbg !10403
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx3, i32 0, i32 1, !dbg !10403
  %5 = load i64, i64* %end, align 8, !dbg !10403
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10403
  %resource4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 44, !dbg !10403
  %7 = load i32, i32* %bar.addr, align 4, !dbg !10403
  %idxprom5 = sext i32 %7 to i64, !dbg !10403
  %arrayidx6 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource4, i64 0, i64 %idxprom5, !dbg !10403
  %start7 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx6, i32 0, i32 0, !dbg !10403
  %8 = load i64, i64* %start7, align 8, !dbg !10403
  %cmp8 = icmp eq i64 %5, %8, !dbg !10403
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !10403

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !10403

cond.false:                                       ; preds = %land.lhs.true, %entry
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10403
  %resource9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 44, !dbg !10403
  %10 = load i32, i32* %bar.addr, align 4, !dbg !10403
  %idxprom10 = sext i32 %10 to i64, !dbg !10403
  %arrayidx11 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource9, i64 0, i64 %idxprom10, !dbg !10403
  %end12 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx11, i32 0, i32 1, !dbg !10403
  %11 = load i64, i64* %end12, align 8, !dbg !10403
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10403
  %resource13 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 44, !dbg !10403
  %13 = load i32, i32* %bar.addr, align 4, !dbg !10403
  %idxprom14 = sext i32 %13 to i64, !dbg !10403
  %arrayidx15 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource13, i64 0, i64 %idxprom14, !dbg !10403
  %start16 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx15, i32 0, i32 0, !dbg !10403
  %14 = load i64, i64* %start16, align 8, !dbg !10403
  %sub = sub i64 %11, %14, !dbg !10403
  %add = add i64 %sub, 1, !dbg !10403
  br label %cond.end, !dbg !10403

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !10403
  %cmp17 = icmp eq i64 %cond, 0, !dbg !10405
  br i1 %cmp17, label %if.then, label %if.end, !dbg !10406

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !10407
  br label %return, !dbg !10407

if.end:                                           ; preds = %cond.end
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10408
  %resource18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 44, !dbg !10408
  %16 = load i32, i32* %bar.addr, align 4, !dbg !10408
  %idxprom19 = sext i32 %16 to i64, !dbg !10408
  %arrayidx20 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource18, i64 0, i64 %idxprom19, !dbg !10408
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx20, i32 0, i32 3, !dbg !10408
  %17 = load i64, i64* %flags, align 8, !dbg !10408
  %and = and i64 %17, 256, !dbg !10410
  %tobool = icmp ne i64 %and, 0, !dbg !10410
  br i1 %tobool, label %if.then21, label %if.else, !dbg !10411

if.then21:                                        ; preds = %if.end
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10412
  %resource22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 44, !dbg !10412
  %19 = load i32, i32* %bar.addr, align 4, !dbg !10412
  %idxprom23 = sext i32 %19 to i64, !dbg !10412
  %arrayidx24 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource22, i64 0, i64 %idxprom23, !dbg !10412
  %start25 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx24, i32 0, i32 0, !dbg !10412
  %20 = load i64, i64* %start25, align 8, !dbg !10412
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10412
  %resource26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 44, !dbg !10412
  %22 = load i32, i32* %bar.addr, align 4, !dbg !10412
  %idxprom27 = sext i32 %22 to i64, !dbg !10412
  %arrayidx28 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource26, i64 0, i64 %idxprom27, !dbg !10412
  %start29 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx28, i32 0, i32 0, !dbg !10412
  %23 = load i64, i64* %start29, align 8, !dbg !10412
  %cmp30 = icmp eq i64 %23, 0, !dbg !10412
  br i1 %cmp30, label %land.lhs.true31, label %cond.false42, !dbg !10412

land.lhs.true31:                                  ; preds = %if.then21
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10412
  %resource32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 44, !dbg !10412
  %25 = load i32, i32* %bar.addr, align 4, !dbg !10412
  %idxprom33 = sext i32 %25 to i64, !dbg !10412
  %arrayidx34 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource32, i64 0, i64 %idxprom33, !dbg !10412
  %end35 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx34, i32 0, i32 1, !dbg !10412
  %26 = load i64, i64* %end35, align 8, !dbg !10412
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10412
  %resource36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 44, !dbg !10412
  %28 = load i32, i32* %bar.addr, align 4, !dbg !10412
  %idxprom37 = sext i32 %28 to i64, !dbg !10412
  %arrayidx38 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource36, i64 0, i64 %idxprom37, !dbg !10412
  %start39 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx38, i32 0, i32 0, !dbg !10412
  %29 = load i64, i64* %start39, align 8, !dbg !10412
  %cmp40 = icmp eq i64 %26, %29, !dbg !10412
  br i1 %cmp40, label %cond.true41, label %cond.false42, !dbg !10412

cond.true41:                                      ; preds = %land.lhs.true31
  br label %cond.end53, !dbg !10412

cond.false42:                                     ; preds = %land.lhs.true31, %if.then21
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10412
  %resource43 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 44, !dbg !10412
  %31 = load i32, i32* %bar.addr, align 4, !dbg !10412
  %idxprom44 = sext i32 %31 to i64, !dbg !10412
  %arrayidx45 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource43, i64 0, i64 %idxprom44, !dbg !10412
  %end46 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx45, i32 0, i32 1, !dbg !10412
  %32 = load i64, i64* %end46, align 8, !dbg !10412
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10412
  %resource47 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 44, !dbg !10412
  %34 = load i32, i32* %bar.addr, align 4, !dbg !10412
  %idxprom48 = sext i32 %34 to i64, !dbg !10412
  %arrayidx49 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource47, i64 0, i64 %idxprom48, !dbg !10412
  %start50 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx49, i32 0, i32 0, !dbg !10412
  %35 = load i64, i64* %start50, align 8, !dbg !10412
  %sub51 = sub i64 %32, %35, !dbg !10412
  %add52 = add i64 %sub51, 1, !dbg !10412
  br label %cond.end53, !dbg !10412

cond.end53:                                       ; preds = %cond.false42, %cond.true41
  %cond54 = phi i64 [ 0, %cond.true41 ], [ %add52, %cond.false42 ], !dbg !10412
  %36 = load i8*, i8** %res_name.addr, align 8, !dbg !10412
  %call = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %20, i64 %cond54, i8* %36, i32 0) #11, !dbg !10412
  %tobool55 = icmp ne %struct.resource* %call, null, !dbg !10412
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !10415

if.then56:                                        ; preds = %cond.end53
  br label %err_out, !dbg !10416

if.end57:                                         ; preds = %cond.end53
  br label %if.end103, !dbg !10417

if.else:                                          ; preds = %if.end
  %37 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10418
  %resource58 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 44, !dbg !10418
  %38 = load i32, i32* %bar.addr, align 4, !dbg !10418
  %idxprom59 = sext i32 %38 to i64, !dbg !10418
  %arrayidx60 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource58, i64 0, i64 %idxprom59, !dbg !10418
  %flags61 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx60, i32 0, i32 3, !dbg !10418
  %39 = load i64, i64* %flags61, align 8, !dbg !10418
  %and62 = and i64 %39, 512, !dbg !10420
  %tobool63 = icmp ne i64 %and62, 0, !dbg !10420
  br i1 %tobool63, label %if.then64, label %if.end102, !dbg !10421

if.then64:                                        ; preds = %if.else
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10422
  %resource65 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 44, !dbg !10422
  %41 = load i32, i32* %bar.addr, align 4, !dbg !10422
  %idxprom66 = sext i32 %41 to i64, !dbg !10422
  %arrayidx67 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource65, i64 0, i64 %idxprom66, !dbg !10422
  %start68 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx67, i32 0, i32 0, !dbg !10422
  %42 = load i64, i64* %start68, align 8, !dbg !10422
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10422
  %resource69 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 44, !dbg !10422
  %44 = load i32, i32* %bar.addr, align 4, !dbg !10422
  %idxprom70 = sext i32 %44 to i64, !dbg !10422
  %arrayidx71 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource69, i64 0, i64 %idxprom70, !dbg !10422
  %start72 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx71, i32 0, i32 0, !dbg !10422
  %45 = load i64, i64* %start72, align 8, !dbg !10422
  %cmp73 = icmp eq i64 %45, 0, !dbg !10422
  br i1 %cmp73, label %land.lhs.true74, label %cond.false85, !dbg !10422

land.lhs.true74:                                  ; preds = %if.then64
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10422
  %resource75 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 44, !dbg !10422
  %47 = load i32, i32* %bar.addr, align 4, !dbg !10422
  %idxprom76 = sext i32 %47 to i64, !dbg !10422
  %arrayidx77 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource75, i64 0, i64 %idxprom76, !dbg !10422
  %end78 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx77, i32 0, i32 1, !dbg !10422
  %48 = load i64, i64* %end78, align 8, !dbg !10422
  %49 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10422
  %resource79 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %49, i32 0, i32 44, !dbg !10422
  %50 = load i32, i32* %bar.addr, align 4, !dbg !10422
  %idxprom80 = sext i32 %50 to i64, !dbg !10422
  %arrayidx81 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource79, i64 0, i64 %idxprom80, !dbg !10422
  %start82 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx81, i32 0, i32 0, !dbg !10422
  %51 = load i64, i64* %start82, align 8, !dbg !10422
  %cmp83 = icmp eq i64 %48, %51, !dbg !10422
  br i1 %cmp83, label %cond.true84, label %cond.false85, !dbg !10422

cond.true84:                                      ; preds = %land.lhs.true74
  br label %cond.end96, !dbg !10422

cond.false85:                                     ; preds = %land.lhs.true74, %if.then64
  %52 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10422
  %resource86 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %52, i32 0, i32 44, !dbg !10422
  %53 = load i32, i32* %bar.addr, align 4, !dbg !10422
  %idxprom87 = sext i32 %53 to i64, !dbg !10422
  %arrayidx88 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource86, i64 0, i64 %idxprom87, !dbg !10422
  %end89 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx88, i32 0, i32 1, !dbg !10422
  %54 = load i64, i64* %end89, align 8, !dbg !10422
  %55 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10422
  %resource90 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %55, i32 0, i32 44, !dbg !10422
  %56 = load i32, i32* %bar.addr, align 4, !dbg !10422
  %idxprom91 = sext i32 %56 to i64, !dbg !10422
  %arrayidx92 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource90, i64 0, i64 %idxprom91, !dbg !10422
  %start93 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx92, i32 0, i32 0, !dbg !10422
  %57 = load i64, i64* %start93, align 8, !dbg !10422
  %sub94 = sub i64 %54, %57, !dbg !10422
  %add95 = add i64 %sub94, 1, !dbg !10422
  br label %cond.end96, !dbg !10422

cond.end96:                                       ; preds = %cond.false85, %cond.true84
  %cond97 = phi i64 [ 0, %cond.true84 ], [ %add95, %cond.false85 ], !dbg !10422
  %58 = load i8*, i8** %res_name.addr, align 8, !dbg !10422
  %59 = load i32, i32* %exclusive.addr, align 4, !dbg !10422
  %call98 = call %struct.resource* @__request_region(%struct.resource* @iomem_resource, i64 %42, i64 %cond97, i8* %58, i32 %59) #11, !dbg !10422
  %tobool99 = icmp ne %struct.resource* %call98, null, !dbg !10422
  br i1 %tobool99, label %if.end101, label %if.then100, !dbg !10425

if.then100:                                       ; preds = %cond.end96
  br label %err_out, !dbg !10426

if.end101:                                        ; preds = %cond.end96
  br label %if.end102, !dbg !10427

if.end102:                                        ; preds = %if.end101, %if.else
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.end57
  %60 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10428
  %call104 = call %struct.pci_devres* @find_pci_dr(%struct.pci_dev* %60) #11, !dbg !10429
  store %struct.pci_devres* %call104, %struct.pci_devres** %dr, align 8, !dbg !10430
  %61 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !10431
  %tobool105 = icmp ne %struct.pci_devres* %61, null, !dbg !10431
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !10433

if.then106:                                       ; preds = %if.end103
  %62 = load i32, i32* %bar.addr, align 4, !dbg !10434
  %shl = shl i32 1, %62, !dbg !10435
  %63 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !10436
  %region_mask = getelementptr inbounds %struct.pci_devres, %struct.pci_devres* %63, i32 0, i32 1, !dbg !10437
  %64 = load i32, i32* %region_mask, align 4, !dbg !10438
  %or = or i32 %64, %shl, !dbg !10438
  store i32 %or, i32* %region_mask, align 4, !dbg !10438
  br label %if.end107, !dbg !10436

if.end107:                                        ; preds = %if.then106, %if.end103
  store i32 0, i32* %retval, align 4, !dbg !10439
  br label %return, !dbg !10439

err_out:                                          ; preds = %if.then100, %if.then56
  call void @llvm.dbg.label(metadata !10440), !dbg !10441
  %65 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10442
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %65, i32 0, i32 41, !dbg !10442
  %66 = load i32, i32* %bar.addr, align 4, !dbg !10442
  %67 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10442
  %resource108 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %67, i32 0, i32 44, !dbg !10442
  %68 = load i32, i32* %bar.addr, align 4, !dbg !10442
  %idxprom109 = sext i32 %68 to i64, !dbg !10442
  %arrayidx110 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource108, i64 0, i64 %idxprom109, !dbg !10442
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i64 0, i64 0), i32 %66, %struct.resource* %arrayidx110) #12, !dbg !10442
  store i32 -16, i32* %retval, align 4, !dbg !10443
  br label %return, !dbg !10443

return:                                           ; preds = %err_out, %if.end107, %if.then
  %69 = load i32, i32* %retval, align 4, !dbg !10444
  ret i32 %69, !dbg !10444
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_release_selected_regions(%struct.pci_dev* %pdev, i32 %bars) #0 !dbg !10445 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bars.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10446, metadata !DIExpression()), !dbg !10447
  store i32 %bars, i32* %bars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bars.addr, metadata !10448, metadata !DIExpression()), !dbg !10449
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10450, metadata !DIExpression()), !dbg !10451
  store i32 0, i32* %i, align 4, !dbg !10452
  br label %for.cond, !dbg !10454

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10455
  %cmp = icmp slt i32 %0, 6, !dbg !10457
  br i1 %cmp, label %for.body, label %for.end, !dbg !10458

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %bars.addr, align 4, !dbg !10459
  %2 = load i32, i32* %i, align 4, !dbg !10461
  %shl = shl i32 1, %2, !dbg !10462
  %and = and i32 %1, %shl, !dbg !10463
  %tobool = icmp ne i32 %and, 0, !dbg !10463
  br i1 %tobool, label %if.then, label %if.end, !dbg !10464

if.then:                                          ; preds = %for.body
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10465
  %4 = load i32, i32* %i, align 4, !dbg !10466
  call void @pci_release_region(%struct.pci_dev* %3, i32 %4) #11, !dbg !10467
  br label %if.end, !dbg !10467

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !10468

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !10469
  %inc = add i32 %5, 1, !dbg !10469
  store i32 %inc, i32* %i, align 4, !dbg !10469
  br label %for.cond, !dbg !10470, !llvm.loop !10471

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10473
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_request_selected_regions(%struct.pci_dev* %pdev, i32 %bars, i8* %res_name) #0 !dbg !10474 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bars.addr = alloca i32, align 4
  %res_name.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10475, metadata !DIExpression()), !dbg !10476
  store i32 %bars, i32* %bars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bars.addr, metadata !10477, metadata !DIExpression()), !dbg !10478
  store i8* %res_name, i8** %res_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res_name.addr, metadata !10479, metadata !DIExpression()), !dbg !10480
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10481
  %1 = load i32, i32* %bars.addr, align 4, !dbg !10482
  %2 = load i8*, i8** %res_name.addr, align 8, !dbg !10483
  %call = call i32 @__pci_request_selected_regions(%struct.pci_dev* %0, i32 %1, i8* %2, i32 0) #11, !dbg !10484
  ret i32 %call, !dbg !10485
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__pci_request_selected_regions(%struct.pci_dev* %pdev, i32 %bars, i8* %res_name, i32 %excl) #0 !dbg !10486 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bars.addr = alloca i32, align 4
  %res_name.addr = alloca i8*, align 8
  %excl.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10487, metadata !DIExpression()), !dbg !10488
  store i32 %bars, i32* %bars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bars.addr, metadata !10489, metadata !DIExpression()), !dbg !10490
  store i8* %res_name, i8** %res_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res_name.addr, metadata !10491, metadata !DIExpression()), !dbg !10492
  store i32 %excl, i32* %excl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %excl.addr, metadata !10493, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10495, metadata !DIExpression()), !dbg !10496
  store i32 0, i32* %i, align 4, !dbg !10497
  br label %for.cond, !dbg !10499

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10500
  %cmp = icmp slt i32 %0, 6, !dbg !10502
  br i1 %cmp, label %for.body, label %for.end, !dbg !10503

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %bars.addr, align 4, !dbg !10504
  %2 = load i32, i32* %i, align 4, !dbg !10506
  %shl = shl i32 1, %2, !dbg !10507
  %and = and i32 %1, %shl, !dbg !10508
  %tobool = icmp ne i32 %and, 0, !dbg !10508
  br i1 %tobool, label %if.then, label %if.end3, !dbg !10509

if.then:                                          ; preds = %for.body
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10510
  %4 = load i32, i32* %i, align 4, !dbg !10512
  %5 = load i8*, i8** %res_name.addr, align 8, !dbg !10513
  %6 = load i32, i32* %excl.addr, align 4, !dbg !10514
  %call = call i32 @__pci_request_region(%struct.pci_dev* %3, i32 %4, i8* %5, i32 %6) #11, !dbg !10515
  %tobool1 = icmp ne i32 %call, 0, !dbg !10515
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !10516

if.then2:                                         ; preds = %if.then
  br label %err_out, !dbg !10517

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !10518

if.end3:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !10519

for.inc:                                          ; preds = %if.end3
  %7 = load i32, i32* %i, align 4, !dbg !10520
  %inc = add i32 %7, 1, !dbg !10520
  store i32 %inc, i32* %i, align 4, !dbg !10520
  br label %for.cond, !dbg !10521, !llvm.loop !10522

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10524
  br label %return, !dbg !10524

err_out:                                          ; preds = %if.then2
  call void @llvm.dbg.label(metadata !10525), !dbg !10526
  br label %while.cond, !dbg !10527

while.cond:                                       ; preds = %if.end9, %err_out
  %8 = load i32, i32* %i, align 4, !dbg !10528
  %dec = add i32 %8, -1, !dbg !10528
  store i32 %dec, i32* %i, align 4, !dbg !10528
  %cmp4 = icmp sge i32 %dec, 0, !dbg !10529
  br i1 %cmp4, label %while.body, label %while.end, !dbg !10527

while.body:                                       ; preds = %while.cond
  %9 = load i32, i32* %bars.addr, align 4, !dbg !10530
  %10 = load i32, i32* %i, align 4, !dbg !10532
  %shl5 = shl i32 1, %10, !dbg !10533
  %and6 = and i32 %9, %shl5, !dbg !10534
  %tobool7 = icmp ne i32 %and6, 0, !dbg !10534
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !10535

if.then8:                                         ; preds = %while.body
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10536
  %12 = load i32, i32* %i, align 4, !dbg !10537
  call void @pci_release_region(%struct.pci_dev* %11, i32 %12) #11, !dbg !10538
  br label %if.end9, !dbg !10538

if.end9:                                          ; preds = %if.then8, %while.body
  br label %while.cond, !dbg !10527, !llvm.loop !10539

while.end:                                        ; preds = %while.cond
  store i32 -16, i32* %retval, align 4, !dbg !10541
  br label %return, !dbg !10541

return:                                           ; preds = %while.end, %for.end
  %13 = load i32, i32* %retval, align 4, !dbg !10542
  ret i32 %13, !dbg !10542
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_request_selected_regions_exclusive(%struct.pci_dev* %pdev, i32 %bars, i8* %res_name) #0 !dbg !10543 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bars.addr = alloca i32, align 4
  %res_name.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10544, metadata !DIExpression()), !dbg !10545
  store i32 %bars, i32* %bars.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bars.addr, metadata !10546, metadata !DIExpression()), !dbg !10547
  store i8* %res_name, i8** %res_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res_name.addr, metadata !10548, metadata !DIExpression()), !dbg !10549
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10550
  %1 = load i32, i32* %bars.addr, align 4, !dbg !10551
  %2 = load i8*, i8** %res_name.addr, align 8, !dbg !10552
  %call = call i32 @__pci_request_selected_regions(%struct.pci_dev* %0, i32 %1, i8* %2, i32 134217728) #11, !dbg !10553
  ret i32 %call, !dbg !10554
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_release_regions(%struct.pci_dev* %pdev) #0 !dbg !10555 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10556, metadata !DIExpression()), !dbg !10557
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10558
  call void @pci_release_selected_regions(%struct.pci_dev* %0, i32 63) #11, !dbg !10559
  ret void, !dbg !10560
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_request_regions(%struct.pci_dev* %pdev, i8* %res_name) #0 !dbg !10561 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %res_name.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10564, metadata !DIExpression()), !dbg !10565
  store i8* %res_name, i8** %res_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res_name.addr, metadata !10566, metadata !DIExpression()), !dbg !10567
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10568
  %1 = load i8*, i8** %res_name.addr, align 8, !dbg !10569
  %call = call i32 @pci_request_selected_regions(%struct.pci_dev* %0, i32 63, i8* %1) #11, !dbg !10570
  ret i32 %call, !dbg !10571
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_request_regions_exclusive(%struct.pci_dev* %pdev, i8* %res_name) #0 !dbg !10572 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %res_name.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !10573, metadata !DIExpression()), !dbg !10574
  store i8* %res_name, i8** %res_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res_name.addr, metadata !10575, metadata !DIExpression()), !dbg !10576
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !10577
  %1 = load i8*, i8** %res_name.addr, align 8, !dbg !10578
  %call = call i32 @pci_request_selected_regions_exclusive(%struct.pci_dev* %0, i32 63, i8* %1) #11, !dbg !10579
  ret i32 %call, !dbg !10580
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_register_io_range(%struct.fwnode_handle* %fwnode, i64 %addr, i64 %size) #0 !dbg !10581 {
entry:
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !10584, metadata !DIExpression()), !dbg !10585
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !10586, metadata !DIExpression()), !dbg !10587
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10588, metadata !DIExpression()), !dbg !10589
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10590, metadata !DIExpression()), !dbg !10591
  store i32 0, i32* %ret, align 4, !dbg !10591
  %0 = load i32, i32* %ret, align 4, !dbg !10592
  ret i32 %0, !dbg !10593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @pci_pio_to_address(i64 %pio) #0 !dbg !10594 {
entry:
  %pio.addr = alloca i64, align 8
  %address = alloca i64, align 8
  store i64 %pio, i64* %pio.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pio.addr, metadata !10597, metadata !DIExpression()), !dbg !10598
  call void @llvm.dbg.declare(metadata i64* %address, metadata !10599, metadata !DIExpression()), !dbg !10600
  store i64 -1, i64* %address, align 8, !dbg !10600
  %0 = load i64, i64* %address, align 8, !dbg !10601
  ret i64 %0, !dbg !10602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local i64 @pci_address_to_pio(i64 %address) #0 !dbg !10603 {
entry:
  %retval = alloca i64, align 8
  %address.addr = alloca i64, align 8
  store i64 %address, i64* %address.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %address.addr, metadata !10606, metadata !DIExpression()), !dbg !10607
  %0 = load i64, i64* %address.addr, align 8, !dbg !10608
  %cmp = icmp ugt i64 %0, 65535, !dbg !10610
  br i1 %cmp, label %if.then, label %if.end, !dbg !10611

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !10612
  br label %return, !dbg !10612

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %address.addr, align 8, !dbg !10613
  store i64 %1, i64* %retval, align 8, !dbg !10614
  br label %return, !dbg !10614

return:                                           ; preds = %if.end, %if.then
  %2 = load i64, i64* %retval, align 8, !dbg !10615
  ret i64 %2, !dbg !10615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_remap_iospace(%struct.resource* %res, i64 %phys_addr) #0 !dbg !4746 {
entry:
  %res.addr = alloca %struct.resource*, align 8
  %phys_addr.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp32 = alloca i64, align 8
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !10616, metadata !DIExpression()), !dbg !10617
  store i64 %phys_addr, i64* %phys_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %phys_addr.addr, metadata !10618, metadata !DIExpression()), !dbg !10619
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !10620, metadata !DIExpression()), !dbg !10622
  store i32 1, i32* %__ret_warn_once, align 4, !dbg !10622
  %0 = load i32, i32* %__ret_warn_once, align 4, !dbg !10623
  %tobool = icmp ne i32 %0, 0, !dbg !10623
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !10623

land.rhs:                                         ; preds = %entry
  %1 = load i8, i8* @pci_remap_iospace.__warned, align 1, !dbg !10623
  %tobool1 = trunc i8 %1 to i1, !dbg !10623
  %lnot = xor i1 %tobool1, true, !dbg !10623
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !10625
  %lnot2 = xor i1 %2, true, !dbg !10623
  %lnot3 = xor i1 %lnot2, true, !dbg !10623
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10623
  %conv = sext i32 %lnot.ext to i64, !dbg !10623
  %tobool4 = icmp ne i64 %conv, 0, !dbg !10623
  br i1 %tobool4, label %if.then, label %if.end31, !dbg !10622

if.then:                                          ; preds = %land.end
  store i8 1, i8* @pci_remap_iospace.__warned, align 1, !dbg !10626
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10628, metadata !DIExpression()), !dbg !10630
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !10630
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !10631
  %tobool5 = icmp ne i32 %3, 0, !dbg !10631
  %lnot6 = xor i1 %tobool5, true, !dbg !10631
  %lnot8 = xor i1 %lnot6, true, !dbg !10631
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !10631
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !10631
  %tobool11 = icmp ne i64 %conv10, 0, !dbg !10631
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !10630

if.then12:                                        ; preds = %if.then
  br label %do.body, !dbg !10631

do.body:                                          ; preds = %if.then12
  br label %do.body13, !dbg !10633

do.body13:                                        ; preds = %do.body
  br label %do.end, !dbg !10635

do.end:                                           ; preds = %do.body13
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.24, i64 0, i64 0)) #11, !dbg !10633
  br label %do.body14, !dbg !10633

do.body14:                                        ; preds = %do.end
  br label %do.body15, !dbg !10637

do.body15:                                        ; preds = %do.body14
  br label %do.end16, !dbg !10639

do.end16:                                         ; preds = %do.body15
  br label %do.body17, !dbg !10637

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i32 4065, i32 2313, i64 12) #10, !dbg !10641, !srcloc !10643
  br label %do.end18, !dbg !10641

do.end18:                                         ; preds = %do.body17
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 261) #10, !dbg !10644, !srcloc !10646
  br label %do.body19, !dbg !10637

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !10647

do.end20:                                         ; preds = %do.body19
  br label %do.end21, !dbg !10637

do.end21:                                         ; preds = %do.end20
  br label %do.body22, !dbg !10633

do.body22:                                        ; preds = %do.end21
  br label %do.end23, !dbg !10649

do.end23:                                         ; preds = %do.body22
  br label %do.end24, !dbg !10633

do.end24:                                         ; preds = %do.end23
  br label %if.end, !dbg !10633

if.end:                                           ; preds = %do.end24, %if.then
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !10630
  %tobool25 = icmp ne i32 %4, 0, !dbg !10630
  %lnot26 = xor i1 %tobool25, true, !dbg !10630
  %lnot28 = xor i1 %lnot26, true, !dbg !10630
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !10630
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !10630
  store i64 %conv30, i64* %tmp, align 8, !dbg !10631
  %5 = load i64, i64* %tmp, align 8, !dbg !10630
  br label %if.end31, !dbg !10626

if.end31:                                         ; preds = %if.end, %land.end
  %6 = load i32, i32* %__ret_warn_once, align 4, !dbg !10622
  %tobool33 = icmp ne i32 %6, 0, !dbg !10622
  %lnot34 = xor i1 %tobool33, true, !dbg !10622
  %lnot36 = xor i1 %lnot34, true, !dbg !10622
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !10622
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !10622
  store i64 %conv38, i64* %tmp32, align 8, !dbg !10623
  %7 = load i64, i64* %tmp32, align 8, !dbg !10622
  ret i32 -19, !dbg !10651
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_unmap_iospace(%struct.resource* %res) #0 !dbg !10652 {
entry:
  %res.addr = alloca %struct.resource*, align 8
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !10655, metadata !DIExpression()), !dbg !10656
  ret void, !dbg !10657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devm_pci_remap_iospace(%struct.device* %dev, %struct.resource* %res, i64 %phys_addr) #0 !dbg !10658 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca %struct.resource*, align 8
  %phys_addr.addr = alloca i64, align 8
  %ptr = alloca %struct.resource**, align 8
  %error = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10661, metadata !DIExpression()), !dbg !10662
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !10663, metadata !DIExpression()), !dbg !10664
  store i64 %phys_addr, i64* %phys_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %phys_addr.addr, metadata !10665, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.declare(metadata %struct.resource*** %ptr, metadata !10667, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.declare(metadata i32* %error, metadata !10670, metadata !DIExpression()), !dbg !10671
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_pci_unmap_iospace, i64 8, i32 3264) #11, !dbg !10672
  %0 = bitcast i8* %call to %struct.resource**, !dbg !10672
  store %struct.resource** %0, %struct.resource*** %ptr, align 8, !dbg !10673
  %1 = load %struct.resource**, %struct.resource*** %ptr, align 8, !dbg !10674
  %tobool = icmp ne %struct.resource** %1, null, !dbg !10674
  br i1 %tobool, label %if.end, label %if.then, !dbg !10676

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10677
  br label %return, !dbg !10677

if.end:                                           ; preds = %entry
  %2 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !10678
  %3 = load i64, i64* %phys_addr.addr, align 8, !dbg !10679
  %call1 = call i32 @pci_remap_iospace(%struct.resource* %2, i64 %3) #11, !dbg !10680
  store i32 %call1, i32* %error, align 4, !dbg !10681
  %4 = load i32, i32* %error, align 4, !dbg !10682
  %tobool2 = icmp ne i32 %4, 0, !dbg !10682
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !10684

if.then3:                                         ; preds = %if.end
  %5 = load %struct.resource**, %struct.resource*** %ptr, align 8, !dbg !10685
  %6 = bitcast %struct.resource** %5 to i8*, !dbg !10685
  call void @devres_free(i8* %6) #11, !dbg !10687
  br label %if.end4, !dbg !10688

if.else:                                          ; preds = %if.end
  %7 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !10689
  %8 = load %struct.resource**, %struct.resource*** %ptr, align 8, !dbg !10691
  store %struct.resource* %7, %struct.resource** %8, align 8, !dbg !10692
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10693
  %10 = load %struct.resource**, %struct.resource*** %ptr, align 8, !dbg !10694
  %11 = bitcast %struct.resource** %10 to i8*, !dbg !10694
  call void @devres_add(%struct.device* %9, i8* %11) #11, !dbg !10695
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then3
  %12 = load i32, i32* %error, align 4, !dbg !10696
  store i32 %12, i32* %retval, align 4, !dbg !10697
  br label %return, !dbg !10697

return:                                           ; preds = %if.end4, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !10698
  ret i32 %13, !dbg !10698
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devres_alloc(void (%struct.device*, i8*)* %release, i64 %size, i32 %gfp) #0 !dbg !10699 {
entry:
  %release.addr = alloca void (%struct.device*, i8*)*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store void (%struct.device*, i8*)* %release, void (%struct.device*, i8*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.device*, i8*)** %release.addr, metadata !10706, metadata !DIExpression()), !dbg !10707
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10708, metadata !DIExpression()), !dbg !10709
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !10710, metadata !DIExpression()), !dbg !10711
  %0 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %release.addr, align 8, !dbg !10712
  %1 = load i64, i64* %size.addr, align 8, !dbg !10713
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !10714
  %call = call noalias i8* @devres_alloc_node(void (%struct.device*, i8*)* %0, i64 %1, i32 %2, i32 -1) #11, !dbg !10715
  ret i8* %call, !dbg !10716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_pci_unmap_iospace(%struct.device* %dev, i8* %ptr) #0 !dbg !10717 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %res = alloca %struct.resource**, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10718, metadata !DIExpression()), !dbg !10719
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10720, metadata !DIExpression()), !dbg !10721
  call void @llvm.dbg.declare(metadata %struct.resource*** %res, metadata !10722, metadata !DIExpression()), !dbg !10724
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10725
  %1 = bitcast i8* %0 to %struct.resource**, !dbg !10725
  store %struct.resource** %1, %struct.resource*** %res, align 8, !dbg !10724
  %2 = load %struct.resource**, %struct.resource*** %res, align 8, !dbg !10726
  %3 = load %struct.resource*, %struct.resource** %2, align 8, !dbg !10727
  call void @pci_unmap_iospace(%struct.resource* %3) #11, !dbg !10728
  ret void, !dbg !10729
}

; Function Attrs: noredzone
declare dso_local void @devres_free(i8*) #3

; Function Attrs: noredzone
declare dso_local void @devres_add(%struct.device*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @devm_pci_remap_cfgspace(%struct.device* %dev, i64 %offset, i64 %size) #0 !dbg !10730 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %ptr = alloca i8**, align 8
  %addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10733, metadata !DIExpression()), !dbg !10734
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !10735, metadata !DIExpression()), !dbg !10736
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10737, metadata !DIExpression()), !dbg !10738
  call void @llvm.dbg.declare(metadata i8*** %ptr, metadata !10739, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !10741, metadata !DIExpression()), !dbg !10742
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_ioremap_release, i64 8, i32 3264) #11, !dbg !10743
  %0 = bitcast i8* %call to i8**, !dbg !10743
  store i8** %0, i8*** %ptr, align 8, !dbg !10744
  %1 = load i8**, i8*** %ptr, align 8, !dbg !10745
  %tobool = icmp ne i8** %1, null, !dbg !10745
  br i1 %tobool, label %if.end, label %if.then, !dbg !10747

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !10748
  br label %return, !dbg !10748

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %offset.addr, align 8, !dbg !10749
  %3 = load i64, i64* %size.addr, align 8, !dbg !10750
  %call1 = call i8* @pci_remap_cfgspace(i64 %2, i64 %3) #11, !dbg !10751
  store i8* %call1, i8** %addr, align 8, !dbg !10752
  %4 = load i8*, i8** %addr, align 8, !dbg !10753
  %tobool2 = icmp ne i8* %4, null, !dbg !10753
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !10755

if.then3:                                         ; preds = %if.end
  %5 = load i8*, i8** %addr, align 8, !dbg !10756
  %6 = load i8**, i8*** %ptr, align 8, !dbg !10758
  store i8* %5, i8** %6, align 8, !dbg !10759
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10760
  %8 = load i8**, i8*** %ptr, align 8, !dbg !10761
  %9 = bitcast i8** %8 to i8*, !dbg !10761
  call void @devres_add(%struct.device* %7, i8* %9) #11, !dbg !10762
  br label %if.end4, !dbg !10763

if.else:                                          ; preds = %if.end
  %10 = load i8**, i8*** %ptr, align 8, !dbg !10764
  %11 = bitcast i8** %10 to i8*, !dbg !10764
  call void @devres_free(i8* %11) #11, !dbg !10765
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then3
  %12 = load i8*, i8** %addr, align 8, !dbg !10766
  store i8* %12, i8** %retval, align 8, !dbg !10767
  br label %return, !dbg !10767

return:                                           ; preds = %if.end4, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !10768
  ret i8* %13, !dbg !10768
}

; Function Attrs: noredzone
declare dso_local void @devm_ioremap_release(%struct.device*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_remap_cfgspace(i64 %offset, i64 %size) #0 !dbg !10769 {
entry:
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !10773, metadata !DIExpression()), !dbg !10774
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10775, metadata !DIExpression()), !dbg !10776
  %0 = load i64, i64* %offset.addr, align 8, !dbg !10777
  %1 = load i64, i64* %size.addr, align 8, !dbg !10778
  %call = call i8* @ioremap(i64 %0, i64 %1) #11, !dbg !10779
  ret i8* %call, !dbg !10780
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @devm_pci_remap_cfg_resource(%struct.device* %dev, %struct.resource* %res) #0 !dbg !10781 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca %struct.resource*, align 8
  %size = alloca i64, align 8
  %name = alloca i8*, align 8
  %dest_ptr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10784, metadata !DIExpression()), !dbg !10785
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !10786, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.declare(metadata i64* %size, metadata !10788, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.declare(metadata i8** %name, metadata !10790, metadata !DIExpression()), !dbg !10791
  call void @llvm.dbg.declare(metadata i8** %dest_ptr, metadata !10792, metadata !DIExpression()), !dbg !10793
  br label %do.body, !dbg !10794

do.body:                                          ; preds = %entry
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10795
  %tobool = icmp ne %struct.device* %0, null, !dbg !10795
  %lnot = xor i1 %tobool, true, !dbg !10795
  %lnot1 = xor i1 %lnot, true, !dbg !10795
  %lnot2 = xor i1 %lnot1, true, !dbg !10795
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10795
  %conv = sext i32 %lnot.ext to i64, !dbg !10795
  %tobool3 = icmp ne i64 %conv, 0, !dbg !10795
  br i1 %tobool3, label %if.then, label %if.end, !dbg !10798

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !10795

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !10799

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !10801

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !10799

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i32 4183, i32 0, i64 12) #10, !dbg !10803, !srcloc !10805
  br label %do.end7, !dbg !10803

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !10799

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 262) #10, !dbg !10806, !srcloc !10809
  unreachable, !dbg !10810

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !10799

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !10799

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !10798

do.end11:                                         ; preds = %if.end
  %1 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !10811
  %tobool12 = icmp ne %struct.resource* %1, null, !dbg !10811
  br i1 %tobool12, label %lor.lhs.false, label %if.then14, !dbg !10813

lor.lhs.false:                                    ; preds = %do.end11
  %2 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !10814
  %call = call i64 @resource_type(%struct.resource* %2) #11, !dbg !10815
  %cmp = icmp ne i64 %call, 512, !dbg !10816
  br i1 %cmp, label %if.then14, label %if.end16, !dbg !10817

if.then14:                                        ; preds = %lor.lhs.false, %do.end11
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10818
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0)) #12, !dbg !10818
  %call15 = call i8* @ERR_PTR(i64 -22) #11, !dbg !10820
  store i8* %call15, i8** %retval, align 8, !dbg !10821
  br label %return, !dbg !10821

if.end16:                                         ; preds = %lor.lhs.false
  %4 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !10822
  %call17 = call i64 @resource_size(%struct.resource* %4) #11, !dbg !10823
  store i64 %call17, i64* %size, align 8, !dbg !10824
  %5 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !10825
  %name18 = getelementptr inbounds %struct.resource, %struct.resource* %5, i32 0, i32 2, !dbg !10826
  %6 = load i8*, i8** %name18, align 8, !dbg !10826
  %tobool19 = icmp ne i8* %6, null, !dbg !10825
  br i1 %tobool19, label %cond.true, label %cond.false, !dbg !10825

cond.true:                                        ; preds = %if.end16
  br label %cond.end, !dbg !10825

cond.false:                                       ; preds = %if.end16
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10827
  %call20 = call i8* @dev_name(%struct.device* %7) #11, !dbg !10828
  br label %cond.end, !dbg !10825

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ %call20, %cond.false ], !dbg !10825
  store i8* %cond, i8** %name, align 8, !dbg !10829
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10830
  %9 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !10830
  %start = getelementptr inbounds %struct.resource, %struct.resource* %9, i32 0, i32 0, !dbg !10830
  %10 = load i64, i64* %start, align 8, !dbg !10830
  %11 = load i64, i64* %size, align 8, !dbg !10830
  %12 = load i8*, i8** %name, align 8, !dbg !10830
  %call21 = call %struct.resource* @__devm_request_region(%struct.device* %8, %struct.resource* @iomem_resource, i64 %10, i64 %11, i8* %12) #11, !dbg !10830
  %tobool22 = icmp ne %struct.resource* %call21, null, !dbg !10830
  br i1 %tobool22, label %if.end25, label %if.then23, !dbg !10832

if.then23:                                        ; preds = %cond.end
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10833
  %14 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !10833
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %13, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26, i64 0, i64 0), %struct.resource* %14) #12, !dbg !10833
  %call24 = call i8* @ERR_PTR(i64 -16) #11, !dbg !10835
  store i8* %call24, i8** %retval, align 8, !dbg !10836
  br label %return, !dbg !10836

if.end25:                                         ; preds = %cond.end
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10837
  %16 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !10838
  %start26 = getelementptr inbounds %struct.resource, %struct.resource* %16, i32 0, i32 0, !dbg !10839
  %17 = load i64, i64* %start26, align 8, !dbg !10839
  %18 = load i64, i64* %size, align 8, !dbg !10840
  %call27 = call i8* @devm_pci_remap_cfgspace(%struct.device* %15, i64 %17, i64 %18) #11, !dbg !10841
  store i8* %call27, i8** %dest_ptr, align 8, !dbg !10842
  %19 = load i8*, i8** %dest_ptr, align 8, !dbg !10843
  %tobool28 = icmp ne i8* %19, null, !dbg !10843
  br i1 %tobool28, label %if.end32, label %if.then29, !dbg !10845

if.then29:                                        ; preds = %if.end25
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10846
  %21 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !10846
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %20, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.27, i64 0, i64 0), %struct.resource* %21) #12, !dbg !10846
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10848
  %23 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !10848
  %start30 = getelementptr inbounds %struct.resource, %struct.resource* %23, i32 0, i32 0, !dbg !10848
  %24 = load i64, i64* %start30, align 8, !dbg !10848
  %25 = load i64, i64* %size, align 8, !dbg !10848
  call void @__devm_release_region(%struct.device* %22, %struct.resource* @iomem_resource, i64 %24, i64 %25) #11, !dbg !10848
  %call31 = call i8* @ERR_PTR(i64 -12) #11, !dbg !10849
  store i8* %call31, i8** %dest_ptr, align 8, !dbg !10850
  br label %if.end32, !dbg !10851

if.end32:                                         ; preds = %if.then29, %if.end25
  %26 = load i8*, i8** %dest_ptr, align 8, !dbg !10852
  store i8* %26, i8** %retval, align 8, !dbg !10853
  br label %return, !dbg !10853

return:                                           ; preds = %if.end32, %if.then23, %if.then14
  %27 = load i8*, i8** %retval, align 8, !dbg !10854
  ret i8* %27, !dbg !10854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @resource_type(%struct.resource* %res) #0 !dbg !10855 {
entry:
  %res.addr = alloca %struct.resource*, align 8
  store %struct.resource* %res, %struct.resource** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %res.addr, metadata !10858, metadata !DIExpression()), !dbg !10859
  %0 = load %struct.resource*, %struct.resource** %res.addr, align 8, !dbg !10860
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %0, i32 0, i32 3, !dbg !10861
  %1 = load i64, i64* %flags, align 8, !dbg !10861
  %and = and i64 %1, 7936, !dbg !10862
  ret i64 %and, !dbg !10863
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !10864 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !10868, metadata !DIExpression()), !dbg !10869
  %0 = load i64, i64* %error.addr, align 8, !dbg !10870
  %1 = inttoptr i64 %0 to i8*, !dbg !10871
  ret i8* %1, !dbg !10872
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @__devm_request_region(%struct.device*, %struct.resource*, i64, i64, i8*) #3

; Function Attrs: noredzone
declare dso_local void @__devm_release_region(%struct.device*, %struct.resource*, i64, i64) #3

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define weak dso_local i8* @pcibios_setup(i8* %str) #1 section ".init.text" !dbg !10873 {
entry:
  %str.addr = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10876, metadata !DIExpression()), !dbg !10877
  %0 = load i8*, i8** %str.addr, align 8, !dbg !10878
  ret i8* %0, !dbg !10879
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local void @pcibios_set_master(%struct.pci_dev* %dev) #0 !dbg !10880 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %lat = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10881, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.declare(metadata i8* %lat, metadata !10883, metadata !DIExpression()), !dbg !10884
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10885
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %0) #11, !dbg !10887
  br i1 %call, label %if.then, label %if.end, !dbg !10888

if.then:                                          ; preds = %entry
  br label %return, !dbg !10889

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10890
  %call1 = call i32 @pci_read_config_byte(%struct.pci_dev* %1, i32 13, i8* %lat) #11, !dbg !10891
  %2 = load i8, i8* %lat, align 1, !dbg !10892
  %conv = zext i8 %2 to i32, !dbg !10892
  %cmp = icmp slt i32 %conv, 16, !dbg !10894
  br i1 %cmp, label %if.then3, label %if.else, !dbg !10895

if.then3:                                         ; preds = %if.end
  %3 = load i32, i32* @pcibios_max_latency, align 4, !dbg !10896
  %cmp4 = icmp ule i32 64, %3, !dbg !10897
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !10898

cond.true:                                        ; preds = %if.then3
  br label %cond.end, !dbg !10898

cond.false:                                       ; preds = %if.then3
  %4 = load i32, i32* @pcibios_max_latency, align 4, !dbg !10899
  br label %cond.end, !dbg !10898

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 64, %cond.true ], [ %4, %cond.false ], !dbg !10898
  %conv6 = trunc i32 %cond to i8, !dbg !10898
  store i8 %conv6, i8* %lat, align 1, !dbg !10900
  br label %if.end14, !dbg !10901

if.else:                                          ; preds = %if.end
  %5 = load i8, i8* %lat, align 1, !dbg !10902
  %conv7 = zext i8 %5 to i32, !dbg !10902
  %6 = load i32, i32* @pcibios_max_latency, align 4, !dbg !10904
  %cmp8 = icmp ugt i32 %conv7, %6, !dbg !10905
  br i1 %cmp8, label %if.then10, label %if.else12, !dbg !10906

if.then10:                                        ; preds = %if.else
  %7 = load i32, i32* @pcibios_max_latency, align 4, !dbg !10907
  %conv11 = trunc i32 %7 to i8, !dbg !10907
  store i8 %conv11, i8* %lat, align 1, !dbg !10908
  br label %if.end13, !dbg !10909

if.else12:                                        ; preds = %if.else
  br label %return, !dbg !10910

if.end13:                                         ; preds = %if.then10
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %cond.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10911
  %9 = load i8, i8* %lat, align 1, !dbg !10912
  %call15 = call i32 @pci_write_config_byte(%struct.pci_dev* %8, i32 13, i8 zeroext %9) #11, !dbg !10913
  br label %return, !dbg !10914

return:                                           ; preds = %if.end14, %if.else12, %if.then
  ret void, !dbg !10914
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_byte(%struct.pci_dev*, i32, i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_byte(%struct.pci_dev*, i32, i8 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_set_master(%struct.pci_dev* %dev) #0 !dbg !10915 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10916, metadata !DIExpression()), !dbg !10917
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10918
  call void @__pci_set_master(%struct.pci_dev* %0, i1 zeroext true) #11, !dbg !10919
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10920
  call void @pcibios_set_master(%struct.pci_dev* %1) #11, !dbg !10921
  ret void, !dbg !10922
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__pci_set_master(%struct.pci_dev* %dev, i1 zeroext %enable) #0 !dbg !10923 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %enable.addr = alloca i8, align 1
  %old_cmd = alloca i16, align 2
  %cmd = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10924, metadata !DIExpression()), !dbg !10925
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !10926, metadata !DIExpression()), !dbg !10927
  call void @llvm.dbg.declare(metadata i16* %old_cmd, metadata !10928, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !10930, metadata !DIExpression()), !dbg !10931
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10932
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %0, i32 4, i16* %old_cmd) #11, !dbg !10933
  %1 = load i8, i8* %enable.addr, align 1, !dbg !10934
  %tobool = trunc i8 %1 to i1, !dbg !10934
  br i1 %tobool, label %if.then, label %if.else, !dbg !10936

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %old_cmd, align 2, !dbg !10937
  %conv = zext i16 %2 to i32, !dbg !10937
  %or = or i32 %conv, 4, !dbg !10938
  %conv1 = trunc i32 %or to i16, !dbg !10937
  store i16 %conv1, i16* %cmd, align 2, !dbg !10939
  br label %if.end, !dbg !10940

if.else:                                          ; preds = %entry
  %3 = load i16, i16* %old_cmd, align 2, !dbg !10941
  %conv2 = zext i16 %3 to i32, !dbg !10941
  %and = and i32 %conv2, -5, !dbg !10942
  %conv3 = trunc i32 %and to i16, !dbg !10941
  store i16 %conv3, i16* %cmd, align 2, !dbg !10943
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i16, i16* %cmd, align 2, !dbg !10944
  %conv4 = zext i16 %4 to i32, !dbg !10944
  %5 = load i16, i16* %old_cmd, align 2, !dbg !10946
  %conv5 = zext i16 %5 to i32, !dbg !10946
  %cmp = icmp ne i32 %conv4, %conv5, !dbg !10947
  br i1 %cmp, label %if.then7, label %if.end9, !dbg !10948

if.then7:                                         ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10949
  %7 = load i16, i16* %cmd, align 2, !dbg !10951
  %call8 = call i32 @pci_write_config_word(%struct.pci_dev* %6, i32 4, i16 zeroext %7) #11, !dbg !10952
  br label %if.end9, !dbg !10953

if.end9:                                          ; preds = %if.then7, %if.end
  %8 = load i8, i8* %enable.addr, align 1, !dbg !10954
  %tobool10 = trunc i8 %8 to i1, !dbg !10954
  %conv11 = zext i1 %tobool10 to i32, !dbg !10954
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10955
  %is_busmaster = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 46, !dbg !10956
  %10 = bitcast [5 x i8]* %is_busmaster to i40*, !dbg !10956
  %11 = zext i32 %conv11 to i40, !dbg !10957
  %bf.load = load i40, i40* %10, align 1, !dbg !10957
  %bf.value = and i40 %11, 1, !dbg !10957
  %bf.shl = shl i40 %bf.value, 5, !dbg !10957
  %bf.clear = and i40 %bf.load, -33, !dbg !10957
  %bf.set = or i40 %bf.clear, %bf.shl, !dbg !10957
  store i40 %bf.set, i40* %10, align 1, !dbg !10957
  %bf.result.cast = trunc i40 %bf.value to i32, !dbg !10957
  ret void, !dbg !10958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_clear_master(%struct.pci_dev* %dev) #0 !dbg !10959 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10960, metadata !DIExpression()), !dbg !10961
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10962
  call void @__pci_set_master(%struct.pci_dev* %0, i1 zeroext false) #11, !dbg !10963
  ret void, !dbg !10964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_set_cacheline_size(%struct.pci_dev* %dev) #0 !dbg !10965 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cacheline_size = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !10966, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.declare(metadata i8* %cacheline_size, metadata !10968, metadata !DIExpression()), !dbg !10969
  %0 = load i8, i8* @pci_cache_line_size, align 1, !dbg !10970
  %tobool = icmp ne i8 %0, 0, !dbg !10970
  br i1 %tobool, label %if.end, label %if.then, !dbg !10972

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10973
  br label %return, !dbg !10973

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10974
  %call = call i32 @pci_read_config_byte(%struct.pci_dev* %1, i32 12, i8* %cacheline_size) #11, !dbg !10975
  %2 = load i8, i8* %cacheline_size, align 1, !dbg !10976
  %conv = zext i8 %2 to i32, !dbg !10976
  %3 = load i8, i8* @pci_cache_line_size, align 1, !dbg !10978
  %conv1 = zext i8 %3 to i32, !dbg !10978
  %cmp = icmp sge i32 %conv, %conv1, !dbg !10979
  br i1 %cmp, label %land.lhs.true, label %if.end8, !dbg !10980

land.lhs.true:                                    ; preds = %if.end
  %4 = load i8, i8* %cacheline_size, align 1, !dbg !10981
  %conv3 = zext i8 %4 to i32, !dbg !10981
  %5 = load i8, i8* @pci_cache_line_size, align 1, !dbg !10982
  %conv4 = zext i8 %5 to i32, !dbg !10982
  %rem = srem i32 %conv3, %conv4, !dbg !10983
  %cmp5 = icmp eq i32 %rem, 0, !dbg !10984
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !10985

if.then7:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !10986
  br label %return, !dbg !10986

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10987
  %7 = load i8, i8* @pci_cache_line_size, align 1, !dbg !10988
  %call9 = call i32 @pci_write_config_byte(%struct.pci_dev* %6, i32 12, i8 zeroext %7) #11, !dbg !10989
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10990
  %call10 = call i32 @pci_read_config_byte(%struct.pci_dev* %8, i32 12, i8* %cacheline_size) #11, !dbg !10991
  %9 = load i8, i8* %cacheline_size, align 1, !dbg !10992
  %conv11 = zext i8 %9 to i32, !dbg !10992
  %10 = load i8, i8* @pci_cache_line_size, align 1, !dbg !10994
  %conv12 = zext i8 %10 to i32, !dbg !10994
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !10995
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !10996

if.then15:                                        ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !10997
  br label %return, !dbg !10997

if.end16:                                         ; preds = %if.end8
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !10998
  %dev17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !10998
  %12 = load i8, i8* @pci_cache_line_size, align 1, !dbg !10998
  %conv18 = zext i8 %12 to i32, !dbg !10998
  %shl = shl i32 %conv18, 2, !dbg !10998
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev17, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.28, i64 0, i64 0), i32 %shl) #12, !dbg !10998
  store i32 -22, i32* %retval, align 4, !dbg !10999
  br label %return, !dbg !10999

return:                                           ; preds = %if.end16, %if.then15, %if.then7, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !11000
  ret i32 %13, !dbg !11000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_set_mwi(%struct.pci_dev* %dev) #0 !dbg !11001 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rc = alloca i32, align 4
  %cmd = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11002, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11004, metadata !DIExpression()), !dbg !11005
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !11006, metadata !DIExpression()), !dbg !11007
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11008
  %call = call i32 @pci_set_cacheline_size(%struct.pci_dev* %0) #11, !dbg !11009
  store i32 %call, i32* %rc, align 4, !dbg !11010
  %1 = load i32, i32* %rc, align 4, !dbg !11011
  %tobool = icmp ne i32 %1, 0, !dbg !11011
  br i1 %tobool, label %if.then, label %if.end, !dbg !11013

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %rc, align 4, !dbg !11014
  store i32 %2, i32* %retval, align 4, !dbg !11015
  br label %return, !dbg !11015

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11016
  %call1 = call i32 @pci_read_config_word(%struct.pci_dev* %3, i32 4, i16* %cmd) #11, !dbg !11017
  %4 = load i16, i16* %cmd, align 2, !dbg !11018
  %conv = zext i16 %4 to i32, !dbg !11018
  %and = and i32 %conv, 16, !dbg !11020
  %tobool2 = icmp ne i32 %and, 0, !dbg !11020
  br i1 %tobool2, label %if.end7, label %if.then3, !dbg !11021

if.then3:                                         ; preds = %if.end
  %5 = load i16, i16* %cmd, align 2, !dbg !11022
  %conv4 = zext i16 %5 to i32, !dbg !11022
  %or = or i32 %conv4, 16, !dbg !11022
  %conv5 = trunc i32 %or to i16, !dbg !11022
  store i16 %conv5, i16* %cmd, align 2, !dbg !11022
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11024
  %7 = load i16, i16* %cmd, align 2, !dbg !11025
  %call6 = call i32 @pci_write_config_word(%struct.pci_dev* %6, i32 4, i16 zeroext %7) #11, !dbg !11026
  br label %if.end7, !dbg !11027

if.end7:                                          ; preds = %if.then3, %if.end
  store i32 0, i32* %retval, align 4, !dbg !11028
  br label %return, !dbg !11028

return:                                           ; preds = %if.end7, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !11029
  ret i32 %8, !dbg !11029
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcim_set_mwi(%struct.pci_dev* %dev) #0 !dbg !11030 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %dr = alloca %struct.pci_devres*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11031, metadata !DIExpression()), !dbg !11032
  call void @llvm.dbg.declare(metadata %struct.pci_devres** %dr, metadata !11033, metadata !DIExpression()), !dbg !11034
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11035
  %call = call %struct.pci_devres* @find_pci_dr(%struct.pci_dev* %0) #11, !dbg !11036
  store %struct.pci_devres* %call, %struct.pci_devres** %dr, align 8, !dbg !11037
  %1 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !11038
  %tobool = icmp ne %struct.pci_devres* %1, null, !dbg !11038
  br i1 %tobool, label %if.end, label %if.then, !dbg !11040

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !11041
  br label %return, !dbg !11041

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !11042
  %3 = bitcast %struct.pci_devres* %2 to i8*, !dbg !11043
  %bf.load = load i8, i8* %3, align 4, !dbg !11044
  %bf.clear = and i8 %bf.load, -17, !dbg !11044
  %bf.set = or i8 %bf.clear, 16, !dbg !11044
  store i8 %bf.set, i8* %3, align 4, !dbg !11044
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11045
  %call1 = call i32 @pci_set_mwi(%struct.pci_dev* %4) #11, !dbg !11046
  store i32 %call1, i32* %retval, align 4, !dbg !11047
  br label %return, !dbg !11047

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11048
  ret i32 %5, !dbg !11048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_try_set_mwi(%struct.pci_dev* %dev) #0 !dbg !11049 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11050, metadata !DIExpression()), !dbg !11051
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11052
  %call = call i32 @pci_set_mwi(%struct.pci_dev* %0) #11, !dbg !11053
  ret i32 %call, !dbg !11054
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_clear_mwi(%struct.pci_dev* %dev) #0 !dbg !11055 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cmd = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11056, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !11058, metadata !DIExpression()), !dbg !11059
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11060
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %0, i32 4, i16* %cmd) #11, !dbg !11061
  %1 = load i16, i16* %cmd, align 2, !dbg !11062
  %conv = zext i16 %1 to i32, !dbg !11062
  %and = and i32 %conv, 16, !dbg !11064
  %tobool = icmp ne i32 %and, 0, !dbg !11064
  br i1 %tobool, label %if.then, label %if.end, !dbg !11065

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %cmd, align 2, !dbg !11066
  %conv1 = zext i16 %2 to i32, !dbg !11066
  %and2 = and i32 %conv1, -17, !dbg !11066
  %conv3 = trunc i32 %and2 to i16, !dbg !11066
  store i16 %conv3, i16* %cmd, align 2, !dbg !11066
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11068
  %4 = load i16, i16* %cmd, align 2, !dbg !11069
  %call4 = call i32 @pci_write_config_word(%struct.pci_dev* %3, i32 4, i16 zeroext %4) #11, !dbg !11070
  br label %if.end, !dbg !11071

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11072
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_intx(%struct.pci_dev* %pdev, i32 %enable) #0 !dbg !11073 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %enable.addr = alloca i32, align 4
  %pci_command = alloca i16, align 2
  %new = alloca i16, align 2
  %dr = alloca %struct.pci_devres*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !11074, metadata !DIExpression()), !dbg !11075
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !11076, metadata !DIExpression()), !dbg !11077
  call void @llvm.dbg.declare(metadata i16* %pci_command, metadata !11078, metadata !DIExpression()), !dbg !11079
  call void @llvm.dbg.declare(metadata i16* %new, metadata !11080, metadata !DIExpression()), !dbg !11081
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11082
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %0, i32 4, i16* %pci_command) #11, !dbg !11083
  %1 = load i32, i32* %enable.addr, align 4, !dbg !11084
  %tobool = icmp ne i32 %1, 0, !dbg !11084
  br i1 %tobool, label %if.then, label %if.else, !dbg !11086

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %pci_command, align 2, !dbg !11087
  %conv = zext i16 %2 to i32, !dbg !11087
  %and = and i32 %conv, -1025, !dbg !11088
  %conv1 = trunc i32 %and to i16, !dbg !11087
  store i16 %conv1, i16* %new, align 2, !dbg !11089
  br label %if.end, !dbg !11090

if.else:                                          ; preds = %entry
  %3 = load i16, i16* %pci_command, align 2, !dbg !11091
  %conv2 = zext i16 %3 to i32, !dbg !11091
  %or = or i32 %conv2, 1024, !dbg !11092
  %conv3 = trunc i32 %or to i16, !dbg !11091
  store i16 %conv3, i16* %new, align 2, !dbg !11093
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i16, i16* %new, align 2, !dbg !11094
  %conv4 = zext i16 %4 to i32, !dbg !11094
  %5 = load i16, i16* %pci_command, align 2, !dbg !11096
  %conv5 = zext i16 %5 to i32, !dbg !11096
  %cmp = icmp ne i32 %conv4, %conv5, !dbg !11097
  br i1 %cmp, label %if.then7, label %if.end20, !dbg !11098

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.pci_devres** %dr, metadata !11099, metadata !DIExpression()), !dbg !11101
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11102
  %7 = load i16, i16* %new, align 2, !dbg !11103
  %call8 = call i32 @pci_write_config_word(%struct.pci_dev* %6, i32 4, i16 zeroext %7) #11, !dbg !11104
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11105
  %call9 = call %struct.pci_devres* @find_pci_dr(%struct.pci_dev* %8) #11, !dbg !11106
  store %struct.pci_devres* %call9, %struct.pci_devres** %dr, align 8, !dbg !11107
  %9 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !11108
  %tobool10 = icmp ne %struct.pci_devres* %9, null, !dbg !11108
  br i1 %tobool10, label %land.lhs.true, label %if.end19, !dbg !11110

land.lhs.true:                                    ; preds = %if.then7
  %10 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !11111
  %11 = bitcast %struct.pci_devres* %10 to i8*, !dbg !11112
  %bf.load = load i8, i8* %11, align 4, !dbg !11112
  %bf.lshr = lshr i8 %bf.load, 3, !dbg !11112
  %bf.clear = and i8 %bf.lshr, 1, !dbg !11112
  %bf.cast = zext i8 %bf.clear to i32, !dbg !11112
  %tobool11 = icmp ne i32 %bf.cast, 0, !dbg !11111
  br i1 %tobool11, label %if.end19, label %if.then12, !dbg !11113

if.then12:                                        ; preds = %land.lhs.true
  %12 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !11114
  %13 = bitcast %struct.pci_devres* %12 to i8*, !dbg !11116
  %bf.load13 = load i8, i8* %13, align 4, !dbg !11117
  %bf.clear14 = and i8 %bf.load13, -9, !dbg !11117
  %bf.set = or i8 %bf.clear14, 8, !dbg !11117
  store i8 %bf.set, i8* %13, align 4, !dbg !11117
  %14 = load i32, i32* %enable.addr, align 4, !dbg !11118
  %tobool15 = icmp ne i32 %14, 0, !dbg !11119
  %lnot = xor i1 %tobool15, true, !dbg !11119
  %lnot.ext = zext i1 %lnot to i32, !dbg !11119
  %15 = load %struct.pci_devres*, %struct.pci_devres** %dr, align 8, !dbg !11120
  %16 = bitcast %struct.pci_devres* %15 to i8*, !dbg !11121
  %17 = trunc i32 %lnot.ext to i8, !dbg !11122
  %bf.load16 = load i8, i8* %16, align 4, !dbg !11122
  %bf.value = and i8 %17, 1, !dbg !11122
  %bf.shl = shl i8 %bf.value, 2, !dbg !11122
  %bf.clear17 = and i8 %bf.load16, -5, !dbg !11122
  %bf.set18 = or i8 %bf.clear17, %bf.shl, !dbg !11122
  store i8 %bf.set18, i8* %16, align 4, !dbg !11122
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !11122
  br label %if.end19, !dbg !11123

if.end19:                                         ; preds = %if.then12, %land.lhs.true, %if.then7
  br label %if.end20, !dbg !11124

if.end20:                                         ; preds = %if.end19, %if.end
  ret void, !dbg !11125
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_check_and_mask_intx(%struct.pci_dev* %dev) #0 !dbg !11126 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11127, metadata !DIExpression()), !dbg !11128
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11129
  %call = call zeroext i1 @pci_check_and_set_intx_mask(%struct.pci_dev* %0, i1 zeroext true) #11, !dbg !11130
  ret i1 %call, !dbg !11131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_check_and_set_intx_mask(%struct.pci_dev* %dev, i1 zeroext %mask) #0 !dbg !11132 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %mask.addr = alloca i8, align 1
  %bus = alloca %struct.pci_bus*, align 8
  %mask_updated = alloca i8, align 1
  %cmd_status_dword = alloca i32, align 4
  %origcmd = alloca i16, align 2
  %newcmd = alloca i16, align 2
  %flags = alloca i64, align 8
  %irq_pending = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__dummy49 = alloca i64, align 8
  %__dummy250 = alloca i64, align 8
  %tmp53 = alloca i32, align 4
  %__dummy57 = alloca i64, align 8
  %__dummy258 = alloca i64, align 8
  %tmp61 = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11135, metadata !DIExpression()), !dbg !11136
  %frombool = zext i1 %mask to i8
  store i8 %frombool, i8* %mask.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mask.addr, metadata !11137, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus, metadata !11139, metadata !DIExpression()), !dbg !11140
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11141
  %bus1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !11142
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !11142
  store %struct.pci_bus* %1, %struct.pci_bus** %bus, align 8, !dbg !11140
  call void @llvm.dbg.declare(metadata i8* %mask_updated, metadata !11143, metadata !DIExpression()), !dbg !11144
  store i8 1, i8* %mask_updated, align 1, !dbg !11144
  call void @llvm.dbg.declare(metadata i32* %cmd_status_dword, metadata !11145, metadata !DIExpression()), !dbg !11146
  call void @llvm.dbg.declare(metadata i16* %origcmd, metadata !11147, metadata !DIExpression()), !dbg !11148
  call void @llvm.dbg.declare(metadata i16* %newcmd, metadata !11149, metadata !DIExpression()), !dbg !11150
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11151, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.declare(metadata i8* %irq_pending, metadata !11153, metadata !DIExpression()), !dbg !11154
  br label %do.body, !dbg !11155

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11156

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !11158

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !11159

do.end3:                                          ; preds = %do.body2
  br label %do.body4, !dbg !11161

do.body4:                                         ; preds = %do.end3
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11162, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11166, metadata !DIExpression()), !dbg !11165
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11165
  %conv = zext i1 %cmp to i32, !dbg !11165
  store i32 1, i32* %tmp, align 4, !dbg !11165
  %2 = load i32, i32* %tmp, align 4, !dbg !11165
  br label %do.body5, !dbg !11167

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !11168

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !11170

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !11172, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !11176, metadata !DIExpression()), !dbg !11175
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !11175
  %conv11 = zext i1 %cmp10 to i32, !dbg !11175
  store i32 1, i32* %tmp12, align 4, !dbg !11175
  %3 = load i32, i32* %tmp12, align 4, !dbg !11175
  %call = call i64 @arch_local_irq_save() #11, !dbg !11177
  store i64 %call, i64* %flags, align 8, !dbg !11177
  br label %do.end13, !dbg !11177

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !11170

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !11168

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11178, !srcloc !11180
  br label %do.body16, !dbg !11178

do.body16:                                        ; preds = %do.body15
  br label %do.end17, !dbg !11181

do.end17:                                         ; preds = %do.body16
  br label %do.end18, !dbg !11178

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !11168

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11167

do.end20:                                         ; preds = %do.end19
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !11183
  %ops = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 9, !dbg !11184
  %5 = load %struct.pci_ops*, %struct.pci_ops** %ops, align 8, !dbg !11184
  %read = getelementptr inbounds %struct.pci_ops, %struct.pci_ops* %5, i32 0, i32 3, !dbg !11185
  %6 = load i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)** %read, align 8, !dbg !11185
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !11186
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11187
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 6, !dbg !11188
  %9 = load i32, i32* %devfn, align 8, !dbg !11188
  %call21 = call i32 %6(%struct.pci_bus* %7, i32 %9, i32 4, i32 4, i32* %cmd_status_dword) #11, !dbg !11183
  %10 = load i32, i32* %cmd_status_dword, align 4, !dbg !11189
  %shr = lshr i32 %10, 16, !dbg !11190
  %and = and i32 %shr, 8, !dbg !11191
  %tobool = icmp ne i32 %and, 0, !dbg !11192
  %frombool22 = zext i1 %tobool to i8, !dbg !11193
  store i8 %frombool22, i8* %irq_pending, align 1, !dbg !11193
  %11 = load i8, i8* %mask.addr, align 1, !dbg !11194
  %tobool23 = trunc i8 %11 to i1, !dbg !11194
  %conv24 = zext i1 %tobool23 to i32, !dbg !11194
  %12 = load i8, i8* %irq_pending, align 1, !dbg !11196
  %tobool25 = trunc i8 %12 to i1, !dbg !11196
  %conv26 = zext i1 %tobool25 to i32, !dbg !11196
  %cmp27 = icmp ne i32 %conv24, %conv26, !dbg !11197
  br i1 %cmp27, label %if.then, label %if.end, !dbg !11198

if.then:                                          ; preds = %do.end20
  store i8 0, i8* %mask_updated, align 1, !dbg !11199
  br label %done, !dbg !11201

if.end:                                           ; preds = %do.end20
  %13 = load i32, i32* %cmd_status_dword, align 4, !dbg !11202
  %conv29 = trunc i32 %13 to i16, !dbg !11202
  store i16 %conv29, i16* %origcmd, align 2, !dbg !11203
  %14 = load i16, i16* %origcmd, align 2, !dbg !11204
  %conv30 = zext i16 %14 to i32, !dbg !11204
  %and31 = and i32 %conv30, -1025, !dbg !11205
  %conv32 = trunc i32 %and31 to i16, !dbg !11204
  store i16 %conv32, i16* %newcmd, align 2, !dbg !11206
  %15 = load i8, i8* %mask.addr, align 1, !dbg !11207
  %tobool33 = trunc i8 %15 to i1, !dbg !11207
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !11209

if.then34:                                        ; preds = %if.end
  %16 = load i16, i16* %newcmd, align 2, !dbg !11210
  %conv35 = zext i16 %16 to i32, !dbg !11210
  %or = or i32 %conv35, 1024, !dbg !11210
  %conv36 = trunc i32 %or to i16, !dbg !11210
  store i16 %conv36, i16* %newcmd, align 2, !dbg !11210
  br label %if.end37, !dbg !11211

if.end37:                                         ; preds = %if.then34, %if.end
  %17 = load i16, i16* %newcmd, align 2, !dbg !11212
  %conv38 = zext i16 %17 to i32, !dbg !11212
  %18 = load i16, i16* %origcmd, align 2, !dbg !11214
  %conv39 = zext i16 %18 to i32, !dbg !11214
  %cmp40 = icmp ne i32 %conv38, %conv39, !dbg !11215
  br i1 %cmp40, label %if.then42, label %if.end47, !dbg !11216

if.then42:                                        ; preds = %if.end37
  %19 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !11217
  %ops43 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %19, i32 0, i32 9, !dbg !11218
  %20 = load %struct.pci_ops*, %struct.pci_ops** %ops43, align 8, !dbg !11218
  %write = getelementptr inbounds %struct.pci_ops, %struct.pci_ops* %20, i32 0, i32 4, !dbg !11219
  %21 = load i32 (%struct.pci_bus*, i32, i32, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)** %write, align 8, !dbg !11219
  %22 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !11220
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11221
  %devfn44 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 6, !dbg !11222
  %24 = load i32, i32* %devfn44, align 8, !dbg !11222
  %25 = load i16, i16* %newcmd, align 2, !dbg !11223
  %conv45 = zext i16 %25 to i32, !dbg !11223
  %call46 = call i32 %21(%struct.pci_bus* %22, i32 %24, i32 4, i32 2, i32 %conv45) #11, !dbg !11217
  br label %if.end47, !dbg !11217

if.end47:                                         ; preds = %if.then42, %if.end37
  br label %done, !dbg !11214

done:                                             ; preds = %if.end47, %if.then
  call void @llvm.dbg.label(metadata !11224), !dbg !11225
  br label %do.body48, !dbg !11226

do.body48:                                        ; preds = %done
  call void @llvm.dbg.declare(metadata i64* %__dummy49, metadata !11227, metadata !DIExpression()), !dbg !11230
  call void @llvm.dbg.declare(metadata i64* %__dummy250, metadata !11231, metadata !DIExpression()), !dbg !11230
  %cmp51 = icmp eq i64* %__dummy49, %__dummy250, !dbg !11230
  %conv52 = zext i1 %cmp51 to i32, !dbg !11230
  store i32 1, i32* %tmp53, align 4, !dbg !11230
  %26 = load i32, i32* %tmp53, align 4, !dbg !11230
  br label %do.body54, !dbg !11232

do.body54:                                        ; preds = %do.body48
  br label %do.body55, !dbg !11233

do.body55:                                        ; preds = %do.body54
  br label %do.body56, !dbg !11235

do.body56:                                        ; preds = %do.body55
  call void @llvm.dbg.declare(metadata i64* %__dummy57, metadata !11237, metadata !DIExpression()), !dbg !11240
  call void @llvm.dbg.declare(metadata i64* %__dummy258, metadata !11241, metadata !DIExpression()), !dbg !11240
  %cmp59 = icmp eq i64* %__dummy57, %__dummy258, !dbg !11240
  %conv60 = zext i1 %cmp59 to i32, !dbg !11240
  store i32 1, i32* %tmp61, align 4, !dbg !11240
  %27 = load i32, i32* %tmp61, align 4, !dbg !11240
  %28 = load i64, i64* %flags, align 8, !dbg !11242
  call void @arch_local_irq_restore(i64 %28) #11, !dbg !11242
  br label %do.end62, !dbg !11242

do.end62:                                         ; preds = %do.body56
  br label %do.end63, !dbg !11235

do.end63:                                         ; preds = %do.end62
  br label %do.body64, !dbg !11233

do.body64:                                        ; preds = %do.end63
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11243, !srcloc !11245
  br label %do.body65, !dbg !11243

do.body65:                                        ; preds = %do.body64
  br label %do.end66, !dbg !11246

do.end66:                                         ; preds = %do.body65
  br label %do.end67, !dbg !11243

do.end67:                                         ; preds = %do.end66
  br label %do.end68, !dbg !11233

do.end68:                                         ; preds = %do.end67
  br label %do.end69, !dbg !11232

do.end69:                                         ; preds = %do.end68
  %29 = load i8, i8* %mask_updated, align 1, !dbg !11248
  %tobool70 = trunc i8 %29 to i1, !dbg !11248
  ret i1 %tobool70, !dbg !11249
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_check_and_unmask_intx(%struct.pci_dev* %dev) #0 !dbg !11250 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11251, metadata !DIExpression()), !dbg !11252
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11253
  %call = call zeroext i1 @pci_check_and_set_intx_mask(%struct.pci_dev* %0, i1 zeroext false) #11, !dbg !11254
  ret i1 %call, !dbg !11255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_wait_for_pending_transaction(%struct.pci_dev* %dev) #0 !dbg !11256 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11257, metadata !DIExpression()), !dbg !11258
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11259
  %call = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %0) #11, !dbg !11261
  br i1 %call, label %if.end, label %if.then, !dbg !11262

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !11263
  br label %return, !dbg !11263

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11264
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11265
  %call1 = call i32 @pci_pcie_cap(%struct.pci_dev* %2) #11, !dbg !11266
  %add = add i32 %call1, 10, !dbg !11267
  %call2 = call i32 @pci_wait_for_pending(%struct.pci_dev* %1, i32 %add, i16 zeroext 32) #11, !dbg !11268
  store i32 %call2, i32* %retval, align 4, !dbg !11269
  br label %return, !dbg !11269

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !11270
  ret i32 %3, !dbg !11270
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_pcie_cap(%struct.pci_dev* %dev) #0 !dbg !11271 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11272, metadata !DIExpression()), !dbg !11273
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11274
  %pcie_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 14, !dbg !11275
  %1 = load i8, i8* %pcie_cap, align 2, !dbg !11275
  %conv = zext i8 %1 to i32, !dbg !11274
  ret i32 %conv, !dbg !11276
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pcie_has_flr(%struct.pci_dev* %dev) #0 !dbg !11277 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cap = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11278, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !11280, metadata !DIExpression()), !dbg !11281
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11282
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 47, !dbg !11284
  %1 = load i16, i16* %dev_flags, align 2, !dbg !11284
  %conv = zext i16 %1 to i32, !dbg !11282
  %and = and i32 %conv, 1024, !dbg !11285
  %tobool = icmp ne i32 %and, 0, !dbg !11285
  br i1 %tobool, label %if.then, label %if.end, !dbg !11286

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11287
  br label %return, !dbg !11287

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11288
  %call = call i32 @pcie_capability_read_dword(%struct.pci_dev* %2, i32 4, i32* %cap) #11, !dbg !11289
  %3 = load i32, i32* %cap, align 4, !dbg !11290
  %and1 = and i32 %3, 268435456, !dbg !11291
  %tobool2 = icmp ne i32 %and1, 0, !dbg !11290
  store i1 %tobool2, i1* %retval, align 1, !dbg !11292
  br label %return, !dbg !11292

return:                                           ; preds = %if.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !11293
  ret i1 %4, !dbg !11293
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcie_flr(%struct.pci_dev* %dev) #0 !dbg !11294 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11295, metadata !DIExpression()), !dbg !11296
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11297
  %call = call i32 @pci_wait_for_pending_transaction(%struct.pci_dev* %0) #11, !dbg !11299
  %tobool = icmp ne i32 %call, 0, !dbg !11299
  br i1 %tobool, label %if.end, label %if.then, !dbg !11300

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11301
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !11301
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev1, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.29, i64 0, i64 0)) #12, !dbg !11301
  br label %if.end, !dbg !11301

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11302
  %call2 = call i32 @pcie_capability_set_word(%struct.pci_dev* %2, i32 8, i16 zeroext -32768) #11, !dbg !11303
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11304
  %imm_ready = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 27, !dbg !11306
  %bf.load = load i8, i8* %imm_ready, align 4, !dbg !11306
  %bf.clear = and i8 %bf.load, 1, !dbg !11306
  %bf.cast = zext i8 %bf.clear to i32, !dbg !11306
  %tobool3 = icmp ne i32 %bf.cast, 0, !dbg !11304
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !11307

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11308
  br label %return, !dbg !11308

if.end5:                                          ; preds = %if.end
  call void @msleep(i32 100) #11, !dbg !11309
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11310
  %call6 = call i32 @pci_dev_wait(%struct.pci_dev* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i32 60000) #11, !dbg !11311
  store i32 %call6, i32* %retval, align 4, !dbg !11312
  br label %return, !dbg !11312

return:                                           ; preds = %if.end5, %if.then4
  %5 = load i32, i32* %retval, align 4, !dbg !11313
  ret i32 %5, !dbg !11313
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_dev_wait(%struct.pci_dev* %dev, i8* %reset_type, i32 %timeout) #0 !dbg !11314 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %reset_type.addr = alloca i8*, align 8
  %timeout.addr = alloca i32, align 4
  %delay = alloca i32, align 4
  %id = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11317, metadata !DIExpression()), !dbg !11318
  store i8* %reset_type, i8** %reset_type.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %reset_type.addr, metadata !11319, metadata !DIExpression()), !dbg !11320
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !11321, metadata !DIExpression()), !dbg !11322
  call void @llvm.dbg.declare(metadata i32* %delay, metadata !11323, metadata !DIExpression()), !dbg !11324
  store i32 1, i32* %delay, align 4, !dbg !11324
  call void @llvm.dbg.declare(metadata i32* %id, metadata !11325, metadata !DIExpression()), !dbg !11326
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11327
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %0, i32 4, i32* %id) #11, !dbg !11328
  br label %while.cond, !dbg !11329

while.cond:                                       ; preds = %if.end7, %entry
  %1 = load i32, i32* %id, align 4, !dbg !11330
  %cmp = icmp eq i32 %1, -1, !dbg !11331
  br i1 %cmp, label %while.body, label %while.end, !dbg !11329

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %delay, align 4, !dbg !11332
  %3 = load i32, i32* %timeout.addr, align 4, !dbg !11335
  %cmp1 = icmp sgt i32 %2, %3, !dbg !11336
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11337

if.then:                                          ; preds = %while.body
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11338
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !11338
  %5 = load i32, i32* %delay, align 4, !dbg !11338
  %sub = sub i32 %5, 1, !dbg !11338
  %6 = load i8*, i8** %reset_type.addr, align 8, !dbg !11338
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.70, i64 0, i64 0), i32 %sub, i8* %6) #12, !dbg !11338
  store i32 -25, i32* %retval, align 4, !dbg !11340
  br label %return, !dbg !11340

if.end:                                           ; preds = %while.body
  %7 = load i32, i32* %delay, align 4, !dbg !11341
  %cmp3 = icmp sgt i32 %7, 1000, !dbg !11343
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !11344

if.then4:                                         ; preds = %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11345
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !11345
  %9 = load i32, i32* %delay, align 4, !dbg !11345
  %sub6 = sub i32 %9, 1, !dbg !11345
  %10 = load i8*, i8** %reset_type.addr, align 8, !dbg !11345
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.71, i64 0, i64 0), i32 %sub6, i8* %10) #12, !dbg !11345
  br label %if.end7, !dbg !11345

if.end7:                                          ; preds = %if.then4, %if.end
  %11 = load i32, i32* %delay, align 4, !dbg !11346
  call void @msleep(i32 %11) #11, !dbg !11347
  %12 = load i32, i32* %delay, align 4, !dbg !11348
  %mul = mul i32 %12, 2, !dbg !11348
  store i32 %mul, i32* %delay, align 4, !dbg !11348
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11349
  %call8 = call i32 @pci_read_config_dword(%struct.pci_dev* %13, i32 4, i32* %id) #11, !dbg !11350
  br label %while.cond, !dbg !11329, !llvm.loop !11351

while.end:                                        ; preds = %while.cond
  %14 = load i32, i32* %delay, align 4, !dbg !11353
  %cmp9 = icmp sgt i32 %14, 1000, !dbg !11355
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !11356

if.then10:                                        ; preds = %while.end
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11357
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !11357
  %16 = load i32, i32* %delay, align 4, !dbg !11357
  %sub12 = sub i32 %16, 1, !dbg !11357
  %17 = load i8*, i8** %reset_type.addr, align 8, !dbg !11357
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.72, i64 0, i64 0), i32 %sub12, i8* %17) #12, !dbg !11357
  br label %if.end13, !dbg !11357

if.end13:                                         ; preds = %if.then10, %while.end
  store i32 0, i32* %retval, align 4, !dbg !11358
  br label %return, !dbg !11358

return:                                           ; preds = %if.end13, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !11359
  ret i32 %18, !dbg !11359
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pcie_wait_for_link(%struct.pci_dev* %pdev, i1 zeroext %active) #0 !dbg !11360 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %active.addr = alloca i8, align 1
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !11361, metadata !DIExpression()), !dbg !11362
  %frombool = zext i1 %active to i8
  store i8 %frombool, i8* %active.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %active.addr, metadata !11363, metadata !DIExpression()), !dbg !11364
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11365
  %1 = load i8, i8* %active.addr, align 1, !dbg !11366
  %tobool = trunc i8 %1 to i1, !dbg !11366
  %call = call zeroext i1 @pcie_wait_for_link_delay(%struct.pci_dev* %0, i1 zeroext %tobool, i32 100) #11, !dbg !11367
  ret i1 %call, !dbg !11368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pcie_wait_for_link_delay(%struct.pci_dev* %pdev, i1 zeroext %active, i32 %delay) #0 !dbg !11369 {
entry:
  %retval = alloca i1, align 1
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %active.addr = alloca i8, align 1
  %delay.addr = alloca i32, align 4
  %timeout = alloca i32, align 4
  %ret = alloca i8, align 1
  %lnk_status = alloca i16, align 2
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !11372, metadata !DIExpression()), !dbg !11373
  %frombool = zext i1 %active to i8
  store i8 %frombool, i8* %active.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %active.addr, metadata !11374, metadata !DIExpression()), !dbg !11375
  store i32 %delay, i32* %delay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %delay.addr, metadata !11376, metadata !DIExpression()), !dbg !11377
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !11378, metadata !DIExpression()), !dbg !11379
  store i32 1000, i32* %timeout, align 4, !dbg !11379
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !11380, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.declare(metadata i16* %lnk_status, metadata !11382, metadata !DIExpression()), !dbg !11383
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11384
  %link_active_reporting = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !11386
  %1 = bitcast [5 x i8]* %link_active_reporting to i40*, !dbg !11386
  %bf.load = load i40, i40* %1, align 1, !dbg !11386
  %bf.lshr = lshr i40 %bf.load, 34, !dbg !11386
  %bf.clear = and i40 %bf.lshr, 1, !dbg !11386
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !11386
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !11384
  br i1 %tobool, label %if.end, label %if.then, !dbg !11387

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %timeout, align 4, !dbg !11388
  %3 = load i32, i32* %delay.addr, align 4, !dbg !11390
  %add = add i32 %2, %3, !dbg !11391
  call void @msleep(i32 %add) #11, !dbg !11392
  store i1 true, i1* %retval, align 1, !dbg !11393
  br label %return, !dbg !11393

if.end:                                           ; preds = %entry
  %4 = load i8, i8* %active.addr, align 1, !dbg !11394
  %tobool1 = trunc i8 %4 to i1, !dbg !11394
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !11396

if.then2:                                         ; preds = %if.end
  call void @msleep(i32 20) #11, !dbg !11397
  br label %if.end3, !dbg !11397

if.end3:                                          ; preds = %if.then2, %if.end
  br label %for.cond, !dbg !11398

for.cond:                                         ; preds = %if.end17, %if.end3
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !11399
  %call = call i32 @pcie_capability_read_word(%struct.pci_dev* %5, i32 18, i16* %lnk_status) #11, !dbg !11403
  %6 = load i16, i16* %lnk_status, align 2, !dbg !11404
  %conv = zext i16 %6 to i32, !dbg !11404
  %and = and i32 %conv, 8192, !dbg !11405
  %tobool4 = icmp ne i32 %and, 0, !dbg !11406
  %lnot = xor i1 %tobool4, true, !dbg !11406
  %lnot5 = xor i1 %lnot, true, !dbg !11407
  %frombool6 = zext i1 %lnot5 to i8, !dbg !11408
  store i8 %frombool6, i8* %ret, align 1, !dbg !11408
  %7 = load i8, i8* %ret, align 1, !dbg !11409
  %tobool7 = trunc i8 %7 to i1, !dbg !11409
  %conv8 = zext i1 %tobool7 to i32, !dbg !11409
  %8 = load i8, i8* %active.addr, align 1, !dbg !11411
  %tobool9 = trunc i8 %8 to i1, !dbg !11411
  %conv10 = zext i1 %tobool9 to i32, !dbg !11411
  %cmp = icmp eq i32 %conv8, %conv10, !dbg !11412
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !11413

if.then12:                                        ; preds = %for.cond
  br label %for.end, !dbg !11414

if.end13:                                         ; preds = %for.cond
  %9 = load i32, i32* %timeout, align 4, !dbg !11415
  %cmp14 = icmp sle i32 %9, 0, !dbg !11417
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !11418

if.then16:                                        ; preds = %if.end13
  br label %for.end, !dbg !11419

if.end17:                                         ; preds = %if.end13
  call void @msleep(i32 10) #11, !dbg !11420
  %10 = load i32, i32* %timeout, align 4, !dbg !11421
  %sub = sub i32 %10, 10, !dbg !11421
  store i32 %sub, i32* %timeout, align 4, !dbg !11421
  br label %for.cond, !dbg !11422, !llvm.loop !11423

for.end:                                          ; preds = %if.then16, %if.then12
  %11 = load i8, i8* %active.addr, align 1, !dbg !11426
  %tobool18 = trunc i8 %11 to i1, !dbg !11426
  br i1 %tobool18, label %land.lhs.true, label %if.end23, !dbg !11428

land.lhs.true:                                    ; preds = %for.end
  %12 = load i8, i8* %ret, align 1, !dbg !11429
  %tobool20 = trunc i8 %12 to i1, !dbg !11429
  br i1 %tobool20, label %if.then22, label %if.end23, !dbg !11430

if.then22:                                        ; preds = %land.lhs.true
  %13 = load i32, i32* %delay.addr, align 4, !dbg !11431
  call void @msleep(i32 %13) #11, !dbg !11432
  br label %if.end23, !dbg !11432

if.end23:                                         ; preds = %if.then22, %land.lhs.true, %for.end
  %14 = load i8, i8* %ret, align 1, !dbg !11433
  %tobool24 = trunc i8 %14 to i1, !dbg !11433
  %conv25 = zext i1 %tobool24 to i32, !dbg !11433
  %15 = load i8, i8* %active.addr, align 1, !dbg !11434
  %tobool26 = trunc i8 %15 to i1, !dbg !11434
  %conv27 = zext i1 %tobool26 to i32, !dbg !11434
  %cmp28 = icmp eq i32 %conv25, %conv27, !dbg !11435
  store i1 %cmp28, i1* %retval, align 1, !dbg !11436
  br label %return, !dbg !11436

return:                                           ; preds = %if.end23, %if.then
  %16 = load i1, i1* %retval, align 1, !dbg !11437
  ret i1 %16, !dbg !11437
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_bridge_wait_for_secondary_bus(%struct.pci_dev* %dev) #0 !dbg !11438 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %child = alloca %struct.pci_dev*, align 8
  %delay = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11439, metadata !DIExpression()), !dbg !11440
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %child, metadata !11441, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.declare(metadata i32* %delay, metadata !11443, metadata !DIExpression()), !dbg !11444
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11445
  %call = call zeroext i1 @pci_dev_is_disconnected(%struct.pci_dev* %0) #11, !dbg !11447
  br i1 %call, label %if.then, label %if.end, !dbg !11448

if.then:                                          ; preds = %entry
  br label %if.end33, !dbg !11449

if.end:                                           ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11450
  %call1 = call zeroext i1 @pci_is_bridge(%struct.pci_dev* %1) #11, !dbg !11452
  br i1 %call1, label %lor.lhs.false, label %if.then2, !dbg !11453

lor.lhs.false:                                    ; preds = %if.end
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11454
  %bridge_d3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 29, !dbg !11455
  %3 = bitcast i24* %bridge_d3 to i32*, !dbg !11455
  %bf.load = load i32, i32* %3, align 2, !dbg !11455
  %bf.lshr = lshr i32 %bf.load, 10, !dbg !11455
  %bf.clear = and i32 %bf.lshr, 1, !dbg !11455
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !11454
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !11456

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  br label %if.end33, !dbg !11457

if.end3:                                          ; preds = %lor.lhs.false
  call void @down_read(%struct.rw_semaphore* @pci_bus_sem) #11, !dbg !11458
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11459
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 2, !dbg !11461
  %5 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !11461
  %tobool4 = icmp ne %struct.pci_bus* %5, null, !dbg !11459
  br i1 %tobool4, label %lor.lhs.false5, label %if.then9, !dbg !11462

lor.lhs.false5:                                   ; preds = %if.end3
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11463
  %subordinate6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 2, !dbg !11464
  %7 = load %struct.pci_bus*, %struct.pci_bus** %subordinate6, align 8, !dbg !11464
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 3, !dbg !11465
  %call7 = call i32 @list_empty(%struct.list_head* %devices) #11, !dbg !11466
  %tobool8 = icmp ne i32 %call7, 0, !dbg !11466
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !11467

if.then9:                                         ; preds = %lor.lhs.false5, %if.end3
  call void @up_read(%struct.rw_semaphore* @pci_bus_sem) #11, !dbg !11468
  br label %if.end33, !dbg !11470

if.end10:                                         ; preds = %lor.lhs.false5
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11471
  %subordinate11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 2, !dbg !11472
  %9 = load %struct.pci_bus*, %struct.pci_bus** %subordinate11, align 8, !dbg !11472
  %call12 = call i32 @pci_bus_max_d3cold_delay(%struct.pci_bus* %9) #11, !dbg !11473
  store i32 %call12, i32* %delay, align 4, !dbg !11474
  %10 = load i32, i32* %delay, align 4, !dbg !11475
  %tobool13 = icmp ne i32 %10, 0, !dbg !11475
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !11477

if.then14:                                        ; preds = %if.end10
  call void @up_read(%struct.rw_semaphore* @pci_bus_sem) #11, !dbg !11478
  br label %if.end33, !dbg !11480

if.end15:                                         ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11481, metadata !DIExpression()), !dbg !11483
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11483
  %subordinate16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 2, !dbg !11483
  %12 = load %struct.pci_bus*, %struct.pci_bus** %subordinate16, align 8, !dbg !11483
  %devices17 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %12, i32 0, i32 3, !dbg !11483
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices17, i32 0, i32 0, !dbg !11483
  %13 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11483
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !11483
  store i8* %14, i8** %__mptr, align 8, !dbg !11483
  br label %do.body, !dbg !11483

do.body:                                          ; preds = %if.end15
  br label %do.end, !dbg !11484

do.end:                                           ; preds = %do.body
  %15 = load i8*, i8** %__mptr, align 8, !dbg !11483
  %add.ptr = getelementptr i8, i8* %15, i64 0, !dbg !11483
  %16 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !11483
  store %struct.pci_dev* %16, %struct.pci_dev** %tmp, align 8, !dbg !11484
  %17 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !11483
  store %struct.pci_dev* %17, %struct.pci_dev** %child, align 8, !dbg !11486
  call void @up_read(%struct.rw_semaphore* @pci_bus_sem) #11, !dbg !11487
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11488
  %call18 = call zeroext i1 @pci_is_pcie(%struct.pci_dev* %18) #11, !dbg !11490
  br i1 %call18, label %if.end20, label %if.then19, !dbg !11491

if.then19:                                        ; preds = %do.end
  %19 = load i32, i32* %delay, align 4, !dbg !11492
  %add = add i32 1000, %19, !dbg !11494
  call void @msleep(i32 %add) #11, !dbg !11495
  br label %if.end33, !dbg !11496

if.end20:                                         ; preds = %do.end
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11497
  %call21 = call zeroext i1 @pcie_downstream_port(%struct.pci_dev* %20) #11, !dbg !11499
  br i1 %call21, label %if.end23, label %if.then22, !dbg !11500

if.then22:                                        ; preds = %if.end20
  br label %if.end33, !dbg !11501

if.end23:                                         ; preds = %if.end20
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11502
  %call24 = call i32 @pcie_get_speed_cap(%struct.pci_dev* %21) #11, !dbg !11504
  %cmp = icmp ule i32 %call24, 21, !dbg !11505
  br i1 %cmp, label %if.then25, label %if.else, !dbg !11506

if.then25:                                        ; preds = %if.end23
  %22 = load i32, i32* %delay, align 4, !dbg !11507
  call void @msleep(i32 %22) #11, !dbg !11509
  br label %if.end30, !dbg !11510

if.else:                                          ; preds = %if.end23
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11511
  %24 = load i32, i32* %delay, align 4, !dbg !11514
  %call26 = call zeroext i1 @pcie_wait_for_link_delay(%struct.pci_dev* %23, i1 zeroext true, i32 %24) #11, !dbg !11515
  br i1 %call26, label %if.end29, label %if.then27, !dbg !11516

if.then27:                                        ; preds = %if.else
  %25 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11517
  %dev28 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !11517
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev28, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.31, i64 0, i64 0)) #12, !dbg !11517
  br label %if.end33, !dbg !11519

if.end29:                                         ; preds = %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then25
  %26 = load %struct.pci_dev*, %struct.pci_dev** %child, align 8, !dbg !11520
  %call31 = call zeroext i1 @pci_device_is_present(%struct.pci_dev* %26) #11, !dbg !11522
  br i1 %call31, label %if.end33, label %if.then32, !dbg !11523

if.then32:                                        ; preds = %if.end30
  %27 = load i32, i32* %delay, align 4, !dbg !11524
  call void @msleep(i32 %27) #11, !dbg !11526
  br label %if.end33, !dbg !11527

if.end33:                                         ; preds = %if.then, %if.then2, %if.then9, %if.then14, %if.then19, %if.then22, %if.then27, %if.then32, %if.end30
  ret void, !dbg !11528
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_dev_is_disconnected(%struct.pci_dev* %dev) #0 !dbg !11529 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11532, metadata !DIExpression()), !dbg !11533
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11534
  %error_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 40, !dbg !11535
  %1 = load i32, i32* %error_state, align 4, !dbg !11535
  %cmp = icmp eq i32 %1, 3, !dbg !11536
  ret i1 %cmp, !dbg !11537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_is_bridge(%struct.pci_dev* %dev) #0 !dbg !11538 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11539, metadata !DIExpression()), !dbg !11540
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11541
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 13, !dbg !11542
  %1 = load i8, i8* %hdr_type, align 1, !dbg !11542
  %conv = zext i8 %1 to i32, !dbg !11541
  %cmp = icmp eq i32 %conv, 1, !dbg !11543
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11544

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11545
  %hdr_type2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 13, !dbg !11546
  %3 = load i8, i8* %hdr_type2, align 1, !dbg !11546
  %conv3 = zext i8 %3 to i32, !dbg !11545
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !11547
  br label %lor.end, !dbg !11544

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp4, %lor.rhs ]
  ret i1 %4, !dbg !11548
}

; Function Attrs: noredzone
declare dso_local void @down_read(%struct.rw_semaphore*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !11549 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11550, metadata !DIExpression()), !dbg !11551
  br label %do.body, !dbg !11552

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11554

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11552
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !11552
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11552
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !11554
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !11552
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11556
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !11557
  %conv = zext i1 %cmp to i32, !dbg !11557
  ret i32 %conv, !dbg !11558
}

; Function Attrs: noredzone
declare dso_local void @up_read(%struct.rw_semaphore*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_bus_max_d3cold_delay(%struct.pci_bus* %bus) #0 !dbg !11559 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %min_delay = alloca i32, align 4
  %max_delay = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp14 = alloca %struct.pci_dev*, align 8
  %__UNIQUE_ID___x267 = alloca i32, align 4
  %__UNIQUE_ID___y268 = alloca i32, align 4
  %tmp16 = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !11562, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !11564, metadata !DIExpression()), !dbg !11565
  call void @llvm.dbg.declare(metadata i32* %min_delay, metadata !11566, metadata !DIExpression()), !dbg !11567
  store i32 100, i32* %min_delay, align 4, !dbg !11567
  call void @llvm.dbg.declare(metadata i32* %max_delay, metadata !11568, metadata !DIExpression()), !dbg !11569
  store i32 0, i32* %max_delay, align 4, !dbg !11569
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11570, metadata !DIExpression()), !dbg !11573
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !11573
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 3, !dbg !11573
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !11573
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11573
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !11573
  store i8* %2, i8** %__mptr, align 8, !dbg !11573
  br label %do.body, !dbg !11573

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11574

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11573
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !11573
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !11573
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !11574
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !11573
  store %struct.pci_dev* %5, %struct.pci_dev** %pdev, align 8, !dbg !11576
  br label %for.cond, !dbg !11576

for.cond:                                         ; preds = %do.end13, %do.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11577
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 0, !dbg !11577
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !11577
  %devices1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 3, !dbg !11577
  %cmp = icmp eq %struct.list_head* %bus_list, %devices1, !dbg !11577
  %lnot = xor i1 %cmp, true, !dbg !11577
  br i1 %lnot, label %for.body, label %for.end, !dbg !11576

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11579
  %d3cold_delay = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 32, !dbg !11582
  %9 = load i32, i32* %d3cold_delay, align 8, !dbg !11582
  %10 = load i32, i32* %min_delay, align 4, !dbg !11583
  %cmp2 = icmp ult i32 %9, %10, !dbg !11584
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11585

if.then:                                          ; preds = %for.body
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11586
  %d3cold_delay3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 32, !dbg !11587
  %12 = load i32, i32* %d3cold_delay3, align 8, !dbg !11587
  store i32 %12, i32* %min_delay, align 4, !dbg !11588
  br label %if.end, !dbg !11589

if.end:                                           ; preds = %if.then, %for.body
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11590
  %d3cold_delay4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 32, !dbg !11592
  %14 = load i32, i32* %d3cold_delay4, align 8, !dbg !11592
  %15 = load i32, i32* %max_delay, align 4, !dbg !11593
  %cmp5 = icmp ugt i32 %14, %15, !dbg !11594
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !11595

if.then6:                                         ; preds = %if.end
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11596
  %d3cold_delay7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 32, !dbg !11597
  %17 = load i32, i32* %d3cold_delay7, align 8, !dbg !11597
  store i32 %17, i32* %max_delay, align 4, !dbg !11598
  br label %if.end8, !dbg !11599

if.end8:                                          ; preds = %if.then6, %if.end
  br label %for.inc, !dbg !11600

for.inc:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !11601, metadata !DIExpression()), !dbg !11603
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11603
  %bus_list10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 0, !dbg !11603
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list10, i32 0, i32 0, !dbg !11603
  %19 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !11603
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !11603
  store i8* %20, i8** %__mptr9, align 8, !dbg !11603
  br label %do.body12, !dbg !11603

do.body12:                                        ; preds = %for.inc
  br label %do.end13, !dbg !11604

do.end13:                                         ; preds = %do.body12
  %21 = load i8*, i8** %__mptr9, align 8, !dbg !11603
  %add.ptr15 = getelementptr i8, i8* %21, i64 0, !dbg !11603
  %22 = bitcast i8* %add.ptr15 to %struct.pci_dev*, !dbg !11603
  store %struct.pci_dev* %22, %struct.pci_dev** %tmp14, align 8, !dbg !11604
  %23 = load %struct.pci_dev*, %struct.pci_dev** %tmp14, align 8, !dbg !11603
  store %struct.pci_dev* %23, %struct.pci_dev** %pdev, align 8, !dbg !11577
  br label %for.cond, !dbg !11577, !llvm.loop !11606

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x267, metadata !11608, metadata !DIExpression()), !dbg !11610
  %24 = load i32, i32* %min_delay, align 4, !dbg !11610
  store i32 %24, i32* %__UNIQUE_ID___x267, align 4, !dbg !11610
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y268, metadata !11611, metadata !DIExpression()), !dbg !11610
  %25 = load i32, i32* %max_delay, align 4, !dbg !11610
  store i32 %25, i32* %__UNIQUE_ID___y268, align 4, !dbg !11610
  %26 = load i32, i32* %__UNIQUE_ID___x267, align 4, !dbg !11610
  %27 = load i32, i32* %__UNIQUE_ID___y268, align 4, !dbg !11610
  %cmp17 = icmp sgt i32 %26, %27, !dbg !11610
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !11610

cond.true:                                        ; preds = %for.end
  %28 = load i32, i32* %__UNIQUE_ID___x267, align 4, !dbg !11610
  br label %cond.end, !dbg !11610

cond.false:                                       ; preds = %for.end
  %29 = load i32, i32* %__UNIQUE_ID___y268, align 4, !dbg !11610
  br label %cond.end, !dbg !11610

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %28, %cond.true ], [ %29, %cond.false ], !dbg !11610
  store i32 %cond, i32* %tmp16, align 4, !dbg !11610
  %30 = load i32, i32* %tmp16, align 4, !dbg !11610
  ret i32 %30, !dbg !11612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pcie_downstream_port(%struct.pci_dev* %dev) #0 !dbg !11613 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %type = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11614, metadata !DIExpression()), !dbg !11615
  call void @llvm.dbg.declare(metadata i32* %type, metadata !11616, metadata !DIExpression()), !dbg !11617
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11618
  %call = call i32 @pci_pcie_type(%struct.pci_dev* %0) #11, !dbg !11619
  store i32 %call, i32* %type, align 4, !dbg !11617
  %1 = load i32, i32* %type, align 4, !dbg !11620
  %cmp = icmp eq i32 %1, 4, !dbg !11621
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !11622

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %type, align 4, !dbg !11623
  %cmp1 = icmp eq i32 %2, 6, !dbg !11624
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !11625

lor.rhs:                                          ; preds = %lor.lhs.false
  %3 = load i32, i32* %type, align 4, !dbg !11626
  %cmp2 = icmp eq i32 %3, 8, !dbg !11627
  br label %lor.end, !dbg !11625

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %4 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %4, !dbg !11628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcie_get_speed_cap(%struct.pci_dev* %dev) #0 !dbg !11629 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %lnkcap2 = alloca i32, align 4
  %lnkcap = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11632, metadata !DIExpression()), !dbg !11633
  call void @llvm.dbg.declare(metadata i32* %lnkcap2, metadata !11634, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.declare(metadata i32* %lnkcap, metadata !11636, metadata !DIExpression()), !dbg !11637
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11638
  %call = call i32 @pcie_capability_read_dword(%struct.pci_dev* %0, i32 44, i32* %lnkcap2) #11, !dbg !11639
  %1 = load i32, i32* %lnkcap2, align 4, !dbg !11640
  %tobool = icmp ne i32 %1, 0, !dbg !11640
  br i1 %tobool, label %if.then, label %if.end, !dbg !11642

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %lnkcap2, align 4, !dbg !11643
  %and = and i32 %2, 32, !dbg !11643
  %tobool1 = icmp ne i32 %and, 0, !dbg !11643
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !11643

cond.true:                                        ; preds = %if.then
  br label %cond.end21, !dbg !11643

cond.false:                                       ; preds = %if.then
  %3 = load i32, i32* %lnkcap2, align 4, !dbg !11643
  %and2 = and i32 %3, 16, !dbg !11643
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11643
  br i1 %tobool3, label %cond.true4, label %cond.false5, !dbg !11643

cond.true4:                                       ; preds = %cond.false
  br label %cond.end19, !dbg !11643

cond.false5:                                      ; preds = %cond.false
  %4 = load i32, i32* %lnkcap2, align 4, !dbg !11643
  %and6 = and i32 %4, 8, !dbg !11643
  %tobool7 = icmp ne i32 %and6, 0, !dbg !11643
  br i1 %tobool7, label %cond.true8, label %cond.false9, !dbg !11643

cond.true8:                                       ; preds = %cond.false5
  br label %cond.end17, !dbg !11643

cond.false9:                                      ; preds = %cond.false5
  %5 = load i32, i32* %lnkcap2, align 4, !dbg !11643
  %and10 = and i32 %5, 4, !dbg !11643
  %tobool11 = icmp ne i32 %and10, 0, !dbg !11643
  br i1 %tobool11, label %cond.true12, label %cond.false13, !dbg !11643

cond.true12:                                      ; preds = %cond.false9
  br label %cond.end, !dbg !11643

cond.false13:                                     ; preds = %cond.false9
  %6 = load i32, i32* %lnkcap2, align 4, !dbg !11643
  %and14 = and i32 %6, 2, !dbg !11643
  %tobool15 = icmp ne i32 %and14, 0, !dbg !11643
  %7 = zext i1 %tobool15 to i64, !dbg !11643
  %cond = select i1 %tobool15, i32 20, i32 255, !dbg !11643
  br label %cond.end, !dbg !11643

cond.end:                                         ; preds = %cond.false13, %cond.true12
  %cond16 = phi i32 [ 21, %cond.true12 ], [ %cond, %cond.false13 ], !dbg !11643
  br label %cond.end17, !dbg !11643

cond.end17:                                       ; preds = %cond.end, %cond.true8
  %cond18 = phi i32 [ 22, %cond.true8 ], [ %cond16, %cond.end ], !dbg !11643
  br label %cond.end19, !dbg !11643

cond.end19:                                       ; preds = %cond.end17, %cond.true4
  %cond20 = phi i32 [ 23, %cond.true4 ], [ %cond18, %cond.end17 ], !dbg !11643
  br label %cond.end21, !dbg !11643

cond.end21:                                       ; preds = %cond.end19, %cond.true
  %cond22 = phi i32 [ 24, %cond.true ], [ %cond20, %cond.end19 ], !dbg !11643
  store i32 %cond22, i32* %retval, align 4, !dbg !11644
  br label %return, !dbg !11644

if.end:                                           ; preds = %entry
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11645
  %call23 = call i32 @pcie_capability_read_dword(%struct.pci_dev* %8, i32 12, i32* %lnkcap) #11, !dbg !11646
  %9 = load i32, i32* %lnkcap, align 4, !dbg !11647
  %and24 = and i32 %9, 15, !dbg !11649
  %cmp = icmp eq i32 %and24, 2, !dbg !11650
  br i1 %cmp, label %if.then25, label %if.else, !dbg !11651

if.then25:                                        ; preds = %if.end
  store i32 21, i32* %retval, align 4, !dbg !11652
  br label %return, !dbg !11652

if.else:                                          ; preds = %if.end
  %10 = load i32, i32* %lnkcap, align 4, !dbg !11653
  %and26 = and i32 %10, 15, !dbg !11655
  %cmp27 = icmp eq i32 %and26, 1, !dbg !11656
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !11657

if.then28:                                        ; preds = %if.else
  store i32 20, i32* %retval, align 4, !dbg !11658
  br label %return, !dbg !11658

if.end29:                                         ; preds = %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end29
  store i32 255, i32* %retval, align 4, !dbg !11659
  br label %return, !dbg !11659

return:                                           ; preds = %if.end30, %if.then28, %if.then25, %cond.end21
  %11 = load i32, i32* %retval, align 4, !dbg !11660
  ret i32 %11, !dbg !11660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_reset_secondary_bus(%struct.pci_dev* %dev) #0 !dbg !11661 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ctrl = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11662, metadata !DIExpression()), !dbg !11663
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !11664, metadata !DIExpression()), !dbg !11665
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11666
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %0, i32 62, i16* %ctrl) #11, !dbg !11667
  %1 = load i16, i16* %ctrl, align 2, !dbg !11668
  %conv = zext i16 %1 to i32, !dbg !11668
  %or = or i32 %conv, 64, !dbg !11668
  %conv1 = trunc i32 %or to i16, !dbg !11668
  store i16 %conv1, i16* %ctrl, align 2, !dbg !11668
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11669
  %3 = load i16, i16* %ctrl, align 2, !dbg !11670
  %call2 = call i32 @pci_write_config_word(%struct.pci_dev* %2, i32 62, i16 zeroext %3) #11, !dbg !11671
  call void @msleep(i32 2) #11, !dbg !11672
  %4 = load i16, i16* %ctrl, align 2, !dbg !11673
  %conv3 = zext i16 %4 to i32, !dbg !11673
  %and = and i32 %conv3, -65, !dbg !11673
  %conv4 = trunc i32 %and to i16, !dbg !11673
  store i16 %conv4, i16* %ctrl, align 2, !dbg !11673
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11674
  %6 = load i16, i16* %ctrl, align 2, !dbg !11675
  %call5 = call i32 @pci_write_config_word(%struct.pci_dev* %5, i32 62, i16 zeroext %6) #11, !dbg !11676
  call void @ssleep(i32 1) #11, !dbg !11677
  ret void, !dbg !11678
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ssleep(i32 %seconds) #0 !dbg !11679 {
entry:
  %seconds.addr = alloca i32, align 4
  store i32 %seconds, i32* %seconds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seconds.addr, metadata !11683, metadata !DIExpression()), !dbg !11684
  %0 = load i32, i32* %seconds.addr, align 4, !dbg !11685
  %mul = mul i32 %0, 1000, !dbg !11686
  call void @msleep(i32 %mul) #11, !dbg !11687
  ret void, !dbg !11688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local void @pcibios_reset_secondary_bus(%struct.pci_dev* %dev) #0 !dbg !11689 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11690, metadata !DIExpression()), !dbg !11691
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11692
  call void @pci_reset_secondary_bus(%struct.pci_dev* %0) #11, !dbg !11693
  ret void, !dbg !11694
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_bridge_secondary_bus_reset(%struct.pci_dev* %dev) #0 !dbg !11695 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11696, metadata !DIExpression()), !dbg !11697
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11698
  call void @pcibios_reset_secondary_bus(%struct.pci_dev* %0) #11, !dbg !11699
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11700
  %call = call i32 @pci_dev_wait(%struct.pci_dev* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i32 60000) #11, !dbg !11701
  ret i32 %call, !dbg !11702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__pci_reset_function_locked(%struct.pci_dev* %dev) #0 !dbg !11703 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11704, metadata !DIExpression()), !dbg !11705
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11706, metadata !DIExpression()), !dbg !11707
  br label %do.body, !dbg !11708

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11709

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !11711

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !11709

do.end2:                                          ; preds = %do.end
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11713
  %call = call i32 @pci_dev_specific_reset(%struct.pci_dev* %0, i32 0) #11, !dbg !11714
  store i32 %call, i32* %rc, align 4, !dbg !11715
  %1 = load i32, i32* %rc, align 4, !dbg !11716
  %cmp = icmp ne i32 %1, -25, !dbg !11718
  br i1 %cmp, label %if.then, label %if.end, !dbg !11719

if.then:                                          ; preds = %do.end2
  %2 = load i32, i32* %rc, align 4, !dbg !11720
  store i32 %2, i32* %retval, align 4, !dbg !11721
  br label %return, !dbg !11721

if.end:                                           ; preds = %do.end2
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11722
  %call3 = call zeroext i1 @pcie_has_flr(%struct.pci_dev* %3) #11, !dbg !11724
  br i1 %call3, label %if.then4, label %if.end9, !dbg !11725

if.then4:                                         ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11726
  %call5 = call i32 @pcie_flr(%struct.pci_dev* %4) #11, !dbg !11728
  store i32 %call5, i32* %rc, align 4, !dbg !11729
  %5 = load i32, i32* %rc, align 4, !dbg !11730
  %cmp6 = icmp ne i32 %5, -25, !dbg !11732
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11733

if.then7:                                         ; preds = %if.then4
  %6 = load i32, i32* %rc, align 4, !dbg !11734
  store i32 %6, i32* %retval, align 4, !dbg !11735
  br label %return, !dbg !11735

if.end8:                                          ; preds = %if.then4
  br label %if.end9, !dbg !11736

if.end9:                                          ; preds = %if.end8, %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11737
  %call10 = call i32 @pci_af_flr(%struct.pci_dev* %7, i32 0) #11, !dbg !11738
  store i32 %call10, i32* %rc, align 4, !dbg !11739
  %8 = load i32, i32* %rc, align 4, !dbg !11740
  %cmp11 = icmp ne i32 %8, -25, !dbg !11742
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !11743

if.then12:                                        ; preds = %if.end9
  %9 = load i32, i32* %rc, align 4, !dbg !11744
  store i32 %9, i32* %retval, align 4, !dbg !11745
  br label %return, !dbg !11745

if.end13:                                         ; preds = %if.end9
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11746
  %call14 = call i32 @pci_pm_reset(%struct.pci_dev* %10, i32 0) #11, !dbg !11747
  store i32 %call14, i32* %rc, align 4, !dbg !11748
  %11 = load i32, i32* %rc, align 4, !dbg !11749
  %cmp15 = icmp ne i32 %11, -25, !dbg !11751
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !11752

if.then16:                                        ; preds = %if.end13
  %12 = load i32, i32* %rc, align 4, !dbg !11753
  store i32 %12, i32* %retval, align 4, !dbg !11754
  br label %return, !dbg !11754

if.end17:                                         ; preds = %if.end13
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11755
  %call18 = call i32 @pci_dev_reset_slot_function(%struct.pci_dev* %13, i32 0) #11, !dbg !11756
  store i32 %call18, i32* %rc, align 4, !dbg !11757
  %14 = load i32, i32* %rc, align 4, !dbg !11758
  %cmp19 = icmp ne i32 %14, -25, !dbg !11760
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !11761

if.then20:                                        ; preds = %if.end17
  %15 = load i32, i32* %rc, align 4, !dbg !11762
  store i32 %15, i32* %retval, align 4, !dbg !11763
  br label %return, !dbg !11763

if.end21:                                         ; preds = %if.end17
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11764
  %call22 = call i32 @pci_parent_bus_reset(%struct.pci_dev* %16, i32 0) #11, !dbg !11765
  store i32 %call22, i32* %retval, align 4, !dbg !11766
  br label %return, !dbg !11766

return:                                           ; preds = %if.end21, %if.then20, %if.then16, %if.then12, %if.then7, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !11767
  ret i32 %17, !dbg !11767
}

; Function Attrs: noredzone
declare dso_local i32 @pci_dev_specific_reset(%struct.pci_dev*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_af_flr(%struct.pci_dev* %dev, i32 %probe) #0 !dbg !11768 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %probe.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %cap = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11769, metadata !DIExpression()), !dbg !11770
  store i32 %probe, i32* %probe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %probe.addr, metadata !11771, metadata !DIExpression()), !dbg !11772
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !11773, metadata !DIExpression()), !dbg !11774
  call void @llvm.dbg.declare(metadata i8* %cap, metadata !11775, metadata !DIExpression()), !dbg !11776
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11777
  %call = call i32 @pci_find_capability(%struct.pci_dev* %0, i32 19) #11, !dbg !11778
  store i32 %call, i32* %pos, align 4, !dbg !11779
  %1 = load i32, i32* %pos, align 4, !dbg !11780
  %tobool = icmp ne i32 %1, 0, !dbg !11780
  br i1 %tobool, label %if.end, label %if.then, !dbg !11782

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !11783
  br label %return, !dbg !11783

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11784
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 47, !dbg !11786
  %3 = load i16, i16* %dev_flags, align 2, !dbg !11786
  %conv = zext i16 %3 to i32, !dbg !11784
  %and = and i32 %conv, 1024, !dbg !11787
  %tobool1 = icmp ne i32 %and, 0, !dbg !11787
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !11788

if.then2:                                         ; preds = %if.end
  store i32 -25, i32* %retval, align 4, !dbg !11789
  br label %return, !dbg !11789

if.end3:                                          ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11790
  %5 = load i32, i32* %pos, align 4, !dbg !11791
  %add = add i32 %5, 3, !dbg !11792
  %call4 = call i32 @pci_read_config_byte(%struct.pci_dev* %4, i32 %add, i8* %cap) #11, !dbg !11793
  %6 = load i8, i8* %cap, align 1, !dbg !11794
  %conv5 = zext i8 %6 to i32, !dbg !11794
  %and6 = and i32 %conv5, 1, !dbg !11796
  %tobool7 = icmp ne i32 %and6, 0, !dbg !11796
  br i1 %tobool7, label %lor.lhs.false, label %if.then11, !dbg !11797

lor.lhs.false:                                    ; preds = %if.end3
  %7 = load i8, i8* %cap, align 1, !dbg !11798
  %conv8 = zext i8 %7 to i32, !dbg !11798
  %and9 = and i32 %conv8, 2, !dbg !11799
  %tobool10 = icmp ne i32 %and9, 0, !dbg !11799
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !11800

if.then11:                                        ; preds = %lor.lhs.false, %if.end3
  store i32 -25, i32* %retval, align 4, !dbg !11801
  br label %return, !dbg !11801

if.end12:                                         ; preds = %lor.lhs.false
  %8 = load i32, i32* %probe.addr, align 4, !dbg !11802
  %tobool13 = icmp ne i32 %8, 0, !dbg !11802
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !11804

if.then14:                                        ; preds = %if.end12
  store i32 0, i32* %retval, align 4, !dbg !11805
  br label %return, !dbg !11805

if.end15:                                         ; preds = %if.end12
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11806
  %10 = load i32, i32* %pos, align 4, !dbg !11808
  %add16 = add i32 %10, 4, !dbg !11809
  %call17 = call i32 @pci_wait_for_pending(%struct.pci_dev* %9, i32 %add16, i16 zeroext 256) #11, !dbg !11810
  %tobool18 = icmp ne i32 %call17, 0, !dbg !11810
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !11811

if.then19:                                        ; preds = %if.end15
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11812
  %dev20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !11812
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev20, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.73, i64 0, i64 0)) #12, !dbg !11812
  br label %if.end21, !dbg !11812

if.end21:                                         ; preds = %if.then19, %if.end15
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11813
  %13 = load i32, i32* %pos, align 4, !dbg !11814
  %add22 = add i32 %13, 4, !dbg !11815
  %call23 = call i32 @pci_write_config_byte(%struct.pci_dev* %12, i32 %add22, i8 zeroext 1) #11, !dbg !11816
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11817
  %imm_ready = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 27, !dbg !11819
  %bf.load = load i8, i8* %imm_ready, align 4, !dbg !11819
  %bf.clear = and i8 %bf.load, 1, !dbg !11819
  %bf.cast = zext i8 %bf.clear to i32, !dbg !11819
  %tobool24 = icmp ne i32 %bf.cast, 0, !dbg !11817
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !11820

if.then25:                                        ; preds = %if.end21
  store i32 0, i32* %retval, align 4, !dbg !11821
  br label %return, !dbg !11821

if.end26:                                         ; preds = %if.end21
  call void @msleep(i32 100) #11, !dbg !11822
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11823
  %call27 = call i32 @pci_dev_wait(%struct.pci_dev* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74, i64 0, i64 0), i32 60000) #11, !dbg !11824
  store i32 %call27, i32* %retval, align 4, !dbg !11825
  br label %return, !dbg !11825

return:                                           ; preds = %if.end26, %if.then25, %if.then14, %if.then11, %if.then2, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !11826
  ret i32 %16, !dbg !11826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_pm_reset(%struct.pci_dev* %dev, i32 %probe) #0 !dbg !11827 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %probe.addr = alloca i32, align 4
  %csr = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11828, metadata !DIExpression()), !dbg !11829
  store i32 %probe, i32* %probe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %probe.addr, metadata !11830, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.declare(metadata i16* %csr, metadata !11832, metadata !DIExpression()), !dbg !11833
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11834
  %pm_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 28, !dbg !11836
  %1 = load i8, i8* %pm_cap, align 1, !dbg !11836
  %tobool = icmp ne i8 %1, 0, !dbg !11834
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11837

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11838
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 47, !dbg !11839
  %3 = load i16, i16* %dev_flags, align 2, !dbg !11839
  %conv = zext i16 %3 to i32, !dbg !11838
  %and = and i32 %conv, 128, !dbg !11840
  %tobool1 = icmp ne i32 %and, 0, !dbg !11840
  br i1 %tobool1, label %if.then, label %if.end, !dbg !11841

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -25, i32* %retval, align 4, !dbg !11842
  br label %return, !dbg !11842

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11843
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11844
  %pm_cap2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 28, !dbg !11845
  %6 = load i8, i8* %pm_cap2, align 1, !dbg !11845
  %conv3 = zext i8 %6 to i32, !dbg !11844
  %add = add i32 %conv3, 4, !dbg !11846
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %4, i32 %add, i16* %csr) #11, !dbg !11847
  %7 = load i16, i16* %csr, align 2, !dbg !11848
  %conv4 = zext i16 %7 to i32, !dbg !11848
  %and5 = and i32 %conv4, 8, !dbg !11850
  %tobool6 = icmp ne i32 %and5, 0, !dbg !11850
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !11851

if.then7:                                         ; preds = %if.end
  store i32 -25, i32* %retval, align 4, !dbg !11852
  br label %return, !dbg !11852

if.end8:                                          ; preds = %if.end
  %8 = load i32, i32* %probe.addr, align 4, !dbg !11853
  %tobool9 = icmp ne i32 %8, 0, !dbg !11853
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !11855

if.then10:                                        ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !11856
  br label %return, !dbg !11856

if.end11:                                         ; preds = %if.end8
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11857
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 26, !dbg !11859
  %10 = load i32, i32* %current_state, align 8, !dbg !11859
  %cmp = icmp ne i32 %10, 0, !dbg !11860
  br i1 %cmp, label %if.then13, label %if.end14, !dbg !11861

if.then13:                                        ; preds = %if.end11
  store i32 -22, i32* %retval, align 4, !dbg !11862
  br label %return, !dbg !11862

if.end14:                                         ; preds = %if.end11
  %11 = load i16, i16* %csr, align 2, !dbg !11863
  %conv15 = zext i16 %11 to i32, !dbg !11863
  %and16 = and i32 %conv15, -4, !dbg !11863
  %conv17 = trunc i32 %and16 to i16, !dbg !11863
  store i16 %conv17, i16* %csr, align 2, !dbg !11863
  %12 = load i16, i16* %csr, align 2, !dbg !11864
  %conv18 = zext i16 %12 to i32, !dbg !11864
  %or = or i32 %conv18, 3, !dbg !11864
  %conv19 = trunc i32 %or to i16, !dbg !11864
  store i16 %conv19, i16* %csr, align 2, !dbg !11864
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11865
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11866
  %pm_cap20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 28, !dbg !11867
  %15 = load i8, i8* %pm_cap20, align 1, !dbg !11867
  %conv21 = zext i8 %15 to i32, !dbg !11866
  %add22 = add i32 %conv21, 4, !dbg !11868
  %16 = load i16, i16* %csr, align 2, !dbg !11869
  %call23 = call i32 @pci_write_config_word(%struct.pci_dev* %13, i32 %add22, i16 zeroext %16) #11, !dbg !11870
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11871
  call void @pci_dev_d3_sleep(%struct.pci_dev* %17) #11, !dbg !11872
  %18 = load i16, i16* %csr, align 2, !dbg !11873
  %conv24 = zext i16 %18 to i32, !dbg !11873
  %and25 = and i32 %conv24, -4, !dbg !11873
  %conv26 = trunc i32 %and25 to i16, !dbg !11873
  store i16 %conv26, i16* %csr, align 2, !dbg !11873
  %19 = load i16, i16* %csr, align 2, !dbg !11874
  %conv27 = zext i16 %19 to i32, !dbg !11874
  %conv28 = trunc i32 %conv27 to i16, !dbg !11874
  store i16 %conv28, i16* %csr, align 2, !dbg !11874
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11875
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11876
  %pm_cap29 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 28, !dbg !11877
  %22 = load i8, i8* %pm_cap29, align 1, !dbg !11877
  %conv30 = zext i8 %22 to i32, !dbg !11876
  %add31 = add i32 %conv30, 4, !dbg !11878
  %23 = load i16, i16* %csr, align 2, !dbg !11879
  %call32 = call i32 @pci_write_config_word(%struct.pci_dev* %20, i32 %add31, i16 zeroext %23) #11, !dbg !11880
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11881
  call void @pci_dev_d3_sleep(%struct.pci_dev* %24) #11, !dbg !11882
  %25 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11883
  %call33 = call i32 @pci_dev_wait(%struct.pci_dev* %25, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.75, i64 0, i64 0), i32 60000) #11, !dbg !11884
  store i32 %call33, i32* %retval, align 4, !dbg !11885
  br label %return, !dbg !11885

return:                                           ; preds = %if.end14, %if.then13, %if.then10, %if.then7, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !11886
  ret i32 %26, !dbg !11886
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_dev_reset_slot_function(%struct.pci_dev* %dev, i32 %probe) #0 !dbg !11887 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %probe.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11888, metadata !DIExpression()), !dbg !11889
  store i32 %probe, i32* %probe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %probe.addr, metadata !11890, metadata !DIExpression()), !dbg !11891
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11892
  %multifunction = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !11894
  %1 = bitcast [5 x i8]* %multifunction to i40*, !dbg !11894
  %bf.load = load i40, i40* %1, align 1, !dbg !11894
  %bf.lshr = lshr i40 %bf.load, 4, !dbg !11894
  %bf.clear = and i40 %bf.lshr, 1, !dbg !11894
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !11894
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !11892
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !11895

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11896
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 2, !dbg !11897
  %3 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !11897
  %tobool1 = icmp ne %struct.pci_bus* %3, null, !dbg !11896
  br i1 %tobool1, label %if.then, label %lor.lhs.false2, !dbg !11898

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11899
  %slot = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 5, !dbg !11900
  %5 = load %struct.pci_slot*, %struct.pci_slot** %slot, align 8, !dbg !11900
  %tobool3 = icmp ne %struct.pci_slot* %5, null, !dbg !11899
  br i1 %tobool3, label %lor.lhs.false4, label %if.then, !dbg !11901

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11902
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 47, !dbg !11903
  %7 = load i16, i16* %dev_flags, align 2, !dbg !11903
  %conv = zext i16 %7 to i32, !dbg !11902
  %and = and i32 %conv, 64, !dbg !11904
  %tobool5 = icmp ne i32 %and, 0, !dbg !11904
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11905

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -25, i32* %retval, align 4, !dbg !11906
  br label %return, !dbg !11906

if.end:                                           ; preds = %lor.lhs.false4
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11907
  %slot6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 5, !dbg !11908
  %9 = load %struct.pci_slot*, %struct.pci_slot** %slot6, align 8, !dbg !11908
  %hotplug = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %9, i32 0, i32 2, !dbg !11909
  %10 = load %struct.hotplug_slot*, %struct.hotplug_slot** %hotplug, align 8, !dbg !11909
  %11 = load i32, i32* %probe.addr, align 4, !dbg !11910
  %call = call i32 @pci_reset_hotplug_slot(%struct.hotplug_slot* %10, i32 %11) #11, !dbg !11911
  store i32 %call, i32* %retval, align 4, !dbg !11912
  br label %return, !dbg !11912

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !11913
  ret i32 %12, !dbg !11913
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_parent_bus_reset(%struct.pci_dev* %dev, i32 %probe) #0 !dbg !11914 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %probe.addr = alloca i32, align 4
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr14 = alloca i8*, align 8
  %tmp19 = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11915, metadata !DIExpression()), !dbg !11916
  store i32 %probe, i32* %probe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %probe.addr, metadata !11917, metadata !DIExpression()), !dbg !11918
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !11919, metadata !DIExpression()), !dbg !11920
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11921
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !11923
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !11923
  %call = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %1) #11, !dbg !11924
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !11925

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11926
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 2, !dbg !11927
  %3 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !11927
  %tobool = icmp ne %struct.pci_bus* %3, null, !dbg !11926
  br i1 %tobool, label %if.then, label %lor.lhs.false1, !dbg !11928

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11929
  %bus2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 1, !dbg !11930
  %5 = load %struct.pci_bus*, %struct.pci_bus** %bus2, align 8, !dbg !11930
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 4, !dbg !11931
  %6 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !11931
  %tobool3 = icmp ne %struct.pci_dev* %6, null, !dbg !11929
  br i1 %tobool3, label %lor.lhs.false4, label %if.then, !dbg !11932

lor.lhs.false4:                                   ; preds = %lor.lhs.false1
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11933
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 47, !dbg !11934
  %8 = load i16, i16* %dev_flags, align 2, !dbg !11934
  %conv = zext i16 %8 to i32, !dbg !11933
  %and = and i32 %conv, 64, !dbg !11935
  %tobool5 = icmp ne i32 %and, 0, !dbg !11935
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11936

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false1, %lor.lhs.false, %entry
  store i32 -25, i32* %retval, align 4, !dbg !11937
  br label %return, !dbg !11937

if.end:                                           ; preds = %lor.lhs.false4
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11938, metadata !DIExpression()), !dbg !11941
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11941
  %bus6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 1, !dbg !11941
  %10 = load %struct.pci_bus*, %struct.pci_bus** %bus6, align 8, !dbg !11941
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %10, i32 0, i32 3, !dbg !11941
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !11941
  %11 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11941
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !11941
  store i8* %12, i8** %__mptr, align 8, !dbg !11941
  br label %do.body, !dbg !11941

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !11942

do.end:                                           ; preds = %do.body
  %13 = load i8*, i8** %__mptr, align 8, !dbg !11941
  %add.ptr = getelementptr i8, i8* %13, i64 0, !dbg !11941
  %14 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !11941
  store %struct.pci_dev* %14, %struct.pci_dev** %tmp, align 8, !dbg !11942
  %15 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !11941
  store %struct.pci_dev* %15, %struct.pci_dev** %pdev, align 8, !dbg !11944
  br label %for.cond, !dbg !11944

for.cond:                                         ; preds = %do.end18, %do.end
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11945
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 0, !dbg !11945
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11945
  %bus7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 1, !dbg !11945
  %18 = load %struct.pci_bus*, %struct.pci_bus** %bus7, align 8, !dbg !11945
  %devices8 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %18, i32 0, i32 3, !dbg !11945
  %cmp = icmp eq %struct.list_head* %bus_list, %devices8, !dbg !11945
  %lnot = xor i1 %cmp, true, !dbg !11945
  br i1 %lnot, label %for.body, label %for.end, !dbg !11944

for.body:                                         ; preds = %for.cond
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11947
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11949
  %cmp10 = icmp ne %struct.pci_dev* %19, %20, !dbg !11950
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !11951

if.then12:                                        ; preds = %for.body
  store i32 -25, i32* %retval, align 4, !dbg !11952
  br label %return, !dbg !11952

if.end13:                                         ; preds = %for.body
  br label %for.inc, !dbg !11949

for.inc:                                          ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i8** %__mptr14, metadata !11953, metadata !DIExpression()), !dbg !11955
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !11955
  %bus_list15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 0, !dbg !11955
  %next16 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list15, i32 0, i32 0, !dbg !11955
  %22 = load %struct.list_head*, %struct.list_head** %next16, align 8, !dbg !11955
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !11955
  store i8* %23, i8** %__mptr14, align 8, !dbg !11955
  br label %do.body17, !dbg !11955

do.body17:                                        ; preds = %for.inc
  br label %do.end18, !dbg !11956

do.end18:                                         ; preds = %do.body17
  %24 = load i8*, i8** %__mptr14, align 8, !dbg !11955
  %add.ptr20 = getelementptr i8, i8* %24, i64 0, !dbg !11955
  %25 = bitcast i8* %add.ptr20 to %struct.pci_dev*, !dbg !11955
  store %struct.pci_dev* %25, %struct.pci_dev** %tmp19, align 8, !dbg !11956
  %26 = load %struct.pci_dev*, %struct.pci_dev** %tmp19, align 8, !dbg !11955
  store %struct.pci_dev* %26, %struct.pci_dev** %pdev, align 8, !dbg !11945
  br label %for.cond, !dbg !11945, !llvm.loop !11958

for.end:                                          ; preds = %for.cond
  %27 = load i32, i32* %probe.addr, align 4, !dbg !11960
  %tobool21 = icmp ne i32 %27, 0, !dbg !11960
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !11962

if.then22:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !11963
  br label %return, !dbg !11963

if.end23:                                         ; preds = %for.end
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11964
  %bus24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 1, !dbg !11965
  %29 = load %struct.pci_bus*, %struct.pci_bus** %bus24, align 8, !dbg !11965
  %self25 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %29, i32 0, i32 4, !dbg !11966
  %30 = load %struct.pci_dev*, %struct.pci_dev** %self25, align 8, !dbg !11966
  %call26 = call i32 @pci_bridge_secondary_bus_reset(%struct.pci_dev* %30) #11, !dbg !11967
  store i32 %call26, i32* %retval, align 4, !dbg !11968
  br label %return, !dbg !11968

return:                                           ; preds = %if.end23, %if.then22, %if.then12, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !11969
  ret i32 %31, !dbg !11969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_probe_reset_function(%struct.pci_dev* %dev) #0 !dbg !11970 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11971, metadata !DIExpression()), !dbg !11972
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11973, metadata !DIExpression()), !dbg !11974
  br label %do.body, !dbg !11975

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11976

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !11978

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !11976

do.end2:                                          ; preds = %do.end
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11980
  %call = call i32 @pci_dev_specific_reset(%struct.pci_dev* %0, i32 1) #11, !dbg !11981
  store i32 %call, i32* %rc, align 4, !dbg !11982
  %1 = load i32, i32* %rc, align 4, !dbg !11983
  %cmp = icmp ne i32 %1, -25, !dbg !11985
  br i1 %cmp, label %if.then, label %if.end, !dbg !11986

if.then:                                          ; preds = %do.end2
  %2 = load i32, i32* %rc, align 4, !dbg !11987
  store i32 %2, i32* %retval, align 4, !dbg !11988
  br label %return, !dbg !11988

if.end:                                           ; preds = %do.end2
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11989
  %call3 = call zeroext i1 @pcie_has_flr(%struct.pci_dev* %3) #11, !dbg !11991
  br i1 %call3, label %if.then4, label %if.end5, !dbg !11992

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11993
  br label %return, !dbg !11993

if.end5:                                          ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11994
  %call6 = call i32 @pci_af_flr(%struct.pci_dev* %4, i32 1) #11, !dbg !11995
  store i32 %call6, i32* %rc, align 4, !dbg !11996
  %5 = load i32, i32* %rc, align 4, !dbg !11997
  %cmp7 = icmp ne i32 %5, -25, !dbg !11999
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !12000

if.then8:                                         ; preds = %if.end5
  %6 = load i32, i32* %rc, align 4, !dbg !12001
  store i32 %6, i32* %retval, align 4, !dbg !12002
  br label %return, !dbg !12002

if.end9:                                          ; preds = %if.end5
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12003
  %call10 = call i32 @pci_pm_reset(%struct.pci_dev* %7, i32 1) #11, !dbg !12004
  store i32 %call10, i32* %rc, align 4, !dbg !12005
  %8 = load i32, i32* %rc, align 4, !dbg !12006
  %cmp11 = icmp ne i32 %8, -25, !dbg !12008
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !12009

if.then12:                                        ; preds = %if.end9
  %9 = load i32, i32* %rc, align 4, !dbg !12010
  store i32 %9, i32* %retval, align 4, !dbg !12011
  br label %return, !dbg !12011

if.end13:                                         ; preds = %if.end9
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12012
  %call14 = call i32 @pci_dev_reset_slot_function(%struct.pci_dev* %10, i32 1) #11, !dbg !12013
  store i32 %call14, i32* %rc, align 4, !dbg !12014
  %11 = load i32, i32* %rc, align 4, !dbg !12015
  %cmp15 = icmp ne i32 %11, -25, !dbg !12017
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !12018

if.then16:                                        ; preds = %if.end13
  %12 = load i32, i32* %rc, align 4, !dbg !12019
  store i32 %12, i32* %retval, align 4, !dbg !12020
  br label %return, !dbg !12020

if.end17:                                         ; preds = %if.end13
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12021
  %call18 = call i32 @pci_parent_bus_reset(%struct.pci_dev* %13, i32 1) #11, !dbg !12022
  store i32 %call18, i32* %retval, align 4, !dbg !12023
  br label %return, !dbg !12023

return:                                           ; preds = %if.end17, %if.then16, %if.then12, %if.then8, %if.then4, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !12024
  ret i32 %14, !dbg !12024
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_reset_function(%struct.pci_dev* %dev) #0 !dbg !12025 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12026, metadata !DIExpression()), !dbg !12027
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12028, metadata !DIExpression()), !dbg !12029
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12030
  %reset_fn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !12032
  %1 = bitcast [5 x i8]* %reset_fn to i40*, !dbg !12032
  %bf.load = load i40, i40* %1, align 1, !dbg !12032
  %bf.lshr = lshr i40 %bf.load, 23, !dbg !12032
  %bf.clear = and i40 %bf.lshr, 1, !dbg !12032
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !12032
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12030
  br i1 %tobool, label %if.end, label %if.then, !dbg !12033

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !12034
  br label %return, !dbg !12034

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12035
  call void @pci_dev_lock(%struct.pci_dev* %2) #11, !dbg !12036
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12037
  call void @pci_dev_save_and_disable(%struct.pci_dev* %3) #11, !dbg !12038
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12039
  %call = call i32 @__pci_reset_function_locked(%struct.pci_dev* %4) #11, !dbg !12040
  store i32 %call, i32* %rc, align 4, !dbg !12041
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12042
  call void @pci_dev_restore(%struct.pci_dev* %5) #11, !dbg !12043
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12044
  call void @pci_dev_unlock(%struct.pci_dev* %6) #11, !dbg !12045
  %7 = load i32, i32* %rc, align 4, !dbg !12046
  store i32 %7, i32* %retval, align 4, !dbg !12047
  br label %return, !dbg !12047

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !12048
  ret i32 %8, !dbg !12048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_dev_lock(%struct.pci_dev* %dev) #0 !dbg !12049 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12050, metadata !DIExpression()), !dbg !12051
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12052
  call void @pci_cfg_access_lock(%struct.pci_dev* %0) #11, !dbg !12053
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12054
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !12055
  call void @device_lock(%struct.device* %dev1) #11, !dbg !12056
  ret void, !dbg !12057
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_dev_save_and_disable(%struct.pci_dev* %dev) #0 !dbg !12058 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %err_handler = alloca %struct.pci_error_handlers*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12059, metadata !DIExpression()), !dbg !12060
  call void @llvm.dbg.declare(metadata %struct.pci_error_handlers** %err_handler, metadata !12061, metadata !DIExpression()), !dbg !12062
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12063
  %driver = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 23, !dbg !12064
  %1 = load %struct.pci_driver*, %struct.pci_driver** %driver, align 8, !dbg !12064
  %tobool = icmp ne %struct.pci_driver* %1, null, !dbg !12063
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12063

cond.true:                                        ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12065
  %driver1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 23, !dbg !12066
  %3 = load %struct.pci_driver*, %struct.pci_driver** %driver1, align 8, !dbg !12066
  %err_handler2 = getelementptr inbounds %struct.pci_driver, %struct.pci_driver* %3, i32 0, i32 9, !dbg !12067
  %4 = load %struct.pci_error_handlers*, %struct.pci_error_handlers** %err_handler2, align 8, !dbg !12067
  br label %cond.end, !dbg !12063

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12063

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.pci_error_handlers* [ %4, %cond.true ], [ null, %cond.false ], !dbg !12063
  store %struct.pci_error_handlers* %cond, %struct.pci_error_handlers** %err_handler, align 8, !dbg !12062
  %5 = load %struct.pci_error_handlers*, %struct.pci_error_handlers** %err_handler, align 8, !dbg !12068
  %tobool3 = icmp ne %struct.pci_error_handlers* %5, null, !dbg !12068
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !12070

land.lhs.true:                                    ; preds = %cond.end
  %6 = load %struct.pci_error_handlers*, %struct.pci_error_handlers** %err_handler, align 8, !dbg !12071
  %reset_prepare = getelementptr inbounds %struct.pci_error_handlers, %struct.pci_error_handlers* %6, i32 0, i32 3, !dbg !12072
  %7 = load void (%struct.pci_dev*)*, void (%struct.pci_dev*)** %reset_prepare, align 8, !dbg !12072
  %tobool4 = icmp ne void (%struct.pci_dev*)* %7, null, !dbg !12071
  br i1 %tobool4, label %if.then, label %if.end, !dbg !12073

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.pci_error_handlers*, %struct.pci_error_handlers** %err_handler, align 8, !dbg !12074
  %reset_prepare5 = getelementptr inbounds %struct.pci_error_handlers, %struct.pci_error_handlers* %8, i32 0, i32 3, !dbg !12075
  %9 = load void (%struct.pci_dev*)*, void (%struct.pci_dev*)** %reset_prepare5, align 8, !dbg !12075
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12076
  call void %9(%struct.pci_dev* %10) #11, !dbg !12074
  br label %if.end, !dbg !12074

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12077
  %call = call i32 @pci_set_power_state(%struct.pci_dev* %11, i32 0) #11, !dbg !12078
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12079
  %call6 = call i32 @pci_save_state(%struct.pci_dev* %12) #11, !dbg !12080
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12081
  %call7 = call i32 @pci_write_config_word(%struct.pci_dev* %13, i32 4, i16 zeroext 1024) #11, !dbg !12082
  ret void, !dbg !12083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_dev_restore(%struct.pci_dev* %dev) #0 !dbg !12084 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %err_handler = alloca %struct.pci_error_handlers*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12085, metadata !DIExpression()), !dbg !12086
  call void @llvm.dbg.declare(metadata %struct.pci_error_handlers** %err_handler, metadata !12087, metadata !DIExpression()), !dbg !12088
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12089
  %driver = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 23, !dbg !12090
  %1 = load %struct.pci_driver*, %struct.pci_driver** %driver, align 8, !dbg !12090
  %tobool = icmp ne %struct.pci_driver* %1, null, !dbg !12089
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12089

cond.true:                                        ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12091
  %driver1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 23, !dbg !12092
  %3 = load %struct.pci_driver*, %struct.pci_driver** %driver1, align 8, !dbg !12092
  %err_handler2 = getelementptr inbounds %struct.pci_driver, %struct.pci_driver* %3, i32 0, i32 9, !dbg !12093
  %4 = load %struct.pci_error_handlers*, %struct.pci_error_handlers** %err_handler2, align 8, !dbg !12093
  br label %cond.end, !dbg !12089

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12089

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.pci_error_handlers* [ %4, %cond.true ], [ null, %cond.false ], !dbg !12089
  store %struct.pci_error_handlers* %cond, %struct.pci_error_handlers** %err_handler, align 8, !dbg !12088
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12094
  call void @pci_restore_state(%struct.pci_dev* %5) #11, !dbg !12095
  %6 = load %struct.pci_error_handlers*, %struct.pci_error_handlers** %err_handler, align 8, !dbg !12096
  %tobool3 = icmp ne %struct.pci_error_handlers* %6, null, !dbg !12096
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !12098

land.lhs.true:                                    ; preds = %cond.end
  %7 = load %struct.pci_error_handlers*, %struct.pci_error_handlers** %err_handler, align 8, !dbg !12099
  %reset_done = getelementptr inbounds %struct.pci_error_handlers, %struct.pci_error_handlers* %7, i32 0, i32 4, !dbg !12100
  %8 = load void (%struct.pci_dev*)*, void (%struct.pci_dev*)** %reset_done, align 8, !dbg !12100
  %tobool4 = icmp ne void (%struct.pci_dev*)* %8, null, !dbg !12099
  br i1 %tobool4, label %if.then, label %if.end, !dbg !12101

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.pci_error_handlers*, %struct.pci_error_handlers** %err_handler, align 8, !dbg !12102
  %reset_done5 = getelementptr inbounds %struct.pci_error_handlers, %struct.pci_error_handlers* %9, i32 0, i32 4, !dbg !12103
  %10 = load void (%struct.pci_dev*)*, void (%struct.pci_dev*)** %reset_done5, align 8, !dbg !12103
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12104
  call void %10(%struct.pci_dev* %11) #11, !dbg !12102
  br label %if.end, !dbg !12102

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end
  ret void, !dbg !12105
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_dev_unlock(%struct.pci_dev* %dev) #0 !dbg !12106 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12107, metadata !DIExpression()), !dbg !12108
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12109
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !12110
  call void @device_unlock(%struct.device* %dev1) #11, !dbg !12111
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12112
  call void @pci_cfg_access_unlock(%struct.pci_dev* %1) #11, !dbg !12113
  ret void, !dbg !12114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_reset_function_locked(%struct.pci_dev* %dev) #0 !dbg !12115 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12116, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12118, metadata !DIExpression()), !dbg !12119
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12120
  %reset_fn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !12122
  %1 = bitcast [5 x i8]* %reset_fn to i40*, !dbg !12122
  %bf.load = load i40, i40* %1, align 1, !dbg !12122
  %bf.lshr = lshr i40 %bf.load, 23, !dbg !12122
  %bf.clear = and i40 %bf.lshr, 1, !dbg !12122
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !12122
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12120
  br i1 %tobool, label %if.end, label %if.then, !dbg !12123

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !12124
  br label %return, !dbg !12124

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12125
  call void @pci_dev_save_and_disable(%struct.pci_dev* %2) #11, !dbg !12126
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12127
  %call = call i32 @__pci_reset_function_locked(%struct.pci_dev* %3) #11, !dbg !12128
  store i32 %call, i32* %rc, align 4, !dbg !12129
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12130
  call void @pci_dev_restore(%struct.pci_dev* %4) #11, !dbg !12131
  %5 = load i32, i32* %rc, align 4, !dbg !12132
  store i32 %5, i32* %retval, align 4, !dbg !12133
  br label %return, !dbg !12133

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !12134
  ret i32 %6, !dbg !12134
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_try_reset_function(%struct.pci_dev* %dev) #0 !dbg !12135 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12136, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12138, metadata !DIExpression()), !dbg !12139
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12140
  %reset_fn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !12142
  %1 = bitcast [5 x i8]* %reset_fn to i40*, !dbg !12142
  %bf.load = load i40, i40* %1, align 1, !dbg !12142
  %bf.lshr = lshr i40 %bf.load, 23, !dbg !12142
  %bf.clear = and i40 %bf.lshr, 1, !dbg !12142
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !12142
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12140
  br i1 %tobool, label %if.end, label %if.then, !dbg !12143

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !12144
  br label %return, !dbg !12144

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12145
  %call = call i32 @pci_dev_trylock(%struct.pci_dev* %2) #11, !dbg !12147
  %tobool1 = icmp ne i32 %call, 0, !dbg !12147
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !12148

if.then2:                                         ; preds = %if.end
  store i32 -11, i32* %retval, align 4, !dbg !12149
  br label %return, !dbg !12149

if.end3:                                          ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12150
  call void @pci_dev_save_and_disable(%struct.pci_dev* %3) #11, !dbg !12151
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12152
  %call4 = call i32 @__pci_reset_function_locked(%struct.pci_dev* %4) #11, !dbg !12153
  store i32 %call4, i32* %rc, align 4, !dbg !12154
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12155
  call void @pci_dev_restore(%struct.pci_dev* %5) #11, !dbg !12156
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12157
  call void @pci_dev_unlock(%struct.pci_dev* %6) #11, !dbg !12158
  %7 = load i32, i32* %rc, align 4, !dbg !12159
  store i32 %7, i32* %retval, align 4, !dbg !12160
  br label %return, !dbg !12160

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !12161
  ret i32 %8, !dbg !12161
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_dev_trylock(%struct.pci_dev* %dev) #0 !dbg !12162 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12163, metadata !DIExpression()), !dbg !12164
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12165
  %call = call zeroext i1 @pci_cfg_access_trylock(%struct.pci_dev* %0) #11, !dbg !12167
  br i1 %call, label %if.then, label %if.end4, !dbg !12168

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12169
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !12172
  %call2 = call i32 @device_trylock(%struct.device* %dev1) #11, !dbg !12173
  %tobool = icmp ne i32 %call2, 0, !dbg !12173
  br i1 %tobool, label %if.then3, label %if.end, !dbg !12174

if.then3:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !12175
  br label %return, !dbg !12175

if.end:                                           ; preds = %if.then
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12176
  call void @pci_cfg_access_unlock(%struct.pci_dev* %2) #11, !dbg !12177
  br label %if.end4, !dbg !12178

if.end4:                                          ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !12179
  br label %return, !dbg !12179

return:                                           ; preds = %if.end4, %if.then3
  %3 = load i32, i32* %retval, align 4, !dbg !12180
  ret i32 %3, !dbg !12180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_probe_reset_slot(%struct.pci_slot* %slot) #0 !dbg !12181 {
entry:
  %slot.addr = alloca %struct.pci_slot*, align 8
  store %struct.pci_slot* %slot, %struct.pci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_slot** %slot.addr, metadata !12184, metadata !DIExpression()), !dbg !12185
  %0 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !12186
  %call = call i32 @pci_slot_reset(%struct.pci_slot* %0, i32 1) #11, !dbg !12187
  ret i32 %call, !dbg !12188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_slot_reset(%struct.pci_slot* %slot, i32 %probe) #0 !dbg !12189 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca %struct.pci_slot*, align 8
  %probe.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.pci_slot* %slot, %struct.pci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_slot** %slot.addr, metadata !12192, metadata !DIExpression()), !dbg !12193
  store i32 %probe, i32* %probe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %probe.addr, metadata !12194, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12196, metadata !DIExpression()), !dbg !12197
  %0 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !12198
  %tobool = icmp ne %struct.pci_slot* %0, null, !dbg !12198
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !12200

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !12201
  %call = call zeroext i1 @pci_slot_resetable(%struct.pci_slot* %1) #11, !dbg !12202
  br i1 %call, label %if.end, label %if.then, !dbg !12203

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -25, i32* %retval, align 4, !dbg !12204
  br label %return, !dbg !12204

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i32, i32* %probe.addr, align 4, !dbg !12205
  %tobool1 = icmp ne i32 %2, 0, !dbg !12205
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !12207

if.then2:                                         ; preds = %if.end
  %3 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !12208
  call void @pci_slot_lock(%struct.pci_slot* %3) #11, !dbg !12209
  br label %if.end3, !dbg !12209

if.end3:                                          ; preds = %if.then2, %if.end
  br label %do.body, !dbg !12210

do.body:                                          ; preds = %if.end3
  br label %do.body4, !dbg !12211

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !12213

do.end:                                           ; preds = %do.body4
  br label %do.end5, !dbg !12211

do.end5:                                          ; preds = %do.end
  %4 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !12215
  %hotplug = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %4, i32 0, i32 2, !dbg !12216
  %5 = load %struct.hotplug_slot*, %struct.hotplug_slot** %hotplug, align 8, !dbg !12216
  %6 = load i32, i32* %probe.addr, align 4, !dbg !12217
  %call6 = call i32 @pci_reset_hotplug_slot(%struct.hotplug_slot* %5, i32 %6) #11, !dbg !12218
  store i32 %call6, i32* %rc, align 4, !dbg !12219
  %7 = load i32, i32* %probe.addr, align 4, !dbg !12220
  %tobool7 = icmp ne i32 %7, 0, !dbg !12220
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !12222

if.then8:                                         ; preds = %do.end5
  %8 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !12223
  call void @pci_slot_unlock(%struct.pci_slot* %8) #11, !dbg !12224
  br label %if.end9, !dbg !12224

if.end9:                                          ; preds = %if.then8, %do.end5
  %9 = load i32, i32* %rc, align 4, !dbg !12225
  store i32 %9, i32* %retval, align 4, !dbg !12226
  br label %return, !dbg !12226

return:                                           ; preds = %if.end9, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !12227
  ret i32 %10, !dbg !12227
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_bus_error_reset(%struct.pci_dev* %bridge) #0 !dbg !12228 {
entry:
  %retval = alloca i32, align 4
  %bridge.addr = alloca %struct.pci_dev*, align 8
  %bus = alloca %struct.pci_bus*, align 8
  %slot = alloca %struct.pci_slot*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_slot*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.pci_slot*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp22 = alloca %struct.pci_slot*, align 8
  %__mptr35 = alloca i8*, align 8
  %tmp40 = alloca %struct.pci_slot*, align 8
  store %struct.pci_dev* %bridge, %struct.pci_dev** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge.addr, metadata !12229, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus, metadata !12231, metadata !DIExpression()), !dbg !12232
  %0 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !12233
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 2, !dbg !12234
  %1 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !12234
  store %struct.pci_bus* %1, %struct.pci_bus** %bus, align 8, !dbg !12232
  call void @llvm.dbg.declare(metadata %struct.pci_slot** %slot, metadata !12235, metadata !DIExpression()), !dbg !12236
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !12237
  %tobool = icmp ne %struct.pci_bus* %2, null, !dbg !12237
  br i1 %tobool, label %if.end, label %if.then, !dbg !12239

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !12240
  br label %return, !dbg !12240

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @pci_slot_mutex) #11, !dbg !12241
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !12242
  %slots = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %3, i32 0, i32 5, !dbg !12244
  %call = call i32 @list_empty(%struct.list_head* %slots) #11, !dbg !12245
  %tobool1 = icmp ne i32 %call, 0, !dbg !12245
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !12246

if.then2:                                         ; preds = %if.end
  br label %bus_reset, !dbg !12247

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12248, metadata !DIExpression()), !dbg !12251
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !12251
  %slots4 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 5, !dbg !12251
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %slots4, i32 0, i32 0, !dbg !12251
  %5 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12251
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !12251
  store i8* %6, i8** %__mptr, align 8, !dbg !12251
  br label %do.body, !dbg !12251

do.body:                                          ; preds = %if.end3
  br label %do.end, !dbg !12252

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !12251
  %add.ptr = getelementptr i8, i8* %7, i64 -8, !dbg !12251
  %8 = bitcast i8* %add.ptr to %struct.pci_slot*, !dbg !12251
  store %struct.pci_slot* %8, %struct.pci_slot** %tmp, align 8, !dbg !12252
  %9 = load %struct.pci_slot*, %struct.pci_slot** %tmp, align 8, !dbg !12251
  store %struct.pci_slot* %9, %struct.pci_slot** %slot, align 8, !dbg !12254
  br label %for.cond, !dbg !12254

for.cond:                                         ; preds = %do.end14, %do.end
  %10 = load %struct.pci_slot*, %struct.pci_slot** %slot, align 8, !dbg !12255
  %list = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %10, i32 0, i32 1, !dbg !12255
  %11 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !12255
  %slots5 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %11, i32 0, i32 5, !dbg !12255
  %cmp = icmp eq %struct.list_head* %list, %slots5, !dbg !12255
  %lnot = xor i1 %cmp, true, !dbg !12255
  br i1 %lnot, label %for.body, label %for.end, !dbg !12254

for.body:                                         ; preds = %for.cond
  %12 = load %struct.pci_slot*, %struct.pci_slot** %slot, align 8, !dbg !12257
  %call6 = call i32 @pci_probe_reset_slot(%struct.pci_slot* %12) #11, !dbg !12259
  %tobool7 = icmp ne i32 %call6, 0, !dbg !12259
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !12260

if.then8:                                         ; preds = %for.body
  br label %bus_reset, !dbg !12261

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !12262

for.inc:                                          ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !12263, metadata !DIExpression()), !dbg !12265
  %13 = load %struct.pci_slot*, %struct.pci_slot** %slot, align 8, !dbg !12265
  %list11 = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %13, i32 0, i32 1, !dbg !12265
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %list11, i32 0, i32 0, !dbg !12265
  %14 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !12265
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !12265
  store i8* %15, i8** %__mptr10, align 8, !dbg !12265
  br label %do.body13, !dbg !12265

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !12266

do.end14:                                         ; preds = %do.body13
  %16 = load i8*, i8** %__mptr10, align 8, !dbg !12265
  %add.ptr16 = getelementptr i8, i8* %16, i64 -8, !dbg !12265
  %17 = bitcast i8* %add.ptr16 to %struct.pci_slot*, !dbg !12265
  store %struct.pci_slot* %17, %struct.pci_slot** %tmp15, align 8, !dbg !12266
  %18 = load %struct.pci_slot*, %struct.pci_slot** %tmp15, align 8, !dbg !12265
  store %struct.pci_slot* %18, %struct.pci_slot** %slot, align 8, !dbg !12255
  br label %for.cond, !dbg !12255, !llvm.loop !12268

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !12270, metadata !DIExpression()), !dbg !12273
  %19 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !12273
  %slots18 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %19, i32 0, i32 5, !dbg !12273
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %slots18, i32 0, i32 0, !dbg !12273
  %20 = load %struct.list_head*, %struct.list_head** %next19, align 8, !dbg !12273
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !12273
  store i8* %21, i8** %__mptr17, align 8, !dbg !12273
  br label %do.body20, !dbg !12273

do.body20:                                        ; preds = %for.end
  br label %do.end21, !dbg !12274

do.end21:                                         ; preds = %do.body20
  %22 = load i8*, i8** %__mptr17, align 8, !dbg !12273
  %add.ptr23 = getelementptr i8, i8* %22, i64 -8, !dbg !12273
  %23 = bitcast i8* %add.ptr23 to %struct.pci_slot*, !dbg !12273
  store %struct.pci_slot* %23, %struct.pci_slot** %tmp22, align 8, !dbg !12274
  %24 = load %struct.pci_slot*, %struct.pci_slot** %tmp22, align 8, !dbg !12273
  store %struct.pci_slot* %24, %struct.pci_slot** %slot, align 8, !dbg !12276
  br label %for.cond24, !dbg !12276

for.cond24:                                       ; preds = %do.end39, %do.end21
  %25 = load %struct.pci_slot*, %struct.pci_slot** %slot, align 8, !dbg !12277
  %list25 = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %25, i32 0, i32 1, !dbg !12277
  %26 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !12277
  %slots26 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %26, i32 0, i32 5, !dbg !12277
  %cmp27 = icmp eq %struct.list_head* %list25, %slots26, !dbg !12277
  %lnot28 = xor i1 %cmp27, true, !dbg !12277
  br i1 %lnot28, label %for.body29, label %for.end42, !dbg !12276

for.body29:                                       ; preds = %for.cond24
  %27 = load %struct.pci_slot*, %struct.pci_slot** %slot, align 8, !dbg !12279
  %call30 = call i32 @pci_slot_reset(%struct.pci_slot* %27, i32 0) #11, !dbg !12281
  %tobool31 = icmp ne i32 %call30, 0, !dbg !12281
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !12282

if.then32:                                        ; preds = %for.body29
  br label %bus_reset, !dbg !12283

if.end33:                                         ; preds = %for.body29
  br label %for.inc34, !dbg !12284

for.inc34:                                        ; preds = %if.end33
  call void @llvm.dbg.declare(metadata i8** %__mptr35, metadata !12285, metadata !DIExpression()), !dbg !12287
  %28 = load %struct.pci_slot*, %struct.pci_slot** %slot, align 8, !dbg !12287
  %list36 = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %28, i32 0, i32 1, !dbg !12287
  %next37 = getelementptr inbounds %struct.list_head, %struct.list_head* %list36, i32 0, i32 0, !dbg !12287
  %29 = load %struct.list_head*, %struct.list_head** %next37, align 8, !dbg !12287
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !12287
  store i8* %30, i8** %__mptr35, align 8, !dbg !12287
  br label %do.body38, !dbg !12287

do.body38:                                        ; preds = %for.inc34
  br label %do.end39, !dbg !12288

do.end39:                                         ; preds = %do.body38
  %31 = load i8*, i8** %__mptr35, align 8, !dbg !12287
  %add.ptr41 = getelementptr i8, i8* %31, i64 -8, !dbg !12287
  %32 = bitcast i8* %add.ptr41 to %struct.pci_slot*, !dbg !12287
  store %struct.pci_slot* %32, %struct.pci_slot** %tmp40, align 8, !dbg !12288
  %33 = load %struct.pci_slot*, %struct.pci_slot** %tmp40, align 8, !dbg !12287
  store %struct.pci_slot* %33, %struct.pci_slot** %slot, align 8, !dbg !12277
  br label %for.cond24, !dbg !12277, !llvm.loop !12290

for.end42:                                        ; preds = %for.cond24
  call void @mutex_unlock(%struct.mutex* @pci_slot_mutex) #11, !dbg !12292
  store i32 0, i32* %retval, align 4, !dbg !12293
  br label %return, !dbg !12293

bus_reset:                                        ; preds = %if.then32, %if.then8, %if.then2
  call void @llvm.dbg.label(metadata !12294), !dbg !12295
  call void @mutex_unlock(%struct.mutex* @pci_slot_mutex) #11, !dbg !12296
  %34 = load %struct.pci_dev*, %struct.pci_dev** %bridge.addr, align 8, !dbg !12297
  %subordinate43 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 2, !dbg !12298
  %35 = load %struct.pci_bus*, %struct.pci_bus** %subordinate43, align 8, !dbg !12298
  %call44 = call i32 @pci_bus_reset(%struct.pci_bus* %35, i32 0) #11, !dbg !12299
  store i32 %call44, i32* %retval, align 4, !dbg !12300
  br label %return, !dbg !12300

return:                                           ; preds = %bus_reset, %for.end42, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !12301
  ret i32 %36, !dbg !12301
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_bus_reset(%struct.pci_bus* %bus, i32 %probe) #0 !dbg !12302 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.pci_bus*, align 8
  %probe.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !12305, metadata !DIExpression()), !dbg !12306
  store i32 %probe, i32* %probe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %probe.addr, metadata !12307, metadata !DIExpression()), !dbg !12308
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12309, metadata !DIExpression()), !dbg !12310
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !12311
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !12313
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !12313
  %tobool = icmp ne %struct.pci_dev* %1, null, !dbg !12311
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !12314

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !12315
  %call = call zeroext i1 @pci_bus_resetable(%struct.pci_bus* %2) #11, !dbg !12316
  br i1 %call, label %if.end, label %if.then, !dbg !12317

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -25, i32* %retval, align 4, !dbg !12318
  br label %return, !dbg !12318

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %probe.addr, align 4, !dbg !12319
  %tobool1 = icmp ne i32 %3, 0, !dbg !12319
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !12321

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12322
  br label %return, !dbg !12322

if.end3:                                          ; preds = %if.end
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !12323
  call void @pci_bus_lock(%struct.pci_bus* %4) #11, !dbg !12324
  br label %do.body, !dbg !12325

do.body:                                          ; preds = %if.end3
  br label %do.body4, !dbg !12326

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !12328

do.end:                                           ; preds = %do.body4
  br label %do.end5, !dbg !12326

do.end5:                                          ; preds = %do.end
  %5 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !12330
  %self6 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 4, !dbg !12331
  %6 = load %struct.pci_dev*, %struct.pci_dev** %self6, align 8, !dbg !12331
  %call7 = call i32 @pci_bridge_secondary_bus_reset(%struct.pci_dev* %6) #11, !dbg !12332
  store i32 %call7, i32* %ret, align 4, !dbg !12333
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !12334
  call void @pci_bus_unlock(%struct.pci_bus* %7) #11, !dbg !12335
  %8 = load i32, i32* %ret, align 4, !dbg !12336
  store i32 %8, i32* %retval, align 4, !dbg !12337
  br label %return, !dbg !12337

return:                                           ; preds = %do.end5, %if.then2, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !12338
  ret i32 %9, !dbg !12338
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_probe_reset_bus(%struct.pci_bus* %bus) #0 !dbg !12339 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !12340, metadata !DIExpression()), !dbg !12341
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !12342
  %call = call i32 @pci_bus_reset(%struct.pci_bus* %0, i32 1) #11, !dbg !12343
  ret i32 %call, !dbg !12344
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_reset_bus(%struct.pci_dev* %pdev) #0 !dbg !12345 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12346, metadata !DIExpression()), !dbg !12347
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12348
  %slot = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 5, !dbg !12349
  %1 = load %struct.pci_slot*, %struct.pci_slot** %slot, align 8, !dbg !12349
  %call = call i32 @pci_probe_reset_slot(%struct.pci_slot* %1) #11, !dbg !12350
  %tobool = icmp ne i32 %call, 0, !dbg !12350
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !12351

cond.true:                                        ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12352
  %slot1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 5, !dbg !12353
  %3 = load %struct.pci_slot*, %struct.pci_slot** %slot1, align 8, !dbg !12353
  %call2 = call i32 @__pci_reset_slot(%struct.pci_slot* %3) #11, !dbg !12354
  br label %cond.end, !dbg !12351

cond.false:                                       ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12355
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 1, !dbg !12356
  %5 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !12356
  %call3 = call i32 @__pci_reset_bus(%struct.pci_bus* %5) #11, !dbg !12357
  br label %cond.end, !dbg !12351

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !12351
  ret i32 %cond, !dbg !12358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__pci_reset_slot(%struct.pci_slot* %slot) #0 !dbg !12359 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca %struct.pci_slot*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_slot* %slot, %struct.pci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_slot** %slot.addr, metadata !12360, metadata !DIExpression()), !dbg !12361
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12362, metadata !DIExpression()), !dbg !12363
  %0 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !12364
  %call = call i32 @pci_slot_reset(%struct.pci_slot* %0, i32 1) #11, !dbg !12365
  store i32 %call, i32* %rc, align 4, !dbg !12366
  %1 = load i32, i32* %rc, align 4, !dbg !12367
  %tobool = icmp ne i32 %1, 0, !dbg !12367
  br i1 %tobool, label %if.then, label %if.end, !dbg !12369

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %rc, align 4, !dbg !12370
  store i32 %2, i32* %retval, align 4, !dbg !12371
  br label %return, !dbg !12371

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !12372
  %call1 = call i32 @pci_slot_trylock(%struct.pci_slot* %3) #11, !dbg !12374
  %tobool2 = icmp ne i32 %call1, 0, !dbg !12374
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !12375

if.then3:                                         ; preds = %if.end
  %4 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !12376
  call void @pci_slot_save_and_disable_locked(%struct.pci_slot* %4) #11, !dbg !12378
  br label %do.body, !dbg !12379

do.body:                                          ; preds = %if.then3
  br label %do.body4, !dbg !12380

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !12382

do.end:                                           ; preds = %do.body4
  br label %do.end5, !dbg !12380

do.end5:                                          ; preds = %do.end
  %5 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !12384
  %hotplug = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %5, i32 0, i32 2, !dbg !12385
  %6 = load %struct.hotplug_slot*, %struct.hotplug_slot** %hotplug, align 8, !dbg !12385
  %call6 = call i32 @pci_reset_hotplug_slot(%struct.hotplug_slot* %6, i32 0) #11, !dbg !12386
  store i32 %call6, i32* %rc, align 4, !dbg !12387
  %7 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !12388
  call void @pci_slot_restore_locked(%struct.pci_slot* %7) #11, !dbg !12389
  %8 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !12390
  call void @pci_slot_unlock(%struct.pci_slot* %8) #11, !dbg !12391
  br label %if.end7, !dbg !12392

if.else:                                          ; preds = %if.end
  store i32 -11, i32* %rc, align 4, !dbg !12393
  br label %if.end7

if.end7:                                          ; preds = %if.else, %do.end5
  %9 = load i32, i32* %rc, align 4, !dbg !12394
  store i32 %9, i32* %retval, align 4, !dbg !12395
  br label %return, !dbg !12395

return:                                           ; preds = %if.end7, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !12396
  ret i32 %10, !dbg !12396
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__pci_reset_bus(%struct.pci_bus* %bus) #0 !dbg !12397 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.pci_bus*, align 8
  %rc = alloca i32, align 4
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !12398, metadata !DIExpression()), !dbg !12399
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12400, metadata !DIExpression()), !dbg !12401
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !12402
  %call = call i32 @pci_bus_reset(%struct.pci_bus* %0, i32 1) #11, !dbg !12403
  store i32 %call, i32* %rc, align 4, !dbg !12404
  %1 = load i32, i32* %rc, align 4, !dbg !12405
  %tobool = icmp ne i32 %1, 0, !dbg !12405
  br i1 %tobool, label %if.then, label %if.end, !dbg !12407

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %rc, align 4, !dbg !12408
  store i32 %2, i32* %retval, align 4, !dbg !12409
  br label %return, !dbg !12409

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !12410
  %call1 = call i32 @pci_bus_trylock(%struct.pci_bus* %3) #11, !dbg !12412
  %tobool2 = icmp ne i32 %call1, 0, !dbg !12412
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !12413

if.then3:                                         ; preds = %if.end
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !12414
  call void @pci_bus_save_and_disable_locked(%struct.pci_bus* %4) #11, !dbg !12416
  br label %do.body, !dbg !12417

do.body:                                          ; preds = %if.then3
  br label %do.body4, !dbg !12418

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !12420

do.end:                                           ; preds = %do.body4
  br label %do.end5, !dbg !12418

do.end5:                                          ; preds = %do.end
  %5 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !12422
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 4, !dbg !12423
  %6 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !12423
  %call6 = call i32 @pci_bridge_secondary_bus_reset(%struct.pci_dev* %6) #11, !dbg !12424
  store i32 %call6, i32* %rc, align 4, !dbg !12425
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !12426
  call void @pci_bus_restore_locked(%struct.pci_bus* %7) #11, !dbg !12427
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !12428
  call void @pci_bus_unlock(%struct.pci_bus* %8) #11, !dbg !12429
  br label %if.end7, !dbg !12430

if.else:                                          ; preds = %if.end
  store i32 -11, i32* %rc, align 4, !dbg !12431
  br label %if.end7

if.end7:                                          ; preds = %if.else, %do.end5
  %9 = load i32, i32* %rc, align 4, !dbg !12432
  store i32 %9, i32* %retval, align 4, !dbg !12433
  br label %return, !dbg !12433

return:                                           ; preds = %if.end7, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !12434
  ret i32 %10, !dbg !12434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcix_get_max_mmrbc(%struct.pci_dev* %dev) #0 !dbg !12435 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cap = alloca i32, align 4
  %stat = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12436, metadata !DIExpression()), !dbg !12437
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !12438, metadata !DIExpression()), !dbg !12439
  call void @llvm.dbg.declare(metadata i32* %stat, metadata !12440, metadata !DIExpression()), !dbg !12441
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12442
  %call = call i32 @pci_find_capability(%struct.pci_dev* %0, i32 7) #11, !dbg !12443
  store i32 %call, i32* %cap, align 4, !dbg !12444
  %1 = load i32, i32* %cap, align 4, !dbg !12445
  %tobool = icmp ne i32 %1, 0, !dbg !12445
  br i1 %tobool, label %if.end, label %if.then, !dbg !12447

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !12448
  br label %return, !dbg !12448

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12449
  %3 = load i32, i32* %cap, align 4, !dbg !12451
  %add = add i32 %3, 4, !dbg !12452
  %call1 = call i32 @pci_read_config_dword(%struct.pci_dev* %2, i32 %add, i32* %stat) #11, !dbg !12453
  %tobool2 = icmp ne i32 %call1, 0, !dbg !12453
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !12454

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !12455
  br label %return, !dbg !12455

if.end4:                                          ; preds = %if.end
  %4 = load i32, i32* %stat, align 4, !dbg !12456
  %and = and i32 %4, 6291456, !dbg !12457
  %shr = lshr i32 %and, 21, !dbg !12458
  %shl = shl i32 512, %shr, !dbg !12459
  store i32 %shl, i32* %retval, align 4, !dbg !12460
  br label %return, !dbg !12460

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !12461
  ret i32 %5, !dbg !12461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcix_get_mmrbc(%struct.pci_dev* %dev) #0 !dbg !12462 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %cap = alloca i32, align 4
  %cmd = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12463, metadata !DIExpression()), !dbg !12464
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !12465, metadata !DIExpression()), !dbg !12466
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !12467, metadata !DIExpression()), !dbg !12468
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12469
  %call = call i32 @pci_find_capability(%struct.pci_dev* %0, i32 7) #11, !dbg !12470
  store i32 %call, i32* %cap, align 4, !dbg !12471
  %1 = load i32, i32* %cap, align 4, !dbg !12472
  %tobool = icmp ne i32 %1, 0, !dbg !12472
  br i1 %tobool, label %if.end, label %if.then, !dbg !12474

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !12475
  br label %return, !dbg !12475

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12476
  %3 = load i32, i32* %cap, align 4, !dbg !12478
  %add = add i32 %3, 2, !dbg !12479
  %call1 = call i32 @pci_read_config_word(%struct.pci_dev* %2, i32 %add, i16* %cmd) #11, !dbg !12480
  %tobool2 = icmp ne i32 %call1, 0, !dbg !12480
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !12481

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !12482
  br label %return, !dbg !12482

if.end4:                                          ; preds = %if.end
  %4 = load i16, i16* %cmd, align 2, !dbg !12483
  %conv = zext i16 %4 to i32, !dbg !12483
  %and = and i32 %conv, 12, !dbg !12484
  %shr = ashr i32 %and, 2, !dbg !12485
  %shl = shl i32 512, %shr, !dbg !12486
  store i32 %shl, i32* %retval, align 4, !dbg !12487
  br label %return, !dbg !12487

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !12488
  ret i32 %5, !dbg !12488
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcix_set_mmrbc(%struct.pci_dev* %dev, i32 %mmrbc) #0 !dbg !12489 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !12490, metadata !DIExpression()), !dbg !12493
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !12495, metadata !DIExpression()), !dbg !12496
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %mmrbc.addr = alloca i32, align 4
  %cap = alloca i32, align 4
  %stat = alloca i32, align 4
  %v = alloca i32, align 4
  %o = alloca i32, align 4
  %cmd = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12497, metadata !DIExpression()), !dbg !12498
  store i32 %mmrbc, i32* %mmrbc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mmrbc.addr, metadata !12499, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !12501, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.declare(metadata i32* %stat, metadata !12503, metadata !DIExpression()), !dbg !12504
  call void @llvm.dbg.declare(metadata i32* %v, metadata !12505, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.declare(metadata i32* %o, metadata !12507, metadata !DIExpression()), !dbg !12508
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !12509, metadata !DIExpression()), !dbg !12510
  %0 = load i32, i32* %mmrbc.addr, align 4, !dbg !12511
  %cmp = icmp slt i32 %0, 512, !dbg !12513
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12514

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %mmrbc.addr, align 4, !dbg !12515
  %cmp1 = icmp sgt i32 %1, 4096, !dbg !12516
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !12517

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %mmrbc.addr, align 4, !dbg !12518
  %conv = sext i32 %2 to i64, !dbg !12518
  %call = call zeroext i1 @is_power_of_2(i64 %conv) #13, !dbg !12519
  br i1 %call, label %if.end, label %if.then, !dbg !12520

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !12521
  br label %return, !dbg !12521

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load i32, i32* %mmrbc.addr, align 4, !dbg !12522
  store i32 %3, i32* %x.addr.i, align 4
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !12523
  %5 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %4, i32 -1) #9, !dbg !12524, !srcloc !12525
  store i32 %5, i32* %r.i, align 4, !dbg !12524
  %6 = load i32, i32* %r.i, align 4, !dbg !12526
  %add.i = add i32 %6, 1, !dbg !12527
  %sub = sub i32 %add.i, 10, !dbg !12528
  store i32 %sub, i32* %v, align 4, !dbg !12529
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12530
  %call4 = call i32 @pci_find_capability(%struct.pci_dev* %7, i32 7) #11, !dbg !12531
  store i32 %call4, i32* %cap, align 4, !dbg !12532
  %8 = load i32, i32* %cap, align 4, !dbg !12533
  %tobool = icmp ne i32 %8, 0, !dbg !12533
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !12535

if.then5:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !12536
  br label %return, !dbg !12536

if.end6:                                          ; preds = %if.end
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12537
  %10 = load i32, i32* %cap, align 4, !dbg !12539
  %add = add i32 %10, 4, !dbg !12540
  %call7 = call i32 @pci_read_config_dword(%struct.pci_dev* %9, i32 %add, i32* %stat) #11, !dbg !12541
  %tobool8 = icmp ne i32 %call7, 0, !dbg !12541
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !12542

if.then9:                                         ; preds = %if.end6
  store i32 -22, i32* %retval, align 4, !dbg !12543
  br label %return, !dbg !12543

if.end10:                                         ; preds = %if.end6
  %11 = load i32, i32* %v, align 4, !dbg !12544
  %12 = load i32, i32* %stat, align 4, !dbg !12546
  %and = and i32 %12, 6291456, !dbg !12547
  %shr = lshr i32 %and, 21, !dbg !12548
  %cmp11 = icmp ugt i32 %11, %shr, !dbg !12549
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !12550

if.then13:                                        ; preds = %if.end10
  store i32 -7, i32* %retval, align 4, !dbg !12551
  br label %return, !dbg !12551

if.end14:                                         ; preds = %if.end10
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12552
  %14 = load i32, i32* %cap, align 4, !dbg !12554
  %add15 = add i32 %14, 2, !dbg !12555
  %call16 = call i32 @pci_read_config_word(%struct.pci_dev* %13, i32 %add15, i16* %cmd) #11, !dbg !12556
  %tobool17 = icmp ne i32 %call16, 0, !dbg !12556
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !12557

if.then18:                                        ; preds = %if.end14
  store i32 -22, i32* %retval, align 4, !dbg !12558
  br label %return, !dbg !12558

if.end19:                                         ; preds = %if.end14
  %15 = load i16, i16* %cmd, align 2, !dbg !12559
  %conv20 = zext i16 %15 to i32, !dbg !12559
  %and21 = and i32 %conv20, 12, !dbg !12560
  %shr22 = ashr i32 %and21, 2, !dbg !12561
  store i32 %shr22, i32* %o, align 4, !dbg !12562
  %16 = load i32, i32* %o, align 4, !dbg !12563
  %17 = load i32, i32* %v, align 4, !dbg !12565
  %cmp23 = icmp ne i32 %16, %17, !dbg !12566
  br i1 %cmp23, label %if.then25, label %if.end43, !dbg !12567

if.then25:                                        ; preds = %if.end19
  %18 = load i32, i32* %v, align 4, !dbg !12568
  %19 = load i32, i32* %o, align 4, !dbg !12571
  %cmp26 = icmp ugt i32 %18, %19, !dbg !12572
  br i1 %cmp26, label %land.lhs.true, label %if.end32, !dbg !12573

land.lhs.true:                                    ; preds = %if.then25
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12574
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 1, !dbg !12575
  %21 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !12575
  %bus_flags = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %21, i32 0, i32 19, !dbg !12576
  %22 = load i16, i16* %bus_flags, align 2, !dbg !12576
  %conv28 = zext i16 %22 to i32, !dbg !12574
  %and29 = and i32 %conv28, 2, !dbg !12577
  %tobool30 = icmp ne i32 %and29, 0, !dbg !12577
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !12578

if.then31:                                        ; preds = %land.lhs.true
  store i32 -5, i32* %retval, align 4, !dbg !12579
  br label %return, !dbg !12579

if.end32:                                         ; preds = %land.lhs.true, %if.then25
  %23 = load i16, i16* %cmd, align 2, !dbg !12580
  %conv33 = zext i16 %23 to i32, !dbg !12580
  %and34 = and i32 %conv33, -13, !dbg !12580
  %conv35 = trunc i32 %and34 to i16, !dbg !12580
  store i16 %conv35, i16* %cmd, align 2, !dbg !12580
  %24 = load i32, i32* %v, align 4, !dbg !12581
  %shl = shl i32 %24, 2, !dbg !12582
  %25 = load i16, i16* %cmd, align 2, !dbg !12583
  %conv36 = zext i16 %25 to i32, !dbg !12583
  %or = or i32 %conv36, %shl, !dbg !12583
  %conv37 = trunc i32 %or to i16, !dbg !12583
  store i16 %conv37, i16* %cmd, align 2, !dbg !12583
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12584
  %27 = load i32, i32* %cap, align 4, !dbg !12586
  %add38 = add i32 %27, 2, !dbg !12587
  %28 = load i16, i16* %cmd, align 2, !dbg !12588
  %call39 = call i32 @pci_write_config_word(%struct.pci_dev* %26, i32 %add38, i16 zeroext %28) #11, !dbg !12589
  %tobool40 = icmp ne i32 %call39, 0, !dbg !12589
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !12590

if.then41:                                        ; preds = %if.end32
  store i32 -5, i32* %retval, align 4, !dbg !12591
  br label %return, !dbg !12591

if.end42:                                         ; preds = %if.end32
  br label %if.end43, !dbg !12592

if.end43:                                         ; preds = %if.end42, %if.end19
  store i32 0, i32* %retval, align 4, !dbg !12593
  br label %return, !dbg !12593

return:                                           ; preds = %if.end43, %if.then41, %if.then31, %if.then18, %if.then13, %if.then9, %if.then5, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !12594
  ret i32 %29, !dbg !12594
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i1 @is_power_of_2(i64 %n) #6 !dbg !12595 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12599, metadata !DIExpression()), !dbg !12600
  %0 = load i64, i64* %n.addr, align 8, !dbg !12601
  %cmp = icmp ne i64 %0, 0, !dbg !12602
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12603

land.rhs:                                         ; preds = %entry
  %1 = load i64, i64* %n.addr, align 8, !dbg !12604
  %2 = load i64, i64* %n.addr, align 8, !dbg !12605
  %sub = sub i64 %2, 1, !dbg !12606
  %and = and i64 %1, %sub, !dbg !12607
  %cmp1 = icmp eq i64 %and, 0, !dbg !12608
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !12609
  ret i1 %3, !dbg !12610
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcie_get_readrq(%struct.pci_dev* %dev) #0 !dbg !12611 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ctl = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12612, metadata !DIExpression()), !dbg !12613
  call void @llvm.dbg.declare(metadata i16* %ctl, metadata !12614, metadata !DIExpression()), !dbg !12615
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12616
  %call = call i32 @pcie_capability_read_word(%struct.pci_dev* %0, i32 8, i16* %ctl) #11, !dbg !12617
  %1 = load i16, i16* %ctl, align 2, !dbg !12618
  %conv = zext i16 %1 to i32, !dbg !12618
  %and = and i32 %conv, 28672, !dbg !12619
  %shr = ashr i32 %and, 12, !dbg !12620
  %shl = shl i32 128, %shr, !dbg !12621
  ret i32 %shl, !dbg !12622
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcie_set_readrq(%struct.pci_dev* %dev, i32 %rq) #0 !dbg !12623 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !12490, metadata !DIExpression()), !dbg !12624
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !12495, metadata !DIExpression()), !dbg !12626
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %rq.addr = alloca i32, align 4
  %v = alloca i16, align 2
  %ret = alloca i32, align 4
  %mps = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12627, metadata !DIExpression()), !dbg !12628
  store i32 %rq, i32* %rq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rq.addr, metadata !12629, metadata !DIExpression()), !dbg !12630
  call void @llvm.dbg.declare(metadata i16* %v, metadata !12631, metadata !DIExpression()), !dbg !12632
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12633, metadata !DIExpression()), !dbg !12634
  %0 = load i32, i32* %rq.addr, align 4, !dbg !12635
  %cmp = icmp slt i32 %0, 128, !dbg !12637
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12638

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %rq.addr, align 4, !dbg !12639
  %cmp1 = icmp sgt i32 %1, 4096, !dbg !12640
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !12641

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %rq.addr, align 4, !dbg !12642
  %conv = sext i32 %2 to i64, !dbg !12642
  %call = call zeroext i1 @is_power_of_2(i64 %conv) #13, !dbg !12643
  br i1 %call, label %if.end, label %if.then, !dbg !12644

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !12645
  br label %return, !dbg !12645

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load i32, i32* @pcie_bus_config, align 4, !dbg !12646
  %cmp3 = icmp eq i32 %3, 3, !dbg !12648
  br i1 %cmp3, label %if.then5, label %if.end11, !dbg !12649

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %mps, metadata !12650, metadata !DIExpression()), !dbg !12652
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12653
  %call6 = call i32 @pcie_get_mps(%struct.pci_dev* %4) #11, !dbg !12654
  store i32 %call6, i32* %mps, align 4, !dbg !12652
  %5 = load i32, i32* %mps, align 4, !dbg !12655
  %6 = load i32, i32* %rq.addr, align 4, !dbg !12657
  %cmp7 = icmp slt i32 %5, %6, !dbg !12658
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !12659

if.then9:                                         ; preds = %if.then5
  %7 = load i32, i32* %mps, align 4, !dbg !12660
  store i32 %7, i32* %rq.addr, align 4, !dbg !12661
  br label %if.end10, !dbg !12662

if.end10:                                         ; preds = %if.then9, %if.then5
  br label %if.end11, !dbg !12663

if.end11:                                         ; preds = %if.end10, %if.end
  %8 = load i32, i32* %rq.addr, align 4, !dbg !12664
  store i32 %8, i32* %x.addr.i, align 4
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !12665
  %10 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %9, i32 -1) #9, !dbg !12666, !srcloc !12525
  store i32 %10, i32* %r.i, align 4, !dbg !12666
  %11 = load i32, i32* %r.i, align 4, !dbg !12667
  %add.i = add i32 %11, 1, !dbg !12668
  %sub = sub i32 %add.i, 8, !dbg !12669
  %shl = shl i32 %sub, 12, !dbg !12670
  %conv13 = trunc i32 %shl to i16, !dbg !12671
  store i16 %conv13, i16* %v, align 2, !dbg !12672
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12673
  %13 = load i16, i16* %v, align 2, !dbg !12674
  %call14 = call i32 @pcie_capability_clear_and_set_word(%struct.pci_dev* %12, i32 8, i16 zeroext 28672, i16 zeroext %13) #11, !dbg !12675
  store i32 %call14, i32* %ret, align 4, !dbg !12676
  %14 = load i32, i32* %ret, align 4, !dbg !12677
  %call15 = call i32 @pcibios_err_to_errno(i32 %14) #11, !dbg !12678
  store i32 %call15, i32* %retval, align 4, !dbg !12679
  br label %return, !dbg !12679

return:                                           ; preds = %if.end11, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !12680
  ret i32 %15, !dbg !12680
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcie_get_mps(%struct.pci_dev* %dev) #0 !dbg !12681 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ctl = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12682, metadata !DIExpression()), !dbg !12683
  call void @llvm.dbg.declare(metadata i16* %ctl, metadata !12684, metadata !DIExpression()), !dbg !12685
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12686
  %call = call i32 @pcie_capability_read_word(%struct.pci_dev* %0, i32 8, i16* %ctl) #11, !dbg !12687
  %1 = load i16, i16* %ctl, align 2, !dbg !12688
  %conv = zext i16 %1 to i32, !dbg !12688
  %and = and i32 %conv, 224, !dbg !12689
  %shr = ashr i32 %and, 5, !dbg !12690
  %shl = shl i32 128, %shr, !dbg !12691
  ret i32 %shl, !dbg !12692
}

; Function Attrs: noredzone
declare dso_local i32 @pcie_capability_clear_and_set_word(%struct.pci_dev*, i32, i16 zeroext, i16 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcibios_err_to_errno(i32 %err) #0 !dbg !12693 {
entry:
  %retval = alloca i32, align 4
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !12694, metadata !DIExpression()), !dbg !12695
  %0 = load i32, i32* %err.addr, align 4, !dbg !12696
  %cmp = icmp sle i32 %0, 0, !dbg !12698
  br i1 %cmp, label %if.then, label %if.end, !dbg !12699

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !12700
  store i32 %1, i32* %retval, align 4, !dbg !12701
  br label %return, !dbg !12701

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %err.addr, align 4, !dbg !12702
  switch i32 %2, label %sw.epilog [
    i32 129, label %sw.bb
    i32 131, label %sw.bb1
    i32 134, label %sw.bb2
    i32 135, label %sw.bb3
    i32 136, label %sw.bb4
    i32 137, label %sw.bb5
  ], !dbg !12703

sw.bb:                                            ; preds = %if.end
  store i32 -2, i32* %retval, align 4, !dbg !12704
  br label %return, !dbg !12704

sw.bb1:                                           ; preds = %if.end
  store i32 -25, i32* %retval, align 4, !dbg !12706
  br label %return, !dbg !12706

sw.bb2:                                           ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !12707
  br label %return, !dbg !12707

sw.bb3:                                           ; preds = %if.end
  store i32 -14, i32* %retval, align 4, !dbg !12708
  br label %return, !dbg !12708

sw.bb4:                                           ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !12709
  br label %return, !dbg !12709

sw.bb5:                                           ; preds = %if.end
  store i32 -28, i32* %retval, align 4, !dbg !12710
  br label %return, !dbg !12710

sw.epilog:                                        ; preds = %if.end
  store i32 -34, i32* %retval, align 4, !dbg !12711
  br label %return, !dbg !12711

return:                                           ; preds = %sw.epilog, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !12712
  ret i32 %3, !dbg !12712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcie_set_mps(%struct.pci_dev* %dev, i32 %mps) #0 !dbg !12713 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !12490, metadata !DIExpression()), !dbg !12714
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !12495, metadata !DIExpression()), !dbg !12716
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %mps.addr = alloca i32, align 4
  %v = alloca i16, align 2
  %ret = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12717, metadata !DIExpression()), !dbg !12718
  store i32 %mps, i32* %mps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mps.addr, metadata !12719, metadata !DIExpression()), !dbg !12720
  call void @llvm.dbg.declare(metadata i16* %v, metadata !12721, metadata !DIExpression()), !dbg !12722
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12723, metadata !DIExpression()), !dbg !12724
  %0 = load i32, i32* %mps.addr, align 4, !dbg !12725
  %cmp = icmp slt i32 %0, 128, !dbg !12727
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12728

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %mps.addr, align 4, !dbg !12729
  %cmp1 = icmp sgt i32 %1, 4096, !dbg !12730
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !12731

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %mps.addr, align 4, !dbg !12732
  %conv = sext i32 %2 to i64, !dbg !12732
  %call = call zeroext i1 @is_power_of_2(i64 %conv) #13, !dbg !12733
  br i1 %call, label %if.end, label %if.then, !dbg !12734

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !12735
  br label %return, !dbg !12735

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load i32, i32* %mps.addr, align 4, !dbg !12736
  store i32 %3, i32* %x.addr.i, align 4
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !12737
  %5 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %4, i32 -1) #9, !dbg !12738, !srcloc !12525
  store i32 %5, i32* %r.i, align 4, !dbg !12738
  %6 = load i32, i32* %r.i, align 4, !dbg !12739
  %add.i = add i32 %6, 1, !dbg !12740
  %sub = sub i32 %add.i, 8, !dbg !12741
  %conv4 = trunc i32 %sub to i16, !dbg !12742
  store i16 %conv4, i16* %v, align 2, !dbg !12743
  %7 = load i16, i16* %v, align 2, !dbg !12744
  %conv5 = zext i16 %7 to i32, !dbg !12744
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12746
  %pcie_mpss = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 17, !dbg !12747
  %bf.load = load i8, i8* %pcie_mpss, align 1, !dbg !12747
  %bf.clear = and i8 %bf.load, 7, !dbg !12747
  %conv6 = zext i8 %bf.clear to i32, !dbg !12746
  %cmp7 = icmp sgt i32 %conv5, %conv6, !dbg !12748
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !12749

if.then9:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !12750
  br label %return, !dbg !12750

if.end10:                                         ; preds = %if.end
  %9 = load i16, i16* %v, align 2, !dbg !12751
  %conv11 = zext i16 %9 to i32, !dbg !12751
  %shl = shl i32 %conv11, 5, !dbg !12751
  %conv12 = trunc i32 %shl to i16, !dbg !12751
  store i16 %conv12, i16* %v, align 2, !dbg !12751
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12752
  %11 = load i16, i16* %v, align 2, !dbg !12753
  %call13 = call i32 @pcie_capability_clear_and_set_word(%struct.pci_dev* %10, i32 8, i16 zeroext 224, i16 zeroext %11) #11, !dbg !12754
  store i32 %call13, i32* %ret, align 4, !dbg !12755
  %12 = load i32, i32* %ret, align 4, !dbg !12756
  %call14 = call i32 @pcibios_err_to_errno(i32 %12) #11, !dbg !12757
  store i32 %call14, i32* %retval, align 4, !dbg !12758
  br label %return, !dbg !12758

return:                                           ; preds = %if.end10, %if.then9, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !12759
  ret i32 %13, !dbg !12759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcie_bandwidth_available(%struct.pci_dev* %dev, %struct.pci_dev** %limiting_dev, i32* %speed, i32* %width) #0 !dbg !12760 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %limiting_dev.addr = alloca %struct.pci_dev**, align 8
  %speed.addr = alloca i32*, align 8
  %width.addr = alloca i32*, align 8
  %lnksta = alloca i16, align 2
  %next_speed = alloca i32, align 4
  %next_width = alloca i32, align 4
  %bw = alloca i32, align 4
  %next_bw = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12765, metadata !DIExpression()), !dbg !12766
  store %struct.pci_dev** %limiting_dev, %struct.pci_dev*** %limiting_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev*** %limiting_dev.addr, metadata !12767, metadata !DIExpression()), !dbg !12768
  store i32* %speed, i32** %speed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %speed.addr, metadata !12769, metadata !DIExpression()), !dbg !12770
  store i32* %width, i32** %width.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %width.addr, metadata !12771, metadata !DIExpression()), !dbg !12772
  call void @llvm.dbg.declare(metadata i16* %lnksta, metadata !12773, metadata !DIExpression()), !dbg !12774
  call void @llvm.dbg.declare(metadata i32* %next_speed, metadata !12775, metadata !DIExpression()), !dbg !12776
  call void @llvm.dbg.declare(metadata i32* %next_width, metadata !12777, metadata !DIExpression()), !dbg !12778
  call void @llvm.dbg.declare(metadata i32* %bw, metadata !12779, metadata !DIExpression()), !dbg !12780
  call void @llvm.dbg.declare(metadata i32* %next_bw, metadata !12781, metadata !DIExpression()), !dbg !12782
  %0 = load i32*, i32** %speed.addr, align 8, !dbg !12783
  %tobool = icmp ne i32* %0, null, !dbg !12783
  br i1 %tobool, label %if.then, label %if.end, !dbg !12785

if.then:                                          ; preds = %entry
  %1 = load i32*, i32** %speed.addr, align 8, !dbg !12786
  store i32 255, i32* %1, align 4, !dbg !12787
  br label %if.end, !dbg !12788

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32*, i32** %width.addr, align 8, !dbg !12789
  %tobool1 = icmp ne i32* %2, null, !dbg !12789
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !12791

if.then2:                                         ; preds = %if.end
  %3 = load i32*, i32** %width.addr, align 8, !dbg !12792
  store i32 255, i32* %3, align 4, !dbg !12793
  br label %if.end3, !dbg !12794

if.end3:                                          ; preds = %if.then2, %if.end
  store i32 0, i32* %bw, align 4, !dbg !12795
  br label %while.cond, !dbg !12796

while.cond:                                       ; preds = %if.end43, %if.end3
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12797
  %tobool4 = icmp ne %struct.pci_dev* %4, null, !dbg !12796
  br i1 %tobool4, label %while.body, label %while.end, !dbg !12796

while.body:                                       ; preds = %while.cond
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12798
  %call = call i32 @pcie_capability_read_word(%struct.pci_dev* %5, i32 18, i16* %lnksta) #11, !dbg !12800
  %6 = load i16, i16* %lnksta, align 2, !dbg !12801
  %conv = zext i16 %6 to i32, !dbg !12801
  %and = and i32 %conv, 15, !dbg !12802
  %idxprom = sext i32 %and to i64, !dbg !12803
  %arrayidx = getelementptr [0 x i8], [0 x i8]* @pcie_link_speed, i64 0, i64 %idxprom, !dbg !12803
  %7 = load i8, i8* %arrayidx, align 1, !dbg !12803
  %conv5 = zext i8 %7 to i32, !dbg !12803
  store i32 %conv5, i32* %next_speed, align 4, !dbg !12804
  %8 = load i16, i16* %lnksta, align 2, !dbg !12805
  %conv6 = zext i16 %8 to i32, !dbg !12805
  %and7 = and i32 %conv6, 1008, !dbg !12806
  %shr = ashr i32 %and7, 4, !dbg !12807
  store i32 %shr, i32* %next_width, align 4, !dbg !12808
  %9 = load i32, i32* %next_width, align 4, !dbg !12809
  %10 = load i32, i32* %next_speed, align 4, !dbg !12810
  %cmp = icmp eq i32 %10, 24, !dbg !12810
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12810

cond.true:                                        ; preds = %while.body
  br label %cond.end28, !dbg !12810

cond.false:                                       ; preds = %while.body
  %11 = load i32, i32* %next_speed, align 4, !dbg !12810
  %cmp9 = icmp eq i32 %11, 23, !dbg !12810
  br i1 %cmp9, label %cond.true11, label %cond.false12, !dbg !12810

cond.true11:                                      ; preds = %cond.false
  br label %cond.end26, !dbg !12810

cond.false12:                                     ; preds = %cond.false
  %12 = load i32, i32* %next_speed, align 4, !dbg !12810
  %cmp13 = icmp eq i32 %12, 22, !dbg !12810
  br i1 %cmp13, label %cond.true15, label %cond.false16, !dbg !12810

cond.true15:                                      ; preds = %cond.false12
  br label %cond.end24, !dbg !12810

cond.false16:                                     ; preds = %cond.false12
  %13 = load i32, i32* %next_speed, align 4, !dbg !12810
  %cmp17 = icmp eq i32 %13, 21, !dbg !12810
  br i1 %cmp17, label %cond.true19, label %cond.false20, !dbg !12810

cond.true19:                                      ; preds = %cond.false16
  br label %cond.end, !dbg !12810

cond.false20:                                     ; preds = %cond.false16
  %14 = load i32, i32* %next_speed, align 4, !dbg !12810
  %cmp21 = icmp eq i32 %14, 20, !dbg !12810
  %15 = zext i1 %cmp21 to i64, !dbg !12810
  %cond = select i1 %cmp21, i32 2000, i32 0, !dbg !12810
  br label %cond.end, !dbg !12810

cond.end:                                         ; preds = %cond.false20, %cond.true19
  %cond23 = phi i32 [ 4000, %cond.true19 ], [ %cond, %cond.false20 ], !dbg !12810
  br label %cond.end24, !dbg !12810

cond.end24:                                       ; preds = %cond.end, %cond.true15
  %cond25 = phi i32 [ 7876, %cond.true15 ], [ %cond23, %cond.end ], !dbg !12810
  br label %cond.end26, !dbg !12810

cond.end26:                                       ; preds = %cond.end24, %cond.true11
  %cond27 = phi i32 [ 15753, %cond.true11 ], [ %cond25, %cond.end24 ], !dbg !12810
  br label %cond.end28, !dbg !12810

cond.end28:                                       ; preds = %cond.end26, %cond.true
  %cond29 = phi i32 [ 31507, %cond.true ], [ %cond27, %cond.end26 ], !dbg !12810
  %mul = mul i32 %9, %cond29, !dbg !12811
  store i32 %mul, i32* %next_bw, align 4, !dbg !12812
  %16 = load i32, i32* %bw, align 4, !dbg !12813
  %tobool30 = icmp ne i32 %16, 0, !dbg !12813
  br i1 %tobool30, label %lor.lhs.false, label %if.then33, !dbg !12815

lor.lhs.false:                                    ; preds = %cond.end28
  %17 = load i32, i32* %next_bw, align 4, !dbg !12816
  %18 = load i32, i32* %bw, align 4, !dbg !12817
  %cmp31 = icmp ule i32 %17, %18, !dbg !12818
  br i1 %cmp31, label %if.then33, label %if.end43, !dbg !12819

if.then33:                                        ; preds = %lor.lhs.false, %cond.end28
  %19 = load i32, i32* %next_bw, align 4, !dbg !12820
  store i32 %19, i32* %bw, align 4, !dbg !12822
  %20 = load %struct.pci_dev**, %struct.pci_dev*** %limiting_dev.addr, align 8, !dbg !12823
  %tobool34 = icmp ne %struct.pci_dev** %20, null, !dbg !12823
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !12825

if.then35:                                        ; preds = %if.then33
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12826
  %22 = load %struct.pci_dev**, %struct.pci_dev*** %limiting_dev.addr, align 8, !dbg !12827
  store %struct.pci_dev* %21, %struct.pci_dev** %22, align 8, !dbg !12828
  br label %if.end36, !dbg !12829

if.end36:                                         ; preds = %if.then35, %if.then33
  %23 = load i32*, i32** %speed.addr, align 8, !dbg !12830
  %tobool37 = icmp ne i32* %23, null, !dbg !12830
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !12832

if.then38:                                        ; preds = %if.end36
  %24 = load i32, i32* %next_speed, align 4, !dbg !12833
  %25 = load i32*, i32** %speed.addr, align 8, !dbg !12834
  store i32 %24, i32* %25, align 4, !dbg !12835
  br label %if.end39, !dbg !12836

if.end39:                                         ; preds = %if.then38, %if.end36
  %26 = load i32*, i32** %width.addr, align 8, !dbg !12837
  %tobool40 = icmp ne i32* %26, null, !dbg !12837
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !12839

if.then41:                                        ; preds = %if.end39
  %27 = load i32, i32* %next_width, align 4, !dbg !12840
  %28 = load i32*, i32** %width.addr, align 8, !dbg !12841
  store i32 %27, i32* %28, align 4, !dbg !12842
  br label %if.end42, !dbg !12843

if.end42:                                         ; preds = %if.then41, %if.end39
  br label %if.end43, !dbg !12844

if.end43:                                         ; preds = %if.end42, %lor.lhs.false
  %29 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12845
  %call44 = call %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %29) #11, !dbg !12846
  store %struct.pci_dev* %call44, %struct.pci_dev** %dev.addr, align 8, !dbg !12847
  br label %while.cond, !dbg !12796, !llvm.loop !12848

while.end:                                        ; preds = %while.cond
  %30 = load i32, i32* %bw, align 4, !dbg !12850
  ret i32 %30, !dbg !12851
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcie_get_width_cap(%struct.pci_dev* %dev) #0 !dbg !12852 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %lnkcap = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12855, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.declare(metadata i32* %lnkcap, metadata !12857, metadata !DIExpression()), !dbg !12858
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12859
  %call = call i32 @pcie_capability_read_dword(%struct.pci_dev* %0, i32 12, i32* %lnkcap) #11, !dbg !12860
  %1 = load i32, i32* %lnkcap, align 4, !dbg !12861
  %tobool = icmp ne i32 %1, 0, !dbg !12861
  br i1 %tobool, label %if.then, label %if.end, !dbg !12863

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %lnkcap, align 4, !dbg !12864
  %and = and i32 %2, 1008, !dbg !12865
  %shr = lshr i32 %and, 4, !dbg !12866
  store i32 %shr, i32* %retval, align 4, !dbg !12867
  br label %return, !dbg !12867

if.end:                                           ; preds = %entry
  store i32 255, i32* %retval, align 4, !dbg !12868
  br label %return, !dbg !12868

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !12869
  ret i32 %3, !dbg !12869
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pcie_bandwidth_capable(%struct.pci_dev* %dev, i32* %speed, i32* %width) #0 !dbg !12870 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %speed.addr = alloca i32*, align 8
  %width.addr = alloca i32*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12873, metadata !DIExpression()), !dbg !12874
  store i32* %speed, i32** %speed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %speed.addr, metadata !12875, metadata !DIExpression()), !dbg !12876
  store i32* %width, i32** %width.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %width.addr, metadata !12877, metadata !DIExpression()), !dbg !12878
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12879
  %call = call i32 @pcie_get_speed_cap(%struct.pci_dev* %0) #11, !dbg !12880
  %1 = load i32*, i32** %speed.addr, align 8, !dbg !12881
  store i32 %call, i32* %1, align 4, !dbg !12882
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12883
  %call1 = call i32 @pcie_get_width_cap(%struct.pci_dev* %2) #11, !dbg !12884
  %3 = load i32*, i32** %width.addr, align 8, !dbg !12885
  store i32 %call1, i32* %3, align 4, !dbg !12886
  %4 = load i32*, i32** %speed.addr, align 8, !dbg !12887
  %5 = load i32, i32* %4, align 4, !dbg !12889
  %cmp = icmp eq i32 %5, 255, !dbg !12890
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12891

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32*, i32** %width.addr, align 8, !dbg !12892
  %7 = load i32, i32* %6, align 4, !dbg !12893
  %cmp2 = icmp eq i32 %7, 255, !dbg !12894
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12895

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !12896
  br label %return, !dbg !12896

if.end:                                           ; preds = %lor.lhs.false
  %8 = load i32*, i32** %width.addr, align 8, !dbg !12897
  %9 = load i32, i32* %8, align 4, !dbg !12898
  %10 = load i32*, i32** %speed.addr, align 8, !dbg !12899
  %11 = load i32, i32* %10, align 4, !dbg !12899
  %cmp3 = icmp eq i32 %11, 24, !dbg !12899
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !12899

cond.true:                                        ; preds = %if.end
  br label %cond.end19, !dbg !12899

cond.false:                                       ; preds = %if.end
  %12 = load i32*, i32** %speed.addr, align 8, !dbg !12899
  %13 = load i32, i32* %12, align 4, !dbg !12899
  %cmp4 = icmp eq i32 %13, 23, !dbg !12899
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !12899

cond.true5:                                       ; preds = %cond.false
  br label %cond.end17, !dbg !12899

cond.false6:                                      ; preds = %cond.false
  %14 = load i32*, i32** %speed.addr, align 8, !dbg !12899
  %15 = load i32, i32* %14, align 4, !dbg !12899
  %cmp7 = icmp eq i32 %15, 22, !dbg !12899
  br i1 %cmp7, label %cond.true8, label %cond.false9, !dbg !12899

cond.true8:                                       ; preds = %cond.false6
  br label %cond.end15, !dbg !12899

cond.false9:                                      ; preds = %cond.false6
  %16 = load i32*, i32** %speed.addr, align 8, !dbg !12899
  %17 = load i32, i32* %16, align 4, !dbg !12899
  %cmp10 = icmp eq i32 %17, 21, !dbg !12899
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !12899

cond.true11:                                      ; preds = %cond.false9
  br label %cond.end, !dbg !12899

cond.false12:                                     ; preds = %cond.false9
  %18 = load i32*, i32** %speed.addr, align 8, !dbg !12899
  %19 = load i32, i32* %18, align 4, !dbg !12899
  %cmp13 = icmp eq i32 %19, 20, !dbg !12899
  %20 = zext i1 %cmp13 to i64, !dbg !12899
  %cond = select i1 %cmp13, i32 2000, i32 0, !dbg !12899
  br label %cond.end, !dbg !12899

cond.end:                                         ; preds = %cond.false12, %cond.true11
  %cond14 = phi i32 [ 4000, %cond.true11 ], [ %cond, %cond.false12 ], !dbg !12899
  br label %cond.end15, !dbg !12899

cond.end15:                                       ; preds = %cond.end, %cond.true8
  %cond16 = phi i32 [ 7876, %cond.true8 ], [ %cond14, %cond.end ], !dbg !12899
  br label %cond.end17, !dbg !12899

cond.end17:                                       ; preds = %cond.end15, %cond.true5
  %cond18 = phi i32 [ 15753, %cond.true5 ], [ %cond16, %cond.end15 ], !dbg !12899
  br label %cond.end19, !dbg !12899

cond.end19:                                       ; preds = %cond.end17, %cond.true
  %cond20 = phi i32 [ 31507, %cond.true ], [ %cond18, %cond.end17 ], !dbg !12899
  %mul = mul i32 %9, %cond20, !dbg !12900
  store i32 %mul, i32* %retval, align 4, !dbg !12901
  br label %return, !dbg !12901

return:                                           ; preds = %cond.end19, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !12902
  ret i32 %21, !dbg !12902
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @__pcie_print_link_status(%struct.pci_dev* %dev, i1 zeroext %verbose) #0 !dbg !12903 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %verbose.addr = alloca i8, align 1
  %width = alloca i32, align 4
  %width_cap = alloca i32, align 4
  %speed = alloca i32, align 4
  %speed_cap = alloca i32, align 4
  %limiting_dev = alloca %struct.pci_dev*, align 8
  %bw_avail = alloca i32, align 4
  %bw_cap = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12904, metadata !DIExpression()), !dbg !12905
  %frombool = zext i1 %verbose to i8
  store i8 %frombool, i8* %verbose.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %verbose.addr, metadata !12906, metadata !DIExpression()), !dbg !12907
  call void @llvm.dbg.declare(metadata i32* %width, metadata !12908, metadata !DIExpression()), !dbg !12909
  call void @llvm.dbg.declare(metadata i32* %width_cap, metadata !12910, metadata !DIExpression()), !dbg !12911
  call void @llvm.dbg.declare(metadata i32* %speed, metadata !12912, metadata !DIExpression()), !dbg !12913
  call void @llvm.dbg.declare(metadata i32* %speed_cap, metadata !12914, metadata !DIExpression()), !dbg !12915
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %limiting_dev, metadata !12916, metadata !DIExpression()), !dbg !12917
  store %struct.pci_dev* null, %struct.pci_dev** %limiting_dev, align 8, !dbg !12917
  call void @llvm.dbg.declare(metadata i32* %bw_avail, metadata !12918, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.declare(metadata i32* %bw_cap, metadata !12920, metadata !DIExpression()), !dbg !12921
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12922
  %call = call i32 @pcie_bandwidth_capable(%struct.pci_dev* %0, i32* %speed_cap, i32* %width_cap) #11, !dbg !12923
  store i32 %call, i32* %bw_cap, align 4, !dbg !12924
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12925
  %call1 = call i32 @pcie_bandwidth_available(%struct.pci_dev* %1, %struct.pci_dev** %limiting_dev, i32* %speed, i32* %width) #11, !dbg !12926
  store i32 %call1, i32* %bw_avail, align 4, !dbg !12927
  %2 = load i32, i32* %bw_avail, align 4, !dbg !12928
  %3 = load i32, i32* %bw_cap, align 4, !dbg !12930
  %cmp = icmp uge i32 %2, %3, !dbg !12931
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12932

land.lhs.true:                                    ; preds = %entry
  %4 = load i8, i8* %verbose.addr, align 1, !dbg !12933
  %tobool = trunc i8 %4 to i1, !dbg !12933
  br i1 %tobool, label %if.then, label %if.else, !dbg !12934

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12935
  %dev2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !12935
  %6 = load i32, i32* %bw_cap, align 4, !dbg !12935
  %div = udiv i32 %6, 1000, !dbg !12935
  %7 = load i32, i32* %bw_cap, align 4, !dbg !12935
  %rem = urem i32 %7, 1000, !dbg !12935
  %8 = load i32, i32* %speed_cap, align 4, !dbg !12935
  %call3 = call i8* @pci_speed_string(i32 %8) #11, !dbg !12935
  %9 = load i32, i32* %width_cap, align 4, !dbg !12935
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33, i64 0, i64 0), i32 %div, i32 %rem, i8* %call3, i32 %9) #12, !dbg !12935
  br label %if.end15, !dbg !12935

if.else:                                          ; preds = %land.lhs.true, %entry
  %10 = load i32, i32* %bw_avail, align 4, !dbg !12936
  %11 = load i32, i32* %bw_cap, align 4, !dbg !12938
  %cmp4 = icmp ult i32 %10, %11, !dbg !12939
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !12940

if.then5:                                         ; preds = %if.else
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12941
  %dev6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 41, !dbg !12941
  %13 = load i32, i32* %bw_avail, align 4, !dbg !12941
  %div7 = udiv i32 %13, 1000, !dbg !12941
  %14 = load i32, i32* %bw_avail, align 4, !dbg !12941
  %rem8 = urem i32 %14, 1000, !dbg !12941
  %15 = load i32, i32* %speed, align 4, !dbg !12941
  %call9 = call i8* @pci_speed_string(i32 %15) #11, !dbg !12941
  %16 = load i32, i32* %width, align 4, !dbg !12941
  %17 = load %struct.pci_dev*, %struct.pci_dev** %limiting_dev, align 8, !dbg !12941
  %tobool10 = icmp ne %struct.pci_dev* %17, null, !dbg !12941
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !12941

cond.true:                                        ; preds = %if.then5
  %18 = load %struct.pci_dev*, %struct.pci_dev** %limiting_dev, align 8, !dbg !12941
  %call11 = call i8* @pci_name(%struct.pci_dev* %18) #11, !dbg !12941
  br label %cond.end, !dbg !12941

cond.false:                                       ; preds = %if.then5
  br label %cond.end, !dbg !12941

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call11, %cond.true ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i64 0, i64 0), %cond.false ], !dbg !12941
  %19 = load i32, i32* %bw_cap, align 4, !dbg !12941
  %div12 = udiv i32 %19, 1000, !dbg !12941
  %20 = load i32, i32* %bw_cap, align 4, !dbg !12941
  %rem13 = urem i32 %20, 1000, !dbg !12941
  %21 = load i32, i32* %speed_cap, align 4, !dbg !12941
  %call14 = call i8* @pci_speed_string(i32 %21) #11, !dbg !12941
  %22 = load i32, i32* %width_cap, align 4, !dbg !12941
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev6, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.34, i64 0, i64 0), i32 %div7, i32 %rem8, i8* %call9, i32 %16, i8* %cond, i32 %div12, i32 %rem13, i8* %call14, i32 %22) #12, !dbg !12941
  br label %if.end, !dbg !12941

if.end:                                           ; preds = %cond.end, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  ret void, !dbg !12942
}

; Function Attrs: noredzone
declare dso_local i8* @pci_speed_string(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_name(%struct.pci_dev* %pdev) #0 !dbg !12943 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12946, metadata !DIExpression()), !dbg !12947
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12948
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !12949
  %call = call i8* @dev_name(%struct.device* %dev) #11, !dbg !12950
  ret i8* %call, !dbg !12951
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pcie_print_link_status(%struct.pci_dev* %dev) #0 !dbg !12952 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12953, metadata !DIExpression()), !dbg !12954
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12955
  call void @__pcie_print_link_status(%struct.pci_dev* %0, i1 zeroext true) #11, !dbg !12956
  ret void, !dbg !12957
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_select_bars(%struct.pci_dev* %dev, i64 %flags) #0 !dbg !12958 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %flags.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %bars = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12959, metadata !DIExpression()), !dbg !12960
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !12961, metadata !DIExpression()), !dbg !12962
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12963, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.declare(metadata i32* %bars, metadata !12965, metadata !DIExpression()), !dbg !12966
  store i32 0, i32* %bars, align 4, !dbg !12966
  store i32 0, i32* %i, align 4, !dbg !12967
  br label %for.cond, !dbg !12969

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12970
  %cmp = icmp slt i32 %0, 17, !dbg !12972
  br i1 %cmp, label %for.body, label %for.end, !dbg !12973

for.body:                                         ; preds = %for.cond
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !12974
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 44, !dbg !12974
  %2 = load i32, i32* %i, align 4, !dbg !12974
  %idxprom = sext i32 %2 to i64, !dbg !12974
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !12974
  %flags1 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 3, !dbg !12974
  %3 = load i64, i64* %flags1, align 8, !dbg !12974
  %4 = load i64, i64* %flags.addr, align 8, !dbg !12976
  %and = and i64 %3, %4, !dbg !12977
  %tobool = icmp ne i64 %and, 0, !dbg !12977
  br i1 %tobool, label %if.then, label %if.end, !dbg !12978

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !12979
  %shl = shl i32 1, %5, !dbg !12980
  %6 = load i32, i32* %bars, align 4, !dbg !12981
  %or = or i32 %6, %shl, !dbg !12981
  store i32 %or, i32* %bars, align 4, !dbg !12981
  br label %if.end, !dbg !12982

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !12976

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !12983
  %inc = add i32 %7, 1, !dbg !12983
  store i32 %inc, i32* %i, align 4, !dbg !12983
  br label %for.cond, !dbg !12984, !llvm.loop !12985

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %bars, align 4, !dbg !12987
  ret i32 %8, !dbg !12988
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_register_set_vga_state(i32 (%struct.pci_dev*, i1, i32, i32)* %func) #1 section ".init.text" !dbg !12989 {
entry:
  %func.addr = alloca i32 (%struct.pci_dev*, i1, i32, i32)*, align 8
  store i32 (%struct.pci_dev*, i1, i32, i32)* %func, i32 (%struct.pci_dev*, i1, i32, i32)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.pci_dev*, i1, i32, i32)** %func.addr, metadata !12992, metadata !DIExpression()), !dbg !12993
  %0 = load i32 (%struct.pci_dev*, i1, i32, i32)*, i32 (%struct.pci_dev*, i1, i32, i32)** %func.addr, align 8, !dbg !12994
  store i32 (%struct.pci_dev*, i1, i32, i32)* %0, i32 (%struct.pci_dev*, i1, i32, i32)** @arch_set_vga_state, align 8, !dbg !12995
  ret void, !dbg !12996
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @pci_set_vga_state(%struct.pci_dev* %dev, i1 zeroext %decode, i32 %command_bits, i32 %flags) #0 !dbg !12997 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %decode.addr = alloca i8, align 1
  %command_bits.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %bus = alloca %struct.pci_bus*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %cmd = alloca i16, align 2
  %rc = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !12998, metadata !DIExpression()), !dbg !12999
  %frombool = zext i1 %decode to i8
  store i8 %frombool, i8* %decode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %decode.addr, metadata !13000, metadata !DIExpression()), !dbg !13001
  store i32 %command_bits, i32* %command_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %command_bits.addr, metadata !13002, metadata !DIExpression()), !dbg !13003
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13004, metadata !DIExpression()), !dbg !13005
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus, metadata !13006, metadata !DIExpression()), !dbg !13007
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !13008, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !13010, metadata !DIExpression()), !dbg !13011
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !13012, metadata !DIExpression()), !dbg !13013
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13014, metadata !DIExpression()), !dbg !13016
  %0 = load i32, i32* %flags.addr, align 4, !dbg !13016
  %and = and i32 %0, 2, !dbg !13016
  %tobool = icmp ne i32 %and, 0, !dbg !13016
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13016

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %command_bits.addr, align 4, !dbg !13016
  %and1 = and i32 %1, -4, !dbg !13016
  %tobool2 = icmp ne i32 %and1, 0, !dbg !13016
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !13017
  %lnot = xor i1 %2, true, !dbg !13016
  %lnot3 = xor i1 %lnot, true, !dbg !13016
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13016
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13016
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !13018
  %tobool4 = icmp ne i32 %3, 0, !dbg !13018
  %lnot5 = xor i1 %tobool4, true, !dbg !13018
  %lnot7 = xor i1 %lnot5, true, !dbg !13018
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !13018
  %conv = sext i32 %lnot.ext8 to i64, !dbg !13018
  %tobool9 = icmp ne i64 %conv, 0, !dbg !13018
  br i1 %tobool9, label %if.then, label %if.end, !dbg !13016

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !13018

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !13020

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !13022

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !13020

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i32 6010, i32 2305, i64 12) #10, !dbg !13024, !srcloc !13026
  br label %do.end12, !dbg !13024

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 304) #10, !dbg !13027, !srcloc !13029
  br label %do.body13, !dbg !13020

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !13030

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !13020

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !13020

if.end:                                           ; preds = %do.end15, %land.end
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !13016
  %tobool16 = icmp ne i32 %4, 0, !dbg !13016
  %lnot17 = xor i1 %tobool16, true, !dbg !13016
  %lnot19 = xor i1 %lnot17, true, !dbg !13016
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !13016
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !13016
  store i64 %conv21, i64* %tmp, align 8, !dbg !13018
  %5 = load i64, i64* %tmp, align 8, !dbg !13016
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13032
  %7 = load i8, i8* %decode.addr, align 1, !dbg !13033
  %tobool22 = trunc i8 %7 to i1, !dbg !13033
  %8 = load i32, i32* %command_bits.addr, align 4, !dbg !13034
  %9 = load i32, i32* %flags.addr, align 4, !dbg !13035
  %call = call i32 @pci_set_vga_state_arch(%struct.pci_dev* %6, i1 zeroext %tobool22, i32 %8, i32 %9) #11, !dbg !13036
  store i32 %call, i32* %rc, align 4, !dbg !13037
  %10 = load i32, i32* %rc, align 4, !dbg !13038
  %tobool23 = icmp ne i32 %10, 0, !dbg !13038
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !13040

if.then24:                                        ; preds = %if.end
  %11 = load i32, i32* %rc, align 4, !dbg !13041
  store i32 %11, i32* %retval, align 4, !dbg !13042
  br label %return, !dbg !13042

if.end25:                                         ; preds = %if.end
  %12 = load i32, i32* %flags.addr, align 4, !dbg !13043
  %and26 = and i32 %12, 2, !dbg !13045
  %tobool27 = icmp ne i32 %and26, 0, !dbg !13045
  br i1 %tobool27, label %if.then28, label %if.end39, !dbg !13046

if.then28:                                        ; preds = %if.end25
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13047
  %call29 = call i32 @pci_read_config_word(%struct.pci_dev* %13, i32 4, i16* %cmd) #11, !dbg !13049
  %14 = load i8, i8* %decode.addr, align 1, !dbg !13050
  %tobool30 = trunc i8 %14 to i1, !dbg !13050
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !13052

if.then31:                                        ; preds = %if.then28
  %15 = load i32, i32* %command_bits.addr, align 4, !dbg !13053
  %16 = load i16, i16* %cmd, align 2, !dbg !13054
  %conv32 = zext i16 %16 to i32, !dbg !13054
  %or = or i32 %conv32, %15, !dbg !13054
  %conv33 = trunc i32 %or to i16, !dbg !13054
  store i16 %conv33, i16* %cmd, align 2, !dbg !13054
  br label %if.end37, !dbg !13055

if.else:                                          ; preds = %if.then28
  %17 = load i32, i32* %command_bits.addr, align 4, !dbg !13056
  %neg = xor i32 %17, -1, !dbg !13057
  %18 = load i16, i16* %cmd, align 2, !dbg !13058
  %conv34 = zext i16 %18 to i32, !dbg !13058
  %and35 = and i32 %conv34, %neg, !dbg !13058
  %conv36 = trunc i32 %and35 to i16, !dbg !13058
  store i16 %conv36, i16* %cmd, align 2, !dbg !13058
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then31
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13059
  %20 = load i16, i16* %cmd, align 2, !dbg !13060
  %call38 = call i32 @pci_write_config_word(%struct.pci_dev* %19, i32 4, i16 zeroext %20) #11, !dbg !13061
  br label %if.end39, !dbg !13062

if.end39:                                         ; preds = %if.end37, %if.end25
  %21 = load i32, i32* %flags.addr, align 4, !dbg !13063
  %and40 = and i32 %21, 1, !dbg !13065
  %tobool41 = icmp ne i32 %and40, 0, !dbg !13065
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !13066

if.then42:                                        ; preds = %if.end39
  store i32 0, i32* %retval, align 4, !dbg !13067
  br label %return, !dbg !13067

if.end43:                                         ; preds = %if.end39
  %22 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13068
  %bus44 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 1, !dbg !13069
  %23 = load %struct.pci_bus*, %struct.pci_bus** %bus44, align 8, !dbg !13069
  store %struct.pci_bus* %23, %struct.pci_bus** %bus, align 8, !dbg !13070
  br label %while.cond, !dbg !13071

while.cond:                                       ; preds = %if.end60, %if.end43
  %24 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !13072
  %tobool45 = icmp ne %struct.pci_bus* %24, null, !dbg !13071
  br i1 %tobool45, label %while.body, label %while.end, !dbg !13071

while.body:                                       ; preds = %while.cond
  %25 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !13073
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %25, i32 0, i32 4, !dbg !13075
  %26 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !13075
  store %struct.pci_dev* %26, %struct.pci_dev** %bridge, align 8, !dbg !13076
  %27 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13077
  %tobool46 = icmp ne %struct.pci_dev* %27, null, !dbg !13077
  br i1 %tobool46, label %if.then47, label %if.end60, !dbg !13079

if.then47:                                        ; preds = %while.body
  %28 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13080
  %call48 = call i32 @pci_read_config_word(%struct.pci_dev* %28, i32 62, i16* %cmd) #11, !dbg !13082
  %29 = load i8, i8* %decode.addr, align 1, !dbg !13083
  %tobool49 = trunc i8 %29 to i1, !dbg !13083
  br i1 %tobool49, label %if.then50, label %if.else54, !dbg !13085

if.then50:                                        ; preds = %if.then47
  %30 = load i16, i16* %cmd, align 2, !dbg !13086
  %conv51 = zext i16 %30 to i32, !dbg !13086
  %or52 = or i32 %conv51, 8, !dbg !13086
  %conv53 = trunc i32 %or52 to i16, !dbg !13086
  store i16 %conv53, i16* %cmd, align 2, !dbg !13086
  br label %if.end58, !dbg !13087

if.else54:                                        ; preds = %if.then47
  %31 = load i16, i16* %cmd, align 2, !dbg !13088
  %conv55 = zext i16 %31 to i32, !dbg !13088
  %and56 = and i32 %conv55, -9, !dbg !13088
  %conv57 = trunc i32 %and56 to i16, !dbg !13088
  store i16 %conv57, i16* %cmd, align 2, !dbg !13088
  br label %if.end58

if.end58:                                         ; preds = %if.else54, %if.then50
  %32 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13089
  %33 = load i16, i16* %cmd, align 2, !dbg !13090
  %call59 = call i32 @pci_write_config_word(%struct.pci_dev* %32, i32 62, i16 zeroext %33) #11, !dbg !13091
  br label %if.end60, !dbg !13092

if.end60:                                         ; preds = %if.end58, %while.body
  %34 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !13093
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %34, i32 0, i32 1, !dbg !13094
  %35 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !13094
  store %struct.pci_bus* %35, %struct.pci_bus** %bus, align 8, !dbg !13095
  br label %while.cond, !dbg !13071, !llvm.loop !13096

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !13098
  br label %return, !dbg !13098

return:                                           ; preds = %while.end, %if.then42, %if.then24
  %36 = load i32, i32* %retval, align 4, !dbg !13099
  ret i32 %36, !dbg !13099
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_set_vga_state_arch(%struct.pci_dev* %dev, i1 zeroext %decode, i32 %command_bits, i32 %flags) #0 !dbg !13100 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %decode.addr = alloca i8, align 1
  %command_bits.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !13101, metadata !DIExpression()), !dbg !13102
  %frombool = zext i1 %decode to i8
  store i8 %frombool, i8* %decode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %decode.addr, metadata !13103, metadata !DIExpression()), !dbg !13104
  store i32 %command_bits, i32* %command_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %command_bits.addr, metadata !13105, metadata !DIExpression()), !dbg !13106
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13107, metadata !DIExpression()), !dbg !13108
  %0 = load i32 (%struct.pci_dev*, i1, i32, i32)*, i32 (%struct.pci_dev*, i1, i32, i32)** @arch_set_vga_state, align 8, !dbg !13109
  %tobool = icmp ne i32 (%struct.pci_dev*, i1, i32, i32)* %0, null, !dbg !13109
  br i1 %tobool, label %if.then, label %if.end, !dbg !13111

if.then:                                          ; preds = %entry
  %1 = load i32 (%struct.pci_dev*, i1, i32, i32)*, i32 (%struct.pci_dev*, i1, i32, i32)** @arch_set_vga_state, align 8, !dbg !13112
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13113
  %3 = load i8, i8* %decode.addr, align 1, !dbg !13114
  %tobool1 = trunc i8 %3 to i1, !dbg !13114
  %4 = load i32, i32* %command_bits.addr, align 4, !dbg !13115
  %5 = load i32, i32* %flags.addr, align 4, !dbg !13116
  %call = call i32 %1(%struct.pci_dev* %2, i1 zeroext %tobool1, i32 %4, i32 %5) #11, !dbg !13112
  store i32 %call, i32* %retval, align 4, !dbg !13117
  br label %return, !dbg !13117

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13118
  br label %return, !dbg !13118

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !13119
  ret i32 %6, !dbg !13119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_pr3_present(%struct.pci_dev* %pdev) #0 !dbg !13120 {
entry:
  %retval = alloca i1, align 1
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %adev = alloca %struct.acpi_device*, align 8
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.acpi_device*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !13121, metadata !DIExpression()), !dbg !13122
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev, metadata !13123, metadata !DIExpression()), !dbg !13124
  %0 = load i32, i32* @acpi_disabled, align 4, !dbg !13125
  %tobool = icmp ne i32 %0, 0, !dbg !13125
  br i1 %tobool, label %if.then, label %if.end, !dbg !13127

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !13128
  br label %return, !dbg !13128

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !13129, metadata !DIExpression()), !dbg !13131
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !13131
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !13131
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 24, !dbg !13131
  %2 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !13131
  store %struct.fwnode_handle* %2, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !13131
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !13131
  %call = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %3) #11, !dbg !13131
  br i1 %call, label %cond.true, label %cond.false, !dbg !13131

cond.true:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13132, metadata !DIExpression()), !dbg !13134
  %4 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !13134
  %5 = bitcast %struct.fwnode_handle* %4 to i8*, !dbg !13134
  store i8* %5, i8** %__mptr, align 8, !dbg !13134
  br label %do.body, !dbg !13134

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !13135

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !13134
  %add.ptr = getelementptr i8, i8* %6, i64 -16, !dbg !13134
  %7 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !13134
  store %struct.acpi_device* %7, %struct.acpi_device** %tmp1, align 8, !dbg !13135
  %8 = load %struct.acpi_device*, %struct.acpi_device** %tmp1, align 8, !dbg !13134
  br label %cond.end, !dbg !13131

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !13131

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.acpi_device* [ %8, %do.end ], [ null, %cond.false ], !dbg !13131
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp, align 8, !dbg !13131
  %9 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !13131
  store %struct.acpi_device* %9, %struct.acpi_device** %adev, align 8, !dbg !13137
  %10 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !13138
  %tobool2 = icmp ne %struct.acpi_device* %10, null, !dbg !13138
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !13140

if.then3:                                         ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !13141
  br label %return, !dbg !13141

if.end4:                                          ; preds = %cond.end
  %11 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !13142
  %power = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %11, i32 0, i32 11, !dbg !13143
  %flags = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power, i32 0, i32 1, !dbg !13144
  %12 = bitcast %struct.acpi_device_power_flags* %flags to i32*, !dbg !13145
  %bf.load = load i32, i32* %12, align 4, !dbg !13145
  %bf.lshr = lshr i32 %bf.load, 1, !dbg !13145
  %bf.clear = and i32 %bf.lshr, 1, !dbg !13145
  %tobool5 = icmp ne i32 %bf.clear, 0, !dbg !13142
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !13146

land.rhs:                                         ; preds = %if.end4
  %13 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !13147
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %13, i32 0, i32 1, !dbg !13148
  %14 = load i8*, i8** %handle, align 8, !dbg !13148
  %call6 = call zeroext i1 @acpi_has_method(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0)) #11, !dbg !13149
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end4
  %15 = phi i1 [ false, %if.end4 ], [ %call6, %land.rhs ], !dbg !13150
  store i1 %15, i1* %retval, align 1, !dbg !13151
  br label %return, !dbg !13151

return:                                           ; preds = %land.end, %if.then3, %if.then
  %16 = load i1, i1* %retval, align 1, !dbg !13152
  ret i1 %16, !dbg !13152
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_acpi_device_node(%struct.fwnode_handle*) #3

; Function Attrs: noredzone
declare dso_local zeroext i1 @acpi_has_method(i8*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_add_dma_alias(%struct.pci_dev* %dev, i8 zeroext %devfn_from, i32 %nr_devfns) #0 !dbg !13153 {
entry:
  %map.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %map.addr.i, metadata !13156, metadata !DIExpression()), !dbg !13161
  %start.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr.i, metadata !13163, metadata !DIExpression()), !dbg !13164
  %nbits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr.i, metadata !13165, metadata !DIExpression()), !dbg !13166
  %dev.addr = alloca %struct.pci_dev*, align 8
  %devfn_from.addr = alloca i8, align 1
  %nr_devfns.addr = alloca i32, align 4
  %devfn_to = alloca i32, align 4
  %__UNIQUE_ID___x306 = alloca i32, align 4
  %__UNIQUE_ID___y307 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !13167, metadata !DIExpression()), !dbg !13168
  store i8 %devfn_from, i8* %devfn_from.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %devfn_from.addr, metadata !13169, metadata !DIExpression()), !dbg !13170
  store i32 %nr_devfns, i32* %nr_devfns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr_devfns.addr, metadata !13171, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.declare(metadata i32* %devfn_to, metadata !13173, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x306, metadata !13175, metadata !DIExpression()), !dbg !13177
  %0 = load i32, i32* %nr_devfns.addr, align 4, !dbg !13177
  store i32 %0, i32* %__UNIQUE_ID___x306, align 4, !dbg !13177
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y307, metadata !13178, metadata !DIExpression()), !dbg !13177
  %1 = load i8, i8* %devfn_from.addr, align 1, !dbg !13177
  %conv = zext i8 %1 to i32, !dbg !13177
  %sub = sub i32 256, %conv, !dbg !13177
  store i32 %sub, i32* %__UNIQUE_ID___y307, align 4, !dbg !13177
  %2 = load i32, i32* %__UNIQUE_ID___x306, align 4, !dbg !13177
  %3 = load i32, i32* %__UNIQUE_ID___y307, align 4, !dbg !13177
  %cmp = icmp ult i32 %2, %3, !dbg !13177
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13177

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %__UNIQUE_ID___x306, align 4, !dbg !13177
  br label %cond.end, !dbg !13177

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___y307, align 4, !dbg !13177
  br label %cond.end, !dbg !13177

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !13177
  store i32 %cond, i32* %tmp, align 4, !dbg !13177
  %6 = load i32, i32* %tmp, align 4, !dbg !13177
  store i32 %6, i32* %nr_devfns.addr, align 4, !dbg !13179
  %7 = load i8, i8* %devfn_from.addr, align 1, !dbg !13180
  %conv2 = zext i8 %7 to i32, !dbg !13180
  %8 = load i32, i32* %nr_devfns.addr, align 4, !dbg !13181
  %add = add i32 %conv2, %8, !dbg !13182
  %sub3 = sub i32 %add, 1, !dbg !13183
  store i32 %sub3, i32* %devfn_to, align 4, !dbg !13184
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13185
  %dma_alias_mask = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 22, !dbg !13187
  %10 = load i64*, i64** %dma_alias_mask, align 8, !dbg !13187
  %tobool = icmp ne i64* %10, null, !dbg !13185
  br i1 %tobool, label %if.end, label %if.then, !dbg !13188

if.then:                                          ; preds = %cond.end
  %call = call i64* @bitmap_zalloc(i32 256, i32 3264) #11, !dbg !13189
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13190
  %dma_alias_mask4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 22, !dbg !13191
  store i64* %call, i64** %dma_alias_mask4, align 8, !dbg !13192
  br label %if.end, !dbg !13190

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13193
  %dma_alias_mask5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 22, !dbg !13195
  %13 = load i64*, i64** %dma_alias_mask5, align 8, !dbg !13195
  %tobool6 = icmp ne i64* %13, null, !dbg !13193
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !13196

if.then7:                                         ; preds = %if.end
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13197
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !13197
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.37, i64 0, i64 0)) #12, !dbg !13197
  br label %if.end32, !dbg !13199

if.end9:                                          ; preds = %if.end
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13200
  %dma_alias_mask10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 22, !dbg !13201
  %16 = load i64*, i64** %dma_alias_mask10, align 8, !dbg !13201
  %17 = load i8, i8* %devfn_from.addr, align 1, !dbg !13202
  %conv11 = zext i8 %17 to i32, !dbg !13202
  %18 = load i32, i32* %nr_devfns.addr, align 4, !dbg !13203
  store i64* %16, i64** %map.addr.i, align 8
  store i32 %conv11, i32* %start.addr.i, align 4
  store i32 %18, i32* %nbits.addr.i, align 4
  %19 = load i32, i32* %nbits.addr.i, align 4, !dbg !13204
  %20 = call i1 @llvm.is.constant.i32(i32 %19) #10, !dbg !13206
  br i1 %20, label %land.lhs.true.i, label %if.else.i, !dbg !13207

land.lhs.true.i:                                  ; preds = %if.end9
  %21 = load i32, i32* %nbits.addr.i, align 4, !dbg !13208
  %cmp.i = icmp eq i32 %21, 1, !dbg !13209
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !13210

if.then.i:                                        ; preds = %land.lhs.true.i
  %22 = load i32, i32* %start.addr.i, align 4, !dbg !13211
  %conv.i = zext i32 %22 to i64, !dbg !13211
  %23 = load i64*, i64** %map.addr.i, align 8, !dbg !13212
  call void @__set_bit(i64 %conv.i, i64* %23) #14, !dbg !13213
  br label %bitmap_set.exit, !dbg !13213

if.else.i:                                        ; preds = %land.lhs.true.i, %if.end9
  %24 = load i32, i32* %start.addr.i, align 4, !dbg !13214
  %and.i = and i32 %24, 7, !dbg !13216
  %25 = call i1 @llvm.is.constant.i32(i32 %and.i) #10, !dbg !13217
  br i1 %25, label %land.lhs.true1.i, label %if.else14.i, !dbg !13218

land.lhs.true1.i:                                 ; preds = %if.else.i
  %26 = load i32, i32* %start.addr.i, align 4, !dbg !13219
  %and2.i = and i32 %26, 7, !dbg !13219
  %cmp3.i = icmp eq i32 %and2.i, 0, !dbg !13219
  br i1 %cmp3.i, label %land.lhs.true5.i, label %if.else14.i, !dbg !13220

land.lhs.true5.i:                                 ; preds = %land.lhs.true1.i
  %27 = load i32, i32* %nbits.addr.i, align 4, !dbg !13221
  %and6.i = and i32 %27, 7, !dbg !13222
  %28 = call i1 @llvm.is.constant.i32(i32 %and6.i) #10, !dbg !13223
  br i1 %28, label %land.lhs.true7.i, label %if.else14.i, !dbg !13224

land.lhs.true7.i:                                 ; preds = %land.lhs.true5.i
  %29 = load i32, i32* %nbits.addr.i, align 4, !dbg !13225
  %and8.i = and i32 %29, 7, !dbg !13225
  %cmp9.i = icmp eq i32 %and8.i, 0, !dbg !13225
  br i1 %cmp9.i, label %if.then11.i, label %if.else14.i, !dbg !13226

if.then11.i:                                      ; preds = %land.lhs.true7.i
  %30 = load i64*, i64** %map.addr.i, align 8, !dbg !13227
  %31 = bitcast i64* %30 to i8*, !dbg !13228
  %32 = load i32, i32* %start.addr.i, align 4, !dbg !13229
  %div.i = udiv i32 %32, 8, !dbg !13230
  %idx.ext.i = zext i32 %div.i to i64, !dbg !13231
  %add.ptr.i = getelementptr i8, i8* %31, i64 %idx.ext.i, !dbg !13231
  %33 = load i32, i32* %nbits.addr.i, align 4, !dbg !13232
  %div12.i = udiv i32 %33, 8, !dbg !13233
  %conv13.i = zext i32 %div12.i to i64, !dbg !13232
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr.i, i8 -1, i64 %conv13.i, i1 false) #10, !dbg !13234
  br label %if.end.i, !dbg !13234

if.else14.i:                                      ; preds = %land.lhs.true7.i, %land.lhs.true5.i, %land.lhs.true1.i, %if.else.i
  %34 = load i64*, i64** %map.addr.i, align 8, !dbg !13235
  %35 = load i32, i32* %start.addr.i, align 4, !dbg !13236
  %36 = load i32, i32* %nbits.addr.i, align 4, !dbg !13237
  call void @__bitmap_set(i64* %34, i32 %35, i32 %36) #14, !dbg !13238
  br label %if.end.i

if.end.i:                                         ; preds = %if.else14.i, %if.then11.i
  br label %bitmap_set.exit

bitmap_set.exit:                                  ; preds = %if.then.i, %if.end.i
  %37 = load i32, i32* %nr_devfns.addr, align 4, !dbg !13239
  %cmp12 = icmp eq i32 %37, 1, !dbg !13241
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !13242

if.then14:                                        ; preds = %bitmap_set.exit
  %38 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13243
  %dev15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 41, !dbg !13243
  %39 = load i8, i8* %devfn_from.addr, align 1, !dbg !13243
  %conv16 = zext i8 %39 to i32, !dbg !13243
  %shr = ashr i32 %conv16, 3, !dbg !13243
  %and = and i32 %shr, 31, !dbg !13243
  %40 = load i8, i8* %devfn_from.addr, align 1, !dbg !13243
  %conv17 = zext i8 %40 to i32, !dbg !13243
  %and18 = and i32 %conv17, 7, !dbg !13243
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev15, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.38, i64 0, i64 0), i32 %and, i32 %and18) #12, !dbg !13243
  br label %if.end32, !dbg !13243

if.else:                                          ; preds = %bitmap_set.exit
  %41 = load i32, i32* %nr_devfns.addr, align 4, !dbg !13244
  %cmp19 = icmp ugt i32 %41, 1, !dbg !13246
  br i1 %cmp19, label %if.then21, label %if.end31, !dbg !13247

if.then21:                                        ; preds = %if.else
  %42 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13248
  %dev22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 41, !dbg !13248
  %43 = load i8, i8* %devfn_from.addr, align 1, !dbg !13248
  %conv23 = zext i8 %43 to i32, !dbg !13248
  %shr24 = ashr i32 %conv23, 3, !dbg !13248
  %and25 = and i32 %shr24, 31, !dbg !13248
  %44 = load i8, i8* %devfn_from.addr, align 1, !dbg !13248
  %conv26 = zext i8 %44 to i32, !dbg !13248
  %and27 = and i32 %conv26, 7, !dbg !13248
  %45 = load i32, i32* %devfn_to, align 4, !dbg !13248
  %shr28 = ashr i32 %45, 3, !dbg !13248
  %and29 = and i32 %shr28, 31, !dbg !13248
  %46 = load i32, i32* %devfn_to, align 4, !dbg !13248
  %and30 = and i32 %46, 7, !dbg !13248
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev22, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.39, i64 0, i64 0), i32 %and25, i32 %and27, i32 %and29, i32 %and30) #12, !dbg !13248
  br label %if.end31, !dbg !13248

if.end31:                                         ; preds = %if.then21, %if.else
  br label %if.end32

if.end32:                                         ; preds = %if.then7, %if.end31, %if.then14
  ret void, !dbg !13249
}

; Function Attrs: noredzone
declare dso_local i64* @bitmap_zalloc(i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @pci_devs_are_dma_aliases(%struct.pci_dev* %dev1, %struct.pci_dev* %dev2) #0 !dbg !13250 {
entry:
  %dev1.addr = alloca %struct.pci_dev*, align 8
  %dev2.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev1, %struct.pci_dev** %dev1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev1.addr, metadata !13253, metadata !DIExpression()), !dbg !13254
  store %struct.pci_dev* %dev2, %struct.pci_dev** %dev2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev2.addr, metadata !13255, metadata !DIExpression()), !dbg !13256
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev1.addr, align 8, !dbg !13257
  %dma_alias_mask = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 22, !dbg !13258
  %1 = load i64*, i64** %dma_alias_mask, align 8, !dbg !13258
  %tobool = icmp ne i64* %1, null, !dbg !13257
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !13259

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev2.addr, align 8, !dbg !13260
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 6, !dbg !13261
  %3 = load i32, i32* %devfn, align 8, !dbg !13261
  %conv = zext i32 %3 to i64, !dbg !13260
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev1.addr, align 8, !dbg !13262
  %dma_alias_mask1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 22, !dbg !13263
  %5 = load i64*, i64** %dma_alias_mask1, align 8, !dbg !13263
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %5) #11, !dbg !13264
  br i1 %call, label %lor.end, label %lor.lhs.false, !dbg !13265

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev2.addr, align 8, !dbg !13266
  %dma_alias_mask3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 22, !dbg !13267
  %7 = load i64*, i64** %dma_alias_mask3, align 8, !dbg !13267
  %tobool4 = icmp ne i64* %7, null, !dbg !13266
  br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false11, !dbg !13268

land.lhs.true5:                                   ; preds = %lor.lhs.false
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev1.addr, align 8, !dbg !13269
  %devfn6 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 6, !dbg !13270
  %9 = load i32, i32* %devfn6, align 8, !dbg !13270
  %conv7 = zext i32 %9 to i64, !dbg !13269
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev2.addr, align 8, !dbg !13271
  %dma_alias_mask8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 22, !dbg !13272
  %11 = load i64*, i64** %dma_alias_mask8, align 8, !dbg !13272
  %call9 = call zeroext i1 @test_bit(i64 %conv7, i64* %11) #11, !dbg !13273
  br i1 %call9, label %lor.end, label %lor.lhs.false11, !dbg !13274

lor.lhs.false11:                                  ; preds = %land.lhs.true5, %lor.lhs.false
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev1.addr, align 8, !dbg !13275
  %call12 = call %struct.pci_dev* @pci_real_dma_dev(%struct.pci_dev* %12) #11, !dbg !13276
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev2.addr, align 8, !dbg !13277
  %cmp = icmp eq %struct.pci_dev* %call12, %13, !dbg !13278
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !13279

lor.rhs:                                          ; preds = %lor.lhs.false11
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev2.addr, align 8, !dbg !13280
  %call14 = call %struct.pci_dev* @pci_real_dma_dev(%struct.pci_dev* %14) #11, !dbg !13281
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev1.addr, align 8, !dbg !13282
  %cmp15 = icmp eq %struct.pci_dev* %call14, %15, !dbg !13283
  br label %lor.end, !dbg !13279

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false11, %land.lhs.true5, %land.lhs.true
  %16 = phi i1 [ true, %lor.lhs.false11 ], [ true, %land.lhs.true5 ], [ true, %land.lhs.true ], [ %cmp15, %lor.rhs ]
  ret i1 %16, !dbg !13284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !13285 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !13292, metadata !DIExpression()), !dbg !13294
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !13296, metadata !DIExpression()), !dbg !13297
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !13298, metadata !DIExpression()), !dbg !13299
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13300, metadata !DIExpression()), !dbg !13302
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13304, metadata !DIExpression()), !dbg !13305
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7229, metadata !DIExpression()), !dbg !13306
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7239, metadata !DIExpression()), !dbg !13308
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13309, metadata !DIExpression()), !dbg !13310
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13311, metadata !DIExpression()), !dbg !13312
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13313
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13314
  %div = sdiv i64 %1, 64, !dbg !13314
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13315
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13313
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13316
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13317
  %conv.i = trunc i64 %4 to i32, !dbg !13317
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #14, !dbg !13318
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13319
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13319
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !13319
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13320
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !13320
  br i1 %8, label %cond.true, label %cond.false, !dbg !13320

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !13320
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !13320
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !13321
  %and.i = and i64 %11, 63, !dbg !13322
  %shl.i = shl i64 1, %and.i, !dbg !13323
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !13324
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !13325
  %shr.i = ashr i64 %13, 6, !dbg !13326
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !13324
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !13324
  %and1.i = and i64 %shl.i, %14, !dbg !13327
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !13328
  %conv = zext i1 %cmp.i to i32, !dbg !13320
  br label %cond.end, !dbg !13320

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !13320
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !13320
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !13329
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !13330
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #10, !dbg !13331, !srcloc !13332
  store i8 %19, i8* %oldbit.i, align 1, !dbg !13331
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !13333
  %tobool.i = trunc i8 %20 to i1, !dbg !13333
  %conv2 = zext i1 %tobool.i to i32, !dbg !13320
  br label %cond.end, !dbg !13320

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !13320
  %tobool = icmp ne i32 %cond, 0, !dbg !13320
  ret i1 %tobool, !dbg !13334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local %struct.pci_dev* @pci_real_dma_dev(%struct.pci_dev* %dev) #0 !dbg !13335 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !13336, metadata !DIExpression()), !dbg !13337
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13338
  ret %struct.pci_dev* %0, !dbg !13339
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @pci_bus_read_dev_vendor_id(%struct.pci_bus*, i32, i32*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_ignore_hotplug(%struct.pci_dev* %dev) #0 !dbg !13340 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !13341, metadata !DIExpression()), !dbg !13342
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !13343, metadata !DIExpression()), !dbg !13344
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13345
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !13346
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !13346
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 4, !dbg !13347
  %2 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !13347
  store %struct.pci_dev* %2, %struct.pci_dev** %bridge, align 8, !dbg !13344
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13348
  %ignore_hotplug = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 29, !dbg !13349
  %4 = bitcast i24* %ignore_hotplug to i32*, !dbg !13349
  %bf.load = load i32, i32* %4, align 2, !dbg !13350
  %bf.clear = and i32 %bf.load, -65537, !dbg !13350
  %bf.set = or i32 %bf.clear, 65536, !dbg !13350
  store i32 %bf.set, i32* %4, align 2, !dbg !13350
  %5 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13351
  %tobool = icmp ne %struct.pci_dev* %5, null, !dbg !13351
  br i1 %tobool, label %if.then, label %if.end, !dbg !13353

if.then:                                          ; preds = %entry
  %6 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !13354
  %ignore_hotplug1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 29, !dbg !13355
  %7 = bitcast i24* %ignore_hotplug1 to i32*, !dbg !13355
  %bf.load2 = load i32, i32* %7, align 2, !dbg !13356
  %bf.clear3 = and i32 %bf.load2, -65537, !dbg !13356
  %bf.set4 = or i32 %bf.clear3, 65536, !dbg !13356
  store i32 %bf.set4, i32* %7, align 2, !dbg !13356
  br label %if.end, !dbg !13354

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13357
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local i64 @pcibios_default_alignment() #0 !dbg !13358 {
entry:
  ret i64 0, !dbg !13361
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local void @pci_resource_to_user(%struct.pci_dev* %dev, i32 %bar, %struct.resource* %rsrc, i64* %start, i64* %end) #0 !dbg !13362 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bar.addr = alloca i32, align 4
  %rsrc.addr = alloca %struct.resource*, align 8
  %start.addr = alloca i64*, align 8
  %end.addr = alloca i64*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !13366, metadata !DIExpression()), !dbg !13367
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !13368, metadata !DIExpression()), !dbg !13369
  store %struct.resource* %rsrc, %struct.resource** %rsrc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.resource** %rsrc.addr, metadata !13370, metadata !DIExpression()), !dbg !13371
  store i64* %start, i64** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %start.addr, metadata !13372, metadata !DIExpression()), !dbg !13373
  store i64* %end, i64** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %end.addr, metadata !13374, metadata !DIExpression()), !dbg !13375
  %0 = load %struct.resource*, %struct.resource** %rsrc.addr, align 8, !dbg !13376
  %start1 = getelementptr inbounds %struct.resource, %struct.resource* %0, i32 0, i32 0, !dbg !13377
  %1 = load i64, i64* %start1, align 8, !dbg !13377
  %2 = load i64*, i64** %start.addr, align 8, !dbg !13378
  store i64 %1, i64* %2, align 8, !dbg !13379
  %3 = load %struct.resource*, %struct.resource** %rsrc.addr, align 8, !dbg !13380
  %end2 = getelementptr inbounds %struct.resource, %struct.resource* %3, i32 0, i32 1, !dbg !13381
  %4 = load i64, i64* %end2, align 8, !dbg !13381
  %5 = load i64*, i64** %end.addr, align 8, !dbg !13382
  store i64 %4, i64* %5, align 8, !dbg !13383
  ret void, !dbg !13384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @pci_reassigndev_resource_alignment(%struct.pci_dev* %dev) #0 !dbg !13385 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  %r = alloca %struct.resource*, align 8
  %align = alloca i64, align 8
  %command = alloca i16, align 2
  %resize = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !13386, metadata !DIExpression()), !dbg !13387
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13388, metadata !DIExpression()), !dbg !13389
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !13390, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.declare(metadata i64* %align, metadata !13392, metadata !DIExpression()), !dbg !13393
  call void @llvm.dbg.declare(metadata i16* %command, metadata !13394, metadata !DIExpression()), !dbg !13395
  call void @llvm.dbg.declare(metadata i8* %resize, metadata !13396, metadata !DIExpression()), !dbg !13397
  store i8 0, i8* %resize, align 1, !dbg !13397
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13398
  %is_virtfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !13400
  %1 = bitcast [5 x i8]* %is_virtfn to i40*, !dbg !13400
  %bf.load = load i40, i40* %1, align 1, !dbg !13400
  %bf.lshr = lshr i40 %bf.load, 22, !dbg !13400
  %bf.clear = and i40 %bf.lshr, 1, !dbg !13400
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !13400
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13398
  br i1 %tobool, label %if.then, label %if.end, !dbg !13401

if.then:                                          ; preds = %entry
  br label %if.end35, !dbg !13402

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13403
  %call = call i64 @pci_specified_resource_alignment(%struct.pci_dev* %2, i8* %resize) #11, !dbg !13404
  store i64 %call, i64* %align, align 8, !dbg !13405
  %3 = load i64, i64* %align, align 8, !dbg !13406
  %tobool1 = icmp ne i64 %3, 0, !dbg !13406
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !13408

if.then2:                                         ; preds = %if.end
  br label %if.end35, !dbg !13409

if.end3:                                          ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13410
  %hdr_type = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 13, !dbg !13412
  %5 = load i8, i8* %hdr_type, align 1, !dbg !13412
  %conv = zext i8 %5 to i32, !dbg !13410
  %cmp = icmp eq i32 %conv, 0, !dbg !13413
  br i1 %cmp, label %land.lhs.true, label %if.end9, !dbg !13414

land.lhs.true:                                    ; preds = %if.end3
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13415
  %class = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 11, !dbg !13416
  %7 = load i32, i32* %class, align 4, !dbg !13416
  %shr = lshr i32 %7, 8, !dbg !13417
  %cmp5 = icmp eq i32 %shr, 1536, !dbg !13418
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !13419

if.then7:                                         ; preds = %land.lhs.true
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13420
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !13420
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev8, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.40, i64 0, i64 0)) #12, !dbg !13420
  br label %if.end35, !dbg !13422

if.end9:                                          ; preds = %land.lhs.true, %if.end3
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13423
  %call10 = call i32 @pci_read_config_word(%struct.pci_dev* %9, i32 4, i16* %command) #11, !dbg !13424
  %10 = load i16, i16* %command, align 2, !dbg !13425
  %conv11 = zext i16 %10 to i32, !dbg !13425
  %and = and i32 %conv11, -3, !dbg !13425
  %conv12 = trunc i32 %and to i16, !dbg !13425
  store i16 %conv12, i16* %command, align 2, !dbg !13425
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13426
  %12 = load i16, i16* %command, align 2, !dbg !13427
  %call13 = call i32 @pci_write_config_word(%struct.pci_dev* %11, i32 4, i16 zeroext %12) #11, !dbg !13428
  store i32 0, i32* %i, align 4, !dbg !13429
  br label %for.cond, !dbg !13431

for.cond:                                         ; preds = %for.inc, %if.end9
  %13 = load i32, i32* %i, align 4, !dbg !13432
  %cmp14 = icmp sle i32 %13, 6, !dbg !13434
  br i1 %cmp14, label %for.body, label %for.end, !dbg !13435

for.body:                                         ; preds = %for.cond
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13436
  %15 = load i32, i32* %i, align 4, !dbg !13437
  %16 = load i64, i64* %align, align 8, !dbg !13438
  %17 = load i8, i8* %resize, align 1, !dbg !13439
  %tobool16 = trunc i8 %17 to i1, !dbg !13439
  call void @pci_request_resource_alignment(%struct.pci_dev* %14, i32 %15, i64 %16, i1 zeroext %tobool16) #11, !dbg !13440
  br label %for.inc, !dbg !13440

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !13441
  %inc = add i32 %18, 1, !dbg !13441
  store i32 %inc, i32* %i, align 4, !dbg !13441
  br label %for.cond, !dbg !13442, !llvm.loop !13443

for.end:                                          ; preds = %for.cond
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13445
  %hdr_type17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 13, !dbg !13447
  %20 = load i8, i8* %hdr_type17, align 1, !dbg !13447
  %conv18 = zext i8 %20 to i32, !dbg !13445
  %cmp19 = icmp eq i32 %conv18, 1, !dbg !13448
  br i1 %cmp19, label %if.then21, label %if.end35, !dbg !13449

if.then21:                                        ; preds = %for.end
  store i32 13, i32* %i, align 4, !dbg !13450
  br label %for.cond22, !dbg !13453

for.cond22:                                       ; preds = %for.inc32, %if.then21
  %21 = load i32, i32* %i, align 4, !dbg !13454
  %cmp23 = icmp slt i32 %21, 17, !dbg !13456
  br i1 %cmp23, label %for.body25, label %for.end34, !dbg !13457

for.body25:                                       ; preds = %for.cond22
  %22 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13458
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 44, !dbg !13460
  %23 = load i32, i32* %i, align 4, !dbg !13461
  %idxprom = sext i32 %23 to i64, !dbg !13458
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !13458
  store %struct.resource* %arrayidx, %struct.resource** %r, align 8, !dbg !13462
  %24 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13463
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %24, i32 0, i32 3, !dbg !13465
  %25 = load i64, i64* %flags, align 8, !dbg !13465
  %and26 = and i64 %25, 512, !dbg !13466
  %tobool27 = icmp ne i64 %and26, 0, !dbg !13466
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !13467

if.then28:                                        ; preds = %for.body25
  br label %for.inc32, !dbg !13468

if.end29:                                         ; preds = %for.body25
  %26 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13469
  %flags30 = getelementptr inbounds %struct.resource, %struct.resource* %26, i32 0, i32 3, !dbg !13470
  %27 = load i64, i64* %flags30, align 8, !dbg !13471
  %or = or i64 %27, 536870912, !dbg !13471
  store i64 %or, i64* %flags30, align 8, !dbg !13471
  %28 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13472
  %call31 = call i64 @resource_size(%struct.resource* %28) #11, !dbg !13473
  %sub = sub i64 %call31, 1, !dbg !13474
  %29 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13475
  %end = getelementptr inbounds %struct.resource, %struct.resource* %29, i32 0, i32 1, !dbg !13476
  store i64 %sub, i64* %end, align 8, !dbg !13477
  %30 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13478
  %start = getelementptr inbounds %struct.resource, %struct.resource* %30, i32 0, i32 0, !dbg !13479
  store i64 0, i64* %start, align 8, !dbg !13480
  br label %for.inc32, !dbg !13481

for.inc32:                                        ; preds = %if.end29, %if.then28
  %31 = load i32, i32* %i, align 4, !dbg !13482
  %inc33 = add i32 %31, 1, !dbg !13482
  store i32 %inc33, i32* %i, align 4, !dbg !13482
  br label %for.cond22, !dbg !13483, !llvm.loop !13484

for.end34:                                        ; preds = %for.cond22
  %32 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13486
  call void @pci_disable_bridge_window(%struct.pci_dev* %32) #11, !dbg !13487
  br label %if.end35, !dbg !13488

if.end35:                                         ; preds = %if.then, %if.then2, %if.then7, %for.end34, %for.end
  ret void, !dbg !13489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pci_specified_resource_alignment(%struct.pci_dev* %dev, i8* %resize) #0 !dbg !4859 {
entry:
  %lock.addr.i48 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i48, metadata !13490, metadata !DIExpression()), !dbg !13492
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13494, metadata !DIExpression()), !dbg !13496
  %dev.addr = alloca %struct.pci_dev*, align 8
  %resize.addr = alloca i8*, align 8
  %align_order = alloca i32, align 4
  %count = alloca i32, align 4
  %align = alloca i64, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  %__ret_print_once = alloca i8, align 1
  %tmp = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !13498, metadata !DIExpression()), !dbg !13499
  store i8* %resize, i8** %resize.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %resize.addr, metadata !13500, metadata !DIExpression()), !dbg !13501
  call void @llvm.dbg.declare(metadata i32* %align_order, metadata !13502, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.declare(metadata i32* %count, metadata !13504, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.declare(metadata i64* %align, metadata !13506, metadata !DIExpression()), !dbg !13507
  %call = call i64 @pcibios_default_alignment() #11, !dbg !13508
  store i64 %call, i64* %align, align 8, !dbg !13507
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13509, metadata !DIExpression()), !dbg !13510
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13511, metadata !DIExpression()), !dbg !13512
  store %struct.spinlock* @resource_alignment_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13513, !srcloc !13515
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13516
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !13516
  %rlock.i = bitcast %union.anon* %1 to %struct.raw_spinlock*, !dbg !13516
  %2 = load i8*, i8** @resource_alignment_param, align 8, !dbg !13518
  store i8* %2, i8** %p, align 8, !dbg !13519
  %3 = load i8*, i8** %p, align 8, !dbg !13520
  %tobool = icmp ne i8* %3, null, !dbg !13520
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13522

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !13523
  %5 = load i8, i8* %4, align 1, !dbg !13524
  %tobool1 = icmp ne i8 %5, 0, !dbg !13524
  br i1 %tobool1, label %if.end, label %if.then, !dbg !13525

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %out, !dbg !13526

if.end:                                           ; preds = %lor.lhs.false
  %call2 = call i32 @pci_has_flag(i32 4) #11, !dbg !13527
  %tobool3 = icmp ne i32 %call2, 0, !dbg !13527
  br i1 %tobool3, label %if.then4, label %if.end13, !dbg !13529

if.then4:                                         ; preds = %if.end
  store i64 0, i64* %align, align 8, !dbg !13530
  call void @llvm.dbg.declare(metadata i8* %__ret_print_once, metadata !13532, metadata !DIExpression()), !dbg !13534
  %6 = load i8, i8* @pci_specified_resource_alignment.__print_once, align 1, !dbg !13534
  %tobool5 = trunc i8 %6 to i1, !dbg !13534
  %lnot = xor i1 %tobool5, true, !dbg !13534
  %frombool = zext i1 %lnot to i8, !dbg !13534
  store i8 %frombool, i8* %__ret_print_once, align 1, !dbg !13534
  %7 = load i8, i8* @pci_specified_resource_alignment.__print_once, align 1, !dbg !13535
  %tobool6 = trunc i8 %7 to i1, !dbg !13535
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !13534

if.then7:                                         ; preds = %if.then4
  store i8 1, i8* @pci_specified_resource_alignment.__print_once, align 1, !dbg !13537
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.76, i64 0, i64 0)) #12, !dbg !13537
  br label %if.end9, !dbg !13537

if.end9:                                          ; preds = %if.then7, %if.then4
  %8 = load i8, i8* %__ret_print_once, align 1, !dbg !13534
  %tobool10 = trunc i8 %8 to i1, !dbg !13534
  %lnot11 = xor i1 %tobool10, true, !dbg !13534
  %lnot12 = xor i1 %lnot11, true, !dbg !13534
  %lnot.ext = zext i1 %lnot12 to i32, !dbg !13534
  %conv = sext i32 %lnot.ext to i64, !dbg !13534
  store i64 %conv, i64* %tmp, align 8, !dbg !13535
  %9 = load i64, i64* %tmp, align 8, !dbg !13534
  br label %out, !dbg !13539

if.end13:                                         ; preds = %if.end
  br label %while.cond, !dbg !13540

while.cond:                                       ; preds = %if.end47, %if.end13
  %10 = load i8*, i8** %p, align 8, !dbg !13541
  %11 = load i8, i8* %10, align 1, !dbg !13542
  %tobool14 = icmp ne i8 %11, 0, !dbg !13540
  br i1 %tobool14, label %while.body, label %while.end, !dbg !13540

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %count, align 4, !dbg !13543
  %12 = load i8*, i8** %p, align 8, !dbg !13545
  %call15 = call i32 (i8*, i8*, ...) @sscanf(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0), i32* %align_order, i32* %count) #11, !dbg !13547
  %cmp = icmp eq i32 %call15, 1, !dbg !13548
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !13549

land.lhs.true:                                    ; preds = %while.body
  %13 = load i8*, i8** %p, align 8, !dbg !13550
  %14 = load i32, i32* %count, align 4, !dbg !13551
  %idxprom = sext i32 %14 to i64, !dbg !13550
  %arrayidx = getelementptr i8, i8* %13, i64 %idxprom, !dbg !13550
  %15 = load i8, i8* %arrayidx, align 1, !dbg !13550
  %conv17 = sext i8 %15 to i32, !dbg !13550
  %cmp18 = icmp eq i32 %conv17, 64, !dbg !13552
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !13553

if.then20:                                        ; preds = %land.lhs.true
  %16 = load i32, i32* %count, align 4, !dbg !13554
  %add = add i32 %16, 1, !dbg !13556
  %17 = load i8*, i8** %p, align 8, !dbg !13557
  %idx.ext = sext i32 %add to i64, !dbg !13557
  %add.ptr = getelementptr i8, i8* %17, i64 %idx.ext, !dbg !13557
  store i8* %add.ptr, i8** %p, align 8, !dbg !13557
  br label %if.end21, !dbg !13558

if.else:                                          ; preds = %land.lhs.true, %while.body
  store i32 -1, i32* %align_order, align 4, !dbg !13559
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then20
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13561
  %19 = load i8*, i8** %p, align 8, !dbg !13562
  %call22 = call i32 @pci_dev_str_match(%struct.pci_dev* %18, i8* %19, i8** %p) #11, !dbg !13563
  store i32 %call22, i32* %ret, align 4, !dbg !13564
  %20 = load i32, i32* %ret, align 4, !dbg !13565
  %cmp23 = icmp eq i32 %20, 1, !dbg !13567
  br i1 %cmp23, label %if.then25, label %if.else32, !dbg !13568

if.then25:                                        ; preds = %if.end21
  %21 = load i8*, i8** %resize.addr, align 8, !dbg !13569
  store i8 1, i8* %21, align 1, !dbg !13571
  %22 = load i32, i32* %align_order, align 4, !dbg !13572
  %cmp26 = icmp eq i32 %22, -1, !dbg !13574
  br i1 %cmp26, label %if.then28, label %if.else29, !dbg !13575

if.then28:                                        ; preds = %if.then25
  store i64 4096, i64* %align, align 8, !dbg !13576
  br label %if.end31, !dbg !13577

if.else29:                                        ; preds = %if.then25
  %23 = load i32, i32* %align_order, align 4, !dbg !13578
  %shl = shl i32 1, %23, !dbg !13579
  %conv30 = sext i32 %shl to i64, !dbg !13580
  store i64 %conv30, i64* %align, align 8, !dbg !13581
  br label %if.end31

if.end31:                                         ; preds = %if.else29, %if.then28
  br label %while.end, !dbg !13582

if.else32:                                        ; preds = %if.end21
  %24 = load i32, i32* %ret, align 4, !dbg !13583
  %cmp33 = icmp slt i32 %24, 0, !dbg !13585
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !13586

if.then35:                                        ; preds = %if.else32
  %25 = load i8*, i8** %p, align 8, !dbg !13587
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.78, i64 0, i64 0), i8* %25) #12, !dbg !13587
  br label %while.end, !dbg !13589

if.end37:                                         ; preds = %if.else32
  br label %if.end38

if.end38:                                         ; preds = %if.end37
  %26 = load i8*, i8** %p, align 8, !dbg !13590
  %27 = load i8, i8* %26, align 1, !dbg !13592
  %conv39 = sext i8 %27 to i32, !dbg !13592
  %cmp40 = icmp ne i32 %conv39, 59, !dbg !13593
  br i1 %cmp40, label %land.lhs.true42, label %if.end47, !dbg !13594

land.lhs.true42:                                  ; preds = %if.end38
  %28 = load i8*, i8** %p, align 8, !dbg !13595
  %29 = load i8, i8* %28, align 1, !dbg !13596
  %conv43 = sext i8 %29 to i32, !dbg !13596
  %cmp44 = icmp ne i32 %conv43, 44, !dbg !13597
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !13598

if.then46:                                        ; preds = %land.lhs.true42
  br label %while.end, !dbg !13599

if.end47:                                         ; preds = %land.lhs.true42, %if.end38
  %30 = load i8*, i8** %p, align 8, !dbg !13601
  %incdec.ptr = getelementptr i8, i8* %30, i32 1, !dbg !13601
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13601
  br label %while.cond, !dbg !13540, !llvm.loop !13602

while.end:                                        ; preds = %if.then46, %if.then35, %if.end31, %while.cond
  br label %out, !dbg !13540

out:                                              ; preds = %while.end, %if.end9, %if.then
  call void @llvm.dbg.label(metadata !13604), !dbg !13605
  store %struct.spinlock* @resource_alignment_lock, %struct.spinlock** %lock.addr.i48, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13606, !srcloc !13608
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i48, align 8, !dbg !13609
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !13609
  %rlock.i49 = bitcast %union.anon* %32 to %struct.raw_spinlock*, !dbg !13609
  %33 = load i64, i64* %align, align 8, !dbg !13611
  ret i64 %33, !dbg !13612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_request_resource_alignment(%struct.pci_dev* %dev, i32 %bar, i64 %align, i1 zeroext %resize) #0 !dbg !13613 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bar.addr = alloca i32, align 4
  %align.addr = alloca i64, align 8
  %resize.addr = alloca i8, align 1
  %r = alloca %struct.resource*, align 8
  %size = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !13616, metadata !DIExpression()), !dbg !13617
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !13618, metadata !DIExpression()), !dbg !13619
  store i64 %align, i64* %align.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %align.addr, metadata !13620, metadata !DIExpression()), !dbg !13621
  %frombool = zext i1 %resize to i8
  store i8 %frombool, i8* %resize.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resize.addr, metadata !13622, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.declare(metadata %struct.resource** %r, metadata !13624, metadata !DIExpression()), !dbg !13625
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13626
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 44, !dbg !13627
  %1 = load i32, i32* %bar.addr, align 4, !dbg !13628
  %idxprom = sext i32 %1 to i64, !dbg !13626
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !13626
  store %struct.resource* %arrayidx, %struct.resource** %r, align 8, !dbg !13625
  call void @llvm.dbg.declare(metadata i64* %size, metadata !13629, metadata !DIExpression()), !dbg !13630
  %2 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13631
  %flags = getelementptr inbounds %struct.resource, %struct.resource* %2, i32 0, i32 3, !dbg !13633
  %3 = load i64, i64* %flags, align 8, !dbg !13633
  %and = and i64 %3, 512, !dbg !13634
  %tobool = icmp ne i64 %and, 0, !dbg !13634
  br i1 %tobool, label %if.end, label %if.then, !dbg !13635

if.then:                                          ; preds = %entry
  br label %return, !dbg !13636

if.end:                                           ; preds = %entry
  %4 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13637
  %flags1 = getelementptr inbounds %struct.resource, %struct.resource* %4, i32 0, i32 3, !dbg !13639
  %5 = load i64, i64* %flags1, align 8, !dbg !13639
  %and2 = and i64 %5, 16, !dbg !13640
  %tobool3 = icmp ne i64 %and2, 0, !dbg !13640
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !13641

if.then4:                                         ; preds = %if.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13642
  %dev5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !13642
  %7 = load i32, i32* %bar.addr, align 4, !dbg !13642
  %8 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13642
  %9 = load i64, i64* %align.addr, align 8, !dbg !13642
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev5, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.79, i64 0, i64 0), i32 %7, %struct.resource* %8, i64 %9) #12, !dbg !13642
  br label %return, !dbg !13644

if.end6:                                          ; preds = %if.end
  %10 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13645
  %call = call i64 @resource_size(%struct.resource* %10) #11, !dbg !13646
  store i64 %call, i64* %size, align 8, !dbg !13647
  %11 = load i64, i64* %size, align 8, !dbg !13648
  %12 = load i64, i64* %align.addr, align 8, !dbg !13650
  %cmp = icmp uge i64 %11, %12, !dbg !13651
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !13652

if.then7:                                         ; preds = %if.end6
  br label %return, !dbg !13653

if.end8:                                          ; preds = %if.end6
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !13654
  %dev9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !13654
  %14 = load i32, i32* %bar.addr, align 4, !dbg !13654
  %15 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13654
  %16 = load i64, i64* %align.addr, align 8, !dbg !13654
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev9, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.80, i64 0, i64 0), i32 %14, %struct.resource* %15, i64 %16) #12, !dbg !13654
  %17 = load i8, i8* %resize.addr, align 1, !dbg !13655
  %tobool10 = trunc i8 %17 to i1, !dbg !13655
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !13657

if.then11:                                        ; preds = %if.end8
  %18 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13658
  %start = getelementptr inbounds %struct.resource, %struct.resource* %18, i32 0, i32 0, !dbg !13660
  store i64 0, i64* %start, align 8, !dbg !13661
  %19 = load i64, i64* %align.addr, align 8, !dbg !13662
  %sub = sub i64 %19, 1, !dbg !13663
  %20 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13664
  %end = getelementptr inbounds %struct.resource, %struct.resource* %20, i32 0, i32 1, !dbg !13665
  store i64 %sub, i64* %end, align 8, !dbg !13666
  br label %if.end19, !dbg !13667

if.else:                                          ; preds = %if.end8
  %21 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13668
  %flags12 = getelementptr inbounds %struct.resource, %struct.resource* %21, i32 0, i32 3, !dbg !13670
  %22 = load i64, i64* %flags12, align 8, !dbg !13671
  %and13 = and i64 %22, -262145, !dbg !13671
  store i64 %and13, i64* %flags12, align 8, !dbg !13671
  %23 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13672
  %flags14 = getelementptr inbounds %struct.resource, %struct.resource* %23, i32 0, i32 3, !dbg !13673
  %24 = load i64, i64* %flags14, align 8, !dbg !13674
  %or = or i64 %24, 524288, !dbg !13674
  store i64 %or, i64* %flags14, align 8, !dbg !13674
  %25 = load i64, i64* %align.addr, align 8, !dbg !13675
  %26 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13676
  %start15 = getelementptr inbounds %struct.resource, %struct.resource* %26, i32 0, i32 0, !dbg !13677
  store i64 %25, i64* %start15, align 8, !dbg !13678
  %27 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13679
  %start16 = getelementptr inbounds %struct.resource, %struct.resource* %27, i32 0, i32 0, !dbg !13680
  %28 = load i64, i64* %start16, align 8, !dbg !13680
  %29 = load i64, i64* %size, align 8, !dbg !13681
  %add = add i64 %28, %29, !dbg !13682
  %sub17 = sub i64 %add, 1, !dbg !13683
  %30 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13684
  %end18 = getelementptr inbounds %struct.resource, %struct.resource* %30, i32 0, i32 1, !dbg !13685
  store i64 %sub17, i64* %end18, align 8, !dbg !13686
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then11
  %31 = load %struct.resource*, %struct.resource** %r, align 8, !dbg !13687
  %flags20 = getelementptr inbounds %struct.resource, %struct.resource* %31, i32 0, i32 3, !dbg !13688
  %32 = load i64, i64* %flags20, align 8, !dbg !13689
  %or21 = or i64 %32, 536870912, !dbg !13689
  store i64 %or21, i64* %flags20, align 8, !dbg !13689
  br label %return, !dbg !13690

return:                                           ; preds = %if.end19, %if.then7, %if.then4, %if.then
  ret void, !dbg !13690
}

; Function Attrs: noredzone
declare dso_local void @pci_disable_bridge_window(%struct.pci_dev*) #3

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_resource_alignment_sysfs_init() #1 section ".init.text" !dbg !13691 {
entry:
  %call = call i32 @bus_create_file(%struct.bus_type* @pci_bus_type, %struct.bus_attribute* @bus_attr_resource_alignment) #11, !dbg !13694
  ret i32 %call, !dbg !13695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local i32 @pci_ext_cfg_avail() #0 !dbg !13696 {
entry:
  ret i32 1, !dbg !13697
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local void @pci_fixup_cardbus(%struct.pci_bus* %bus) #0 !dbg !13698 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !13699, metadata !DIExpression()), !dbg !13700
  ret void, !dbg !13701
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_setup(i8* %str) #1 section ".init.text" !dbg !13702 {
entry:
  %str.addr = alloca i8*, align 8
  %k = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !13703, metadata !DIExpression()), !dbg !13704
  br label %while.cond, !dbg !13705

while.cond:                                       ; preds = %if.end145, %entry
  %0 = load i8*, i8** %str.addr, align 8, !dbg !13706
  %tobool = icmp ne i8* %0, null, !dbg !13705
  br i1 %tobool, label %while.body, label %while.end, !dbg !13705

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %k, metadata !13707, metadata !DIExpression()), !dbg !13709
  %1 = load i8*, i8** %str.addr, align 8, !dbg !13710
  %call = call i8* @strchr(i8* %1, i32 44) #11, !dbg !13711
  store i8* %call, i8** %k, align 8, !dbg !13709
  %2 = load i8*, i8** %k, align 8, !dbg !13712
  %tobool1 = icmp ne i8* %2, null, !dbg !13712
  br i1 %tobool1, label %if.then, label %if.end, !dbg !13714

if.then:                                          ; preds = %while.body
  %3 = load i8*, i8** %k, align 8, !dbg !13715
  %incdec.ptr = getelementptr i8, i8* %3, i32 1, !dbg !13715
  store i8* %incdec.ptr, i8** %k, align 8, !dbg !13715
  store i8 0, i8* %3, align 1, !dbg !13716
  br label %if.end, !dbg !13717

if.end:                                           ; preds = %if.then, %while.body
  %4 = load i8*, i8** %str.addr, align 8, !dbg !13718
  %5 = load i8, i8* %4, align 1, !dbg !13720
  %conv = sext i8 %5 to i32, !dbg !13720
  %tobool2 = icmp ne i32 %conv, 0, !dbg !13720
  br i1 %tobool2, label %land.lhs.true, label %if.end145, !dbg !13721

land.lhs.true:                                    ; preds = %if.end
  %6 = load i8*, i8** %str.addr, align 8, !dbg !13722
  %call3 = call i8* @pcibios_setup(i8* %6) #12, !dbg !13723
  store i8* %call3, i8** %str.addr, align 8, !dbg !13724
  %tobool4 = icmp ne i8* %call3, null, !dbg !13724
  br i1 %tobool4, label %land.lhs.true5, label %if.end145, !dbg !13725

land.lhs.true5:                                   ; preds = %land.lhs.true
  %7 = load i8*, i8** %str.addr, align 8, !dbg !13726
  %8 = load i8, i8* %7, align 1, !dbg !13727
  %conv6 = sext i8 %8 to i32, !dbg !13727
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !13727
  br i1 %tobool7, label %if.then8, label %if.end145, !dbg !13728

if.then8:                                         ; preds = %land.lhs.true5
  %9 = load i8*, i8** %str.addr, align 8, !dbg !13729
  %call9 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0)) #11, !dbg !13732
  %tobool10 = icmp ne i32 %call9, 0, !dbg !13732
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !13733

if.then11:                                        ; preds = %if.then8
  call void @pci_no_msi() #11, !dbg !13734
  br label %if.end144, !dbg !13736

if.else:                                          ; preds = %if.then8
  %10 = load i8*, i8** %str.addr, align 8, !dbg !13737
  %call12 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0), i64 5) #11, !dbg !13739
  %tobool13 = icmp ne i32 %call12, 0, !dbg !13739
  br i1 %tobool13, label %if.else16, label %if.then14, !dbg !13740

if.then14:                                        ; preds = %if.else
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.85, i64 0, i64 0)) #12, !dbg !13741
  store i8 1, i8* @pcie_ats_disabled, align 1, !dbg !13743
  br label %if.end143, !dbg !13744

if.else16:                                        ; preds = %if.else
  %11 = load i8*, i8** %str.addr, align 8, !dbg !13745
  %call17 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i64 0, i64 0)) #11, !dbg !13747
  %tobool18 = icmp ne i32 %call17, 0, !dbg !13747
  br i1 %tobool18, label %if.else20, label %if.then19, !dbg !13748

if.then19:                                        ; preds = %if.else16
  call void @pci_no_aer() #11, !dbg !13749
  br label %if.end142, !dbg !13751

if.else20:                                        ; preds = %if.else16
  %12 = load i8*, i8** %str.addr, align 8, !dbg !13752
  %call21 = call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.87, i64 0, i64 0)) #11, !dbg !13754
  %tobool22 = icmp ne i32 %call21, 0, !dbg !13754
  br i1 %tobool22, label %if.else24, label %if.then23, !dbg !13755

if.then23:                                        ; preds = %if.else20
  store i8 1, i8* @pci_early_dump, align 1, !dbg !13756
  br label %if.end141, !dbg !13758

if.else24:                                        ; preds = %if.else20
  %13 = load i8*, i8** %str.addr, align 8, !dbg !13759
  %call25 = call i32 @strncmp(i8* %13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i64 0, i64 0), i64 8) #11, !dbg !13761
  %tobool26 = icmp ne i32 %call25, 0, !dbg !13761
  br i1 %tobool26, label %if.else28, label %if.then27, !dbg !13762

if.then27:                                        ; preds = %if.else24
  %14 = load i8*, i8** %str.addr, align 8, !dbg !13763
  %add.ptr = getelementptr i8, i8* %14, i64 8, !dbg !13765
  call void @pci_realloc_get_opt(i8* %add.ptr) #11, !dbg !13766
  br label %if.end140, !dbg !13767

if.else28:                                        ; preds = %if.else24
  %15 = load i8*, i8** %str.addr, align 8, !dbg !13768
  %call29 = call i32 @strncmp(i8* %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.89, i64 0, i64 0), i64 7) #11, !dbg !13770
  %tobool30 = icmp ne i32 %call29, 0, !dbg !13770
  br i1 %tobool30, label %if.else32, label %if.then31, !dbg !13771

if.then31:                                        ; preds = %if.else28
  call void @pci_realloc_get_opt(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.90, i64 0, i64 0)) #11, !dbg !13772
  br label %if.end139, !dbg !13774

if.else32:                                        ; preds = %if.else28
  %16 = load i8*, i8** %str.addr, align 8, !dbg !13775
  %call33 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.91, i64 0, i64 0)) #11, !dbg !13777
  %tobool34 = icmp ne i32 %call33, 0, !dbg !13777
  br i1 %tobool34, label %if.else36, label %if.then35, !dbg !13778

if.then35:                                        ; preds = %if.else32
  call void @pci_no_domains() #11, !dbg !13779
  br label %if.end138, !dbg !13781

if.else36:                                        ; preds = %if.else32
  %17 = load i8*, i8** %str.addr, align 8, !dbg !13782
  %call37 = call i32 @strncmp(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0), i64 5) #11, !dbg !13784
  %tobool38 = icmp ne i32 %call37, 0, !dbg !13784
  br i1 %tobool38, label %if.else40, label %if.then39, !dbg !13785

if.then39:                                        ; preds = %if.else36
  store i8 1, i8* @pcie_ari_disabled, align 1, !dbg !13786
  br label %if.end137, !dbg !13788

if.else40:                                        ; preds = %if.else36
  %18 = load i8*, i8** %str.addr, align 8, !dbg !13789
  %call41 = call i32 @strncmp(i8* %18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.93, i64 0, i64 0), i64 9) #11, !dbg !13791
  %tobool42 = icmp ne i32 %call41, 0, !dbg !13791
  br i1 %tobool42, label %if.else46, label %if.then43, !dbg !13792

if.then43:                                        ; preds = %if.else40
  %19 = load i8*, i8** %str.addr, align 8, !dbg !13793
  %add.ptr44 = getelementptr i8, i8* %19, i64 9, !dbg !13795
  %call45 = call i64 @memparse(i8* %add.ptr44, i8** %str.addr) #11, !dbg !13796
  store i64 %call45, i64* @pci_cardbus_io_size, align 8, !dbg !13797
  br label %if.end136, !dbg !13798

if.else46:                                        ; preds = %if.else40
  %20 = load i8*, i8** %str.addr, align 8, !dbg !13799
  %call47 = call i32 @strncmp(i8* %20, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i64 0, i64 0), i64 10) #11, !dbg !13801
  %tobool48 = icmp ne i32 %call47, 0, !dbg !13801
  br i1 %tobool48, label %if.else52, label %if.then49, !dbg !13802

if.then49:                                        ; preds = %if.else46
  %21 = load i8*, i8** %str.addr, align 8, !dbg !13803
  %add.ptr50 = getelementptr i8, i8* %21, i64 10, !dbg !13805
  %call51 = call i64 @memparse(i8* %add.ptr50, i8** %str.addr) #11, !dbg !13806
  store i64 %call51, i64* @pci_cardbus_mem_size, align 8, !dbg !13807
  br label %if.end135, !dbg !13808

if.else52:                                        ; preds = %if.else46
  %22 = load i8*, i8** %str.addr, align 8, !dbg !13809
  %call53 = call i32 @strncmp(i8* %22, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.95, i64 0, i64 0), i64 19) #11, !dbg !13811
  %tobool54 = icmp ne i32 %call53, 0, !dbg !13811
  br i1 %tobool54, label %if.else57, label %if.then55, !dbg !13812

if.then55:                                        ; preds = %if.else52
  %23 = load i8*, i8** %str.addr, align 8, !dbg !13813
  %add.ptr56 = getelementptr i8, i8* %23, i64 19, !dbg !13815
  store i8* %add.ptr56, i8** @resource_alignment_param, align 8, !dbg !13816
  br label %if.end134, !dbg !13817

if.else57:                                        ; preds = %if.else52
  %24 = load i8*, i8** %str.addr, align 8, !dbg !13818
  %call58 = call i32 @strncmp(i8* %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i64 0, i64 0), i64 5) #11, !dbg !13820
  %tobool59 = icmp ne i32 %call58, 0, !dbg !13820
  br i1 %tobool59, label %if.else62, label %if.then60, !dbg !13821

if.then60:                                        ; preds = %if.else57
  %25 = load i8*, i8** %str.addr, align 8, !dbg !13822
  %add.ptr61 = getelementptr i8, i8* %25, i64 5, !dbg !13824
  call void @pcie_ecrc_get_policy(i8* %add.ptr61) #11, !dbg !13825
  br label %if.end133, !dbg !13826

if.else62:                                        ; preds = %if.else57
  %26 = load i8*, i8** %str.addr, align 8, !dbg !13827
  %call63 = call i32 @strncmp(i8* %26, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.97, i64 0, i64 0), i64 9) #11, !dbg !13829
  %tobool64 = icmp ne i32 %call63, 0, !dbg !13829
  br i1 %tobool64, label %if.else68, label %if.then65, !dbg !13830

if.then65:                                        ; preds = %if.else62
  %27 = load i8*, i8** %str.addr, align 8, !dbg !13831
  %add.ptr66 = getelementptr i8, i8* %27, i64 9, !dbg !13833
  %call67 = call i64 @memparse(i8* %add.ptr66, i8** %str.addr) #11, !dbg !13834
  store i64 %call67, i64* @pci_hotplug_io_size, align 8, !dbg !13835
  br label %if.end132, !dbg !13836

if.else68:                                        ; preds = %if.else62
  %28 = load i8*, i8** %str.addr, align 8, !dbg !13837
  %call69 = call i32 @strncmp(i8* %28, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.98, i64 0, i64 0), i64 11) #11, !dbg !13839
  %tobool70 = icmp ne i32 %call69, 0, !dbg !13839
  br i1 %tobool70, label %if.else74, label %if.then71, !dbg !13840

if.then71:                                        ; preds = %if.else68
  %29 = load i8*, i8** %str.addr, align 8, !dbg !13841
  %add.ptr72 = getelementptr i8, i8* %29, i64 11, !dbg !13843
  %call73 = call i64 @memparse(i8* %add.ptr72, i8** %str.addr) #11, !dbg !13844
  store i64 %call73, i64* @pci_hotplug_mmio_size, align 8, !dbg !13845
  br label %if.end131, !dbg !13846

if.else74:                                        ; preds = %if.else68
  %30 = load i8*, i8** %str.addr, align 8, !dbg !13847
  %call75 = call i32 @strncmp(i8* %30, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.99, i64 0, i64 0), i64 15) #11, !dbg !13849
  %tobool76 = icmp ne i32 %call75, 0, !dbg !13849
  br i1 %tobool76, label %if.else80, label %if.then77, !dbg !13850

if.then77:                                        ; preds = %if.else74
  %31 = load i8*, i8** %str.addr, align 8, !dbg !13851
  %add.ptr78 = getelementptr i8, i8* %31, i64 15, !dbg !13853
  %call79 = call i64 @memparse(i8* %add.ptr78, i8** %str.addr) #11, !dbg !13854
  store i64 %call79, i64* @pci_hotplug_mmio_pref_size, align 8, !dbg !13855
  br label %if.end130, !dbg !13856

if.else80:                                        ; preds = %if.else74
  %32 = load i8*, i8** %str.addr, align 8, !dbg !13857
  %call81 = call i32 @strncmp(i8* %32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i64 0, i64 0), i64 10) #11, !dbg !13859
  %tobool82 = icmp ne i32 %call81, 0, !dbg !13859
  br i1 %tobool82, label %if.else86, label %if.then83, !dbg !13860

if.then83:                                        ; preds = %if.else80
  %33 = load i8*, i8** %str.addr, align 8, !dbg !13861
  %add.ptr84 = getelementptr i8, i8* %33, i64 10, !dbg !13863
  %call85 = call i64 @memparse(i8* %add.ptr84, i8** %str.addr) #11, !dbg !13864
  store i64 %call85, i64* @pci_hotplug_mmio_size, align 8, !dbg !13865
  %34 = load i64, i64* @pci_hotplug_mmio_size, align 8, !dbg !13866
  store i64 %34, i64* @pci_hotplug_mmio_pref_size, align 8, !dbg !13867
  br label %if.end129, !dbg !13868

if.else86:                                        ; preds = %if.else80
  %35 = load i8*, i8** %str.addr, align 8, !dbg !13869
  %call87 = call i32 @strncmp(i8* %35, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.101, i64 0, i64 0), i64 10) #11, !dbg !13871
  %tobool88 = icmp ne i32 %call87, 0, !dbg !13871
  br i1 %tobool88, label %if.else95, label %if.then89, !dbg !13872

if.then89:                                        ; preds = %if.else86
  %36 = load i8*, i8** %str.addr, align 8, !dbg !13873
  %add.ptr90 = getelementptr i8, i8* %36, i64 10, !dbg !13875
  %call91 = call i64 @simple_strtoul(i8* %add.ptr90, i8** %str.addr, i32 0) #11, !dbg !13876
  store i64 %call91, i64* @pci_hotplug_bus_size, align 8, !dbg !13877
  %37 = load i64, i64* @pci_hotplug_bus_size, align 8, !dbg !13878
  %cmp = icmp ugt i64 %37, 255, !dbg !13880
  br i1 %cmp, label %if.then93, label %if.end94, !dbg !13881

if.then93:                                        ; preds = %if.then89
  store i64 1, i64* @pci_hotplug_bus_size, align 8, !dbg !13882
  br label %if.end94, !dbg !13883

if.end94:                                         ; preds = %if.then93, %if.then89
  br label %if.end128, !dbg !13884

if.else95:                                        ; preds = %if.else86
  %38 = load i8*, i8** %str.addr, align 8, !dbg !13885
  %call96 = call i32 @strncmp(i8* %38, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.102, i64 0, i64 0), i64 17) #11, !dbg !13887
  %tobool97 = icmp ne i32 %call96, 0, !dbg !13887
  br i1 %tobool97, label %if.else99, label %if.then98, !dbg !13888

if.then98:                                        ; preds = %if.else95
  store i32 0, i32* @pcie_bus_config, align 4, !dbg !13889
  br label %if.end127, !dbg !13891

if.else99:                                        ; preds = %if.else95
  %39 = load i8*, i8** %str.addr, align 8, !dbg !13892
  %call100 = call i32 @strncmp(i8* %39, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.103, i64 0, i64 0), i64 13) #11, !dbg !13894
  %tobool101 = icmp ne i32 %call100, 0, !dbg !13894
  br i1 %tobool101, label %if.else103, label %if.then102, !dbg !13895

if.then102:                                       ; preds = %if.else99
  store i32 2, i32* @pcie_bus_config, align 4, !dbg !13896
  br label %if.end126, !dbg !13898

if.else103:                                       ; preds = %if.else99
  %40 = load i8*, i8** %str.addr, align 8, !dbg !13899
  %call104 = call i32 @strncmp(i8* %40, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.104, i64 0, i64 0), i64 13) #11, !dbg !13901
  %tobool105 = icmp ne i32 %call104, 0, !dbg !13901
  br i1 %tobool105, label %if.else107, label %if.then106, !dbg !13902

if.then106:                                       ; preds = %if.else103
  store i32 3, i32* @pcie_bus_config, align 4, !dbg !13903
  br label %if.end125, !dbg !13905

if.else107:                                       ; preds = %if.else103
  %41 = load i8*, i8** %str.addr, align 8, !dbg !13906
  %call108 = call i32 @strncmp(i8* %41, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.105, i64 0, i64 0), i64 18) #11, !dbg !13908
  %tobool109 = icmp ne i32 %call108, 0, !dbg !13908
  br i1 %tobool109, label %if.else111, label %if.then110, !dbg !13909

if.then110:                                       ; preds = %if.else107
  store i32 4, i32* @pcie_bus_config, align 4, !dbg !13910
  br label %if.end124, !dbg !13912

if.else111:                                       ; preds = %if.else107
  %42 = load i8*, i8** %str.addr, align 8, !dbg !13913
  %call112 = call i32 @strncmp(i8* %42, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i64 0, i64 0), i64 13) #11, !dbg !13915
  %tobool113 = icmp ne i32 %call112, 0, !dbg !13915
  br i1 %tobool113, label %if.else115, label %if.then114, !dbg !13916

if.then114:                                       ; preds = %if.else111
  call void @pci_add_flags(i32 64) #11, !dbg !13917
  br label %if.end123, !dbg !13919

if.else115:                                       ; preds = %if.else111
  %43 = load i8*, i8** %str.addr, align 8, !dbg !13920
  %call116 = call i32 @strncmp(i8* %43, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.107, i64 0, i64 0), i64 18) #11, !dbg !13922
  %tobool117 = icmp ne i32 %call116, 0, !dbg !13922
  br i1 %tobool117, label %if.else120, label %if.then118, !dbg !13923

if.then118:                                       ; preds = %if.else115
  %44 = load i8*, i8** %str.addr, align 8, !dbg !13924
  %add.ptr119 = getelementptr i8, i8* %44, i64 18, !dbg !13926
  store i8* %add.ptr119, i8** @disable_acs_redir_param, align 8, !dbg !13927
  br label %if.end122, !dbg !13928

if.else120:                                       ; preds = %if.else115
  %45 = load i8*, i8** %str.addr, align 8, !dbg !13929
  %call121 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.108, i64 0, i64 0), i8* %45) #12, !dbg !13929
  br label %if.end122

if.end122:                                        ; preds = %if.else120, %if.then118
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then114
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then110
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then106
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then102
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then98
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.end94
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.then83
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.then77
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then71
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then65
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then60
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.then55
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then49
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then43
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.then39
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.then35
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.then31
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.then27
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.then23
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.then19
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.then14
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.then11
  br label %if.end145, !dbg !13931

if.end145:                                        ; preds = %if.end144, %land.lhs.true5, %land.lhs.true, %if.end
  %46 = load i8*, i8** %k, align 8, !dbg !13932
  store i8* %46, i8** %str.addr, align 8, !dbg !13933
  br label %while.cond, !dbg !13705, !llvm.loop !13934

while.end:                                        ; preds = %while.cond
  ret i32 0, !dbg !13936
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_realloc_setup_params() #1 section ".init.text" !dbg !13937 {
entry:
  %0 = load i8*, i8** @resource_alignment_param, align 8, !dbg !13938
  %call = call noalias i8* @kstrdup(i8* %0, i32 3264) #11, !dbg !13939
  store i8* %call, i8** @resource_alignment_param, align 8, !dbg !13940
  %1 = load i8*, i8** @disable_acs_redir_param, align 8, !dbg !13941
  %call1 = call noalias i8* @kstrdup(i8* %1, i32 3264) #11, !dbg !13942
  store i8* %call1, i8** @disable_acs_redir_param, align 8, !dbg !13943
  ret i32 0, !dbg !13944
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__pci_find_next_cap_ttl(%struct.pci_bus* %bus, i32 %devfn, i8 zeroext %pos, i32 %cap, i32* %ttl) #0 !dbg !13945 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.pci_bus*, align 8
  %devfn.addr = alloca i32, align 4
  %pos.addr = alloca i8, align 1
  %cap.addr = alloca i32, align 4
  %ttl.addr = alloca i32*, align 8
  %id = alloca i8, align 1
  %ent = alloca i16, align 2
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !13948, metadata !DIExpression()), !dbg !13949
  store i32 %devfn, i32* %devfn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devfn.addr, metadata !13950, metadata !DIExpression()), !dbg !13951
  store i8 %pos, i8* %pos.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pos.addr, metadata !13952, metadata !DIExpression()), !dbg !13953
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !13954, metadata !DIExpression()), !dbg !13955
  store i32* %ttl, i32** %ttl.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ttl.addr, metadata !13956, metadata !DIExpression()), !dbg !13957
  call void @llvm.dbg.declare(metadata i8* %id, metadata !13958, metadata !DIExpression()), !dbg !13959
  call void @llvm.dbg.declare(metadata i16* %ent, metadata !13960, metadata !DIExpression()), !dbg !13961
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !13962
  %1 = load i32, i32* %devfn.addr, align 4, !dbg !13963
  %2 = load i8, i8* %pos.addr, align 1, !dbg !13964
  %conv = zext i8 %2 to i32, !dbg !13964
  %call = call i32 @pci_bus_read_config_byte(%struct.pci_bus* %0, i32 %1, i32 %conv, i8* %pos.addr) #11, !dbg !13965
  br label %while.cond, !dbg !13966

while.cond:                                       ; preds = %if.end20, %entry
  %3 = load i32*, i32** %ttl.addr, align 8, !dbg !13967
  %4 = load i32, i32* %3, align 4, !dbg !13968
  %dec = add i32 %4, -1, !dbg !13968
  store i32 %dec, i32* %3, align 4, !dbg !13968
  %tobool = icmp ne i32 %4, 0, !dbg !13966
  br i1 %tobool, label %while.body, label %while.end, !dbg !13966

while.body:                                       ; preds = %while.cond
  %5 = load i8, i8* %pos.addr, align 1, !dbg !13969
  %conv1 = zext i8 %5 to i32, !dbg !13969
  %cmp = icmp slt i32 %conv1, 64, !dbg !13972
  br i1 %cmp, label %if.then, label %if.end, !dbg !13973

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !13974

if.end:                                           ; preds = %while.body
  %6 = load i8, i8* %pos.addr, align 1, !dbg !13975
  %conv3 = zext i8 %6 to i32, !dbg !13975
  %and = and i32 %conv3, -4, !dbg !13975
  %conv4 = trunc i32 %and to i8, !dbg !13975
  store i8 %conv4, i8* %pos.addr, align 1, !dbg !13975
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !13976
  %8 = load i32, i32* %devfn.addr, align 4, !dbg !13977
  %9 = load i8, i8* %pos.addr, align 1, !dbg !13978
  %conv5 = zext i8 %9 to i32, !dbg !13978
  %call6 = call i32 @pci_bus_read_config_word(%struct.pci_bus* %7, i32 %8, i32 %conv5, i16* %ent) #11, !dbg !13979
  %10 = load i16, i16* %ent, align 2, !dbg !13980
  %conv7 = zext i16 %10 to i32, !dbg !13980
  %and8 = and i32 %conv7, 255, !dbg !13981
  %conv9 = trunc i32 %and8 to i8, !dbg !13980
  store i8 %conv9, i8* %id, align 1, !dbg !13982
  %11 = load i8, i8* %id, align 1, !dbg !13983
  %conv10 = zext i8 %11 to i32, !dbg !13983
  %cmp11 = icmp eq i32 %conv10, 255, !dbg !13985
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !13986

if.then13:                                        ; preds = %if.end
  br label %while.end, !dbg !13987

if.end14:                                         ; preds = %if.end
  %12 = load i8, i8* %id, align 1, !dbg !13988
  %conv15 = zext i8 %12 to i32, !dbg !13988
  %13 = load i32, i32* %cap.addr, align 4, !dbg !13990
  %cmp16 = icmp eq i32 %conv15, %13, !dbg !13991
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !13992

if.then18:                                        ; preds = %if.end14
  %14 = load i8, i8* %pos.addr, align 1, !dbg !13993
  %conv19 = zext i8 %14 to i32, !dbg !13993
  store i32 %conv19, i32* %retval, align 4, !dbg !13994
  br label %return, !dbg !13994

if.end20:                                         ; preds = %if.end14
  %15 = load i16, i16* %ent, align 2, !dbg !13995
  %conv21 = zext i16 %15 to i32, !dbg !13995
  %shr = ashr i32 %conv21, 8, !dbg !13996
  %conv22 = trunc i32 %shr to i8, !dbg !13997
  store i8 %conv22, i8* %pos.addr, align 1, !dbg !13998
  br label %while.cond, !dbg !13966, !llvm.loop !13999

while.end:                                        ; preds = %if.then13, %if.then, %while.cond
  store i32 0, i32* %retval, align 4, !dbg !14001
  br label %return, !dbg !14001

return:                                           ; preds = %while.end, %if.then18
  %16 = load i32, i32* %retval, align 4, !dbg !14002
  ret i32 %16, !dbg !14002
}

; Function Attrs: noredzone
declare dso_local i32 @pci_bus_read_config_word(%struct.pci_bus*, i32, i32, i16*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_wakeup_event(%struct.pci_dev* %dev) #0 !dbg !14003 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !14004, metadata !DIExpression()), !dbg !14005
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14006
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !14007
  call void @pm_wakeup_event(%struct.device* %dev1, i32 100) #11, !dbg !14008
  ret void, !dbg !14009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_request_resume(%struct.device* %dev) #0 !dbg !14010 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14011, metadata !DIExpression()), !dbg !14012
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14013
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 1) #11, !dbg !14014
  ret i32 %call, !dbg !14015
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_wakeup_event(%struct.device* %dev, i32 %msec) #0 !dbg !14016 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %msec.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14019, metadata !DIExpression()), !dbg !14020
  store i32 %msec, i32* %msec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %msec.addr, metadata !14021, metadata !DIExpression()), !dbg !14022
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14023
  %1 = load i32, i32* %msec.addr, align 4, !dbg !14024
  call void @pm_wakeup_dev_event(%struct.device* %0, i32 %1, i1 zeroext false) #11, !dbg !14025
  ret void, !dbg !14026
}

; Function Attrs: noredzone
declare dso_local void @pm_wakeup_dev_event(%struct.device*, i32, i1 zeroext) #3

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_resume(%struct.device*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_power_name(i32 %state) #0 !dbg !14027 {
entry:
  %state.addr = alloca i32, align 4
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !14030, metadata !DIExpression()), !dbg !14031
  %0 = load i32, i32* %state.addr, align 4, !dbg !14032
  %add = add i32 1, %0, !dbg !14033
  %idxprom = sext i32 %add to i64, !dbg !14034
  %arrayidx = getelementptr [0 x i8*], [0 x i8*]* bitcast ([7 x i8*]* @pci_power_names to [0 x i8*]*), i64 0, i64 %idxprom, !dbg !14034
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !14034
  ret i8* %1, !dbg !14035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_dev_d3_sleep(%struct.pci_dev* %dev) #0 !dbg !14036 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %delay = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !14037, metadata !DIExpression()), !dbg !14038
  call void @llvm.dbg.declare(metadata i32* %delay, metadata !14039, metadata !DIExpression()), !dbg !14040
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14041
  %d3hot_delay = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 31, !dbg !14042
  %1 = load i32, i32* %d3hot_delay, align 4, !dbg !14042
  store i32 %1, i32* %delay, align 4, !dbg !14040
  %2 = load i32, i32* %delay, align 4, !dbg !14043
  %3 = load i32, i32* @pci_pm_d3hot_delay, align 4, !dbg !14045
  %cmp = icmp ult i32 %2, %3, !dbg !14046
  br i1 %cmp, label %if.then, label %if.end, !dbg !14047

if.then:                                          ; preds = %entry
  %4 = load i32, i32* @pci_pm_d3hot_delay, align 4, !dbg !14048
  store i32 %4, i32* %delay, align 4, !dbg !14049
  br label %if.end, !dbg !14050

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %delay, align 4, !dbg !14051
  %tobool = icmp ne i32 %5, 0, !dbg !14051
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !14053

if.then1:                                         ; preds = %if.end
  %6 = load i32, i32* %delay, align 4, !dbg !14054
  call void @msleep(i32 %6) #11, !dbg !14055
  br label %if.end2, !dbg !14055

if.end2:                                          ; preds = %if.then1, %if.end
  ret void, !dbg !14056
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #3

; Function Attrs: noredzone
declare dso_local i32 @___ratelimit(%struct.ratelimit_state*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_restore_bars(%struct.pci_dev* %dev) #0 !dbg !14057 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !14058, metadata !DIExpression()), !dbg !14059
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14060, metadata !DIExpression()), !dbg !14061
  store i32 0, i32* %i, align 4, !dbg !14062
  br label %for.cond, !dbg !14064

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14065
  %cmp = icmp slt i32 %0, 13, !dbg !14067
  br i1 %cmp, label %for.body, label %for.end, !dbg !14068

for.body:                                         ; preds = %for.cond
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14069
  %2 = load i32, i32* %i, align 4, !dbg !14070
  call void @pci_update_resource(%struct.pci_dev* %1, i32 %2) #11, !dbg !14071
  br label %for.inc, !dbg !14071

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !14072
  %inc = add i32 %3, 1, !dbg !14072
  store i32 %inc, i32* %i, align 4, !dbg !14072
  br label %for.cond, !dbg !14073, !llvm.loop !14074

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14076
}

; Function Attrs: noredzone
declare dso_local void @pcie_aspm_pm_state_change(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local void @pci_update_resource(%struct.pci_dev*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #6 !dbg !14077 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !14080, metadata !DIExpression()), !dbg !14084
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !14086, metadata !DIExpression()), !dbg !14087
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14088, metadata !DIExpression()), !dbg !14089
  %0 = load i64, i64* %n.addr, align 8, !dbg !14090
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !14087
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !14091
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !14092
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !14091, !srcloc !14093
  store i32 %3, i32* %bitpos.i, align 4, !dbg !14091
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !14094
  %add.i = add i32 %4, 1, !dbg !14095
  %sub = sub i32 %add.i, 1, !dbg !14096
  ret i32 %sub, !dbg !14097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_restore_config_space_range(%struct.pci_dev* %pdev, i32 %start, i32 %end, i32 %retry, i1 zeroext %force) #0 !dbg !14098 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %retry.addr = alloca i32, align 4
  %force.addr = alloca i8, align 1
  %index = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !14101, metadata !DIExpression()), !dbg !14102
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !14103, metadata !DIExpression()), !dbg !14104
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !14105, metadata !DIExpression()), !dbg !14106
  store i32 %retry, i32* %retry.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retry.addr, metadata !14107, metadata !DIExpression()), !dbg !14108
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !14109, metadata !DIExpression()), !dbg !14110
  call void @llvm.dbg.declare(metadata i32* %index, metadata !14111, metadata !DIExpression()), !dbg !14112
  %0 = load i32, i32* %end.addr, align 4, !dbg !14113
  store i32 %0, i32* %index, align 4, !dbg !14115
  br label %for.cond, !dbg !14116

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %index, align 4, !dbg !14117
  %2 = load i32, i32* %start.addr, align 4, !dbg !14119
  %cmp = icmp sge i32 %1, %2, !dbg !14120
  br i1 %cmp, label %for.body, label %for.end, !dbg !14121

for.body:                                         ; preds = %for.cond
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !14122
  %4 = load i32, i32* %index, align 4, !dbg !14123
  %mul = mul i32 4, %4, !dbg !14124
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !14125
  %saved_config_space = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 49, !dbg !14126
  %6 = load i32, i32* %index, align 4, !dbg !14127
  %idxprom = sext i32 %6 to i64, !dbg !14125
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %saved_config_space, i64 0, i64 %idxprom, !dbg !14125
  %7 = load i32, i32* %arrayidx, align 4, !dbg !14125
  %8 = load i32, i32* %retry.addr, align 4, !dbg !14128
  %9 = load i8, i8* %force.addr, align 1, !dbg !14129
  %tobool = trunc i8 %9 to i1, !dbg !14129
  call void @pci_restore_config_dword(%struct.pci_dev* %3, i32 %mul, i32 %7, i32 %8, i1 zeroext %tobool) #11, !dbg !14130
  br label %for.inc, !dbg !14130

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %index, align 4, !dbg !14131
  %dec = add i32 %10, -1, !dbg !14131
  store i32 %dec, i32* %index, align 4, !dbg !14131
  br label %for.cond, !dbg !14132, !llvm.loop !14133

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_restore_config_dword(%struct.pci_dev* %pdev, i32 %offset, i32 %saved_val, i32 %retry, i1 zeroext %force) #0 !dbg !14136 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %offset.addr = alloca i32, align 4
  %saved_val.addr = alloca i32, align 4
  %retry.addr = alloca i32, align 4
  %force.addr = alloca i8, align 1
  %val = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !14139, metadata !DIExpression()), !dbg !14140
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !14141, metadata !DIExpression()), !dbg !14142
  store i32 %saved_val, i32* %saved_val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %saved_val.addr, metadata !14143, metadata !DIExpression()), !dbg !14144
  store i32 %retry, i32* %retry.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retry.addr, metadata !14145, metadata !DIExpression()), !dbg !14146
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !14147, metadata !DIExpression()), !dbg !14148
  call void @llvm.dbg.declare(metadata i32* %val, metadata !14149, metadata !DIExpression()), !dbg !14150
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !14151
  %1 = load i32, i32* %offset.addr, align 4, !dbg !14152
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %0, i32 %1, i32* %val) #11, !dbg !14153
  %2 = load i8, i8* %force.addr, align 1, !dbg !14154
  %tobool = trunc i8 %2 to i1, !dbg !14154
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !14156

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %val, align 4, !dbg !14157
  %4 = load i32, i32* %saved_val.addr, align 4, !dbg !14158
  %cmp = icmp eq i32 %3, %4, !dbg !14159
  br i1 %cmp, label %if.then, label %if.end, !dbg !14160

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !14161

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %for.cond, !dbg !14162

for.cond:                                         ; preds = %if.end8, %if.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !14163
  %6 = load i32, i32* %offset.addr, align 4, !dbg !14167
  %7 = load i32, i32* %saved_val.addr, align 4, !dbg !14168
  %call1 = call i32 @pci_write_config_dword(%struct.pci_dev* %5, i32 %6, i32 %7) #11, !dbg !14169
  %8 = load i32, i32* %retry.addr, align 4, !dbg !14170
  %dec = add i32 %8, -1, !dbg !14170
  store i32 %dec, i32* %retry.addr, align 4, !dbg !14170
  %cmp2 = icmp sle i32 %8, 0, !dbg !14172
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !14173

if.then3:                                         ; preds = %for.cond
  br label %return, !dbg !14174

if.end4:                                          ; preds = %for.cond
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !14175
  %10 = load i32, i32* %offset.addr, align 4, !dbg !14176
  %call5 = call i32 @pci_read_config_dword(%struct.pci_dev* %9, i32 %10, i32* %val) #11, !dbg !14177
  %11 = load i32, i32* %val, align 4, !dbg !14178
  %12 = load i32, i32* %saved_val.addr, align 4, !dbg !14180
  %cmp6 = icmp eq i32 %11, %12, !dbg !14181
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14182

if.then7:                                         ; preds = %if.end4
  br label %return, !dbg !14183

if.end8:                                          ; preds = %if.end4
  call void @__const_udelay(i64 4295000) #11, !dbg !14184
  br label %for.cond, !dbg !14189, !llvm.loop !14190

return:                                           ; preds = %if.then7, %if.then3, %if.then
  ret void, !dbg !14193
}

; Function Attrs: noredzone
declare dso_local i32 @pci_dev_specific_enable_acs(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_std_enable_acs(%struct.pci_dev* %dev) #0 !dbg !14194 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %pos = alloca i32, align 4
  %cap = alloca i16, align 2
  %ctrl = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !14195, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !14197, metadata !DIExpression()), !dbg !14198
  call void @llvm.dbg.declare(metadata i16* %cap, metadata !14199, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !14201, metadata !DIExpression()), !dbg !14202
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14203
  %acs_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 63, !dbg !14204
  %1 = load i16, i16* %acs_cap, align 4, !dbg !14204
  %conv = zext i16 %1 to i32, !dbg !14203
  store i32 %conv, i32* %pos, align 4, !dbg !14205
  %2 = load i32, i32* %pos, align 4, !dbg !14206
  %tobool = icmp ne i32 %2, 0, !dbg !14206
  br i1 %tobool, label %if.end, label %if.then, !dbg !14208

if.then:                                          ; preds = %entry
  br label %return, !dbg !14209

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14210
  %4 = load i32, i32* %pos, align 4, !dbg !14211
  %add = add i32 %4, 4, !dbg !14212
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %3, i32 %add, i16* %cap) #11, !dbg !14213
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14214
  %6 = load i32, i32* %pos, align 4, !dbg !14215
  %add1 = add i32 %6, 6, !dbg !14216
  %call2 = call i32 @pci_read_config_word(%struct.pci_dev* %5, i32 %add1, i16* %ctrl) #11, !dbg !14217
  %7 = load i16, i16* %cap, align 2, !dbg !14218
  %conv3 = zext i16 %7 to i32, !dbg !14218
  %and = and i32 %conv3, 1, !dbg !14219
  %8 = load i16, i16* %ctrl, align 2, !dbg !14220
  %conv4 = zext i16 %8 to i32, !dbg !14220
  %or = or i32 %conv4, %and, !dbg !14220
  %conv5 = trunc i32 %or to i16, !dbg !14220
  store i16 %conv5, i16* %ctrl, align 2, !dbg !14220
  %9 = load i16, i16* %cap, align 2, !dbg !14221
  %conv6 = zext i16 %9 to i32, !dbg !14221
  %and7 = and i32 %conv6, 4, !dbg !14222
  %10 = load i16, i16* %ctrl, align 2, !dbg !14223
  %conv8 = zext i16 %10 to i32, !dbg !14223
  %or9 = or i32 %conv8, %and7, !dbg !14223
  %conv10 = trunc i32 %or9 to i16, !dbg !14223
  store i16 %conv10, i16* %ctrl, align 2, !dbg !14223
  %11 = load i16, i16* %cap, align 2, !dbg !14224
  %conv11 = zext i16 %11 to i32, !dbg !14224
  %and12 = and i32 %conv11, 8, !dbg !14225
  %12 = load i16, i16* %ctrl, align 2, !dbg !14226
  %conv13 = zext i16 %12 to i32, !dbg !14226
  %or14 = or i32 %conv13, %and12, !dbg !14226
  %conv15 = trunc i32 %or14 to i16, !dbg !14226
  store i16 %conv15, i16* %ctrl, align 2, !dbg !14226
  %13 = load i16, i16* %cap, align 2, !dbg !14227
  %conv16 = zext i16 %13 to i32, !dbg !14227
  %and17 = and i32 %conv16, 16, !dbg !14228
  %14 = load i16, i16* %ctrl, align 2, !dbg !14229
  %conv18 = zext i16 %14 to i32, !dbg !14229
  %or19 = or i32 %conv18, %and17, !dbg !14229
  %conv20 = trunc i32 %or19 to i16, !dbg !14229
  store i16 %conv20, i16* %ctrl, align 2, !dbg !14229
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14230
  %external_facing = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 46, !dbg !14232
  %16 = bitcast [5 x i8]* %external_facing to i40*, !dbg !14232
  %bf.load = load i40, i40* %16, align 1, !dbg !14232
  %bf.lshr = lshr i40 %bf.load, 28, !dbg !14232
  %bf.clear = and i40 %bf.lshr, 1, !dbg !14232
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !14232
  %tobool21 = icmp ne i32 %bf.cast, 0, !dbg !14230
  br i1 %tobool21, label %if.then27, label %lor.lhs.false, !dbg !14233

lor.lhs.false:                                    ; preds = %if.end
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14234
  %untrusted = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 46, !dbg !14235
  %18 = bitcast [5 x i8]* %untrusted to i40*, !dbg !14235
  %bf.load22 = load i40, i40* %18, align 1, !dbg !14235
  %bf.lshr23 = lshr i40 %bf.load22, 27, !dbg !14235
  %bf.clear24 = and i40 %bf.lshr23, 1, !dbg !14235
  %bf.cast25 = trunc i40 %bf.clear24 to i32, !dbg !14235
  %tobool26 = icmp ne i32 %bf.cast25, 0, !dbg !14234
  br i1 %tobool26, label %if.then27, label %if.end33, !dbg !14236

if.then27:                                        ; preds = %lor.lhs.false, %if.end
  %19 = load i16, i16* %cap, align 2, !dbg !14237
  %conv28 = zext i16 %19 to i32, !dbg !14237
  %and29 = and i32 %conv28, 2, !dbg !14238
  %20 = load i16, i16* %ctrl, align 2, !dbg !14239
  %conv30 = zext i16 %20 to i32, !dbg !14239
  %or31 = or i32 %conv30, %and29, !dbg !14239
  %conv32 = trunc i32 %or31 to i16, !dbg !14239
  store i16 %conv32, i16* %ctrl, align 2, !dbg !14239
  br label %if.end33, !dbg !14240

if.end33:                                         ; preds = %if.then27, %lor.lhs.false
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14241
  %22 = load i32, i32* %pos, align 4, !dbg !14242
  %add34 = add i32 %22, 6, !dbg !14243
  %23 = load i16, i16* %ctrl, align 2, !dbg !14244
  %call35 = call i32 @pci_write_config_word(%struct.pci_dev* %21, i32 %add34, i16 zeroext %23) #11, !dbg !14245
  br label %return, !dbg !14246

return:                                           ; preds = %if.end33, %if.then
  ret void, !dbg !14246
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_disable_acs_redir(%struct.pci_dev* %dev) #0 !dbg !4819 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ret = alloca i32, align 4
  %p = alloca i8*, align 8
  %pos = alloca i32, align 4
  %ctrl = alloca i16, align 2
  %__ret_print_once = alloca i8, align 1
  %tmp = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !14247, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14249, metadata !DIExpression()), !dbg !14250
  store i32 0, i32* %ret, align 4, !dbg !14250
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14251, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !14253, metadata !DIExpression()), !dbg !14254
  call void @llvm.dbg.declare(metadata i16* %ctrl, metadata !14255, metadata !DIExpression()), !dbg !14256
  %0 = load i8*, i8** @disable_acs_redir_param, align 8, !dbg !14257
  %tobool = icmp ne i8* %0, null, !dbg !14257
  br i1 %tobool, label %if.end, label %if.then, !dbg !14259

if.then:                                          ; preds = %entry
  br label %return, !dbg !14260

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** @disable_acs_redir_param, align 8, !dbg !14261
  store i8* %1, i8** %p, align 8, !dbg !14262
  br label %while.cond, !dbg !14263

while.cond:                                       ; preds = %if.end23, %if.end
  %2 = load i8*, i8** %p, align 8, !dbg !14264
  %3 = load i8, i8* %2, align 1, !dbg !14265
  %tobool1 = icmp ne i8 %3, 0, !dbg !14263
  br i1 %tobool1, label %while.body, label %while.end, !dbg !14263

while.body:                                       ; preds = %while.cond
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14266
  %5 = load i8*, i8** %p, align 8, !dbg !14268
  %call = call i32 @pci_dev_str_match(%struct.pci_dev* %4, i8* %5, i8** %p) #11, !dbg !14269
  store i32 %call, i32* %ret, align 4, !dbg !14270
  %6 = load i32, i32* %ret, align 4, !dbg !14271
  %cmp = icmp slt i32 %6, 0, !dbg !14273
  br i1 %cmp, label %if.then2, label %if.else, !dbg !14274

if.then2:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8* %__ret_print_once, metadata !14275, metadata !DIExpression()), !dbg !14278
  %7 = load i8, i8* @pci_disable_acs_redir.__print_once, align 1, !dbg !14278
  %tobool3 = trunc i8 %7 to i1, !dbg !14278
  %lnot = xor i1 %tobool3, true, !dbg !14278
  %frombool = zext i1 %lnot to i8, !dbg !14278
  store i8 %frombool, i8* %__ret_print_once, align 1, !dbg !14278
  %8 = load i8, i8* @pci_disable_acs_redir.__print_once, align 1, !dbg !14279
  %tobool4 = trunc i8 %8 to i1, !dbg !14279
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !14278

if.then5:                                         ; preds = %if.then2
  store i8 1, i8* @pci_disable_acs_redir.__print_once, align 1, !dbg !14281
  %9 = load i8*, i8** @disable_acs_redir_param, align 8, !dbg !14281
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.48, i64 0, i64 0), i8* %9) #12, !dbg !14281
  br label %if.end7, !dbg !14281

if.end7:                                          ; preds = %if.then5, %if.then2
  %10 = load i8, i8* %__ret_print_once, align 1, !dbg !14278
  %tobool8 = trunc i8 %10 to i1, !dbg !14278
  %lnot9 = xor i1 %tobool8, true, !dbg !14278
  %lnot10 = xor i1 %lnot9, true, !dbg !14278
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !14278
  %conv = sext i32 %lnot.ext to i64, !dbg !14278
  store i64 %conv, i64* %tmp, align 8, !dbg !14279
  %11 = load i64, i64* %tmp, align 8, !dbg !14278
  br label %while.end, !dbg !14283

if.else:                                          ; preds = %while.body
  %12 = load i32, i32* %ret, align 4, !dbg !14284
  %cmp11 = icmp eq i32 %12, 1, !dbg !14286
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !14287

if.then13:                                        ; preds = %if.else
  br label %while.end, !dbg !14288

if.end14:                                         ; preds = %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14
  %13 = load i8*, i8** %p, align 8, !dbg !14290
  %14 = load i8, i8* %13, align 1, !dbg !14292
  %conv16 = sext i8 %14 to i32, !dbg !14292
  %cmp17 = icmp ne i32 %conv16, 59, !dbg !14293
  br i1 %cmp17, label %land.lhs.true, label %if.end23, !dbg !14294

land.lhs.true:                                    ; preds = %if.end15
  %15 = load i8*, i8** %p, align 8, !dbg !14295
  %16 = load i8, i8* %15, align 1, !dbg !14296
  %conv19 = sext i8 %16 to i32, !dbg !14296
  %cmp20 = icmp ne i32 %conv19, 44, !dbg !14297
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !14298

if.then22:                                        ; preds = %land.lhs.true
  br label %while.end, !dbg !14299

if.end23:                                         ; preds = %land.lhs.true, %if.end15
  %17 = load i8*, i8** %p, align 8, !dbg !14301
  %incdec.ptr = getelementptr i8, i8* %17, i32 1, !dbg !14301
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !14301
  br label %while.cond, !dbg !14263, !llvm.loop !14302

while.end:                                        ; preds = %if.then22, %if.then13, %if.end7, %while.cond
  %18 = load i32, i32* %ret, align 4, !dbg !14304
  %cmp24 = icmp ne i32 %18, 1, !dbg !14306
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !14307

if.then26:                                        ; preds = %while.end
  br label %return, !dbg !14308

if.end27:                                         ; preds = %while.end
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14309
  %call28 = call i32 @pci_dev_specific_disable_acs_redir(%struct.pci_dev* %19) #11, !dbg !14311
  %tobool29 = icmp ne i32 %call28, 0, !dbg !14311
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !14312

if.then30:                                        ; preds = %if.end27
  br label %return, !dbg !14313

if.end31:                                         ; preds = %if.end27
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14314
  %acs_cap = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 63, !dbg !14315
  %21 = load i16, i16* %acs_cap, align 4, !dbg !14315
  %conv32 = zext i16 %21 to i32, !dbg !14314
  store i32 %conv32, i32* %pos, align 4, !dbg !14316
  %22 = load i32, i32* %pos, align 4, !dbg !14317
  %tobool33 = icmp ne i32 %22, 0, !dbg !14317
  br i1 %tobool33, label %if.end36, label %if.then34, !dbg !14319

if.then34:                                        ; preds = %if.end31
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14320
  %dev35 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 41, !dbg !14320
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev35, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.49, i64 0, i64 0)) #12, !dbg !14320
  br label %return, !dbg !14322

if.end36:                                         ; preds = %if.end31
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14323
  %25 = load i32, i32* %pos, align 4, !dbg !14324
  %add = add i32 %25, 6, !dbg !14325
  %call37 = call i32 @pci_read_config_word(%struct.pci_dev* %24, i32 %add, i16* %ctrl) #11, !dbg !14326
  %26 = load i16, i16* %ctrl, align 2, !dbg !14327
  %conv38 = zext i16 %26 to i32, !dbg !14327
  %and = and i32 %conv38, -45, !dbg !14327
  %conv39 = trunc i32 %and to i16, !dbg !14327
  store i16 %conv39, i16* %ctrl, align 2, !dbg !14327
  %27 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14328
  %28 = load i32, i32* %pos, align 4, !dbg !14329
  %add40 = add i32 %28, 6, !dbg !14330
  %29 = load i16, i16* %ctrl, align 2, !dbg !14331
  %call41 = call i32 @pci_write_config_word(%struct.pci_dev* %27, i32 %add40, i16 zeroext %29) #11, !dbg !14332
  %30 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14333
  %dev42 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 41, !dbg !14333
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev42, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.50, i64 0, i64 0)) #12, !dbg !14333
  br label %return, !dbg !14334

return:                                           ; preds = %if.end36, %if.then34, %if.then30, %if.then26, %if.then
  ret void, !dbg !14334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_dev_str_match(%struct.pci_dev* %dev, i8* %p, i8** %endptr) #0 !dbg !14335 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %p.addr = alloca i8*, align 8
  %endptr.addr = alloca i8**, align 8
  %ret = alloca i32, align 4
  %count = alloca i32, align 4
  %vendor = alloca i16, align 2
  %device = alloca i16, align 2
  %subsystem_vendor = alloca i16, align 2
  %subsystem_device = alloca i16, align 2
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !14338, metadata !DIExpression()), !dbg !14339
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14340, metadata !DIExpression()), !dbg !14341
  store i8** %endptr, i8*** %endptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %endptr.addr, metadata !14342, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14344, metadata !DIExpression()), !dbg !14345
  call void @llvm.dbg.declare(metadata i32* %count, metadata !14346, metadata !DIExpression()), !dbg !14347
  call void @llvm.dbg.declare(metadata i16* %vendor, metadata !14348, metadata !DIExpression()), !dbg !14349
  call void @llvm.dbg.declare(metadata i16* %device, metadata !14350, metadata !DIExpression()), !dbg !14351
  call void @llvm.dbg.declare(metadata i16* %subsystem_vendor, metadata !14352, metadata !DIExpression()), !dbg !14353
  call void @llvm.dbg.declare(metadata i16* %subsystem_device, metadata !14354, metadata !DIExpression()), !dbg !14355
  %0 = load i8*, i8** %p.addr, align 8, !dbg !14356
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0), i64 4) #11, !dbg !14358
  %cmp = icmp eq i32 %call, 0, !dbg !14359
  br i1 %cmp, label %if.then, label %if.else, !dbg !14360

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !14361
  %add.ptr = getelementptr i8, i8* %1, i64 4, !dbg !14361
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !14361
  %2 = load i8*, i8** %p.addr, align 8, !dbg !14363
  %call1 = call i32 (i8*, i8*, ...) @sscanf(i8* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0), i16* %vendor, i16* %device, i16* %subsystem_vendor, i16* %subsystem_device, i32* %count) #11, !dbg !14364
  store i32 %call1, i32* %ret, align 4, !dbg !14365
  %3 = load i32, i32* %ret, align 4, !dbg !14366
  %cmp2 = icmp ne i32 %3, 4, !dbg !14368
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !14369

if.then3:                                         ; preds = %if.then
  %4 = load i8*, i8** %p.addr, align 8, !dbg !14370
  %call4 = call i32 (i8*, i8*, ...) @sscanf(i8* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i64 0, i64 0), i16* %vendor, i16* %device, i32* %count) #11, !dbg !14372
  store i32 %call4, i32* %ret, align 4, !dbg !14373
  %5 = load i32, i32* %ret, align 4, !dbg !14374
  %cmp5 = icmp ne i32 %5, 2, !dbg !14376
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !14377

if.then6:                                         ; preds = %if.then3
  store i32 -22, i32* %retval, align 4, !dbg !14378
  br label %return, !dbg !14378

if.end:                                           ; preds = %if.then3
  store i16 0, i16* %subsystem_vendor, align 2, !dbg !14379
  store i16 0, i16* %subsystem_device, align 2, !dbg !14380
  br label %if.end7, !dbg !14381

if.end7:                                          ; preds = %if.end, %if.then
  %6 = load i32, i32* %count, align 4, !dbg !14382
  %7 = load i8*, i8** %p.addr, align 8, !dbg !14383
  %idx.ext = sext i32 %6 to i64, !dbg !14383
  %add.ptr8 = getelementptr i8, i8* %7, i64 %idx.ext, !dbg !14383
  store i8* %add.ptr8, i8** %p.addr, align 8, !dbg !14383
  %8 = load i16, i16* %vendor, align 2, !dbg !14384
  %tobool = icmp ne i16 %8, 0, !dbg !14384
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !14386

lor.lhs.false:                                    ; preds = %if.end7
  %9 = load i16, i16* %vendor, align 2, !dbg !14387
  %conv = zext i16 %9 to i32, !dbg !14387
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14388
  %vendor9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 7, !dbg !14389
  %11 = load i16, i16* %vendor9, align 4, !dbg !14389
  %conv10 = zext i16 %11 to i32, !dbg !14388
  %cmp11 = icmp eq i32 %conv, %conv10, !dbg !14390
  br i1 %cmp11, label %land.lhs.true, label %if.end37, !dbg !14391

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end7
  %12 = load i16, i16* %device, align 2, !dbg !14392
  %tobool13 = icmp ne i16 %12, 0, !dbg !14392
  br i1 %tobool13, label %lor.lhs.false14, label %land.lhs.true20, !dbg !14393

lor.lhs.false14:                                  ; preds = %land.lhs.true
  %13 = load i16, i16* %device, align 2, !dbg !14394
  %conv15 = zext i16 %13 to i32, !dbg !14394
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14395
  %device16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 8, !dbg !14396
  %15 = load i16, i16* %device16, align 2, !dbg !14396
  %conv17 = zext i16 %15 to i32, !dbg !14395
  %cmp18 = icmp eq i32 %conv15, %conv17, !dbg !14397
  br i1 %cmp18, label %land.lhs.true20, label %if.end37, !dbg !14398

land.lhs.true20:                                  ; preds = %lor.lhs.false14, %land.lhs.true
  %16 = load i16, i16* %subsystem_vendor, align 2, !dbg !14399
  %tobool21 = icmp ne i16 %16, 0, !dbg !14399
  br i1 %tobool21, label %lor.lhs.false22, label %land.lhs.true28, !dbg !14400

lor.lhs.false22:                                  ; preds = %land.lhs.true20
  %17 = load i16, i16* %subsystem_vendor, align 2, !dbg !14401
  %conv23 = zext i16 %17 to i32, !dbg !14401
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14402
  %subsystem_vendor24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 9, !dbg !14403
  %19 = load i16, i16* %subsystem_vendor24, align 8, !dbg !14403
  %conv25 = zext i16 %19 to i32, !dbg !14402
  %cmp26 = icmp eq i32 %conv23, %conv25, !dbg !14404
  br i1 %cmp26, label %land.lhs.true28, label %if.end37, !dbg !14405

land.lhs.true28:                                  ; preds = %lor.lhs.false22, %land.lhs.true20
  %20 = load i16, i16* %subsystem_device, align 2, !dbg !14406
  %tobool29 = icmp ne i16 %20, 0, !dbg !14406
  br i1 %tobool29, label %lor.lhs.false30, label %if.then36, !dbg !14407

lor.lhs.false30:                                  ; preds = %land.lhs.true28
  %21 = load i16, i16* %subsystem_device, align 2, !dbg !14408
  %conv31 = zext i16 %21 to i32, !dbg !14408
  %22 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14409
  %subsystem_device32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 10, !dbg !14410
  %23 = load i16, i16* %subsystem_device32, align 2, !dbg !14410
  %conv33 = zext i16 %23 to i32, !dbg !14409
  %cmp34 = icmp eq i32 %conv31, %conv33, !dbg !14411
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !14412

if.then36:                                        ; preds = %lor.lhs.false30, %land.lhs.true28
  br label %found, !dbg !14413

if.end37:                                         ; preds = %lor.lhs.false30, %lor.lhs.false22, %lor.lhs.false14, %lor.lhs.false
  br label %if.end47, !dbg !14414

if.else:                                          ; preds = %entry
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14415
  %25 = load i8*, i8** %p.addr, align 8, !dbg !14417
  %call38 = call i32 @pci_dev_str_match_path(%struct.pci_dev* %24, i8* %25, i8** %p.addr) #11, !dbg !14418
  store i32 %call38, i32* %ret, align 4, !dbg !14419
  %26 = load i32, i32* %ret, align 4, !dbg !14420
  %cmp39 = icmp slt i32 %26, 0, !dbg !14422
  br i1 %cmp39, label %if.then41, label %if.else42, !dbg !14423

if.then41:                                        ; preds = %if.else
  %27 = load i32, i32* %ret, align 4, !dbg !14424
  store i32 %27, i32* %retval, align 4, !dbg !14425
  br label %return, !dbg !14425

if.else42:                                        ; preds = %if.else
  %28 = load i32, i32* %ret, align 4, !dbg !14426
  %tobool43 = icmp ne i32 %28, 0, !dbg !14426
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !14428

if.then44:                                        ; preds = %if.else42
  br label %found, !dbg !14429

if.end45:                                         ; preds = %if.else42
  br label %if.end46

if.end46:                                         ; preds = %if.end45
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.end37
  %29 = load i8*, i8** %p.addr, align 8, !dbg !14430
  %30 = load i8**, i8*** %endptr.addr, align 8, !dbg !14431
  store i8* %29, i8** %30, align 8, !dbg !14432
  store i32 0, i32* %retval, align 4, !dbg !14433
  br label %return, !dbg !14433

found:                                            ; preds = %if.then44, %if.then36
  call void @llvm.dbg.label(metadata !14434), !dbg !14435
  %31 = load i8*, i8** %p.addr, align 8, !dbg !14436
  %32 = load i8**, i8*** %endptr.addr, align 8, !dbg !14437
  store i8* %31, i8** %32, align 8, !dbg !14438
  store i32 1, i32* %retval, align 4, !dbg !14439
  br label %return, !dbg !14439

return:                                           ; preds = %found, %if.end47, %if.then41, %if.then6
  %33 = load i32, i32* %retval, align 4, !dbg !14440
  ret i32 %33, !dbg !14440
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @pci_dev_specific_disable_acs_redir(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: noredzone
declare dso_local i32 @sscanf(i8*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_dev_str_match_path(%struct.pci_dev* %dev, i8* %path, i8** %endptr) #0 !dbg !14441 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %path.addr = alloca i8*, align 8
  %endptr.addr = alloca i8**, align 8
  %ret = alloca i32, align 4
  %seg = alloca i32, align 4
  %bus = alloca i32, align 4
  %slot = alloca i32, align 4
  %func = alloca i32, align 4
  %wpath = alloca i8*, align 8
  %p = alloca i8*, align 8
  %end = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !14442, metadata !DIExpression()), !dbg !14443
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !14444, metadata !DIExpression()), !dbg !14445
  store i8** %endptr, i8*** %endptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %endptr.addr, metadata !14446, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14448, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.declare(metadata i32* %seg, metadata !14450, metadata !DIExpression()), !dbg !14451
  call void @llvm.dbg.declare(metadata i32* %bus, metadata !14452, metadata !DIExpression()), !dbg !14453
  call void @llvm.dbg.declare(metadata i32* %slot, metadata !14454, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.declare(metadata i32* %func, metadata !14456, metadata !DIExpression()), !dbg !14457
  call void @llvm.dbg.declare(metadata i8** %wpath, metadata !14458, metadata !DIExpression()), !dbg !14459
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14460, metadata !DIExpression()), !dbg !14461
  call void @llvm.dbg.declare(metadata i8* %end, metadata !14462, metadata !DIExpression()), !dbg !14463
  %0 = load i8*, i8** %path.addr, align 8, !dbg !14464
  %call = call i8* @strchrnul(i8* %0, i32 59) #11, !dbg !14465
  %1 = load i8**, i8*** %endptr.addr, align 8, !dbg !14466
  store i8* %call, i8** %1, align 8, !dbg !14467
  %2 = load i8*, i8** %path.addr, align 8, !dbg !14468
  %3 = load i8**, i8*** %endptr.addr, align 8, !dbg !14469
  %4 = load i8*, i8** %3, align 8, !dbg !14470
  %5 = load i8*, i8** %path.addr, align 8, !dbg !14471
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !14472
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !14472
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14472
  %call1 = call i8* @kmemdup_nul(i8* %2, i64 %sub.ptr.sub, i32 3264) #11, !dbg !14473
  store i8* %call1, i8** %wpath, align 8, !dbg !14474
  %6 = load i8*, i8** %wpath, align 8, !dbg !14475
  %tobool = icmp ne i8* %6, null, !dbg !14475
  br i1 %tobool, label %if.end, label %if.then, !dbg !14477

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !14478
  br label %return, !dbg !14478

if.end:                                           ; preds = %entry
  br label %while.body, !dbg !14479

while.body:                                       ; preds = %if.end, %if.end16
  %7 = load i8*, i8** %wpath, align 8, !dbg !14480
  %call2 = call i8* @strrchr(i8* %7, i32 47) #11, !dbg !14482
  store i8* %call2, i8** %p, align 8, !dbg !14483
  %8 = load i8*, i8** %p, align 8, !dbg !14484
  %tobool3 = icmp ne i8* %8, null, !dbg !14484
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !14486

if.then4:                                         ; preds = %while.body
  br label %while.end, !dbg !14487

if.end5:                                          ; preds = %while.body
  %9 = load i8*, i8** %p, align 8, !dbg !14488
  %call6 = call i32 (i8*, i8*, ...) @sscanf(i8* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i64 0, i64 0), i32* %slot, i32* %func, i8* %end) #11, !dbg !14489
  store i32 %call6, i32* %ret, align 4, !dbg !14490
  %10 = load i32, i32* %ret, align 4, !dbg !14491
  %cmp = icmp ne i32 %10, 2, !dbg !14493
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !14494

if.then7:                                         ; preds = %if.end5
  store i32 -22, i32* %ret, align 4, !dbg !14495
  br label %free_and_exit, !dbg !14497

if.end8:                                          ; preds = %if.end5
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14498
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 6, !dbg !14500
  %12 = load i32, i32* %devfn, align 8, !dbg !14500
  %13 = load i32, i32* %slot, align 4, !dbg !14501
  %and = and i32 %13, 31, !dbg !14501
  %shl = shl i32 %and, 3, !dbg !14501
  %14 = load i32, i32* %func, align 4, !dbg !14501
  %and9 = and i32 %14, 7, !dbg !14501
  %or = or i32 %shl, %and9, !dbg !14501
  %cmp10 = icmp ne i32 %12, %or, !dbg !14502
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !14503

if.then11:                                        ; preds = %if.end8
  store i32 0, i32* %ret, align 4, !dbg !14504
  br label %free_and_exit, !dbg !14506

if.end12:                                         ; preds = %if.end8
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14507
  %call13 = call %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %15) #11, !dbg !14508
  store %struct.pci_dev* %call13, %struct.pci_dev** %dev.addr, align 8, !dbg !14509
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14510
  %tobool14 = icmp ne %struct.pci_dev* %16, null, !dbg !14510
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !14512

if.then15:                                        ; preds = %if.end12
  store i32 0, i32* %ret, align 4, !dbg !14513
  br label %free_and_exit, !dbg !14515

if.end16:                                         ; preds = %if.end12
  %17 = load i8*, i8** %p, align 8, !dbg !14516
  store i8 0, i8* %17, align 1, !dbg !14517
  br label %while.body, !dbg !14479, !llvm.loop !14518

while.end:                                        ; preds = %if.then4
  %18 = load i8*, i8** %wpath, align 8, !dbg !14520
  %call17 = call i32 (i8*, i8*, ...) @sscanf(i8* %18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.55, i64 0, i64 0), i32* %seg, i32* %bus, i32* %slot, i32* %func, i8* %end) #11, !dbg !14521
  store i32 %call17, i32* %ret, align 4, !dbg !14522
  %19 = load i32, i32* %ret, align 4, !dbg !14523
  %cmp18 = icmp ne i32 %19, 4, !dbg !14525
  br i1 %cmp18, label %if.then19, label %if.end24, !dbg !14526

if.then19:                                        ; preds = %while.end
  store i32 0, i32* %seg, align 4, !dbg !14527
  %20 = load i8*, i8** %wpath, align 8, !dbg !14529
  %call20 = call i32 (i8*, i8*, ...) @sscanf(i8* %20, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i64 0, i64 0), i32* %bus, i32* %slot, i32* %func, i8* %end) #11, !dbg !14530
  store i32 %call20, i32* %ret, align 4, !dbg !14531
  %21 = load i32, i32* %ret, align 4, !dbg !14532
  %cmp21 = icmp ne i32 %21, 3, !dbg !14534
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !14535

if.then22:                                        ; preds = %if.then19
  store i32 -22, i32* %ret, align 4, !dbg !14536
  br label %free_and_exit, !dbg !14538

if.end23:                                         ; preds = %if.then19
  br label %if.end24, !dbg !14539

if.end24:                                         ; preds = %if.end23, %while.end
  %22 = load i32, i32* %seg, align 4, !dbg !14540
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14541
  %bus25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 1, !dbg !14542
  %24 = load %struct.pci_bus*, %struct.pci_bus** %bus25, align 8, !dbg !14542
  %call26 = call i32 @pci_domain_nr(%struct.pci_bus* %24) #11, !dbg !14543
  %cmp27 = icmp eq i32 %22, %call26, !dbg !14544
  br i1 %cmp27, label %land.lhs.true, label %land.end, !dbg !14545

land.lhs.true:                                    ; preds = %if.end24
  %25 = load i32, i32* %bus, align 4, !dbg !14546
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14547
  %bus28 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 1, !dbg !14548
  %27 = load %struct.pci_bus*, %struct.pci_bus** %bus28, align 8, !dbg !14548
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %27, i32 0, i32 13, !dbg !14549
  %28 = load i8, i8* %number, align 8, !dbg !14549
  %conv = zext i8 %28 to i32, !dbg !14547
  %cmp29 = icmp eq i32 %25, %conv, !dbg !14550
  br i1 %cmp29, label %land.rhs, label %land.end, !dbg !14551

land.rhs:                                         ; preds = %land.lhs.true
  %29 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14552
  %devfn31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 6, !dbg !14553
  %30 = load i32, i32* %devfn31, align 8, !dbg !14553
  %31 = load i32, i32* %slot, align 4, !dbg !14554
  %and32 = and i32 %31, 31, !dbg !14554
  %shl33 = shl i32 %and32, 3, !dbg !14554
  %32 = load i32, i32* %func, align 4, !dbg !14554
  %and34 = and i32 %32, 7, !dbg !14554
  %or35 = or i32 %shl33, %and34, !dbg !14554
  %cmp36 = icmp eq i32 %30, %or35, !dbg !14555
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %if.end24
  %33 = phi i1 [ false, %land.lhs.true ], [ false, %if.end24 ], [ %cmp36, %land.rhs ], !dbg !14556
  %land.ext = zext i1 %33 to i32, !dbg !14551
  store i32 %land.ext, i32* %ret, align 4, !dbg !14557
  br label %free_and_exit, !dbg !14558

free_and_exit:                                    ; preds = %land.end, %if.then22, %if.then15, %if.then11, %if.then7
  call void @llvm.dbg.label(metadata !14559), !dbg !14560
  %34 = load i8*, i8** %wpath, align 8, !dbg !14561
  call void @kfree(i8* %34) #11, !dbg !14562
  %35 = load i32, i32* %ret, align 4, !dbg !14563
  store i32 %35, i32* %retval, align 4, !dbg !14564
  br label %return, !dbg !14564

return:                                           ; preds = %free_and_exit, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !14565
  ret i32 %36, !dbg !14565
}

; Function Attrs: noredzone
declare dso_local i8* @strchrnul(i8*, i32) #3

; Function Attrs: noredzone
declare dso_local i8* @kmemdup_nul(i8*, i64, i32) #3

; Function Attrs: noredzone
declare dso_local i8* @strrchr(i8*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_domain_nr(%struct.pci_bus* %bus) #0 !dbg !14566 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !14568, metadata !DIExpression()), !dbg !14569
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !14570
  %call = call %struct.pci_sysdata* @to_pci_sysdata(%struct.pci_bus* %0) #11, !dbg !14571
  %domain = getelementptr inbounds %struct.pci_sysdata, %struct.pci_sysdata* %call, i32 0, i32 0, !dbg !14572
  %1 = load i32, i32* %domain, align 8, !dbg !14572
  ret i32 %1, !dbg !14573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_sysdata* @to_pci_sysdata(%struct.pci_bus* %bus) #0 !dbg !14574 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !14586, metadata !DIExpression()), !dbg !14587
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !14588
  %sysdata = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 11, !dbg !14589
  %1 = load i8*, i8** %sysdata, align 8, !dbg !14589
  %2 = bitcast i8* %1 to %struct.pci_sysdata*, !dbg !14588
  ret %struct.pci_sysdata* %2, !dbg !14590
}

; Function Attrs: noredzone
declare dso_local void @pcie_aspm_powersave_config_link(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local void @pci_fixup_device(i32, %struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_enable_bridge(%struct.pci_dev* %dev) #0 !dbg !14591 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %retval = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !14592, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !14594, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.declare(metadata i32* %retval, metadata !14596, metadata !DIExpression()), !dbg !14597
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14598
  %call = call %struct.pci_dev* @pci_upstream_bridge(%struct.pci_dev* %0) #11, !dbg !14599
  store %struct.pci_dev* %call, %struct.pci_dev** %bridge, align 8, !dbg !14600
  %1 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !14601
  %tobool = icmp ne %struct.pci_dev* %1, null, !dbg !14601
  br i1 %tobool, label %if.then, label %if.end, !dbg !14603

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !14604
  call void @pci_enable_bridge(%struct.pci_dev* %2) #11, !dbg !14605
  br label %if.end, !dbg !14605

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14606
  %call1 = call i32 @pci_is_enabled(%struct.pci_dev* %3) #11, !dbg !14608
  %tobool2 = icmp ne i32 %call1, 0, !dbg !14608
  br i1 %tobool2, label %if.then3, label %if.end7, !dbg !14609

if.then3:                                         ; preds = %if.end
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14610
  %is_busmaster = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 46, !dbg !14613
  %5 = bitcast [5 x i8]* %is_busmaster to i40*, !dbg !14613
  %bf.load = load i40, i40* %5, align 1, !dbg !14613
  %bf.lshr = lshr i40 %bf.load, 5, !dbg !14613
  %bf.clear = and i40 %bf.lshr, 1, !dbg !14613
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !14613
  %tobool4 = icmp ne i32 %bf.cast, 0, !dbg !14610
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !14614

if.then5:                                         ; preds = %if.then3
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14615
  call void @pci_set_master(%struct.pci_dev* %6) #11, !dbg !14616
  br label %if.end6, !dbg !14616

if.end6:                                          ; preds = %if.then5, %if.then3
  br label %return, !dbg !14617

if.end7:                                          ; preds = %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14618
  %call8 = call i32 @pci_enable_device(%struct.pci_dev* %7) #11, !dbg !14619
  store i32 %call8, i32* %retval, align 4, !dbg !14620
  %8 = load i32, i32* %retval, align 4, !dbg !14621
  %tobool9 = icmp ne i32 %8, 0, !dbg !14621
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !14623

if.then10:                                        ; preds = %if.end7
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14624
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !14624
  %10 = load i32, i32* %retval, align 4, !dbg !14624
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev11, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.57, i64 0, i64 0), i32 %10) #12, !dbg !14624
  br label %if.end12, !dbg !14624

if.end12:                                         ; preds = %if.then10, %if.end7
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14625
  call void @pci_set_master(%struct.pci_dev* %11) #11, !dbg !14626
  br label %return, !dbg !14627

return:                                           ; preds = %if.end12, %if.end6
  ret void, !dbg !14627
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !14628 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14632, metadata !DIExpression()), !dbg !14633
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14634, metadata !DIExpression()), !dbg !14635
  ret i1 true, !dbg !14636
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !14637 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14641, metadata !DIExpression()), !dbg !14642
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14643, metadata !DIExpression()), !dbg !14644
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14645, metadata !DIExpression()), !dbg !14646
  ret void, !dbg !14647
}

; Function Attrs: noredzone
declare dso_local i8* @devres_find(%struct.device*, void (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcim_release(%struct.device* %gendev, i8* %res) #0 !dbg !14648 {
entry:
  %gendev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %this = alloca %struct.pci_devres*, align 8
  %i = alloca i32, align 4
  store %struct.device* %gendev, %struct.device** %gendev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %gendev.addr, metadata !14649, metadata !DIExpression()), !dbg !14650
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !14651, metadata !DIExpression()), !dbg !14652
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !14653, metadata !DIExpression()), !dbg !14654
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14655, metadata !DIExpression()), !dbg !14657
  %0 = load %struct.device*, %struct.device** %gendev.addr, align 8, !dbg !14657
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14657
  store i8* %1, i8** %__mptr, align 8, !dbg !14657
  br label %do.body, !dbg !14657

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14658

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14657
  %add.ptr = getelementptr i8, i8* %2, i64 -176, !dbg !14657
  %3 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !14657
  store %struct.pci_dev* %3, %struct.pci_dev** %tmp, align 8, !dbg !14658
  %4 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !14657
  store %struct.pci_dev* %4, %struct.pci_dev** %dev, align 8, !dbg !14654
  call void @llvm.dbg.declare(metadata %struct.pci_devres** %this, metadata !14660, metadata !DIExpression()), !dbg !14661
  %5 = load i8*, i8** %res.addr, align 8, !dbg !14662
  %6 = bitcast i8* %5 to %struct.pci_devres*, !dbg !14662
  store %struct.pci_devres* %6, %struct.pci_devres** %this, align 8, !dbg !14661
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14663, metadata !DIExpression()), !dbg !14664
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !14665
  %msi_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 46, !dbg !14667
  %8 = bitcast [5 x i8]* %msi_enabled to i40*, !dbg !14667
  %bf.load = load i40, i40* %8, align 1, !dbg !14667
  %bf.lshr = lshr i40 %bf.load, 12, !dbg !14667
  %bf.clear = and i40 %bf.lshr, 1, !dbg !14667
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !14667
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !14665
  br i1 %tobool, label %if.then, label %if.end, !dbg !14668

if.then:                                          ; preds = %do.end
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !14669
  call void @pci_disable_msi(%struct.pci_dev* %9) #11, !dbg !14670
  br label %if.end, !dbg !14670

if.end:                                           ; preds = %if.then, %do.end
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !14671
  %msix_enabled = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 46, !dbg !14673
  %11 = bitcast [5 x i8]* %msix_enabled to i40*, !dbg !14673
  %bf.load1 = load i40, i40* %11, align 1, !dbg !14673
  %bf.lshr2 = lshr i40 %bf.load1, 13, !dbg !14673
  %bf.clear3 = and i40 %bf.lshr2, 1, !dbg !14673
  %bf.cast4 = trunc i40 %bf.clear3 to i32, !dbg !14673
  %tobool5 = icmp ne i32 %bf.cast4, 0, !dbg !14671
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !14674

if.then6:                                         ; preds = %if.end
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !14675
  call void @pci_disable_msix(%struct.pci_dev* %12) #11, !dbg !14676
  br label %if.end7, !dbg !14676

if.end7:                                          ; preds = %if.then6, %if.end
  store i32 0, i32* %i, align 4, !dbg !14677
  br label %for.cond, !dbg !14679

for.cond:                                         ; preds = %for.inc, %if.end7
  %13 = load i32, i32* %i, align 4, !dbg !14680
  %cmp = icmp slt i32 %13, 17, !dbg !14682
  br i1 %cmp, label %for.body, label %for.end, !dbg !14683

for.body:                                         ; preds = %for.cond
  %14 = load %struct.pci_devres*, %struct.pci_devres** %this, align 8, !dbg !14684
  %region_mask = getelementptr inbounds %struct.pci_devres, %struct.pci_devres* %14, i32 0, i32 1, !dbg !14686
  %15 = load i32, i32* %region_mask, align 4, !dbg !14686
  %16 = load i32, i32* %i, align 4, !dbg !14687
  %shl = shl i32 1, %16, !dbg !14688
  %and = and i32 %15, %shl, !dbg !14689
  %tobool8 = icmp ne i32 %and, 0, !dbg !14689
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !14690

if.then9:                                         ; preds = %for.body
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !14691
  %18 = load i32, i32* %i, align 4, !dbg !14692
  call void @pci_release_region(%struct.pci_dev* %17, i32 %18) #11, !dbg !14693
  br label %if.end10, !dbg !14693

if.end10:                                         ; preds = %if.then9, %for.body
  br label %for.inc, !dbg !14694

for.inc:                                          ; preds = %if.end10
  %19 = load i32, i32* %i, align 4, !dbg !14695
  %inc = add i32 %19, 1, !dbg !14695
  store i32 %inc, i32* %i, align 4, !dbg !14695
  br label %for.cond, !dbg !14696, !llvm.loop !14697

for.end:                                          ; preds = %for.cond
  %20 = load %struct.pci_devres*, %struct.pci_devres** %this, align 8, !dbg !14699
  %21 = bitcast %struct.pci_devres* %20 to i8*, !dbg !14701
  %bf.load11 = load i8, i8* %21, align 4, !dbg !14701
  %bf.lshr12 = lshr i8 %bf.load11, 4, !dbg !14701
  %bf.clear13 = and i8 %bf.lshr12, 1, !dbg !14701
  %bf.cast14 = zext i8 %bf.clear13 to i32, !dbg !14701
  %tobool15 = icmp ne i32 %bf.cast14, 0, !dbg !14699
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !14702

if.then16:                                        ; preds = %for.end
  %22 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !14703
  call void @pci_clear_mwi(%struct.pci_dev* %22) #11, !dbg !14704
  br label %if.end17, !dbg !14704

if.end17:                                         ; preds = %if.then16, %for.end
  %23 = load %struct.pci_devres*, %struct.pci_devres** %this, align 8, !dbg !14705
  %24 = bitcast %struct.pci_devres* %23 to i8*, !dbg !14707
  %bf.load18 = load i8, i8* %24, align 4, !dbg !14707
  %bf.lshr19 = lshr i8 %bf.load18, 3, !dbg !14707
  %bf.clear20 = and i8 %bf.lshr19, 1, !dbg !14707
  %bf.cast21 = zext i8 %bf.clear20 to i32, !dbg !14707
  %tobool22 = icmp ne i32 %bf.cast21, 0, !dbg !14705
  br i1 %tobool22, label %if.then23, label %if.end28, !dbg !14708

if.then23:                                        ; preds = %if.end17
  %25 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !14709
  %26 = load %struct.pci_devres*, %struct.pci_devres** %this, align 8, !dbg !14710
  %27 = bitcast %struct.pci_devres* %26 to i8*, !dbg !14711
  %bf.load24 = load i8, i8* %27, align 4, !dbg !14711
  %bf.lshr25 = lshr i8 %bf.load24, 2, !dbg !14711
  %bf.clear26 = and i8 %bf.lshr25, 1, !dbg !14711
  %bf.cast27 = zext i8 %bf.clear26 to i32, !dbg !14711
  call void @pci_intx(%struct.pci_dev* %25, i32 %bf.cast27) #11, !dbg !14712
  br label %if.end28, !dbg !14712

if.end28:                                         ; preds = %if.then23, %if.end17
  %28 = load %struct.pci_devres*, %struct.pci_devres** %this, align 8, !dbg !14713
  %29 = bitcast %struct.pci_devres* %28 to i8*, !dbg !14715
  %bf.load29 = load i8, i8* %29, align 4, !dbg !14715
  %bf.clear30 = and i8 %bf.load29, 1, !dbg !14715
  %bf.cast31 = zext i8 %bf.clear30 to i32, !dbg !14715
  %tobool32 = icmp ne i32 %bf.cast31, 0, !dbg !14713
  br i1 %tobool32, label %land.lhs.true, label %if.end39, !dbg !14716

land.lhs.true:                                    ; preds = %if.end28
  %30 = load %struct.pci_devres*, %struct.pci_devres** %this, align 8, !dbg !14717
  %31 = bitcast %struct.pci_devres* %30 to i8*, !dbg !14718
  %bf.load33 = load i8, i8* %31, align 4, !dbg !14718
  %bf.lshr34 = lshr i8 %bf.load33, 1, !dbg !14718
  %bf.clear35 = and i8 %bf.lshr34, 1, !dbg !14718
  %bf.cast36 = zext i8 %bf.clear35 to i32, !dbg !14718
  %tobool37 = icmp ne i32 %bf.cast36, 0, !dbg !14717
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !14719

if.then38:                                        ; preds = %land.lhs.true
  %32 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !14720
  call void @pci_disable_device(%struct.pci_dev* %32) #11, !dbg !14721
  br label %if.end39, !dbg !14721

if.end39:                                         ; preds = %if.then38, %land.lhs.true, %if.end28
  ret void, !dbg !14722
}

; Function Attrs: noredzone
declare dso_local i8* @devres_get(%struct.device*, i8*, i32 (%struct.device*, i8*, i8*)*, i8*) #3

; Function Attrs: noredzone
declare dso_local void @pci_disable_msi(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local void @pci_disable_msix(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_is_managed(%struct.pci_dev* %pdev) #0 !dbg !14723 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !14724, metadata !DIExpression()), !dbg !14725
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !14726
  %is_managed = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !14727
  %1 = bitcast [5 x i8]* %is_managed to i40*, !dbg !14727
  %bf.load = load i40, i40* %1, align 1, !dbg !14727
  %bf.lshr = lshr i40 %bf.load, 18, !dbg !14727
  %bf.clear = and i40 %bf.lshr, 1, !dbg !14727
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !14727
  ret i32 %bf.cast, !dbg !14728
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !14729 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14730, metadata !DIExpression()), !dbg !14731
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14732, metadata !DIExpression()), !dbg !14733
  ret i1 true, !dbg !14734
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !14735 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !14740, metadata !DIExpression()), !dbg !14741
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !14742
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !14743
  %1 = load i8*, i8** %name, align 8, !dbg !14743
  ret i8* %1, !dbg !14744
}

; Function Attrs: noredzone
declare dso_local i32 @pcie_capability_clear_and_set_dword(%struct.pci_dev*, i32, i32, i32) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #7

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #8

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #6 !dbg !14745 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !14080, metadata !DIExpression()), !dbg !14749
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !14086, metadata !DIExpression()), !dbg !14751
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14752, metadata !DIExpression()), !dbg !14753
  %0 = load i64, i64* %size.addr, align 8, !dbg !14754
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !14756
  br i1 %1, label %if.then, label %if.end447, !dbg !14757

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !14758
  %tobool = icmp ne i64 %2, 0, !dbg !14758
  br i1 %tobool, label %if.end, label %if.then1, !dbg !14761

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !14762
  br label %return, !dbg !14762

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !14763
  %cmp = icmp ult i64 %3, 4096, !dbg !14765
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !14766

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !14767
  br label %return, !dbg !14767

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub = sub i64 %4, 1, !dbg !14768
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !14768
  br i1 %5, label %cond.true, label %cond.false442, !dbg !14768

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub4 = sub i64 %6, 1, !dbg !14768
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !14768
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !14768

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub6 = sub i64 %8, 1, !dbg !14768
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !14768
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !14768

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !14768

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub9 = sub i64 %9, 1, !dbg !14768
  %and = and i64 %sub9, -9223372036854775808, !dbg !14768
  %tobool10 = icmp ne i64 %and, 0, !dbg !14768
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !14768

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !14768

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub13 = sub i64 %10, 1, !dbg !14768
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !14768
  %tobool15 = icmp ne i64 %and14, 0, !dbg !14768
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !14768

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !14768

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub18 = sub i64 %11, 1, !dbg !14768
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !14768
  %tobool20 = icmp ne i64 %and19, 0, !dbg !14768
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !14768

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !14768

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub23 = sub i64 %12, 1, !dbg !14768
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !14768
  %tobool25 = icmp ne i64 %and24, 0, !dbg !14768
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !14768

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !14768

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub28 = sub i64 %13, 1, !dbg !14768
  %and29 = and i64 %sub28, 576460752303423488, !dbg !14768
  %tobool30 = icmp ne i64 %and29, 0, !dbg !14768
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !14768

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !14768

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub33 = sub i64 %14, 1, !dbg !14768
  %and34 = and i64 %sub33, 288230376151711744, !dbg !14768
  %tobool35 = icmp ne i64 %and34, 0, !dbg !14768
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !14768

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !14768

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub38 = sub i64 %15, 1, !dbg !14768
  %and39 = and i64 %sub38, 144115188075855872, !dbg !14768
  %tobool40 = icmp ne i64 %and39, 0, !dbg !14768
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !14768

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !14768

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub43 = sub i64 %16, 1, !dbg !14768
  %and44 = and i64 %sub43, 72057594037927936, !dbg !14768
  %tobool45 = icmp ne i64 %and44, 0, !dbg !14768
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !14768

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !14768

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub48 = sub i64 %17, 1, !dbg !14768
  %and49 = and i64 %sub48, 36028797018963968, !dbg !14768
  %tobool50 = icmp ne i64 %and49, 0, !dbg !14768
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !14768

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !14768

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub53 = sub i64 %18, 1, !dbg !14768
  %and54 = and i64 %sub53, 18014398509481984, !dbg !14768
  %tobool55 = icmp ne i64 %and54, 0, !dbg !14768
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !14768

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !14768

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub58 = sub i64 %19, 1, !dbg !14768
  %and59 = and i64 %sub58, 9007199254740992, !dbg !14768
  %tobool60 = icmp ne i64 %and59, 0, !dbg !14768
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !14768

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !14768

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub63 = sub i64 %20, 1, !dbg !14768
  %and64 = and i64 %sub63, 4503599627370496, !dbg !14768
  %tobool65 = icmp ne i64 %and64, 0, !dbg !14768
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !14768

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !14768

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub68 = sub i64 %21, 1, !dbg !14768
  %and69 = and i64 %sub68, 2251799813685248, !dbg !14768
  %tobool70 = icmp ne i64 %and69, 0, !dbg !14768
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !14768

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !14768

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub73 = sub i64 %22, 1, !dbg !14768
  %and74 = and i64 %sub73, 1125899906842624, !dbg !14768
  %tobool75 = icmp ne i64 %and74, 0, !dbg !14768
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !14768

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !14768

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub78 = sub i64 %23, 1, !dbg !14768
  %and79 = and i64 %sub78, 562949953421312, !dbg !14768
  %tobool80 = icmp ne i64 %and79, 0, !dbg !14768
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !14768

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !14768

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub83 = sub i64 %24, 1, !dbg !14768
  %and84 = and i64 %sub83, 281474976710656, !dbg !14768
  %tobool85 = icmp ne i64 %and84, 0, !dbg !14768
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !14768

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !14768

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub88 = sub i64 %25, 1, !dbg !14768
  %and89 = and i64 %sub88, 140737488355328, !dbg !14768
  %tobool90 = icmp ne i64 %and89, 0, !dbg !14768
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !14768

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !14768

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub93 = sub i64 %26, 1, !dbg !14768
  %and94 = and i64 %sub93, 70368744177664, !dbg !14768
  %tobool95 = icmp ne i64 %and94, 0, !dbg !14768
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !14768

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !14768

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub98 = sub i64 %27, 1, !dbg !14768
  %and99 = and i64 %sub98, 35184372088832, !dbg !14768
  %tobool100 = icmp ne i64 %and99, 0, !dbg !14768
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !14768

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !14768

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub103 = sub i64 %28, 1, !dbg !14768
  %and104 = and i64 %sub103, 17592186044416, !dbg !14768
  %tobool105 = icmp ne i64 %and104, 0, !dbg !14768
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !14768

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !14768

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub108 = sub i64 %29, 1, !dbg !14768
  %and109 = and i64 %sub108, 8796093022208, !dbg !14768
  %tobool110 = icmp ne i64 %and109, 0, !dbg !14768
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !14768

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !14768

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub113 = sub i64 %30, 1, !dbg !14768
  %and114 = and i64 %sub113, 4398046511104, !dbg !14768
  %tobool115 = icmp ne i64 %and114, 0, !dbg !14768
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !14768

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !14768

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub118 = sub i64 %31, 1, !dbg !14768
  %and119 = and i64 %sub118, 2199023255552, !dbg !14768
  %tobool120 = icmp ne i64 %and119, 0, !dbg !14768
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !14768

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !14768

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub123 = sub i64 %32, 1, !dbg !14768
  %and124 = and i64 %sub123, 1099511627776, !dbg !14768
  %tobool125 = icmp ne i64 %and124, 0, !dbg !14768
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !14768

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !14768

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub128 = sub i64 %33, 1, !dbg !14768
  %and129 = and i64 %sub128, 549755813888, !dbg !14768
  %tobool130 = icmp ne i64 %and129, 0, !dbg !14768
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !14768

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !14768

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub133 = sub i64 %34, 1, !dbg !14768
  %and134 = and i64 %sub133, 274877906944, !dbg !14768
  %tobool135 = icmp ne i64 %and134, 0, !dbg !14768
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !14768

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !14768

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub138 = sub i64 %35, 1, !dbg !14768
  %and139 = and i64 %sub138, 137438953472, !dbg !14768
  %tobool140 = icmp ne i64 %and139, 0, !dbg !14768
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !14768

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !14768

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub143 = sub i64 %36, 1, !dbg !14768
  %and144 = and i64 %sub143, 68719476736, !dbg !14768
  %tobool145 = icmp ne i64 %and144, 0, !dbg !14768
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !14768

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !14768

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub148 = sub i64 %37, 1, !dbg !14768
  %and149 = and i64 %sub148, 34359738368, !dbg !14768
  %tobool150 = icmp ne i64 %and149, 0, !dbg !14768
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !14768

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !14768

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub153 = sub i64 %38, 1, !dbg !14768
  %and154 = and i64 %sub153, 17179869184, !dbg !14768
  %tobool155 = icmp ne i64 %and154, 0, !dbg !14768
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !14768

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !14768

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub158 = sub i64 %39, 1, !dbg !14768
  %and159 = and i64 %sub158, 8589934592, !dbg !14768
  %tobool160 = icmp ne i64 %and159, 0, !dbg !14768
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !14768

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !14768

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub163 = sub i64 %40, 1, !dbg !14768
  %and164 = and i64 %sub163, 4294967296, !dbg !14768
  %tobool165 = icmp ne i64 %and164, 0, !dbg !14768
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !14768

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !14768

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub168 = sub i64 %41, 1, !dbg !14768
  %and169 = and i64 %sub168, 2147483648, !dbg !14768
  %tobool170 = icmp ne i64 %and169, 0, !dbg !14768
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !14768

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !14768

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub173 = sub i64 %42, 1, !dbg !14768
  %and174 = and i64 %sub173, 1073741824, !dbg !14768
  %tobool175 = icmp ne i64 %and174, 0, !dbg !14768
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !14768

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !14768

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub178 = sub i64 %43, 1, !dbg !14768
  %and179 = and i64 %sub178, 536870912, !dbg !14768
  %tobool180 = icmp ne i64 %and179, 0, !dbg !14768
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !14768

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !14768

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub183 = sub i64 %44, 1, !dbg !14768
  %and184 = and i64 %sub183, 268435456, !dbg !14768
  %tobool185 = icmp ne i64 %and184, 0, !dbg !14768
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !14768

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !14768

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub188 = sub i64 %45, 1, !dbg !14768
  %and189 = and i64 %sub188, 134217728, !dbg !14768
  %tobool190 = icmp ne i64 %and189, 0, !dbg !14768
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !14768

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !14768

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub193 = sub i64 %46, 1, !dbg !14768
  %and194 = and i64 %sub193, 67108864, !dbg !14768
  %tobool195 = icmp ne i64 %and194, 0, !dbg !14768
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !14768

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !14768

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub198 = sub i64 %47, 1, !dbg !14768
  %and199 = and i64 %sub198, 33554432, !dbg !14768
  %tobool200 = icmp ne i64 %and199, 0, !dbg !14768
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !14768

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !14768

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub203 = sub i64 %48, 1, !dbg !14768
  %and204 = and i64 %sub203, 16777216, !dbg !14768
  %tobool205 = icmp ne i64 %and204, 0, !dbg !14768
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !14768

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !14768

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub208 = sub i64 %49, 1, !dbg !14768
  %and209 = and i64 %sub208, 8388608, !dbg !14768
  %tobool210 = icmp ne i64 %and209, 0, !dbg !14768
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !14768

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !14768

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub213 = sub i64 %50, 1, !dbg !14768
  %and214 = and i64 %sub213, 4194304, !dbg !14768
  %tobool215 = icmp ne i64 %and214, 0, !dbg !14768
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !14768

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !14768

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub218 = sub i64 %51, 1, !dbg !14768
  %and219 = and i64 %sub218, 2097152, !dbg !14768
  %tobool220 = icmp ne i64 %and219, 0, !dbg !14768
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !14768

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !14768

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub223 = sub i64 %52, 1, !dbg !14768
  %and224 = and i64 %sub223, 1048576, !dbg !14768
  %tobool225 = icmp ne i64 %and224, 0, !dbg !14768
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !14768

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !14768

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub228 = sub i64 %53, 1, !dbg !14768
  %and229 = and i64 %sub228, 524288, !dbg !14768
  %tobool230 = icmp ne i64 %and229, 0, !dbg !14768
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !14768

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !14768

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub233 = sub i64 %54, 1, !dbg !14768
  %and234 = and i64 %sub233, 262144, !dbg !14768
  %tobool235 = icmp ne i64 %and234, 0, !dbg !14768
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !14768

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !14768

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub238 = sub i64 %55, 1, !dbg !14768
  %and239 = and i64 %sub238, 131072, !dbg !14768
  %tobool240 = icmp ne i64 %and239, 0, !dbg !14768
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !14768

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !14768

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub243 = sub i64 %56, 1, !dbg !14768
  %and244 = and i64 %sub243, 65536, !dbg !14768
  %tobool245 = icmp ne i64 %and244, 0, !dbg !14768
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !14768

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !14768

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub248 = sub i64 %57, 1, !dbg !14768
  %and249 = and i64 %sub248, 32768, !dbg !14768
  %tobool250 = icmp ne i64 %and249, 0, !dbg !14768
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !14768

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !14768

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub253 = sub i64 %58, 1, !dbg !14768
  %and254 = and i64 %sub253, 16384, !dbg !14768
  %tobool255 = icmp ne i64 %and254, 0, !dbg !14768
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !14768

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !14768

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub258 = sub i64 %59, 1, !dbg !14768
  %and259 = and i64 %sub258, 8192, !dbg !14768
  %tobool260 = icmp ne i64 %and259, 0, !dbg !14768
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !14768

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !14768

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub263 = sub i64 %60, 1, !dbg !14768
  %and264 = and i64 %sub263, 4096, !dbg !14768
  %tobool265 = icmp ne i64 %and264, 0, !dbg !14768
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !14768

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !14768

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub268 = sub i64 %61, 1, !dbg !14768
  %and269 = and i64 %sub268, 2048, !dbg !14768
  %tobool270 = icmp ne i64 %and269, 0, !dbg !14768
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !14768

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !14768

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub273 = sub i64 %62, 1, !dbg !14768
  %and274 = and i64 %sub273, 1024, !dbg !14768
  %tobool275 = icmp ne i64 %and274, 0, !dbg !14768
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !14768

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !14768

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub278 = sub i64 %63, 1, !dbg !14768
  %and279 = and i64 %sub278, 512, !dbg !14768
  %tobool280 = icmp ne i64 %and279, 0, !dbg !14768
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !14768

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !14768

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub283 = sub i64 %64, 1, !dbg !14768
  %and284 = and i64 %sub283, 256, !dbg !14768
  %tobool285 = icmp ne i64 %and284, 0, !dbg !14768
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !14768

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !14768

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub288 = sub i64 %65, 1, !dbg !14768
  %and289 = and i64 %sub288, 128, !dbg !14768
  %tobool290 = icmp ne i64 %and289, 0, !dbg !14768
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !14768

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !14768

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub293 = sub i64 %66, 1, !dbg !14768
  %and294 = and i64 %sub293, 64, !dbg !14768
  %tobool295 = icmp ne i64 %and294, 0, !dbg !14768
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !14768

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !14768

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub298 = sub i64 %67, 1, !dbg !14768
  %and299 = and i64 %sub298, 32, !dbg !14768
  %tobool300 = icmp ne i64 %and299, 0, !dbg !14768
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !14768

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !14768

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub303 = sub i64 %68, 1, !dbg !14768
  %and304 = and i64 %sub303, 16, !dbg !14768
  %tobool305 = icmp ne i64 %and304, 0, !dbg !14768
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !14768

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !14768

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub308 = sub i64 %69, 1, !dbg !14768
  %and309 = and i64 %sub308, 8, !dbg !14768
  %tobool310 = icmp ne i64 %and309, 0, !dbg !14768
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !14768

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !14768

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub313 = sub i64 %70, 1, !dbg !14768
  %and314 = and i64 %sub313, 4, !dbg !14768
  %tobool315 = icmp ne i64 %and314, 0, !dbg !14768
  %71 = zext i1 %tobool315 to i64, !dbg !14768
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !14768
  br label %cond.end, !dbg !14768

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !14768
  br label %cond.end317, !dbg !14768

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !14768
  br label %cond.end319, !dbg !14768

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !14768
  br label %cond.end321, !dbg !14768

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !14768
  br label %cond.end323, !dbg !14768

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !14768
  br label %cond.end325, !dbg !14768

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !14768
  br label %cond.end327, !dbg !14768

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !14768
  br label %cond.end329, !dbg !14768

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !14768
  br label %cond.end331, !dbg !14768

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !14768
  br label %cond.end333, !dbg !14768

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !14768
  br label %cond.end335, !dbg !14768

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !14768
  br label %cond.end337, !dbg !14768

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !14768
  br label %cond.end339, !dbg !14768

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !14768
  br label %cond.end341, !dbg !14768

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !14768
  br label %cond.end343, !dbg !14768

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !14768
  br label %cond.end345, !dbg !14768

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !14768
  br label %cond.end347, !dbg !14768

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !14768
  br label %cond.end349, !dbg !14768

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !14768
  br label %cond.end351, !dbg !14768

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !14768
  br label %cond.end353, !dbg !14768

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !14768
  br label %cond.end355, !dbg !14768

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !14768
  br label %cond.end357, !dbg !14768

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !14768
  br label %cond.end359, !dbg !14768

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !14768
  br label %cond.end361, !dbg !14768

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !14768
  br label %cond.end363, !dbg !14768

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !14768
  br label %cond.end365, !dbg !14768

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !14768
  br label %cond.end367, !dbg !14768

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !14768
  br label %cond.end369, !dbg !14768

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !14768
  br label %cond.end371, !dbg !14768

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !14768
  br label %cond.end373, !dbg !14768

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !14768
  br label %cond.end375, !dbg !14768

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !14768
  br label %cond.end377, !dbg !14768

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !14768
  br label %cond.end379, !dbg !14768

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !14768
  br label %cond.end381, !dbg !14768

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !14768
  br label %cond.end383, !dbg !14768

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !14768
  br label %cond.end385, !dbg !14768

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !14768
  br label %cond.end387, !dbg !14768

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !14768
  br label %cond.end389, !dbg !14768

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !14768
  br label %cond.end391, !dbg !14768

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !14768
  br label %cond.end393, !dbg !14768

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !14768
  br label %cond.end395, !dbg !14768

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !14768
  br label %cond.end397, !dbg !14768

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !14768
  br label %cond.end399, !dbg !14768

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !14768
  br label %cond.end401, !dbg !14768

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !14768
  br label %cond.end403, !dbg !14768

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !14768
  br label %cond.end405, !dbg !14768

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !14768
  br label %cond.end407, !dbg !14768

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !14768
  br label %cond.end409, !dbg !14768

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !14768
  br label %cond.end411, !dbg !14768

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !14768
  br label %cond.end413, !dbg !14768

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !14768
  br label %cond.end415, !dbg !14768

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !14768
  br label %cond.end417, !dbg !14768

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !14768
  br label %cond.end419, !dbg !14768

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !14768
  br label %cond.end421, !dbg !14768

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !14768
  br label %cond.end423, !dbg !14768

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !14768
  br label %cond.end425, !dbg !14768

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !14768
  br label %cond.end427, !dbg !14768

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !14768
  br label %cond.end429, !dbg !14768

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !14768
  br label %cond.end431, !dbg !14768

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !14768
  br label %cond.end433, !dbg !14768

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !14768
  br label %cond.end435, !dbg !14768

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !14768
  br label %cond.end437, !dbg !14768

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !14768
  br label %cond.end440, !dbg !14768

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !14768

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !14768
  br label %cond.end444, !dbg !14768

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !14768
  %sub443 = sub i64 %72, 1, !dbg !14768
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !14768
  br label %cond.end444, !dbg !14768

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !14768
  %sub446 = sub i32 %cond445, 12, !dbg !14769
  %add = add i32 %sub446, 1, !dbg !14770
  store i32 %add, i32* %retval, align 4, !dbg !14771
  br label %return, !dbg !14771

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !14772
  %dec = add i64 %73, -1, !dbg !14772
  store i64 %dec, i64* %size.addr, align 8, !dbg !14772
  %74 = load i64, i64* %size.addr, align 8, !dbg !14773
  %shr = lshr i64 %74, 12, !dbg !14773
  store i64 %shr, i64* %size.addr, align 8, !dbg !14773
  %75 = load i64, i64* %size.addr, align 8, !dbg !14774
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !14751
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !14775
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !14776
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !14775, !srcloc !14093
  store i32 %78, i32* %bitpos.i, align 4, !dbg !14775
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !14777
  %add.i = add i32 %79, 1, !dbg !14778
  store i32 %add.i, i32* %retval, align 4, !dbg !14779
  br label %return, !dbg !14779

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !14780
  ret i32 %80, !dbg !14780
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !14781 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !14785, metadata !DIExpression()), !dbg !14786
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !14787, metadata !DIExpression()), !dbg !14788
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14789, metadata !DIExpression()), !dbg !14790
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14791, metadata !DIExpression()), !dbg !14792
  %0 = load i8*, i8** %object.addr, align 8, !dbg !14793
  ret i8* %0, !dbg !14794
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !14795 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !14798, metadata !DIExpression()), !dbg !14799
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !14800, metadata !DIExpression()), !dbg !14801
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !14802, metadata !DIExpression()), !dbg !14803
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14804
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14806
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14807
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !14808
  br i1 %call, label %if.end, label %if.then, !dbg !14809

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !14810

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14811
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14812
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !14813
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !14814
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14815
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14816
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !14817
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !14818
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14819
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14820
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !14821
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !14822
  br label %do.body, !dbg !14823

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !14824

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !14826

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !14824

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14828
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14828
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !14828
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !14828
  br label %do.end7, !dbg !14828

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !14824

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !14830
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !14831 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !14834, metadata !DIExpression()), !dbg !14835
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !14836, metadata !DIExpression()), !dbg !14837
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !14838, metadata !DIExpression()), !dbg !14839
  ret i1 true, !dbg !14840
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_pme_list_scan(%struct.work_struct* %work) #0 !dbg !14841 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7987, metadata !DIExpression()), !dbg !14842
  %work.addr = alloca %struct.work_struct*, align 8
  %pme_dev = alloca %struct.pci_pme_device*, align 8
  %n = alloca %struct.pci_pme_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_pme_device*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.pci_pme_device*, align 8
  %bridge = alloca %struct.pci_dev*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp24 = alloca %struct.pci_pme_device*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !14845, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.declare(metadata %struct.pci_pme_device** %pme_dev, metadata !14847, metadata !DIExpression()), !dbg !14848
  call void @llvm.dbg.declare(metadata %struct.pci_pme_device** %n, metadata !14849, metadata !DIExpression()), !dbg !14850
  call void @mutex_lock(%struct.mutex* @pci_pme_list_mutex) #11, !dbg !14851
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14852, metadata !DIExpression()), !dbg !14855
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @pci_pme_list, i32 0, i32 0), align 8, !dbg !14855
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !14855
  store i8* %1, i8** %__mptr, align 8, !dbg !14855
  br label %do.body, !dbg !14855

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14856

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14855
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14855
  %3 = bitcast i8* %add.ptr to %struct.pci_pme_device*, !dbg !14855
  store %struct.pci_pme_device* %3, %struct.pci_pme_device** %tmp, align 8, !dbg !14856
  %4 = load %struct.pci_pme_device*, %struct.pci_pme_device** %tmp, align 8, !dbg !14855
  store %struct.pci_pme_device* %4, %struct.pci_pme_device** %pme_dev, align 8, !dbg !14858
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !14859, metadata !DIExpression()), !dbg !14861
  %5 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !14861
  %list = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %5, i32 0, i32 0, !dbg !14861
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !14861
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14861
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !14861
  store i8* %7, i8** %__mptr1, align 8, !dbg !14861
  br label %do.body2, !dbg !14861

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !14862

do.end3:                                          ; preds = %do.body2
  %8 = load i8*, i8** %__mptr1, align 8, !dbg !14861
  %add.ptr5 = getelementptr i8, i8* %8, i64 0, !dbg !14861
  %9 = bitcast i8* %add.ptr5 to %struct.pci_pme_device*, !dbg !14861
  store %struct.pci_pme_device* %9, %struct.pci_pme_device** %tmp4, align 8, !dbg !14862
  %10 = load %struct.pci_pme_device*, %struct.pci_pme_device** %tmp4, align 8, !dbg !14861
  store %struct.pci_pme_device* %10, %struct.pci_pme_device** %n, align 8, !dbg !14858
  br label %for.cond, !dbg !14858

for.cond:                                         ; preds = %do.end23, %do.end3
  %11 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !14864
  %list6 = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %11, i32 0, i32 0, !dbg !14864
  %cmp = icmp eq %struct.list_head* %list6, @pci_pme_list, !dbg !14864
  %lnot = xor i1 %cmp, true, !dbg !14864
  br i1 %lnot, label %for.body, label %for.end, !dbg !14858

for.body:                                         ; preds = %for.cond
  %12 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !14866
  %dev = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %12, i32 0, i32 1, !dbg !14869
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !14869
  %pme_poll = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 29, !dbg !14870
  %14 = bitcast i24* %pme_poll to i32*, !dbg !14870
  %bf.load = load i32, i32* %14, align 2, !dbg !14870
  %bf.lshr = lshr i32 %bf.load, 5, !dbg !14870
  %bf.clear = and i32 %bf.lshr, 1, !dbg !14870
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !14866
  br i1 %tobool, label %if.then, label %if.else, !dbg !14871

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %bridge, metadata !14872, metadata !DIExpression()), !dbg !14874
  %15 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !14875
  %dev7 = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %15, i32 0, i32 1, !dbg !14876
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev7, align 8, !dbg !14876
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 1, !dbg !14877
  %17 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !14877
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %17, i32 0, i32 4, !dbg !14878
  %18 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !14878
  store %struct.pci_dev* %18, %struct.pci_dev** %bridge, align 8, !dbg !14879
  %19 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !14880
  %tobool8 = icmp ne %struct.pci_dev* %19, null, !dbg !14880
  br i1 %tobool8, label %land.lhs.true, label %if.end, !dbg !14882

land.lhs.true:                                    ; preds = %if.then
  %20 = load %struct.pci_dev*, %struct.pci_dev** %bridge, align 8, !dbg !14883
  %current_state = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 26, !dbg !14884
  %21 = load i32, i32* %current_state, align 8, !dbg !14884
  %cmp9 = icmp ne i32 %21, 0, !dbg !14885
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !14886

if.then10:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !14887

if.end:                                           ; preds = %land.lhs.true, %if.then
  %22 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !14888
  %dev11 = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %22, i32 0, i32 1, !dbg !14890
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev11, align 8, !dbg !14890
  %current_state12 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 26, !dbg !14891
  %24 = load i32, i32* %current_state12, align 8, !dbg !14891
  %cmp13 = icmp eq i32 %24, 4, !dbg !14892
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !14893

if.then14:                                        ; preds = %if.end
  br label %for.inc, !dbg !14894

if.end15:                                         ; preds = %if.end
  %25 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !14895
  %dev16 = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %25, i32 0, i32 1, !dbg !14896
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev16, align 8, !dbg !14896
  %call = call i32 @pci_pme_wakeup(%struct.pci_dev* %26, i8* null) #11, !dbg !14897
  br label %if.end18, !dbg !14898

if.else:                                          ; preds = %for.body
  %27 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !14899
  %list17 = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %27, i32 0, i32 0, !dbg !14901
  call void @list_del(%struct.list_head* %list17) #11, !dbg !14902
  %28 = load %struct.pci_pme_device*, %struct.pci_pme_device** %pme_dev, align 8, !dbg !14903
  %29 = bitcast %struct.pci_pme_device* %28 to i8*, !dbg !14903
  call void @kfree(i8* %29) #11, !dbg !14904
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.end15
  br label %for.inc, !dbg !14905

for.inc:                                          ; preds = %if.end18, %if.then14, %if.then10
  %30 = load %struct.pci_pme_device*, %struct.pci_pme_device** %n, align 8, !dbg !14864
  store %struct.pci_pme_device* %30, %struct.pci_pme_device** %pme_dev, align 8, !dbg !14864
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !14906, metadata !DIExpression()), !dbg !14908
  %31 = load %struct.pci_pme_device*, %struct.pci_pme_device** %n, align 8, !dbg !14908
  %list20 = getelementptr inbounds %struct.pci_pme_device, %struct.pci_pme_device* %31, i32 0, i32 0, !dbg !14908
  %next21 = getelementptr inbounds %struct.list_head, %struct.list_head* %list20, i32 0, i32 0, !dbg !14908
  %32 = load %struct.list_head*, %struct.list_head** %next21, align 8, !dbg !14908
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !14908
  store i8* %33, i8** %__mptr19, align 8, !dbg !14908
  br label %do.body22, !dbg !14908

do.body22:                                        ; preds = %for.inc
  br label %do.end23, !dbg !14909

do.end23:                                         ; preds = %do.body22
  %34 = load i8*, i8** %__mptr19, align 8, !dbg !14908
  %add.ptr25 = getelementptr i8, i8* %34, i64 0, !dbg !14908
  %35 = bitcast i8* %add.ptr25 to %struct.pci_pme_device*, !dbg !14908
  store %struct.pci_pme_device* %35, %struct.pci_pme_device** %tmp24, align 8, !dbg !14909
  %36 = load %struct.pci_pme_device*, %struct.pci_pme_device** %tmp24, align 8, !dbg !14908
  store %struct.pci_pme_device* %36, %struct.pci_pme_device** %n, align 8, !dbg !14864
  br label %for.cond, !dbg !14864, !llvm.loop !14911

for.end:                                          ; preds = %for.cond
  %call26 = call i32 @list_empty(%struct.list_head* @pci_pme_list) #11, !dbg !14913
  %tobool27 = icmp ne i32 %call26, 0, !dbg !14913
  br i1 %tobool27, label %if.end31, label %if.then28, !dbg !14914

if.then28:                                        ; preds = %for.end
  %37 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_freezable_wq, align 8, !dbg !14915
  store i32 1000, i32* %m.addr.i, align 4
  %38 = load i32, i32* %m.addr.i, align 4, !dbg !14916
  %39 = call i1 @llvm.is.constant.i32(i32 %38) #10, !dbg !14917
  br i1 %39, label %if.then.i, label %if.else.i, !dbg !14918

if.then.i:                                        ; preds = %if.then28
  %40 = load i32, i32* %m.addr.i, align 4, !dbg !14919
  %cmp.i = icmp slt i32 %40, 0, !dbg !14920
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14921

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !14922
  br label %msecs_to_jiffies.exit, !dbg !14922

if.end.i:                                         ; preds = %if.then.i
  %41 = load i32, i32* %m.addr.i, align 4, !dbg !14923
  %call.i = call i64 @_msecs_to_jiffies(i32 %41) #14, !dbg !14924
  store i64 %call.i, i64* %retval.i, align 8, !dbg !14925
  br label %msecs_to_jiffies.exit, !dbg !14925

if.else.i:                                        ; preds = %if.then28
  %42 = load i32, i32* %m.addr.i, align 4, !dbg !14926
  %call2.i = call i64 @__msecs_to_jiffies(i32 %42) #14, !dbg !14927
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !14928
  br label %msecs_to_jiffies.exit, !dbg !14928

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %43 = load i64, i64* %retval.i, align 8, !dbg !14929
  %call30 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %37, %struct.delayed_work* @pci_pme_work, i64 %43) #11, !dbg !14930
  br label %if.end31, !dbg !14930

if.end31:                                         ; preds = %msecs_to_jiffies.exit, %for.end
  call void @mutex_unlock(%struct.mutex* @pci_pme_list_mutex) #11, !dbg !14931
  ret void, !dbg !14932
}

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !14933 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !14934, metadata !DIExpression()), !dbg !14935
  %0 = load i32, i32* %m.addr, align 4, !dbg !14936
  %conv = zext i32 %0 to i64, !dbg !14936
  %add = add i64 %conv, 4, !dbg !14937
  %sub = sub i64 %add, 1, !dbg !14938
  %div = sdiv i64 %sub, 4, !dbg !14939
  ret i64 %div, !dbg !14940
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !14941 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !14942, metadata !DIExpression()), !dbg !14943
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14944
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !14946
  br i1 %call, label %if.end, label %if.then, !dbg !14947

if.then:                                          ; preds = %entry
  br label %return, !dbg !14948

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14949
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !14950
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !14950
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14951
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !14952
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14952
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !14953
  br label %return, !dbg !14954

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !14954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !14955 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !14958, metadata !DIExpression()), !dbg !14959
  ret i1 true, !dbg !14960
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !14961 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !14962, metadata !DIExpression()), !dbg !14963
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !14964, metadata !DIExpression()), !dbg !14965
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14966
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14967
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !14968
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !14969
  br label %do.body, !dbg !14970

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !14971

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !14973

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !14971

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14975
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14975
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !14975
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !14975
  br label %do.end5, !dbg !14975

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !14971

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !14977
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_power_manageable(%struct.pci_dev* %pci_dev) #0 !dbg !14978 {
entry:
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !14979, metadata !DIExpression()), !dbg !14980
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !14981
  %call = call zeroext i1 @pci_has_subordinate(%struct.pci_dev* %0) #11, !dbg !14982
  br i1 %call, label %lor.rhs, label %lor.end, !dbg !14983

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !14984
  %bridge_d3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 29, !dbg !14985
  %2 = bitcast i24* %bridge_d3 to i32*, !dbg !14985
  %bf.load = load i32, i32* %2, align 2, !dbg !14985
  %bf.lshr = lshr i32 %bf.load, 10, !dbg !14985
  %bf.clear = and i32 %bf.lshr, 1, !dbg !14985
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !14983
  br label %lor.end, !dbg !14983

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %tobool, %lor.rhs ]
  ret i1 %3, !dbg !14986
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @platform_pci_set_wakeup(%struct.pci_dev* %dev, i1 zeroext %enable) #0 !dbg !14987 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %enable.addr = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !14988, metadata !DIExpression()), !dbg !14989
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !14990, metadata !DIExpression()), !dbg !14991
  %0 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !14992
  %tobool = icmp ne %struct.pci_platform_pm_ops* %0, null, !dbg !14992
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14992

cond.true:                                        ; preds = %entry
  %1 = load %struct.pci_platform_pm_ops*, %struct.pci_platform_pm_ops** @pci_platform_pm, align 8, !dbg !14993
  %set_wakeup = getelementptr inbounds %struct.pci_platform_pm_ops, %struct.pci_platform_pm_ops* %1, i32 0, i32 6, !dbg !14994
  %2 = load i32 (%struct.pci_dev*, i1)*, i32 (%struct.pci_dev*, i1)** %set_wakeup, align 8, !dbg !14994
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !14995
  %4 = load i8, i8* %enable.addr, align 1, !dbg !14996
  %tobool1 = trunc i8 %4 to i1, !dbg !14996
  %call = call i32 %2(%struct.pci_dev* %3, i1 zeroext %tobool1) #11, !dbg !14993
  br label %cond.end, !dbg !14992

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14992

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ -19, %cond.false ], !dbg !14992
  ret i32 %cond, !dbg !14997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_has_subordinate(%struct.pci_dev* %pci_dev) #0 !dbg !14998 {
entry:
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !14999, metadata !DIExpression()), !dbg !15000
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !15001
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 2, !dbg !15002
  %1 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !15002
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !15003
  %lnot = xor i1 %tobool, true, !dbg !15003
  %lnot1 = xor i1 %lnot, true, !dbg !15004
  ret i1 %lnot1, !dbg !15005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !15006 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !15008, metadata !DIExpression()), !dbg !15010
  %0 = load i64, i64* %__edi, align 8, !dbg !15010
  store i64 %0, i64* %__edi, align 8, !dbg !15010
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !15011, metadata !DIExpression()), !dbg !15010
  %1 = load i64, i64* %__esi, align 8, !dbg !15010
  store i64 %1, i64* %__esi, align 8, !dbg !15010
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !15012, metadata !DIExpression()), !dbg !15010
  %2 = load i64, i64* %__edx, align 8, !dbg !15010
  store i64 %2, i64* %__edx, align 8, !dbg !15010
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !15013, metadata !DIExpression()), !dbg !15010
  %3 = load i64, i64* %__ecx, align 8, !dbg !15010
  store i64 %3, i64* %__ecx, align 8, !dbg !15010
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !15014, metadata !DIExpression()), !dbg !15010
  %4 = load i64, i64* %__eax, align 8, !dbg !15010
  store i64 %4, i64* %__eax, align 8, !dbg !15010
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !15010
  %6 = call i64 @llvm.read_register.i64(metadata !4882), !dbg !15010
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !15010, !srcloc !15015
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !15010
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !15010
  store i64 %asmresult, i64* %__eax, align 8, !dbg !15010
  call void @llvm.write_register.i64(metadata !4882, i64 %asmresult1), !dbg !15010
  ret void, !dbg !15016
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !15017 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !15018, metadata !DIExpression()), !dbg !15020
  %0 = load i64, i64* %__edi, align 8, !dbg !15020
  store i64 %0, i64* %__edi, align 8, !dbg !15020
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !15021, metadata !DIExpression()), !dbg !15020
  %1 = load i64, i64* %__esi, align 8, !dbg !15020
  store i64 %1, i64* %__esi, align 8, !dbg !15020
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !15022, metadata !DIExpression()), !dbg !15020
  %2 = load i64, i64* %__edx, align 8, !dbg !15020
  store i64 %2, i64* %__edx, align 8, !dbg !15020
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !15023, metadata !DIExpression()), !dbg !15020
  %3 = load i64, i64* %__ecx, align 8, !dbg !15020
  store i64 %3, i64* %__ecx, align 8, !dbg !15020
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !15024, metadata !DIExpression()), !dbg !15020
  %4 = load i64, i64* %__eax, align 8, !dbg !15020
  store i64 %4, i64* %__eax, align 8, !dbg !15020
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !15020
  %6 = call i64 @llvm.read_register.i64(metadata !4882), !dbg !15020
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #10, !dbg !15020, !srcloc !15025
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !15020
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !15020
  store i64 %asmresult, i64* %__eax, align 8, !dbg !15020
  call void @llvm.write_register.i64(metadata !4882, i64 %asmresult1), !dbg !15020
  ret void, !dbg !15026
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_idle(%struct.device*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @pcie_caps_reg(%struct.pci_dev* %dev) #0 !dbg !15027 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !15030, metadata !DIExpression()), !dbg !15031
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !15032
  %pcie_flags_reg = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 20, !dbg !15033
  %1 = load i16, i16* %pcie_flags_reg, align 8, !dbg !15033
  ret i16 %1, !dbg !15034
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pci_dev* @pci_physfn(%struct.pci_dev* %dev) #0 !dbg !15035 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !15036, metadata !DIExpression()), !dbg !15037
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !15038
  %is_virtfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !15040
  %1 = bitcast [5 x i8]* %is_virtfn to i40*, !dbg !15040
  %bf.load = load i40, i40* %1, align 1, !dbg !15040
  %bf.lshr = lshr i40 %bf.load, 22, !dbg !15040
  %bf.clear = and i40 %bf.lshr, 1, !dbg !15040
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !15040
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !15038
  br i1 %tobool, label %if.then, label %if.end, !dbg !15041

if.then:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !15042
  %3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 59, !dbg !15043
  %physfn = bitcast %union.anon.65* %3 to %struct.pci_dev**, !dbg !15043
  %4 = load %struct.pci_dev*, %struct.pci_dev** %physfn, align 8, !dbg !15043
  store %struct.pci_dev* %4, %struct.pci_dev** %dev.addr, align 8, !dbg !15044
  br label %if.end, !dbg !15045

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !15046
  ret %struct.pci_dev* %5, !dbg !15047
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_set_status(%struct.device*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.resource* @pci_ea_get_resource(%struct.pci_dev* %dev, i8 zeroext %bei, i8 zeroext %prop) #0 !dbg !15048 {
entry:
  %retval = alloca %struct.resource*, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %bei.addr = alloca i8, align 1
  %prop.addr = alloca i8, align 1
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !15051, metadata !DIExpression()), !dbg !15052
  store i8 %bei, i8* %bei.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %bei.addr, metadata !15053, metadata !DIExpression()), !dbg !15054
  store i8 %prop, i8* %prop.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prop.addr, metadata !15055, metadata !DIExpression()), !dbg !15056
  %0 = load i8, i8* %bei.addr, align 1, !dbg !15057
  %conv = zext i8 %0 to i32, !dbg !15057
  %cmp = icmp sle i32 %conv, 5, !dbg !15059
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !15060

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* %prop.addr, align 1, !dbg !15061
  %conv2 = zext i8 %1 to i32, !dbg !15061
  %cmp3 = icmp sle i32 %conv2, 2, !dbg !15062
  br i1 %cmp3, label %if.then, label %if.else, !dbg !15063

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !15064
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 44, !dbg !15065
  %3 = load i8, i8* %bei.addr, align 1, !dbg !15066
  %idxprom = zext i8 %3 to i64, !dbg !15064
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !15064
  store %struct.resource* %arrayidx, %struct.resource** %retval, align 8, !dbg !15067
  br label %return, !dbg !15067

if.else:                                          ; preds = %land.lhs.true, %entry
  %4 = load i8, i8* %bei.addr, align 1, !dbg !15068
  %conv5 = zext i8 %4 to i32, !dbg !15068
  %cmp6 = icmp sge i32 %conv5, 9, !dbg !15070
  br i1 %cmp6, label %land.lhs.true8, label %if.else24, !dbg !15071

land.lhs.true8:                                   ; preds = %if.else
  %5 = load i8, i8* %bei.addr, align 1, !dbg !15072
  %conv9 = zext i8 %5 to i32, !dbg !15072
  %cmp10 = icmp sle i32 %conv9, 14, !dbg !15073
  br i1 %cmp10, label %land.lhs.true12, label %if.else24, !dbg !15074

land.lhs.true12:                                  ; preds = %land.lhs.true8
  %6 = load i8, i8* %prop.addr, align 1, !dbg !15075
  %conv13 = zext i8 %6 to i32, !dbg !15075
  %cmp14 = icmp eq i32 %conv13, 4, !dbg !15076
  br i1 %cmp14, label %if.then19, label %lor.lhs.false, !dbg !15077

lor.lhs.false:                                    ; preds = %land.lhs.true12
  %7 = load i8, i8* %prop.addr, align 1, !dbg !15078
  %conv16 = zext i8 %7 to i32, !dbg !15078
  %cmp17 = icmp eq i32 %conv16, 3, !dbg !15079
  br i1 %cmp17, label %if.then19, label %if.else24, !dbg !15080

if.then19:                                        ; preds = %lor.lhs.false, %land.lhs.true12
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !15081
  %resource20 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 44, !dbg !15082
  %9 = load i8, i8* %bei.addr, align 1, !dbg !15083
  %conv21 = zext i8 %9 to i32, !dbg !15083
  %add = add i32 7, %conv21, !dbg !15084
  %sub = sub i32 %add, 9, !dbg !15085
  %idxprom22 = sext i32 %sub to i64, !dbg !15081
  %arrayidx23 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource20, i64 0, i64 %idxprom22, !dbg !15081
  store %struct.resource* %arrayidx23, %struct.resource** %retval, align 8, !dbg !15086
  br label %return, !dbg !15086

if.else24:                                        ; preds = %lor.lhs.false, %land.lhs.true8, %if.else
  %10 = load i8, i8* %bei.addr, align 1, !dbg !15087
  %conv25 = zext i8 %10 to i32, !dbg !15087
  %cmp26 = icmp eq i32 %conv25, 8, !dbg !15089
  br i1 %cmp26, label %if.then28, label %if.else31, !dbg !15090

if.then28:                                        ; preds = %if.else24
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !15091
  %resource29 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 44, !dbg !15092
  %arrayidx30 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource29, i64 0, i64 6, !dbg !15091
  store %struct.resource* %arrayidx30, %struct.resource** %retval, align 8, !dbg !15093
  br label %return, !dbg !15093

if.else31:                                        ; preds = %if.else24
  store %struct.resource* null, %struct.resource** %retval, align 8, !dbg !15094
  br label %return, !dbg !15094

return:                                           ; preds = %if.else31, %if.then28, %if.then19, %if.then
  %12 = load %struct.resource*, %struct.resource** %retval, align 8, !dbg !15095
  ret %struct.resource* %12, !dbg !15095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pci_ea_flags(%struct.pci_dev* %dev, i8 zeroext %prop) #0 !dbg !15096 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.pci_dev*, align 8
  %prop.addr = alloca i8, align 1
  %flags = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !15099, metadata !DIExpression()), !dbg !15100
  store i8 %prop, i8* %prop.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prop.addr, metadata !15101, metadata !DIExpression()), !dbg !15102
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15103, metadata !DIExpression()), !dbg !15104
  store i64 48, i64* %flags, align 8, !dbg !15104
  %0 = load i8, i8* %prop.addr, align 1, !dbg !15105
  %conv = zext i8 %0 to i32, !dbg !15105
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb1
    i32 3, label %sw.bb1
    i32 2, label %sw.bb3
  ], !dbg !15106

sw.bb:                                            ; preds = %entry, %entry
  %1 = load i64, i64* %flags, align 8, !dbg !15107
  %or = or i64 %1, 512, !dbg !15107
  store i64 %or, i64* %flags, align 8, !dbg !15107
  br label %sw.epilog, !dbg !15109

sw.bb1:                                           ; preds = %entry, %entry
  %2 = load i64, i64* %flags, align 8, !dbg !15110
  %or2 = or i64 %2, 8704, !dbg !15110
  store i64 %or2, i64* %flags, align 8, !dbg !15110
  br label %sw.epilog, !dbg !15111

sw.bb3:                                           ; preds = %entry
  %3 = load i64, i64* %flags, align 8, !dbg !15112
  %or4 = or i64 %3, 256, !dbg !15112
  store i64 %or4, i64* %flags, align 8, !dbg !15112
  br label %sw.epilog, !dbg !15113

sw.default:                                       ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !15114
  br label %return, !dbg !15114

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb1, %sw.bb
  %4 = load i64, i64* %flags, align 8, !dbg !15115
  store i64 %4, i64* %retval, align 8, !dbg !15116
  br label %return, !dbg !15116

return:                                           ; preds = %sw.epilog, %sw.default
  %5 = load i64, i64* %retval, align 8, !dbg !15117
  ret i64 %5, !dbg !15117
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_add_saved_cap(%struct.pci_dev* %pci_dev, %struct.pci_cap_saved_state* %new_cap) #0 !dbg !15118 {
entry:
  %pci_dev.addr = alloca %struct.pci_dev*, align 8
  %new_cap.addr = alloca %struct.pci_cap_saved_state*, align 8
  store %struct.pci_dev* %pci_dev, %struct.pci_dev** %pci_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pci_dev.addr, metadata !15121, metadata !DIExpression()), !dbg !15122
  store %struct.pci_cap_saved_state* %new_cap, %struct.pci_cap_saved_state** %new_cap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_cap_saved_state** %new_cap.addr, metadata !15123, metadata !DIExpression()), !dbg !15124
  %0 = load %struct.pci_cap_saved_state*, %struct.pci_cap_saved_state** %new_cap.addr, align 8, !dbg !15125
  %next = getelementptr inbounds %struct.pci_cap_saved_state, %struct.pci_cap_saved_state* %0, i32 0, i32 0, !dbg !15126
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev.addr, align 8, !dbg !15127
  %saved_cap_space = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 51, !dbg !15128
  call void @hlist_add_head(%struct.hlist_node* %next, %struct.hlist_head* %saved_cap_space) #11, !dbg !15129
  ret void, !dbg !15130
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hlist_add_head(%struct.hlist_node* %n, %struct.hlist_head* %h) #0 !dbg !15131 {
entry:
  %n.addr = alloca %struct.hlist_node*, align 8
  %h.addr = alloca %struct.hlist_head*, align 8
  %first = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %n, %struct.hlist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %n.addr, metadata !15135, metadata !DIExpression()), !dbg !15136
  store %struct.hlist_head* %h, %struct.hlist_head** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %h.addr, metadata !15137, metadata !DIExpression()), !dbg !15138
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %first, metadata !15139, metadata !DIExpression()), !dbg !15140
  %0 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !15141
  %first1 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %0, i32 0, i32 0, !dbg !15142
  %1 = load %struct.hlist_node*, %struct.hlist_node** %first1, align 8, !dbg !15142
  store %struct.hlist_node* %1, %struct.hlist_node** %first, align 8, !dbg !15140
  br label %do.body, !dbg !15143

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !15144

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !15146

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !15144

do.body3:                                         ; preds = %do.end
  %2 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !15148
  %3 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !15148
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %3, i32 0, i32 0, !dbg !15148
  store volatile %struct.hlist_node* %2, %struct.hlist_node** %next, align 8, !dbg !15148
  br label %do.end4, !dbg !15148

do.end4:                                          ; preds = %do.body3
  br label %do.end5, !dbg !15144

do.end5:                                          ; preds = %do.end4
  %4 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !15150
  %tobool = icmp ne %struct.hlist_node* %4, null, !dbg !15150
  br i1 %tobool, label %if.then, label %if.end, !dbg !15152

if.then:                                          ; preds = %do.end5
  br label %do.body6, !dbg !15153

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !15154

do.body7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !15156

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !15154

do.body9:                                         ; preds = %do.end8
  %5 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !15158
  %next10 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %5, i32 0, i32 0, !dbg !15158
  %6 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !15158
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %6, i32 0, i32 1, !dbg !15158
  store volatile %struct.hlist_node** %next10, %struct.hlist_node*** %pprev, align 8, !dbg !15158
  br label %do.end11, !dbg !15158

do.end11:                                         ; preds = %do.body9
  br label %do.end12, !dbg !15154

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !15154

if.end:                                           ; preds = %do.end12, %do.end5
  br label %do.body13, !dbg !15160

do.body13:                                        ; preds = %if.end
  br label %do.body14, !dbg !15161

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !15163

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !15161

do.body16:                                        ; preds = %do.end15
  %7 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !15165
  %8 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !15165
  %first17 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %8, i32 0, i32 0, !dbg !15165
  store volatile %struct.hlist_node* %7, %struct.hlist_node** %first17, align 8, !dbg !15165
  br label %do.end18, !dbg !15165

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !15161

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !15167

do.body20:                                        ; preds = %do.end19
  br label %do.body21, !dbg !15168

do.body21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !15170

do.end22:                                         ; preds = %do.body21
  br label %do.body23, !dbg !15168

do.body23:                                        ; preds = %do.end22
  %9 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !15172
  %first24 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %9, i32 0, i32 0, !dbg !15172
  %10 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !15172
  %pprev25 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %10, i32 0, i32 1, !dbg !15172
  store volatile %struct.hlist_node** %first24, %struct.hlist_node*** %pprev25, align 8, !dbg !15172
  br label %do.end26, !dbg !15172

do.end26:                                         ; preds = %do.body23
  br label %do.end27, !dbg !15168

do.end27:                                         ; preds = %do.end26
  ret void, !dbg !15174
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @devres_alloc_node(void (%struct.device*, i8*)*, i64, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !15175 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !15178, metadata !DIExpression()), !dbg !15179
  %call = call i64 @arch_local_save_flags() #11, !dbg !15180
  store i64 %call, i64* %f, align 8, !dbg !15181
  call void @arch_local_irq_disable() #11, !dbg !15182
  %0 = load i64, i64* %f, align 8, !dbg !15183
  ret i64 %0, !dbg !15184
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !15185 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !15188, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !15190, metadata !DIExpression()), !dbg !15192
  %0 = load i64, i64* %__edi, align 8, !dbg !15192
  store i64 %0, i64* %__edi, align 8, !dbg !15192
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !15193, metadata !DIExpression()), !dbg !15192
  %1 = load i64, i64* %__esi, align 8, !dbg !15192
  store i64 %1, i64* %__esi, align 8, !dbg !15192
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !15194, metadata !DIExpression()), !dbg !15192
  %2 = load i64, i64* %__edx, align 8, !dbg !15192
  store i64 %2, i64* %__edx, align 8, !dbg !15192
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !15195, metadata !DIExpression()), !dbg !15192
  %3 = load i64, i64* %__ecx, align 8, !dbg !15192
  store i64 %3, i64* %__ecx, align 8, !dbg !15192
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !15196, metadata !DIExpression()), !dbg !15192
  %4 = load i64, i64* %__eax, align 8, !dbg !15192
  store i64 %4, i64* %__eax, align 8, !dbg !15192
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !15192
  %6 = call i64 @llvm.read_register.i64(metadata !4882), !dbg !15192
  %7 = load i64, i64* %f.addr, align 8, !dbg !15192
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !15192, !srcloc !15197
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !15192
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !15192
  store i64 %asmresult, i64* %__eax, align 8, !dbg !15192
  call void @llvm.write_register.i64(metadata !4882, i64 %asmresult1), !dbg !15192
  ret void, !dbg !15198
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !15199 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !15200, metadata !DIExpression()), !dbg !15202
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !15203, metadata !DIExpression()), !dbg !15202
  %0 = load i64, i64* %__edi, align 8, !dbg !15202
  store i64 %0, i64* %__edi, align 8, !dbg !15202
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !15204, metadata !DIExpression()), !dbg !15202
  %1 = load i64, i64* %__esi, align 8, !dbg !15202
  store i64 %1, i64* %__esi, align 8, !dbg !15202
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !15205, metadata !DIExpression()), !dbg !15202
  %2 = load i64, i64* %__edx, align 8, !dbg !15202
  store i64 %2, i64* %__edx, align 8, !dbg !15202
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !15206, metadata !DIExpression()), !dbg !15202
  %3 = load i64, i64* %__ecx, align 8, !dbg !15202
  store i64 %3, i64* %__ecx, align 8, !dbg !15202
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !15207, metadata !DIExpression()), !dbg !15202
  %4 = load i64, i64* %__eax, align 8, !dbg !15202
  store i64 %4, i64* %__eax, align 8, !dbg !15202
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !15202
  %6 = call i64 @llvm.read_register.i64(metadata !4882), !dbg !15208
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !15208, !srcloc !15211
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !15208
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !15208
  store i64 %asmresult, i64* %__eax, align 8, !dbg !15208
  call void @llvm.write_register.i64(metadata !4882, i64 %asmresult1), !dbg !15208
  %8 = load i64, i64* %__eax, align 8, !dbg !15208
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !15212, metadata !DIExpression()), !dbg !15214
  store i64 -1, i64* %__mask, align 8, !dbg !15214
  %9 = load i64, i64* %__mask, align 8, !dbg !15214
  store i64 %9, i64* %tmp, align 8, !dbg !15214
  %10 = load i64, i64* %tmp, align 8, !dbg !15214
  %and = and i64 %8, %10, !dbg !15208
  store i64 %and, i64* %__ret, align 8, !dbg !15208
  %11 = load i64, i64* %__ret, align 8, !dbg !15202
  store i64 %11, i64* %tmp2, align 8, !dbg !15215
  %12 = load i64, i64* %tmp2, align 8, !dbg !15202
  ret i64 %12, !dbg !15216
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_reset_hotplug_slot(%struct.hotplug_slot* %hotplug, i32 %probe) #0 !dbg !15217 {
entry:
  %retval = alloca i32, align 4
  %hotplug.addr = alloca %struct.hotplug_slot*, align 8
  %probe.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.hotplug_slot* %hotplug, %struct.hotplug_slot** %hotplug.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hotplug_slot** %hotplug.addr, metadata !15218, metadata !DIExpression()), !dbg !15219
  store i32 %probe, i32* %probe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %probe.addr, metadata !15220, metadata !DIExpression()), !dbg !15221
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !15222, metadata !DIExpression()), !dbg !15223
  store i32 -25, i32* %rc, align 4, !dbg !15223
  %0 = load %struct.hotplug_slot*, %struct.hotplug_slot** %hotplug.addr, align 8, !dbg !15224
  %tobool = icmp ne %struct.hotplug_slot* %0, null, !dbg !15224
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !15226

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.hotplug_slot*, %struct.hotplug_slot** %hotplug.addr, align 8, !dbg !15227
  %owner = getelementptr inbounds %struct.hotplug_slot, %struct.hotplug_slot* %1, i32 0, i32 3, !dbg !15228
  %2 = load %struct.module*, %struct.module** %owner, align 8, !dbg !15228
  %call = call zeroext i1 @try_module_get(%struct.module* %2) #11, !dbg !15229
  br i1 %call, label %if.end, label %if.then, !dbg !15230

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load i32, i32* %rc, align 4, !dbg !15231
  store i32 %3, i32* %retval, align 4, !dbg !15232
  br label %return, !dbg !15232

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.hotplug_slot*, %struct.hotplug_slot** %hotplug.addr, align 8, !dbg !15233
  %ops = getelementptr inbounds %struct.hotplug_slot, %struct.hotplug_slot* %4, i32 0, i32 0, !dbg !15235
  %5 = load %struct.hotplug_slot_ops*, %struct.hotplug_slot_ops** %ops, align 8, !dbg !15235
  %reset_slot = getelementptr inbounds %struct.hotplug_slot_ops, %struct.hotplug_slot_ops* %5, i32 0, i32 8, !dbg !15236
  %6 = load i32 (%struct.hotplug_slot*, i32)*, i32 (%struct.hotplug_slot*, i32)** %reset_slot, align 8, !dbg !15236
  %tobool1 = icmp ne i32 (%struct.hotplug_slot*, i32)* %6, null, !dbg !15233
  br i1 %tobool1, label %if.then2, label %if.end6, !dbg !15237

if.then2:                                         ; preds = %if.end
  %7 = load %struct.hotplug_slot*, %struct.hotplug_slot** %hotplug.addr, align 8, !dbg !15238
  %ops3 = getelementptr inbounds %struct.hotplug_slot, %struct.hotplug_slot* %7, i32 0, i32 0, !dbg !15239
  %8 = load %struct.hotplug_slot_ops*, %struct.hotplug_slot_ops** %ops3, align 8, !dbg !15239
  %reset_slot4 = getelementptr inbounds %struct.hotplug_slot_ops, %struct.hotplug_slot_ops* %8, i32 0, i32 8, !dbg !15240
  %9 = load i32 (%struct.hotplug_slot*, i32)*, i32 (%struct.hotplug_slot*, i32)** %reset_slot4, align 8, !dbg !15240
  %10 = load %struct.hotplug_slot*, %struct.hotplug_slot** %hotplug.addr, align 8, !dbg !15241
  %11 = load i32, i32* %probe.addr, align 4, !dbg !15242
  %call5 = call i32 %9(%struct.hotplug_slot* %10, i32 %11) #11, !dbg !15238
  store i32 %call5, i32* %rc, align 4, !dbg !15243
  br label %if.end6, !dbg !15244

if.end6:                                          ; preds = %if.then2, %if.end
  %12 = load %struct.hotplug_slot*, %struct.hotplug_slot** %hotplug.addr, align 8, !dbg !15245
  %owner7 = getelementptr inbounds %struct.hotplug_slot, %struct.hotplug_slot* %12, i32 0, i32 3, !dbg !15246
  %13 = load %struct.module*, %struct.module** %owner7, align 8, !dbg !15246
  call void @module_put(%struct.module* %13) #11, !dbg !15247
  %14 = load i32, i32* %rc, align 4, !dbg !15248
  store i32 %14, i32* %retval, align 4, !dbg !15249
  br label %return, !dbg !15249

return:                                           ; preds = %if.end6, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !15250
  ret i32 %15, !dbg !15250
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #0 !dbg !15251 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !15255, metadata !DIExpression()), !dbg !15256
  ret i1 true, !dbg !15257
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #0 !dbg !15258 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !15261, metadata !DIExpression()), !dbg !15262
  ret void, !dbg !15263
}

; Function Attrs: noredzone
declare dso_local void @pci_cfg_access_lock(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_lock(%struct.device* %dev) #0 !dbg !15264 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15265, metadata !DIExpression()), !dbg !15266
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15267
  %mutex = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 9, !dbg !15268
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !15269
  ret void, !dbg !15270
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_unlock(%struct.device* %dev) #0 !dbg !15271 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15272, metadata !DIExpression()), !dbg !15273
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15274
  %mutex = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 9, !dbg !15275
  call void @mutex_unlock(%struct.mutex* %mutex) #11, !dbg !15276
  ret void, !dbg !15277
}

; Function Attrs: noredzone
declare dso_local void @pci_cfg_access_unlock(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local zeroext i1 @pci_cfg_access_trylock(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_trylock(%struct.device* %dev) #0 !dbg !15278 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15279, metadata !DIExpression()), !dbg !15280
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15281
  %mutex = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 9, !dbg !15282
  %call = call i32 @mutex_trylock(%struct.mutex* %mutex) #11, !dbg !15283
  ret i32 %call, !dbg !15284
}

; Function Attrs: noredzone
declare dso_local i32 @mutex_trylock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_slot_resetable(%struct.pci_slot* %slot) #0 !dbg !15285 {
entry:
  %retval = alloca i1, align 1
  %slot.addr = alloca %struct.pci_slot*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp30 = alloca %struct.pci_dev*, align 8
  store %struct.pci_slot* %slot, %struct.pci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_slot** %slot.addr, metadata !15288, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !15290, metadata !DIExpression()), !dbg !15291
  %0 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15292
  %bus = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %0, i32 0, i32 0, !dbg !15294
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !15294
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 4, !dbg !15295
  %2 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !15295
  %tobool = icmp ne %struct.pci_dev* %2, null, !dbg !15292
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !15296

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15297
  %bus1 = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %3, i32 0, i32 0, !dbg !15298
  %4 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !15298
  %self2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %4, i32 0, i32 4, !dbg !15299
  %5 = load %struct.pci_dev*, %struct.pci_dev** %self2, align 8, !dbg !15299
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 47, !dbg !15300
  %6 = load i16, i16* %dev_flags, align 2, !dbg !15300
  %conv = zext i16 %6 to i32, !dbg !15297
  %and = and i32 %conv, 64, !dbg !15301
  %tobool3 = icmp ne i32 %and, 0, !dbg !15301
  br i1 %tobool3, label %if.then, label %if.end, !dbg !15302

if.then:                                          ; preds = %land.lhs.true
  store i1 false, i1* %retval, align 1, !dbg !15303
  br label %return, !dbg !15303

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15304, metadata !DIExpression()), !dbg !15307
  %7 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15307
  %bus4 = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %7, i32 0, i32 0, !dbg !15307
  %8 = load %struct.pci_bus*, %struct.pci_bus** %bus4, align 8, !dbg !15307
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %8, i32 0, i32 3, !dbg !15307
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !15307
  %9 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15307
  %10 = bitcast %struct.list_head* %9 to i8*, !dbg !15307
  store i8* %10, i8** %__mptr, align 8, !dbg !15307
  br label %do.body, !dbg !15307

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !15308

do.end:                                           ; preds = %do.body
  %11 = load i8*, i8** %__mptr, align 8, !dbg !15307
  %add.ptr = getelementptr i8, i8* %11, i64 0, !dbg !15307
  %12 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !15307
  store %struct.pci_dev* %12, %struct.pci_dev** %tmp, align 8, !dbg !15308
  %13 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !15307
  store %struct.pci_dev* %13, %struct.pci_dev** %dev, align 8, !dbg !15310
  br label %for.cond, !dbg !15310

for.cond:                                         ; preds = %do.end29, %do.end
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15311
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 0, !dbg !15311
  %15 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15311
  %bus5 = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %15, i32 0, i32 0, !dbg !15311
  %16 = load %struct.pci_bus*, %struct.pci_bus** %bus5, align 8, !dbg !15311
  %devices6 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %16, i32 0, i32 3, !dbg !15311
  %cmp = icmp eq %struct.list_head* %bus_list, %devices6, !dbg !15311
  %lnot = xor i1 %cmp, true, !dbg !15311
  br i1 %lnot, label %for.body, label %for.end, !dbg !15310

for.body:                                         ; preds = %for.cond
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15313
  %slot8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 5, !dbg !15316
  %18 = load %struct.pci_slot*, %struct.pci_slot** %slot8, align 8, !dbg !15316
  %tobool9 = icmp ne %struct.pci_slot* %18, null, !dbg !15313
  br i1 %tobool9, label %lor.lhs.false, label %if.then13, !dbg !15317

lor.lhs.false:                                    ; preds = %for.body
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15318
  %slot10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 5, !dbg !15319
  %20 = load %struct.pci_slot*, %struct.pci_slot** %slot10, align 8, !dbg !15319
  %21 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15320
  %cmp11 = icmp ne %struct.pci_slot* %20, %21, !dbg !15321
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !15322

if.then13:                                        ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !15323

if.end14:                                         ; preds = %lor.lhs.false
  %22 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15324
  %dev_flags15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 47, !dbg !15326
  %23 = load i16, i16* %dev_flags15, align 2, !dbg !15326
  %conv16 = zext i16 %23 to i32, !dbg !15324
  %and17 = and i32 %conv16, 64, !dbg !15327
  %tobool18 = icmp ne i32 %and17, 0, !dbg !15327
  br i1 %tobool18, label %if.then23, label %lor.lhs.false19, !dbg !15328

lor.lhs.false19:                                  ; preds = %if.end14
  %24 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15329
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 2, !dbg !15330
  %25 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !15330
  %tobool20 = icmp ne %struct.pci_bus* %25, null, !dbg !15329
  br i1 %tobool20, label %land.lhs.true21, label %if.end24, !dbg !15331

land.lhs.true21:                                  ; preds = %lor.lhs.false19
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15332
  %subordinate22 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 2, !dbg !15333
  %27 = load %struct.pci_bus*, %struct.pci_bus** %subordinate22, align 8, !dbg !15333
  %call = call zeroext i1 @pci_bus_resetable(%struct.pci_bus* %27) #11, !dbg !15334
  br i1 %call, label %if.end24, label %if.then23, !dbg !15335

if.then23:                                        ; preds = %land.lhs.true21, %if.end14
  store i1 false, i1* %retval, align 1, !dbg !15336
  br label %return, !dbg !15336

if.end24:                                         ; preds = %land.lhs.true21, %lor.lhs.false19
  br label %for.inc, !dbg !15337

for.inc:                                          ; preds = %if.end24, %if.then13
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !15338, metadata !DIExpression()), !dbg !15340
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15340
  %bus_list26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 0, !dbg !15340
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list26, i32 0, i32 0, !dbg !15340
  %29 = load %struct.list_head*, %struct.list_head** %next27, align 8, !dbg !15340
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !15340
  store i8* %30, i8** %__mptr25, align 8, !dbg !15340
  br label %do.body28, !dbg !15340

do.body28:                                        ; preds = %for.inc
  br label %do.end29, !dbg !15341

do.end29:                                         ; preds = %do.body28
  %31 = load i8*, i8** %__mptr25, align 8, !dbg !15340
  %add.ptr31 = getelementptr i8, i8* %31, i64 0, !dbg !15340
  %32 = bitcast i8* %add.ptr31 to %struct.pci_dev*, !dbg !15340
  store %struct.pci_dev* %32, %struct.pci_dev** %tmp30, align 8, !dbg !15341
  %33 = load %struct.pci_dev*, %struct.pci_dev** %tmp30, align 8, !dbg !15340
  store %struct.pci_dev* %33, %struct.pci_dev** %dev, align 8, !dbg !15311
  br label %for.cond, !dbg !15311, !llvm.loop !15343

for.end:                                          ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !15345
  br label %return, !dbg !15345

return:                                           ; preds = %for.end, %if.then23, %if.then
  %34 = load i1, i1* %retval, align 1, !dbg !15346
  ret i1 %34, !dbg !15346
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_slot_lock(%struct.pci_slot* %slot) #0 !dbg !15347 {
entry:
  %slot.addr = alloca %struct.pci_slot*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.pci_dev*, align 8
  store %struct.pci_slot* %slot, %struct.pci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_slot** %slot.addr, metadata !15350, metadata !DIExpression()), !dbg !15351
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !15352, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15354, metadata !DIExpression()), !dbg !15357
  %0 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15357
  %bus = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %0, i32 0, i32 0, !dbg !15357
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !15357
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 3, !dbg !15357
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !15357
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15357
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !15357
  store i8* %3, i8** %__mptr, align 8, !dbg !15357
  br label %do.body, !dbg !15357

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15358

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !15357
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !15357
  %5 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !15357
  store %struct.pci_dev* %5, %struct.pci_dev** %tmp, align 8, !dbg !15358
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !15357
  store %struct.pci_dev* %6, %struct.pci_dev** %dev, align 8, !dbg !15360
  br label %for.cond, !dbg !15360

for.cond:                                         ; preds = %do.end14, %do.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15361
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 0, !dbg !15361
  %8 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15361
  %bus1 = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %8, i32 0, i32 0, !dbg !15361
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !15361
  %devices2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %9, i32 0, i32 3, !dbg !15361
  %cmp = icmp eq %struct.list_head* %bus_list, %devices2, !dbg !15361
  %lnot = xor i1 %cmp, true, !dbg !15361
  br i1 %lnot, label %for.body, label %for.end, !dbg !15360

for.body:                                         ; preds = %for.cond
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15363
  %slot3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 5, !dbg !15366
  %11 = load %struct.pci_slot*, %struct.pci_slot** %slot3, align 8, !dbg !15366
  %tobool = icmp ne %struct.pci_slot* %11, null, !dbg !15363
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !15367

lor.lhs.false:                                    ; preds = %for.body
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15368
  %slot4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 5, !dbg !15369
  %13 = load %struct.pci_slot*, %struct.pci_slot** %slot4, align 8, !dbg !15369
  %14 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15370
  %cmp5 = icmp ne %struct.pci_slot* %13, %14, !dbg !15371
  br i1 %cmp5, label %if.then, label %if.end, !dbg !15372

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !15373

if.end:                                           ; preds = %lor.lhs.false
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15374
  call void @pci_dev_lock(%struct.pci_dev* %15) #11, !dbg !15375
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15376
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 2, !dbg !15378
  %17 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !15378
  %tobool6 = icmp ne %struct.pci_bus* %17, null, !dbg !15376
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !15379

if.then7:                                         ; preds = %if.end
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15380
  %subordinate8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 2, !dbg !15381
  %19 = load %struct.pci_bus*, %struct.pci_bus** %subordinate8, align 8, !dbg !15381
  call void @pci_bus_lock(%struct.pci_bus* %19) #11, !dbg !15382
  br label %if.end9, !dbg !15382

if.end9:                                          ; preds = %if.then7, %if.end
  br label %for.inc, !dbg !15383

for.inc:                                          ; preds = %if.end9, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !15384, metadata !DIExpression()), !dbg !15386
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15386
  %bus_list11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 0, !dbg !15386
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list11, i32 0, i32 0, !dbg !15386
  %21 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !15386
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !15386
  store i8* %22, i8** %__mptr10, align 8, !dbg !15386
  br label %do.body13, !dbg !15386

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !15387

do.end14:                                         ; preds = %do.body13
  %23 = load i8*, i8** %__mptr10, align 8, !dbg !15386
  %add.ptr16 = getelementptr i8, i8* %23, i64 0, !dbg !15386
  %24 = bitcast i8* %add.ptr16 to %struct.pci_dev*, !dbg !15386
  store %struct.pci_dev* %24, %struct.pci_dev** %tmp15, align 8, !dbg !15387
  %25 = load %struct.pci_dev*, %struct.pci_dev** %tmp15, align 8, !dbg !15386
  store %struct.pci_dev* %25, %struct.pci_dev** %dev, align 8, !dbg !15361
  br label %for.cond, !dbg !15361, !llvm.loop !15389

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_slot_unlock(%struct.pci_slot* %slot) #0 !dbg !15392 {
entry:
  %slot.addr = alloca %struct.pci_slot*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.pci_dev*, align 8
  store %struct.pci_slot* %slot, %struct.pci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_slot** %slot.addr, metadata !15393, metadata !DIExpression()), !dbg !15394
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !15395, metadata !DIExpression()), !dbg !15396
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15397, metadata !DIExpression()), !dbg !15400
  %0 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15400
  %bus = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %0, i32 0, i32 0, !dbg !15400
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !15400
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 3, !dbg !15400
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !15400
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15400
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !15400
  store i8* %3, i8** %__mptr, align 8, !dbg !15400
  br label %do.body, !dbg !15400

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15401

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !15400
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !15400
  %5 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !15400
  store %struct.pci_dev* %5, %struct.pci_dev** %tmp, align 8, !dbg !15401
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !15400
  store %struct.pci_dev* %6, %struct.pci_dev** %dev, align 8, !dbg !15403
  br label %for.cond, !dbg !15403

for.cond:                                         ; preds = %do.end14, %do.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15404
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 0, !dbg !15404
  %8 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15404
  %bus1 = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %8, i32 0, i32 0, !dbg !15404
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !15404
  %devices2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %9, i32 0, i32 3, !dbg !15404
  %cmp = icmp eq %struct.list_head* %bus_list, %devices2, !dbg !15404
  %lnot = xor i1 %cmp, true, !dbg !15404
  br i1 %lnot, label %for.body, label %for.end, !dbg !15403

for.body:                                         ; preds = %for.cond
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15406
  %slot3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 5, !dbg !15409
  %11 = load %struct.pci_slot*, %struct.pci_slot** %slot3, align 8, !dbg !15409
  %tobool = icmp ne %struct.pci_slot* %11, null, !dbg !15406
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !15410

lor.lhs.false:                                    ; preds = %for.body
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15411
  %slot4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 5, !dbg !15412
  %13 = load %struct.pci_slot*, %struct.pci_slot** %slot4, align 8, !dbg !15412
  %14 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15413
  %cmp5 = icmp ne %struct.pci_slot* %13, %14, !dbg !15414
  br i1 %cmp5, label %if.then, label %if.end, !dbg !15415

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !15416

if.end:                                           ; preds = %lor.lhs.false
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15417
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 2, !dbg !15419
  %16 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !15419
  %tobool6 = icmp ne %struct.pci_bus* %16, null, !dbg !15417
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !15420

if.then7:                                         ; preds = %if.end
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15421
  %subordinate8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 2, !dbg !15422
  %18 = load %struct.pci_bus*, %struct.pci_bus** %subordinate8, align 8, !dbg !15422
  call void @pci_bus_unlock(%struct.pci_bus* %18) #11, !dbg !15423
  br label %if.end9, !dbg !15423

if.end9:                                          ; preds = %if.then7, %if.end
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15424
  call void @pci_dev_unlock(%struct.pci_dev* %19) #11, !dbg !15425
  br label %for.inc, !dbg !15426

for.inc:                                          ; preds = %if.end9, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !15427, metadata !DIExpression()), !dbg !15429
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15429
  %bus_list11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 0, !dbg !15429
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list11, i32 0, i32 0, !dbg !15429
  %21 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !15429
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !15429
  store i8* %22, i8** %__mptr10, align 8, !dbg !15429
  br label %do.body13, !dbg !15429

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !15430

do.end14:                                         ; preds = %do.body13
  %23 = load i8*, i8** %__mptr10, align 8, !dbg !15429
  %add.ptr16 = getelementptr i8, i8* %23, i64 0, !dbg !15429
  %24 = bitcast i8* %add.ptr16 to %struct.pci_dev*, !dbg !15429
  store %struct.pci_dev* %24, %struct.pci_dev** %tmp15, align 8, !dbg !15430
  %25 = load %struct.pci_dev*, %struct.pci_dev** %tmp15, align 8, !dbg !15429
  store %struct.pci_dev* %25, %struct.pci_dev** %dev, align 8, !dbg !15404
  br label %for.cond, !dbg !15404, !llvm.loop !15432

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_bus_resetable(%struct.pci_bus* %bus) #0 !dbg !15435 {
entry:
  %retval = alloca i1, align 1
  %bus.addr = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr14 = alloca i8*, align 8
  %tmp19 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !15436, metadata !DIExpression()), !dbg !15437
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !15438, metadata !DIExpression()), !dbg !15439
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15440
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 4, !dbg !15442
  %1 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !15442
  %tobool = icmp ne %struct.pci_dev* %1, null, !dbg !15440
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !15443

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15444
  %self1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %2, i32 0, i32 4, !dbg !15445
  %3 = load %struct.pci_dev*, %struct.pci_dev** %self1, align 8, !dbg !15445
  %dev_flags = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 47, !dbg !15446
  %4 = load i16, i16* %dev_flags, align 2, !dbg !15446
  %conv = zext i16 %4 to i32, !dbg !15444
  %and = and i32 %conv, 64, !dbg !15447
  %tobool2 = icmp ne i32 %and, 0, !dbg !15447
  br i1 %tobool2, label %if.then, label %if.end, !dbg !15448

if.then:                                          ; preds = %land.lhs.true
  store i1 false, i1* %retval, align 1, !dbg !15449
  br label %return, !dbg !15449

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15450, metadata !DIExpression()), !dbg !15453
  %5 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15453
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %5, i32 0, i32 3, !dbg !15453
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !15453
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15453
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !15453
  store i8* %7, i8** %__mptr, align 8, !dbg !15453
  br label %do.body, !dbg !15453

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !15454

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !15453
  %add.ptr = getelementptr i8, i8* %8, i64 0, !dbg !15453
  %9 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !15453
  store %struct.pci_dev* %9, %struct.pci_dev** %tmp, align 8, !dbg !15454
  %10 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !15453
  store %struct.pci_dev* %10, %struct.pci_dev** %dev, align 8, !dbg !15456
  br label %for.cond, !dbg !15456

for.cond:                                         ; preds = %do.end18, %do.end
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15457
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 0, !dbg !15457
  %12 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15457
  %devices3 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %12, i32 0, i32 3, !dbg !15457
  %cmp = icmp eq %struct.list_head* %bus_list, %devices3, !dbg !15457
  %lnot = xor i1 %cmp, true, !dbg !15457
  br i1 %lnot, label %for.body, label %for.end, !dbg !15456

for.body:                                         ; preds = %for.cond
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15459
  %dev_flags5 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 47, !dbg !15462
  %14 = load i16, i16* %dev_flags5, align 2, !dbg !15462
  %conv6 = zext i16 %14 to i32, !dbg !15459
  %and7 = and i32 %conv6, 64, !dbg !15463
  %tobool8 = icmp ne i32 %and7, 0, !dbg !15463
  br i1 %tobool8, label %if.then12, label %lor.lhs.false, !dbg !15464

lor.lhs.false:                                    ; preds = %for.body
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15465
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 2, !dbg !15466
  %16 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !15466
  %tobool9 = icmp ne %struct.pci_bus* %16, null, !dbg !15465
  br i1 %tobool9, label %land.lhs.true10, label %if.end13, !dbg !15467

land.lhs.true10:                                  ; preds = %lor.lhs.false
  %17 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15468
  %subordinate11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %17, i32 0, i32 2, !dbg !15469
  %18 = load %struct.pci_bus*, %struct.pci_bus** %subordinate11, align 8, !dbg !15469
  %call = call zeroext i1 @pci_bus_resetable(%struct.pci_bus* %18) #11, !dbg !15470
  br i1 %call, label %if.end13, label %if.then12, !dbg !15471

if.then12:                                        ; preds = %land.lhs.true10, %for.body
  store i1 false, i1* %retval, align 1, !dbg !15472
  br label %return, !dbg !15472

if.end13:                                         ; preds = %land.lhs.true10, %lor.lhs.false
  br label %for.inc, !dbg !15473

for.inc:                                          ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i8** %__mptr14, metadata !15474, metadata !DIExpression()), !dbg !15476
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15476
  %bus_list15 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 0, !dbg !15476
  %next16 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list15, i32 0, i32 0, !dbg !15476
  %20 = load %struct.list_head*, %struct.list_head** %next16, align 8, !dbg !15476
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !15476
  store i8* %21, i8** %__mptr14, align 8, !dbg !15476
  br label %do.body17, !dbg !15476

do.body17:                                        ; preds = %for.inc
  br label %do.end18, !dbg !15477

do.end18:                                         ; preds = %do.body17
  %22 = load i8*, i8** %__mptr14, align 8, !dbg !15476
  %add.ptr20 = getelementptr i8, i8* %22, i64 0, !dbg !15476
  %23 = bitcast i8* %add.ptr20 to %struct.pci_dev*, !dbg !15476
  store %struct.pci_dev* %23, %struct.pci_dev** %tmp19, align 8, !dbg !15477
  %24 = load %struct.pci_dev*, %struct.pci_dev** %tmp19, align 8, !dbg !15476
  store %struct.pci_dev* %24, %struct.pci_dev** %dev, align 8, !dbg !15457
  br label %for.cond, !dbg !15457, !llvm.loop !15479

for.end:                                          ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !15481
  br label %return, !dbg !15481

return:                                           ; preds = %for.end, %if.then12, %if.then
  %25 = load i1, i1* %retval, align 1, !dbg !15482
  ret i1 %25, !dbg !15482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bus_lock(%struct.pci_bus* %bus) #0 !dbg !15483 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !15484, metadata !DIExpression()), !dbg !15485
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !15486, metadata !DIExpression()), !dbg !15487
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15488, metadata !DIExpression()), !dbg !15491
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15491
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 3, !dbg !15491
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !15491
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15491
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !15491
  store i8* %2, i8** %__mptr, align 8, !dbg !15491
  br label %do.body, !dbg !15491

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15492

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !15491
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !15491
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !15491
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !15492
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !15491
  store %struct.pci_dev* %5, %struct.pci_dev** %dev, align 8, !dbg !15494
  br label %for.cond, !dbg !15494

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15495
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 0, !dbg !15495
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15495
  %devices1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 3, !dbg !15495
  %cmp = icmp eq %struct.list_head* %bus_list, %devices1, !dbg !15495
  %lnot = xor i1 %cmp, true, !dbg !15495
  br i1 %lnot, label %for.body, label %for.end, !dbg !15494

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15497
  call void @pci_dev_lock(%struct.pci_dev* %8) #11, !dbg !15499
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15500
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 2, !dbg !15502
  %10 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !15502
  %tobool = icmp ne %struct.pci_bus* %10, null, !dbg !15500
  br i1 %tobool, label %if.then, label %if.end, !dbg !15503

if.then:                                          ; preds = %for.body
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15504
  %subordinate2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 2, !dbg !15505
  %12 = load %struct.pci_bus*, %struct.pci_bus** %subordinate2, align 8, !dbg !15505
  call void @pci_bus_lock(%struct.pci_bus* %12) #11, !dbg !15506
  br label %if.end, !dbg !15506

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !15507

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !15508, metadata !DIExpression()), !dbg !15510
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15510
  %bus_list4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 0, !dbg !15510
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list4, i32 0, i32 0, !dbg !15510
  %14 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !15510
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !15510
  store i8* %15, i8** %__mptr3, align 8, !dbg !15510
  br label %do.body6, !dbg !15510

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !15511

do.end7:                                          ; preds = %do.body6
  %16 = load i8*, i8** %__mptr3, align 8, !dbg !15510
  %add.ptr9 = getelementptr i8, i8* %16, i64 0, !dbg !15510
  %17 = bitcast i8* %add.ptr9 to %struct.pci_dev*, !dbg !15510
  store %struct.pci_dev* %17, %struct.pci_dev** %tmp8, align 8, !dbg !15511
  %18 = load %struct.pci_dev*, %struct.pci_dev** %tmp8, align 8, !dbg !15510
  store %struct.pci_dev* %18, %struct.pci_dev** %dev, align 8, !dbg !15495
  br label %for.cond, !dbg !15495, !llvm.loop !15513

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15515
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bus_unlock(%struct.pci_bus* %bus) #0 !dbg !15516 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !15517, metadata !DIExpression()), !dbg !15518
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !15519, metadata !DIExpression()), !dbg !15520
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15521, metadata !DIExpression()), !dbg !15524
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15524
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 3, !dbg !15524
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !15524
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15524
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !15524
  store i8* %2, i8** %__mptr, align 8, !dbg !15524
  br label %do.body, !dbg !15524

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15525

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !15524
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !15524
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !15524
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !15525
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !15524
  store %struct.pci_dev* %5, %struct.pci_dev** %dev, align 8, !dbg !15527
  br label %for.cond, !dbg !15527

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15528
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 0, !dbg !15528
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15528
  %devices1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 3, !dbg !15528
  %cmp = icmp eq %struct.list_head* %bus_list, %devices1, !dbg !15528
  %lnot = xor i1 %cmp, true, !dbg !15528
  br i1 %lnot, label %for.body, label %for.end, !dbg !15527

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15530
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 2, !dbg !15533
  %9 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !15533
  %tobool = icmp ne %struct.pci_bus* %9, null, !dbg !15530
  br i1 %tobool, label %if.then, label %if.end, !dbg !15534

if.then:                                          ; preds = %for.body
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15535
  %subordinate2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 2, !dbg !15536
  %11 = load %struct.pci_bus*, %struct.pci_bus** %subordinate2, align 8, !dbg !15536
  call void @pci_bus_unlock(%struct.pci_bus* %11) #11, !dbg !15537
  br label %if.end, !dbg !15537

if.end:                                           ; preds = %if.then, %for.body
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15538
  call void @pci_dev_unlock(%struct.pci_dev* %12) #11, !dbg !15539
  br label %for.inc, !dbg !15540

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !15541, metadata !DIExpression()), !dbg !15543
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15543
  %bus_list4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 0, !dbg !15543
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list4, i32 0, i32 0, !dbg !15543
  %14 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !15543
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !15543
  store i8* %15, i8** %__mptr3, align 8, !dbg !15543
  br label %do.body6, !dbg !15543

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !15544

do.end7:                                          ; preds = %do.body6
  %16 = load i8*, i8** %__mptr3, align 8, !dbg !15543
  %add.ptr9 = getelementptr i8, i8* %16, i64 0, !dbg !15543
  %17 = bitcast i8* %add.ptr9 to %struct.pci_dev*, !dbg !15543
  store %struct.pci_dev* %17, %struct.pci_dev** %tmp8, align 8, !dbg !15544
  %18 = load %struct.pci_dev*, %struct.pci_dev** %tmp8, align 8, !dbg !15543
  store %struct.pci_dev* %18, %struct.pci_dev** %dev, align 8, !dbg !15528
  br label %for.cond, !dbg !15528, !llvm.loop !15546

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_slot_trylock(%struct.pci_slot* %slot) #0 !dbg !15549 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca %struct.pci_slot*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp22 = alloca %struct.pci_dev*, align 8
  %__mptr24 = alloca i8*, align 8
  %tmp28 = alloca %struct.pci_dev*, align 8
  %__mptr50 = alloca i8*, align 8
  %tmp55 = alloca %struct.pci_dev*, align 8
  store %struct.pci_slot* %slot, %struct.pci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_slot** %slot.addr, metadata !15550, metadata !DIExpression()), !dbg !15551
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !15552, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15554, metadata !DIExpression()), !dbg !15557
  %0 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15557
  %bus = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %0, i32 0, i32 0, !dbg !15557
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !15557
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 3, !dbg !15557
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !15557
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15557
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !15557
  store i8* %3, i8** %__mptr, align 8, !dbg !15557
  br label %do.body, !dbg !15557

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15558

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !15557
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !15557
  %5 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !15557
  store %struct.pci_dev* %5, %struct.pci_dev** %tmp, align 8, !dbg !15558
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !15557
  store %struct.pci_dev* %6, %struct.pci_dev** %dev, align 8, !dbg !15560
  br label %for.cond, !dbg !15560

for.cond:                                         ; preds = %do.end21, %do.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15561
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 0, !dbg !15561
  %8 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15561
  %bus1 = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %8, i32 0, i32 0, !dbg !15561
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !15561
  %devices2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %9, i32 0, i32 3, !dbg !15561
  %cmp = icmp eq %struct.list_head* %bus_list, %devices2, !dbg !15561
  %lnot = xor i1 %cmp, true, !dbg !15561
  br i1 %lnot, label %for.body, label %for.end, !dbg !15560

for.body:                                         ; preds = %for.cond
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15563
  %slot3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 5, !dbg !15566
  %11 = load %struct.pci_slot*, %struct.pci_slot** %slot3, align 8, !dbg !15566
  %tobool = icmp ne %struct.pci_slot* %11, null, !dbg !15563
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !15567

lor.lhs.false:                                    ; preds = %for.body
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15568
  %slot4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 5, !dbg !15569
  %13 = load %struct.pci_slot*, %struct.pci_slot** %slot4, align 8, !dbg !15569
  %14 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15570
  %cmp5 = icmp ne %struct.pci_slot* %13, %14, !dbg !15571
  br i1 %cmp5, label %if.then, label %if.end, !dbg !15572

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !15573

if.end:                                           ; preds = %lor.lhs.false
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15574
  %call = call i32 @pci_dev_trylock(%struct.pci_dev* %15) #11, !dbg !15576
  %tobool6 = icmp ne i32 %call, 0, !dbg !15576
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !15577

if.then7:                                         ; preds = %if.end
  br label %unlock, !dbg !15578

if.end8:                                          ; preds = %if.end
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15579
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 2, !dbg !15581
  %17 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !15581
  %tobool9 = icmp ne %struct.pci_bus* %17, null, !dbg !15579
  br i1 %tobool9, label %if.then10, label %if.end16, !dbg !15582

if.then10:                                        ; preds = %if.end8
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15583
  %subordinate11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 2, !dbg !15586
  %19 = load %struct.pci_bus*, %struct.pci_bus** %subordinate11, align 8, !dbg !15586
  %call12 = call i32 @pci_bus_trylock(%struct.pci_bus* %19) #11, !dbg !15587
  %tobool13 = icmp ne i32 %call12, 0, !dbg !15587
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !15588

if.then14:                                        ; preds = %if.then10
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15589
  call void @pci_dev_unlock(%struct.pci_dev* %20) #11, !dbg !15591
  br label %unlock, !dbg !15592

if.end15:                                         ; preds = %if.then10
  br label %if.end16, !dbg !15593

if.end16:                                         ; preds = %if.end15, %if.end8
  br label %for.inc, !dbg !15594

for.inc:                                          ; preds = %if.end16, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !15595, metadata !DIExpression()), !dbg !15597
  %21 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15597
  %bus_list18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 0, !dbg !15597
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list18, i32 0, i32 0, !dbg !15597
  %22 = load %struct.list_head*, %struct.list_head** %next19, align 8, !dbg !15597
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !15597
  store i8* %23, i8** %__mptr17, align 8, !dbg !15597
  br label %do.body20, !dbg !15597

do.body20:                                        ; preds = %for.inc
  br label %do.end21, !dbg !15598

do.end21:                                         ; preds = %do.body20
  %24 = load i8*, i8** %__mptr17, align 8, !dbg !15597
  %add.ptr23 = getelementptr i8, i8* %24, i64 0, !dbg !15597
  %25 = bitcast i8* %add.ptr23 to %struct.pci_dev*, !dbg !15597
  store %struct.pci_dev* %25, %struct.pci_dev** %tmp22, align 8, !dbg !15598
  %26 = load %struct.pci_dev*, %struct.pci_dev** %tmp22, align 8, !dbg !15597
  store %struct.pci_dev* %26, %struct.pci_dev** %dev, align 8, !dbg !15561
  br label %for.cond, !dbg !15561, !llvm.loop !15600

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !15602
  br label %return, !dbg !15602

unlock:                                           ; preds = %if.then14, %if.then7
  call void @llvm.dbg.label(metadata !15603), !dbg !15604
  call void @llvm.dbg.declare(metadata i8** %__mptr24, metadata !15605, metadata !DIExpression()), !dbg !15608
  %27 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15608
  %bus_list25 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %27, i32 0, i32 0, !dbg !15608
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list25, i32 0, i32 1, !dbg !15608
  %28 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !15608
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !15608
  store i8* %29, i8** %__mptr24, align 8, !dbg !15608
  br label %do.body26, !dbg !15608

do.body26:                                        ; preds = %unlock
  br label %do.end27, !dbg !15609

do.end27:                                         ; preds = %do.body26
  %30 = load i8*, i8** %__mptr24, align 8, !dbg !15608
  %add.ptr29 = getelementptr i8, i8* %30, i64 0, !dbg !15608
  %31 = bitcast i8* %add.ptr29 to %struct.pci_dev*, !dbg !15608
  store %struct.pci_dev* %31, %struct.pci_dev** %tmp28, align 8, !dbg !15609
  %32 = load %struct.pci_dev*, %struct.pci_dev** %tmp28, align 8, !dbg !15608
  store %struct.pci_dev* %32, %struct.pci_dev** %dev, align 8, !dbg !15611
  br label %for.cond30, !dbg !15611

for.cond30:                                       ; preds = %do.end54, %do.end27
  %33 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15612
  %bus_list31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 0, !dbg !15612
  %34 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15612
  %bus32 = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %34, i32 0, i32 0, !dbg !15612
  %35 = load %struct.pci_bus*, %struct.pci_bus** %bus32, align 8, !dbg !15612
  %devices33 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %35, i32 0, i32 3, !dbg !15612
  %cmp34 = icmp eq %struct.list_head* %bus_list31, %devices33, !dbg !15612
  %lnot35 = xor i1 %cmp34, true, !dbg !15612
  br i1 %lnot35, label %for.body36, label %for.end57, !dbg !15611

for.body36:                                       ; preds = %for.cond30
  %36 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15614
  %slot37 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 5, !dbg !15617
  %37 = load %struct.pci_slot*, %struct.pci_slot** %slot37, align 8, !dbg !15617
  %tobool38 = icmp ne %struct.pci_slot* %37, null, !dbg !15614
  br i1 %tobool38, label %lor.lhs.false39, label %if.then42, !dbg !15618

lor.lhs.false39:                                  ; preds = %for.body36
  %38 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15619
  %slot40 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 5, !dbg !15620
  %39 = load %struct.pci_slot*, %struct.pci_slot** %slot40, align 8, !dbg !15620
  %40 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15621
  %cmp41 = icmp ne %struct.pci_slot* %39, %40, !dbg !15622
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !15623

if.then42:                                        ; preds = %lor.lhs.false39, %for.body36
  br label %for.inc49, !dbg !15624

if.end43:                                         ; preds = %lor.lhs.false39
  %41 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15625
  %subordinate44 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 2, !dbg !15627
  %42 = load %struct.pci_bus*, %struct.pci_bus** %subordinate44, align 8, !dbg !15627
  %tobool45 = icmp ne %struct.pci_bus* %42, null, !dbg !15625
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !15628

if.then46:                                        ; preds = %if.end43
  %43 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15629
  %subordinate47 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 2, !dbg !15630
  %44 = load %struct.pci_bus*, %struct.pci_bus** %subordinate47, align 8, !dbg !15630
  call void @pci_bus_unlock(%struct.pci_bus* %44) #11, !dbg !15631
  br label %if.end48, !dbg !15631

if.end48:                                         ; preds = %if.then46, %if.end43
  %45 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15632
  call void @pci_dev_unlock(%struct.pci_dev* %45) #11, !dbg !15633
  br label %for.inc49, !dbg !15634

for.inc49:                                        ; preds = %if.end48, %if.then42
  call void @llvm.dbg.declare(metadata i8** %__mptr50, metadata !15635, metadata !DIExpression()), !dbg !15637
  %46 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15637
  %bus_list51 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 0, !dbg !15637
  %prev52 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list51, i32 0, i32 1, !dbg !15637
  %47 = load %struct.list_head*, %struct.list_head** %prev52, align 8, !dbg !15637
  %48 = bitcast %struct.list_head* %47 to i8*, !dbg !15637
  store i8* %48, i8** %__mptr50, align 8, !dbg !15637
  br label %do.body53, !dbg !15637

do.body53:                                        ; preds = %for.inc49
  br label %do.end54, !dbg !15638

do.end54:                                         ; preds = %do.body53
  %49 = load i8*, i8** %__mptr50, align 8, !dbg !15637
  %add.ptr56 = getelementptr i8, i8* %49, i64 0, !dbg !15637
  %50 = bitcast i8* %add.ptr56 to %struct.pci_dev*, !dbg !15637
  store %struct.pci_dev* %50, %struct.pci_dev** %tmp55, align 8, !dbg !15638
  %51 = load %struct.pci_dev*, %struct.pci_dev** %tmp55, align 8, !dbg !15637
  store %struct.pci_dev* %51, %struct.pci_dev** %dev, align 8, !dbg !15612
  br label %for.cond30, !dbg !15612, !llvm.loop !15640

for.end57:                                        ; preds = %for.cond30
  store i32 0, i32* %retval, align 4, !dbg !15642
  br label %return, !dbg !15642

return:                                           ; preds = %for.end57, %for.end
  %52 = load i32, i32* %retval, align 4, !dbg !15643
  ret i32 %52, !dbg !15643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_slot_save_and_disable_locked(%struct.pci_slot* %slot) #0 !dbg !15644 {
entry:
  %slot.addr = alloca %struct.pci_slot*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.pci_dev*, align 8
  store %struct.pci_slot* %slot, %struct.pci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_slot** %slot.addr, metadata !15645, metadata !DIExpression()), !dbg !15646
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !15647, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15649, metadata !DIExpression()), !dbg !15652
  %0 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15652
  %bus = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %0, i32 0, i32 0, !dbg !15652
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !15652
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 3, !dbg !15652
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !15652
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15652
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !15652
  store i8* %3, i8** %__mptr, align 8, !dbg !15652
  br label %do.body, !dbg !15652

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15653

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !15652
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !15652
  %5 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !15652
  store %struct.pci_dev* %5, %struct.pci_dev** %tmp, align 8, !dbg !15653
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !15652
  store %struct.pci_dev* %6, %struct.pci_dev** %dev, align 8, !dbg !15655
  br label %for.cond, !dbg !15655

for.cond:                                         ; preds = %do.end14, %do.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15656
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 0, !dbg !15656
  %8 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15656
  %bus1 = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %8, i32 0, i32 0, !dbg !15656
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !15656
  %devices2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %9, i32 0, i32 3, !dbg !15656
  %cmp = icmp eq %struct.list_head* %bus_list, %devices2, !dbg !15656
  %lnot = xor i1 %cmp, true, !dbg !15656
  br i1 %lnot, label %for.body, label %for.end, !dbg !15655

for.body:                                         ; preds = %for.cond
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15658
  %slot3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 5, !dbg !15661
  %11 = load %struct.pci_slot*, %struct.pci_slot** %slot3, align 8, !dbg !15661
  %tobool = icmp ne %struct.pci_slot* %11, null, !dbg !15658
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !15662

lor.lhs.false:                                    ; preds = %for.body
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15663
  %slot4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 5, !dbg !15664
  %13 = load %struct.pci_slot*, %struct.pci_slot** %slot4, align 8, !dbg !15664
  %14 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15665
  %cmp5 = icmp ne %struct.pci_slot* %13, %14, !dbg !15666
  br i1 %cmp5, label %if.then, label %if.end, !dbg !15667

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !15668

if.end:                                           ; preds = %lor.lhs.false
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15669
  call void @pci_dev_save_and_disable(%struct.pci_dev* %15) #11, !dbg !15670
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15671
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 2, !dbg !15673
  %17 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !15673
  %tobool6 = icmp ne %struct.pci_bus* %17, null, !dbg !15671
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !15674

if.then7:                                         ; preds = %if.end
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15675
  %subordinate8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 2, !dbg !15676
  %19 = load %struct.pci_bus*, %struct.pci_bus** %subordinate8, align 8, !dbg !15676
  call void @pci_bus_save_and_disable_locked(%struct.pci_bus* %19) #11, !dbg !15677
  br label %if.end9, !dbg !15677

if.end9:                                          ; preds = %if.then7, %if.end
  br label %for.inc, !dbg !15678

for.inc:                                          ; preds = %if.end9, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !15679, metadata !DIExpression()), !dbg !15681
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15681
  %bus_list11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 0, !dbg !15681
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list11, i32 0, i32 0, !dbg !15681
  %21 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !15681
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !15681
  store i8* %22, i8** %__mptr10, align 8, !dbg !15681
  br label %do.body13, !dbg !15681

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !15682

do.end14:                                         ; preds = %do.body13
  %23 = load i8*, i8** %__mptr10, align 8, !dbg !15681
  %add.ptr16 = getelementptr i8, i8* %23, i64 0, !dbg !15681
  %24 = bitcast i8* %add.ptr16 to %struct.pci_dev*, !dbg !15681
  store %struct.pci_dev* %24, %struct.pci_dev** %tmp15, align 8, !dbg !15682
  %25 = load %struct.pci_dev*, %struct.pci_dev** %tmp15, align 8, !dbg !15681
  store %struct.pci_dev* %25, %struct.pci_dev** %dev, align 8, !dbg !15656
  br label %for.cond, !dbg !15656, !llvm.loop !15684

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15686
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_slot_restore_locked(%struct.pci_slot* %slot) #0 !dbg !15687 {
entry:
  %slot.addr = alloca %struct.pci_slot*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.pci_dev*, align 8
  store %struct.pci_slot* %slot, %struct.pci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_slot** %slot.addr, metadata !15688, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !15690, metadata !DIExpression()), !dbg !15691
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15692, metadata !DIExpression()), !dbg !15695
  %0 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15695
  %bus = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %0, i32 0, i32 0, !dbg !15695
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !15695
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %1, i32 0, i32 3, !dbg !15695
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !15695
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15695
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !15695
  store i8* %3, i8** %__mptr, align 8, !dbg !15695
  br label %do.body, !dbg !15695

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15696

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !15695
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !15695
  %5 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !15695
  store %struct.pci_dev* %5, %struct.pci_dev** %tmp, align 8, !dbg !15696
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !15695
  store %struct.pci_dev* %6, %struct.pci_dev** %dev, align 8, !dbg !15698
  br label %for.cond, !dbg !15698

for.cond:                                         ; preds = %do.end14, %do.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15699
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 0, !dbg !15699
  %8 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15699
  %bus1 = getelementptr inbounds %struct.pci_slot, %struct.pci_slot* %8, i32 0, i32 0, !dbg !15699
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus1, align 8, !dbg !15699
  %devices2 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %9, i32 0, i32 3, !dbg !15699
  %cmp = icmp eq %struct.list_head* %bus_list, %devices2, !dbg !15699
  %lnot = xor i1 %cmp, true, !dbg !15699
  br i1 %lnot, label %for.body, label %for.end, !dbg !15698

for.body:                                         ; preds = %for.cond
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15701
  %slot3 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 5, !dbg !15704
  %11 = load %struct.pci_slot*, %struct.pci_slot** %slot3, align 8, !dbg !15704
  %tobool = icmp ne %struct.pci_slot* %11, null, !dbg !15701
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !15705

lor.lhs.false:                                    ; preds = %for.body
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15706
  %slot4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 5, !dbg !15707
  %13 = load %struct.pci_slot*, %struct.pci_slot** %slot4, align 8, !dbg !15707
  %14 = load %struct.pci_slot*, %struct.pci_slot** %slot.addr, align 8, !dbg !15708
  %cmp5 = icmp ne %struct.pci_slot* %13, %14, !dbg !15709
  br i1 %cmp5, label %if.then, label %if.end, !dbg !15710

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !15711

if.end:                                           ; preds = %lor.lhs.false
  %15 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15712
  call void @pci_dev_restore(%struct.pci_dev* %15) #11, !dbg !15713
  %16 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15714
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 2, !dbg !15716
  %17 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !15716
  %tobool6 = icmp ne %struct.pci_bus* %17, null, !dbg !15714
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !15717

if.then7:                                         ; preds = %if.end
  %18 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15718
  %subordinate8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 2, !dbg !15719
  %19 = load %struct.pci_bus*, %struct.pci_bus** %subordinate8, align 8, !dbg !15719
  call void @pci_bus_restore_locked(%struct.pci_bus* %19) #11, !dbg !15720
  br label %if.end9, !dbg !15720

if.end9:                                          ; preds = %if.then7, %if.end
  br label %for.inc, !dbg !15721

for.inc:                                          ; preds = %if.end9, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !15722, metadata !DIExpression()), !dbg !15724
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15724
  %bus_list11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 0, !dbg !15724
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list11, i32 0, i32 0, !dbg !15724
  %21 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !15724
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !15724
  store i8* %22, i8** %__mptr10, align 8, !dbg !15724
  br label %do.body13, !dbg !15724

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !15725

do.end14:                                         ; preds = %do.body13
  %23 = load i8*, i8** %__mptr10, align 8, !dbg !15724
  %add.ptr16 = getelementptr i8, i8* %23, i64 0, !dbg !15724
  %24 = bitcast i8* %add.ptr16 to %struct.pci_dev*, !dbg !15724
  store %struct.pci_dev* %24, %struct.pci_dev** %tmp15, align 8, !dbg !15725
  %25 = load %struct.pci_dev*, %struct.pci_dev** %tmp15, align 8, !dbg !15724
  store %struct.pci_dev* %25, %struct.pci_dev** %dev, align 8, !dbg !15699
  br label %for.cond, !dbg !15699, !llvm.loop !15727

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_bus_trylock(%struct.pci_bus* %bus) #0 !dbg !15730 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.pci_dev*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp21 = alloca %struct.pci_dev*, align 8
  %__mptr35 = alloca i8*, align 8
  %tmp40 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !15731, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !15733, metadata !DIExpression()), !dbg !15734
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15735, metadata !DIExpression()), !dbg !15738
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15738
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 3, !dbg !15738
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !15738
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15738
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !15738
  store i8* %2, i8** %__mptr, align 8, !dbg !15738
  br label %do.body, !dbg !15738

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15739

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !15738
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !15738
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !15738
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !15739
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !15738
  store %struct.pci_dev* %5, %struct.pci_dev** %dev, align 8, !dbg !15741
  br label %for.cond, !dbg !15741

for.cond:                                         ; preds = %do.end14, %do.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15742
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 0, !dbg !15742
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15742
  %devices1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 3, !dbg !15742
  %cmp = icmp eq %struct.list_head* %bus_list, %devices1, !dbg !15742
  %lnot = xor i1 %cmp, true, !dbg !15742
  br i1 %lnot, label %for.body, label %for.end, !dbg !15741

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15744
  %call = call i32 @pci_dev_trylock(%struct.pci_dev* %8) #11, !dbg !15747
  %tobool = icmp ne i32 %call, 0, !dbg !15747
  br i1 %tobool, label %if.end, label %if.then, !dbg !15748

if.then:                                          ; preds = %for.body
  br label %unlock, !dbg !15749

if.end:                                           ; preds = %for.body
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15750
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 2, !dbg !15752
  %10 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !15752
  %tobool2 = icmp ne %struct.pci_bus* %10, null, !dbg !15750
  br i1 %tobool2, label %if.then3, label %if.end9, !dbg !15753

if.then3:                                         ; preds = %if.end
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15754
  %subordinate4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 2, !dbg !15757
  %12 = load %struct.pci_bus*, %struct.pci_bus** %subordinate4, align 8, !dbg !15757
  %call5 = call i32 @pci_bus_trylock(%struct.pci_bus* %12) #11, !dbg !15758
  %tobool6 = icmp ne i32 %call5, 0, !dbg !15758
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !15759

if.then7:                                         ; preds = %if.then3
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15760
  call void @pci_dev_unlock(%struct.pci_dev* %13) #11, !dbg !15762
  br label %unlock, !dbg !15763

if.end8:                                          ; preds = %if.then3
  br label %if.end9, !dbg !15764

if.end9:                                          ; preds = %if.end8, %if.end
  br label %for.inc, !dbg !15765

for.inc:                                          ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !15766, metadata !DIExpression()), !dbg !15768
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15768
  %bus_list11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 0, !dbg !15768
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list11, i32 0, i32 0, !dbg !15768
  %15 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !15768
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !15768
  store i8* %16, i8** %__mptr10, align 8, !dbg !15768
  br label %do.body13, !dbg !15768

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !15769

do.end14:                                         ; preds = %do.body13
  %17 = load i8*, i8** %__mptr10, align 8, !dbg !15768
  %add.ptr16 = getelementptr i8, i8* %17, i64 0, !dbg !15768
  %18 = bitcast i8* %add.ptr16 to %struct.pci_dev*, !dbg !15768
  store %struct.pci_dev* %18, %struct.pci_dev** %tmp15, align 8, !dbg !15769
  %19 = load %struct.pci_dev*, %struct.pci_dev** %tmp15, align 8, !dbg !15768
  store %struct.pci_dev* %19, %struct.pci_dev** %dev, align 8, !dbg !15742
  br label %for.cond, !dbg !15742, !llvm.loop !15771

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !15773
  br label %return, !dbg !15773

unlock:                                           ; preds = %if.then7, %if.then
  call void @llvm.dbg.label(metadata !15774), !dbg !15775
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !15776, metadata !DIExpression()), !dbg !15779
  %20 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15779
  %bus_list18 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 0, !dbg !15779
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list18, i32 0, i32 1, !dbg !15779
  %21 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !15779
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !15779
  store i8* %22, i8** %__mptr17, align 8, !dbg !15779
  br label %do.body19, !dbg !15779

do.body19:                                        ; preds = %unlock
  br label %do.end20, !dbg !15780

do.end20:                                         ; preds = %do.body19
  %23 = load i8*, i8** %__mptr17, align 8, !dbg !15779
  %add.ptr22 = getelementptr i8, i8* %23, i64 0, !dbg !15779
  %24 = bitcast i8* %add.ptr22 to %struct.pci_dev*, !dbg !15779
  store %struct.pci_dev* %24, %struct.pci_dev** %tmp21, align 8, !dbg !15780
  %25 = load %struct.pci_dev*, %struct.pci_dev** %tmp21, align 8, !dbg !15779
  store %struct.pci_dev* %25, %struct.pci_dev** %dev, align 8, !dbg !15782
  br label %for.cond23, !dbg !15782

for.cond23:                                       ; preds = %do.end39, %do.end20
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15783
  %bus_list24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 0, !dbg !15783
  %27 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15783
  %devices25 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %27, i32 0, i32 3, !dbg !15783
  %cmp26 = icmp eq %struct.list_head* %bus_list24, %devices25, !dbg !15783
  %lnot27 = xor i1 %cmp26, true, !dbg !15783
  br i1 %lnot27, label %for.body28, label %for.end42, !dbg !15782

for.body28:                                       ; preds = %for.cond23
  %28 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15785
  %subordinate29 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 2, !dbg !15788
  %29 = load %struct.pci_bus*, %struct.pci_bus** %subordinate29, align 8, !dbg !15788
  %tobool30 = icmp ne %struct.pci_bus* %29, null, !dbg !15785
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !15789

if.then31:                                        ; preds = %for.body28
  %30 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15790
  %subordinate32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 2, !dbg !15791
  %31 = load %struct.pci_bus*, %struct.pci_bus** %subordinate32, align 8, !dbg !15791
  call void @pci_bus_unlock(%struct.pci_bus* %31) #11, !dbg !15792
  br label %if.end33, !dbg !15792

if.end33:                                         ; preds = %if.then31, %for.body28
  %32 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15793
  call void @pci_dev_unlock(%struct.pci_dev* %32) #11, !dbg !15794
  br label %for.inc34, !dbg !15795

for.inc34:                                        ; preds = %if.end33
  call void @llvm.dbg.declare(metadata i8** %__mptr35, metadata !15796, metadata !DIExpression()), !dbg !15798
  %33 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15798
  %bus_list36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 0, !dbg !15798
  %prev37 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list36, i32 0, i32 1, !dbg !15798
  %34 = load %struct.list_head*, %struct.list_head** %prev37, align 8, !dbg !15798
  %35 = bitcast %struct.list_head* %34 to i8*, !dbg !15798
  store i8* %35, i8** %__mptr35, align 8, !dbg !15798
  br label %do.body38, !dbg !15798

do.body38:                                        ; preds = %for.inc34
  br label %do.end39, !dbg !15799

do.end39:                                         ; preds = %do.body38
  %36 = load i8*, i8** %__mptr35, align 8, !dbg !15798
  %add.ptr41 = getelementptr i8, i8* %36, i64 0, !dbg !15798
  %37 = bitcast i8* %add.ptr41 to %struct.pci_dev*, !dbg !15798
  store %struct.pci_dev* %37, %struct.pci_dev** %tmp40, align 8, !dbg !15799
  %38 = load %struct.pci_dev*, %struct.pci_dev** %tmp40, align 8, !dbg !15798
  store %struct.pci_dev* %38, %struct.pci_dev** %dev, align 8, !dbg !15783
  br label %for.cond23, !dbg !15783, !llvm.loop !15801

for.end42:                                        ; preds = %for.cond23
  store i32 0, i32* %retval, align 4, !dbg !15803
  br label %return, !dbg !15803

return:                                           ; preds = %for.end42, %for.end
  %39 = load i32, i32* %retval, align 4, !dbg !15804
  ret i32 %39, !dbg !15804
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bus_save_and_disable_locked(%struct.pci_bus* %bus) #0 !dbg !15805 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !15806, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !15808, metadata !DIExpression()), !dbg !15809
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15810, metadata !DIExpression()), !dbg !15813
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15813
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 3, !dbg !15813
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !15813
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15813
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !15813
  store i8* %2, i8** %__mptr, align 8, !dbg !15813
  br label %do.body, !dbg !15813

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15814

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !15813
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !15813
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !15813
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !15814
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !15813
  store %struct.pci_dev* %5, %struct.pci_dev** %dev, align 8, !dbg !15816
  br label %for.cond, !dbg !15816

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15817
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 0, !dbg !15817
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15817
  %devices1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 3, !dbg !15817
  %cmp = icmp eq %struct.list_head* %bus_list, %devices1, !dbg !15817
  %lnot = xor i1 %cmp, true, !dbg !15817
  br i1 %lnot, label %for.body, label %for.end, !dbg !15816

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15819
  call void @pci_dev_save_and_disable(%struct.pci_dev* %8) #11, !dbg !15821
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15822
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 2, !dbg !15824
  %10 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !15824
  %tobool = icmp ne %struct.pci_bus* %10, null, !dbg !15822
  br i1 %tobool, label %if.then, label %if.end, !dbg !15825

if.then:                                          ; preds = %for.body
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15826
  %subordinate2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 2, !dbg !15827
  %12 = load %struct.pci_bus*, %struct.pci_bus** %subordinate2, align 8, !dbg !15827
  call void @pci_bus_save_and_disable_locked(%struct.pci_bus* %12) #11, !dbg !15828
  br label %if.end, !dbg !15828

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !15829

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !15830, metadata !DIExpression()), !dbg !15832
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15832
  %bus_list4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 0, !dbg !15832
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list4, i32 0, i32 0, !dbg !15832
  %14 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !15832
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !15832
  store i8* %15, i8** %__mptr3, align 8, !dbg !15832
  br label %do.body6, !dbg !15832

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !15833

do.end7:                                          ; preds = %do.body6
  %16 = load i8*, i8** %__mptr3, align 8, !dbg !15832
  %add.ptr9 = getelementptr i8, i8* %16, i64 0, !dbg !15832
  %17 = bitcast i8* %add.ptr9 to %struct.pci_dev*, !dbg !15832
  store %struct.pci_dev* %17, %struct.pci_dev** %tmp8, align 8, !dbg !15833
  %18 = load %struct.pci_dev*, %struct.pci_dev** %tmp8, align 8, !dbg !15832
  store %struct.pci_dev* %18, %struct.pci_dev** %dev, align 8, !dbg !15817
  br label %for.cond, !dbg !15817, !llvm.loop !15835

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_bus_restore_locked(%struct.pci_bus* %bus) #0 !dbg !15838 {
entry:
  %bus.addr = alloca %struct.pci_bus*, align 8
  %dev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.pci_dev*, align 8
  store %struct.pci_bus* %bus, %struct.pci_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus.addr, metadata !15839, metadata !DIExpression()), !dbg !15840
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev, metadata !15841, metadata !DIExpression()), !dbg !15842
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15843, metadata !DIExpression()), !dbg !15846
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15846
  %devices = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 3, !dbg !15846
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !15846
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15846
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !15846
  store i8* %2, i8** %__mptr, align 8, !dbg !15846
  br label %do.body, !dbg !15846

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15847

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !15846
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !15846
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !15846
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !15847
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !15846
  store %struct.pci_dev* %5, %struct.pci_dev** %dev, align 8, !dbg !15849
  br label %for.cond, !dbg !15849

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15850
  %bus_list = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 0, !dbg !15850
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus.addr, align 8, !dbg !15850
  %devices1 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %7, i32 0, i32 3, !dbg !15850
  %cmp = icmp eq %struct.list_head* %bus_list, %devices1, !dbg !15850
  %lnot = xor i1 %cmp, true, !dbg !15850
  br i1 %lnot, label %for.body, label %for.end, !dbg !15849

for.body:                                         ; preds = %for.cond
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15852
  call void @pci_dev_restore(%struct.pci_dev* %8) #11, !dbg !15854
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15855
  %subordinate = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 2, !dbg !15857
  %10 = load %struct.pci_bus*, %struct.pci_bus** %subordinate, align 8, !dbg !15857
  %tobool = icmp ne %struct.pci_bus* %10, null, !dbg !15855
  br i1 %tobool, label %if.then, label %if.end, !dbg !15858

if.then:                                          ; preds = %for.body
  %11 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15859
  %subordinate2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 2, !dbg !15860
  %12 = load %struct.pci_bus*, %struct.pci_bus** %subordinate2, align 8, !dbg !15860
  call void @pci_bus_restore_locked(%struct.pci_bus* %12) #11, !dbg !15861
  br label %if.end, !dbg !15861

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !15862

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !15863, metadata !DIExpression()), !dbg !15865
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !15865
  %bus_list4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 0, !dbg !15865
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %bus_list4, i32 0, i32 0, !dbg !15865
  %14 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !15865
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !15865
  store i8* %15, i8** %__mptr3, align 8, !dbg !15865
  br label %do.body6, !dbg !15865

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !15866

do.end7:                                          ; preds = %do.body6
  %16 = load i8*, i8** %__mptr3, align 8, !dbg !15865
  %add.ptr9 = getelementptr i8, i8* %16, i64 0, !dbg !15865
  %17 = bitcast i8* %add.ptr9 to %struct.pci_dev*, !dbg !15865
  store %struct.pci_dev* %17, %struct.pci_dev** %tmp8, align 8, !dbg !15866
  %18 = load %struct.pci_dev*, %struct.pci_dev** %tmp8, align 8, !dbg !15865
  store %struct.pci_dev* %18, %struct.pci_dev** %dev, align 8, !dbg !15850
  br label %for.cond, !dbg !15850, !llvm.loop !15868

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !15871 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !15875, metadata !DIExpression()), !dbg !15877
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !15879, metadata !DIExpression()), !dbg !15880
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !15881, metadata !DIExpression()), !dbg !15883
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !15885, metadata !DIExpression()), !dbg !15886
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !15887, metadata !DIExpression()), !dbg !15888
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !15889, metadata !DIExpression()), !dbg !15890
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !15891
  %1 = load i64, i64* %nr.addr, align 8, !dbg !15892
  %div = sdiv i64 %1, 64, !dbg !15892
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !15893
  %2 = bitcast i64* %add.ptr to i8*, !dbg !15891
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !15894
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !15895
  %conv.i = trunc i64 %4 to i32, !dbg !15895
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !15896
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !15897
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !15897
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #14, !dbg !15897
  %7 = load i64, i64* %nr.addr, align 8, !dbg !15898
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !15899
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !15900
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !15901
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #10, !dbg !15902, !srcloc !15903
  ret void, !dbg !15904
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local void @__bitmap_set(i64*, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_has_flag(i32 %flag) #0 !dbg !15905 {
entry:
  %flag.addr = alloca i32, align 4
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !15906, metadata !DIExpression()), !dbg !15907
  %0 = load i32, i32* @pci_flags, align 4, !dbg !15908
  %1 = load i32, i32* %flag.addr, align 4, !dbg !15909
  %and = and i32 %0, %1, !dbg !15910
  ret i32 %and, !dbg !15911
}

; Function Attrs: noredzone
declare dso_local i32 @bus_create_file(%struct.bus_type*, %struct.bus_attribute*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @resource_alignment_show(%struct.bus_type* %bus, i8* %buf) #0 !dbg !15912 {
entry:
  %lock.addr.i13 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i13, metadata !13490, metadata !DIExpression()), !dbg !15913
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13494, metadata !DIExpression()), !dbg !15915
  %bus.addr = alloca %struct.bus_type*, align 8
  %buf.addr = alloca i8*, align 8
  %count = alloca i64, align 8
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !15917, metadata !DIExpression()), !dbg !15918
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15919, metadata !DIExpression()), !dbg !15920
  call void @llvm.dbg.declare(metadata i64* %count, metadata !15921, metadata !DIExpression()), !dbg !15922
  store i64 0, i64* %count, align 8, !dbg !15922
  store %struct.spinlock* @resource_alignment_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15923, !srcloc !13515
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15924
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !15924
  %rlock.i = bitcast %union.anon* %1 to %struct.raw_spinlock*, !dbg !15924
  %2 = load i8*, i8** @resource_alignment_param, align 8, !dbg !15925
  %tobool = icmp ne i8* %2, null, !dbg !15925
  br i1 %tobool, label %if.then, label %if.end, !dbg !15927

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !15928
  %4 = load i8*, i8** @resource_alignment_param, align 8, !dbg !15929
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %3, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.82, i64 0, i64 0), i8* %4) #11, !dbg !15930
  %conv = sext i32 %call to i64, !dbg !15930
  store i64 %conv, i64* %count, align 8, !dbg !15931
  br label %if.end, !dbg !15932

if.end:                                           ; preds = %if.then, %entry
  store %struct.spinlock* @resource_alignment_lock, %struct.spinlock** %lock.addr.i13, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15933, !srcloc !13608
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i13, align 8, !dbg !15934
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !15934
  %rlock.i14 = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !15934
  %7 = load i64, i64* %count, align 8, !dbg !15935
  %cmp = icmp uge i64 %7, 2, !dbg !15937
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !15938

land.lhs.true:                                    ; preds = %if.end
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !15939
  %9 = load i64, i64* %count, align 8, !dbg !15940
  %sub = sub i64 %9, 2, !dbg !15941
  %arrayidx = getelementptr i8, i8* %8, i64 %sub, !dbg !15939
  %10 = load i8, i8* %arrayidx, align 1, !dbg !15939
  %conv2 = sext i8 %10 to i32, !dbg !15939
  %cmp3 = icmp ne i32 %conv2, 10, !dbg !15942
  br i1 %cmp3, label %land.lhs.true5, label %if.end12, !dbg !15943

land.lhs.true5:                                   ; preds = %land.lhs.true
  %11 = load i64, i64* %count, align 8, !dbg !15944
  %cmp6 = icmp ult i64 %11, 4095, !dbg !15945
  br i1 %cmp6, label %if.then8, label %if.end12, !dbg !15946

if.then8:                                         ; preds = %land.lhs.true5
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !15947
  %13 = load i64, i64* %count, align 8, !dbg !15949
  %sub9 = sub i64 %13, 1, !dbg !15950
  %arrayidx10 = getelementptr i8, i8* %12, i64 %sub9, !dbg !15947
  store i8 10, i8* %arrayidx10, align 1, !dbg !15951
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !15952
  %15 = load i64, i64* %count, align 8, !dbg !15953
  %inc = add i64 %15, 1, !dbg !15953
  store i64 %inc, i64* %count, align 8, !dbg !15953
  %arrayidx11 = getelementptr i8, i8* %14, i64 %15, !dbg !15952
  store i8 0, i8* %arrayidx11, align 1, !dbg !15954
  br label %if.end12, !dbg !15955

if.end12:                                         ; preds = %if.then8, %land.lhs.true5, %land.lhs.true, %if.end
  %16 = load i64, i64* %count, align 8, !dbg !15956
  ret i64 %16, !dbg !15957
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @resource_alignment_store(%struct.bus_type* %bus, i8* %buf, i64 %count) #0 !dbg !15958 {
entry:
  %lock.addr.i1 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i1, metadata !13490, metadata !DIExpression()), !dbg !15959
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13494, metadata !DIExpression()), !dbg !15961
  %retval = alloca i64, align 8
  %bus.addr = alloca %struct.bus_type*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %param = alloca i8*, align 8
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !15963, metadata !DIExpression()), !dbg !15964
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15965, metadata !DIExpression()), !dbg !15966
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15967, metadata !DIExpression()), !dbg !15968
  call void @llvm.dbg.declare(metadata i8** %param, metadata !15969, metadata !DIExpression()), !dbg !15970
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15971
  %1 = load i64, i64* %count.addr, align 8, !dbg !15972
  %call = call i8* @kstrndup(i8* %0, i64 %1, i32 3264) #11, !dbg !15973
  store i8* %call, i8** %param, align 8, !dbg !15970
  %2 = load i8*, i8** %param, align 8, !dbg !15974
  %tobool = icmp ne i8* %2, null, !dbg !15974
  br i1 %tobool, label %if.end, label %if.then, !dbg !15976

if.then:                                          ; preds = %entry
  store i64 -12, i64* %retval, align 8, !dbg !15977
  br label %return, !dbg !15977

if.end:                                           ; preds = %entry
  store %struct.spinlock* @resource_alignment_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15978, !srcloc !13515
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15979
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !15979
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !15979
  %5 = load i8*, i8** @resource_alignment_param, align 8, !dbg !15980
  call void @kfree(i8* %5) #11, !dbg !15981
  %6 = load i8*, i8** %param, align 8, !dbg !15982
  store i8* %6, i8** @resource_alignment_param, align 8, !dbg !15983
  store %struct.spinlock* @resource_alignment_lock, %struct.spinlock** %lock.addr.i1, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15984, !srcloc !13608
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i1, align 8, !dbg !15985
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !15985
  %rlock.i2 = bitcast %union.anon* %8 to %struct.raw_spinlock*, !dbg !15985
  %9 = load i64, i64* %count.addr, align 8, !dbg !15986
  store i64 %9, i64* %retval, align 8, !dbg !15987
  br label %return, !dbg !15987

return:                                           ; preds = %if.end, %if.then
  %10 = load i64, i64* %retval, align 8, !dbg !15988
  ret i64 %10, !dbg !15988
}

; Function Attrs: noredzone
declare dso_local i32 @scnprintf(i8*, i64, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i8* @kstrndup(i8*, i64, i32) #3

; Function Attrs: noredzone
declare dso_local i8* @strchr(i8*, i32) #3

; Function Attrs: noredzone
declare dso_local void @pci_no_msi() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_no_aer() #0 !dbg !15989 {
entry:
  ret void, !dbg !15990
}

; Function Attrs: noredzone
declare dso_local void @pci_realloc_get_opt(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_no_domains() #0 !dbg !15991 {
entry:
  store i32 0, i32* @pci_domains_supported, align 4, !dbg !15992
  ret void, !dbg !15993
}

; Function Attrs: noredzone
declare dso_local i64 @memparse(i8*, i8**) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcie_ecrc_get_policy(i8* %str) #0 !dbg !15994 {
entry:
  %str.addr = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !15997, metadata !DIExpression()), !dbg !15998
  ret void, !dbg !15999
}

; Function Attrs: noredzone
declare dso_local i64 @simple_strtoul(i8*, i8**, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_add_flags(i32 %flags) #0 !dbg !16000 {
entry:
  %flags.addr = alloca i32, align 4
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16001, metadata !DIExpression()), !dbg !16002
  %0 = load i32, i32* %flags.addr, align 4, !dbg !16003
  %1 = load i32, i32* @pci_flags, align 4, !dbg !16004
  %or = or i32 %1, %0, !dbg !16004
  store i32 %or, i32* @pci_flags, align 4, !dbg !16004
  ret void, !dbg !16005
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kstrdup(i8*, i32) #3

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone willreturn }
attributes #8 = { nounwind willreturn }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { noredzone nounwind }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4882}
!llvm.module.flags = !{!4883, !4884, !4885, !4886}
!llvm.ident = !{!4887}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pci_slot_mutex", scope: !2, file: !3, line: 36, type: !1293, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !257, globals: !4704, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/pci/pci.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !14, !21, !27, !32, !38, !45, !51, !60, !68, !74, !81, !89, !95, !109, !115, !128, !133, !144, !149, !176, !182, !193, !203, !210, !243, !248}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pcie_bus_config_types", file: !6, line: 973, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13}
!9 = !DIEnumerator(name: "PCIE_BUS_TUNE_OFF", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "PCIE_BUS_DEFAULT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "PCIE_BUS_SAFE", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "PCIE_BUS_PERFORMANCE", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "PCIE_BUS_PEER2PEER", value: 4, isUnsigned: true)
!14 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !15, line: 15, baseType: !7, size: 32, elements: !16)
!15 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!16 = !{!17, !18, !19, !20}
!17 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!20 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !22, line: 546, baseType: !7, size: 32, elements: !23)
!22 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!23 = !{!24, !25, !26}
!24 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!25 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!26 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !28, line: 65, baseType: !7, size: 32, elements: !29)
!28 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!29 = !{!30, !31}
!30 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!31 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!32 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !33, line: 16, baseType: !7, size: 32, elements: !34)
!33 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!34 = !{!35, !36, !37}
!35 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!36 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!37 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!38 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !39, line: 59, baseType: !7, size: 32, elements: !40)
!39 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!40 = !{!41, !42, !43, !44}
!41 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!43 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!44 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !46, line: 54, baseType: !7, size: 32, elements: !47)
!46 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!47 = !{!48, !49, !50}
!48 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!49 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!50 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !52, line: 296, baseType: !7, size: 32, elements: !53)
!52 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!53 = !{!54, !55, !56, !57, !58, !59}
!54 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!55 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!56 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!57 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!58 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !61, line: 9, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65, !66, !67}
!63 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!67 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !69, line: 26, baseType: !7, size: 32, elements: !70)
!69 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!70 = !{!71, !72, !73}
!71 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!72 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!73 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !75, line: 343, baseType: !7, size: 32, elements: !76)
!75 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!76 = !{!77, !78, !79, !80}
!77 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!79 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!80 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!81 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !82, line: 524, baseType: !7, size: 32, elements: !83)
!82 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!83 = !{!84, !85, !86, !87, !88}
!84 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!88 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !82, line: 502, baseType: !7, size: 32, elements: !90)
!90 = !{!91, !92, !93, !94}
!91 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !96, line: 76, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108}
!98 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!109 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !110, line: 44, baseType: !7, size: 32, elements: !111)
!110 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!111 = !{!112, !113, !114}
!112 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!114 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_dev_flags", file: !6, line: 207, baseType: !7, size: 32, elements: !116)
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127}
!117 = !DIEnumerator(name: "PCI_DEV_FLAGS_MSI_INTX_DISABLE_BUG", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_D3", value: 2, isUnsigned: true)
!119 = !DIEnumerator(name: "PCI_DEV_FLAGS_ASSIGNED", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "PCI_DEV_FLAGS_ACS_ENABLED_QUIRK", value: 8, isUnsigned: true)
!121 = !DIEnumerator(name: "PCI_DEV_FLAG_PCIE_BRIDGE_ALIAS", value: 32, isUnsigned: true)
!122 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_BUS_RESET", value: 64, isUnsigned: true)
!123 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_PM_RESET", value: 128, isUnsigned: true)
!124 = !DIEnumerator(name: "PCI_DEV_FLAGS_VPD_REF_F0", value: 256, isUnsigned: true)
!125 = !DIEnumerator(name: "PCI_DEV_FLAGS_BRIDGE_XLATE_ROOT", value: 512, isUnsigned: true)
!126 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_FLR_RESET", value: 1024, isUnsigned: true)
!127 = !DIEnumerator(name: "PCI_DEV_FLAGS_NO_RELAXED_ORDERING", value: 2048, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !129, line: 10, baseType: !7, size: 32, elements: !130)
!129 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!130 = !{!131, !132}
!131 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!133 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 89, baseType: !7, size: 32, elements: !134)
!134 = !{!135, !136, !137, !138, !139, !140, !141, !142, !143}
!135 = !DIEnumerator(name: "PCI_STD_RESOURCES", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "PCI_STD_RESOURCE_END", value: 5, isUnsigned: true)
!137 = !DIEnumerator(name: "PCI_ROM_RESOURCE", value: 6, isUnsigned: true)
!138 = !DIEnumerator(name: "PCI_IOV_RESOURCES", value: 7, isUnsigned: true)
!139 = !DIEnumerator(name: "PCI_IOV_RESOURCE_END", value: 12, isUnsigned: true)
!140 = !DIEnumerator(name: "PCI_BRIDGE_RESOURCES", value: 13, isUnsigned: true)
!141 = !DIEnumerator(name: "PCI_BRIDGE_RESOURCE_END", value: 16, isUnsigned: true)
!142 = !DIEnumerator(name: "PCI_NUM_RESOURCES", value: 17, isUnsigned: true)
!143 = !DIEnumerator(name: "DEVICE_COUNT_RESOURCE", value: 17, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pcie_reset_state", file: !6, line: 195, baseType: !7, size: 32, elements: !145)
!145 = !{!146, !147, !148}
!146 = !DIEnumerator(name: "pcie_deassert_reset", value: 1, isUnsigned: true)
!147 = !DIEnumerator(name: "pcie_warm_reset", value: 2, isUnsigned: true)
!148 = !DIEnumerator(name: "pcie_hot_reset", value: 3, isUnsigned: true)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_bus_speed", file: !6, line: 259, baseType: !7, size: 32, elements: !150)
!150 = !{!151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175}
!151 = !DIEnumerator(name: "PCI_SPEED_33MHz", value: 0, isUnsigned: true)
!152 = !DIEnumerator(name: "PCI_SPEED_66MHz", value: 1, isUnsigned: true)
!153 = !DIEnumerator(name: "PCI_SPEED_66MHz_PCIX", value: 2, isUnsigned: true)
!154 = !DIEnumerator(name: "PCI_SPEED_100MHz_PCIX", value: 3, isUnsigned: true)
!155 = !DIEnumerator(name: "PCI_SPEED_133MHz_PCIX", value: 4, isUnsigned: true)
!156 = !DIEnumerator(name: "PCI_SPEED_66MHz_PCIX_ECC", value: 5, isUnsigned: true)
!157 = !DIEnumerator(name: "PCI_SPEED_100MHz_PCIX_ECC", value: 6, isUnsigned: true)
!158 = !DIEnumerator(name: "PCI_SPEED_133MHz_PCIX_ECC", value: 7, isUnsigned: true)
!159 = !DIEnumerator(name: "PCI_SPEED_66MHz_PCIX_266", value: 9, isUnsigned: true)
!160 = !DIEnumerator(name: "PCI_SPEED_100MHz_PCIX_266", value: 10, isUnsigned: true)
!161 = !DIEnumerator(name: "PCI_SPEED_133MHz_PCIX_266", value: 11, isUnsigned: true)
!162 = !DIEnumerator(name: "AGP_UNKNOWN", value: 12, isUnsigned: true)
!163 = !DIEnumerator(name: "AGP_1X", value: 13, isUnsigned: true)
!164 = !DIEnumerator(name: "AGP_2X", value: 14, isUnsigned: true)
!165 = !DIEnumerator(name: "AGP_4X", value: 15, isUnsigned: true)
!166 = !DIEnumerator(name: "AGP_8X", value: 16, isUnsigned: true)
!167 = !DIEnumerator(name: "PCI_SPEED_66MHz_PCIX_533", value: 17, isUnsigned: true)
!168 = !DIEnumerator(name: "PCI_SPEED_100MHz_PCIX_533", value: 18, isUnsigned: true)
!169 = !DIEnumerator(name: "PCI_SPEED_133MHz_PCIX_533", value: 19, isUnsigned: true)
!170 = !DIEnumerator(name: "PCIE_SPEED_2_5GT", value: 20, isUnsigned: true)
!171 = !DIEnumerator(name: "PCIE_SPEED_5_0GT", value: 21, isUnsigned: true)
!172 = !DIEnumerator(name: "PCIE_SPEED_8_0GT", value: 22, isUnsigned: true)
!173 = !DIEnumerator(name: "PCIE_SPEED_16_0GT", value: 23, isUnsigned: true)
!174 = !DIEnumerator(name: "PCIE_SPEED_32_0GT", value: 24, isUnsigned: true)
!175 = !DIEnumerator(name: "PCI_SPEED_UNKNOWN", value: 255, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_bus_flags", file: !6, line: 238, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181}
!178 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_MSI", value: 1, isUnsigned: true)
!179 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_MMRBC", value: 2, isUnsigned: true)
!180 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_AERSID", value: 4, isUnsigned: true)
!181 = !DIEnumerator(name: "PCI_BUS_FLAGS_NO_EXTCFG", value: 8, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pcie_link_width", file: !6, line: 246, baseType: !7, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188, !189, !190, !191, !192}
!184 = !DIEnumerator(name: "PCIE_LNK_WIDTH_RESRV", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "PCIE_LNK_X1", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "PCIE_LNK_X2", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "PCIE_LNK_X4", value: 4, isUnsigned: true)
!188 = !DIEnumerator(name: "PCIE_LNK_X8", value: 8, isUnsigned: true)
!189 = !DIEnumerator(name: "PCIE_LNK_X12", value: 12, isUnsigned: true)
!190 = !DIEnumerator(name: "PCIE_LNK_X16", value: 16, isUnsigned: true)
!191 = !DIEnumerator(name: "PCIE_LNK_X32", value: 32, isUnsigned: true)
!192 = !DIEnumerator(name: "PCIE_LNK_WIDTH_UNKNOWN", value: 255, isUnsigned: true)
!193 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pci_fixup_pass", file: !6, line: 1903, baseType: !7, size: 32, elements: !194)
!194 = !{!195, !196, !197, !198, !199, !200, !201, !202}
!195 = !DIEnumerator(name: "pci_fixup_early", value: 0, isUnsigned: true)
!196 = !DIEnumerator(name: "pci_fixup_header", value: 1, isUnsigned: true)
!197 = !DIEnumerator(name: "pci_fixup_final", value: 2, isUnsigned: true)
!198 = !DIEnumerator(name: "pci_fixup_enable", value: 3, isUnsigned: true)
!199 = !DIEnumerator(name: "pci_fixup_resume", value: 4, isUnsigned: true)
!200 = !DIEnumerator(name: "pci_fixup_suspend", value: 5, isUnsigned: true)
!201 = !DIEnumerator(name: "pci_fixup_resume_early", value: 6, isUnsigned: true)
!202 = !DIEnumerator(name: "pci_fixup_suspend_late", value: 7, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !204, line: 305, baseType: !7, size: 32, elements: !205)
!204 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!205 = !{!206, !207, !208, !209}
!206 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!207 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!208 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!209 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!210 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !211, line: 30, baseType: !212, size: 64, elements: !213)
!211 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!212 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!213 = !{!214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242}
!214 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!215 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!216 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!217 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!218 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!219 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!220 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!221 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!222 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!223 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!224 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!225 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!226 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!227 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!228 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!229 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!230 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!231 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!232 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!233 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!234 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!235 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!236 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!237 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!238 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!239 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!240 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!241 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!242 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!243 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 182, baseType: !7, size: 32, elements: !244)
!244 = !{!245, !246, !247}
!245 = !DIEnumerator(name: "pci_channel_io_normal", value: 1, isUnsigned: true)
!246 = !DIEnumerator(name: "pci_channel_io_frozen", value: 2, isUnsigned: true)
!247 = !DIEnumerator(name: "pci_channel_io_perm_failure", value: 3, isUnsigned: true)
!248 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 946, baseType: !7, size: 32, elements: !249)
!249 = !{!250, !251, !252, !253, !254, !255, !256}
!250 = !DIEnumerator(name: "PCI_REASSIGN_ALL_RSRC", value: 1, isUnsigned: true)
!251 = !DIEnumerator(name: "PCI_REASSIGN_ALL_BUS", value: 2, isUnsigned: true)
!252 = !DIEnumerator(name: "PCI_PROBE_ONLY", value: 4, isUnsigned: true)
!253 = !DIEnumerator(name: "PCI_CAN_SKIP_ISA_ALIGN", value: 8, isUnsigned: true)
!254 = !DIEnumerator(name: "PCI_ENABLE_PROC_DOMAINS", value: 16, isUnsigned: true)
!255 = !DIEnumerator(name: "PCI_COMPAT_DOMAIN_0", value: 32, isUnsigned: true)
!256 = !DIEnumerator(name: "PCI_SCAN_ALL_PCIE_DEVS", value: 64, isUnsigned: true)
!257 = !{!258, !259, !541, !4124, !4392, !863, !4404, !325, !4405, !2243, !448, !273, !285, !4410, !7, !979, !304, !4688, !4689, !4690, !4693, !212, !4695, !4697, !4699, !4701, !399, !4703, !3506, !543}
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !6, line: 605, size: 8064, elements: !261)
!261 = !{!262, !269, !270, !271, !272, !4261, !4262, !4264, !4265, !4266, !4290, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4384, !4385, !4387, !4388, !4389, !4390, !4391}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !260, file: !6, line: 606, baseType: !263, size: 128)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !264, line: 178, size: 128, elements: !265)
!264 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!265 = !{!266, !268}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !263, file: !264, line: 179, baseType: !267, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !263, file: !264, line: 179, baseType: !267, size: 64, offset: 64)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !260, file: !6, line: 607, baseType: !259, size: 64, offset: 128)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !260, file: !6, line: 608, baseType: !263, size: 128, offset: 192)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !260, file: !6, line: 609, baseType: !263, size: 128, offset: 320)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !260, file: !6, line: 610, baseType: !273, size: 64, offset: 448)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !6, line: 309, size: 19264, elements: !275)
!275 = !{!276, !277, !278, !279, !280, !284, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3507, !4121, !4122, !4123, !4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4210, !4211, !4212, !4213, !4214, !4215, !4217, !4218, !4219, !4222, !4254, !4255, !4256, !4257, !4258, !4259, !4260}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !274, file: !6, line: 310, baseType: !263, size: 128)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !274, file: !6, line: 311, baseType: !259, size: 64, offset: 128)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !274, file: !6, line: 312, baseType: !259, size: 64, offset: 192)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !274, file: !6, line: 314, baseType: !258, size: 64, offset: 256)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !274, file: !6, line: 315, baseType: !281, size: 64, offset: 320)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!282 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !283, line: 84, flags: DIFlagFwdDecl)
!283 = !DIFile(filename: "./include/acpi/acpi_bus.h", directory: "/home/lizy2001/genbc/linux")
!284 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !274, file: !6, line: 316, baseType: !285, size: 64, offset: 384)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !6, line: 69, size: 832, elements: !287)
!287 = !{!288, !289, !290, !343, !344}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !286, file: !6, line: 70, baseType: !259, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !286, file: !6, line: 71, baseType: !263, size: 128, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !286, file: !6, line: 72, baseType: !291, size: 64, offset: 192)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !293, line: 56, size: 384, elements: !294)
!293 = !DIFile(filename: "./include/linux/pci_hotplug.h", directory: "/home/lizy2001/genbc/linux")
!294 = !{!295, !333, !334, !335, !339}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !292, file: !293, line: 57, baseType: !296, size: 64)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot_ops", file: !293, line: 38, size: 576, elements: !299)
!299 = !{!300, !305, !306, !315, !321, !326, !327, !328, !329}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "enable_slot", scope: !298, file: !293, line: 39, baseType: !301, size: 64)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = !DISubroutineType(types: !303)
!303 = !{!304, !291}
!304 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "disable_slot", scope: !298, file: !293, line: 40, baseType: !301, size: 64, offset: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "set_attention_status", scope: !298, file: !293, line: 41, baseType: !307, size: 64, offset: 128)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = !DISubroutineType(types: !309)
!309 = !{!304, !291, !310}
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !311, line: 17, baseType: !312)
!311 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !313, line: 21, baseType: !314)
!313 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!314 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_test", scope: !298, file: !293, line: 42, baseType: !316, size: 64, offset: 192)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DISubroutineType(types: !318)
!318 = !{!304, !291, !319}
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !311, line: 21, baseType: !320)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !313, line: 27, baseType: !7)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "get_power_status", scope: !298, file: !293, line: 43, baseType: !322, size: 64, offset: 256)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{!304, !291, !325}
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "get_attention_status", scope: !298, file: !293, line: 44, baseType: !322, size: 64, offset: 320)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "get_latch_status", scope: !298, file: !293, line: 45, baseType: !322, size: 64, offset: 384)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "get_adapter_status", scope: !298, file: !293, line: 46, baseType: !322, size: 64, offset: 448)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "reset_slot", scope: !298, file: !293, line: 47, baseType: !330, size: 64, offset: 512)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DISubroutineType(types: !332)
!332 = !{!304, !291, !304}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "slot_list", scope: !292, file: !293, line: 60, baseType: !263, size: 128, offset: 64)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "pci_slot", scope: !292, file: !293, line: 61, baseType: !285, size: 64, offset: 192)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !292, file: !293, line: 62, baseType: !336, size: 64, offset: 256)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !338, line: 76, flags: DIFlagFwdDecl)
!338 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!339 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !292, file: !293, line: 63, baseType: !340, size: 64, offset: 320)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!342 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !286, file: !6, line: 73, baseType: !314, size: 8, offset: 256)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !286, file: !6, line: 74, baseType: !345, size: 512, offset: 320)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !346, line: 64, size: 512, elements: !347)
!346 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!347 = !{!348, !349, !350, !352, !412, !3341, !3480, !3485, !3486, !3487, !3488, !3489}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !345, file: !346, line: 65, baseType: !340, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !345, file: !346, line: 66, baseType: !263, size: 128, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !345, file: !346, line: 67, baseType: !351, size: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !345, file: !346, line: 68, baseType: !353, size: 64, offset: 256)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !346, line: 192, size: 704, elements: !355)
!355 = !{!356, !357, !373, !374}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !354, file: !346, line: 193, baseType: !263, size: 128)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !354, file: !346, line: 194, baseType: !358, offset: 128)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !359, line: 83, baseType: !360)
!359 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !359, line: 71, elements: !361)
!361 = !{!362}
!362 = !DIDerivedType(tag: DW_TAG_member, scope: !360, file: !359, line: 72, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !360, file: !359, line: 72, elements: !364)
!364 = !{!365}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !363, file: !359, line: 73, baseType: !366)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !359, line: 20, elements: !367)
!367 = !{!368}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !366, file: !359, line: 21, baseType: !369)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !370, line: 25, baseType: !371)
!370 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !370, line: 25, elements: !372)
!372 = !{}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !354, file: !346, line: 195, baseType: !345, size: 512, offset: 128)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !354, file: !346, line: 196, baseType: !375, size: 64, offset: 640)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !377)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !346, line: 156, size: 192, elements: !378)
!378 = !{!379, !384, !389}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !377, file: !346, line: 157, baseType: !380, size: 64)
!380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !381)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DISubroutineType(types: !383)
!383 = !{!304, !353, !351}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !377, file: !346, line: 158, baseType: !385, size: 64, offset: 64)
!385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !386)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = !DISubroutineType(types: !388)
!388 = !{!340, !353, !351}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !377, file: !346, line: 159, baseType: !390, size: 64, offset: 128)
!390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = !DISubroutineType(types: !393)
!393 = !{!304, !353, !351, !394}
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !346, line: 148, size: 20736, elements: !396)
!396 = !{!397, !402, !406, !407, !411}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !395, file: !346, line: 149, baseType: !398, size: 192)
!398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 192, elements: !400)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!400 = !{!401}
!401 = !DISubrange(count: 3)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !395, file: !346, line: 150, baseType: !403, size: 4096, offset: 192)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 4096, elements: !404)
!404 = !{!405}
!405 = !DISubrange(count: 64)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !395, file: !346, line: 151, baseType: !304, size: 32, offset: 4288)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !395, file: !346, line: 152, baseType: !408, size: 16384, offset: 4320)
!408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 16384, elements: !409)
!409 = !{!410}
!410 = !DISubrange(count: 2048)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !395, file: !346, line: 153, baseType: !304, size: 32, offset: 20704)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !345, file: !346, line: 69, baseType: !413, size: 64, offset: 320)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !346, line: 138, size: 448, elements: !415)
!415 = !{!416, !420, !449, !451, !3303, !3331, !3335}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !414, file: !346, line: 139, baseType: !417, size: 64)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!418 = !DISubroutineType(types: !419)
!419 = !{null, !351}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !414, file: !346, line: 140, baseType: !421, size: 64, offset: 64)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !424, line: 230, size: 128, elements: !425)
!424 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!425 = !{!426, !441}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !423, file: !424, line: 231, baseType: !427, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DISubroutineType(types: !429)
!429 = !{!430, !351, !434, !399}
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !264, line: 60, baseType: !431)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !432, line: 73, baseType: !433)
!432 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !432, line: 15, baseType: !212)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !424, line: 30, size: 128, elements: !436)
!436 = !{!437, !438}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !435, file: !424, line: 31, baseType: !340, size: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !435, file: !424, line: 32, baseType: !439, size: 16, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !264, line: 19, baseType: !440)
!440 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !423, file: !424, line: 232, baseType: !442, size: 64, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DISubroutineType(types: !444)
!444 = !{!430, !351, !434, !340, !445}
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !264, line: 55, baseType: !446)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !432, line: 72, baseType: !447)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !432, line: 16, baseType: !448)
!448 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !414, file: !346, line: 141, baseType: !450, size: 64, offset: 128)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !414, file: !346, line: 142, baseType: !452, size: 64, offset: 192)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !424, line: 84, size: 320, elements: !456)
!456 = !{!457, !458, !462, !3300, !3301}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !455, file: !424, line: 85, baseType: !340, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !455, file: !424, line: 86, baseType: !459, size: 64, offset: 64)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DISubroutineType(types: !461)
!461 = !{!439, !351, !434, !304}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !455, file: !424, line: 88, baseType: !463, size: 64, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!464 = !DISubroutineType(types: !465)
!465 = !{!439, !351, !466, !304}
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !424, line: 168, size: 448, elements: !468)
!468 = !{!469, !470, !471, !472, !3295, !3296}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !467, file: !424, line: 169, baseType: !435, size: 128)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !467, file: !424, line: 170, baseType: !445, size: 64, offset: 128)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !467, file: !424, line: 171, baseType: !258, size: 64, offset: 192)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !467, file: !424, line: 172, baseType: !473, size: 64, offset: 256)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = !DISubroutineType(types: !475)
!475 = !{!430, !476, !351, !466, !399, !650, !445}
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !52, line: 916, size: 1856, align: 32, elements: !478)
!478 = !{!479, !497, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3278, !3279, !3288, !3289, !3290, !3291, !3292, !3293, !3294}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !477, file: !52, line: 920, baseType: !480, size: 128)
!480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !477, file: !52, line: 917, size: 128, elements: !481)
!481 = !{!482, !488}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !480, file: !52, line: 918, baseType: !483, size: 64)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !484, line: 58, size: 64, elements: !485)
!484 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!485 = !{!486}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !483, file: !484, line: 59, baseType: !487, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !480, file: !52, line: 919, baseType: !489, size: 128, align: 64)
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !264, line: 216, size: 128, align: 64, elements: !490)
!490 = !{!491, !493}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !489, file: !264, line: 217, baseType: !492, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !489, file: !264, line: 218, baseType: !494, size: 64, offset: 64)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = !DISubroutineType(types: !496)
!496 = !{null, !492}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !477, file: !52, line: 921, baseType: !498, size: 128, offset: 128)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !499, line: 8, size: 128, elements: !500)
!499 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!500 = !{!501, !505}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !498, file: !499, line: 9, baseType: !502, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !504, line: 18, flags: DIFlagFwdDecl)
!504 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!505 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !498, file: !499, line: 10, baseType: !506, size: 64, offset: 64)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !504, line: 89, size: 1536, elements: !508)
!508 = !{!509, !510, !520, !528, !529, !547, !3228, !3230, !3242, !3243, !3244, !3245, !3246, !3252, !3253, !3254}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !507, file: !504, line: 91, baseType: !7, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !507, file: !504, line: 92, baseType: !511, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !512, line: 277, baseType: !513)
!512 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !512, line: 277, size: 32, elements: !514)
!514 = !{!515}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !513, file: !512, line: 277, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !512, line: 70, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !512, line: 65, size: 32, elements: !518)
!518 = !{!519}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !517, file: !512, line: 66, baseType: !7, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !507, file: !504, line: 93, baseType: !521, size: 128, offset: 64)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !522, line: 38, size: 128, elements: !523)
!522 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!523 = !{!524, !526}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !521, file: !522, line: 39, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !521, file: !522, line: 39, baseType: !527, size: 64, offset: 64)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !507, file: !504, line: 94, baseType: !506, size: 64, offset: 192)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !507, file: !504, line: 95, baseType: !530, size: 128, offset: 256)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !504, line: 47, size: 128, elements: !531)
!531 = !{!532, !544}
!532 = !DIDerivedType(tag: DW_TAG_member, scope: !530, file: !504, line: 48, baseType: !533, size: 64)
!533 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !530, file: !504, line: 48, size: 64, elements: !534)
!534 = !{!535, !540}
!535 = !DIDerivedType(tag: DW_TAG_member, scope: !533, file: !504, line: 49, baseType: !536, size: 64)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !533, file: !504, line: 49, size: 64, elements: !537)
!537 = !{!538, !539}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !536, file: !504, line: 50, baseType: !319, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !536, file: !504, line: 50, baseType: !319, size: 32, offset: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !533, file: !504, line: 52, baseType: !541, size: 64)
!541 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !311, line: 23, baseType: !542)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !313, line: 31, baseType: !543)
!543 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !530, file: !504, line: 54, baseType: !545, size: 64, offset: 64)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !507, file: !504, line: 96, baseType: !548, size: 64, offset: 384)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !52, line: 610, size: 4224, elements: !550)
!550 = !{!551, !552, !553, !561, !568, !569, !717, !2939, !2940, !2941, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !3204, !3212, !3213, !3214, !3224, !3225, !3226, !3227}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !549, file: !52, line: 611, baseType: !439, size: 16)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !549, file: !52, line: 612, baseType: !440, size: 16, offset: 16)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !549, file: !52, line: 613, baseType: !554, size: 32, offset: 32)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !555, line: 23, baseType: !556)
!555 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !555, line: 21, size: 32, elements: !557)
!557 = !{!558}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !556, file: !555, line: 22, baseType: !559, size: 32)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !264, line: 32, baseType: !560)
!560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !432, line: 49, baseType: !7)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !549, file: !52, line: 614, baseType: !562, size: 32, offset: 64)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !555, line: 28, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !555, line: 26, size: 32, elements: !564)
!564 = !{!565}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !563, file: !555, line: 27, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !264, line: 33, baseType: !567)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !432, line: 50, baseType: !7)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !549, file: !52, line: 615, baseType: !7, size: 32, offset: 96)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !549, file: !52, line: 622, baseType: !570, size: 64, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !572)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !52, line: 1864, size: 1536, align: 512, elements: !573)
!573 = !{!574, !578, !591, !595, !601, !605, !611, !615, !619, !623, !627, !628, !634, !638, !664, !693, !697, !703, !708, !712, !713}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !572, file: !52, line: 1865, baseType: !575, size: 64)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DISubroutineType(types: !577)
!577 = !{!506, !548, !506, !7}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !572, file: !52, line: 1866, baseType: !579, size: 64, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!580 = !DISubroutineType(types: !581)
!581 = !{!340, !506, !548, !582}
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !584, line: 10, size: 128, elements: !585)
!584 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!585 = !{!586, !590}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !583, file: !584, line: 11, baseType: !587, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DISubroutineType(types: !589)
!589 = !{null, !258}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !583, file: !584, line: 12, baseType: !258, size: 64, offset: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !572, file: !52, line: 1867, baseType: !592, size: 64, offset: 128)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DISubroutineType(types: !594)
!594 = !{!304, !548, !304}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !572, file: !52, line: 1868, baseType: !596, size: 64, offset: 192)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DISubroutineType(types: !598)
!598 = !{!599, !548, !304}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !52, line: 581, flags: DIFlagFwdDecl)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !572, file: !52, line: 1870, baseType: !602, size: 64, offset: 256)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DISubroutineType(types: !604)
!604 = !{!304, !506, !399, !304}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !572, file: !52, line: 1872, baseType: !606, size: 64, offset: 320)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DISubroutineType(types: !608)
!608 = !{!304, !548, !506, !439, !609}
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !264, line: 30, baseType: !610)
!610 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !572, file: !52, line: 1873, baseType: !612, size: 64, offset: 384)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DISubroutineType(types: !614)
!614 = !{!304, !506, !548, !506}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !572, file: !52, line: 1874, baseType: !616, size: 64, offset: 448)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DISubroutineType(types: !618)
!618 = !{!304, !548, !506}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !572, file: !52, line: 1875, baseType: !620, size: 64, offset: 512)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = !DISubroutineType(types: !622)
!622 = !{!304, !548, !506, !340}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !572, file: !52, line: 1876, baseType: !624, size: 64, offset: 576)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DISubroutineType(types: !626)
!626 = !{!304, !548, !506, !439}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !572, file: !52, line: 1877, baseType: !616, size: 64, offset: 640)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !572, file: !52, line: 1878, baseType: !629, size: 64, offset: 704)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DISubroutineType(types: !631)
!631 = !{!304, !548, !506, !439, !632}
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !264, line: 16, baseType: !633)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !264, line: 13, baseType: !319)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !572, file: !52, line: 1879, baseType: !635, size: 64, offset: 768)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DISubroutineType(types: !637)
!637 = !{!304, !548, !506, !548, !506, !7}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !572, file: !52, line: 1881, baseType: !639, size: 64, offset: 832)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DISubroutineType(types: !641)
!641 = !{!304, !506, !642}
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !52, line: 219, size: 640, elements: !644)
!644 = !{!645, !646, !647, !648, !649, !653, !661, !662, !663}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !643, file: !52, line: 220, baseType: !7, size: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !643, file: !52, line: 221, baseType: !439, size: 16, offset: 32)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !643, file: !52, line: 222, baseType: !554, size: 32, offset: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !643, file: !52, line: 223, baseType: !562, size: 32, offset: 96)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !643, file: !52, line: 224, baseType: !650, size: 64, offset: 128)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !264, line: 46, baseType: !651)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !432, line: 88, baseType: !652)
!652 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !643, file: !52, line: 225, baseType: !654, size: 128, offset: 192)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !655, line: 13, size: 128, elements: !656)
!655 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!656 = !{!657, !660}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !654, file: !655, line: 14, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !655, line: 8, baseType: !659)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !313, line: 30, baseType: !652)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !654, file: !655, line: 15, baseType: !212, size: 64, offset: 64)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !643, file: !52, line: 226, baseType: !654, size: 128, offset: 320)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !643, file: !52, line: 227, baseType: !654, size: 128, offset: 448)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !643, file: !52, line: 234, baseType: !476, size: 64, offset: 576)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !572, file: !52, line: 1882, baseType: !665, size: 64, offset: 896)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DISubroutineType(types: !667)
!667 = !{!304, !668, !670, !319, !7}
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !498)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !672, line: 22, size: 1152, elements: !673)
!672 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!673 = !{!674, !675, !676, !677, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !671, file: !672, line: 23, baseType: !319, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !671, file: !672, line: 24, baseType: !439, size: 16, offset: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !671, file: !672, line: 25, baseType: !7, size: 32, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !671, file: !672, line: 26, baseType: !678, size: 32, offset: 96)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !264, line: 104, baseType: !319)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !671, file: !672, line: 27, baseType: !541, size: 64, offset: 128)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !671, file: !672, line: 28, baseType: !541, size: 64, offset: 192)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !671, file: !672, line: 37, baseType: !541, size: 64, offset: 256)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !671, file: !672, line: 38, baseType: !632, size: 32, offset: 320)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !671, file: !672, line: 39, baseType: !632, size: 32, offset: 352)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !671, file: !672, line: 40, baseType: !554, size: 32, offset: 384)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !671, file: !672, line: 41, baseType: !562, size: 32, offset: 416)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !671, file: !672, line: 42, baseType: !650, size: 64, offset: 448)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !671, file: !672, line: 43, baseType: !654, size: 128, offset: 512)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !671, file: !672, line: 44, baseType: !654, size: 128, offset: 640)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !671, file: !672, line: 45, baseType: !654, size: 128, offset: 768)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !671, file: !672, line: 46, baseType: !654, size: 128, offset: 896)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !671, file: !672, line: 47, baseType: !541, size: 64, offset: 1024)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !671, file: !672, line: 48, baseType: !541, size: 64, offset: 1088)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !572, file: !52, line: 1883, baseType: !694, size: 64, offset: 960)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{!430, !506, !399, !445}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !572, file: !52, line: 1884, baseType: !698, size: 64, offset: 1024)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DISubroutineType(types: !700)
!700 = !{!304, !548, !701, !541, !541}
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !52, line: 50, flags: DIFlagFwdDecl)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !572, file: !52, line: 1886, baseType: !704, size: 64, offset: 1088)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DISubroutineType(types: !706)
!706 = !{!304, !548, !707, !304}
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !572, file: !52, line: 1887, baseType: !709, size: 64, offset: 1152)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = !DISubroutineType(types: !711)
!711 = !{!304, !548, !506, !476, !7, !439}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !572, file: !52, line: 1890, baseType: !624, size: 64, offset: 1216)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !572, file: !52, line: 1891, baseType: !714, size: 64, offset: 1280)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = !DISubroutineType(types: !716)
!716 = !{!304, !548, !599, !304}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !549, file: !52, line: 623, baseType: !718, size: 64, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !52, line: 1416, size: 9472, elements: !720)
!720 = !{!721, !722, !723, !724, !725, !726, !773, !2546, !2628, !2711, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2727, !2731, !2732, !2735, !2736, !2739, !2740, !2741, !2782, !2809, !2810, !2811, !2812, !2813, !2814, !2817, !2819, !2826, !2827, !2829, !2830, !2831, !2890, !2891, !2906, !2907, !2908, !2909, !2910, !2913, !2914, !2915, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !719, file: !52, line: 1417, baseType: !263, size: 128)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !719, file: !52, line: 1418, baseType: !632, size: 32, offset: 128)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !719, file: !52, line: 1419, baseType: !314, size: 8, offset: 160)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !719, file: !52, line: 1420, baseType: !448, size: 64, offset: 192)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !719, file: !52, line: 1421, baseType: !650, size: 64, offset: 256)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !719, file: !52, line: 1422, baseType: !727, size: 64, offset: 320)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !52, line: 2228, size: 576, elements: !729)
!729 = !{!730, !731, !732, !739, !743, !747, !751, !752, !753, !763, !766, !767, !768, !770, !771, !772}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !728, file: !52, line: 2229, baseType: !340, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !728, file: !52, line: 2230, baseType: !304, size: 32, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !728, file: !52, line: 2238, baseType: !733, size: 64, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{!304, !736}
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !738, line: 28, flags: DIFlagFwdDecl)
!738 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!739 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !728, file: !52, line: 2239, baseType: !740, size: 64, offset: 192)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !742)
!742 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !52, line: 70, flags: DIFlagFwdDecl)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !728, file: !52, line: 2240, baseType: !744, size: 64, offset: 256)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{!506, !727, !304, !340, !258}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !728, file: !52, line: 2242, baseType: !748, size: 64, offset: 320)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DISubroutineType(types: !750)
!750 = !{null, !718}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !728, file: !52, line: 2243, baseType: !336, size: 64, offset: 384)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !728, file: !52, line: 2244, baseType: !727, size: 64, offset: 448)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !728, file: !52, line: 2245, baseType: !754, size: 64, offset: 512)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !264, line: 182, size: 64, elements: !755)
!755 = !{!756}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !754, file: !264, line: 183, baseType: !757, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !264, line: 186, size: 128, elements: !759)
!759 = !{!760, !761}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !758, file: !264, line: 187, baseType: !757, size: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !758, file: !264, line: 187, baseType: !762, size: 64, offset: 64)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !728, file: !52, line: 2247, baseType: !764, offset: 576)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !765, line: 187, elements: !372)
!765 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!766 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !728, file: !52, line: 2248, baseType: !764, offset: 576)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !728, file: !52, line: 2249, baseType: !764, offset: 576)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !728, file: !52, line: 2250, baseType: !769, offset: 576)
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !764, elements: !400)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !728, file: !52, line: 2252, baseType: !764, offset: 576)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !728, file: !52, line: 2253, baseType: !764, offset: 576)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !728, file: !52, line: 2254, baseType: !764, offset: 576)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !719, file: !52, line: 1423, baseType: !774, size: 64, offset: 384)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !52, line: 1935, size: 1472, elements: !777)
!777 = !{!778, !782, !786, !787, !791, !797, !801, !802, !803, !807, !811, !812, !813, !814, !820, !825, !826, !833, !834, !835, !836, !2530, !2545}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !776, file: !52, line: 1936, baseType: !779, size: 64)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!548, !718}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !776, file: !52, line: 1937, baseType: !783, size: 64, offset: 64)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DISubroutineType(types: !785)
!785 = !{null, !548}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !776, file: !52, line: 1938, baseType: !783, size: 64, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !776, file: !52, line: 1940, baseType: !788, size: 64, offset: 192)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{null, !548, !304}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !776, file: !52, line: 1941, baseType: !792, size: 64, offset: 256)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DISubroutineType(types: !794)
!794 = !{!304, !548, !795}
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !22, line: 40, flags: DIFlagFwdDecl)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !776, file: !52, line: 1942, baseType: !798, size: 64, offset: 320)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DISubroutineType(types: !800)
!800 = !{!304, !548}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !776, file: !52, line: 1943, baseType: !783, size: 64, offset: 384)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !776, file: !52, line: 1944, baseType: !748, size: 64, offset: 448)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !776, file: !52, line: 1945, baseType: !804, size: 64, offset: 512)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DISubroutineType(types: !806)
!806 = !{!304, !718, !304}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !776, file: !52, line: 1946, baseType: !808, size: 64, offset: 576)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DISubroutineType(types: !810)
!810 = !{!304, !718}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !776, file: !52, line: 1947, baseType: !808, size: 64, offset: 640)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !776, file: !52, line: 1948, baseType: !808, size: 64, offset: 704)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !776, file: !52, line: 1949, baseType: !808, size: 64, offset: 768)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !776, file: !52, line: 1950, baseType: !815, size: 64, offset: 832)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{!304, !506, !818}
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !52, line: 57, flags: DIFlagFwdDecl)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !776, file: !52, line: 1951, baseType: !821, size: 64, offset: 896)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DISubroutineType(types: !823)
!823 = !{!304, !718, !824, !399}
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !776, file: !52, line: 1952, baseType: !748, size: 64, offset: 960)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !776, file: !52, line: 1954, baseType: !827, size: 64, offset: 1024)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{!304, !830, !506}
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !832, line: 539, flags: DIFlagFwdDecl)
!832 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!833 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !776, file: !52, line: 1955, baseType: !827, size: 64, offset: 1088)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !776, file: !52, line: 1956, baseType: !827, size: 64, offset: 1152)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !776, file: !52, line: 1957, baseType: !827, size: 64, offset: 1216)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !776, file: !52, line: 1963, baseType: !837, size: 64, offset: 1280)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{!304, !718, !840, !863}
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !842, line: 68, size: 512, align: 128, elements: !843)
!842 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!843 = !{!844, !845, !2522, !2529}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !841, file: !842, line: 69, baseType: !448, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, scope: !841, file: !842, line: 77, baseType: !846, size: 320, offset: 64)
!846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !841, file: !842, line: 77, size: 320, elements: !847)
!847 = !{!848, !1036, !1041, !1069, !1077, !1083, !2453, !2521}
!848 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 78, baseType: !849, size: 320)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 78, size: 320, elements: !850)
!850 = !{!851, !852, !1034, !1035}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !849, file: !842, line: 84, baseType: !263, size: 128)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !849, file: !842, line: 86, baseType: !853, size: 64, offset: 128)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !52, line: 451, size: 1216, align: 64, elements: !855)
!855 = !{!856, !857, !865, !866, !871, !886, !902, !903, !904, !905, !1027, !1028, !1031, !1032, !1033}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !854, file: !52, line: 452, baseType: !548, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !854, file: !52, line: 453, baseType: !858, size: 128, offset: 64)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !859, line: 292, size: 128, elements: !860)
!859 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!860 = !{!861, !862, !864}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !858, file: !859, line: 293, baseType: !358)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !858, file: !859, line: 295, baseType: !863, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !264, line: 148, baseType: !7)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !858, file: !859, line: 296, baseType: !258, size: 64, offset: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !854, file: !52, line: 454, baseType: !863, size: 32, offset: 192)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !854, file: !52, line: 455, baseType: !867, size: 32, offset: 224)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !264, line: 168, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !264, line: 166, size: 32, elements: !869)
!869 = !{!870}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !868, file: !264, line: 167, baseType: !304, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !854, file: !52, line: 460, baseType: !872, size: 128, offset: 256)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !873, line: 125, size: 128, elements: !874)
!873 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!874 = !{!875, !885}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !872, file: !873, line: 126, baseType: !876, size: 64)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !873, line: 31, size: 64, elements: !877)
!877 = !{!878}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !876, file: !873, line: 32, baseType: !879, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !873, line: 24, size: 192, align: 64, elements: !881)
!881 = !{!882, !883, !884}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !880, file: !873, line: 25, baseType: !448, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !880, file: !873, line: 26, baseType: !879, size: 64, offset: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !880, file: !873, line: 27, baseType: !879, size: 64, offset: 128)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !872, file: !873, line: 127, baseType: !879, size: 64, offset: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !854, file: !52, line: 461, baseType: !887, size: 256, offset: 384)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !888, line: 35, size: 256, elements: !889)
!888 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!889 = !{!890, !898, !899, !901}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !887, file: !888, line: 36, baseType: !891, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !892, line: 13, baseType: !893)
!892 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !264, line: 175, baseType: !894)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !264, line: 173, size: 64, elements: !895)
!895 = !{!896}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !894, file: !264, line: 174, baseType: !897, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !311, line: 22, baseType: !659)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !887, file: !888, line: 42, baseType: !891, size: 64, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !887, file: !888, line: 46, baseType: !900, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !359, line: 29, baseType: !366)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !887, file: !888, line: 47, baseType: !263, size: 128, offset: 128)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !854, file: !52, line: 462, baseType: !448, size: 64, offset: 640)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !854, file: !52, line: 463, baseType: !448, size: 64, offset: 704)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !854, file: !52, line: 464, baseType: !448, size: 64, offset: 768)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !854, file: !52, line: 465, baseType: !906, size: 64, offset: 832)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !908)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !52, line: 367, size: 1408, elements: !909)
!909 = !{!910, !914, !918, !922, !926, !930, !936, !942, !946, !951, !955, !959, !963, !991, !995, !1001, !1002, !1003, !1007, !1012, !1016, !1023}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !908, file: !52, line: 368, baseType: !911, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!304, !840, !795}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !908, file: !52, line: 369, baseType: !915, size: 64, offset: 64)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{!304, !476, !840}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !908, file: !52, line: 372, baseType: !919, size: 64, offset: 128)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DISubroutineType(types: !921)
!921 = !{!304, !853, !795}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !908, file: !52, line: 375, baseType: !923, size: 64, offset: 192)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DISubroutineType(types: !925)
!925 = !{!304, !840}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !908, file: !52, line: 381, baseType: !927, size: 64, offset: 256)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{!304, !476, !853, !267, !7}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !908, file: !52, line: 383, baseType: !931, size: 64, offset: 320)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{null, !934}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !52, line: 290, flags: DIFlagFwdDecl)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !908, file: !52, line: 385, baseType: !937, size: 64, offset: 384)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DISubroutineType(types: !939)
!939 = !{!304, !476, !853, !650, !7, !7, !940, !941}
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !908, file: !52, line: 388, baseType: !943, size: 64, offset: 448)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DISubroutineType(types: !945)
!945 = !{!304, !476, !853, !650, !7, !7, !840, !258}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !908, file: !52, line: 393, baseType: !947, size: 64, offset: 512)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = !DISubroutineType(types: !949)
!949 = !{!950, !853, !950}
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !264, line: 125, baseType: !541)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !908, file: !52, line: 394, baseType: !952, size: 64, offset: 576)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DISubroutineType(types: !954)
!954 = !{null, !840, !7, !7}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !908, file: !52, line: 395, baseType: !956, size: 64, offset: 640)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DISubroutineType(types: !958)
!958 = !{!304, !840, !863}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !908, file: !52, line: 396, baseType: !960, size: 64, offset: 704)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DISubroutineType(types: !962)
!962 = !{null, !840}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !908, file: !52, line: 397, baseType: !964, size: 64, offset: 768)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DISubroutineType(types: !966)
!966 = !{!430, !967, !989}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !52, line: 320, size: 384, elements: !969)
!969 = !{!970, !971, !972, !976, !977, !978, !981, !982}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !968, file: !52, line: 321, baseType: !476, size: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !968, file: !52, line: 326, baseType: !650, size: 64, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !968, file: !52, line: 327, baseType: !973, size: 64, offset: 128)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DISubroutineType(types: !975)
!975 = !{null, !967, !212, !212}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !968, file: !52, line: 328, baseType: !258, size: 64, offset: 192)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !968, file: !52, line: 329, baseType: !304, size: 32, offset: 256)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !968, file: !52, line: 330, baseType: !979, size: 16, offset: 288)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !311, line: 19, baseType: !980)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !313, line: 24, baseType: !440)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !968, file: !52, line: 331, baseType: !979, size: 16, offset: 304)
!982 = !DIDerivedType(tag: DW_TAG_member, scope: !968, file: !52, line: 332, baseType: !983, size: 64, offset: 320)
!983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !968, file: !52, line: 332, size: 64, elements: !984)
!984 = !{!985, !986}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !983, file: !52, line: 333, baseType: !7, size: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !983, file: !52, line: 334, baseType: !987, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !52, line: 334, flags: DIFlagFwdDecl)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !52, line: 64, flags: DIFlagFwdDecl)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !908, file: !52, line: 402, baseType: !992, size: 64, offset: 832)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DISubroutineType(types: !994)
!994 = !{!304, !853, !840, !840, !14}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !908, file: !52, line: 404, baseType: !996, size: 64, offset: 896)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DISubroutineType(types: !998)
!998 = !{!609, !840, !999}
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1000, line: 305, baseType: !7)
!1000 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !908, file: !52, line: 405, baseType: !960, size: 64, offset: 960)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !908, file: !52, line: 406, baseType: !923, size: 64, offset: 1024)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !908, file: !52, line: 407, baseType: !1004, size: 64, offset: 1088)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!304, !840, !448, !448}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !908, file: !52, line: 409, baseType: !1008, size: 64, offset: 1152)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{null, !840, !1011, !1011}
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !908, file: !52, line: 410, baseType: !1013, size: 64, offset: 1216)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!304, !853, !840}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !908, file: !52, line: 413, baseType: !1017, size: 64, offset: 1280)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!304, !1020, !476, !1022}
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !52, line: 61, flags: DIFlagFwdDecl)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !908, file: !52, line: 415, baseType: !1024, size: 64, offset: 1344)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{null, !476}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !854, file: !52, line: 466, baseType: !448, size: 64, offset: 896)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !854, file: !52, line: 467, baseType: !1029, size: 32, offset: 960)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1030, line: 8, baseType: !319)
!1030 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !854, file: !52, line: 468, baseType: !358, offset: 992)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !854, file: !52, line: 469, baseType: !263, size: 128, offset: 1024)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !854, file: !52, line: 470, baseType: !258, size: 64, offset: 1152)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !849, file: !842, line: 87, baseType: !448, size: 64, offset: 192)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !849, file: !842, line: 94, baseType: !448, size: 64, offset: 256)
!1036 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 96, baseType: !1037, size: 64)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 96, size: 64, elements: !1038)
!1038 = !{!1039}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1037, file: !842, line: 101, baseType: !1040, size: 64)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !264, line: 143, baseType: !541)
!1041 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 103, baseType: !1042, size: 320)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 103, size: 320, elements: !1043)
!1043 = !{!1044, !1054, !1057, !1058}
!1044 = !DIDerivedType(tag: DW_TAG_member, scope: !1042, file: !842, line: 104, baseType: !1045, size: 128)
!1045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1042, file: !842, line: 104, size: 128, elements: !1046)
!1046 = !{!1047, !1048}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1045, file: !842, line: 105, baseType: !263, size: 128)
!1048 = !DIDerivedType(tag: DW_TAG_member, scope: !1045, file: !842, line: 106, baseType: !1049, size: 128)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1045, file: !842, line: 106, size: 128, elements: !1050)
!1050 = !{!1051, !1052, !1053}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1049, file: !842, line: 107, baseType: !840, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1049, file: !842, line: 109, baseType: !304, size: 32, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1049, file: !842, line: 110, baseType: !304, size: 32, offset: 96)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1042, file: !842, line: 117, baseType: !1055, size: 64, offset: 128)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !842, line: 117, flags: DIFlagFwdDecl)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1042, file: !842, line: 119, baseType: !258, size: 64, offset: 192)
!1058 = !DIDerivedType(tag: DW_TAG_member, scope: !1042, file: !842, line: 120, baseType: !1059, size: 64, offset: 256)
!1059 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1042, file: !842, line: 120, size: 64, elements: !1060)
!1060 = !{!1061, !1062, !1063}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1059, file: !842, line: 121, baseType: !258, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1059, file: !842, line: 122, baseType: !448, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, scope: !1059, file: !842, line: 123, baseType: !1064, size: 32)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1059, file: !842, line: 123, size: 32, elements: !1065)
!1065 = !{!1066, !1067, !1068}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1064, file: !842, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1064, file: !842, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1064, file: !842, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1069 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 130, baseType: !1070, size: 192)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 130, size: 192, elements: !1071)
!1071 = !{!1072, !1073, !1074, !1075, !1076}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1070, file: !842, line: 131, baseType: !448, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1070, file: !842, line: 134, baseType: !314, size: 8, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1070, file: !842, line: 135, baseType: !314, size: 8, offset: 72)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1070, file: !842, line: 136, baseType: !867, size: 32, offset: 96)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1070, file: !842, line: 137, baseType: !7, size: 32, offset: 128)
!1077 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 139, baseType: !1078, size: 256)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 139, size: 256, elements: !1079)
!1079 = !{!1080, !1081, !1082}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1078, file: !842, line: 140, baseType: !448, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1078, file: !842, line: 141, baseType: !867, size: 32, offset: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1078, file: !842, line: 143, baseType: !263, size: 128, offset: 128)
!1083 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 145, baseType: !1084, size: 256)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 145, size: 256, elements: !1085)
!1085 = !{!1086, !1087, !1089, !1090, !2452}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1084, file: !842, line: 146, baseType: !448, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1084, file: !842, line: 147, baseType: !1088, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !832, line: 509, baseType: !840)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1084, file: !842, line: 148, baseType: !448, size: 64, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_member, scope: !1084, file: !842, line: 149, baseType: !1091, size: 64, offset: 192)
!1091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1084, file: !842, line: 149, size: 64, elements: !1092)
!1092 = !{!1093, !2451}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1091, file: !842, line: 150, baseType: !1094, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !842, line: 388, size: 7296, elements: !1096)
!1096 = !{!1097, !2447}
!1097 = !DIDerivedType(tag: DW_TAG_member, scope: !1095, file: !842, line: 389, baseType: !1098, size: 7296)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1095, file: !842, line: 389, size: 7296, elements: !1099)
!1099 = !{!1100, !1218, !1219, !1220, !1224, !1225, !1226, !1227, !1228, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1269, !1277, !1280, !1326, !1327, !2431, !2432, !2435, !2436, !2437, !2440, !2441, !2442, !2445, !2446}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1098, file: !842, line: 390, baseType: !1101, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !842, line: 305, size: 1472, elements: !1103)
!1103 = !{!1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1118, !1119, !1124, !1125, !1128, !1212, !1213, !1214, !1215, !1216}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1102, file: !842, line: 308, baseType: !448, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1102, file: !842, line: 309, baseType: !448, size: 64, offset: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1102, file: !842, line: 313, baseType: !1101, size: 64, offset: 128)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1102, file: !842, line: 313, baseType: !1101, size: 64, offset: 192)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1102, file: !842, line: 315, baseType: !880, size: 192, align: 64, offset: 256)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1102, file: !842, line: 323, baseType: !448, size: 64, offset: 448)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1102, file: !842, line: 327, baseType: !1094, size: 64, offset: 512)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1102, file: !842, line: 333, baseType: !1112, size: 64, offset: 576)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !832, line: 284, baseType: !1113)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !832, line: 284, size: 64, elements: !1114)
!1114 = !{!1115}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1113, file: !832, line: 284, baseType: !1116, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1117, line: 19, baseType: !448)
!1117 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1102, file: !842, line: 334, baseType: !448, size: 64, offset: 640)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1102, file: !842, line: 343, baseType: !1120, size: 256, offset: 704)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1102, file: !842, line: 340, size: 256, elements: !1121)
!1121 = !{!1122, !1123}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1120, file: !842, line: 341, baseType: !880, size: 192, align: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1120, file: !842, line: 342, baseType: !448, size: 64, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1102, file: !842, line: 351, baseType: !263, size: 128, offset: 960)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1102, file: !842, line: 353, baseType: !1126, size: 64, offset: 1088)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !842, line: 353, flags: DIFlagFwdDecl)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1102, file: !842, line: 356, baseType: !1129, size: 64, offset: 1152)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1131)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !22, line: 557, size: 832, elements: !1132)
!1132 = !{!1133, !1137, !1138, !1142, !1146, !1186, !1190, !1194, !1198, !1199, !1200, !1204, !1208}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1131, file: !22, line: 558, baseType: !1134, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{null, !1101}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1131, file: !22, line: 559, baseType: !1134, size: 64, offset: 64)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1131, file: !22, line: 560, baseType: !1139, size: 64, offset: 128)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!304, !1101, !448}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1131, file: !22, line: 561, baseType: !1143, size: 64, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{!304, !1101}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1131, file: !22, line: 562, baseType: !1147, size: 64, offset: 256)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!1150, !1151}
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !842, line: 682, baseType: !7)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !22, line: 508, size: 768, elements: !1153)
!1153 = !{!1154, !1155, !1156, !1157, !1158, !1159, !1166, !1173, !1179, !1180, !1181, !1183, !1185}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1152, file: !22, line: 509, baseType: !1101, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1152, file: !22, line: 510, baseType: !7, size: 32, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1152, file: !22, line: 511, baseType: !863, size: 32, offset: 96)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1152, file: !22, line: 512, baseType: !448, size: 64, offset: 128)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1152, file: !22, line: 513, baseType: !448, size: 64, offset: 192)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1152, file: !22, line: 514, baseType: !1160, size: 64, offset: 256)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !832, line: 385, baseType: !1162)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !832, line: 385, size: 64, elements: !1163)
!1163 = !{!1164}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1162, file: !832, line: 385, baseType: !1165, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1117, line: 15, baseType: !448)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1152, file: !22, line: 516, baseType: !1167, size: 64, offset: 320)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !832, line: 359, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !832, line: 359, size: 64, elements: !1170)
!1170 = !{!1171}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1169, file: !832, line: 359, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1117, line: 16, baseType: !448)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1152, file: !22, line: 519, baseType: !1174, size: 64, offset: 384)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1117, line: 21, baseType: !1175)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1117, line: 21, size: 64, elements: !1176)
!1176 = !{!1177}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1175, file: !1117, line: 21, baseType: !1178, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1117, line: 14, baseType: !448)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1152, file: !22, line: 521, baseType: !840, size: 64, offset: 448)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1152, file: !22, line: 522, baseType: !840, size: 64, offset: 512)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1152, file: !22, line: 528, baseType: !1182, size: 64, offset: 576)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1152, file: !22, line: 532, baseType: !1184, size: 64, offset: 640)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1152, file: !22, line: 536, baseType: !1088, size: 64, offset: 704)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1131, file: !22, line: 563, baseType: !1187, size: 64, offset: 320)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!1150, !1151, !21}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1131, file: !22, line: 565, baseType: !1191, size: 64, offset: 384)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{null, !1151, !448, !448}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1131, file: !22, line: 567, baseType: !1195, size: 64, offset: 448)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!448, !1101}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1131, file: !22, line: 571, baseType: !1147, size: 64, offset: 512)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1131, file: !22, line: 574, baseType: !1147, size: 64, offset: 576)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1131, file: !22, line: 579, baseType: !1201, size: 64, offset: 640)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!304, !1101, !448, !258, !304, !304}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1131, file: !22, line: 585, baseType: !1205, size: 64, offset: 704)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!340, !1101}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1131, file: !22, line: 615, baseType: !1209, size: 64, offset: 768)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!840, !1101, !448}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1102, file: !842, line: 359, baseType: !448, size: 64, offset: 1216)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1102, file: !842, line: 361, baseType: !476, size: 64, offset: 1280)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1102, file: !842, line: 362, baseType: !258, size: 64, offset: 1344)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1102, file: !842, line: 365, baseType: !891, size: 64, offset: 1408)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1102, file: !842, line: 373, baseType: !1217, offset: 1472)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !842, line: 296, elements: !372)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1098, file: !842, line: 391, baseType: !876, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1098, file: !842, line: 392, baseType: !541, size: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1098, file: !842, line: 394, baseType: !1221, size: 64, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!448, !476, !448, !448, !448, !448}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1098, file: !842, line: 398, baseType: !448, size: 64, offset: 256)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1098, file: !842, line: 399, baseType: !448, size: 64, offset: 320)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1098, file: !842, line: 405, baseType: !448, size: 64, offset: 384)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1098, file: !842, line: 406, baseType: !448, size: 64, offset: 448)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1098, file: !842, line: 407, baseType: !1229, size: 64, offset: 512)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !832, line: 286, baseType: !1231)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !832, line: 286, size: 64, elements: !1232)
!1232 = !{!1233}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1231, file: !832, line: 286, baseType: !1234, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1117, line: 18, baseType: !448)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1098, file: !842, line: 416, baseType: !867, size: 32, offset: 576)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1098, file: !842, line: 428, baseType: !867, size: 32, offset: 608)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1098, file: !842, line: 437, baseType: !867, size: 32, offset: 640)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1098, file: !842, line: 447, baseType: !867, size: 32, offset: 672)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1098, file: !842, line: 450, baseType: !891, size: 64, offset: 704)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1098, file: !842, line: 452, baseType: !304, size: 32, offset: 768)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1098, file: !842, line: 454, baseType: !358, offset: 800)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1098, file: !842, line: 457, baseType: !887, size: 256, offset: 832)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1098, file: !842, line: 459, baseType: !263, size: 128, offset: 1088)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1098, file: !842, line: 466, baseType: !448, size: 64, offset: 1216)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1098, file: !842, line: 467, baseType: !448, size: 64, offset: 1280)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1098, file: !842, line: 469, baseType: !448, size: 64, offset: 1344)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1098, file: !842, line: 470, baseType: !448, size: 64, offset: 1408)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1098, file: !842, line: 471, baseType: !893, size: 64, offset: 1472)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1098, file: !842, line: 472, baseType: !448, size: 64, offset: 1536)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1098, file: !842, line: 473, baseType: !448, size: 64, offset: 1600)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1098, file: !842, line: 474, baseType: !448, size: 64, offset: 1664)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1098, file: !842, line: 475, baseType: !448, size: 64, offset: 1728)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1098, file: !842, line: 477, baseType: !358, offset: 1792)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1098, file: !842, line: 478, baseType: !448, size: 64, offset: 1792)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1098, file: !842, line: 478, baseType: !448, size: 64, offset: 1856)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1098, file: !842, line: 478, baseType: !448, size: 64, offset: 1920)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1098, file: !842, line: 478, baseType: !448, size: 64, offset: 1984)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1098, file: !842, line: 479, baseType: !448, size: 64, offset: 2048)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1098, file: !842, line: 479, baseType: !448, size: 64, offset: 2112)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1098, file: !842, line: 479, baseType: !448, size: 64, offset: 2176)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1098, file: !842, line: 480, baseType: !448, size: 64, offset: 2240)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1098, file: !842, line: 480, baseType: !448, size: 64, offset: 2304)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1098, file: !842, line: 480, baseType: !448, size: 64, offset: 2368)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1098, file: !842, line: 480, baseType: !448, size: 64, offset: 2432)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1098, file: !842, line: 482, baseType: !1266, size: 2816, offset: 2496)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !448, size: 2816, elements: !1267)
!1267 = !{!1268}
!1268 = !DISubrange(count: 44)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1098, file: !842, line: 488, baseType: !1270, size: 256, offset: 5312)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1271, line: 60, size: 256, elements: !1272)
!1271 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1272 = !{!1273}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1270, file: !1271, line: 61, baseType: !1274, size: 256)
!1274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 256, elements: !1275)
!1275 = !{!1276}
!1276 = !DISubrange(count: 4)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1098, file: !842, line: 490, baseType: !1278, size: 64, offset: 5568)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !842, line: 490, flags: DIFlagFwdDecl)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1098, file: !842, line: 493, baseType: !1281, size: 896, offset: 5632)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1282, line: 53, baseType: !1283)
!1282 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1282, line: 13, size: 896, elements: !1284)
!1284 = !{!1285, !1286, !1287, !1288, !1291, !1292, !1299, !1300, !1320, !1321, !1322}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1283, file: !1282, line: 18, baseType: !541, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1283, file: !1282, line: 28, baseType: !893, size: 64, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1283, file: !1282, line: 31, baseType: !887, size: 256, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1283, file: !1282, line: 32, baseType: !1289, size: 64, offset: 384)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1282, line: 32, flags: DIFlagFwdDecl)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1283, file: !1282, line: 37, baseType: !440, size: 16, offset: 448)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1283, file: !1282, line: 40, baseType: !1293, size: 192, offset: 512)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1294, line: 53, size: 192, elements: !1295)
!1294 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1295 = !{!1296, !1297, !1298}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1293, file: !1294, line: 54, baseType: !891, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1293, file: !1294, line: 55, baseType: !358, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1293, file: !1294, line: 59, baseType: !263, size: 128, offset: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1283, file: !1282, line: 41, baseType: !258, size: 64, offset: 704)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1283, file: !1282, line: 42, baseType: !1301, size: 64, offset: 768)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1303)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1304, line: 13, size: 896, elements: !1305)
!1304 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1305 = !{!1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1303, file: !1304, line: 14, baseType: !258, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1303, file: !1304, line: 15, baseType: !448, size: 64, offset: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1303, file: !1304, line: 17, baseType: !448, size: 64, offset: 128)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1303, file: !1304, line: 17, baseType: !448, size: 64, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1303, file: !1304, line: 19, baseType: !212, size: 64, offset: 256)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1303, file: !1304, line: 21, baseType: !212, size: 64, offset: 320)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1303, file: !1304, line: 22, baseType: !212, size: 64, offset: 384)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1303, file: !1304, line: 23, baseType: !212, size: 64, offset: 448)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1303, file: !1304, line: 24, baseType: !212, size: 64, offset: 512)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1303, file: !1304, line: 25, baseType: !212, size: 64, offset: 576)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1303, file: !1304, line: 26, baseType: !212, size: 64, offset: 640)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1303, file: !1304, line: 27, baseType: !212, size: 64, offset: 704)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1303, file: !1304, line: 28, baseType: !212, size: 64, offset: 768)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1303, file: !1304, line: 29, baseType: !212, size: 64, offset: 832)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1283, file: !1282, line: 44, baseType: !867, size: 32, offset: 832)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1283, file: !1282, line: 50, baseType: !979, size: 16, offset: 864)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1283, file: !1282, line: 51, baseType: !1323, size: 16, offset: 880)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !311, line: 18, baseType: !1324)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !313, line: 23, baseType: !1325)
!1325 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1098, file: !842, line: 495, baseType: !448, size: 64, offset: 6528)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1098, file: !842, line: 497, baseType: !1328, size: 64, offset: 6592)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !842, line: 381, size: 384, elements: !1330)
!1330 = !{!1331, !1332, !2430}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1329, file: !842, line: 382, baseType: !867, size: 32)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1329, file: !842, line: 383, baseType: !1333, size: 128, offset: 64)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !842, line: 376, size: 128, elements: !1334)
!1334 = !{!1335, !2428}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1333, file: !842, line: 377, baseType: !1336, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1338, line: 640, size: 48640, elements: !1339)
!1338 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1339 = !{!1340, !1346, !1348, !1349, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1366, !1384, !1395, !1478, !1479, !1480, !1491, !1492, !1494, !1495, !1496, !1497, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1576, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1614, !1616, !1617, !1618, !1630, !1631, !1632, !1633, !1634, !1635, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1659, !1664, !1848, !1849, !1850, !1851, !1855, !1858, !1861, !1864, !1867, !1870, !1971, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2017, !2018, !2019, !2020, !2021, !2026, !2027, !2028, !2031, !2032, !2035, !2038, !2041, !2044, !2086, !2089, !2090, !2169, !2170, !2173, !2174, !2177, !2178, !2179, !2183, !2184, !2185, !2198, !2199, !2200, !2210, !2215, !2218, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1337, file: !1338, line: 646, baseType: !1341, size: 128)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1342, line: 56, size: 128, elements: !1343)
!1342 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1343 = !{!1344, !1345}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1341, file: !1342, line: 57, baseType: !448, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1341, file: !1342, line: 58, baseType: !319, size: 32, offset: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1337, file: !1338, line: 649, baseType: !1347, size: 64, offset: 128)
!1347 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !212)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1337, file: !1338, line: 657, baseType: !258, size: 64, offset: 192)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1337, file: !1338, line: 658, baseType: !1350, size: 32, offset: 256)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1351, line: 113, baseType: !1352)
!1351 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1351, line: 111, size: 32, elements: !1353)
!1353 = !{!1354}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1352, file: !1351, line: 112, baseType: !867, size: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1337, file: !1338, line: 660, baseType: !7, size: 32, offset: 288)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1337, file: !1338, line: 661, baseType: !7, size: 32, offset: 320)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1337, file: !1338, line: 684, baseType: !304, size: 32, offset: 352)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1337, file: !1338, line: 686, baseType: !304, size: 32, offset: 384)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1337, file: !1338, line: 687, baseType: !304, size: 32, offset: 416)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1337, file: !1338, line: 688, baseType: !304, size: 32, offset: 448)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1337, file: !1338, line: 689, baseType: !7, size: 32, offset: 480)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1337, file: !1338, line: 691, baseType: !1363, size: 64, offset: 512)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1365)
!1365 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1338, line: 691, flags: DIFlagFwdDecl)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1337, file: !1338, line: 692, baseType: !1367, size: 832, offset: 576)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1338, line: 451, size: 832, elements: !1368)
!1368 = !{!1369, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1367, file: !1338, line: 453, baseType: !1370, size: 128)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1338, line: 325, size: 128, elements: !1371)
!1371 = !{!1372, !1373}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1370, file: !1338, line: 326, baseType: !448, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1370, file: !1338, line: 327, baseType: !319, size: 32, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1367, file: !1338, line: 454, baseType: !880, size: 192, align: 64, offset: 128)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1367, file: !1338, line: 455, baseType: !263, size: 128, offset: 320)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1367, file: !1338, line: 456, baseType: !7, size: 32, offset: 448)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1367, file: !1338, line: 458, baseType: !541, size: 64, offset: 512)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1367, file: !1338, line: 459, baseType: !541, size: 64, offset: 576)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1367, file: !1338, line: 460, baseType: !541, size: 64, offset: 640)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1367, file: !1338, line: 461, baseType: !541, size: 64, offset: 704)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1367, file: !1338, line: 463, baseType: !541, size: 64, offset: 768)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1367, file: !1338, line: 465, baseType: !1383, offset: 832)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1338, line: 415, elements: !372)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1337, file: !1338, line: 693, baseType: !1385, size: 384, offset: 1408)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1338, line: 489, size: 384, elements: !1386)
!1386 = !{!1387, !1388, !1389, !1390, !1391, !1392, !1393}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1385, file: !1338, line: 490, baseType: !263, size: 128)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1385, file: !1338, line: 491, baseType: !448, size: 64, offset: 128)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1385, file: !1338, line: 492, baseType: !448, size: 64, offset: 192)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1385, file: !1338, line: 493, baseType: !7, size: 32, offset: 256)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1385, file: !1338, line: 494, baseType: !440, size: 16, offset: 288)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1385, file: !1338, line: 495, baseType: !440, size: 16, offset: 304)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1385, file: !1338, line: 497, baseType: !1394, size: 64, offset: 320)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1337, file: !1338, line: 697, baseType: !1396, size: 1792, offset: 1792)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1338, line: 507, size: 1792, elements: !1397)
!1397 = !{!1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1475, !1476}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1396, file: !1338, line: 508, baseType: !880, size: 192, align: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1396, file: !1338, line: 515, baseType: !541, size: 64, offset: 192)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1396, file: !1338, line: 516, baseType: !541, size: 64, offset: 256)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1396, file: !1338, line: 517, baseType: !541, size: 64, offset: 320)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1396, file: !1338, line: 518, baseType: !541, size: 64, offset: 384)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1396, file: !1338, line: 519, baseType: !541, size: 64, offset: 448)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1396, file: !1338, line: 526, baseType: !897, size: 64, offset: 512)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1396, file: !1338, line: 527, baseType: !541, size: 64, offset: 576)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1396, file: !1338, line: 528, baseType: !7, size: 32, offset: 640)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1396, file: !1338, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1396, file: !1338, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1396, file: !1338, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1396, file: !1338, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1396, file: !1338, line: 563, baseType: !1412, size: 512, offset: 704)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !28, line: 118, size: 512, elements: !1413)
!1413 = !{!1414, !1422, !1423, !1428, !1471, !1472, !1473, !1474}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1412, file: !28, line: 119, baseType: !1415, size: 256)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1416, line: 9, size: 256, elements: !1417)
!1416 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1417 = !{!1418, !1419}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1415, file: !1416, line: 10, baseType: !880, size: 192, align: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1415, file: !1416, line: 11, baseType: !1420, size: 64, offset: 192)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1421, line: 29, baseType: !897)
!1421 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1412, file: !28, line: 120, baseType: !1420, size: 64, offset: 256)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1412, file: !28, line: 121, baseType: !1424, size: 64, offset: 320)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!27, !1427}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1412, file: !28, line: 122, baseType: !1429, size: 64, offset: 384)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !28, line: 159, size: 512, align: 512, elements: !1431)
!1431 = !{!1432, !1452, !1453, !1456, !1461, !1462, !1466, !1470}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1430, file: !28, line: 160, baseType: !1433, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !28, line: 214, size: 4608, align: 512, elements: !1435)
!1435 = !{!1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1434, file: !28, line: 215, baseType: !900)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1434, file: !28, line: 216, baseType: !7, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1434, file: !28, line: 217, baseType: !7, size: 32, offset: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1434, file: !28, line: 218, baseType: !7, size: 32, offset: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1434, file: !28, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1434, file: !28, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1434, file: !28, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1434, file: !28, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1434, file: !28, line: 233, baseType: !1420, size: 64, offset: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1434, file: !28, line: 234, baseType: !1427, size: 64, offset: 192)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1434, file: !28, line: 235, baseType: !1420, size: 64, offset: 256)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1434, file: !28, line: 236, baseType: !1427, size: 64, offset: 320)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1434, file: !28, line: 237, baseType: !1449, size: 4096, offset: 512)
!1449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1430, size: 4096, elements: !1450)
!1450 = !{!1451}
!1451 = !DISubrange(count: 8)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1430, file: !28, line: 161, baseType: !7, size: 32, offset: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1430, file: !28, line: 162, baseType: !1454, size: 32, offset: 96)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !264, line: 27, baseType: !1455)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !432, line: 96, baseType: !304)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1430, file: !28, line: 163, baseType: !1457, size: 32, offset: 128)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !512, line: 276, baseType: !1458)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !512, line: 276, size: 32, elements: !1459)
!1459 = !{!1460}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1458, file: !512, line: 276, baseType: !516, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1430, file: !28, line: 164, baseType: !1427, size: 64, offset: 192)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1430, file: !28, line: 165, baseType: !1463, size: 128, offset: 256)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1416, line: 14, size: 128, elements: !1464)
!1464 = !{!1465}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1463, file: !1416, line: 15, baseType: !872, size: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1430, file: !28, line: 166, baseType: !1467, size: 64, offset: 384)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!1420}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1430, file: !28, line: 167, baseType: !1420, size: 64, offset: 448)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1412, file: !28, line: 123, baseType: !310, size: 8, offset: 448)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1412, file: !28, line: 124, baseType: !310, size: 8, offset: 456)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1412, file: !28, line: 125, baseType: !310, size: 8, offset: 464)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1412, file: !28, line: 126, baseType: !310, size: 8, offset: 472)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1396, file: !1338, line: 572, baseType: !1412, size: 512, offset: 1216)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1396, file: !1338, line: 580, baseType: !1477, size: 64, offset: 1728)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1337, file: !1338, line: 721, baseType: !7, size: 32, offset: 3584)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1337, file: !1338, line: 722, baseType: !304, size: 32, offset: 3616)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1337, file: !1338, line: 723, baseType: !1481, size: 64, offset: 3648)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1483)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1484, line: 17, baseType: !1485)
!1484 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1484, line: 17, size: 64, elements: !1486)
!1486 = !{!1487}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1485, file: !1484, line: 17, baseType: !1488, size: 64)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !448, size: 64, elements: !1489)
!1489 = !{!1490}
!1490 = !DISubrange(count: 1)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1337, file: !1338, line: 724, baseType: !1483, size: 64, offset: 3712)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1337, file: !1338, line: 749, baseType: !1493, offset: 3776)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1338, line: 290, elements: !372)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1337, file: !1338, line: 751, baseType: !263, size: 128, offset: 3776)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1337, file: !1338, line: 757, baseType: !1094, size: 64, offset: 3904)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1337, file: !1338, line: 758, baseType: !1094, size: 64, offset: 3968)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1337, file: !1338, line: 761, baseType: !1498, size: 320, offset: 4032)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1271, line: 34, size: 320, elements: !1499)
!1499 = !{!1500, !1501}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1498, file: !1271, line: 35, baseType: !541, size: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1498, file: !1271, line: 36, baseType: !1502, size: 256, offset: 64)
!1502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1101, size: 256, elements: !1275)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1337, file: !1338, line: 766, baseType: !304, size: 32, offset: 4352)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1337, file: !1338, line: 767, baseType: !304, size: 32, offset: 4384)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1337, file: !1338, line: 768, baseType: !304, size: 32, offset: 4416)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1337, file: !1338, line: 770, baseType: !304, size: 32, offset: 4448)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1337, file: !1338, line: 772, baseType: !448, size: 64, offset: 4480)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1337, file: !1338, line: 775, baseType: !7, size: 32, offset: 4544)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1337, file: !1338, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1337, file: !1338, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1337, file: !1338, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1337, file: !1338, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1337, file: !1338, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1337, file: !1338, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1337, file: !1338, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1337, file: !1338, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1337, file: !1338, line: 831, baseType: !448, size: 64, offset: 4672)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1337, file: !1338, line: 833, baseType: !1519, size: 384, offset: 4736)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !33, line: 25, size: 384, elements: !1520)
!1520 = !{!1521, !1526}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1519, file: !33, line: 26, baseType: !1522, size: 64)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!212, !1525}
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, scope: !1519, file: !33, line: 27, baseType: !1527, size: 320, offset: 64)
!1527 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1519, file: !33, line: 27, size: 320, elements: !1528)
!1528 = !{!1529, !1539, !1566}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1527, file: !33, line: 36, baseType: !1530, size: 320)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1527, file: !33, line: 29, size: 320, elements: !1531)
!1531 = !{!1532, !1534, !1535, !1536, !1537, !1538}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1530, file: !33, line: 30, baseType: !1533, size: 64)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1530, file: !33, line: 31, baseType: !319, size: 32, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1530, file: !33, line: 32, baseType: !319, size: 32, offset: 96)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1530, file: !33, line: 33, baseType: !319, size: 32, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1530, file: !33, line: 34, baseType: !541, size: 64, offset: 192)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1530, file: !33, line: 35, baseType: !1533, size: 64, offset: 256)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1527, file: !33, line: 46, baseType: !1540, size: 192)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1527, file: !33, line: 38, size: 192, elements: !1541)
!1541 = !{!1542, !1543, !1544, !1565}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1540, file: !33, line: 39, baseType: !1454, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1540, file: !33, line: 40, baseType: !32, size: 32, offset: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, scope: !1540, file: !33, line: 41, baseType: !1545, size: 64, offset: 64)
!1545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1540, file: !33, line: 41, size: 64, elements: !1546)
!1546 = !{!1547, !1555}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1545, file: !33, line: 42, baseType: !1548, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1550, line: 7, size: 128, elements: !1551)
!1550 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1551 = !{!1552, !1554}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1549, file: !1550, line: 8, baseType: !1553, size: 64)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !432, line: 93, baseType: !652)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1549, file: !1550, line: 9, baseType: !652, size: 64, offset: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1545, file: !33, line: 43, baseType: !1556, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1558, line: 7, size: 64, elements: !1559)
!1558 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1559 = !{!1560, !1564}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1557, file: !1558, line: 8, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1558, line: 5, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !311, line: 20, baseType: !1563)
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !313, line: 26, baseType: !304)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1557, file: !1558, line: 9, baseType: !1562, size: 32, offset: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1540, file: !33, line: 45, baseType: !541, size: 64, offset: 128)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1527, file: !33, line: 54, baseType: !1567, size: 256)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1527, file: !33, line: 48, size: 256, elements: !1568)
!1568 = !{!1569, !1572, !1573, !1574, !1575}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1567, file: !33, line: 49, baseType: !1570, size: 64)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !33, line: 14, flags: DIFlagFwdDecl)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1567, file: !33, line: 50, baseType: !304, size: 32, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1567, file: !33, line: 51, baseType: !304, size: 32, offset: 96)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1567, file: !33, line: 52, baseType: !448, size: 64, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1567, file: !33, line: 53, baseType: !448, size: 64, offset: 192)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1337, file: !1338, line: 835, baseType: !1577, size: 32, offset: 5120)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !264, line: 22, baseType: !1578)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !432, line: 28, baseType: !304)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1337, file: !1338, line: 836, baseType: !1577, size: 32, offset: 5152)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1337, file: !1338, line: 840, baseType: !448, size: 64, offset: 5184)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1337, file: !1338, line: 849, baseType: !1336, size: 64, offset: 5248)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1337, file: !1338, line: 852, baseType: !1336, size: 64, offset: 5312)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1337, file: !1338, line: 857, baseType: !263, size: 128, offset: 5376)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1337, file: !1338, line: 858, baseType: !263, size: 128, offset: 5504)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1337, file: !1338, line: 859, baseType: !1336, size: 64, offset: 5632)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1337, file: !1338, line: 867, baseType: !263, size: 128, offset: 5696)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1337, file: !1338, line: 868, baseType: !263, size: 128, offset: 5824)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1337, file: !1338, line: 871, baseType: !1589, size: 64, offset: 5952)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !61, line: 59, size: 768, elements: !1591)
!1591 = !{!1592, !1593, !1594, !1595, !1597, !1598, !1605, !1606}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1590, file: !61, line: 61, baseType: !1350, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1590, file: !61, line: 62, baseType: !7, size: 32, offset: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1590, file: !61, line: 63, baseType: !358, offset: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1590, file: !61, line: 65, baseType: !1596, size: 256, offset: 64)
!1596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !754, size: 256, elements: !1275)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1590, file: !61, line: 66, baseType: !754, size: 64, offset: 320)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1590, file: !61, line: 68, baseType: !1599, size: 128, offset: 384)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1600, line: 40, baseType: !1601)
!1600 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1600, line: 36, size: 128, elements: !1602)
!1602 = !{!1603, !1604}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1601, file: !1600, line: 37, baseType: !358)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1601, file: !1600, line: 38, baseType: !263, size: 128)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1590, file: !61, line: 69, baseType: !489, size: 128, align: 64, offset: 512)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1590, file: !61, line: 70, baseType: !1607, size: 128, offset: 640)
!1607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1608, size: 128, elements: !1489)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !61, line: 54, size: 128, elements: !1609)
!1609 = !{!1610, !1611}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1608, file: !61, line: 55, baseType: !304, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1608, file: !61, line: 56, baseType: !1612, size: 64, offset: 64)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !61, line: 56, flags: DIFlagFwdDecl)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1337, file: !1338, line: 872, baseType: !1615, size: 512, offset: 6016)
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 512, elements: !1275)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1337, file: !1338, line: 873, baseType: !263, size: 128, offset: 6528)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1337, file: !1338, line: 874, baseType: !263, size: 128, offset: 6656)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1337, file: !1338, line: 876, baseType: !1619, size: 64, offset: 6784)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1621, line: 26, size: 192, elements: !1622)
!1621 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1622 = !{!1623, !1624}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1620, file: !1621, line: 27, baseType: !7, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1620, file: !1621, line: 28, baseType: !1625, size: 128, offset: 64)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1626, line: 43, size: 128, elements: !1627)
!1626 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1627 = !{!1628, !1629}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1625, file: !1626, line: 44, baseType: !900)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1625, file: !1626, line: 45, baseType: !263, size: 128)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1337, file: !1338, line: 879, baseType: !824, size: 64, offset: 6848)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1337, file: !1338, line: 882, baseType: !824, size: 64, offset: 6912)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1337, file: !1338, line: 884, baseType: !541, size: 64, offset: 6976)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1337, file: !1338, line: 885, baseType: !541, size: 64, offset: 7040)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1337, file: !1338, line: 890, baseType: !541, size: 64, offset: 7104)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1337, file: !1338, line: 891, baseType: !1636, size: 128, offset: 7168)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1338, line: 242, size: 128, elements: !1637)
!1637 = !{!1638, !1639, !1640}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1636, file: !1338, line: 244, baseType: !541, size: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1636, file: !1338, line: 245, baseType: !541, size: 64, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1636, file: !1338, line: 246, baseType: !900, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1337, file: !1338, line: 900, baseType: !448, size: 64, offset: 7296)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1337, file: !1338, line: 901, baseType: !448, size: 64, offset: 7360)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1337, file: !1338, line: 904, baseType: !541, size: 64, offset: 7424)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1337, file: !1338, line: 907, baseType: !541, size: 64, offset: 7488)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1337, file: !1338, line: 910, baseType: !448, size: 64, offset: 7552)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1337, file: !1338, line: 911, baseType: !448, size: 64, offset: 7616)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1337, file: !1338, line: 914, baseType: !1648, size: 640, offset: 7680)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1649, line: 123, size: 640, elements: !1650)
!1649 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1650 = !{!1651, !1657, !1658}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1648, file: !1649, line: 124, baseType: !1652, size: 576)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1653, size: 576, elements: !400)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1649, line: 108, size: 192, elements: !1654)
!1654 = !{!1655, !1656}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1653, file: !1649, line: 109, baseType: !541, size: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1653, file: !1649, line: 110, baseType: !1463, size: 128, offset: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1648, file: !1649, line: 125, baseType: !7, size: 32, offset: 576)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1648, file: !1649, line: 126, baseType: !7, size: 32, offset: 608)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1337, file: !1338, line: 917, baseType: !1660, size: 192, offset: 8320)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1649, line: 134, size: 192, elements: !1661)
!1661 = !{!1662, !1663}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1660, file: !1649, line: 135, baseType: !489, size: 128, align: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1660, file: !1649, line: 136, baseType: !7, size: 32, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1337, file: !1338, line: 923, baseType: !1665, size: 64, offset: 8512)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1667)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1668, line: 111, size: 1280, elements: !1669)
!1668 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1669 = !{!1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1689, !1690, !1691, !1692, !1693, !1694, !1801, !1802, !1803, !1804, !1830, !1833, !1843}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1667, file: !1668, line: 112, baseType: !867, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1667, file: !1668, line: 120, baseType: !554, size: 32, offset: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1667, file: !1668, line: 121, baseType: !562, size: 32, offset: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1667, file: !1668, line: 122, baseType: !554, size: 32, offset: 96)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1667, file: !1668, line: 123, baseType: !562, size: 32, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1667, file: !1668, line: 124, baseType: !554, size: 32, offset: 160)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1667, file: !1668, line: 125, baseType: !562, size: 32, offset: 192)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1667, file: !1668, line: 126, baseType: !554, size: 32, offset: 224)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1667, file: !1668, line: 127, baseType: !562, size: 32, offset: 256)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1667, file: !1668, line: 128, baseType: !7, size: 32, offset: 288)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1667, file: !1668, line: 129, baseType: !1681, size: 64, offset: 320)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1682, line: 26, baseType: !1683)
!1682 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1682, line: 24, size: 64, elements: !1684)
!1684 = !{!1685}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1683, file: !1682, line: 25, baseType: !1686, size: 64)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 64, elements: !1687)
!1687 = !{!1688}
!1688 = !DISubrange(count: 2)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1667, file: !1668, line: 130, baseType: !1681, size: 64, offset: 384)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1667, file: !1668, line: 131, baseType: !1681, size: 64, offset: 448)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1667, file: !1668, line: 132, baseType: !1681, size: 64, offset: 512)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1667, file: !1668, line: 133, baseType: !1681, size: 64, offset: 576)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1667, file: !1668, line: 135, baseType: !314, size: 8, offset: 640)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1667, file: !1668, line: 137, baseType: !1695, size: 64, offset: 704)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1697, line: 189, size: 1664, elements: !1698)
!1697 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1698 = !{!1699, !1700, !1703, !1708, !1709, !1712, !1713, !1718, !1719, !1720, !1721, !1723, !1724, !1725, !1726, !1727, !1765, !1786}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1696, file: !1697, line: 190, baseType: !1350, size: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1696, file: !1697, line: 191, baseType: !1701, size: 32, offset: 32)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1697, line: 28, baseType: !1702)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !264, line: 98, baseType: !1562)
!1703 = !DIDerivedType(tag: DW_TAG_member, scope: !1696, file: !1697, line: 192, baseType: !1704, size: 192, offset: 64)
!1704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1696, file: !1697, line: 192, size: 192, elements: !1705)
!1705 = !{!1706, !1707}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1704, file: !1697, line: 193, baseType: !263, size: 128)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1704, file: !1697, line: 194, baseType: !880, size: 192, align: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1696, file: !1697, line: 199, baseType: !887, size: 256, offset: 256)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1696, file: !1697, line: 200, baseType: !1710, size: 64, offset: 512)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1697, line: 200, flags: DIFlagFwdDecl)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1696, file: !1697, line: 201, baseType: !258, size: 64, offset: 576)
!1713 = !DIDerivedType(tag: DW_TAG_member, scope: !1696, file: !1697, line: 202, baseType: !1714, size: 64, offset: 640)
!1714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1696, file: !1697, line: 202, size: 64, elements: !1715)
!1715 = !{!1716, !1717}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1714, file: !1697, line: 203, baseType: !658, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1714, file: !1697, line: 204, baseType: !658, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1696, file: !1697, line: 206, baseType: !658, size: 64, offset: 704)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1696, file: !1697, line: 207, baseType: !554, size: 32, offset: 768)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1696, file: !1697, line: 208, baseType: !562, size: 32, offset: 800)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1696, file: !1697, line: 209, baseType: !1722, size: 32, offset: 832)
!1722 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1697, line: 31, baseType: !678)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1696, file: !1697, line: 210, baseType: !440, size: 16, offset: 864)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1696, file: !1697, line: 211, baseType: !440, size: 16, offset: 880)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1696, file: !1697, line: 215, baseType: !1325, size: 16, offset: 896)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1696, file: !1697, line: 222, baseType: !448, size: 64, offset: 960)
!1727 = !DIDerivedType(tag: DW_TAG_member, scope: !1696, file: !1697, line: 239, baseType: !1728, size: 320, offset: 1024)
!1728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1696, file: !1697, line: 239, size: 320, elements: !1729)
!1729 = !{!1730, !1757}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1728, file: !1697, line: 240, baseType: !1731, size: 320)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1697, line: 108, size: 320, elements: !1732)
!1732 = !{!1733, !1734, !1746, !1749, !1756}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1731, file: !1697, line: 110, baseType: !448, size: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, scope: !1731, file: !1697, line: 111, baseType: !1735, size: 64, offset: 64)
!1735 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1731, file: !1697, line: 111, size: 64, elements: !1736)
!1736 = !{!1737, !1745}
!1737 = !DIDerivedType(tag: DW_TAG_member, scope: !1735, file: !1697, line: 112, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1735, file: !1697, line: 112, size: 64, elements: !1739)
!1739 = !{!1740, !1741}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1738, file: !1697, line: 114, baseType: !979, size: 16)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1738, file: !1697, line: 115, baseType: !1742, size: 48, offset: 16)
!1742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 48, elements: !1743)
!1743 = !{!1744}
!1744 = !DISubrange(count: 6)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1735, file: !1697, line: 121, baseType: !448, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1731, file: !1697, line: 123, baseType: !1747, size: 64, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1697, line: 96, flags: DIFlagFwdDecl)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1731, file: !1697, line: 124, baseType: !1750, size: 64, offset: 192)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1697, line: 102, size: 192, elements: !1752)
!1752 = !{!1753, !1754, !1755}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1751, file: !1697, line: 103, baseType: !489, size: 128, align: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1751, file: !1697, line: 104, baseType: !1350, size: 32, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1751, file: !1697, line: 105, baseType: !609, size: 8, offset: 160)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1731, file: !1697, line: 125, baseType: !340, size: 64, offset: 256)
!1757 = !DIDerivedType(tag: DW_TAG_member, scope: !1728, file: !1697, line: 241, baseType: !1758, size: 320)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1728, file: !1697, line: 241, size: 320, elements: !1759)
!1759 = !{!1760, !1761, !1762, !1763, !1764}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1758, file: !1697, line: 242, baseType: !448, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1758, file: !1697, line: 243, baseType: !448, size: 64, offset: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1758, file: !1697, line: 244, baseType: !1747, size: 64, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1758, file: !1697, line: 245, baseType: !1750, size: 64, offset: 192)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1758, file: !1697, line: 246, baseType: !399, size: 64, offset: 256)
!1765 = !DIDerivedType(tag: DW_TAG_member, scope: !1696, file: !1697, line: 254, baseType: !1766, size: 256, offset: 1344)
!1766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1696, file: !1697, line: 254, size: 256, elements: !1767)
!1767 = !{!1768, !1774}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1766, file: !1697, line: 255, baseType: !1769, size: 256)
!1769 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1697, line: 128, size: 256, elements: !1770)
!1770 = !{!1771, !1772}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1769, file: !1697, line: 129, baseType: !258, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1769, file: !1697, line: 130, baseType: !1773, size: 256)
!1773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !258, size: 256, elements: !1275)
!1774 = !DIDerivedType(tag: DW_TAG_member, scope: !1766, file: !1697, line: 256, baseType: !1775, size: 256)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1766, file: !1697, line: 256, size: 256, elements: !1776)
!1776 = !{!1777, !1778}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1775, file: !1697, line: 258, baseType: !263, size: 128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1775, file: !1697, line: 259, baseType: !1779, size: 128, offset: 128)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1780, line: 22, size: 128, elements: !1781)
!1780 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1781 = !{!1782, !1785}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1779, file: !1780, line: 23, baseType: !1783, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1780, line: 23, flags: DIFlagFwdDecl)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1779, file: !1780, line: 24, baseType: !448, size: 64, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1696, file: !1697, line: 274, baseType: !1787, size: 64, offset: 1600)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1697, line: 170, size: 192, elements: !1789)
!1789 = !{!1790, !1799, !1800}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1788, file: !1697, line: 171, baseType: !1791, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1697, line: 165, baseType: !1792)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{!304, !1695, !1795, !1797, !1695}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1748)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1769)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1788, file: !1697, line: 172, baseType: !1695, size: 64, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1788, file: !1697, line: 173, baseType: !1747, size: 64, offset: 128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1667, file: !1668, line: 138, baseType: !1695, size: 64, offset: 768)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1667, file: !1668, line: 139, baseType: !1695, size: 64, offset: 832)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1667, file: !1668, line: 140, baseType: !1695, size: 64, offset: 896)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1667, file: !1668, line: 145, baseType: !1805, size: 64, offset: 960)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1807, line: 13, size: 896, elements: !1808)
!1807 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1806, file: !1807, line: 14, baseType: !1350, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1806, file: !1807, line: 15, baseType: !867, size: 32, offset: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1806, file: !1807, line: 16, baseType: !867, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1806, file: !1807, line: 21, baseType: !891, size: 64, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1806, file: !1807, line: 27, baseType: !448, size: 64, offset: 192)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1806, file: !1807, line: 28, baseType: !448, size: 64, offset: 256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1806, file: !1807, line: 29, baseType: !891, size: 64, offset: 320)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1806, file: !1807, line: 32, baseType: !758, size: 128, offset: 384)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1806, file: !1807, line: 33, baseType: !554, size: 32, offset: 512)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1806, file: !1807, line: 37, baseType: !891, size: 64, offset: 576)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1806, file: !1807, line: 44, baseType: !1820, size: 256, offset: 640)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1821, line: 15, size: 256, elements: !1822)
!1821 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1822 = !{!1823, !1824, !1825, !1826, !1827, !1828, !1829}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1820, file: !1821, line: 16, baseType: !900)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1820, file: !1821, line: 18, baseType: !304, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1820, file: !1821, line: 19, baseType: !304, size: 32, offset: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1820, file: !1821, line: 20, baseType: !304, size: 32, offset: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1820, file: !1821, line: 21, baseType: !304, size: 32, offset: 96)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1820, file: !1821, line: 22, baseType: !448, size: 64, offset: 128)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1820, file: !1821, line: 23, baseType: !448, size: 64, offset: 192)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1667, file: !1668, line: 146, baseType: !1831, size: 64, offset: 1024)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !842, line: 516, flags: DIFlagFwdDecl)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1667, file: !1668, line: 147, baseType: !1834, size: 64, offset: 1088)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1668, line: 25, size: 64, elements: !1836)
!1836 = !{!1837, !1838, !1839}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1835, file: !1668, line: 26, baseType: !867, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1835, file: !1668, line: 27, baseType: !304, size: 32, offset: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1835, file: !1668, line: 28, baseType: !1840, offset: 64)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !562, elements: !1841)
!1841 = !{!1842}
!1842 = !DISubrange(count: 0)
!1843 = !DIDerivedType(tag: DW_TAG_member, scope: !1667, file: !1668, line: 149, baseType: !1844, size: 128, offset: 1152)
!1844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1667, file: !1668, line: 149, size: 128, elements: !1845)
!1845 = !{!1846, !1847}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1844, file: !1668, line: 150, baseType: !304, size: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1844, file: !1668, line: 151, baseType: !489, size: 128, align: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1337, file: !1338, line: 926, baseType: !1665, size: 64, offset: 8576)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1337, file: !1338, line: 929, baseType: !1665, size: 64, offset: 8640)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1337, file: !1338, line: 933, baseType: !1695, size: 64, offset: 8704)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1337, file: !1338, line: 943, baseType: !1852, size: 128, offset: 8768)
!1852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 128, elements: !1853)
!1853 = !{!1854}
!1854 = !DISubrange(count: 16)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1337, file: !1338, line: 945, baseType: !1856, size: 64, offset: 8896)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1338, line: 49, flags: DIFlagFwdDecl)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1337, file: !1338, line: 956, baseType: !1859, size: 64, offset: 8960)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1338, line: 45, flags: DIFlagFwdDecl)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1337, file: !1338, line: 959, baseType: !1862, size: 64, offset: 9024)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1338, line: 959, flags: DIFlagFwdDecl)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1337, file: !1338, line: 962, baseType: !1865, size: 64, offset: 9088)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1338, line: 66, flags: DIFlagFwdDecl)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1337, file: !1338, line: 966, baseType: !1868, size: 64, offset: 9152)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1338, line: 50, flags: DIFlagFwdDecl)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1337, file: !1338, line: 969, baseType: !1871, size: 64, offset: 9216)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1873, line: 82, size: 7296, elements: !1874)
!1873 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1874 = !{!1875, !1876, !1877, !1878, !1879, !1880, !1881, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1910, !1919, !1920, !1922, !1923, !1924, !1927, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1957, !1958, !1965, !1966, !1967, !1968, !1969, !1970}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1872, file: !1873, line: 83, baseType: !1350, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1872, file: !1873, line: 84, baseType: !867, size: 32, offset: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1872, file: !1873, line: 85, baseType: !304, size: 32, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1872, file: !1873, line: 86, baseType: !263, size: 128, offset: 128)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1872, file: !1873, line: 88, baseType: !1599, size: 128, offset: 256)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1872, file: !1873, line: 91, baseType: !1336, size: 64, offset: 384)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1872, file: !1873, line: 94, baseType: !1882, size: 192, offset: 448)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1883, line: 30, size: 192, elements: !1884)
!1883 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1882, file: !1883, line: 31, baseType: !263, size: 128)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1882, file: !1883, line: 32, baseType: !1887, size: 64, offset: 128)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1888, line: 25, baseType: !1889)
!1888 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1888, line: 23, size: 64, elements: !1890)
!1890 = !{!1891}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1889, file: !1888, line: 24, baseType: !1488, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1872, file: !1873, line: 97, baseType: !754, size: 64, offset: 640)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1872, file: !1873, line: 100, baseType: !304, size: 32, offset: 704)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1872, file: !1873, line: 106, baseType: !304, size: 32, offset: 736)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1872, file: !1873, line: 107, baseType: !1336, size: 64, offset: 768)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1872, file: !1873, line: 110, baseType: !304, size: 32, offset: 832)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1872, file: !1873, line: 111, baseType: !7, size: 32, offset: 864)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1872, file: !1873, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1872, file: !1873, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1872, file: !1873, line: 128, baseType: !304, size: 32, offset: 928)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1872, file: !1873, line: 129, baseType: !263, size: 128, offset: 960)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1872, file: !1873, line: 132, baseType: !1412, size: 512, offset: 1088)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1872, file: !1873, line: 133, baseType: !1420, size: 64, offset: 1600)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1872, file: !1873, line: 140, baseType: !1905, size: 256, offset: 1664)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1906, size: 256, elements: !1687)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1873, line: 38, size: 128, elements: !1907)
!1907 = !{!1908, !1909}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1906, file: !1873, line: 39, baseType: !541, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1906, file: !1873, line: 40, baseType: !541, size: 64, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1872, file: !1873, line: 146, baseType: !1911, size: 192, offset: 1920)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1873, line: 66, size: 192, elements: !1912)
!1912 = !{!1913}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1911, file: !1873, line: 67, baseType: !1914, size: 192)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1873, line: 47, size: 192, elements: !1915)
!1915 = !{!1916, !1917, !1918}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1914, file: !1873, line: 48, baseType: !893, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1914, file: !1873, line: 49, baseType: !893, size: 64, offset: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1914, file: !1873, line: 50, baseType: !893, size: 64, offset: 128)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1872, file: !1873, line: 150, baseType: !1648, size: 640, offset: 2112)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1872, file: !1873, line: 153, baseType: !1921, size: 256, offset: 2752)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1589, size: 256, elements: !1275)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1872, file: !1873, line: 159, baseType: !1589, size: 64, offset: 3008)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1872, file: !1873, line: 162, baseType: !304, size: 32, offset: 3072)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1872, file: !1873, line: 164, baseType: !1925, size: 64, offset: 3136)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1873, line: 164, flags: DIFlagFwdDecl)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1872, file: !1873, line: 175, baseType: !1928, size: 32, offset: 3200)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !512, line: 805, baseType: !1929)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 798, size: 32, elements: !1930)
!1930 = !{!1931, !1932}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1929, file: !512, line: 803, baseType: !511, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1929, file: !512, line: 804, baseType: !358, offset: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1872, file: !1873, line: 176, baseType: !541, size: 64, offset: 3264)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1872, file: !1873, line: 176, baseType: !541, size: 64, offset: 3328)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1872, file: !1873, line: 176, baseType: !541, size: 64, offset: 3392)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1872, file: !1873, line: 176, baseType: !541, size: 64, offset: 3456)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1872, file: !1873, line: 177, baseType: !541, size: 64, offset: 3520)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1872, file: !1873, line: 178, baseType: !541, size: 64, offset: 3584)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1872, file: !1873, line: 179, baseType: !1636, size: 128, offset: 3648)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1872, file: !1873, line: 180, baseType: !448, size: 64, offset: 3776)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1872, file: !1873, line: 180, baseType: !448, size: 64, offset: 3840)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1872, file: !1873, line: 180, baseType: !448, size: 64, offset: 3904)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1872, file: !1873, line: 180, baseType: !448, size: 64, offset: 3968)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1872, file: !1873, line: 181, baseType: !448, size: 64, offset: 4032)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1872, file: !1873, line: 181, baseType: !448, size: 64, offset: 4096)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1872, file: !1873, line: 181, baseType: !448, size: 64, offset: 4160)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1872, file: !1873, line: 181, baseType: !448, size: 64, offset: 4224)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1872, file: !1873, line: 182, baseType: !448, size: 64, offset: 4288)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1872, file: !1873, line: 182, baseType: !448, size: 64, offset: 4352)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1872, file: !1873, line: 182, baseType: !448, size: 64, offset: 4416)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1872, file: !1873, line: 182, baseType: !448, size: 64, offset: 4480)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1872, file: !1873, line: 183, baseType: !448, size: 64, offset: 4544)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1872, file: !1873, line: 183, baseType: !448, size: 64, offset: 4608)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1872, file: !1873, line: 184, baseType: !1955, offset: 4672)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1956, line: 12, elements: !372)
!1956 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1872, file: !1873, line: 192, baseType: !543, size: 64, offset: 4672)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1872, file: !1873, line: 203, baseType: !1959, size: 2048, offset: 4736)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1960, size: 2048, elements: !1853)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1961, line: 43, size: 128, elements: !1962)
!1961 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1962 = !{!1963, !1964}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1960, file: !1961, line: 44, baseType: !447, size: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1960, file: !1961, line: 45, baseType: !447, size: 64, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1872, file: !1873, line: 220, baseType: !609, size: 8, offset: 6784)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1872, file: !1873, line: 221, baseType: !1325, size: 16, offset: 6800)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1872, file: !1873, line: 222, baseType: !1325, size: 16, offset: 6816)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1872, file: !1873, line: 224, baseType: !1094, size: 64, offset: 6848)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1872, file: !1873, line: 227, baseType: !1293, size: 192, offset: 6912)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1872, file: !1873, line: 233, baseType: !1293, size: 192, offset: 7104)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1337, file: !1338, line: 970, baseType: !1972, size: 64, offset: 9280)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1873, line: 20, size: 16576, elements: !1974)
!1974 = !{!1975, !1976, !1977, !1978}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1973, file: !1873, line: 21, baseType: !358)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1973, file: !1873, line: 22, baseType: !1350, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1973, file: !1873, line: 23, baseType: !1599, size: 128, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1973, file: !1873, line: 24, baseType: !1979, size: 16384, offset: 192)
!1979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1980, size: 16384, elements: !404)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1883, line: 49, size: 256, elements: !1981)
!1981 = !{!1982}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1980, file: !1883, line: 50, baseType: !1983, size: 256)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1883, line: 35, size: 256, elements: !1984)
!1984 = !{!1985, !1992, !1993, !1999}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1983, file: !1883, line: 37, baseType: !1986, size: 64)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1987, line: 19, baseType: !1988)
!1987 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1987, line: 18, baseType: !1990)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{null, !304}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1983, file: !1883, line: 38, baseType: !448, size: 64, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1983, file: !1883, line: 44, baseType: !1994, size: 64, offset: 128)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1987, line: 22, baseType: !1995)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1987, line: 21, baseType: !1997)
!1997 = !DISubroutineType(types: !1998)
!1998 = !{null}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1983, file: !1883, line: 46, baseType: !1887, size: 64, offset: 192)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1337, file: !1338, line: 971, baseType: !1887, size: 64, offset: 9344)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1337, file: !1338, line: 972, baseType: !1887, size: 64, offset: 9408)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1337, file: !1338, line: 974, baseType: !1887, size: 64, offset: 9472)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1337, file: !1338, line: 975, baseType: !1882, size: 192, offset: 9536)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1337, file: !1338, line: 976, baseType: !448, size: 64, offset: 9728)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1337, file: !1338, line: 977, baseType: !445, size: 64, offset: 9792)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1337, file: !1338, line: 978, baseType: !7, size: 32, offset: 9856)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1337, file: !1338, line: 980, baseType: !492, size: 64, offset: 9920)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1337, file: !1338, line: 989, baseType: !2009, size: 128, offset: 9984)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2010, line: 35, size: 128, elements: !2011)
!2010 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2011 = !{!2012, !2013, !2014}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2009, file: !2010, line: 36, baseType: !304, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2009, file: !2010, line: 37, baseType: !867, size: 32, offset: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2009, file: !2010, line: 38, baseType: !2015, size: 64, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2010, line: 23, flags: DIFlagFwdDecl)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1337, file: !1338, line: 992, baseType: !541, size: 64, offset: 10112)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1337, file: !1338, line: 993, baseType: !541, size: 64, offset: 10176)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1337, file: !1338, line: 996, baseType: !358, offset: 10240)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1337, file: !1338, line: 999, baseType: !900, offset: 10240)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1337, file: !1338, line: 1001, baseType: !2022, size: 64, offset: 10240)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1338, line: 636, size: 64, elements: !2023)
!2023 = !{!2024}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2022, file: !1338, line: 637, baseType: !2025, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1337, file: !1338, line: 1005, baseType: !872, size: 128, offset: 10304)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1337, file: !1338, line: 1007, baseType: !1336, size: 64, offset: 10432)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1337, file: !1338, line: 1009, baseType: !2029, size: 64, offset: 10496)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!2030 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1338, line: 1009, flags: DIFlagFwdDecl)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1337, file: !1338, line: 1043, baseType: !258, size: 64, offset: 10560)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1337, file: !1338, line: 1046, baseType: !2033, size: 64, offset: 10624)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1338, line: 41, flags: DIFlagFwdDecl)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1337, file: !1338, line: 1050, baseType: !2036, size: 64, offset: 10688)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1338, line: 42, flags: DIFlagFwdDecl)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1337, file: !1338, line: 1054, baseType: !2039, size: 64, offset: 10752)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1338, line: 55, flags: DIFlagFwdDecl)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1337, file: !1338, line: 1056, baseType: !2042, size: 64, offset: 10816)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1338, line: 40, flags: DIFlagFwdDecl)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1337, file: !1338, line: 1058, baseType: !2045, size: 64, offset: 10880)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2047, line: 99, size: 704, elements: !2048)
!2047 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2048 = !{!2049, !2050, !2051, !2052, !2053, !2054, !2055, !2074, !2075}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2046, file: !2047, line: 100, baseType: !891, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2046, file: !2047, line: 101, baseType: !867, size: 32, offset: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2046, file: !2047, line: 102, baseType: !867, size: 32, offset: 96)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2046, file: !2047, line: 105, baseType: !358, offset: 128)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2046, file: !2047, line: 107, baseType: !440, size: 16, offset: 128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2046, file: !2047, line: 109, baseType: !858, size: 128, offset: 192)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2046, file: !2047, line: 110, baseType: !2056, size: 64, offset: 320)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2047, line: 73, size: 448, elements: !2058)
!2058 = !{!2059, !2062, !2063, !2068, !2073}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2057, file: !2047, line: 74, baseType: !2060, size: 64)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2047, line: 74, flags: DIFlagFwdDecl)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2057, file: !2047, line: 75, baseType: !2045, size: 64, offset: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, scope: !2057, file: !2047, line: 83, baseType: !2064, size: 128, offset: 128)
!2064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2057, file: !2047, line: 83, size: 128, elements: !2065)
!2065 = !{!2066, !2067}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2064, file: !2047, line: 84, baseType: !263, size: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2064, file: !2047, line: 85, baseType: !1055, size: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, scope: !2057, file: !2047, line: 87, baseType: !2069, size: 128, offset: 256)
!2069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2057, file: !2047, line: 87, size: 128, elements: !2070)
!2070 = !{!2071, !2072}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2069, file: !2047, line: 88, baseType: !758, size: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2069, file: !2047, line: 89, baseType: !489, size: 128, align: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2057, file: !2047, line: 92, baseType: !7, size: 32, offset: 384)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2046, file: !2047, line: 111, baseType: !754, size: 64, offset: 384)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2046, file: !2047, line: 113, baseType: !2076, size: 256, offset: 448)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !211, line: 102, size: 256, elements: !2077)
!2077 = !{!2078, !2079, !2080}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2076, file: !211, line: 103, baseType: !891, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2076, file: !211, line: 104, baseType: !263, size: 128, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2076, file: !211, line: 105, baseType: !2081, size: 64, offset: 192)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !211, line: 21, baseType: !2082)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{null, !2085}
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1337, file: !1338, line: 1061, baseType: !2087, size: 64, offset: 10944)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1338, line: 43, flags: DIFlagFwdDecl)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1337, file: !1338, line: 1064, baseType: !448, size: 64, offset: 11008)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1337, file: !1338, line: 1065, baseType: !2091, size: 64, offset: 11072)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1883, line: 14, baseType: !2093)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1883, line: 12, size: 384, elements: !2094)
!2094 = !{!2095}
!2095 = !DIDerivedType(tag: DW_TAG_member, scope: !2093, file: !1883, line: 13, baseType: !2096, size: 384)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2093, file: !1883, line: 13, size: 384, elements: !2097)
!2097 = !{!2098, !2099, !2100, !2101}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2096, file: !1883, line: 13, baseType: !304, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2096, file: !1883, line: 13, baseType: !304, size: 32, offset: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2096, file: !1883, line: 13, baseType: !304, size: 32, offset: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2096, file: !1883, line: 13, baseType: !2102, size: 256, offset: 128)
!2102 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2103, line: 32, size: 256, elements: !2104)
!2103 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2104 = !{!2105, !2110, !2123, !2129, !2138, !2158, !2163}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2102, file: !2103, line: 37, baseType: !2106, size: 64)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2102, file: !2103, line: 34, size: 64, elements: !2107)
!2107 = !{!2108, !2109}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2106, file: !2103, line: 35, baseType: !1578, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2106, file: !2103, line: 36, baseType: !560, size: 32, offset: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2102, file: !2103, line: 45, baseType: !2111, size: 192)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2102, file: !2103, line: 40, size: 192, elements: !2112)
!2112 = !{!2113, !2115, !2116, !2122}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2111, file: !2103, line: 41, baseType: !2114, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !432, line: 95, baseType: !304)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2111, file: !2103, line: 42, baseType: !304, size: 32, offset: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2111, file: !2103, line: 43, baseType: !2117, size: 64, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2103, line: 11, baseType: !2118)
!2118 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2103, line: 8, size: 64, elements: !2119)
!2119 = !{!2120, !2121}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2118, file: !2103, line: 9, baseType: !304, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2118, file: !2103, line: 10, baseType: !258, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2111, file: !2103, line: 44, baseType: !304, size: 32, offset: 128)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2102, file: !2103, line: 52, baseType: !2124, size: 128)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2102, file: !2103, line: 48, size: 128, elements: !2125)
!2125 = !{!2126, !2127, !2128}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2124, file: !2103, line: 49, baseType: !1578, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2124, file: !2103, line: 50, baseType: !560, size: 32, offset: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2124, file: !2103, line: 51, baseType: !2117, size: 64, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2102, file: !2103, line: 61, baseType: !2130, size: 256)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2102, file: !2103, line: 55, size: 256, elements: !2131)
!2131 = !{!2132, !2133, !2134, !2135, !2137}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2130, file: !2103, line: 56, baseType: !1578, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2130, file: !2103, line: 57, baseType: !560, size: 32, offset: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2130, file: !2103, line: 58, baseType: !304, size: 32, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2130, file: !2103, line: 59, baseType: !2136, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !432, line: 94, baseType: !433)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2130, file: !2103, line: 60, baseType: !2136, size: 64, offset: 192)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2102, file: !2103, line: 95, baseType: !2139, size: 256)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2102, file: !2103, line: 64, size: 256, elements: !2140)
!2140 = !{!2141, !2142}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2139, file: !2103, line: 65, baseType: !258, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, scope: !2139, file: !2103, line: 77, baseType: !2143, size: 192, offset: 64)
!2143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2139, file: !2103, line: 77, size: 192, elements: !2144)
!2144 = !{!2145, !2146, !2153}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2143, file: !2103, line: 82, baseType: !1325, size: 16)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2143, file: !2103, line: 88, baseType: !2147, size: 192)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2143, file: !2103, line: 84, size: 192, elements: !2148)
!2148 = !{!2149, !2151, !2152}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2147, file: !2103, line: 85, baseType: !2150, size: 64)
!2150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 64, elements: !1450)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2147, file: !2103, line: 86, baseType: !258, size: 64, offset: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2147, file: !2103, line: 87, baseType: !258, size: 64, offset: 128)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2143, file: !2103, line: 93, baseType: !2154, size: 96)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2143, file: !2103, line: 90, size: 96, elements: !2155)
!2155 = !{!2156, !2157}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2154, file: !2103, line: 91, baseType: !2150, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2154, file: !2103, line: 92, baseType: !320, size: 32, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2102, file: !2103, line: 101, baseType: !2159, size: 128)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2102, file: !2103, line: 98, size: 128, elements: !2160)
!2160 = !{!2161, !2162}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2159, file: !2103, line: 99, baseType: !212, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2159, file: !2103, line: 100, baseType: !304, size: 32, offset: 64)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2102, file: !2103, line: 108, baseType: !2164, size: 128)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2102, file: !2103, line: 104, size: 128, elements: !2165)
!2165 = !{!2166, !2167, !2168}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2164, file: !2103, line: 105, baseType: !258, size: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2164, file: !2103, line: 106, baseType: !304, size: 32, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2164, file: !2103, line: 107, baseType: !7, size: 32, offset: 96)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1337, file: !1338, line: 1067, baseType: !1955, offset: 11136)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1337, file: !1338, line: 1099, baseType: !2171, size: 64, offset: 11136)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1338, line: 56, flags: DIFlagFwdDecl)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1337, file: !1338, line: 1103, baseType: !263, size: 128, offset: 11200)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1337, file: !1338, line: 1104, baseType: !2175, size: 64, offset: 11328)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1338, line: 46, flags: DIFlagFwdDecl)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1337, file: !1338, line: 1105, baseType: !1293, size: 192, offset: 11392)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1337, file: !1338, line: 1106, baseType: !7, size: 32, offset: 11584)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1337, file: !1338, line: 1109, baseType: !2180, size: 128, offset: 11648)
!2180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2181, size: 128, elements: !1687)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!2182 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1338, line: 51, flags: DIFlagFwdDecl)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1337, file: !1338, line: 1110, baseType: !1293, size: 192, offset: 11776)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1337, file: !1338, line: 1111, baseType: !263, size: 128, offset: 11968)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1337, file: !1338, line: 1173, baseType: !2186, size: 64, offset: 12096)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2188, line: 62, size: 256, align: 256, elements: !2189)
!2188 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2189 = !{!2190, !2191, !2192, !2197}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2187, file: !2188, line: 75, baseType: !320, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2187, file: !2188, line: 90, baseType: !320, size: 32, offset: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2187, file: !2188, line: 124, baseType: !2193, size: 64, offset: 64)
!2193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2187, file: !2188, line: 109, size: 64, elements: !2194)
!2194 = !{!2195, !2196}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2193, file: !2188, line: 110, baseType: !542, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2193, file: !2188, line: 112, baseType: !542, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2187, file: !2188, line: 144, baseType: !320, size: 32, offset: 128)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1337, file: !1338, line: 1174, baseType: !319, size: 32, offset: 12160)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1337, file: !1338, line: 1179, baseType: !448, size: 64, offset: 12224)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1337, file: !1338, line: 1182, baseType: !2201, size: 128, offset: 12288)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1271, line: 76, size: 128, elements: !2202)
!2202 = !{!2203, !2208, !2209}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2201, file: !1271, line: 85, baseType: !2204, size: 64)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2205, line: 7, size: 64, elements: !2206)
!2205 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2206 = !{!2207}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2204, file: !2205, line: 12, baseType: !1485, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2201, file: !1271, line: 88, baseType: !609, size: 8, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2201, file: !1271, line: 95, baseType: !609, size: 8, offset: 72)
!2210 = !DIDerivedType(tag: DW_TAG_member, scope: !1337, file: !1338, line: 1184, baseType: !2211, size: 128, offset: 12416)
!2211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1337, file: !1338, line: 1184, size: 128, elements: !2212)
!2212 = !{!2213, !2214}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2211, file: !1338, line: 1185, baseType: !1350, size: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2211, file: !1338, line: 1186, baseType: !489, size: 128, align: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1337, file: !1338, line: 1190, baseType: !2216, size: 64, offset: 12544)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1338, line: 53, flags: DIFlagFwdDecl)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1337, file: !1338, line: 1192, baseType: !2219, size: 128, offset: 12608)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1271, line: 64, size: 128, elements: !2220)
!2220 = !{!2221, !2222, !2223}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2219, file: !1271, line: 65, baseType: !840, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2219, file: !1271, line: 67, baseType: !320, size: 32, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2219, file: !1271, line: 68, baseType: !320, size: 32, offset: 96)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1337, file: !1338, line: 1206, baseType: !304, size: 32, offset: 12736)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1337, file: !1338, line: 1207, baseType: !304, size: 32, offset: 12768)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1337, file: !1338, line: 1209, baseType: !448, size: 64, offset: 12800)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1337, file: !1338, line: 1219, baseType: !541, size: 64, offset: 12864)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1337, file: !1338, line: 1220, baseType: !541, size: 64, offset: 12928)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1337, file: !1338, line: 1317, baseType: !304, size: 32, offset: 12992)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1337, file: !1338, line: 1319, baseType: !1336, size: 64, offset: 13056)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1337, file: !1338, line: 1322, baseType: !2232, size: 64, offset: 13120)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2234, line: 56, size: 512, elements: !2235)
!2234 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2235 = !{!2236, !2237, !2238, !2239, !2240, !2241, !2242, !2244}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2233, file: !2234, line: 57, baseType: !2232, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2233, file: !2234, line: 58, baseType: !258, size: 64, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2233, file: !2234, line: 59, baseType: !448, size: 64, offset: 128)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2233, file: !2234, line: 60, baseType: !448, size: 64, offset: 192)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2233, file: !2234, line: 61, baseType: !940, size: 64, offset: 256)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2233, file: !2234, line: 62, baseType: !7, size: 32, offset: 320)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2233, file: !2234, line: 63, baseType: !2243, size: 64, offset: 384)
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !264, line: 153, baseType: !541)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2233, file: !2234, line: 64, baseType: !2245, size: 64, offset: 448)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1337, file: !1338, line: 1326, baseType: !1350, size: 32, offset: 13184)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1337, file: !1338, line: 1342, baseType: !258, size: 64, offset: 13248)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1337, file: !1338, line: 1343, baseType: !542, size: 64, offset: 13312)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1337, file: !1338, line: 1344, baseType: !541, size: 64, offset: 13376)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1337, file: !1338, line: 1345, baseType: !542, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1337, file: !1338, line: 1346, baseType: !542, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1337, file: !1338, line: 1347, baseType: !542, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1337, file: !1338, line: 1348, baseType: !489, size: 128, align: 64, offset: 13504)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1337, file: !1338, line: 1358, baseType: !2256, size: 34816, offset: 13824)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2257, line: 485, size: 34816, elements: !2258)
!2257 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2258 = !{!2259, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2288, !2289, !2290, !2291, !2292, !2293, !2296, !2297, !2298}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2256, file: !2257, line: 487, baseType: !2260, size: 192)
!2260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2261, size: 192, elements: !400)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2262, line: 16, size: 64, elements: !2263)
!2262 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2263 = !{!2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2261, file: !2262, line: 17, baseType: !979, size: 16)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2261, file: !2262, line: 18, baseType: !979, size: 16, offset: 16)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2261, file: !2262, line: 19, baseType: !979, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2261, file: !2262, line: 19, baseType: !979, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2261, file: !2262, line: 19, baseType: !979, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2261, file: !2262, line: 19, baseType: !979, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2261, file: !2262, line: 19, baseType: !979, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2261, file: !2262, line: 20, baseType: !979, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2261, file: !2262, line: 20, baseType: !979, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2261, file: !2262, line: 20, baseType: !979, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2261, file: !2262, line: 20, baseType: !979, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2261, file: !2262, line: 20, baseType: !979, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2261, file: !2262, line: 20, baseType: !979, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2256, file: !2257, line: 491, baseType: !448, size: 64, offset: 192)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2256, file: !2257, line: 495, baseType: !440, size: 16, offset: 256)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2256, file: !2257, line: 496, baseType: !440, size: 16, offset: 272)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2256, file: !2257, line: 497, baseType: !440, size: 16, offset: 288)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2256, file: !2257, line: 498, baseType: !440, size: 16, offset: 304)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2256, file: !2257, line: 502, baseType: !448, size: 64, offset: 320)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2256, file: !2257, line: 503, baseType: !448, size: 64, offset: 384)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2256, file: !2257, line: 514, baseType: !2285, size: 256, offset: 448)
!2285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2286, size: 256, elements: !1275)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2257, line: 483, flags: DIFlagFwdDecl)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2256, file: !2257, line: 516, baseType: !448, size: 64, offset: 704)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2256, file: !2257, line: 518, baseType: !448, size: 64, offset: 768)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2256, file: !2257, line: 520, baseType: !448, size: 64, offset: 832)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2256, file: !2257, line: 521, baseType: !448, size: 64, offset: 896)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2256, file: !2257, line: 522, baseType: !448, size: 64, offset: 960)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2256, file: !2257, line: 528, baseType: !2294, size: 64, offset: 1024)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 64)
!2295 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2257, line: 10, flags: DIFlagFwdDecl)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2256, file: !2257, line: 535, baseType: !448, size: 64, offset: 1088)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2256, file: !2257, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2256, file: !2257, line: 540, baseType: !2299, size: 33280, offset: 1536)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2300, line: 317, size: 33280, elements: !2301)
!2300 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2301 = !{!2302, !2303, !2304}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2299, file: !2300, line: 330, baseType: !7, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2299, file: !2300, line: 337, baseType: !448, size: 64, offset: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2299, file: !2300, line: 348, baseType: !2305, size: 32768, offset: 512)
!2305 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2300, line: 304, size: 32768, elements: !2306)
!2306 = !{!2307, !2322, !2361, !2411, !2424}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2305, file: !2300, line: 305, baseType: !2308, size: 896)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2300, line: 12, size: 896, elements: !2309)
!2309 = !{!2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2321}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2308, file: !2300, line: 13, baseType: !319, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2308, file: !2300, line: 14, baseType: !319, size: 32, offset: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2308, file: !2300, line: 15, baseType: !319, size: 32, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2308, file: !2300, line: 16, baseType: !319, size: 32, offset: 96)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2308, file: !2300, line: 17, baseType: !319, size: 32, offset: 128)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2308, file: !2300, line: 18, baseType: !319, size: 32, offset: 160)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2308, file: !2300, line: 19, baseType: !319, size: 32, offset: 192)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2308, file: !2300, line: 22, baseType: !2318, size: 640, offset: 224)
!2318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 640, elements: !2319)
!2319 = !{!2320}
!2320 = !DISubrange(count: 20)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2308, file: !2300, line: 25, baseType: !319, size: 32, offset: 864)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2305, file: !2300, line: 306, baseType: !2323, size: 4096, align: 128)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2300, line: 34, size: 4096, align: 128, elements: !2324)
!2324 = !{!2325, !2326, !2327, !2328, !2329, !2344, !2345, !2346, !2350, !2352, !2356}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2323, file: !2300, line: 35, baseType: !979, size: 16)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2323, file: !2300, line: 36, baseType: !979, size: 16, offset: 16)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2323, file: !2300, line: 37, baseType: !979, size: 16, offset: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2323, file: !2300, line: 38, baseType: !979, size: 16, offset: 48)
!2329 = !DIDerivedType(tag: DW_TAG_member, scope: !2323, file: !2300, line: 39, baseType: !2330, size: 128, offset: 64)
!2330 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2323, file: !2300, line: 39, size: 128, elements: !2331)
!2331 = !{!2332, !2337}
!2332 = !DIDerivedType(tag: DW_TAG_member, scope: !2330, file: !2300, line: 40, baseType: !2333, size: 128)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2330, file: !2300, line: 40, size: 128, elements: !2334)
!2334 = !{!2335, !2336}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2333, file: !2300, line: 41, baseType: !541, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2333, file: !2300, line: 42, baseType: !541, size: 64, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_member, scope: !2330, file: !2300, line: 44, baseType: !2338, size: 128)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2330, file: !2300, line: 44, size: 128, elements: !2339)
!2339 = !{!2340, !2341, !2342, !2343}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2338, file: !2300, line: 45, baseType: !319, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2338, file: !2300, line: 46, baseType: !319, size: 32, offset: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2338, file: !2300, line: 47, baseType: !319, size: 32, offset: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2338, file: !2300, line: 48, baseType: !319, size: 32, offset: 96)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2323, file: !2300, line: 51, baseType: !319, size: 32, offset: 192)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2323, file: !2300, line: 52, baseType: !319, size: 32, offset: 224)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2323, file: !2300, line: 55, baseType: !2347, size: 1024, offset: 256)
!2347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 1024, elements: !2348)
!2348 = !{!2349}
!2349 = !DISubrange(count: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2323, file: !2300, line: 58, baseType: !2351, size: 2048, offset: 1280)
!2351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 2048, elements: !404)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2323, file: !2300, line: 60, baseType: !2353, size: 384, offset: 3328)
!2353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 384, elements: !2354)
!2354 = !{!2355}
!2355 = !DISubrange(count: 12)
!2356 = !DIDerivedType(tag: DW_TAG_member, scope: !2323, file: !2300, line: 62, baseType: !2357, size: 384, offset: 3712)
!2357 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2323, file: !2300, line: 62, size: 384, elements: !2358)
!2358 = !{!2359, !2360}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2357, file: !2300, line: 63, baseType: !2353, size: 384)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2357, file: !2300, line: 64, baseType: !2353, size: 384)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2305, file: !2300, line: 307, baseType: !2362, size: 1088)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2300, line: 79, size: 1088, elements: !2363)
!2363 = !{!2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2410}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2362, file: !2300, line: 80, baseType: !319, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2362, file: !2300, line: 81, baseType: !319, size: 32, offset: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2362, file: !2300, line: 82, baseType: !319, size: 32, offset: 64)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2362, file: !2300, line: 83, baseType: !319, size: 32, offset: 96)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2362, file: !2300, line: 84, baseType: !319, size: 32, offset: 128)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2362, file: !2300, line: 85, baseType: !319, size: 32, offset: 160)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2362, file: !2300, line: 86, baseType: !319, size: 32, offset: 192)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2362, file: !2300, line: 88, baseType: !2318, size: 640, offset: 224)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2362, file: !2300, line: 89, baseType: !310, size: 8, offset: 864)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2362, file: !2300, line: 90, baseType: !310, size: 8, offset: 872)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2362, file: !2300, line: 91, baseType: !310, size: 8, offset: 880)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2362, file: !2300, line: 92, baseType: !310, size: 8, offset: 888)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2362, file: !2300, line: 93, baseType: !310, size: 8, offset: 896)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2362, file: !2300, line: 94, baseType: !310, size: 8, offset: 904)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2362, file: !2300, line: 95, baseType: !2379, size: 64, offset: 960)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2381, line: 11, size: 128, elements: !2382)
!2381 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2382 = !{!2383, !2384}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2380, file: !2381, line: 12, baseType: !212, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2380, file: !2381, line: 13, baseType: !2385, size: 64, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2387, line: 56, size: 1344, elements: !2388)
!2387 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2388 = !{!2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2386, file: !2387, line: 61, baseType: !448, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2386, file: !2387, line: 62, baseType: !448, size: 64, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2386, file: !2387, line: 63, baseType: !448, size: 64, offset: 128)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2386, file: !2387, line: 64, baseType: !448, size: 64, offset: 192)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2386, file: !2387, line: 65, baseType: !448, size: 64, offset: 256)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2386, file: !2387, line: 66, baseType: !448, size: 64, offset: 320)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2386, file: !2387, line: 68, baseType: !448, size: 64, offset: 384)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2386, file: !2387, line: 69, baseType: !448, size: 64, offset: 448)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2386, file: !2387, line: 70, baseType: !448, size: 64, offset: 512)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2386, file: !2387, line: 71, baseType: !448, size: 64, offset: 576)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2386, file: !2387, line: 72, baseType: !448, size: 64, offset: 640)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2386, file: !2387, line: 73, baseType: !448, size: 64, offset: 704)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2386, file: !2387, line: 74, baseType: !448, size: 64, offset: 768)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2386, file: !2387, line: 75, baseType: !448, size: 64, offset: 832)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2386, file: !2387, line: 76, baseType: !448, size: 64, offset: 896)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2386, file: !2387, line: 81, baseType: !448, size: 64, offset: 960)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2386, file: !2387, line: 83, baseType: !448, size: 64, offset: 1024)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2386, file: !2387, line: 84, baseType: !448, size: 64, offset: 1088)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2386, file: !2387, line: 85, baseType: !448, size: 64, offset: 1152)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2386, file: !2387, line: 86, baseType: !448, size: 64, offset: 1216)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2386, file: !2387, line: 87, baseType: !448, size: 64, offset: 1280)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2362, file: !2300, line: 96, baseType: !319, size: 32, offset: 1024)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2305, file: !2300, line: 308, baseType: !2412, size: 4608, align: 512)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2300, line: 289, size: 4608, align: 512, elements: !2413)
!2413 = !{!2414, !2415, !2422}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2412, file: !2300, line: 290, baseType: !2323, size: 4096, align: 128)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2412, file: !2300, line: 291, baseType: !2416, size: 512, offset: 4096)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2300, line: 268, size: 512, elements: !2417)
!2417 = !{!2418, !2419, !2420}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2416, file: !2300, line: 269, baseType: !541, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2416, file: !2300, line: 270, baseType: !541, size: 64, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2416, file: !2300, line: 271, baseType: !2421, size: 384, offset: 128)
!2421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !541, size: 384, elements: !1743)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2412, file: !2300, line: 292, baseType: !2423, offset: 4608)
!2423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !310, elements: !1841)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2305, file: !2300, line: 309, baseType: !2425, size: 32768)
!2425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !310, size: 32768, elements: !2426)
!2426 = !{!2427}
!2427 = !DISubrange(count: 4096)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1333, file: !842, line: 378, baseType: !2429, size: 64, offset: 64)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1329, file: !842, line: 384, baseType: !1620, size: 192, offset: 192)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1098, file: !842, line: 500, baseType: !358, offset: 6656)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1098, file: !842, line: 501, baseType: !2433, size: 64, offset: 6656)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64)
!2434 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !842, line: 387, flags: DIFlagFwdDecl)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1098, file: !842, line: 516, baseType: !1831, size: 64, offset: 6720)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1098, file: !842, line: 519, baseType: !476, size: 64, offset: 6784)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1098, file: !842, line: 521, baseType: !2438, size: 64, offset: 6848)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 64)
!2439 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !842, line: 521, flags: DIFlagFwdDecl)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1098, file: !842, line: 545, baseType: !867, size: 32, offset: 6912)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1098, file: !842, line: 548, baseType: !609, size: 8, offset: 6944)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1098, file: !842, line: 550, baseType: !2443, offset: 6952)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2444, line: 142, elements: !372)
!2444 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1098, file: !842, line: 554, baseType: !2076, size: 256, offset: 6976)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1098, file: !842, line: 557, baseType: !319, size: 32, offset: 7232)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1095, file: !842, line: 565, baseType: !2448, offset: 7296)
!2448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !448, elements: !2449)
!2449 = !{!2450}
!2450 = !DISubrange(count: -1)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1091, file: !842, line: 151, baseType: !867, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1084, file: !842, line: 156, baseType: !358, offset: 256)
!2453 = !DIDerivedType(tag: DW_TAG_member, scope: !846, file: !842, line: 159, baseType: !2454, size: 128)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !846, file: !842, line: 159, size: 128, elements: !2455)
!2455 = !{!2456, !2520}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2454, file: !842, line: 161, baseType: !2457, size: 64)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !39, line: 110, size: 1152, elements: !2459)
!2459 = !{!2460, !2470, !2491, !2492, !2493, !2494, !2495, !2507, !2508, !2509}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2458, file: !39, line: 111, baseType: !2461, size: 384)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !39, line: 19, size: 384, elements: !2462)
!2462 = !{!2463, !2465, !2466, !2467, !2468, !2469}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2461, file: !39, line: 20, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !448)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2461, file: !39, line: 21, baseType: !2464, size: 64, offset: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2461, file: !39, line: 22, baseType: !2464, size: 64, offset: 128)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2461, file: !39, line: 23, baseType: !448, size: 64, offset: 192)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2461, file: !39, line: 24, baseType: !448, size: 64, offset: 256)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2461, file: !39, line: 25, baseType: !448, size: 64, offset: 320)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2458, file: !39, line: 112, baseType: !2471, size: 64, offset: 384)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2473, line: 105, size: 128, elements: !2474)
!2473 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2474 = !{!2475, !2476}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2472, file: !2473, line: 110, baseType: !448, size: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2472, file: !2473, line: 118, baseType: !2477, size: 64, offset: 64)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2473, line: 95, size: 448, elements: !2479)
!2479 = !{!2480, !2481, !2486, !2487, !2488, !2489, !2490}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2478, file: !2473, line: 96, baseType: !891, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2478, file: !2473, line: 97, baseType: !2482, size: 64, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2473, line: 60, baseType: !2484)
!2484 = !DISubroutineType(types: !2485)
!2485 = !{null, !2471}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2478, file: !2473, line: 98, baseType: !2482, size: 64, offset: 128)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2478, file: !2473, line: 99, baseType: !609, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2478, file: !2473, line: 100, baseType: !609, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2478, file: !2473, line: 101, baseType: !489, size: 128, align: 64, offset: 256)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2478, file: !2473, line: 102, baseType: !2471, size: 64, offset: 384)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2458, file: !39, line: 113, baseType: !2472, size: 128, offset: 448)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2458, file: !39, line: 114, baseType: !1620, size: 192, offset: 576)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2458, file: !39, line: 115, baseType: !38, size: 32, offset: 768)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2458, file: !39, line: 116, baseType: !7, size: 32, offset: 800)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2458, file: !39, line: 117, baseType: !2496, size: 64, offset: 832)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2498)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !39, line: 67, size: 256, elements: !2499)
!2499 = !{!2500, !2501, !2505, !2506}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2498, file: !39, line: 73, baseType: !960, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2498, file: !39, line: 78, baseType: !2502, size: 64, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{null, !2457}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2498, file: !39, line: 83, baseType: !2502, size: 64, offset: 128)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2498, file: !39, line: 89, baseType: !1147, size: 64, offset: 192)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2458, file: !39, line: 118, baseType: !258, size: 64, offset: 896)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2458, file: !39, line: 119, baseType: !304, size: 32, offset: 960)
!2509 = !DIDerivedType(tag: DW_TAG_member, scope: !2458, file: !39, line: 120, baseType: !2510, size: 128, offset: 1024)
!2510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2458, file: !39, line: 120, size: 128, elements: !2511)
!2511 = !{!2512, !2518}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2510, file: !39, line: 121, baseType: !2513, size: 128)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2514, line: 6, size: 128, elements: !2515)
!2514 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2515 = !{!2516, !2517}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2513, file: !2514, line: 7, baseType: !541, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2513, file: !2514, line: 8, baseType: !541, size: 64, offset: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2510, file: !39, line: 122, baseType: !2519)
!2519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2513, elements: !1841)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2454, file: !842, line: 162, baseType: !258, size: 64, offset: 64)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !846, file: !842, line: 176, baseType: !489, size: 128, align: 64)
!2522 = !DIDerivedType(tag: DW_TAG_member, scope: !841, file: !842, line: 179, baseType: !2523, size: 32, offset: 384)
!2523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !841, file: !842, line: 179, size: 32, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2528}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2523, file: !842, line: 184, baseType: !867, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2523, file: !842, line: 192, baseType: !7, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2523, file: !842, line: 194, baseType: !7, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2523, file: !842, line: 195, baseType: !304, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !841, file: !842, line: 199, baseType: !867, size: 32, offset: 416)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !776, file: !52, line: 1964, baseType: !2531, size: 64, offset: 1344)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{!212, !718, !2534}
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2536, line: 12, size: 256, elements: !2537)
!2536 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2537 = !{!2538, !2539, !2540, !2541, !2542}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2535, file: !2536, line: 13, baseType: !863, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2535, file: !2536, line: 16, baseType: !304, size: 32, offset: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2535, file: !2536, line: 23, baseType: !448, size: 64, offset: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2535, file: !2536, line: 30, baseType: !448, size: 64, offset: 128)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2535, file: !2536, line: 33, baseType: !2543, size: 64, offset: 192)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !842, line: 27, flags: DIFlagFwdDecl)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !776, file: !52, line: 1966, baseType: !2531, size: 64, offset: 1408)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !719, file: !52, line: 1424, baseType: !2547, size: 64, offset: 448)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64)
!2548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2549)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !46, line: 322, size: 704, elements: !2550)
!2550 = !{!2551, !2597, !2601, !2605, !2606, !2607, !2608, !2609, !2614, !2619, !2623}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2549, file: !46, line: 323, baseType: !2552, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DISubroutineType(types: !2554)
!2554 = !{!304, !2555}
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !46, line: 294, size: 1600, elements: !2557)
!2557 = !{!2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2582, !2583, !2584}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2556, file: !46, line: 295, baseType: !758, size: 128)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2556, file: !46, line: 296, baseType: !263, size: 128, offset: 128)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2556, file: !46, line: 297, baseType: !263, size: 128, offset: 256)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2556, file: !46, line: 298, baseType: !263, size: 128, offset: 384)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2556, file: !46, line: 299, baseType: !1293, size: 192, offset: 512)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2556, file: !46, line: 300, baseType: !358, offset: 704)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2556, file: !46, line: 301, baseType: !867, size: 32, offset: 704)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2556, file: !46, line: 302, baseType: !718, size: 64, offset: 768)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2556, file: !46, line: 303, baseType: !2567, size: 64, offset: 832)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !46, line: 68, size: 64, elements: !2568)
!2568 = !{!2569, !2581}
!2569 = !DIDerivedType(tag: DW_TAG_member, scope: !2567, file: !46, line: 69, baseType: !2570, size: 32)
!2570 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2567, file: !46, line: 69, size: 32, elements: !2571)
!2571 = !{!2572, !2573, !2574}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2570, file: !46, line: 70, baseType: !554, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2570, file: !46, line: 71, baseType: !562, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2570, file: !46, line: 72, baseType: !2575, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2576, line: 24, baseType: !2577)
!2576 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2576, line: 22, size: 32, elements: !2578)
!2578 = !{!2579}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2577, file: !2576, line: 23, baseType: !2580, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2576, line: 20, baseType: !560)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2567, file: !46, line: 74, baseType: !45, size: 32, offset: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2556, file: !46, line: 304, baseType: !650, size: 64, offset: 896)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2556, file: !46, line: 305, baseType: !448, size: 64, offset: 960)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2556, file: !46, line: 306, baseType: !2585, size: 576, offset: 1024)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !46, line: 205, size: 576, elements: !2586)
!2586 = !{!2587, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2585, file: !46, line: 206, baseType: !2588, size: 64)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !46, line: 66, baseType: !652)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2585, file: !46, line: 207, baseType: !2588, size: 64, offset: 64)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2585, file: !46, line: 208, baseType: !2588, size: 64, offset: 128)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2585, file: !46, line: 209, baseType: !2588, size: 64, offset: 192)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2585, file: !46, line: 210, baseType: !2588, size: 64, offset: 256)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2585, file: !46, line: 211, baseType: !2588, size: 64, offset: 320)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2585, file: !46, line: 212, baseType: !2588, size: 64, offset: 384)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2585, file: !46, line: 213, baseType: !658, size: 64, offset: 448)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2585, file: !46, line: 214, baseType: !658, size: 64, offset: 512)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2549, file: !46, line: 324, baseType: !2598, size: 64, offset: 64)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DISubroutineType(types: !2600)
!2600 = !{!2555, !718, !304}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2549, file: !46, line: 325, baseType: !2602, size: 64, offset: 128)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = !DISubroutineType(types: !2604)
!2604 = !{null, !2555}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2549, file: !46, line: 326, baseType: !2552, size: 64, offset: 192)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2549, file: !46, line: 327, baseType: !2552, size: 64, offset: 256)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2549, file: !46, line: 328, baseType: !2552, size: 64, offset: 320)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2549, file: !46, line: 329, baseType: !804, size: 64, offset: 384)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2549, file: !46, line: 332, baseType: !2610, size: 64, offset: 448)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = !DISubroutineType(types: !2612)
!2612 = !{!2613, !548}
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2549, file: !46, line: 333, baseType: !2615, size: 64, offset: 512)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!2616 = !DISubroutineType(types: !2617)
!2617 = !{!304, !548, !2618}
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2549, file: !46, line: 335, baseType: !2620, size: 64, offset: 576)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = !DISubroutineType(types: !2622)
!2622 = !{!304, !548, !2613}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2549, file: !46, line: 337, baseType: !2624, size: 64, offset: 640)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 64)
!2625 = !DISubroutineType(types: !2626)
!2626 = !{!304, !718, !2627}
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !719, file: !52, line: 1425, baseType: !2629, size: 64, offset: 512)
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!2630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2631)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !46, line: 428, size: 704, elements: !2632)
!2632 = !{!2633, !2637, !2638, !2642, !2643, !2644, !2659, !2682, !2686, !2687, !2710}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2631, file: !46, line: 429, baseType: !2634, size: 64)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64)
!2635 = !DISubroutineType(types: !2636)
!2636 = !{!304, !718, !304, !304, !668}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2631, file: !46, line: 430, baseType: !804, size: 64, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2631, file: !46, line: 431, baseType: !2639, size: 64, offset: 128)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = !DISubroutineType(types: !2641)
!2641 = !{!304, !718, !7}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2631, file: !46, line: 432, baseType: !2639, size: 64, offset: 192)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2631, file: !46, line: 433, baseType: !804, size: 64, offset: 256)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2631, file: !46, line: 434, baseType: !2645, size: 64, offset: 320)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{!304, !718, !304, !2648}
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !46, line: 415, size: 256, elements: !2650)
!2650 = !{!2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2649, file: !46, line: 416, baseType: !304, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2649, file: !46, line: 417, baseType: !7, size: 32, offset: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2649, file: !46, line: 418, baseType: !7, size: 32, offset: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2649, file: !46, line: 420, baseType: !7, size: 32, offset: 96)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2649, file: !46, line: 421, baseType: !7, size: 32, offset: 128)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2649, file: !46, line: 422, baseType: !7, size: 32, offset: 160)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2649, file: !46, line: 423, baseType: !7, size: 32, offset: 192)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2649, file: !46, line: 424, baseType: !7, size: 32, offset: 224)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2631, file: !46, line: 435, baseType: !2660, size: 64, offset: 384)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 64)
!2661 = !DISubroutineType(types: !2662)
!2662 = !{!304, !718, !2567, !2663}
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !46, line: 343, size: 960, elements: !2665)
!2665 = !{!2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2664, file: !46, line: 344, baseType: !304, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2664, file: !46, line: 345, baseType: !541, size: 64, offset: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2664, file: !46, line: 346, baseType: !541, size: 64, offset: 128)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2664, file: !46, line: 347, baseType: !541, size: 64, offset: 192)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2664, file: !46, line: 348, baseType: !541, size: 64, offset: 256)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2664, file: !46, line: 349, baseType: !541, size: 64, offset: 320)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2664, file: !46, line: 350, baseType: !541, size: 64, offset: 384)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2664, file: !46, line: 351, baseType: !897, size: 64, offset: 448)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2664, file: !46, line: 353, baseType: !897, size: 64, offset: 512)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2664, file: !46, line: 354, baseType: !304, size: 32, offset: 576)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2664, file: !46, line: 355, baseType: !304, size: 32, offset: 608)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2664, file: !46, line: 356, baseType: !541, size: 64, offset: 640)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2664, file: !46, line: 357, baseType: !541, size: 64, offset: 704)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2664, file: !46, line: 358, baseType: !541, size: 64, offset: 768)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2664, file: !46, line: 359, baseType: !897, size: 64, offset: 832)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2664, file: !46, line: 360, baseType: !304, size: 32, offset: 896)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2631, file: !46, line: 436, baseType: !2683, size: 64, offset: 448)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 64)
!2684 = !DISubroutineType(types: !2685)
!2685 = !{!304, !718, !2627, !2663}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2631, file: !46, line: 438, baseType: !2660, size: 64, offset: 512)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2631, file: !46, line: 439, baseType: !2688, size: 64, offset: 576)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{!304, !718, !2691}
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !46, line: 409, size: 1408, elements: !2693)
!2693 = !{!2694, !2695}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2692, file: !46, line: 410, baseType: !7, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2692, file: !46, line: 411, baseType: !2696, size: 1344, offset: 64)
!2696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2697, size: 1344, elements: !400)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !46, line: 395, size: 448, elements: !2698)
!2698 = !{!2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2709}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2697, file: !46, line: 396, baseType: !7, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2697, file: !46, line: 397, baseType: !7, size: 32, offset: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2697, file: !46, line: 399, baseType: !7, size: 32, offset: 64)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2697, file: !46, line: 400, baseType: !7, size: 32, offset: 96)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2697, file: !46, line: 401, baseType: !7, size: 32, offset: 128)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2697, file: !46, line: 402, baseType: !7, size: 32, offset: 160)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2697, file: !46, line: 403, baseType: !7, size: 32, offset: 192)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2697, file: !46, line: 404, baseType: !543, size: 64, offset: 256)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2697, file: !46, line: 405, baseType: !2708, size: 64, offset: 320)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !264, line: 126, baseType: !541)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2697, file: !46, line: 406, baseType: !2708, size: 64, offset: 384)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2631, file: !46, line: 440, baseType: !2639, size: 64, offset: 640)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !719, file: !52, line: 1426, baseType: !2712, size: 64, offset: 576)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2714)
!2714 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !52, line: 49, flags: DIFlagFwdDecl)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !719, file: !52, line: 1427, baseType: !448, size: 64, offset: 640)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !719, file: !52, line: 1428, baseType: !448, size: 64, offset: 704)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !719, file: !52, line: 1429, baseType: !448, size: 64, offset: 768)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !719, file: !52, line: 1430, baseType: !506, size: 64, offset: 832)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !719, file: !52, line: 1431, baseType: !887, size: 256, offset: 896)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !719, file: !52, line: 1432, baseType: !304, size: 32, offset: 1152)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !719, file: !52, line: 1433, baseType: !867, size: 32, offset: 1184)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !719, file: !52, line: 1437, baseType: !2723, size: 64, offset: 1216)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2726)
!2726 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !52, line: 1437, flags: DIFlagFwdDecl)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !719, file: !52, line: 1449, baseType: !2728, size: 64, offset: 1280)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !522, line: 34, size: 64, elements: !2729)
!2729 = !{!2730}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2728, file: !522, line: 35, baseType: !525, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !719, file: !52, line: 1450, baseType: !263, size: 128, offset: 1344)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !719, file: !52, line: 1451, baseType: !2733, size: 64, offset: 1472)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !52, line: 699, flags: DIFlagFwdDecl)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !719, file: !52, line: 1452, baseType: !2042, size: 64, offset: 1536)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !719, file: !52, line: 1453, baseType: !2737, size: 64, offset: 1600)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !52, line: 1453, flags: DIFlagFwdDecl)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !719, file: !52, line: 1454, baseType: !758, size: 128, offset: 1664)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !719, file: !52, line: 1455, baseType: !7, size: 32, offset: 1792)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !719, file: !52, line: 1456, baseType: !2742, size: 2432, offset: 1856)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !46, line: 518, size: 2432, elements: !2743)
!2743 = !{!2744, !2745, !2746, !2748, !2780}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2742, file: !46, line: 519, baseType: !7, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2742, file: !46, line: 520, baseType: !887, size: 256, offset: 64)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2742, file: !46, line: 521, baseType: !2747, size: 192, offset: 320)
!2747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 192, elements: !400)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2742, file: !46, line: 522, baseType: !2749, size: 1728, offset: 512)
!2749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2750, size: 1728, elements: !400)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !46, line: 222, size: 576, elements: !2751)
!2751 = !{!2752, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2750, file: !46, line: 223, baseType: !2753, size: 64)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !46, line: 443, size: 256, elements: !2755)
!2755 = !{!2756, !2757, !2770, !2771}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2754, file: !46, line: 444, baseType: !304, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2754, file: !46, line: 445, baseType: !2758, size: 64, offset: 64)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2760)
!2760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !46, line: 310, size: 512, elements: !2761)
!2761 = !{!2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2760, file: !46, line: 311, baseType: !804, size: 64)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2760, file: !46, line: 312, baseType: !804, size: 64, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2760, file: !46, line: 313, baseType: !804, size: 64, offset: 128)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2760, file: !46, line: 314, baseType: !804, size: 64, offset: 192)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2760, file: !46, line: 315, baseType: !2552, size: 64, offset: 256)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2760, file: !46, line: 316, baseType: !2552, size: 64, offset: 320)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2760, file: !46, line: 317, baseType: !2552, size: 64, offset: 384)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2760, file: !46, line: 318, baseType: !2624, size: 64, offset: 448)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2754, file: !46, line: 446, baseType: !336, size: 64, offset: 128)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2754, file: !46, line: 447, baseType: !2753, size: 64, offset: 192)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2750, file: !46, line: 224, baseType: !304, size: 32, offset: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2750, file: !46, line: 226, baseType: !263, size: 128, offset: 128)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2750, file: !46, line: 227, baseType: !448, size: 64, offset: 256)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2750, file: !46, line: 228, baseType: !7, size: 32, offset: 320)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2750, file: !46, line: 229, baseType: !7, size: 32, offset: 352)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2750, file: !46, line: 230, baseType: !2588, size: 64, offset: 384)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2750, file: !46, line: 231, baseType: !2588, size: 64, offset: 448)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2750, file: !46, line: 232, baseType: !258, size: 64, offset: 512)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2742, file: !46, line: 523, baseType: !2781, size: 192, offset: 2240)
!2781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2758, size: 192, elements: !400)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !719, file: !52, line: 1458, baseType: !2783, size: 2112, offset: 4288)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !52, line: 1410, size: 2112, elements: !2784)
!2784 = !{!2785, !2786, !2787}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2783, file: !52, line: 1411, baseType: !304, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2783, file: !52, line: 1412, baseType: !1599, size: 128, offset: 64)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2783, file: !52, line: 1413, baseType: !2788, size: 1920, offset: 192)
!2788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2789, size: 1920, elements: !400)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2790, line: 12, size: 640, elements: !2791)
!2790 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2791 = !{!2792, !2800, !2802, !2807, !2808}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2789, file: !2790, line: 13, baseType: !2793, size: 320)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2794, line: 17, size: 320, elements: !2795)
!2794 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2795 = !{!2796, !2797, !2798, !2799}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2793, file: !2794, line: 18, baseType: !304, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2793, file: !2794, line: 19, baseType: !304, size: 32, offset: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2793, file: !2794, line: 20, baseType: !1599, size: 128, offset: 64)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2793, file: !2794, line: 22, baseType: !489, size: 128, align: 64, offset: 192)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2789, file: !2790, line: 14, baseType: !2801, size: 64, offset: 320)
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2789, file: !2790, line: 15, baseType: !2803, size: 64, offset: 384)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2804, line: 16, size: 64, elements: !2805)
!2804 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2805 = !{!2806}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2803, file: !2804, line: 17, baseType: !1336, size: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2789, file: !2790, line: 16, baseType: !1599, size: 128, offset: 448)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2789, file: !2790, line: 17, baseType: !867, size: 32, offset: 576)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !719, file: !52, line: 1465, baseType: !258, size: 64, offset: 6400)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !719, file: !52, line: 1468, baseType: !319, size: 32, offset: 6464)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !719, file: !52, line: 1470, baseType: !658, size: 64, offset: 6528)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !719, file: !52, line: 1471, baseType: !658, size: 64, offset: 6592)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !719, file: !52, line: 1473, baseType: !320, size: 32, offset: 6656)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !719, file: !52, line: 1474, baseType: !2815, size: 64, offset: 6720)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 64)
!2816 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !52, line: 603, flags: DIFlagFwdDecl)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !719, file: !52, line: 1477, baseType: !2818, size: 256, offset: 6784)
!2818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 256, elements: !2348)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !719, file: !52, line: 1478, baseType: !2820, size: 128, offset: 7040)
!2820 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2821, line: 18, baseType: !2822)
!2821 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2821, line: 16, size: 128, elements: !2823)
!2823 = !{!2824}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2822, file: !2821, line: 17, baseType: !2825, size: 128)
!2825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 128, elements: !1853)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !719, file: !52, line: 1480, baseType: !7, size: 32, offset: 7168)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !719, file: !52, line: 1481, baseType: !2828, size: 32, offset: 7200)
!2828 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !264, line: 150, baseType: !7)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !719, file: !52, line: 1487, baseType: !1293, size: 192, offset: 7232)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !719, file: !52, line: 1493, baseType: !340, size: 64, offset: 7424)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !719, file: !52, line: 1495, baseType: !2832, size: 64, offset: 7488)
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2833, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2834)
!2834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !504, line: 135, size: 1024, align: 512, elements: !2835)
!2835 = !{!2836, !2840, !2841, !2848, !2854, !2858, !2862, !2866, !2867, !2871, !2875, !2880, !2884}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2834, file: !504, line: 136, baseType: !2837, size: 64)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 64)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{!304, !506, !7}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2834, file: !504, line: 137, baseType: !2837, size: 64, offset: 64)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2834, file: !504, line: 138, baseType: !2842, size: 64, offset: 128)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{!304, !2845, !2847}
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !507)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2834, file: !504, line: 139, baseType: !2849, size: 64, offset: 192)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{!304, !2845, !7, !340, !2852}
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !530)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2834, file: !504, line: 141, baseType: !2855, size: 64, offset: 256)
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = !DISubroutineType(types: !2857)
!2857 = !{!304, !2845}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2834, file: !504, line: 142, baseType: !2859, size: 64, offset: 320)
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2860, size: 64)
!2860 = !DISubroutineType(types: !2861)
!2861 = !{!304, !506}
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2834, file: !504, line: 143, baseType: !2863, size: 64, offset: 384)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 64)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{null, !506}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2834, file: !504, line: 144, baseType: !2863, size: 64, offset: 448)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2834, file: !504, line: 145, baseType: !2868, size: 64, offset: 512)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 64)
!2869 = !DISubroutineType(types: !2870)
!2870 = !{null, !506, !548}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2834, file: !504, line: 146, baseType: !2872, size: 64, offset: 576)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!399, !506, !399, !304}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2834, file: !504, line: 147, baseType: !2876, size: 64, offset: 640)
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{!502, !2879}
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2834, file: !504, line: 148, baseType: !2881, size: 64, offset: 704)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{!304, !668, !609}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2834, file: !504, line: 149, baseType: !2885, size: 64, offset: 768)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2886 = !DISubroutineType(types: !2887)
!2887 = !{!506, !506, !2888}
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !549)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !719, file: !52, line: 1500, baseType: !304, size: 32, offset: 7552)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !719, file: !52, line: 1502, baseType: !2892, size: 448, offset: 7616)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2536, line: 60, size: 448, elements: !2893)
!2893 = !{!2894, !2899, !2900, !2901, !2902, !2903, !2904}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2892, file: !2536, line: 61, baseType: !2895, size: 64)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{!448, !2898, !2534}
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2892, file: !2536, line: 63, baseType: !2895, size: 64, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2892, file: !2536, line: 66, baseType: !212, size: 64, offset: 128)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2892, file: !2536, line: 67, baseType: !304, size: 32, offset: 192)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2892, file: !2536, line: 68, baseType: !7, size: 32, offset: 224)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2892, file: !2536, line: 71, baseType: !263, size: 128, offset: 256)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2892, file: !2536, line: 77, baseType: !2905, size: 64, offset: 384)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !719, file: !52, line: 1505, baseType: !891, size: 64, offset: 8064)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !719, file: !52, line: 1508, baseType: !891, size: 64, offset: 8128)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !719, file: !52, line: 1511, baseType: !304, size: 32, offset: 8192)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !719, file: !52, line: 1514, baseType: !1029, size: 32, offset: 8224)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !719, file: !52, line: 1517, baseType: !2911, size: 64, offset: 8256)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 64)
!2912 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !211, line: 18, flags: DIFlagFwdDecl)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !719, file: !52, line: 1518, baseType: !754, size: 64, offset: 8320)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !719, file: !52, line: 1525, baseType: !1831, size: 64, offset: 8384)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !719, file: !52, line: 1532, baseType: !2916, size: 64, offset: 8448)
!2916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2917, line: 52, size: 64, elements: !2918)
!2917 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2918 = !{!2919}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2916, file: !2917, line: 53, baseType: !2920, size: 64)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2917, line: 40, size: 256, elements: !2922)
!2922 = !{!2923, !2924, !2929}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2921, file: !2917, line: 42, baseType: !358)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2921, file: !2917, line: 44, baseType: !2925, size: 192)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2917, line: 28, size: 192, elements: !2926)
!2926 = !{!2927, !2928}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2925, file: !2917, line: 29, baseType: !263, size: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2925, file: !2917, line: 31, baseType: !212, size: 64, offset: 128)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2921, file: !2917, line: 49, baseType: !212, size: 64, offset: 192)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !719, file: !52, line: 1533, baseType: !2916, size: 64, offset: 8512)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !719, file: !52, line: 1534, baseType: !489, size: 128, align: 64, offset: 8576)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !719, file: !52, line: 1535, baseType: !2076, size: 256, offset: 8704)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !719, file: !52, line: 1537, baseType: !1293, size: 192, offset: 8960)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !719, file: !52, line: 1542, baseType: !304, size: 32, offset: 9152)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !719, file: !52, line: 1545, baseType: !358, offset: 9184)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !719, file: !52, line: 1546, baseType: !263, size: 128, offset: 9216)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !719, file: !52, line: 1548, baseType: !358, offset: 9344)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !719, file: !52, line: 1549, baseType: !263, size: 128, offset: 9344)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !549, file: !52, line: 624, baseType: !853, size: 64, offset: 256)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !549, file: !52, line: 631, baseType: !448, size: 64, offset: 320)
!2941 = !DIDerivedType(tag: DW_TAG_member, scope: !549, file: !52, line: 639, baseType: !2942, size: 32, offset: 384)
!2942 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !549, file: !52, line: 639, size: 32, elements: !2943)
!2943 = !{!2944, !2946}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2942, file: !52, line: 640, baseType: !2945, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2942, file: !52, line: 641, baseType: !7, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !549, file: !52, line: 643, baseType: !632, size: 32, offset: 416)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !549, file: !52, line: 644, baseType: !650, size: 64, offset: 448)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !549, file: !52, line: 645, baseType: !654, size: 128, offset: 512)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !549, file: !52, line: 646, baseType: !654, size: 128, offset: 640)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !549, file: !52, line: 647, baseType: !654, size: 128, offset: 768)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !549, file: !52, line: 648, baseType: !358, offset: 896)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !549, file: !52, line: 649, baseType: !440, size: 16, offset: 896)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !549, file: !52, line: 650, baseType: !310, size: 8, offset: 912)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !549, file: !52, line: 651, baseType: !310, size: 8, offset: 920)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !549, file: !52, line: 652, baseType: !2708, size: 64, offset: 960)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !549, file: !52, line: 659, baseType: !448, size: 64, offset: 1024)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !549, file: !52, line: 660, baseType: !887, size: 256, offset: 1088)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !549, file: !52, line: 662, baseType: !448, size: 64, offset: 1344)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !549, file: !52, line: 663, baseType: !448, size: 64, offset: 1408)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !549, file: !52, line: 665, baseType: !758, size: 128, offset: 1472)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !549, file: !52, line: 666, baseType: !263, size: 128, offset: 1600)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !549, file: !52, line: 675, baseType: !263, size: 128, offset: 1728)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !549, file: !52, line: 676, baseType: !263, size: 128, offset: 1856)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !549, file: !52, line: 677, baseType: !263, size: 128, offset: 1984)
!2966 = !DIDerivedType(tag: DW_TAG_member, scope: !549, file: !52, line: 678, baseType: !2967, size: 128, offset: 2112)
!2967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !549, file: !52, line: 678, size: 128, elements: !2968)
!2968 = !{!2969, !2970}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2967, file: !52, line: 679, baseType: !754, size: 64)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2967, file: !52, line: 680, baseType: !489, size: 128, align: 64)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !549, file: !52, line: 682, baseType: !893, size: 64, offset: 2240)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !549, file: !52, line: 683, baseType: !893, size: 64, offset: 2304)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !549, file: !52, line: 684, baseType: !867, size: 32, offset: 2368)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !549, file: !52, line: 685, baseType: !867, size: 32, offset: 2400)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !549, file: !52, line: 686, baseType: !867, size: 32, offset: 2432)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !549, file: !52, line: 688, baseType: !867, size: 32, offset: 2464)
!2977 = !DIDerivedType(tag: DW_TAG_member, scope: !549, file: !52, line: 690, baseType: !2978, size: 64, offset: 2496)
!2978 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !549, file: !52, line: 690, size: 64, elements: !2979)
!2979 = !{!2980, !3203}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2978, file: !52, line: 691, baseType: !2981, size: 64)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2983)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !52, line: 1822, size: 2048, elements: !2984)
!2984 = !{!2985, !2986, !2990, !2995, !2999, !3000, !3001, !3005, !3018, !3019, !3027, !3031, !3032, !3036, !3037, !3041, !3046, !3047, !3051, !3055, !3163, !3167, !3168, !3172, !3173, !3177, !3181, !3186, !3190, !3194, !3198, !3202}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2983, file: !52, line: 1823, baseType: !336, size: 64)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2983, file: !52, line: 1824, baseType: !2987, size: 64, offset: 64)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{!650, !476, !650, !304}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2983, file: !52, line: 1825, baseType: !2991, size: 64, offset: 128)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{!430, !476, !399, !445, !2994}
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2983, file: !52, line: 1826, baseType: !2996, size: 64, offset: 192)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DISubroutineType(types: !2998)
!2998 = !{!430, !476, !340, !445, !2994}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2983, file: !52, line: 1827, baseType: !964, size: 64, offset: 256)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2983, file: !52, line: 1828, baseType: !964, size: 64, offset: 320)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2983, file: !52, line: 1829, baseType: !3002, size: 64, offset: 384)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64)
!3003 = !DISubroutineType(types: !3004)
!3004 = !{!304, !967, !609}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2983, file: !52, line: 1830, baseType: !3006, size: 64, offset: 448)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = !DISubroutineType(types: !3008)
!3008 = !{!304, !476, !3009}
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !52, line: 1776, size: 128, elements: !3011)
!3011 = !{!3012, !3017}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3010, file: !52, line: 1777, baseType: !3013, size: 64)
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !52, line: 1773, baseType: !3014)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!304, !3009, !340, !304, !650, !541, !7}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3010, file: !52, line: 1778, baseType: !650, size: 64, offset: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2983, file: !52, line: 1831, baseType: !3006, size: 64, offset: 512)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2983, file: !52, line: 1832, baseType: !3020, size: 64, offset: 576)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = !DISubroutineType(types: !3022)
!3022 = !{!3023, !476, !3025}
!3023 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3024, line: 52, baseType: !7)
!3024 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !738, line: 27, flags: DIFlagFwdDecl)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2983, file: !52, line: 1833, baseType: !3028, size: 64, offset: 640)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DISubroutineType(types: !3030)
!3030 = !{!212, !476, !7, !448}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2983, file: !52, line: 1834, baseType: !3028, size: 64, offset: 704)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2983, file: !52, line: 1835, baseType: !3033, size: 64, offset: 768)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!304, !476, !1101}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2983, file: !52, line: 1836, baseType: !448, size: 64, offset: 832)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2983, file: !52, line: 1837, baseType: !3038, size: 64, offset: 896)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!304, !548, !476}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2983, file: !52, line: 1838, baseType: !3042, size: 64, offset: 960)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = !DISubroutineType(types: !3044)
!3044 = !{!304, !476, !3045}
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !52, line: 1007, baseType: !258)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2983, file: !52, line: 1839, baseType: !3038, size: 64, offset: 1024)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2983, file: !52, line: 1840, baseType: !3048, size: 64, offset: 1088)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{!304, !476, !650, !650, !304}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2983, file: !52, line: 1841, baseType: !3052, size: 64, offset: 1152)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = !DISubroutineType(types: !3054)
!3054 = !{!304, !304, !476, !304}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2983, file: !52, line: 1842, baseType: !3056, size: 64, offset: 1216)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!304, !476, !304, !3059}
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !52, line: 1062, size: 1664, elements: !3061)
!3061 = !{!3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3093, !3094, !3095, !3108, !3139}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3060, file: !52, line: 1063, baseType: !3059, size: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3060, file: !52, line: 1064, baseType: !263, size: 128, offset: 64)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3060, file: !52, line: 1065, baseType: !758, size: 128, offset: 192)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3060, file: !52, line: 1066, baseType: !263, size: 128, offset: 320)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3060, file: !52, line: 1069, baseType: !263, size: 128, offset: 448)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3060, file: !52, line: 1072, baseType: !3045, size: 64, offset: 576)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3060, file: !52, line: 1073, baseType: !7, size: 32, offset: 640)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3060, file: !52, line: 1074, baseType: !314, size: 8, offset: 672)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3060, file: !52, line: 1075, baseType: !7, size: 32, offset: 704)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3060, file: !52, line: 1076, baseType: !304, size: 32, offset: 736)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3060, file: !52, line: 1077, baseType: !1599, size: 128, offset: 768)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3060, file: !52, line: 1078, baseType: !476, size: 64, offset: 896)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3060, file: !52, line: 1079, baseType: !650, size: 64, offset: 960)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3060, file: !52, line: 1080, baseType: !650, size: 64, offset: 1024)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3060, file: !52, line: 1082, baseType: !3077, size: 64, offset: 1088)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !52, line: 1314, size: 320, elements: !3079)
!3079 = !{!3080, !3088, !3089, !3090, !3091, !3092}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3078, file: !52, line: 1315, baseType: !3081)
!3081 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3082, line: 20, baseType: !3083)
!3082 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3082, line: 11, elements: !3084)
!3084 = !{!3085}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3083, file: !3082, line: 12, baseType: !3086)
!3086 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !370, line: 33, baseType: !3087)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !370, line: 31, elements: !372)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3078, file: !52, line: 1316, baseType: !304, size: 32)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3078, file: !52, line: 1317, baseType: !304, size: 32, offset: 32)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3078, file: !52, line: 1318, baseType: !3077, size: 64, offset: 64)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3078, file: !52, line: 1319, baseType: !476, size: 64, offset: 128)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3078, file: !52, line: 1320, baseType: !489, size: 128, align: 64, offset: 192)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3060, file: !52, line: 1084, baseType: !448, size: 64, offset: 1152)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3060, file: !52, line: 1085, baseType: !448, size: 64, offset: 1216)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3060, file: !52, line: 1087, baseType: !3096, size: 64, offset: 1280)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3098)
!3098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !52, line: 1011, size: 128, elements: !3099)
!3099 = !{!3100, !3104}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3098, file: !52, line: 1012, baseType: !3101, size: 64)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3102, size: 64)
!3102 = !DISubroutineType(types: !3103)
!3103 = !{null, !3059, !3059}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3098, file: !52, line: 1013, baseType: !3105, size: 64, offset: 64)
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 64)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{null, !3059}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3060, file: !52, line: 1088, baseType: !3109, size: 64, offset: 1344)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3111)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !52, line: 1016, size: 512, elements: !3112)
!3112 = !{!3113, !3117, !3121, !3122, !3126, !3130, !3134, !3138}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3111, file: !52, line: 1017, baseType: !3114, size: 64)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{!3045, !3045}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3111, file: !52, line: 1018, baseType: !3118, size: 64, offset: 64)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = !DISubroutineType(types: !3120)
!3120 = !{null, !3045}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3111, file: !52, line: 1019, baseType: !3105, size: 64, offset: 128)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3111, file: !52, line: 1020, baseType: !3123, size: 64, offset: 192)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 64)
!3124 = !DISubroutineType(types: !3125)
!3125 = !{!304, !3059, !304}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3111, file: !52, line: 1021, baseType: !3127, size: 64, offset: 256)
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 64)
!3128 = !DISubroutineType(types: !3129)
!3129 = !{!609, !3059}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3111, file: !52, line: 1022, baseType: !3131, size: 64, offset: 320)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = !DISubroutineType(types: !3133)
!3133 = !{!304, !3059, !304, !267}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3111, file: !52, line: 1023, baseType: !3135, size: 64, offset: 384)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 64)
!3136 = !DISubroutineType(types: !3137)
!3137 = !{null, !3059, !941}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3111, file: !52, line: 1024, baseType: !3127, size: 64, offset: 448)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3060, file: !52, line: 1097, baseType: !3140, size: 256, offset: 1408)
!3140 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3060, file: !52, line: 1089, size: 256, elements: !3141)
!3141 = !{!3142, !3151, !3157}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3140, file: !52, line: 1090, baseType: !3143, size: 256)
!3143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3144, line: 10, size: 256, elements: !3145)
!3144 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3145 = !{!3146, !3147, !3150}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3143, file: !3144, line: 11, baseType: !319, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3143, file: !3144, line: 12, baseType: !3148, size: 64, offset: 64)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3144, line: 5, flags: DIFlagFwdDecl)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3143, file: !3144, line: 13, baseType: !263, size: 128, offset: 128)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3140, file: !52, line: 1091, baseType: !3152, size: 64)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3144, line: 17, size: 64, elements: !3153)
!3153 = !{!3154}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3152, file: !3144, line: 18, baseType: !3155, size: 64)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3144, line: 16, flags: DIFlagFwdDecl)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3140, file: !52, line: 1096, baseType: !3158, size: 192)
!3158 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3140, file: !52, line: 1092, size: 192, elements: !3159)
!3159 = !{!3160, !3161, !3162}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3158, file: !52, line: 1093, baseType: !263, size: 128)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3158, file: !52, line: 1094, baseType: !304, size: 32, offset: 128)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3158, file: !52, line: 1095, baseType: !7, size: 32, offset: 160)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2983, file: !52, line: 1843, baseType: !3164, size: 64, offset: 1280)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{!430, !476, !840, !304, !445, !2994, !304}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2983, file: !52, line: 1844, baseType: !1221, size: 64, offset: 1344)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2983, file: !52, line: 1845, baseType: !3169, size: 64, offset: 1408)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{!304, !304}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2983, file: !52, line: 1846, baseType: !3056, size: 64, offset: 1472)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2983, file: !52, line: 1847, baseType: !3174, size: 64, offset: 1536)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 64)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{!430, !2216, !476, !2994, !445, !7}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2983, file: !52, line: 1848, baseType: !3178, size: 64, offset: 1600)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 64)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{!430, !476, !2994, !2216, !445, !7}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2983, file: !52, line: 1849, baseType: !3182, size: 64, offset: 1664)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{!304, !476, !212, !3185, !941}
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 64)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2983, file: !52, line: 1850, baseType: !3187, size: 64, offset: 1728)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = !DISubroutineType(types: !3189)
!3189 = !{!212, !476, !304, !650, !650}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2983, file: !52, line: 1852, baseType: !3191, size: 64, offset: 1792)
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 64)
!3192 = !DISubroutineType(types: !3193)
!3193 = !{null, !830, !476}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2983, file: !52, line: 1856, baseType: !3195, size: 64, offset: 1856)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3196 = !DISubroutineType(types: !3197)
!3197 = !{!430, !476, !650, !476, !650, !445, !7}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2983, file: !52, line: 1858, baseType: !3199, size: 64, offset: 1920)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = !DISubroutineType(types: !3201)
!3201 = !{!650, !476, !650, !476, !650, !650, !7}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2983, file: !52, line: 1861, baseType: !3048, size: 64, offset: 1984)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2978, file: !52, line: 692, baseType: !783, size: 64)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !549, file: !52, line: 694, baseType: !3205, size: 64, offset: 2560)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !52, line: 1100, size: 384, elements: !3207)
!3207 = !{!3208, !3209, !3210, !3211}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3206, file: !52, line: 1101, baseType: !358)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3206, file: !52, line: 1102, baseType: !263, size: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3206, file: !52, line: 1103, baseType: !263, size: 128, offset: 128)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3206, file: !52, line: 1104, baseType: !263, size: 128, offset: 256)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !549, file: !52, line: 695, baseType: !854, size: 1216, align: 64, offset: 2624)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !549, file: !52, line: 696, baseType: !263, size: 128, offset: 3840)
!3214 = !DIDerivedType(tag: DW_TAG_member, scope: !549, file: !52, line: 697, baseType: !3215, size: 64, offset: 3968)
!3215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !549, file: !52, line: 697, size: 64, elements: !3216)
!3216 = !{!3217, !3218, !3219, !3222, !3223}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3215, file: !52, line: 698, baseType: !2216, size: 64)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3215, file: !52, line: 699, baseType: !2733, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3215, file: !52, line: 700, baseType: !3220, size: 64)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !52, line: 700, flags: DIFlagFwdDecl)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3215, file: !52, line: 701, baseType: !399, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3215, file: !52, line: 702, baseType: !7, size: 32)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !549, file: !52, line: 705, baseType: !320, size: 32, offset: 4032)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !549, file: !52, line: 708, baseType: !320, size: 32, offset: 4064)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !549, file: !52, line: 709, baseType: !2815, size: 64, offset: 4096)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !549, file: !52, line: 720, baseType: !258, size: 64, offset: 4160)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !507, file: !504, line: 98, baseType: !3229, size: 256, offset: 448)
!3229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 256, elements: !2348)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !507, file: !504, line: 101, baseType: !3231, size: 32, offset: 704)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3232, line: 25, size: 32, elements: !3233)
!3232 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3233 = !{!3234}
!3234 = !DIDerivedType(tag: DW_TAG_member, scope: !3231, file: !3232, line: 26, baseType: !3235, size: 32)
!3235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3231, file: !3232, line: 26, size: 32, elements: !3236)
!3236 = !{!3237}
!3237 = !DIDerivedType(tag: DW_TAG_member, scope: !3235, file: !3232, line: 30, baseType: !3238, size: 32)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3235, file: !3232, line: 30, size: 32, elements: !3239)
!3239 = !{!3240, !3241}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3238, file: !3232, line: 31, baseType: !358)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3238, file: !3232, line: 32, baseType: !304, size: 32)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !507, file: !504, line: 102, baseType: !2832, size: 64, offset: 768)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !507, file: !504, line: 103, baseType: !718, size: 64, offset: 832)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !507, file: !504, line: 104, baseType: !448, size: 64, offset: 896)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !507, file: !504, line: 105, baseType: !258, size: 64, offset: 960)
!3246 = !DIDerivedType(tag: DW_TAG_member, scope: !507, file: !504, line: 107, baseType: !3247, size: 128, offset: 1024)
!3247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !507, file: !504, line: 107, size: 128, elements: !3248)
!3248 = !{!3249, !3250}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3247, file: !504, line: 108, baseType: !263, size: 128)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3247, file: !504, line: 109, baseType: !3251, size: 64)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !507, file: !504, line: 111, baseType: !263, size: 128, offset: 1152)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !507, file: !504, line: 112, baseType: !263, size: 128, offset: 1280)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !507, file: !504, line: 120, baseType: !3255, size: 128, offset: 1408)
!3255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !507, file: !504, line: 116, size: 128, elements: !3256)
!3256 = !{!3257, !3258, !3259}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3255, file: !504, line: 117, baseType: !758, size: 128)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3255, file: !504, line: 118, baseType: !521, size: 128)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3255, file: !504, line: 119, baseType: !489, size: 128, align: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !477, file: !52, line: 922, baseType: !548, size: 64, offset: 256)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !477, file: !52, line: 923, baseType: !2981, size: 64, offset: 320)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !477, file: !52, line: 929, baseType: !358, offset: 384)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !477, file: !52, line: 930, baseType: !51, size: 32, offset: 384)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !477, file: !52, line: 931, baseType: !891, size: 64, offset: 448)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !477, file: !52, line: 932, baseType: !7, size: 32, offset: 512)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !477, file: !52, line: 933, baseType: !2828, size: 32, offset: 544)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !477, file: !52, line: 934, baseType: !1293, size: 192, offset: 576)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !477, file: !52, line: 935, baseType: !650, size: 64, offset: 768)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !477, file: !52, line: 936, baseType: !3270, size: 192, offset: 832)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !52, line: 885, size: 192, elements: !3271)
!3271 = !{!3272, !3273, !3274, !3275, !3276, !3277}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3270, file: !52, line: 886, baseType: !3081)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3270, file: !52, line: 887, baseType: !1589, size: 64)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3270, file: !52, line: 888, baseType: !60, size: 32, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3270, file: !52, line: 889, baseType: !554, size: 32, offset: 96)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3270, file: !52, line: 889, baseType: !554, size: 32, offset: 128)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3270, file: !52, line: 890, baseType: !304, size: 32, offset: 160)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !477, file: !52, line: 937, baseType: !1665, size: 64, offset: 1024)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !477, file: !52, line: 938, baseType: !3280, size: 256, offset: 1088)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !52, line: 896, size: 256, elements: !3281)
!3281 = !{!3282, !3283, !3284, !3285, !3286, !3287}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3280, file: !52, line: 897, baseType: !448, size: 64)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3280, file: !52, line: 898, baseType: !7, size: 32, offset: 64)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3280, file: !52, line: 899, baseType: !7, size: 32, offset: 96)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3280, file: !52, line: 902, baseType: !7, size: 32, offset: 128)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3280, file: !52, line: 903, baseType: !7, size: 32, offset: 160)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3280, file: !52, line: 904, baseType: !650, size: 64, offset: 192)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !477, file: !52, line: 940, baseType: !541, size: 64, offset: 1344)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !477, file: !52, line: 945, baseType: !258, size: 64, offset: 1408)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !477, file: !52, line: 949, baseType: !263, size: 128, offset: 1472)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !477, file: !52, line: 950, baseType: !263, size: 128, offset: 1600)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !477, file: !52, line: 952, baseType: !853, size: 64, offset: 1728)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !477, file: !52, line: 953, baseType: !1029, size: 32, offset: 1792)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !477, file: !52, line: 954, baseType: !1029, size: 32, offset: 1824)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !467, file: !424, line: 174, baseType: !473, size: 64, offset: 320)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !467, file: !424, line: 176, baseType: !3297, size: 64, offset: 384)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DISubroutineType(types: !3299)
!3299 = !{!304, !476, !351, !466, !1101}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !455, file: !424, line: 90, baseType: !450, size: 64, offset: 192)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !455, file: !424, line: 91, baseType: !3302, size: 64, offset: 256)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !414, file: !346, line: 143, baseType: !3304, size: 64, offset: 256)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 64)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{!3307, !351}
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3309)
!3309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !69, line: 39, size: 384, elements: !3310)
!3310 = !{!3311, !3312, !3316, !3320, !3326, !3330}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3309, file: !69, line: 40, baseType: !68, size: 32)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3309, file: !69, line: 41, baseType: !3313, size: 64, offset: 64)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = !DISubroutineType(types: !3315)
!3315 = !{!609}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3309, file: !69, line: 42, baseType: !3317, size: 64, offset: 128)
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64)
!3318 = !DISubroutineType(types: !3319)
!3319 = !{!258}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3309, file: !69, line: 43, baseType: !3321, size: 64, offset: 192)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3322 = !DISubroutineType(types: !3323)
!3323 = !{!2245, !3324}
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !69, line: 19, flags: DIFlagFwdDecl)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3309, file: !69, line: 44, baseType: !3327, size: 64, offset: 256)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!2245}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3309, file: !69, line: 45, baseType: !587, size: 64, offset: 320)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !414, file: !346, line: 144, baseType: !3332, size: 64, offset: 320)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = !DISubroutineType(types: !3334)
!3334 = !{!2245, !351}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !414, file: !346, line: 145, baseType: !3336, size: 64, offset: 384)
!3336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3337, size: 64)
!3337 = !DISubroutineType(types: !3338)
!3338 = !{null, !351, !3339, !3340}
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !345, file: !346, line: 70, baseType: !3342, size: 64, offset: 384)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !738, line: 123, size: 1024, elements: !3344)
!3344 = !{!3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3473, !3474, !3475, !3476, !3477}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3343, file: !738, line: 124, baseType: !867, size: 32)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3343, file: !738, line: 125, baseType: !867, size: 32, offset: 32)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3343, file: !738, line: 135, baseType: !3342, size: 64, offset: 64)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3343, file: !738, line: 136, baseType: !340, size: 64, offset: 128)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3343, file: !738, line: 138, baseType: !880, size: 192, align: 64, offset: 192)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3343, file: !738, line: 140, baseType: !2245, size: 64, offset: 384)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3343, file: !738, line: 141, baseType: !7, size: 32, offset: 448)
!3352 = !DIDerivedType(tag: DW_TAG_member, scope: !3343, file: !738, line: 142, baseType: !3353, size: 256, offset: 512)
!3353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3343, file: !738, line: 142, size: 256, elements: !3354)
!3354 = !{!3355, !3401, !3405}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3353, file: !738, line: 143, baseType: !3356, size: 192)
!3356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !738, line: 91, size: 192, elements: !3357)
!3357 = !{!3358, !3359, !3360}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3356, file: !738, line: 92, baseType: !448, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3356, file: !738, line: 94, baseType: !876, size: 64, offset: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3356, file: !738, line: 100, baseType: !3361, size: 64, offset: 128)
!3361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3362, size: 64)
!3362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !738, line: 180, size: 704, elements: !3363)
!3363 = !{!3364, !3365, !3366, !3373, !3374, !3375, !3399, !3400}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3362, file: !738, line: 182, baseType: !3342, size: 64)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3362, file: !738, line: 183, baseType: !7, size: 32, offset: 64)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3362, file: !738, line: 186, baseType: !3367, size: 192, offset: 128)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3368, line: 19, size: 192, elements: !3369)
!3368 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3369 = !{!3370, !3371, !3372}
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3367, file: !3368, line: 20, baseType: !858, size: 128)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3367, file: !3368, line: 21, baseType: !7, size: 32, offset: 128)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3367, file: !3368, line: 22, baseType: !7, size: 32, offset: 160)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3362, file: !738, line: 187, baseType: !319, size: 32, offset: 320)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3362, file: !738, line: 188, baseType: !319, size: 32, offset: 352)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3362, file: !738, line: 189, baseType: !3376, size: 64, offset: 384)
!3376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3377, size: 64)
!3377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !738, line: 168, size: 320, elements: !3378)
!3378 = !{!3379, !3383, !3387, !3391, !3395}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3377, file: !738, line: 169, baseType: !3380, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{!304, !830, !3361}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3377, file: !738, line: 171, baseType: !3384, size: 64, offset: 64)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!304, !3342, !340, !439}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3377, file: !738, line: 173, baseType: !3388, size: 64, offset: 128)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{!304, !3342}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3377, file: !738, line: 174, baseType: !3392, size: 64, offset: 192)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{!304, !3342, !3342, !340}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3377, file: !738, line: 176, baseType: !3396, size: 64, offset: 256)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!304, !830, !3342, !3361}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3362, file: !738, line: 192, baseType: !263, size: 128, offset: 448)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3362, file: !738, line: 194, baseType: !1599, size: 128, offset: 576)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3353, file: !738, line: 144, baseType: !3402, size: 64)
!3402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !738, line: 103, size: 64, elements: !3403)
!3403 = !{!3404}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3402, file: !738, line: 104, baseType: !3342, size: 64)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3353, file: !738, line: 145, baseType: !3406, size: 256)
!3406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !738, line: 107, size: 256, elements: !3407)
!3407 = !{!3408, !3468, !3471, !3472}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3406, file: !738, line: 108, baseType: !3409, size: 64)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3411)
!3411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !738, line: 217, size: 768, elements: !3412)
!3412 = !{!3413, !3433, !3437, !3441, !3445, !3449, !3453, !3457, !3458, !3459, !3460, !3464}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3411, file: !738, line: 222, baseType: !3414, size: 64)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DISubroutineType(types: !3416)
!3416 = !{!304, !3417}
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !738, line: 197, size: 1088, elements: !3419)
!3419 = !{!3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432}
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3418, file: !738, line: 199, baseType: !3342, size: 64)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3418, file: !738, line: 200, baseType: !476, size: 64, offset: 64)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3418, file: !738, line: 201, baseType: !830, size: 64, offset: 128)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3418, file: !738, line: 202, baseType: !258, size: 64, offset: 192)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3418, file: !738, line: 205, baseType: !1293, size: 192, offset: 256)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3418, file: !738, line: 206, baseType: !1293, size: 192, offset: 448)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3418, file: !738, line: 207, baseType: !304, size: 32, offset: 640)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3418, file: !738, line: 208, baseType: !263, size: 128, offset: 704)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3418, file: !738, line: 209, baseType: !399, size: 64, offset: 832)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3418, file: !738, line: 211, baseType: !445, size: 64, offset: 896)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3418, file: !738, line: 212, baseType: !609, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3418, file: !738, line: 213, baseType: !609, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3418, file: !738, line: 214, baseType: !1129, size: 64, offset: 1024)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3411, file: !738, line: 223, baseType: !3434, size: 64, offset: 64)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = !DISubroutineType(types: !3436)
!3436 = !{null, !3417}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3411, file: !738, line: 236, baseType: !3438, size: 64, offset: 128)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 64)
!3439 = !DISubroutineType(types: !3440)
!3440 = !{!304, !830, !258}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3411, file: !738, line: 238, baseType: !3442, size: 64, offset: 192)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!258, !830, !2994}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3411, file: !738, line: 239, baseType: !3446, size: 64, offset: 256)
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 64)
!3447 = !DISubroutineType(types: !3448)
!3448 = !{!258, !830, !258, !2994}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3411, file: !738, line: 240, baseType: !3450, size: 64, offset: 320)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = !DISubroutineType(types: !3452)
!3452 = !{null, !830, !258}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3411, file: !738, line: 242, baseType: !3454, size: 64, offset: 384)
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!3455 = !DISubroutineType(types: !3456)
!3456 = !{!430, !3417, !399, !445, !650}
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3411, file: !738, line: 252, baseType: !445, size: 64, offset: 448)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3411, file: !738, line: 259, baseType: !609, size: 8, offset: 512)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3411, file: !738, line: 260, baseType: !3454, size: 64, offset: 576)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3411, file: !738, line: 263, baseType: !3461, size: 64, offset: 640)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3462 = !DISubroutineType(types: !3463)
!3463 = !{!3023, !3417, !3025}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3411, file: !738, line: 266, baseType: !3465, size: 64, offset: 704)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 64)
!3466 = !DISubroutineType(types: !3467)
!3467 = !{!304, !3417, !1101}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3406, file: !738, line: 109, baseType: !3469, size: 64, offset: 64)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !738, line: 31, flags: DIFlagFwdDecl)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3406, file: !738, line: 110, baseType: !650, size: 64, offset: 128)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3406, file: !738, line: 111, baseType: !3342, size: 64, offset: 192)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3343, file: !738, line: 148, baseType: !258, size: 64, offset: 768)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3343, file: !738, line: 154, baseType: !541, size: 64, offset: 832)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3343, file: !738, line: 156, baseType: !440, size: 16, offset: 896)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3343, file: !738, line: 157, baseType: !439, size: 16, offset: 912)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3343, file: !738, line: 158, baseType: !3478, size: 64, offset: 960)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !738, line: 32, flags: DIFlagFwdDecl)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !345, file: !346, line: 71, baseType: !3481, size: 32, offset: 448)
!3481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3482, line: 19, size: 32, elements: !3483)
!3482 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3483 = !{!3484}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3481, file: !3482, line: 20, baseType: !1350, size: 32)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !345, file: !346, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !345, file: !346, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !345, file: !346, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !345, file: !346, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !345, file: !346, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !274, file: !6, line: 318, baseType: !7, size: 32, offset: 448)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !274, file: !6, line: 319, baseType: !440, size: 16, offset: 480)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !274, file: !6, line: 320, baseType: !440, size: 16, offset: 496)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !274, file: !6, line: 321, baseType: !440, size: 16, offset: 512)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !274, file: !6, line: 322, baseType: !440, size: 16, offset: 528)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !274, file: !6, line: 323, baseType: !7, size: 32, offset: 544)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !274, file: !6, line: 324, baseType: !310, size: 8, offset: 576)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !274, file: !6, line: 325, baseType: !310, size: 8, offset: 584)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !274, file: !6, line: 330, baseType: !310, size: 8, offset: 592)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !274, file: !6, line: 331, baseType: !310, size: 8, offset: 600)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !274, file: !6, line: 332, baseType: !310, size: 8, offset: 608)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !274, file: !6, line: 333, baseType: !310, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !274, file: !6, line: 334, baseType: !310, size: 8, offset: 624)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !274, file: !6, line: 335, baseType: !310, size: 8, offset: 632)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !274, file: !6, line: 336, baseType: !979, size: 16, offset: 640)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !274, file: !6, line: 337, baseType: !3506, size: 64, offset: 704)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !274, file: !6, line: 339, baseType: !3508, size: 64, offset: 768)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !6, line: 858, size: 2048, elements: !3510)
!3510 = !{!3511, !3512, !3513, !3527, !3531, !3535, !3543, !3547, !3548, !3552, !3571, !3572, !4116}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3509, file: !6, line: 859, baseType: !263, size: 128)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3509, file: !6, line: 860, baseType: !340, size: 64, offset: 128)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !3509, file: !6, line: 861, baseType: !3514, size: 64, offset: 192)
!3514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 64)
!3515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3516)
!3516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3517, line: 38, size: 256, elements: !3518)
!3517 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3518 = !{!3519, !3520, !3521, !3522, !3523, !3524, !3525}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3516, file: !3517, line: 39, baseType: !320, size: 32)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !3516, file: !3517, line: 39, baseType: !320, size: 32, offset: 32)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !3516, file: !3517, line: 40, baseType: !320, size: 32, offset: 64)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !3516, file: !3517, line: 40, baseType: !320, size: 32, offset: 96)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3516, file: !3517, line: 41, baseType: !320, size: 32, offset: 128)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !3516, file: !3517, line: 41, baseType: !320, size: 32, offset: 160)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3516, file: !3517, line: 42, baseType: !3526, size: 64, offset: 192)
!3526 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3517, line: 14, baseType: !448)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3509, file: !6, line: 862, baseType: !3528, size: 64, offset: 256)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 64)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!304, !273, !3514}
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3509, file: !6, line: 863, baseType: !3532, size: 64, offset: 320)
!3532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3533, size: 64)
!3533 = !DISubroutineType(types: !3534)
!3534 = !{null, !273}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3509, file: !6, line: 864, baseType: !3536, size: 64, offset: 384)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3537, size: 64)
!3537 = !DISubroutineType(types: !3538)
!3538 = !{!304, !273, !3539}
!3539 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !82, line: 52, baseType: !3540)
!3540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !82, line: 50, size: 32, elements: !3541)
!3541 = !{!3542}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3540, file: !82, line: 51, baseType: !304, size: 32)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3509, file: !6, line: 865, baseType: !3544, size: 64, offset: 448)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!304, !273}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3509, file: !6, line: 866, baseType: !3532, size: 64, offset: 512)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !3509, file: !6, line: 867, baseType: !3549, size: 64, offset: 576)
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3550, size: 64)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{!304, !273, !304}
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !3509, file: !6, line: 868, baseType: !3553, size: 64, offset: 640)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3555)
!3555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !6, line: 795, size: 384, elements: !3556)
!3556 = !{!3557, !3563, !3567, !3568, !3569, !3570}
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !3555, file: !6, line: 797, baseType: !3558, size: 64)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{!3561, !273, !3562}
!3561 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !6, line: 772, baseType: !7)
!3562 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !6, line: 180, baseType: !7)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !3555, file: !6, line: 801, baseType: !3564, size: 64, offset: 64)
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3565, size: 64)
!3565 = !DISubroutineType(types: !3566)
!3566 = !{!3561, !273}
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !3555, file: !6, line: 804, baseType: !3564, size: 64, offset: 128)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !3555, file: !6, line: 807, baseType: !3532, size: 64, offset: 192)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !3555, file: !6, line: 808, baseType: !3532, size: 64, offset: 256)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3555, file: !6, line: 811, baseType: !3532, size: 64, offset: 320)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3509, file: !6, line: 869, baseType: !452, size: 64, offset: 704)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3509, file: !6, line: 870, baseType: !3573, size: 1152, offset: 768)
!3573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !110, line: 95, size: 1152, elements: !3574)
!3574 = !{!3575, !3576, !4075, !4076, !4077, !4078, !4079, !4091, !4103, !4104, !4105, !4106, !4107, !4108, !4109, !4110, !4111, !4112, !4113}
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3573, file: !110, line: 96, baseType: !340, size: 64)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3573, file: !110, line: 97, baseType: !3577, size: 64, offset: 64)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3579, line: 82, size: 1408, elements: !3580)
!3579 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3580 = !{!3581, !3582, !3583, !4046, !4047, !4048, !4049, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4064, !4065, !4066, !4067, !4068, !4072, !4073, !4074}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3578, file: !3579, line: 83, baseType: !340, size: 64)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3578, file: !3579, line: 84, baseType: !340, size: 64, offset: 64)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3578, file: !3579, line: 85, baseType: !3584, size: 64, offset: 128)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !75, line: 461, size: 5568, elements: !3586)
!3586 = !{!3587, !3588, !3589, !3592, !3593, !3644, !3645, !3647, !3648, !3649, !3650, !3659, !3764, !3777, !3971, !3972, !3976, !3978, !3979, !3980, !3984, !3990, !3991, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4034, !4035, !4036, !4039, !4042, !4043, !4044, !4045}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3585, file: !75, line: 462, baseType: !345, size: 512)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3585, file: !75, line: 463, baseType: !3584, size: 64, offset: 512)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3585, file: !75, line: 465, baseType: !3590, size: 64, offset: 576)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 64)
!3591 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !75, line: 36, flags: DIFlagFwdDecl)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3585, file: !75, line: 467, baseType: !340, size: 64, offset: 640)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3585, file: !75, line: 468, baseType: !3594, size: 64, offset: 704)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3596)
!3596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !75, line: 87, size: 384, elements: !3597)
!3597 = !{!3598, !3599, !3600, !3604, !3609, !3613}
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3596, file: !75, line: 88, baseType: !340, size: 64)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3596, file: !75, line: 89, baseType: !452, size: 64, offset: 64)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3596, file: !75, line: 90, baseType: !3601, size: 64, offset: 128)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DISubroutineType(types: !3603)
!3603 = !{!304, !3584, !394}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3596, file: !75, line: 91, baseType: !3605, size: 64, offset: 192)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = !DISubroutineType(types: !3607)
!3607 = !{!399, !3584, !3608, !3339, !3340}
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3596, file: !75, line: 93, baseType: !3610, size: 64, offset: 256)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{null, !3584}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3596, file: !75, line: 95, baseType: !3614, size: 64, offset: 320)
!3614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3615, size: 64)
!3615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3616)
!3616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !82, line: 278, size: 1472, elements: !3617)
!3617 = !{!3618, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3616, file: !82, line: 279, baseType: !3619, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 64)
!3620 = !DISubroutineType(types: !3621)
!3621 = !{!304, !3584}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3616, file: !82, line: 280, baseType: !3610, size: 64, offset: 64)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3616, file: !82, line: 281, baseType: !3619, size: 64, offset: 128)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3616, file: !82, line: 282, baseType: !3619, size: 64, offset: 192)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3616, file: !82, line: 283, baseType: !3619, size: 64, offset: 256)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3616, file: !82, line: 284, baseType: !3619, size: 64, offset: 320)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3616, file: !82, line: 285, baseType: !3619, size: 64, offset: 384)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3616, file: !82, line: 286, baseType: !3619, size: 64, offset: 448)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3616, file: !82, line: 287, baseType: !3619, size: 64, offset: 512)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3616, file: !82, line: 288, baseType: !3619, size: 64, offset: 576)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3616, file: !82, line: 289, baseType: !3619, size: 64, offset: 640)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3616, file: !82, line: 290, baseType: !3619, size: 64, offset: 704)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3616, file: !82, line: 291, baseType: !3619, size: 64, offset: 768)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3616, file: !82, line: 292, baseType: !3619, size: 64, offset: 832)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3616, file: !82, line: 293, baseType: !3619, size: 64, offset: 896)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3616, file: !82, line: 294, baseType: !3619, size: 64, offset: 960)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3616, file: !82, line: 295, baseType: !3619, size: 64, offset: 1024)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3616, file: !82, line: 296, baseType: !3619, size: 64, offset: 1088)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3616, file: !82, line: 297, baseType: !3619, size: 64, offset: 1152)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3616, file: !82, line: 298, baseType: !3619, size: 64, offset: 1216)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3616, file: !82, line: 299, baseType: !3619, size: 64, offset: 1280)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3616, file: !82, line: 300, baseType: !3619, size: 64, offset: 1344)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3616, file: !82, line: 301, baseType: !3619, size: 64, offset: 1408)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3585, file: !75, line: 470, baseType: !3577, size: 64, offset: 768)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3585, file: !75, line: 471, baseType: !3646, size: 64, offset: 832)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3585, file: !75, line: 473, baseType: !258, size: 64, offset: 896)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3585, file: !75, line: 475, baseType: !258, size: 64, offset: 960)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3585, file: !75, line: 480, baseType: !1293, size: 192, offset: 1024)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3585, file: !75, line: 484, baseType: !3651, size: 576, offset: 1216)
!3651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !75, line: 361, size: 576, elements: !3652)
!3652 = !{!3653, !3654, !3655, !3656, !3657, !3658}
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3651, file: !75, line: 362, baseType: !263, size: 128)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3651, file: !75, line: 363, baseType: !263, size: 128, offset: 128)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3651, file: !75, line: 364, baseType: !263, size: 128, offset: 256)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3651, file: !75, line: 365, baseType: !263, size: 128, offset: 384)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3651, file: !75, line: 366, baseType: !609, size: 8, offset: 512)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3651, file: !75, line: 367, baseType: !74, size: 32, offset: 544)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3585, file: !75, line: 485, baseType: !3660, size: 2304, offset: 1792)
!3660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !82, line: 565, size: 2304, elements: !3661)
!3661 = !{!3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3757, !3761}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3660, file: !82, line: 566, baseType: !3539, size: 32)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3660, file: !82, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3660, file: !82, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3660, file: !82, line: 569, baseType: !609, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3660, file: !82, line: 570, baseType: !609, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3660, file: !82, line: 571, baseType: !609, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3660, file: !82, line: 572, baseType: !609, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3660, file: !82, line: 573, baseType: !609, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3660, file: !82, line: 574, baseType: !609, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3660, file: !82, line: 575, baseType: !609, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3660, file: !82, line: 576, baseType: !609, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3660, file: !82, line: 577, baseType: !319, size: 32, offset: 64)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3660, file: !82, line: 578, baseType: !358, offset: 96)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3660, file: !82, line: 580, baseType: !263, size: 128, offset: 128)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3660, file: !82, line: 581, baseType: !1620, size: 192, offset: 256)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3660, file: !82, line: 582, baseType: !3678, size: 64, offset: 448)
!3678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3679, size: 64)
!3679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3680, line: 43, size: 1472, elements: !3681)
!3680 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3681 = !{!3682, !3683, !3684, !3685, !3686, !3689, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714}
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3679, file: !3680, line: 44, baseType: !340, size: 64)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3679, file: !3680, line: 45, baseType: !304, size: 32, offset: 64)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3679, file: !3680, line: 46, baseType: !263, size: 128, offset: 128)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3679, file: !3680, line: 47, baseType: !358, offset: 256)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3679, file: !3680, line: 48, baseType: !3687, size: 64, offset: 256)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3688, size: 64)
!3688 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !82, line: 533, flags: DIFlagFwdDecl)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3679, file: !3680, line: 49, baseType: !3690, size: 320, offset: 320)
!3690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3691, line: 11, size: 320, elements: !3692)
!3691 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3692 = !{!3693, !3694, !3695, !3700}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3690, file: !3691, line: 16, baseType: !758, size: 128)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3690, file: !3691, line: 17, baseType: !448, size: 64, offset: 128)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3690, file: !3691, line: 18, baseType: !3696, size: 64, offset: 192)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{null, !3699}
!3699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3690, size: 64)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3690, file: !3691, line: 19, baseType: !319, size: 32, offset: 256)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3679, file: !3680, line: 50, baseType: !448, size: 64, offset: 640)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3679, file: !3680, line: 51, baseType: !1420, size: 64, offset: 704)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3679, file: !3680, line: 52, baseType: !1420, size: 64, offset: 768)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3679, file: !3680, line: 53, baseType: !1420, size: 64, offset: 832)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3679, file: !3680, line: 54, baseType: !1420, size: 64, offset: 896)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3679, file: !3680, line: 55, baseType: !1420, size: 64, offset: 960)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3679, file: !3680, line: 56, baseType: !448, size: 64, offset: 1024)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3679, file: !3680, line: 57, baseType: !448, size: 64, offset: 1088)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3679, file: !3680, line: 58, baseType: !448, size: 64, offset: 1152)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3679, file: !3680, line: 59, baseType: !448, size: 64, offset: 1216)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3679, file: !3680, line: 60, baseType: !448, size: 64, offset: 1280)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3679, file: !3680, line: 61, baseType: !3584, size: 64, offset: 1344)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3679, file: !3680, line: 62, baseType: !609, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3679, file: !3680, line: 63, baseType: !609, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3660, file: !82, line: 583, baseType: !609, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3660, file: !82, line: 584, baseType: !609, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3660, file: !82, line: 585, baseType: !609, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3660, file: !82, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3660, file: !82, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3660, file: !82, line: 592, baseType: !1412, size: 512, offset: 576)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3660, file: !82, line: 593, baseType: !541, size: 64, offset: 1088)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3660, file: !82, line: 594, baseType: !2076, size: 256, offset: 1152)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3660, file: !82, line: 595, baseType: !1599, size: 128, offset: 1408)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3660, file: !82, line: 596, baseType: !3687, size: 64, offset: 1536)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3660, file: !82, line: 597, baseType: !867, size: 32, offset: 1600)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3660, file: !82, line: 598, baseType: !867, size: 32, offset: 1632)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3660, file: !82, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3660, file: !82, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3660, file: !82, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3660, file: !82, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3660, file: !82, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3660, file: !82, line: 604, baseType: !609, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3660, file: !82, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3660, file: !82, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3660, file: !82, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3660, file: !82, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3660, file: !82, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3660, file: !82, line: 610, baseType: !7, size: 32, offset: 1696)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3660, file: !82, line: 611, baseType: !81, size: 32, offset: 1728)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3660, file: !82, line: 612, baseType: !89, size: 32, offset: 1760)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3660, file: !82, line: 613, baseType: !304, size: 32, offset: 1792)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3660, file: !82, line: 614, baseType: !304, size: 32, offset: 1824)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3660, file: !82, line: 615, baseType: !541, size: 64, offset: 1856)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3660, file: !82, line: 616, baseType: !541, size: 64, offset: 1920)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3660, file: !82, line: 617, baseType: !541, size: 64, offset: 1984)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3660, file: !82, line: 618, baseType: !541, size: 64, offset: 2048)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3660, file: !82, line: 620, baseType: !3748, size: 64, offset: 2112)
!3748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3749, size: 64)
!3749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !82, line: 536, size: 256, elements: !3750)
!3750 = !{!3751, !3752, !3753, !3754}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3749, file: !82, line: 537, baseType: !358)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3749, file: !82, line: 538, baseType: !7, size: 32)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3749, file: !82, line: 540, baseType: !263, size: 128, offset: 64)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3749, file: !82, line: 543, baseType: !3755, size: 64, offset: 192)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 64)
!3756 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !82, line: 534, flags: DIFlagFwdDecl)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3660, file: !82, line: 621, baseType: !3758, size: 64, offset: 2176)
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3759, size: 64)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{null, !3584, !1562}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3660, file: !82, line: 622, baseType: !3762, size: 64, offset: 2240)
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !82, line: 622, flags: DIFlagFwdDecl)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3585, file: !75, line: 486, baseType: !3765, size: 64, offset: 4096)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !82, line: 642, size: 1792, elements: !3767)
!3767 = !{!3768, !3769, !3770, !3774, !3775, !3776}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3766, file: !82, line: 643, baseType: !3616, size: 1472)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3766, file: !82, line: 644, baseType: !3619, size: 64, offset: 1472)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3766, file: !82, line: 645, baseType: !3771, size: 64, offset: 1536)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = !DISubroutineType(types: !3773)
!3773 = !{null, !3584, !609}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3766, file: !82, line: 646, baseType: !3619, size: 64, offset: 1600)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3766, file: !82, line: 647, baseType: !3610, size: 64, offset: 1664)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3766, file: !82, line: 648, baseType: !3610, size: 64, offset: 1728)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3585, file: !75, line: 493, baseType: !3778, size: 64, offset: 4160)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !96, line: 162, size: 1088, elements: !3780)
!3780 = !{!3781, !3782, !3783, !3955, !3956, !3957, !3958, !3959, !3960, !3963, !3964, !3965, !3966, !3967, !3968, !3969}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3779, file: !96, line: 163, baseType: !263, size: 128)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3779, file: !96, line: 164, baseType: !340, size: 64, offset: 128)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3779, file: !96, line: 165, baseType: !3784, size: 64, offset: 192)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3786)
!3786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !96, line: 105, size: 640, elements: !3787)
!3787 = !{!3788, !3906, !3917, !3922, !3926, !3932, !3936, !3940, !3947, !3951}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3786, file: !96, line: 106, baseType: !3789, size: 64)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!304, !3778, !3792, !95}
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3794, line: 51, size: 1344, elements: !3795)
!3794 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3795 = !{!3796, !3797, !3799, !3800, !3890, !3899, !3900, !3901, !3902, !3903, !3904, !3905}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3793, file: !3794, line: 52, baseType: !340, size: 64)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3793, file: !3794, line: 53, baseType: !3798, size: 32, offset: 64)
!3798 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3794, line: 28, baseType: !319)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3793, file: !3794, line: 54, baseType: !340, size: 64, offset: 128)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3793, file: !3794, line: 55, baseType: !3801, size: 192, offset: 192)
!3801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3802, line: 17, size: 192, elements: !3803)
!3802 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3803 = !{!3804, !3806, !3889}
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3801, file: !3802, line: 18, baseType: !3805, size: 64)
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3801, file: !3802, line: 19, baseType: !3807, size: 64, offset: 64)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3809)
!3809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3802, line: 110, size: 1152, elements: !3810)
!3810 = !{!3811, !3815, !3819, !3825, !3831, !3835, !3839, !3844, !3848, !3849, !3853, !3857, !3861, !3872, !3873, !3874, !3875, !3885}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3809, file: !3802, line: 111, baseType: !3812, size: 64)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!3805, !3805}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3809, file: !3802, line: 112, baseType: !3816, size: 64, offset: 64)
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3817, size: 64)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{null, !3805}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3809, file: !3802, line: 113, baseType: !3820, size: 64, offset: 128)
!3820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3821, size: 64)
!3821 = !DISubroutineType(types: !3822)
!3822 = !{!609, !3823}
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3801)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3809, file: !3802, line: 114, baseType: !3826, size: 64, offset: 192)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!2245, !3823, !3829}
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3585)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3809, file: !3802, line: 116, baseType: !3832, size: 64, offset: 256)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DISubroutineType(types: !3834)
!3834 = !{!609, !3823, !340}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3809, file: !3802, line: 118, baseType: !3836, size: 64, offset: 320)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{!304, !3823, !340, !7, !258, !445}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3809, file: !3802, line: 123, baseType: !3840, size: 64, offset: 384)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!304, !3823, !340, !3843, !445}
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3809, file: !3802, line: 126, baseType: !3845, size: 64, offset: 448)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!340, !3823}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3809, file: !3802, line: 127, baseType: !3845, size: 64, offset: 512)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3809, file: !3802, line: 128, baseType: !3850, size: 64, offset: 576)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3851 = !DISubroutineType(types: !3852)
!3852 = !{!3805, !3823}
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3809, file: !3802, line: 130, baseType: !3854, size: 64, offset: 640)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{!3805, !3823, !3805}
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3809, file: !3802, line: 133, baseType: !3858, size: 64, offset: 704)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{!3805, !3823, !340}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3809, file: !3802, line: 135, baseType: !3862, size: 64, offset: 768)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!304, !3823, !340, !340, !7, !7, !3865}
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3802, line: 43, size: 640, elements: !3867)
!3867 = !{!3868, !3869, !3870}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3866, file: !3802, line: 44, baseType: !3805, size: 64)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3866, file: !3802, line: 45, baseType: !7, size: 32, offset: 64)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3866, file: !3802, line: 46, baseType: !3871, size: 512, offset: 128)
!3871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !541, size: 512, elements: !1450)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3809, file: !3802, line: 140, baseType: !3854, size: 64, offset: 832)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3809, file: !3802, line: 143, baseType: !3850, size: 64, offset: 896)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3809, file: !3802, line: 145, baseType: !3812, size: 64, offset: 960)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3809, file: !3802, line: 146, baseType: !3876, size: 64, offset: 1024)
!3876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3877, size: 64)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{!304, !3823, !3879}
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3880, size: 64)
!3880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3802, line: 29, size: 128, elements: !3881)
!3881 = !{!3882, !3883, !3884}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3880, file: !3802, line: 30, baseType: !7, size: 32)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3880, file: !3802, line: 31, baseType: !7, size: 32, offset: 32)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3880, file: !3802, line: 32, baseType: !3823, size: 64, offset: 64)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3809, file: !3802, line: 148, baseType: !3886, size: 64, offset: 1088)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = !DISubroutineType(types: !3888)
!3888 = !{!304, !3823, !3584}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3801, file: !3802, line: 20, baseType: !3584, size: 64, offset: 128)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3793, file: !3794, line: 57, baseType: !3891, size: 64, offset: 384)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3794, line: 31, size: 704, elements: !3893)
!3893 = !{!3894, !3895, !3896, !3897, !3898}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3892, file: !3794, line: 32, baseType: !399, size: 64)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3892, file: !3794, line: 33, baseType: !304, size: 32, offset: 64)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3892, file: !3794, line: 34, baseType: !258, size: 64, offset: 128)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3892, file: !3794, line: 35, baseType: !3891, size: 64, offset: 192)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3892, file: !3794, line: 43, baseType: !467, size: 448, offset: 256)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3793, file: !3794, line: 58, baseType: !3891, size: 64, offset: 448)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3793, file: !3794, line: 59, baseType: !3792, size: 64, offset: 512)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3793, file: !3794, line: 60, baseType: !3792, size: 64, offset: 576)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3793, file: !3794, line: 61, baseType: !3792, size: 64, offset: 640)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3793, file: !3794, line: 63, baseType: !345, size: 512, offset: 704)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3793, file: !3794, line: 65, baseType: !448, size: 64, offset: 1216)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3793, file: !3794, line: 66, baseType: !258, size: 64, offset: 1280)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3786, file: !96, line: 108, baseType: !3907, size: 64, offset: 64)
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3908, size: 64)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{!304, !3778, !3910, !95}
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !96, line: 63, size: 640, elements: !3912)
!3912 = !{!3913, !3914, !3915}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3911, file: !96, line: 64, baseType: !3805, size: 64)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3911, file: !96, line: 65, baseType: !304, size: 32, offset: 64)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3911, file: !96, line: 66, baseType: !3916, size: 512, offset: 96)
!3916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 512, elements: !1853)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3786, file: !96, line: 110, baseType: !3918, size: 64, offset: 128)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DISubroutineType(types: !3920)
!3920 = !{!304, !3778, !7, !3921}
!3921 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !264, line: 164, baseType: !448)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3786, file: !96, line: 111, baseType: !3923, size: 64, offset: 192)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = !DISubroutineType(types: !3925)
!3925 = !{null, !3778, !7}
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3786, file: !96, line: 112, baseType: !3927, size: 64, offset: 256)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3928, size: 64)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{!304, !3778, !3792, !3930, !7, !3506, !2801}
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !319)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3786, file: !96, line: 117, baseType: !3933, size: 64, offset: 320)
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3934, size: 64)
!3934 = !DISubroutineType(types: !3935)
!3935 = !{!304, !3778, !7, !7, !258}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3786, file: !96, line: 119, baseType: !3937, size: 64, offset: 384)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{null, !3778, !7, !7}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3786, file: !96, line: 121, baseType: !3941, size: 64, offset: 448)
!3941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3942, size: 64)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{!304, !3778, !3944, !609}
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!3945 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !3946, line: 11, flags: DIFlagFwdDecl)
!3946 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3786, file: !96, line: 122, baseType: !3948, size: 64, offset: 512)
!3948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3949, size: 64)
!3949 = !DISubroutineType(types: !3950)
!3950 = !{null, !3778, !3944}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3786, file: !96, line: 123, baseType: !3952, size: 64, offset: 576)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!304, !3778, !3910, !3506, !2801}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3779, file: !96, line: 166, baseType: !258, size: 64, offset: 256)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3779, file: !96, line: 167, baseType: !7, size: 32, offset: 320)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3779, file: !96, line: 168, baseType: !7, size: 32, offset: 352)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3779, file: !96, line: 171, baseType: !3805, size: 64, offset: 384)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3779, file: !96, line: 172, baseType: !95, size: 32, offset: 448)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3779, file: !96, line: 173, baseType: !3961, size: 64, offset: 512)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3962, size: 64)
!3962 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !96, line: 134, flags: DIFlagFwdDecl)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3779, file: !96, line: 175, baseType: !3778, size: 64, offset: 576)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3779, file: !96, line: 182, baseType: !3921, size: 64, offset: 640)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3779, file: !96, line: 183, baseType: !7, size: 32, offset: 704)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3779, file: !96, line: 184, baseType: !7, size: 32, offset: 736)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3779, file: !96, line: 185, baseType: !858, size: 128, offset: 768)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3779, file: !96, line: 186, baseType: !1293, size: 192, offset: 896)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3779, file: !96, line: 187, baseType: !3970, offset: 1088)
!3970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2449)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3585, file: !75, line: 499, baseType: !263, size: 128, offset: 4224)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3585, file: !75, line: 502, baseType: !3973, size: 64, offset: 4352)
!3973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3974, size: 64)
!3974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3975)
!3975 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !75, line: 502, flags: DIFlagFwdDecl)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3585, file: !75, line: 504, baseType: !3977, size: 64, offset: 4416)
!3977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3585, file: !75, line: 505, baseType: !541, size: 64, offset: 4480)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3585, file: !75, line: 510, baseType: !541, size: 64, offset: 4544)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3585, file: !75, line: 511, baseType: !3981, size: 64, offset: 4608)
!3981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3982, size: 64)
!3982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3983)
!3983 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !75, line: 511, flags: DIFlagFwdDecl)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3585, file: !75, line: 513, baseType: !3985, size: 64, offset: 4672)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !75, line: 288, size: 128, elements: !3987)
!3987 = !{!3988, !3989}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3986, file: !75, line: 293, baseType: !7, size: 32)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3986, file: !75, line: 294, baseType: !448, size: 64, offset: 64)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3585, file: !75, line: 515, baseType: !263, size: 128, offset: 4736)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3585, file: !75, line: 526, baseType: !3992, offset: 4864)
!3992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3993, line: 5, elements: !372)
!3993 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3585, file: !75, line: 528, baseType: !3792, size: 64, offset: 4864)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3585, file: !75, line: 529, baseType: !3805, size: 64, offset: 4928)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3585, file: !75, line: 534, baseType: !632, size: 32, offset: 4992)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3585, file: !75, line: 535, baseType: !319, size: 32, offset: 5024)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3585, file: !75, line: 537, baseType: !358, offset: 5056)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3585, file: !75, line: 538, baseType: !263, size: 128, offset: 5056)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3585, file: !75, line: 540, baseType: !4001, size: 64, offset: 5184)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4003, line: 54, size: 960, elements: !4004)
!4003 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4004 = !{!4005, !4006, !4007, !4008, !4009, !4010, !4011, !4015, !4019, !4020, !4021, !4022, !4026, !4030, !4031}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4002, file: !4003, line: 55, baseType: !340, size: 64)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4002, file: !4003, line: 56, baseType: !336, size: 64, offset: 64)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4002, file: !4003, line: 58, baseType: !452, size: 64, offset: 128)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4002, file: !4003, line: 59, baseType: !452, size: 64, offset: 192)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4002, file: !4003, line: 60, baseType: !351, size: 64, offset: 256)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4002, file: !4003, line: 62, baseType: !3601, size: 64, offset: 320)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4002, file: !4003, line: 63, baseType: !4012, size: 64, offset: 384)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 64)
!4013 = !DISubroutineType(types: !4014)
!4014 = !{!399, !3584, !3608}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4002, file: !4003, line: 65, baseType: !4016, size: 64, offset: 448)
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 64)
!4017 = !DISubroutineType(types: !4018)
!4018 = !{null, !4001}
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4002, file: !4003, line: 66, baseType: !3610, size: 64, offset: 512)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4002, file: !4003, line: 68, baseType: !3619, size: 64, offset: 576)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4002, file: !4003, line: 70, baseType: !3307, size: 64, offset: 640)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4002, file: !4003, line: 71, baseType: !4023, size: 64, offset: 704)
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 64)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!2245, !3584}
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4002, file: !4003, line: 73, baseType: !4027, size: 64, offset: 768)
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4028, size: 64)
!4028 = !DISubroutineType(types: !4029)
!4029 = !{null, !3584, !3339, !3340}
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4002, file: !4003, line: 75, baseType: !3614, size: 64, offset: 832)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4002, file: !4003, line: 77, baseType: !4032, size: 64, offset: 896)
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4033, size: 64)
!4033 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3579, line: 111, flags: DIFlagFwdDecl)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3585, file: !75, line: 541, baseType: !452, size: 64, offset: 5248)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3585, file: !75, line: 543, baseType: !3610, size: 64, offset: 5312)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3585, file: !75, line: 544, baseType: !4037, size: 64, offset: 5376)
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4038, size: 64)
!4038 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !75, line: 45, flags: DIFlagFwdDecl)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3585, file: !75, line: 545, baseType: !4040, size: 64, offset: 5440)
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4041, size: 64)
!4041 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !75, line: 47, flags: DIFlagFwdDecl)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3585, file: !75, line: 547, baseType: !609, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3585, file: !75, line: 548, baseType: !609, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3585, file: !75, line: 549, baseType: !609, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3585, file: !75, line: 550, baseType: !609, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3578, file: !3579, line: 86, baseType: !452, size: 64, offset: 192)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3578, file: !3579, line: 87, baseType: !452, size: 64, offset: 256)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3578, file: !3579, line: 88, baseType: !452, size: 64, offset: 320)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3578, file: !3579, line: 90, baseType: !4050, size: 64, offset: 384)
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4051, size: 64)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{!304, !3584, !3646}
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3578, file: !3579, line: 91, baseType: !3601, size: 64, offset: 448)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3578, file: !3579, line: 92, baseType: !3619, size: 64, offset: 512)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3578, file: !3579, line: 93, baseType: !3610, size: 64, offset: 576)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3578, file: !3579, line: 94, baseType: !3619, size: 64, offset: 640)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3578, file: !3579, line: 95, baseType: !3610, size: 64, offset: 704)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3578, file: !3579, line: 97, baseType: !3619, size: 64, offset: 768)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3578, file: !3579, line: 98, baseType: !3619, size: 64, offset: 832)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3578, file: !3579, line: 100, baseType: !4061, size: 64, offset: 896)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!304, !3584, !3539}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3578, file: !3579, line: 101, baseType: !3619, size: 64, offset: 960)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3578, file: !3579, line: 103, baseType: !3619, size: 64, offset: 1024)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3578, file: !3579, line: 105, baseType: !3619, size: 64, offset: 1088)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3578, file: !3579, line: 107, baseType: !3614, size: 64, offset: 1152)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3578, file: !3579, line: 109, baseType: !4069, size: 64, offset: 1216)
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4071)
!4071 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3579, line: 109, flags: DIFlagFwdDecl)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3578, file: !3579, line: 111, baseType: !4032, size: 64, offset: 1280)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3578, file: !3579, line: 112, baseType: !764, offset: 1344)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3578, file: !3579, line: 114, baseType: !609, size: 8, offset: 1344)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3573, file: !110, line: 99, baseType: !336, size: 64, offset: 128)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3573, file: !110, line: 100, baseType: !340, size: 64, offset: 192)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3573, file: !110, line: 102, baseType: !609, size: 8, offset: 256)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3573, file: !110, line: 103, baseType: !109, size: 32, offset: 288)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3573, file: !110, line: 105, baseType: !4080, size: 64, offset: 320)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4082)
!4082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3517, line: 262, size: 1600, elements: !4083)
!4083 = !{!4084, !4085, !4086, !4090}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4082, file: !3517, line: 263, baseType: !2818, size: 256)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4082, file: !3517, line: 264, baseType: !2818, size: 256, offset: 256)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4082, file: !3517, line: 265, baseType: !4087, size: 1024, offset: 512)
!4087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 1024, elements: !4088)
!4088 = !{!4089}
!4089 = !DISubrange(count: 128)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4082, file: !3517, line: 266, baseType: !2245, size: 64, offset: 1536)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3573, file: !110, line: 106, baseType: !4092, size: 64, offset: 384)
!4092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4093, size: 64)
!4093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4094)
!4094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3517, line: 210, size: 256, elements: !4095)
!4095 = !{!4096, !4100, !4101, !4102}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4094, file: !3517, line: 211, baseType: !4097, size: 72)
!4097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 72, elements: !4098)
!4098 = !{!4099}
!4099 = !DISubrange(count: 9)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4094, file: !3517, line: 212, baseType: !3526, size: 64, offset: 128)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4094, file: !3517, line: 213, baseType: !320, size: 32, offset: 192)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4094, file: !3517, line: 214, baseType: !320, size: 32, offset: 224)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3573, file: !110, line: 108, baseType: !3619, size: 64, offset: 448)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3573, file: !110, line: 109, baseType: !3610, size: 64, offset: 512)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3573, file: !110, line: 110, baseType: !3619, size: 64, offset: 576)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3573, file: !110, line: 111, baseType: !3610, size: 64, offset: 640)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3573, file: !110, line: 112, baseType: !4061, size: 64, offset: 704)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3573, file: !110, line: 113, baseType: !3619, size: 64, offset: 768)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3573, file: !110, line: 114, baseType: !452, size: 64, offset: 832)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3573, file: !110, line: 115, baseType: !452, size: 64, offset: 896)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3573, file: !110, line: 117, baseType: !3614, size: 64, offset: 960)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3573, file: !110, line: 118, baseType: !3610, size: 64, offset: 1024)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3573, file: !110, line: 120, baseType: !4114, size: 64, offset: 1088)
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!4115 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !110, line: 120, flags: DIFlagFwdDecl)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !3509, file: !6, line: 871, baseType: !4117, size: 128, offset: 1920)
!4117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !6, line: 759, size: 128, elements: !4118)
!4118 = !{!4119, !4120}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4117, file: !6, line: 760, baseType: !358)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4117, file: !6, line: 761, baseType: !263, size: 128)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !274, file: !6, line: 340, baseType: !541, size: 64, offset: 832)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !274, file: !6, line: 346, baseType: !3986, size: 128, offset: 896)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !274, file: !6, line: 348, baseType: !4124, size: 32, offset: 1024)
!4124 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !6, line: 155, baseType: !304)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !274, file: !6, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !274, file: !6, line: 352, baseType: !310, size: 8, offset: 1064)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !274, file: !6, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !274, file: !6, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !274, file: !6, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !274, file: !6, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !274, file: !6, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !274, file: !6, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !274, file: !6, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !274, file: !6, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !274, file: !6, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !274, file: !6, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !274, file: !6, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !274, file: !6, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !274, file: !6, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !274, file: !6, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !274, file: !6, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !274, file: !6, line: 376, baseType: !7, size: 32, offset: 1120)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !274, file: !6, line: 377, baseType: !7, size: 32, offset: 1152)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !274, file: !6, line: 380, baseType: !4145, size: 64, offset: 1216)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !6, line: 303, flags: DIFlagFwdDecl)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !274, file: !6, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !274, file: !6, line: 383, baseType: !304, size: 32, offset: 1312)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !274, file: !6, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !274, file: !6, line: 387, baseType: !3562, size: 32, offset: 1376)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !274, file: !6, line: 388, baseType: !3585, size: 5568, offset: 1408)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !274, file: !6, line: 390, baseType: !304, size: 32, offset: 6976)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !274, file: !6, line: 396, baseType: !7, size: 32, offset: 7008)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !274, file: !6, line: 397, baseType: !4155, size: 8704, offset: 7040)
!4155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4156, size: 8704, elements: !4169)
!4156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4157, line: 20, size: 512, elements: !4158)
!4157 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4158 = !{!4159, !4161, !4162, !4163, !4164, !4165, !4167, !4168}
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4156, file: !4157, line: 21, baseType: !4160, size: 64)
!4160 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !264, line: 158, baseType: !2243)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4156, file: !4157, line: 22, baseType: !4160, size: 64, offset: 64)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4156, file: !4157, line: 23, baseType: !340, size: 64, offset: 128)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4156, file: !4157, line: 24, baseType: !448, size: 64, offset: 192)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4156, file: !4157, line: 25, baseType: !448, size: 64, offset: 256)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4156, file: !4157, line: 26, baseType: !4166, size: 64, offset: 320)
!4166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4156, file: !4157, line: 26, baseType: !4166, size: 64, offset: 384)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4156, file: !4157, line: 26, baseType: !4166, size: 64, offset: 448)
!4169 = !{!4170}
!4170 = !DISubrange(count: 17)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !274, file: !6, line: 399, baseType: !609, size: 8, offset: 15744)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !274, file: !6, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !274, file: !6, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !274, file: !6, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !274, file: !6, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !274, file: !6, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !274, file: !6, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !274, file: !6, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !274, file: !6, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !274, file: !6, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !274, file: !6, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !274, file: !6, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !274, file: !6, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !274, file: !6, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !274, file: !6, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !274, file: !6, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !274, file: !6, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !274, file: !6, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !274, file: !6, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !274, file: !6, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !274, file: !6, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !274, file: !6, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !274, file: !6, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !274, file: !6, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !274, file: !6, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !274, file: !6, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !274, file: !6, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !274, file: !6, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !274, file: !6, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !274, file: !6, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !274, file: !6, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !274, file: !6, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !274, file: !6, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !274, file: !6, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !274, file: !6, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !274, file: !6, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !274, file: !6, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !274, file: !6, line: 450, baseType: !4209, size: 16, offset: 15792)
!4209 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !6, line: 206, baseType: !440)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !274, file: !6, line: 451, baseType: !867, size: 32, offset: 15808)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !274, file: !6, line: 453, baseType: !3916, size: 512, offset: 15840)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !274, file: !6, line: 454, baseType: !754, size: 64, offset: 16384)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !274, file: !6, line: 455, baseType: !466, size: 64, offset: 16448)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !274, file: !6, line: 456, baseType: !304, size: 32, offset: 16512)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !274, file: !6, line: 457, baseType: !4216, size: 1088, offset: 16576)
!4216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 1088, elements: !4169)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !274, file: !6, line: 458, baseType: !4216, size: 1088, offset: 17664)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !274, file: !6, line: 469, baseType: !452, size: 64, offset: 18752)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !274, file: !6, line: 471, baseType: !4220, size: 64, offset: 18816)
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4221, size: 64)
!4221 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !6, line: 304, flags: DIFlagFwdDecl)
!4222 = !DIDerivedType(tag: DW_TAG_member, scope: !274, file: !6, line: 478, baseType: !4223, size: 64, offset: 18880)
!4223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !274, file: !6, line: 478, size: 64, elements: !4224)
!4224 = !{!4225, !4253}
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4223, file: !6, line: 479, baseType: !4226, size: 64)
!4226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4227, size: 64)
!4227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !4228, line: 323, size: 1024, elements: !4229)
!4228 = !DIFile(filename: "drivers/pci/pci.h", directory: "/home/lizy2001/genbc/linux")
!4229 = !{!4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4252}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4227, file: !4228, line: 324, baseType: !304, size: 32)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "nres", scope: !4227, file: !4228, line: 325, baseType: !304, size: 32, offset: 32)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !4227, file: !4228, line: 326, baseType: !319, size: 32, offset: 64)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !4227, file: !4228, line: 327, baseType: !979, size: 16, offset: 96)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "total_VFs", scope: !4227, file: !4228, line: 328, baseType: !979, size: 16, offset: 112)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "initial_VFs", scope: !4227, file: !4228, line: 329, baseType: !979, size: 16, offset: 128)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "num_VFs", scope: !4227, file: !4228, line: 330, baseType: !979, size: 16, offset: 144)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4227, file: !4228, line: 331, baseType: !979, size: 16, offset: 160)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !4227, file: !4228, line: 332, baseType: !979, size: 16, offset: 176)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "vf_device", scope: !4227, file: !4228, line: 333, baseType: !979, size: 16, offset: 192)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "pgsz", scope: !4227, file: !4228, line: 334, baseType: !319, size: 32, offset: 224)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4227, file: !4228, line: 335, baseType: !310, size: 8, offset: 256)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "max_VF_buses", scope: !4227, file: !4228, line: 336, baseType: !310, size: 8, offset: 264)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "driver_max_VFs", scope: !4227, file: !4228, line: 337, baseType: !979, size: 16, offset: 272)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4227, file: !4228, line: 338, baseType: !273, size: 64, offset: 320)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4227, file: !4228, line: 339, baseType: !273, size: 64, offset: 384)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4227, file: !4228, line: 340, baseType: !319, size: 32, offset: 448)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4227, file: !4228, line: 341, baseType: !310, size: 8, offset: 480)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4227, file: !4228, line: 342, baseType: !979, size: 16, offset: 496)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4227, file: !4228, line: 343, baseType: !979, size: 16, offset: 512)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "barsz", scope: !4227, file: !4228, line: 344, baseType: !4251, size: 384, offset: 576)
!4251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4160, size: 384, elements: !1743)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_autoprobe", scope: !4227, file: !4228, line: 345, baseType: !609, size: 8, offset: 960)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4223, file: !6, line: 480, baseType: !273, size: 64)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !274, file: !6, line: 482, baseType: !979, size: 16, offset: 18944)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !274, file: !6, line: 483, baseType: !310, size: 8, offset: 18960)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !274, file: !6, line: 497, baseType: !979, size: 16, offset: 18976)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !274, file: !6, line: 498, baseType: !2243, size: 64, offset: 19008)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !274, file: !6, line: 499, baseType: !445, size: 64, offset: 19072)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !274, file: !6, line: 500, baseType: !399, size: 64, offset: 19136)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !274, file: !6, line: 502, baseType: !448, size: 64, offset: 19200)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !260, file: !6, line: 611, baseType: !263, size: 128, offset: 512)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !260, file: !6, line: 613, baseType: !4263, size: 256, offset: 640)
!4263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4166, size: 256, elements: !1275)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !260, file: !6, line: 614, baseType: !263, size: 128, offset: 896)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !260, file: !6, line: 615, baseType: !4156, size: 512, offset: 1024)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !260, file: !6, line: 617, baseType: !4267, size: 64, offset: 1536)
!4267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4268, size: 64)
!4268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !6, line: 731, size: 320, elements: !4269)
!4269 = !{!4270, !4274, !4278, !4282, !4286}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !4268, file: !6, line: 732, baseType: !4271, size: 64)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4272, size: 64)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{!304, !259}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !4268, file: !6, line: 733, baseType: !4275, size: 64, offset: 64)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{null, !259}
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !4268, file: !6, line: 734, baseType: !4279, size: 64, offset: 128)
!4279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4280, size: 64)
!4280 = !DISubroutineType(types: !4281)
!4281 = !{!258, !259, !7, !304}
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4268, file: !6, line: 735, baseType: !4283, size: 64, offset: 192)
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4284, size: 64)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{!304, !259, !7, !304, !304, !1533}
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4268, file: !6, line: 736, baseType: !4287, size: 64, offset: 256)
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 64)
!4288 = !DISubroutineType(types: !4289)
!4289 = !{!304, !259, !7, !304, !304, !319}
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !260, file: !6, line: 618, baseType: !4291, size: 64, offset: 1600)
!4291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4292, size: 64)
!4292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !4293, line: 230, size: 512, elements: !4294)
!4293 = !DIFile(filename: "./include/linux/msi.h", directory: "/home/lizy2001/genbc/linux")
!4294 = !{!4295, !4296, !4297, !4298, !4299, !4366, !4370}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4292, file: !4293, line: 231, baseType: !336, size: 64)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4292, file: !4293, line: 232, baseType: !3584, size: 64, offset: 64)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !4292, file: !4293, line: 233, baseType: !3792, size: 64, offset: 128)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4292, file: !4293, line: 234, baseType: !263, size: 128, offset: 192)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "setup_irq", scope: !4292, file: !4293, line: 236, baseType: !4300, size: 64, offset: 320)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{!304, !4291, !273, !4303}
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !4293, line: 85, size: 768, elements: !4305)
!4305 = !{!4306, !4307, !4308, !4309, !4310, !4316, !4323, !4327, !4328}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4304, file: !4293, line: 87, baseType: !263, size: 128)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4304, file: !4293, line: 88, baseType: !7, size: 32, offset: 128)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "nvec_used", scope: !4304, file: !4293, line: 89, baseType: !7, size: 32, offset: 160)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4304, file: !4293, line: 90, baseType: !3584, size: 64, offset: 192)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !4304, file: !4293, line: 91, baseType: !4311, size: 96, offset: 256)
!4311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !4293, line: 8, size: 96, elements: !4312)
!4312 = !{!4313, !4314, !4315}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "address_lo", scope: !4311, file: !4293, line: 9, baseType: !319, size: 32)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "address_hi", scope: !4311, file: !4293, line: 10, baseType: !319, size: 32, offset: 32)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4311, file: !4293, line: 11, baseType: !319, size: 32, offset: 64)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !4304, file: !4293, line: 92, baseType: !4317, size: 64, offset: 384)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_affinity_desc", file: !4319, line: 308, size: 128, elements: !4320)
!4319 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!4320 = !{!4321, !4322}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4318, file: !4319, line: 309, baseType: !1485, size: 64)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4318, file: !4319, line: 310, baseType: !7, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "write_msi_msg", scope: !4304, file: !4293, line: 97, baseType: !4324, size: 64, offset: 448)
!4324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4325, size: 64)
!4325 = !DISubroutineType(types: !4326)
!4326 = !{null, !4303, !258}
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "write_msi_msg_data", scope: !4304, file: !4293, line: 98, baseType: !258, size: 64, offset: 512)
!4328 = !DIDerivedType(tag: DW_TAG_member, scope: !4304, file: !4293, line: 100, baseType: !4329, size: 192, offset: 576)
!4329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4304, file: !4293, line: 100, size: 192, elements: !4330)
!4330 = !{!4331, !4351, !4358, !4362}
!4331 = !DIDerivedType(tag: DW_TAG_member, scope: !4329, file: !4293, line: 102, baseType: !4332, size: 192)
!4332 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4329, file: !4293, line: 102, size: 192, elements: !4333)
!4333 = !{!4334, !4335, !4346}
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "masked", scope: !4332, file: !4293, line: 103, baseType: !319, size: 32)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "msi_attrib", scope: !4332, file: !4293, line: 113, baseType: !4336, size: 64, offset: 32)
!4336 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4332, file: !4293, line: 104, size: 64, elements: !4337)
!4337 = !{!4338, !4339, !4340, !4341, !4342, !4343, !4344, !4345}
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "is_msix", scope: !4336, file: !4293, line: 105, baseType: !310, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "multiple", scope: !4336, file: !4293, line: 106, baseType: !310, size: 3, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "multi_cap", scope: !4336, file: !4293, line: 107, baseType: !310, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "maskbit", scope: !4336, file: !4293, line: 108, baseType: !310, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "is_64", scope: !4336, file: !4293, line: 109, baseType: !310, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtual", scope: !4336, file: !4293, line: 110, baseType: !310, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "entry_nr", scope: !4336, file: !4293, line: 111, baseType: !979, size: 16, offset: 16)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "default_irq", scope: !4336, file: !4293, line: 112, baseType: !7, size: 32, offset: 32)
!4346 = !DIDerivedType(tag: DW_TAG_member, scope: !4332, file: !4293, line: 114, baseType: !4347, size: 64, offset: 128)
!4347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4332, file: !4293, line: 114, size: 64, elements: !4348)
!4348 = !{!4349, !4350}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pos", scope: !4347, file: !4293, line: 115, baseType: !310, size: 8)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "mask_base", scope: !4347, file: !4293, line: 116, baseType: !258, size: 64)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "platform", scope: !4329, file: !4293, line: 127, baseType: !4352, size: 128)
!4352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_msi_desc", file: !4293, line: 37, size: 128, elements: !4353)
!4353 = !{!4354, !4357}
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "msi_priv_data", scope: !4352, file: !4293, line: 38, baseType: !4355, size: 64)
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4356, size: 64)
!4356 = !DICompositeType(tag: DW_TAG_structure_type, name: "platform_msi_priv_data", file: !4293, line: 19, flags: DIFlagFwdDecl)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "msi_index", scope: !4352, file: !4293, line: 39, baseType: !979, size: 16, offset: 64)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "fsl_mc", scope: !4329, file: !4293, line: 128, baseType: !4359, size: 16)
!4359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fsl_mc_msi_desc", file: !4293, line: 46, size: 16, elements: !4360)
!4360 = !{!4361}
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "msi_index", scope: !4359, file: !4293, line: 47, baseType: !979, size: 16)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "inta", scope: !4329, file: !4293, line: 129, baseType: !4363, size: 16)
!4363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ti_sci_inta_msi_desc", file: !4293, line: 54, size: 16, elements: !4364)
!4364 = !{!4365}
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index", scope: !4363, file: !4293, line: 55, baseType: !979, size: 16)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "setup_irqs", scope: !4292, file: !4293, line: 238, baseType: !4367, size: 64, offset: 384)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4368 = !DISubroutineType(types: !4369)
!4369 = !{!304, !4291, !273, !304, !304}
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "teardown_irq", scope: !4292, file: !4293, line: 240, baseType: !4371, size: 64, offset: 448)
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{null, !4291, !7}
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !260, file: !6, line: 619, baseType: !258, size: 64, offset: 1664)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !260, file: !6, line: 620, baseType: !281, size: 64, offset: 1728)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !260, file: !6, line: 622, baseType: !314, size: 8, offset: 1792)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !260, file: !6, line: 623, baseType: !314, size: 8, offset: 1800)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !260, file: !6, line: 624, baseType: !314, size: 8, offset: 1808)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !260, file: !6, line: 625, baseType: !314, size: 8, offset: 1816)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !260, file: !6, line: 630, baseType: !4381, size: 384, offset: 1824)
!4381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 384, elements: !4382)
!4382 = !{!4383}
!4383 = !DISubrange(count: 48)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !260, file: !6, line: 632, baseType: !440, size: 16, offset: 2208)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !260, file: !6, line: 633, baseType: !4386, size: 16, offset: 2224)
!4386 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !6, line: 237, baseType: !440)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !260, file: !6, line: 634, baseType: !3584, size: 64, offset: 2240)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !260, file: !6, line: 635, baseType: !3585, size: 5568, offset: 2304)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !260, file: !6, line: 636, baseType: !466, size: 64, offset: 7872)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !260, file: !6, line: 637, baseType: !466, size: 64, offset: 7936)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !260, file: !6, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4393, size: 64)
!4393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_cap_saved_state", file: !6, line: 297, size: 192, elements: !4394)
!4394 = !{!4395, !4396}
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4393, file: !6, line: 298, baseType: !758, size: 128)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !4393, file: !6, line: 299, baseType: !4397, size: 64, offset: 128)
!4397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_cap_saved_data", file: !6, line: 290, size: 64, elements: !4398)
!4398 = !{!4399, !4400, !4401, !4402}
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "cap_nr", scope: !4397, file: !6, line: 291, baseType: !979, size: 16)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "cap_extended", scope: !4397, file: !6, line: 292, baseType: !609, size: 8, offset: 16)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4397, file: !6, line: 293, baseType: !7, size: 32, offset: 32)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4397, file: !6, line: 294, baseType: !4403, offset: 64)
!4403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, elements: !2449)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4397, size: 64)
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_pme_device", file: !3, line: 57, size: 192, elements: !4407)
!4407 = !{!4408, !4409}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4406, file: !3, line: 58, baseType: !263, size: 128)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4406, file: !3, line: 59, baseType: !273, size: 64, offset: 128)
!4410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4411, size: 64)
!4411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device", file: !283, line: 351, size: 10880, elements: !4412)
!4412 = !{!4413, !4414, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4432, !4449, !4522, !4551, !4575, !4596, !4600, !4609, !4641, !4655, !4677, !4681, !4682, !4683, !4684, !4685, !4686, !4687}
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !4411, file: !283, line: 352, baseType: !304, size: 32)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4411, file: !283, line: 353, baseType: !4415, size: 64, offset: 64)
!4415 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !4416, line: 424, baseType: !258)
!4416 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4411, file: !283, line: 354, baseType: !3801, size: 192, offset: 128)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4411, file: !283, line: 355, baseType: !4410, size: 64, offset: 320)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4411, file: !283, line: 356, baseType: !263, size: 128, offset: 384)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4411, file: !283, line: 357, baseType: !263, size: 128, offset: 512)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_list", scope: !4411, file: !283, line: 358, baseType: !263, size: 128, offset: 640)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "del_list", scope: !4411, file: !283, line: 359, baseType: !263, size: 128, offset: 768)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4411, file: !283, line: 360, baseType: !4424, size: 32, offset: 896)
!4424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_status", file: !283, line: 179, size: 32, elements: !4425)
!4425 = !{!4426, !4427, !4428, !4429, !4430, !4431}
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !4424, file: !283, line: 180, baseType: !319, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4424, file: !283, line: 181, baseType: !319, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "show_in_ui", scope: !4424, file: !283, line: 182, baseType: !319, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "functional", scope: !4424, file: !283, line: 183, baseType: !319, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "battery_present", scope: !4424, file: !283, line: 184, baseType: !319, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4424, file: !283, line: 185, baseType: !319, size: 27, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4411, file: !283, line: 361, baseType: !4433, size: 32, offset: 928)
!4433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_flags", file: !283, line: 190, size: 32, elements: !4434)
!4434 = !{!4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448}
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_status", scope: !4433, file: !283, line: 191, baseType: !319, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !4433, file: !283, line: 192, baseType: !319, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "ejectable", scope: !4433, file: !283, line: 193, baseType: !319, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "power_manageable", scope: !4433, file: !283, line: 194, baseType: !319, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4433, file: !283, line: 195, baseType: !319, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !4433, file: !283, line: 196, baseType: !319, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !4433, file: !283, line: 197, baseType: !319, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_notify", scope: !4433, file: !283, line: 198, baseType: !319, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "is_dock_station", scope: !4433, file: !283, line: 199, baseType: !319, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible_ok", scope: !4433, file: !283, line: 200, baseType: !319, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma", scope: !4433, file: !283, line: 201, baseType: !319, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "cca_seen", scope: !4433, file: !283, line: 202, baseType: !319, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "enumeration_by_parent", scope: !4433, file: !283, line: 203, baseType: !319, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4433, file: !283, line: 204, baseType: !319, size: 19, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "pnp", scope: !4411, file: !283, line: 362, baseType: !4450, size: 960, offset: 960)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_pnp", file: !283, line: 234, size: 960, elements: !4451)
!4451 = !{!4452, !4454, !4461, !4463, !4464, !4465, !4470, !4473}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "bus_id", scope: !4450, file: !283, line: 235, baseType: !4453, size: 64)
!4453 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_id", file: !283, line: 217, baseType: !2150)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4450, file: !283, line: 236, baseType: !4455, size: 32, offset: 64)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_type", file: !283, line: 227, size: 32, elements: !4456)
!4456 = !{!4457, !4458, !4459, !4460}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_id", scope: !4455, file: !283, line: 228, baseType: !319, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4455, file: !283, line: 229, baseType: !319, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "platform_id", scope: !4455, file: !283, line: 230, baseType: !319, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4455, file: !283, line: 231, baseType: !319, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4450, file: !283, line: 237, baseType: !4462, size: 64, offset: 128)
!4462 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_address", file: !283, line: 218, baseType: !541)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !4450, file: !283, line: 238, baseType: !399, size: 64, offset: 192)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4450, file: !283, line: 239, baseType: !263, size: 128, offset: 256)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !4450, file: !283, line: 240, baseType: !4466, size: 320, offset: 384)
!4466 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_name", file: !283, line: 219, baseType: !4467)
!4467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 320, elements: !4468)
!4468 = !{!4469}
!4469 = !DISubrange(count: 40)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "device_class", scope: !4450, file: !283, line: 241, baseType: !4471, size: 160, offset: 704)
!4471 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_class", file: !283, line: 220, baseType: !4472)
!4472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 160, elements: !2319)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "str_obj", scope: !4450, file: !283, line: 242, baseType: !4474, size: 64, offset: 896)
!4474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4475, size: 64)
!4475 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !4416, line: 899, size: 192, elements: !4476)
!4476 = !{!4477, !4479, !4484, !4490, !4496, !4502, !4508, !4516}
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4475, file: !4416, line: 900, baseType: !4478, size: 32)
!4478 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !4416, line: 635, baseType: !319)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !4475, file: !4416, line: 904, baseType: !4480, size: 128)
!4480 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4475, file: !4416, line: 901, size: 128, elements: !4481)
!4481 = !{!4482, !4483}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4480, file: !4416, line: 902, baseType: !4478, size: 32)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4480, file: !4416, line: 903, baseType: !541, size: 64, offset: 64)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4475, file: !4416, line: 910, baseType: !4485, size: 128)
!4485 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4475, file: !4416, line: 906, size: 128, elements: !4486)
!4486 = !{!4487, !4488, !4489}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4485, file: !4416, line: 907, baseType: !4478, size: 32)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4485, file: !4416, line: 908, baseType: !319, size: 32, offset: 32)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4485, file: !4416, line: 909, baseType: !399, size: 64, offset: 64)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4475, file: !4416, line: 916, baseType: !4491, size: 128)
!4491 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4475, file: !4416, line: 912, size: 128, elements: !4492)
!4492 = !{!4493, !4494, !4495}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4491, file: !4416, line: 913, baseType: !4478, size: 32)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4491, file: !4416, line: 914, baseType: !319, size: 32, offset: 32)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4491, file: !4416, line: 915, baseType: !325, size: 64, offset: 64)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !4475, file: !4416, line: 922, baseType: !4497, size: 128)
!4497 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4475, file: !4416, line: 918, size: 128, elements: !4498)
!4498 = !{!4499, !4500, !4501}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4497, file: !4416, line: 919, baseType: !4478, size: 32)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4497, file: !4416, line: 920, baseType: !319, size: 32, offset: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !4497, file: !4416, line: 921, baseType: !4474, size: 64, offset: 64)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !4475, file: !4416, line: 928, baseType: !4503, size: 128)
!4503 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4475, file: !4416, line: 924, size: 128, elements: !4504)
!4504 = !{!4505, !4506, !4507}
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4503, file: !4416, line: 925, baseType: !4478, size: 32)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !4503, file: !4416, line: 926, baseType: !4478, size: 32, offset: 32)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4503, file: !4416, line: 927, baseType: !4415, size: 64, offset: 64)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !4475, file: !4416, line: 935, baseType: !4509, size: 192)
!4509 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4475, file: !4416, line: 930, size: 192, elements: !4510)
!4510 = !{!4511, !4512, !4513, !4515}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4509, file: !4416, line: 931, baseType: !4478, size: 32)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !4509, file: !4416, line: 932, baseType: !319, size: 32, offset: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !4509, file: !4416, line: 933, baseType: !4514, size: 64, offset: 64)
!4514 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !4416, line: 128, baseType: !541)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !4509, file: !4416, line: 934, baseType: !319, size: 32, offset: 128)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !4475, file: !4416, line: 941, baseType: !4517, size: 96)
!4517 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4475, file: !4416, line: 937, size: 96, elements: !4518)
!4518 = !{!4519, !4520, !4521}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4517, file: !4416, line: 938, baseType: !4478, size: 32)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !4517, file: !4416, line: 939, baseType: !319, size: 32, offset: 32)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !4517, file: !4416, line: 940, baseType: !319, size: 32, offset: 64)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4411, file: !283, line: 363, baseType: !4523, size: 1344, offset: 1920)
!4523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power", file: !283, line: 275, size: 1344, elements: !4524)
!4524 = !{!4525, !4526, !4536}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4523, file: !283, line: 276, baseType: !304, size: 32)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4523, file: !283, line: 277, baseType: !4527, size: 32, offset: 32)
!4527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_flags", file: !283, line: 254, size: 32, elements: !4528)
!4528 = !{!4529, !4530, !4531, !4532, !4533, !4534, !4535}
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_get", scope: !4527, file: !283, line: 255, baseType: !319, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "power_resources", scope: !4527, file: !283, line: 256, baseType: !319, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "inrush_current", scope: !4527, file: !283, line: 257, baseType: !319, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "power_removed", scope: !4527, file: !283, line: 258, baseType: !319, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_parent", scope: !4527, file: !283, line: 259, baseType: !319, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "dsw_present", scope: !4527, file: !283, line: 260, baseType: !319, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4527, file: !283, line: 261, baseType: !319, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4523, file: !283, line: 278, baseType: !4537, size: 1280, offset: 64)
!4537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4538, size: 1280, elements: !4549)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_state", file: !283, line: 264, size: 256, elements: !4539)
!4539 = !{!4540, !4546, !4547, !4548}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4538, file: !283, line: 269, baseType: !4541, size: 8)
!4541 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4538, file: !283, line: 265, size: 8, elements: !4542)
!4542 = !{!4543, !4544, !4545}
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4541, file: !283, line: 266, baseType: !310, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_set", scope: !4541, file: !283, line: 267, baseType: !310, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4541, file: !283, line: 268, baseType: !310, size: 6, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4538, file: !283, line: 270, baseType: !304, size: 32, offset: 32)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4538, file: !283, line: 271, baseType: !304, size: 32, offset: 64)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4538, file: !283, line: 272, baseType: !263, size: 128, offset: 128)
!4549 = !{!4550}
!4550 = !DISubrange(count: 5)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4411, file: !283, line: 364, baseType: !4552, size: 640, offset: 3264)
!4552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup", file: !283, line: 315, size: 640, elements: !4553)
!4553 = !{!4554, !4555, !4556, !4557, !4558, !4563, !4572, !4573, !4574}
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_device", scope: !4552, file: !283, line: 316, baseType: !4415, size: 64)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_number", scope: !4552, file: !283, line: 317, baseType: !541, size: 64, offset: 64)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "sleep_state", scope: !4552, file: !283, line: 318, baseType: !541, size: 64, offset: 128)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4552, file: !283, line: 319, baseType: !263, size: 128, offset: 192)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4552, file: !283, line: 320, baseType: !4559, size: 8, offset: 320)
!4559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_flags", file: !283, line: 305, size: 8, elements: !4560)
!4560 = !{!4561, !4562}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4559, file: !283, line: 306, baseType: !310, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_present", scope: !4559, file: !283, line: 307, baseType: !310, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4552, file: !283, line: 321, baseType: !4564, size: 128, offset: 384)
!4564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_context", file: !283, line: 310, size: 128, elements: !4565)
!4565 = !{!4566, !4571}
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4564, file: !283, line: 311, baseType: !4567, size: 64)
!4567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4568, size: 64)
!4568 = !DISubroutineType(types: !4569)
!4569 = !{null, !4570}
!4570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4564, size: 64)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4564, file: !283, line: 312, baseType: !3584, size: 64, offset: 64)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !4552, file: !283, line: 322, baseType: !3678, size: 64, offset: 512)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_count", scope: !4552, file: !283, line: 323, baseType: !304, size: 32, offset: 576)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "enable_count", scope: !4552, file: !283, line: 324, baseType: !304, size: 32, offset: 608)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !4411, file: !283, line: 365, baseType: !4576, size: 192, offset: 3904)
!4576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf", file: !283, line: 297, size: 192, elements: !4577)
!4577 = !{!4578, !4579, !4583, !4584}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4576, file: !283, line: 298, baseType: !304, size: 32)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4576, file: !283, line: 299, baseType: !4580, size: 8, offset: 32)
!4580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_flags", file: !283, line: 283, size: 8, elements: !4581)
!4581 = !{!4582}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4580, file: !283, line: 284, baseType: !310, size: 8, flags: DIFlagBitField, extraData: i64 0)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "state_count", scope: !4576, file: !283, line: 300, baseType: !304, size: 32, offset: 64)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4576, file: !283, line: 301, baseType: !4585, size: 64, offset: 128)
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4586, size: 64)
!4586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_state", file: !283, line: 287, size: 64, elements: !4587)
!4587 = !{!4588, !4593, !4594, !4595}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4586, file: !283, line: 291, baseType: !4589, size: 8)
!4589 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4586, file: !283, line: 288, size: 8, elements: !4590)
!4590 = !{!4591, !4592}
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4589, file: !283, line: 289, baseType: !310, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4589, file: !283, line: 290, baseType: !310, size: 7, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4586, file: !283, line: 292, baseType: !310, size: 8, offset: 8)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !4586, file: !283, line: 293, baseType: !310, size: 8, offset: 16)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4586, file: !283, line: 294, baseType: !304, size: 32, offset: 32)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4411, file: !283, line: 366, baseType: !4597, size: 64, offset: 4096)
!4597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_dir", file: !283, line: 209, size: 64, elements: !4598)
!4598 = !{!4599}
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4597, file: !283, line: 210, baseType: !281, size: 64)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4411, file: !283, line: 367, baseType: !4601, size: 384, offset: 4160)
!4601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_data", file: !283, line: 341, size: 384, elements: !4602)
!4602 = !{!4603, !4606, !4607, !4608}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4601, file: !283, line: 342, baseType: !4604, size: 64)
!4604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4605, size: 64)
!4605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4475)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4601, file: !283, line: 343, baseType: !263, size: 128, offset: 64)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible", scope: !4601, file: !283, line: 344, baseType: !4604, size: 64, offset: 192)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "subnodes", scope: !4601, file: !283, line: 345, baseType: !263, size: 128, offset: 256)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4411, file: !283, line: 368, baseType: !4610, size: 64, offset: 4544)
!4610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4611, size: 64)
!4611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_scan_handler", file: !283, line: 122, size: 1216, elements: !4612)
!4612 = !{!4613, !4614, !4615, !4620, !4624, !4628, !4629, !4630}
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4611, file: !283, line: 123, baseType: !4092, size: 64)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !4611, file: !283, line: 124, baseType: !263, size: 128, offset: 64)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4611, file: !283, line: 125, baseType: !4616, size: 64, offset: 192)
!4616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4617, size: 64)
!4617 = !DISubroutineType(types: !4618)
!4618 = !{!609, !340, !4619}
!4619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4092, size: 64)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4611, file: !283, line: 126, baseType: !4621, size: 64, offset: 256)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64)
!4622 = !DISubroutineType(types: !4623)
!4623 = !{!304, !4410, !4092}
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4611, file: !283, line: 127, baseType: !4625, size: 64, offset: 320)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{null, !4410}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !4611, file: !283, line: 128, baseType: !3610, size: 64, offset: 384)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !4611, file: !283, line: 129, baseType: !3610, size: 64, offset: 448)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4611, file: !283, line: 130, baseType: !4631, size: 704, offset: 512)
!4631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_profile", file: !283, line: 108, size: 704, elements: !4632)
!4632 = !{!4633, !4634, !4638, !4639, !4640}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4631, file: !283, line: 109, baseType: !345, size: 512)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "scan_dependent", scope: !4631, file: !283, line: 110, baseType: !4635, size: 64, offset: 512)
!4635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4636, size: 64)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{!304, !4410}
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "notify_online", scope: !4631, file: !283, line: 111, baseType: !4625, size: 64, offset: 576)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4631, file: !283, line: 112, baseType: !609, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "demand_offline", scope: !4631, file: !283, line: 113, baseType: !609, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "hp", scope: !4411, file: !283, line: 369, baseType: !4642, size: 64, offset: 4608)
!4642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4643, size: 64)
!4643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_context", file: !283, line: 138, size: 256, elements: !4644)
!4644 = !{!4645, !4646, !4650, !4654}
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4643, file: !283, line: 139, baseType: !4410, size: 64)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4643, file: !283, line: 140, baseType: !4647, size: 64, offset: 64)
!4647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4648, size: 64)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{!304, !4410, !319}
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4643, file: !283, line: 141, baseType: !4651, size: 64, offset: 128)
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{null, !4410, !319}
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !4643, file: !283, line: 142, baseType: !4625, size: 64, offset: 192)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4411, file: !283, line: 370, baseType: !4656, size: 64, offset: 4672)
!4656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4657, size: 64)
!4657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_driver", file: !283, line: 162, size: 2816, elements: !4658)
!4658 = !{!4659, !4663, !4664, !4665, !4666, !4675, !4676}
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4657, file: !283, line: 163, baseType: !4660, size: 640)
!4660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 640, elements: !4661)
!4661 = !{!4662}
!4662 = !DISubrange(count: 80)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4657, file: !283, line: 164, baseType: !4660, size: 640, offset: 640)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4657, file: !283, line: 165, baseType: !4092, size: 64, offset: 1280)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4657, file: !283, line: 166, baseType: !7, size: 32, offset: 1344)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4657, file: !283, line: 167, baseType: !4667, size: 192, offset: 1408)
!4667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_ops", file: !283, line: 154, size: 192, elements: !4668)
!4668 = !{!4669, !4671, !4673}
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !4667, file: !283, line: 155, baseType: !4670, size: 64)
!4670 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_add", file: !283, line: 150, baseType: !4635)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4667, file: !283, line: 156, baseType: !4672, size: 64, offset: 64)
!4672 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_remove", file: !283, line: 151, baseType: !4635)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4667, file: !283, line: 157, baseType: !4674, size: 64, offset: 128)
!4674 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_notify", file: !283, line: 152, baseType: !4651)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !4657, file: !283, line: 168, baseType: !3573, size: 1152, offset: 1600)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4657, file: !283, line: 169, baseType: !336, size: 64, offset: 2752)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "driver_gpios", scope: !4411, file: !283, line: 371, baseType: !4678, size: 64, offset: 4736)
!4678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4679, size: 64)
!4679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4680)
!4680 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_mapping", file: !283, line: 348, flags: DIFlagFwdDecl)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4411, file: !283, line: 372, baseType: !258, size: 64, offset: 4800)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4411, file: !283, line: 373, baseType: !3585, size: 5568, offset: 4864)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_count", scope: !4411, file: !283, line: 374, baseType: !7, size: 32, offset: 10432)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "dep_unmet", scope: !4411, file: !283, line: 375, baseType: !7, size: 32, offset: 10464)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_list", scope: !4411, file: !283, line: 376, baseType: !263, size: 128, offset: 10496)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_lock", scope: !4411, file: !283, line: 377, baseType: !1293, size: 192, offset: 10624)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4411, file: !283, line: 378, baseType: !4625, size: 64, offset: 10816)
!4688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!4690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4691, size: 64)
!4691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4692)
!4692 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !304)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4694, size: 64)
!4694 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !267)
!4695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4696, size: 64)
!4696 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !757)
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 64)
!4698 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !762)
!4699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4700, size: 64)
!4700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4694)
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4702, size: 64)
!4702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !274)
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!4704 = !{!0, !4705, !4710, !4712, !4714, !4716, !4718, !4720, !4722, !4724, !4726, !4728, !4730, !4741, !4744, !4751, !4753, !4755, !4757, !4759, !4761, !4763, !4765, !4767, !4769, !4771, !4773, !4775, !4777, !4803, !4809, !4814, !4817, !4820, !4822, !4824, !4826, !4834, !4857, !4862, !4864, !4866, !4879}
!4705 = !DIGlobalVariableExpression(var: !4706, expr: !DIExpression())
!4706 = distinct !DIGlobalVariable(name: "pci_power_names", scope: !2, file: !3, line: 38, type: !4707, isLocal: false, isDefinition: true)
!4707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !340, size: 448, elements: !4708)
!4708 = !{!4709}
!4709 = !DISubrange(count: 7)
!4710 = !DIGlobalVariableExpression(var: !4711, expr: !DIExpression())
!4711 = distinct !DIGlobalVariable(name: "pci_domains_supported", scope: !2, file: !3, line: 76, type: !304, isLocal: false, isDefinition: true)
!4712 = !DIGlobalVariableExpression(var: !4713, expr: !DIExpression())
!4713 = distinct !DIGlobalVariable(name: "pci_cardbus_io_size", scope: !2, file: !3, line: 82, type: !448, isLocal: false, isDefinition: true)
!4714 = !DIGlobalVariableExpression(var: !4715, expr: !DIExpression())
!4715 = distinct !DIGlobalVariable(name: "pci_cardbus_mem_size", scope: !2, file: !3, line: 83, type: !448, isLocal: false, isDefinition: true)
!4716 = !DIGlobalVariableExpression(var: !4717, expr: !DIExpression())
!4717 = distinct !DIGlobalVariable(name: "pci_hotplug_io_size", scope: !2, file: !3, line: 89, type: !448, isLocal: false, isDefinition: true)
!4718 = !DIGlobalVariableExpression(var: !4719, expr: !DIExpression())
!4719 = distinct !DIGlobalVariable(name: "pci_hotplug_mmio_size", scope: !2, file: !3, line: 95, type: !448, isLocal: false, isDefinition: true)
!4720 = !DIGlobalVariableExpression(var: !4721, expr: !DIExpression())
!4721 = distinct !DIGlobalVariable(name: "pci_hotplug_mmio_pref_size", scope: !2, file: !3, line: 96, type: !448, isLocal: false, isDefinition: true)
!4722 = !DIGlobalVariableExpression(var: !4723, expr: !DIExpression())
!4723 = distinct !DIGlobalVariable(name: "pci_hotplug_bus_size", scope: !2, file: !3, line: 99, type: !448, isLocal: false, isDefinition: true)
!4724 = !DIGlobalVariableExpression(var: !4725, expr: !DIExpression())
!4725 = distinct !DIGlobalVariable(name: "pcie_bus_config", scope: !2, file: !3, line: 112, type: !5, isLocal: false, isDefinition: true)
!4726 = !DIGlobalVariableExpression(var: !4727, expr: !DIExpression())
!4727 = distinct !DIGlobalVariable(name: "pci_dfl_cache_line_size", scope: !2, file: !3, line: 121, type: !310, isLocal: false, isDefinition: true)
!4728 = !DIGlobalVariableExpression(var: !4729, expr: !DIExpression())
!4729 = distinct !DIGlobalVariable(name: "pcibios_max_latency", scope: !2, file: !3, line: 128, type: !7, isLocal: false, isDefinition: true)
!4730 = !DIGlobalVariableExpression(var: !4731, expr: !DIExpression())
!4731 = distinct !DIGlobalVariable(name: "__setup_pcie_port_pm_setup", scope: !2, file: !3, line: 158, type: !4732, isLocal: true, isDefinition: true, align: 64)
!4732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obs_kernel_param", file: !4733, line: 241, size: 192, elements: !4734)
!4733 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4734 = !{!4735, !4736, !4740}
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4732, file: !4733, line: 242, baseType: !340, size: 64)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "setup_func", scope: !4732, file: !4733, line: 243, baseType: !4737, size: 64, offset: 64)
!4737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4738, size: 64)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{!304, !399}
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "early", scope: !4732, file: !4733, line: 244, baseType: !304, size: 32, offset: 128)
!4741 = !DIGlobalVariableExpression(var: !4742, expr: !DIExpression())
!4742 = distinct !DIGlobalVariable(name: "__warned", scope: !4743, file: !3, line: 2150, type: !609, isLocal: true, isDefinition: true)
!4743 = distinct !DISubprogram(name: "pci_disable_device", scope: !3, file: !3, line: 2142, type: !3533, scopeLine: 2143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!4744 = !DIGlobalVariableExpression(var: !4745, expr: !DIExpression())
!4745 = distinct !DIGlobalVariable(name: "__warned", scope: !4746, file: !3, line: 4065, type: !609, isLocal: true, isDefinition: true)
!4746 = distinct !DISubprogram(name: "pci_remap_iospace", scope: !3, file: !3, line: 4047, type: !4747, scopeLine: 4048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!4747 = !DISubroutineType(types: !4748)
!4748 = !{!304, !4749, !2243}
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4750, size: 64)
!4750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4156)
!4751 = !DIGlobalVariableExpression(var: !4752, expr: !DIExpression())
!4752 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_resource_alignment_sysfs_init308", scope: !2, file: !3, line: 6402, type: !258, isLocal: true, isDefinition: true)
!4753 = !DIGlobalVariableExpression(var: !4754, expr: !DIExpression())
!4754 = distinct !DIGlobalVariable(name: "__setup_pci_setup", scope: !2, file: !3, line: 6558, type: !4732, isLocal: true, isDefinition: true, align: 64)
!4755 = !DIGlobalVariableExpression(var: !4756, expr: !DIExpression())
!4756 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_pci_realloc_setup_params309", scope: !2, file: !3, line: 6577, type: !258, isLocal: true, isDefinition: true)
!4757 = !DIGlobalVariableExpression(var: !4758, expr: !DIExpression())
!4758 = distinct !DIGlobalVariable(name: "isa_dma_bridge_buggy", scope: !2, file: !3, line: 43, type: !304, isLocal: false, isDefinition: true)
!4759 = !DIGlobalVariableExpression(var: !4760, expr: !DIExpression())
!4760 = distinct !DIGlobalVariable(name: "pci_pci_problems", scope: !2, file: !3, line: 46, type: !304, isLocal: false, isDefinition: true)
!4761 = !DIGlobalVariableExpression(var: !4762, expr: !DIExpression())
!4762 = distinct !DIGlobalVariable(name: "pci_pm_d3hot_delay", scope: !2, file: !3, line: 49, type: !7, isLocal: false, isDefinition: true)
!4763 = !DIGlobalVariableExpression(var: !4764, expr: !DIExpression())
!4764 = distinct !DIGlobalVariable(name: "pci_cache_line_size", scope: !2, file: !3, line: 122, type: !310, isLocal: false, isDefinition: true)
!4765 = !DIGlobalVariableExpression(var: !4766, expr: !DIExpression())
!4766 = distinct !DIGlobalVariable(name: "pcie_ari_disabled", scope: !2, file: !3, line: 131, type: !609, isLocal: true, isDefinition: true)
!4767 = !DIGlobalVariableExpression(var: !4768, expr: !DIExpression())
!4768 = distinct !DIGlobalVariable(name: "pcie_ats_disabled", scope: !2, file: !3, line: 134, type: !609, isLocal: true, isDefinition: true)
!4769 = !DIGlobalVariableExpression(var: !4770, expr: !DIExpression())
!4770 = distinct !DIGlobalVariable(name: "pci_early_dump", scope: !2, file: !3, line: 137, type: !609, isLocal: false, isDefinition: true)
!4771 = !DIGlobalVariableExpression(var: !4772, expr: !DIExpression())
!4772 = distinct !DIGlobalVariable(name: "pci_bridge_d3_disable", scope: !2, file: !3, line: 146, type: !609, isLocal: true, isDefinition: true)
!4773 = !DIGlobalVariableExpression(var: !4774, expr: !DIExpression())
!4774 = distinct !DIGlobalVariable(name: "pci_bridge_d3_force", scope: !2, file: !3, line: 148, type: !609, isLocal: true, isDefinition: true)
!4775 = !DIGlobalVariableExpression(var: !4776, expr: !DIExpression())
!4776 = distinct !DIGlobalVariable(name: "pci_acs_enable", scope: !2, file: !3, line: 789, type: !304, isLocal: true, isDefinition: true)
!4777 = !DIGlobalVariableExpression(var: !4778, expr: !DIExpression())
!4778 = distinct !DIGlobalVariable(name: "pci_platform_pm", scope: !2, file: !3, line: 935, type: !4779, isLocal: true, isDefinition: true)
!4779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4780, size: 64)
!4780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4781)
!4781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_platform_pm_ops", file: !4228, line: 77, size: 512, elements: !4782)
!4782 = !{!4783, !4787, !4788, !4792, !4796, !4797, !4798, !4802}
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !4781, file: !4228, line: 78, baseType: !4784, size: 64)
!4784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4785, size: 64)
!4785 = !DISubroutineType(types: !4786)
!4786 = !{!609, !273}
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "is_manageable", scope: !4781, file: !4228, line: 79, baseType: !4784, size: 64, offset: 64)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "set_state", scope: !4781, file: !4228, line: 80, baseType: !4789, size: 64, offset: 128)
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4790, size: 64)
!4790 = !DISubroutineType(types: !4791)
!4791 = !{!304, !273, !4124}
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4781, file: !4228, line: 81, baseType: !4793, size: 64, offset: 192)
!4793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4794, size: 64)
!4794 = !DISubroutineType(types: !4795)
!4795 = !{!4124, !273}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "refresh_state", scope: !4781, file: !4228, line: 82, baseType: !3532, size: 64, offset: 256)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "choose_state", scope: !4781, file: !4228, line: 83, baseType: !4793, size: 64, offset: 320)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "set_wakeup", scope: !4781, file: !4228, line: 84, baseType: !4799, size: 64, offset: 384)
!4799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4800, size: 64)
!4800 = !DISubroutineType(types: !4801)
!4801 = !{!304, !273, !609}
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "need_resume", scope: !4781, file: !4228, line: 85, baseType: !4784, size: 64, offset: 448)
!4803 = !DIGlobalVariableExpression(var: !4804, expr: !DIExpression())
!4804 = distinct !DIGlobalVariable(name: "arch_set_vga_state", scope: !2, file: !3, line: 5978, type: !4805, isLocal: true, isDefinition: true)
!4805 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_set_vga_state_t", file: !6, line: 1636, baseType: !4806)
!4806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 64)
!4807 = !DISubroutineType(types: !4808)
!4808 = !{!304, !273, !609, !7, !319}
!4809 = !DIGlobalVariableExpression(var: !4810, expr: !DIExpression())
!4810 = distinct !DIGlobalVariable(name: "__setup_str_pcie_port_pm_setup", scope: !2, file: !3, line: 158, type: !4811, isLocal: true, isDefinition: true, align: 8)
!4811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 112, elements: !4812)
!4812 = !{!4813}
!4813 = !DISubrange(count: 14)
!4814 = !DIGlobalVariableExpression(var: !4815, expr: !DIExpression())
!4815 = distinct !DIGlobalVariable(name: "_rs", scope: !4816, file: !3, line: 1086, type: !1820, isLocal: true, isDefinition: true)
!4816 = distinct !DISubprogram(name: "pci_raw_set_power_state", scope: !3, file: !3, line: 1005, type: !4790, scopeLine: 1006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!4817 = !DIGlobalVariableExpression(var: !4818, expr: !DIExpression())
!4818 = distinct !DIGlobalVariable(name: "__print_once", scope: !4819, file: !3, line: 821, type: !609, isLocal: true, isDefinition: true)
!4819 = distinct !DISubprogram(name: "pci_disable_acs_redir", scope: !3, file: !3, line: 807, type: !3533, scopeLine: 808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!4820 = !DIGlobalVariableExpression(var: !4821, expr: !DIExpression())
!4821 = distinct !DIGlobalVariable(name: "disable_acs_redir_param", scope: !2, file: !3, line: 799, type: !340, isLocal: true, isDefinition: true)
!4822 = !DIGlobalVariableExpression(var: !4823, expr: !DIExpression())
!4823 = distinct !DIGlobalVariable(name: "pci_pme_list_mutex", scope: !2, file: !3, line: 54, type: !1293, isLocal: true, isDefinition: true)
!4824 = !DIGlobalVariableExpression(var: !4825, expr: !DIExpression())
!4825 = distinct !DIGlobalVariable(name: "pci_pme_list", scope: !2, file: !3, line: 53, type: !263, isLocal: true, isDefinition: true)
!4826 = !DIGlobalVariableExpression(var: !4827, expr: !DIExpression())
!4827 = distinct !DIGlobalVariable(name: "pci_pme_work", scope: !2, file: !3, line: 55, type: !4828, isLocal: true, isDefinition: true)
!4828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !211, line: 115, size: 704, elements: !4829)
!4829 = !{!4830, !4831, !4832, !4833}
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4828, file: !211, line: 116, baseType: !2076, size: 256)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4828, file: !211, line: 117, baseType: !3690, size: 320, offset: 256)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4828, file: !211, line: 120, baseType: !2911, size: 64, offset: 576)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !4828, file: !211, line: 121, baseType: !304, size: 32, offset: 640)
!4834 = !DIGlobalVariableExpression(var: !4835, expr: !DIExpression())
!4835 = distinct !DIGlobalVariable(name: "bridge_d3_blacklist", scope: !2, file: !3, line: 2811, type: !4836, isLocal: true, isDefinition: true)
!4836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4837, size: 5504, elements: !1687)
!4837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4838)
!4838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_system_id", file: !3517, line: 566, size: 2752, elements: !4839)
!4839 = !{!4840, !4845, !4846, !4856}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4838, file: !3517, line: 567, baseType: !4841, size: 64)
!4841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4842, size: 64)
!4842 = !DISubroutineType(types: !4843)
!4843 = !{!304, !4844}
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4837, size: 64)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !4838, file: !3517, line: 568, baseType: !340, size: 64, offset: 64)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "matches", scope: !4838, file: !3517, line: 569, baseType: !4847, size: 2560, offset: 128)
!4847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4848, size: 2560, elements: !1275)
!4848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_strmatch", file: !3517, line: 560, size: 640, elements: !4849)
!4849 = !{!4850, !4851, !4852}
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4848, file: !3517, line: 561, baseType: !314, size: 7, flags: DIFlagBitField, extraData: i64 0)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "exact_match", scope: !4848, file: !3517, line: 562, baseType: !314, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "substr", scope: !4848, file: !3517, line: 563, baseType: !4853, size: 632, offset: 8)
!4853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 632, elements: !4854)
!4854 = !{!4855}
!4855 = !DISubrange(count: 79)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4838, file: !3517, line: 570, baseType: !258, size: 64, offset: 2688)
!4857 = !DIGlobalVariableExpression(var: !4858, expr: !DIExpression())
!4858 = distinct !DIGlobalVariable(name: "__print_once", scope: !4859, file: !3, line: 6198, type: !609, isLocal: true, isDefinition: true)
!4859 = distinct !DISubprogram(name: "pci_specified_resource_alignment", scope: !3, file: !3, line: 6184, type: !4860, scopeLine: 6186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!4860 = !DISubroutineType(types: !4861)
!4861 = !{!4160, !273, !1011}
!4862 = !DIGlobalVariableExpression(var: !4863, expr: !DIExpression())
!4863 = distinct !DIGlobalVariable(name: "resource_alignment_lock", scope: !2, file: !3, line: 6174, type: !358, isLocal: true, isDefinition: true)
!4864 = !DIGlobalVariableExpression(var: !4865, expr: !DIExpression())
!4865 = distinct !DIGlobalVariable(name: "resource_alignment_param", scope: !2, file: !3, line: 6173, type: !399, isLocal: true, isDefinition: true)
!4866 = !DIGlobalVariableExpression(var: !4867, expr: !DIExpression())
!4867 = distinct !DIGlobalVariable(name: "bus_attr_resource_alignment", scope: !2, file: !3, line: 6395, type: !4868, isLocal: true, isDefinition: true)
!4868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_attribute", file: !3579, line: 123, size: 256, elements: !4869)
!4869 = !{!4870, !4871, !4875}
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4868, file: !3579, line: 124, baseType: !435, size: 128)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4868, file: !3579, line: 125, baseType: !4872, size: 64, offset: 128)
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 64)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{!430, !3577, !399}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4868, file: !3579, line: 126, baseType: !4876, size: 64, offset: 192)
!4876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4877, size: 64)
!4877 = !DISubroutineType(types: !4878)
!4878 = !{!430, !3577, !340, !445}
!4879 = !DIGlobalVariableExpression(var: !4880, expr: !DIExpression())
!4880 = distinct !DIGlobalVariable(name: "__setup_str_pci_setup", scope: !2, file: !3, line: 6558, type: !4881, isLocal: true, isDefinition: true, align: 8)
!4881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 32, elements: !1275)
!4882 = !{!"rsp"}
!4883 = !{i32 7, !"Dwarf Version", i32 4}
!4884 = !{i32 2, !"Debug Info Version", i32 3}
!4885 = !{i32 1, !"wchar_size", i32 2}
!4886 = !{i32 1, !"Code Model", i32 2}
!4887 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4888 = distinct !DISubprogram(name: "pci_ats_disabled", scope: !3, file: !3, line: 139, type: !3314, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!4889 = !DILocation(line: 141, column: 9, scope: !4888)
!4890 = !DILocation(line: 141, column: 2, scope: !4888)
!4891 = distinct !DISubprogram(name: "pcie_port_pm_setup", scope: !3, file: !3, line: 150, type: !4738, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!4892 = !DILocalVariable(name: "str", arg: 1, scope: !4891, file: !3, line: 150, type: !399)
!4893 = !DILocation(line: 150, column: 44, scope: !4891)
!4894 = !DILocation(line: 152, column: 14, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 152, column: 6)
!4896 = !DILocation(line: 152, column: 7, scope: !4895)
!4897 = !DILocation(line: 152, column: 6, scope: !4891)
!4898 = !DILocation(line: 153, column: 25, scope: !4895)
!4899 = !DILocation(line: 153, column: 3, scope: !4895)
!4900 = !DILocation(line: 154, column: 19, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 154, column: 11)
!4902 = !DILocation(line: 154, column: 12, scope: !4901)
!4903 = !DILocation(line: 154, column: 11, scope: !4895)
!4904 = !DILocation(line: 155, column: 23, scope: !4901)
!4905 = !DILocation(line: 155, column: 3, scope: !4901)
!4906 = !DILocation(line: 156, column: 2, scope: !4891)
!4907 = distinct !DISubprogram(name: "pci_bus_max_busnr", scope: !3, file: !3, line: 170, type: !4908, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!4908 = !DISubroutineType(types: !4909)
!4909 = !{!314, !259}
!4910 = !DILocalVariable(name: "bus", arg: 1, scope: !4907, file: !3, line: 170, type: !259)
!4911 = !DILocation(line: 170, column: 49, scope: !4907)
!4912 = !DILocalVariable(name: "tmp", scope: !4907, file: !3, line: 172, type: !259)
!4913 = !DILocation(line: 172, column: 18, scope: !4907)
!4914 = !DILocalVariable(name: "max", scope: !4907, file: !3, line: 173, type: !314)
!4915 = !DILocation(line: 173, column: 16, scope: !4907)
!4916 = !DILocalVariable(name: "n", scope: !4907, file: !3, line: 173, type: !314)
!4917 = !DILocation(line: 173, column: 21, scope: !4907)
!4918 = !DILocation(line: 175, column: 8, scope: !4907)
!4919 = !DILocation(line: 175, column: 13, scope: !4907)
!4920 = !DILocation(line: 175, column: 22, scope: !4907)
!4921 = !DILocation(line: 175, column: 6, scope: !4907)
!4922 = !DILocalVariable(name: "__mptr", scope: !4923, file: !3, line: 176, type: !258)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 176, column: 2)
!4924 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 176, column: 2)
!4925 = !DILocation(line: 176, column: 2, scope: !4923)
!4926 = !DILocation(line: 176, column: 2, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4923, file: !3, line: 176, column: 2)
!4928 = !DILocation(line: 176, column: 2, scope: !4924)
!4929 = !DILocation(line: 176, column: 2, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 176, column: 2)
!4931 = !DILocation(line: 177, column: 25, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4930, file: !3, line: 176, column: 49)
!4933 = !DILocation(line: 177, column: 7, scope: !4932)
!4934 = !DILocation(line: 177, column: 5, scope: !4932)
!4935 = !DILocation(line: 178, column: 7, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 178, column: 7)
!4937 = !DILocation(line: 178, column: 11, scope: !4936)
!4938 = !DILocation(line: 178, column: 9, scope: !4936)
!4939 = !DILocation(line: 178, column: 7, scope: !4932)
!4940 = !DILocation(line: 179, column: 10, scope: !4936)
!4941 = !DILocation(line: 179, column: 8, scope: !4936)
!4942 = !DILocation(line: 179, column: 4, scope: !4936)
!4943 = !DILocation(line: 180, column: 2, scope: !4932)
!4944 = !DILocalVariable(name: "__mptr", scope: !4945, file: !3, line: 176, type: !258)
!4945 = distinct !DILexicalBlock(scope: !4930, file: !3, line: 176, column: 2)
!4946 = !DILocation(line: 176, column: 2, scope: !4945)
!4947 = !DILocation(line: 176, column: 2, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 176, column: 2)
!4949 = distinct !{!4949, !4928, !4950}
!4950 = !DILocation(line: 180, column: 2, scope: !4924)
!4951 = !DILocation(line: 181, column: 9, scope: !4907)
!4952 = !DILocation(line: 181, column: 2, scope: !4907)
!4953 = distinct !DISubprogram(name: "pci_status_get_and_clear_errors", scope: !3, file: !3, line: 191, type: !3545, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!4954 = !DILocalVariable(name: "pdev", arg: 1, scope: !4953, file: !3, line: 191, type: !273)
!4955 = !DILocation(line: 191, column: 53, scope: !4953)
!4956 = !DILocalVariable(name: "status", scope: !4953, file: !3, line: 193, type: !979)
!4957 = !DILocation(line: 193, column: 6, scope: !4953)
!4958 = !DILocalVariable(name: "ret", scope: !4953, file: !3, line: 194, type: !304)
!4959 = !DILocation(line: 194, column: 6, scope: !4953)
!4960 = !DILocation(line: 196, column: 29, scope: !4953)
!4961 = !DILocation(line: 196, column: 8, scope: !4953)
!4962 = !DILocation(line: 196, column: 6, scope: !4953)
!4963 = !DILocation(line: 197, column: 6, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 197, column: 6)
!4965 = !DILocation(line: 197, column: 10, scope: !4964)
!4966 = !DILocation(line: 197, column: 6, scope: !4953)
!4967 = !DILocation(line: 198, column: 3, scope: !4964)
!4968 = !DILocation(line: 200, column: 9, scope: !4953)
!4969 = !DILocation(line: 201, column: 6, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 201, column: 6)
!4971 = !DILocation(line: 201, column: 6, scope: !4953)
!4972 = !DILocation(line: 202, column: 25, scope: !4970)
!4973 = !DILocation(line: 202, column: 43, scope: !4970)
!4974 = !DILocation(line: 202, column: 3, scope: !4970)
!4975 = !DILocation(line: 204, column: 9, scope: !4953)
!4976 = !DILocation(line: 204, column: 2, scope: !4953)
!4977 = !DILocation(line: 205, column: 1, scope: !4953)
!4978 = distinct !DISubprogram(name: "pci_ioremap_bar", scope: !3, file: !3, line: 209, type: !4979, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!4979 = !DISubroutineType(types: !4980)
!4980 = !{!258, !273, !304}
!4981 = !DILocalVariable(name: "pdev", arg: 1, scope: !4978, file: !3, line: 209, type: !273)
!4982 = !DILocation(line: 209, column: 47, scope: !4978)
!4983 = !DILocalVariable(name: "bar", arg: 2, scope: !4978, file: !3, line: 209, type: !304)
!4984 = !DILocation(line: 209, column: 57, scope: !4978)
!4985 = !DILocalVariable(name: "res", scope: !4978, file: !3, line: 211, type: !4166)
!4986 = !DILocation(line: 211, column: 19, scope: !4978)
!4987 = !DILocation(line: 211, column: 26, scope: !4978)
!4988 = !DILocation(line: 211, column: 32, scope: !4978)
!4989 = !DILocation(line: 211, column: 41, scope: !4978)
!4990 = !DILocation(line: 216, column: 6, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 216, column: 6)
!4992 = !DILocation(line: 216, column: 11, scope: !4991)
!4993 = !DILocation(line: 216, column: 17, scope: !4991)
!4994 = !DILocation(line: 216, column: 36, scope: !4991)
!4995 = !DILocation(line: 216, column: 41, scope: !4991)
!4996 = !DILocation(line: 216, column: 46, scope: !4991)
!4997 = !DILocation(line: 216, column: 52, scope: !4991)
!4998 = !DILocation(line: 216, column: 6, scope: !4978)
!4999 = !DILocation(line: 217, column: 3, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 216, column: 71)
!5001 = !DILocation(line: 218, column: 3, scope: !5000)
!5002 = !DILocation(line: 220, column: 17, scope: !4978)
!5003 = !DILocation(line: 220, column: 22, scope: !4978)
!5004 = !DILocation(line: 220, column: 43, scope: !4978)
!5005 = !DILocation(line: 220, column: 29, scope: !4978)
!5006 = !DILocation(line: 220, column: 9, scope: !4978)
!5007 = !DILocation(line: 220, column: 2, scope: !4978)
!5008 = !DILocation(line: 221, column: 1, scope: !4978)
!5009 = distinct !DISubprogram(name: "resource_size", scope: !4157, file: !4157, line: 210, type: !5010, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5010 = !DISubroutineType(types: !5011)
!5011 = !{!4160, !4749}
!5012 = !DILocalVariable(name: "res", arg: 1, scope: !5009, file: !4157, line: 210, type: !4749)
!5013 = !DILocation(line: 210, column: 68, scope: !5009)
!5014 = !DILocation(line: 212, column: 9, scope: !5009)
!5015 = !DILocation(line: 212, column: 14, scope: !5009)
!5016 = !DILocation(line: 212, column: 20, scope: !5009)
!5017 = !DILocation(line: 212, column: 25, scope: !5009)
!5018 = !DILocation(line: 212, column: 18, scope: !5009)
!5019 = !DILocation(line: 212, column: 31, scope: !5009)
!5020 = !DILocation(line: 212, column: 2, scope: !5009)
!5021 = distinct !DISubprogram(name: "pci_ioremap_wc_bar", scope: !3, file: !3, line: 224, type: !4979, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5022 = !DILocalVariable(name: "pdev", arg: 1, scope: !5021, file: !3, line: 224, type: !273)
!5023 = !DILocation(line: 224, column: 50, scope: !5021)
!5024 = !DILocalVariable(name: "bar", arg: 2, scope: !5021, file: !3, line: 224, type: !304)
!5025 = !DILocation(line: 224, column: 60, scope: !5021)
!5026 = !DILocation(line: 229, column: 8, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 229, column: 6)
!5028 = !DILocation(line: 229, column: 38, scope: !5027)
!5029 = !DILocation(line: 229, column: 6, scope: !5021)
!5030 = !DILocalVariable(name: "__ret_warn_on", scope: !5031, file: !3, line: 230, type: !304)
!5031 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 230, column: 3)
!5032 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 229, column: 57)
!5033 = !DILocation(line: 230, column: 3, scope: !5031)
!5034 = !DILocation(line: 230, column: 3, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 230, column: 3)
!5036 = !DILocation(line: 230, column: 3, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 230, column: 3)
!5038 = !DILocation(line: 230, column: 3, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 230, column: 3)
!5040 = !DILocation(line: 230, column: 3, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 230, column: 3)
!5042 = !{i32 -2140876844, i32 -2140876815, i32 -2140876769, i32 -2140876711, i32 -2140876657, i32 -2140876603, i32 -2140876548, i32 -2140876517}
!5043 = !DILocation(line: 230, column: 3, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 230, column: 3)
!5045 = !{i32 -2140876118, i32 -2140876111, i32 -2140876059, i32 -2140876028, i32 -2140875998}
!5046 = !DILocation(line: 230, column: 3, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 230, column: 3)
!5048 = !DILocation(line: 231, column: 3, scope: !5032)
!5049 = !DILocation(line: 233, column: 20, scope: !5021)
!5050 = !DILocation(line: 234, column: 6, scope: !5021)
!5051 = !DILocation(line: 233, column: 9, scope: !5021)
!5052 = !DILocation(line: 233, column: 2, scope: !5021)
!5053 = !DILocation(line: 235, column: 1, scope: !5021)
!5054 = distinct !DISubprogram(name: "pci_find_next_capability", scope: !3, file: !3, line: 434, type: !5055, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5055 = !DISubroutineType(types: !5056)
!5056 = !{!304, !273, !310, !304}
!5057 = !DILocalVariable(name: "dev", arg: 1, scope: !5054, file: !3, line: 434, type: !273)
!5058 = !DILocation(line: 434, column: 46, scope: !5054)
!5059 = !DILocalVariable(name: "pos", arg: 2, scope: !5054, file: !3, line: 434, type: !310)
!5060 = !DILocation(line: 434, column: 54, scope: !5054)
!5061 = !DILocalVariable(name: "cap", arg: 3, scope: !5054, file: !3, line: 434, type: !304)
!5062 = !DILocation(line: 434, column: 63, scope: !5054)
!5063 = !DILocation(line: 436, column: 29, scope: !5054)
!5064 = !DILocation(line: 436, column: 34, scope: !5054)
!5065 = !DILocation(line: 436, column: 39, scope: !5054)
!5066 = !DILocation(line: 436, column: 44, scope: !5054)
!5067 = !DILocation(line: 437, column: 8, scope: !5054)
!5068 = !DILocation(line: 437, column: 12, scope: !5054)
!5069 = !DILocation(line: 437, column: 33, scope: !5054)
!5070 = !DILocation(line: 436, column: 9, scope: !5054)
!5071 = !DILocation(line: 436, column: 2, scope: !5054)
!5072 = distinct !DISubprogram(name: "__pci_find_next_cap", scope: !3, file: !3, line: 426, type: !5073, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5073 = !DISubroutineType(types: !5074)
!5074 = !{!304, !259, !7, !310, !304}
!5075 = !DILocalVariable(name: "bus", arg: 1, scope: !5072, file: !3, line: 426, type: !259)
!5076 = !DILocation(line: 426, column: 48, scope: !5072)
!5077 = !DILocalVariable(name: "devfn", arg: 2, scope: !5072, file: !3, line: 426, type: !7)
!5078 = !DILocation(line: 426, column: 66, scope: !5072)
!5079 = !DILocalVariable(name: "pos", arg: 3, scope: !5072, file: !3, line: 427, type: !310)
!5080 = !DILocation(line: 427, column: 14, scope: !5072)
!5081 = !DILocalVariable(name: "cap", arg: 4, scope: !5072, file: !3, line: 427, type: !304)
!5082 = !DILocation(line: 427, column: 23, scope: !5072)
!5083 = !DILocalVariable(name: "ttl", scope: !5072, file: !3, line: 429, type: !304)
!5084 = !DILocation(line: 429, column: 6, scope: !5072)
!5085 = !DILocation(line: 431, column: 33, scope: !5072)
!5086 = !DILocation(line: 431, column: 38, scope: !5072)
!5087 = !DILocation(line: 431, column: 45, scope: !5072)
!5088 = !DILocation(line: 431, column: 50, scope: !5072)
!5089 = !DILocation(line: 431, column: 9, scope: !5072)
!5090 = !DILocation(line: 431, column: 2, scope: !5072)
!5091 = distinct !DISubprogram(name: "pci_find_capability", scope: !3, file: !3, line: 480, type: !3550, scopeLine: 481, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5092 = !DILocalVariable(name: "dev", arg: 1, scope: !5091, file: !3, line: 480, type: !273)
!5093 = !DILocation(line: 480, column: 41, scope: !5091)
!5094 = !DILocalVariable(name: "cap", arg: 2, scope: !5091, file: !3, line: 480, type: !304)
!5095 = !DILocation(line: 480, column: 50, scope: !5091)
!5096 = !DILocalVariable(name: "pos", scope: !5091, file: !3, line: 482, type: !304)
!5097 = !DILocation(line: 482, column: 6, scope: !5091)
!5098 = !DILocation(line: 484, column: 33, scope: !5091)
!5099 = !DILocation(line: 484, column: 38, scope: !5091)
!5100 = !DILocation(line: 484, column: 43, scope: !5091)
!5101 = !DILocation(line: 484, column: 48, scope: !5091)
!5102 = !DILocation(line: 484, column: 55, scope: !5091)
!5103 = !DILocation(line: 484, column: 60, scope: !5091)
!5104 = !DILocation(line: 484, column: 8, scope: !5091)
!5105 = !DILocation(line: 484, column: 6, scope: !5091)
!5106 = !DILocation(line: 485, column: 6, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 485, column: 6)
!5108 = !DILocation(line: 485, column: 6, scope: !5091)
!5109 = !DILocation(line: 486, column: 29, scope: !5107)
!5110 = !DILocation(line: 486, column: 34, scope: !5107)
!5111 = !DILocation(line: 486, column: 39, scope: !5107)
!5112 = !DILocation(line: 486, column: 44, scope: !5107)
!5113 = !DILocation(line: 486, column: 51, scope: !5107)
!5114 = !DILocation(line: 486, column: 56, scope: !5107)
!5115 = !DILocation(line: 486, column: 9, scope: !5107)
!5116 = !DILocation(line: 486, column: 7, scope: !5107)
!5117 = !DILocation(line: 486, column: 3, scope: !5107)
!5118 = !DILocation(line: 488, column: 9, scope: !5091)
!5119 = !DILocation(line: 488, column: 2, scope: !5091)
!5120 = distinct !DISubprogram(name: "__pci_bus_find_cap_start", scope: !3, file: !3, line: 441, type: !5121, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5121 = !DISubroutineType(types: !5122)
!5122 = !{!304, !259, !7, !310}
!5123 = !DILocalVariable(name: "bus", arg: 1, scope: !5120, file: !3, line: 441, type: !259)
!5124 = !DILocation(line: 441, column: 53, scope: !5120)
!5125 = !DILocalVariable(name: "devfn", arg: 2, scope: !5120, file: !3, line: 442, type: !7)
!5126 = !DILocation(line: 442, column: 22, scope: !5120)
!5127 = !DILocalVariable(name: "hdr_type", arg: 3, scope: !5120, file: !3, line: 442, type: !310)
!5128 = !DILocation(line: 442, column: 32, scope: !5120)
!5129 = !DILocalVariable(name: "status", scope: !5120, file: !3, line: 444, type: !979)
!5130 = !DILocation(line: 444, column: 6, scope: !5120)
!5131 = !DILocation(line: 446, column: 27, scope: !5120)
!5132 = !DILocation(line: 446, column: 32, scope: !5120)
!5133 = !DILocation(line: 446, column: 2, scope: !5120)
!5134 = !DILocation(line: 447, column: 8, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 447, column: 6)
!5136 = !DILocation(line: 447, column: 15, scope: !5135)
!5137 = !DILocation(line: 447, column: 6, scope: !5120)
!5138 = !DILocation(line: 448, column: 3, scope: !5135)
!5139 = !DILocation(line: 450, column: 10, scope: !5120)
!5140 = !DILocation(line: 450, column: 2, scope: !5120)
!5141 = !DILocation(line: 453, column: 3, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 450, column: 20)
!5143 = !DILocation(line: 455, column: 3, scope: !5142)
!5144 = !DILocation(line: 458, column: 2, scope: !5120)
!5145 = !DILocation(line: 459, column: 1, scope: !5120)
!5146 = distinct !DISubprogram(name: "pci_bus_find_capability", scope: !3, file: !3, line: 505, type: !5147, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5147 = !DISubroutineType(types: !5148)
!5148 = !{!304, !259, !7, !304}
!5149 = !DILocalVariable(name: "bus", arg: 1, scope: !5146, file: !3, line: 505, type: !259)
!5150 = !DILocation(line: 505, column: 45, scope: !5146)
!5151 = !DILocalVariable(name: "devfn", arg: 2, scope: !5146, file: !3, line: 505, type: !7)
!5152 = !DILocation(line: 505, column: 63, scope: !5146)
!5153 = !DILocalVariable(name: "cap", arg: 3, scope: !5146, file: !3, line: 505, type: !304)
!5154 = !DILocation(line: 505, column: 74, scope: !5146)
!5155 = !DILocalVariable(name: "pos", scope: !5146, file: !3, line: 507, type: !304)
!5156 = !DILocation(line: 507, column: 6, scope: !5146)
!5157 = !DILocalVariable(name: "hdr_type", scope: !5146, file: !3, line: 508, type: !310)
!5158 = !DILocation(line: 508, column: 5, scope: !5146)
!5159 = !DILocation(line: 510, column: 27, scope: !5146)
!5160 = !DILocation(line: 510, column: 32, scope: !5146)
!5161 = !DILocation(line: 510, column: 2, scope: !5146)
!5162 = !DILocation(line: 512, column: 33, scope: !5146)
!5163 = !DILocation(line: 512, column: 38, scope: !5146)
!5164 = !DILocation(line: 512, column: 45, scope: !5146)
!5165 = !DILocation(line: 512, column: 54, scope: !5146)
!5166 = !DILocation(line: 512, column: 8, scope: !5146)
!5167 = !DILocation(line: 512, column: 6, scope: !5146)
!5168 = !DILocation(line: 513, column: 6, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5146, file: !3, line: 513, column: 6)
!5170 = !DILocation(line: 513, column: 6, scope: !5146)
!5171 = !DILocation(line: 514, column: 29, scope: !5169)
!5172 = !DILocation(line: 514, column: 34, scope: !5169)
!5173 = !DILocation(line: 514, column: 41, scope: !5169)
!5174 = !DILocation(line: 514, column: 46, scope: !5169)
!5175 = !DILocation(line: 514, column: 9, scope: !5169)
!5176 = !DILocation(line: 514, column: 7, scope: !5169)
!5177 = !DILocation(line: 514, column: 3, scope: !5169)
!5178 = !DILocation(line: 516, column: 9, scope: !5146)
!5179 = !DILocation(line: 516, column: 2, scope: !5146)
!5180 = distinct !DISubprogram(name: "pci_find_next_ext_capability", scope: !3, file: !3, line: 531, type: !5181, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{!304, !273, !304, !304}
!5183 = !DILocalVariable(name: "dev", arg: 1, scope: !5180, file: !3, line: 531, type: !273)
!5184 = !DILocation(line: 531, column: 50, scope: !5180)
!5185 = !DILocalVariable(name: "start", arg: 2, scope: !5180, file: !3, line: 531, type: !304)
!5186 = !DILocation(line: 531, column: 59, scope: !5180)
!5187 = !DILocalVariable(name: "cap", arg: 3, scope: !5180, file: !3, line: 531, type: !304)
!5188 = !DILocation(line: 531, column: 70, scope: !5180)
!5189 = !DILocalVariable(name: "header", scope: !5180, file: !3, line: 533, type: !319)
!5190 = !DILocation(line: 533, column: 6, scope: !5180)
!5191 = !DILocalVariable(name: "ttl", scope: !5180, file: !3, line: 534, type: !304)
!5192 = !DILocation(line: 534, column: 6, scope: !5180)
!5193 = !DILocalVariable(name: "pos", scope: !5180, file: !3, line: 535, type: !304)
!5194 = !DILocation(line: 535, column: 6, scope: !5180)
!5195 = !DILocation(line: 538, column: 6, scope: !5180)
!5196 = !DILocation(line: 540, column: 6, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 540, column: 6)
!5198 = !DILocation(line: 540, column: 11, scope: !5197)
!5199 = !DILocation(line: 540, column: 20, scope: !5197)
!5200 = !DILocation(line: 540, column: 6, scope: !5180)
!5201 = !DILocation(line: 541, column: 3, scope: !5197)
!5202 = !DILocation(line: 543, column: 6, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 543, column: 6)
!5204 = !DILocation(line: 543, column: 6, scope: !5180)
!5205 = !DILocation(line: 544, column: 9, scope: !5203)
!5206 = !DILocation(line: 544, column: 7, scope: !5203)
!5207 = !DILocation(line: 544, column: 3, scope: !5203)
!5208 = !DILocation(line: 546, column: 28, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 546, column: 6)
!5210 = !DILocation(line: 546, column: 33, scope: !5209)
!5211 = !DILocation(line: 546, column: 6, scope: !5209)
!5212 = !DILocation(line: 546, column: 47, scope: !5209)
!5213 = !DILocation(line: 546, column: 6, scope: !5180)
!5214 = !DILocation(line: 547, column: 3, scope: !5209)
!5215 = !DILocation(line: 553, column: 6, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 553, column: 6)
!5217 = !DILocation(line: 553, column: 13, scope: !5216)
!5218 = !DILocation(line: 553, column: 6, scope: !5180)
!5219 = !DILocation(line: 554, column: 3, scope: !5216)
!5220 = !DILocation(line: 556, column: 2, scope: !5180)
!5221 = !DILocation(line: 556, column: 12, scope: !5180)
!5222 = !DILocation(line: 556, column: 15, scope: !5180)
!5223 = !DILocation(line: 557, column: 7, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 557, column: 7)
!5225 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 556, column: 20)
!5226 = !DILocation(line: 557, column: 33, scope: !5224)
!5227 = !DILocation(line: 557, column: 30, scope: !5224)
!5228 = !DILocation(line: 557, column: 37, scope: !5224)
!5229 = !DILocation(line: 557, column: 40, scope: !5224)
!5230 = !DILocation(line: 557, column: 47, scope: !5224)
!5231 = !DILocation(line: 557, column: 44, scope: !5224)
!5232 = !DILocation(line: 557, column: 7, scope: !5225)
!5233 = !DILocation(line: 558, column: 11, scope: !5224)
!5234 = !DILocation(line: 558, column: 4, scope: !5224)
!5235 = !DILocation(line: 560, column: 9, scope: !5225)
!5236 = !DILocation(line: 560, column: 7, scope: !5225)
!5237 = !DILocation(line: 561, column: 7, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 561, column: 7)
!5239 = !DILocation(line: 561, column: 11, scope: !5238)
!5240 = !DILocation(line: 561, column: 7, scope: !5225)
!5241 = !DILocation(line: 562, column: 4, scope: !5238)
!5242 = !DILocation(line: 564, column: 29, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 564, column: 7)
!5244 = !DILocation(line: 564, column: 34, scope: !5243)
!5245 = !DILocation(line: 564, column: 7, scope: !5243)
!5246 = !DILocation(line: 564, column: 48, scope: !5243)
!5247 = !DILocation(line: 564, column: 7, scope: !5225)
!5248 = !DILocation(line: 565, column: 4, scope: !5243)
!5249 = distinct !{!5249, !5220, !5250}
!5250 = !DILocation(line: 566, column: 2, scope: !5180)
!5251 = !DILocation(line: 568, column: 2, scope: !5180)
!5252 = !DILocation(line: 569, column: 1, scope: !5180)
!5253 = distinct !DISubprogram(name: "pci_find_ext_capability", scope: !3, file: !3, line: 586, type: !3550, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5254 = !DILocalVariable(name: "dev", arg: 1, scope: !5253, file: !3, line: 586, type: !273)
!5255 = !DILocation(line: 586, column: 45, scope: !5253)
!5256 = !DILocalVariable(name: "cap", arg: 2, scope: !5253, file: !3, line: 586, type: !304)
!5257 = !DILocation(line: 586, column: 54, scope: !5253)
!5258 = !DILocation(line: 588, column: 38, scope: !5253)
!5259 = !DILocation(line: 588, column: 46, scope: !5253)
!5260 = !DILocation(line: 588, column: 9, scope: !5253)
!5261 = !DILocation(line: 588, column: 2, scope: !5253)
!5262 = distinct !DISubprogram(name: "pci_get_dsn", scope: !3, file: !3, line: 601, type: !5263, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5263 = !DISubroutineType(types: !5264)
!5264 = !{!541, !273}
!5265 = !DILocalVariable(name: "dev", arg: 1, scope: !5262, file: !3, line: 601, type: !273)
!5266 = !DILocation(line: 601, column: 33, scope: !5262)
!5267 = !DILocalVariable(name: "dword", scope: !5262, file: !3, line: 603, type: !319)
!5268 = !DILocation(line: 603, column: 6, scope: !5262)
!5269 = !DILocalVariable(name: "dsn", scope: !5262, file: !3, line: 604, type: !541)
!5270 = !DILocation(line: 604, column: 6, scope: !5262)
!5271 = !DILocalVariable(name: "pos", scope: !5262, file: !3, line: 605, type: !304)
!5272 = !DILocation(line: 605, column: 6, scope: !5262)
!5273 = !DILocation(line: 607, column: 32, scope: !5262)
!5274 = !DILocation(line: 607, column: 8, scope: !5262)
!5275 = !DILocation(line: 607, column: 6, scope: !5262)
!5276 = !DILocation(line: 608, column: 7, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 608, column: 6)
!5278 = !DILocation(line: 608, column: 6, scope: !5262)
!5279 = !DILocation(line: 609, column: 3, scope: !5277)
!5280 = !DILocation(line: 616, column: 6, scope: !5262)
!5281 = !DILocation(line: 617, column: 24, scope: !5262)
!5282 = !DILocation(line: 617, column: 29, scope: !5262)
!5283 = !DILocation(line: 617, column: 2, scope: !5262)
!5284 = !DILocation(line: 618, column: 13, scope: !5262)
!5285 = !DILocation(line: 618, column: 8, scope: !5262)
!5286 = !DILocation(line: 618, column: 6, scope: !5262)
!5287 = !DILocation(line: 619, column: 24, scope: !5262)
!5288 = !DILocation(line: 619, column: 29, scope: !5262)
!5289 = !DILocation(line: 619, column: 33, scope: !5262)
!5290 = !DILocation(line: 619, column: 2, scope: !5262)
!5291 = !DILocation(line: 620, column: 15, scope: !5262)
!5292 = !DILocation(line: 620, column: 10, scope: !5262)
!5293 = !DILocation(line: 620, column: 22, scope: !5262)
!5294 = !DILocation(line: 620, column: 6, scope: !5262)
!5295 = !DILocation(line: 622, column: 9, scope: !5262)
!5296 = !DILocation(line: 622, column: 2, scope: !5262)
!5297 = !DILocation(line: 623, column: 1, scope: !5262)
!5298 = distinct !DISubprogram(name: "pci_find_next_ht_capability", scope: !3, file: !3, line: 666, type: !5181, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5299 = !DILocalVariable(name: "dev", arg: 1, scope: !5298, file: !3, line: 666, type: !273)
!5300 = !DILocation(line: 666, column: 49, scope: !5298)
!5301 = !DILocalVariable(name: "pos", arg: 2, scope: !5298, file: !3, line: 666, type: !304)
!5302 = !DILocation(line: 666, column: 58, scope: !5298)
!5303 = !DILocalVariable(name: "ht_cap", arg: 3, scope: !5298, file: !3, line: 666, type: !304)
!5304 = !DILocation(line: 666, column: 67, scope: !5298)
!5305 = !DILocation(line: 668, column: 32, scope: !5298)
!5306 = !DILocation(line: 668, column: 37, scope: !5298)
!5307 = !DILocation(line: 668, column: 41, scope: !5298)
!5308 = !DILocation(line: 668, column: 62, scope: !5298)
!5309 = !DILocation(line: 668, column: 9, scope: !5298)
!5310 = !DILocation(line: 668, column: 2, scope: !5298)
!5311 = distinct !DISubprogram(name: "__pci_find_next_ht_cap", scope: !3, file: !3, line: 626, type: !5181, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5312 = !DILocalVariable(name: "dev", arg: 1, scope: !5311, file: !3, line: 626, type: !273)
!5313 = !DILocation(line: 626, column: 51, scope: !5311)
!5314 = !DILocalVariable(name: "pos", arg: 2, scope: !5311, file: !3, line: 626, type: !304)
!5315 = !DILocation(line: 626, column: 60, scope: !5311)
!5316 = !DILocalVariable(name: "ht_cap", arg: 3, scope: !5311, file: !3, line: 626, type: !304)
!5317 = !DILocation(line: 626, column: 69, scope: !5311)
!5318 = !DILocalVariable(name: "rc", scope: !5311, file: !3, line: 628, type: !304)
!5319 = !DILocation(line: 628, column: 6, scope: !5311)
!5320 = !DILocalVariable(name: "ttl", scope: !5311, file: !3, line: 628, type: !304)
!5321 = !DILocation(line: 628, column: 10, scope: !5311)
!5322 = !DILocalVariable(name: "cap", scope: !5311, file: !3, line: 629, type: !310)
!5323 = !DILocation(line: 629, column: 5, scope: !5311)
!5324 = !DILocalVariable(name: "mask", scope: !5311, file: !3, line: 629, type: !310)
!5325 = !DILocation(line: 629, column: 10, scope: !5311)
!5326 = !DILocation(line: 631, column: 6, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 631, column: 6)
!5328 = !DILocation(line: 631, column: 13, scope: !5327)
!5329 = !DILocation(line: 631, column: 33, scope: !5327)
!5330 = !DILocation(line: 631, column: 36, scope: !5327)
!5331 = !DILocation(line: 631, column: 43, scope: !5327)
!5332 = !DILocation(line: 631, column: 6, scope: !5311)
!5333 = !DILocation(line: 632, column: 8, scope: !5327)
!5334 = !DILocation(line: 632, column: 3, scope: !5327)
!5335 = !DILocation(line: 634, column: 8, scope: !5327)
!5336 = !DILocation(line: 636, column: 32, scope: !5311)
!5337 = !DILocation(line: 636, column: 37, scope: !5311)
!5338 = !DILocation(line: 636, column: 42, scope: !5311)
!5339 = !DILocation(line: 636, column: 47, scope: !5311)
!5340 = !DILocation(line: 636, column: 54, scope: !5311)
!5341 = !DILocation(line: 636, column: 8, scope: !5311)
!5342 = !DILocation(line: 636, column: 6, scope: !5311)
!5343 = !DILocation(line: 638, column: 2, scope: !5311)
!5344 = !DILocation(line: 638, column: 9, scope: !5311)
!5345 = !DILocation(line: 639, column: 29, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 638, column: 14)
!5347 = !DILocation(line: 639, column: 34, scope: !5346)
!5348 = !DILocation(line: 639, column: 38, scope: !5346)
!5349 = !DILocation(line: 639, column: 8, scope: !5346)
!5350 = !DILocation(line: 639, column: 6, scope: !5346)
!5351 = !DILocation(line: 640, column: 7, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 640, column: 7)
!5353 = !DILocation(line: 640, column: 10, scope: !5352)
!5354 = !DILocation(line: 640, column: 7, scope: !5346)
!5355 = !DILocation(line: 641, column: 4, scope: !5352)
!5356 = !DILocation(line: 643, column: 8, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 643, column: 7)
!5358 = !DILocation(line: 643, column: 14, scope: !5357)
!5359 = !DILocation(line: 643, column: 12, scope: !5357)
!5360 = !DILocation(line: 643, column: 23, scope: !5357)
!5361 = !DILocation(line: 643, column: 20, scope: !5357)
!5362 = !DILocation(line: 643, column: 7, scope: !5346)
!5363 = !DILocation(line: 644, column: 11, scope: !5357)
!5364 = !DILocation(line: 644, column: 4, scope: !5357)
!5365 = !DILocation(line: 646, column: 33, scope: !5346)
!5366 = !DILocation(line: 646, column: 38, scope: !5346)
!5367 = !DILocation(line: 646, column: 43, scope: !5346)
!5368 = !DILocation(line: 646, column: 48, scope: !5346)
!5369 = !DILocation(line: 647, column: 12, scope: !5346)
!5370 = !DILocation(line: 647, column: 16, scope: !5346)
!5371 = !DILocation(line: 646, column: 9, scope: !5346)
!5372 = !DILocation(line: 646, column: 7, scope: !5346)
!5373 = distinct !{!5373, !5343, !5374}
!5374 = !DILocation(line: 649, column: 2, scope: !5311)
!5375 = !DILocation(line: 651, column: 2, scope: !5311)
!5376 = !DILocation(line: 652, column: 1, scope: !5311)
!5377 = distinct !DISubprogram(name: "pci_find_ht_capability", scope: !3, file: !3, line: 683, type: !3550, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5378 = !DILocalVariable(name: "dev", arg: 1, scope: !5377, file: !3, line: 683, type: !273)
!5379 = !DILocation(line: 683, column: 44, scope: !5377)
!5380 = !DILocalVariable(name: "ht_cap", arg: 2, scope: !5377, file: !3, line: 683, type: !304)
!5381 = !DILocation(line: 683, column: 53, scope: !5377)
!5382 = !DILocalVariable(name: "pos", scope: !5377, file: !3, line: 685, type: !304)
!5383 = !DILocation(line: 685, column: 6, scope: !5377)
!5384 = !DILocation(line: 687, column: 33, scope: !5377)
!5385 = !DILocation(line: 687, column: 38, scope: !5377)
!5386 = !DILocation(line: 687, column: 43, scope: !5377)
!5387 = !DILocation(line: 687, column: 48, scope: !5377)
!5388 = !DILocation(line: 687, column: 55, scope: !5377)
!5389 = !DILocation(line: 687, column: 60, scope: !5377)
!5390 = !DILocation(line: 687, column: 8, scope: !5377)
!5391 = !DILocation(line: 687, column: 6, scope: !5377)
!5392 = !DILocation(line: 688, column: 6, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 688, column: 6)
!5394 = !DILocation(line: 688, column: 6, scope: !5377)
!5395 = !DILocation(line: 689, column: 32, scope: !5393)
!5396 = !DILocation(line: 689, column: 37, scope: !5393)
!5397 = !DILocation(line: 689, column: 42, scope: !5393)
!5398 = !DILocation(line: 689, column: 9, scope: !5393)
!5399 = !DILocation(line: 689, column: 7, scope: !5393)
!5400 = !DILocation(line: 689, column: 3, scope: !5393)
!5401 = !DILocation(line: 691, column: 9, scope: !5377)
!5402 = !DILocation(line: 691, column: 2, scope: !5377)
!5403 = distinct !DISubprogram(name: "pci_find_parent_resource", scope: !3, file: !3, line: 704, type: !5404, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5404 = !DISubroutineType(types: !5405)
!5405 = !{!4166, !4701, !4166}
!5406 = !DILocalVariable(name: "dev", arg: 1, scope: !5403, file: !3, line: 704, type: !4701)
!5407 = !DILocation(line: 704, column: 65, scope: !5403)
!5408 = !DILocalVariable(name: "res", arg: 2, scope: !5403, file: !3, line: 705, type: !4166)
!5409 = !DILocation(line: 705, column: 25, scope: !5403)
!5410 = !DILocalVariable(name: "bus", scope: !5403, file: !3, line: 707, type: !5411)
!5411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5412, size: 64)
!5412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !260)
!5413 = !DILocation(line: 707, column: 24, scope: !5403)
!5414 = !DILocation(line: 707, column: 30, scope: !5403)
!5415 = !DILocation(line: 707, column: 35, scope: !5403)
!5416 = !DILocalVariable(name: "r", scope: !5403, file: !3, line: 708, type: !4166)
!5417 = !DILocation(line: 708, column: 19, scope: !5403)
!5418 = !DILocalVariable(name: "i", scope: !5403, file: !3, line: 709, type: !304)
!5419 = !DILocation(line: 709, column: 6, scope: !5403)
!5420 = !DILocation(line: 711, column: 2, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 711, column: 2)
!5422 = !DILocation(line: 711, column: 2, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 711, column: 2)
!5424 = !DILocation(line: 712, column: 8, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 712, column: 7)
!5426 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 711, column: 39)
!5427 = !DILocation(line: 712, column: 7, scope: !5426)
!5428 = !DILocation(line: 713, column: 4, scope: !5425)
!5429 = !DILocation(line: 714, column: 25, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 714, column: 7)
!5431 = !DILocation(line: 714, column: 28, scope: !5430)
!5432 = !DILocation(line: 714, column: 7, scope: !5430)
!5433 = !DILocation(line: 714, column: 7, scope: !5426)
!5434 = !DILocation(line: 720, column: 8, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 720, column: 8)
!5436 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 714, column: 34)
!5437 = !DILocation(line: 720, column: 11, scope: !5435)
!5438 = !DILocation(line: 720, column: 17, scope: !5435)
!5439 = !DILocation(line: 720, column: 39, scope: !5435)
!5440 = !DILocation(line: 721, column: 10, scope: !5435)
!5441 = !DILocation(line: 721, column: 15, scope: !5435)
!5442 = !DILocation(line: 721, column: 21, scope: !5435)
!5443 = !DILocation(line: 720, column: 8, scope: !5436)
!5444 = !DILocation(line: 722, column: 5, scope: !5435)
!5445 = !DILocation(line: 732, column: 11, scope: !5436)
!5446 = !DILocation(line: 732, column: 4, scope: !5436)
!5447 = !DILocation(line: 734, column: 2, scope: !5426)
!5448 = distinct !{!5448, !5420, !5449}
!5449 = !DILocation(line: 734, column: 2, scope: !5421)
!5450 = !DILocation(line: 735, column: 2, scope: !5403)
!5451 = !DILocation(line: 736, column: 1, scope: !5403)
!5452 = distinct !DISubprogram(name: "resource_contains", scope: !4157, file: !4157, line: 223, type: !5453, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5453 = !DISubroutineType(types: !5454)
!5454 = !{!609, !4166, !4166}
!5455 = !DILocalVariable(name: "r1", arg: 1, scope: !5452, file: !4157, line: 223, type: !4166)
!5456 = !DILocation(line: 223, column: 55, scope: !5452)
!5457 = !DILocalVariable(name: "r2", arg: 2, scope: !5452, file: !4157, line: 223, type: !4166)
!5458 = !DILocation(line: 223, column: 76, scope: !5452)
!5459 = !DILocation(line: 225, column: 20, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5452, file: !4157, line: 225, column: 6)
!5461 = !DILocation(line: 225, column: 6, scope: !5460)
!5462 = !DILocation(line: 225, column: 41, scope: !5460)
!5463 = !DILocation(line: 225, column: 27, scope: !5460)
!5464 = !DILocation(line: 225, column: 24, scope: !5460)
!5465 = !DILocation(line: 225, column: 6, scope: !5452)
!5466 = !DILocation(line: 226, column: 3, scope: !5460)
!5467 = !DILocation(line: 227, column: 6, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5452, file: !4157, line: 227, column: 6)
!5469 = !DILocation(line: 227, column: 10, scope: !5468)
!5470 = !DILocation(line: 227, column: 16, scope: !5468)
!5471 = !DILocation(line: 227, column: 35, scope: !5468)
!5472 = !DILocation(line: 227, column: 38, scope: !5468)
!5473 = !DILocation(line: 227, column: 42, scope: !5468)
!5474 = !DILocation(line: 227, column: 48, scope: !5468)
!5475 = !DILocation(line: 227, column: 6, scope: !5452)
!5476 = !DILocation(line: 228, column: 3, scope: !5468)
!5477 = !DILocation(line: 229, column: 9, scope: !5452)
!5478 = !DILocation(line: 229, column: 13, scope: !5452)
!5479 = !DILocation(line: 229, column: 22, scope: !5452)
!5480 = !DILocation(line: 229, column: 26, scope: !5452)
!5481 = !DILocation(line: 229, column: 19, scope: !5452)
!5482 = !DILocation(line: 229, column: 32, scope: !5452)
!5483 = !DILocation(line: 229, column: 35, scope: !5452)
!5484 = !DILocation(line: 229, column: 39, scope: !5452)
!5485 = !DILocation(line: 229, column: 46, scope: !5452)
!5486 = !DILocation(line: 229, column: 50, scope: !5452)
!5487 = !DILocation(line: 229, column: 43, scope: !5452)
!5488 = !DILocation(line: 0, scope: !5452)
!5489 = !DILocation(line: 229, column: 2, scope: !5452)
!5490 = !DILocation(line: 230, column: 1, scope: !5452)
!5491 = distinct !DISubprogram(name: "pci_find_resource", scope: !3, file: !3, line: 748, type: !5492, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5492 = !DISubroutineType(types: !5493)
!5493 = !{!4166, !273, !4166}
!5494 = !DILocalVariable(name: "dev", arg: 1, scope: !5491, file: !3, line: 748, type: !273)
!5495 = !DILocation(line: 748, column: 52, scope: !5491)
!5496 = !DILocalVariable(name: "res", arg: 2, scope: !5491, file: !3, line: 748, type: !4166)
!5497 = !DILocation(line: 748, column: 74, scope: !5491)
!5498 = !DILocalVariable(name: "i", scope: !5491, file: !3, line: 750, type: !304)
!5499 = !DILocation(line: 750, column: 6, scope: !5491)
!5500 = !DILocation(line: 752, column: 9, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 752, column: 2)
!5502 = !DILocation(line: 752, column: 7, scope: !5501)
!5503 = !DILocation(line: 752, column: 14, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5501, file: !3, line: 752, column: 2)
!5505 = !DILocation(line: 752, column: 16, scope: !5504)
!5506 = !DILocation(line: 752, column: 2, scope: !5501)
!5507 = !DILocalVariable(name: "r", scope: !5508, file: !3, line: 753, type: !4166)
!5508 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 752, column: 41)
!5509 = !DILocation(line: 753, column: 20, scope: !5508)
!5510 = !DILocation(line: 753, column: 25, scope: !5508)
!5511 = !DILocation(line: 753, column: 30, scope: !5508)
!5512 = !DILocation(line: 753, column: 39, scope: !5508)
!5513 = !DILocation(line: 755, column: 7, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5508, file: !3, line: 755, column: 7)
!5515 = !DILocation(line: 755, column: 10, scope: !5514)
!5516 = !DILocation(line: 755, column: 16, scope: !5514)
!5517 = !DILocation(line: 755, column: 37, scope: !5514)
!5518 = !DILocation(line: 755, column: 40, scope: !5514)
!5519 = !DILocation(line: 755, column: 19, scope: !5514)
!5520 = !DILocation(line: 755, column: 7, scope: !5508)
!5521 = !DILocation(line: 756, column: 11, scope: !5514)
!5522 = !DILocation(line: 756, column: 4, scope: !5514)
!5523 = !DILocation(line: 757, column: 2, scope: !5508)
!5524 = !DILocation(line: 752, column: 37, scope: !5504)
!5525 = !DILocation(line: 752, column: 2, scope: !5504)
!5526 = distinct !{!5526, !5506, !5527}
!5527 = !DILocation(line: 757, column: 2, scope: !5501)
!5528 = !DILocation(line: 759, column: 2, scope: !5491)
!5529 = !DILocation(line: 760, column: 1, scope: !5491)
!5530 = distinct !DISubprogram(name: "pci_wait_for_pending", scope: !3, file: !3, line: 771, type: !5531, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5531 = !DISubroutineType(types: !5532)
!5532 = !{!304, !273, !304, !979}
!5533 = !DILocalVariable(name: "dev", arg: 1, scope: !5530, file: !3, line: 771, type: !273)
!5534 = !DILocation(line: 771, column: 42, scope: !5530)
!5535 = !DILocalVariable(name: "pos", arg: 2, scope: !5530, file: !3, line: 771, type: !304)
!5536 = !DILocation(line: 771, column: 51, scope: !5530)
!5537 = !DILocalVariable(name: "mask", arg: 3, scope: !5530, file: !3, line: 771, type: !979)
!5538 = !DILocation(line: 771, column: 60, scope: !5530)
!5539 = !DILocalVariable(name: "i", scope: !5530, file: !3, line: 773, type: !304)
!5540 = !DILocation(line: 773, column: 6, scope: !5530)
!5541 = !DILocation(line: 776, column: 9, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 776, column: 2)
!5543 = !DILocation(line: 776, column: 7, scope: !5542)
!5544 = !DILocation(line: 776, column: 14, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5542, file: !3, line: 776, column: 2)
!5546 = !DILocation(line: 776, column: 16, scope: !5545)
!5547 = !DILocation(line: 776, column: 2, scope: !5542)
!5548 = !DILocalVariable(name: "status", scope: !5549, file: !3, line: 777, type: !979)
!5549 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 776, column: 26)
!5550 = !DILocation(line: 777, column: 7, scope: !5549)
!5551 = !DILocation(line: 778, column: 7, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 778, column: 7)
!5553 = !DILocation(line: 778, column: 7, scope: !5549)
!5554 = !DILocation(line: 779, column: 18, scope: !5552)
!5555 = !DILocation(line: 779, column: 20, scope: !5552)
!5556 = !DILocation(line: 779, column: 14, scope: !5552)
!5557 = !DILocation(line: 779, column: 26, scope: !5552)
!5558 = !DILocation(line: 779, column: 4, scope: !5552)
!5559 = !DILocation(line: 781, column: 24, scope: !5549)
!5560 = !DILocation(line: 781, column: 29, scope: !5549)
!5561 = !DILocation(line: 781, column: 3, scope: !5549)
!5562 = !DILocation(line: 782, column: 9, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 782, column: 7)
!5564 = !DILocation(line: 782, column: 18, scope: !5563)
!5565 = !DILocation(line: 782, column: 16, scope: !5563)
!5566 = !DILocation(line: 782, column: 7, scope: !5549)
!5567 = !DILocation(line: 783, column: 4, scope: !5563)
!5568 = !DILocation(line: 784, column: 2, scope: !5549)
!5569 = !DILocation(line: 776, column: 22, scope: !5545)
!5570 = !DILocation(line: 776, column: 2, scope: !5545)
!5571 = distinct !{!5571, !5547, !5572}
!5572 = !DILocation(line: 784, column: 2, scope: !5542)
!5573 = !DILocation(line: 786, column: 2, scope: !5530)
!5574 = !DILocation(line: 787, column: 1, scope: !5530)
!5575 = distinct !DISubprogram(name: "pci_request_acs", scope: !3, file: !3, line: 794, type: !1997, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5576 = !DILocation(line: 796, column: 17, scope: !5575)
!5577 = !DILocation(line: 797, column: 1, scope: !5575)
!5578 = distinct !DISubprogram(name: "pci_set_platform_pm", scope: !3, file: !3, line: 937, type: !5579, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5579 = !DISubroutineType(types: !5580)
!5580 = !{!304, !4779}
!5581 = !DILocalVariable(name: "ops", arg: 1, scope: !5578, file: !3, line: 937, type: !4779)
!5582 = !DILocation(line: 937, column: 59, scope: !5578)
!5583 = !DILocation(line: 939, column: 7, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 939, column: 6)
!5585 = !DILocation(line: 939, column: 12, scope: !5584)
!5586 = !DILocation(line: 939, column: 26, scope: !5584)
!5587 = !DILocation(line: 939, column: 30, scope: !5584)
!5588 = !DILocation(line: 939, column: 35, scope: !5584)
!5589 = !DILocation(line: 939, column: 46, scope: !5584)
!5590 = !DILocation(line: 939, column: 50, scope: !5584)
!5591 = !DILocation(line: 939, column: 55, scope: !5584)
!5592 = !DILocation(line: 939, column: 65, scope: !5584)
!5593 = !DILocation(line: 940, column: 7, scope: !5584)
!5594 = !DILocation(line: 940, column: 12, scope: !5584)
!5595 = !DILocation(line: 940, column: 26, scope: !5584)
!5596 = !DILocation(line: 940, column: 30, scope: !5584)
!5597 = !DILocation(line: 940, column: 35, scope: !5584)
!5598 = !DILocation(line: 940, column: 46, scope: !5584)
!5599 = !DILocation(line: 940, column: 50, scope: !5584)
!5600 = !DILocation(line: 940, column: 55, scope: !5584)
!5601 = !DILocation(line: 939, column: 6, scope: !5578)
!5602 = !DILocation(line: 941, column: 3, scope: !5584)
!5603 = !DILocation(line: 942, column: 20, scope: !5578)
!5604 = !DILocation(line: 942, column: 18, scope: !5578)
!5605 = !DILocation(line: 943, column: 2, scope: !5578)
!5606 = !DILocation(line: 944, column: 1, scope: !5578)
!5607 = distinct !DISubprogram(name: "pci_update_current_state", scope: !3, file: !3, line: 1124, type: !5608, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5608 = !DISubroutineType(types: !5609)
!5609 = !{null, !273, !4124}
!5610 = !DILocalVariable(name: "dev", arg: 1, scope: !5607, file: !3, line: 1124, type: !273)
!5611 = !DILocation(line: 1124, column: 47, scope: !5607)
!5612 = !DILocalVariable(name: "state", arg: 2, scope: !5607, file: !3, line: 1124, type: !4124)
!5613 = !DILocation(line: 1124, column: 64, scope: !5607)
!5614 = !DILocation(line: 1126, column: 35, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 1126, column: 6)
!5616 = !DILocation(line: 1126, column: 6, scope: !5615)
!5617 = !DILocation(line: 1126, column: 40, scope: !5615)
!5618 = !DILocation(line: 1126, column: 54, scope: !5615)
!5619 = !DILocation(line: 1127, column: 29, scope: !5615)
!5620 = !DILocation(line: 1127, column: 7, scope: !5615)
!5621 = !DILocation(line: 1126, column: 6, scope: !5607)
!5622 = !DILocation(line: 1128, column: 3, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 1127, column: 35)
!5624 = !DILocation(line: 1128, column: 8, scope: !5623)
!5625 = !DILocation(line: 1128, column: 22, scope: !5623)
!5626 = !DILocation(line: 1129, column: 2, scope: !5623)
!5627 = !DILocation(line: 1129, column: 13, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 1129, column: 13)
!5629 = !DILocation(line: 1129, column: 18, scope: !5628)
!5630 = !DILocation(line: 1129, column: 13, scope: !5615)
!5631 = !DILocalVariable(name: "pmcsr", scope: !5632, file: !3, line: 1130, type: !979)
!5632 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1129, column: 26)
!5633 = !DILocation(line: 1130, column: 7, scope: !5632)
!5634 = !DILocation(line: 1132, column: 24, scope: !5632)
!5635 = !DILocation(line: 1132, column: 29, scope: !5632)
!5636 = !DILocation(line: 1132, column: 34, scope: !5632)
!5637 = !DILocation(line: 1132, column: 41, scope: !5632)
!5638 = !DILocation(line: 1132, column: 3, scope: !5632)
!5639 = !DILocation(line: 1133, column: 25, scope: !5632)
!5640 = !DILocation(line: 1133, column: 31, scope: !5632)
!5641 = !DILocation(line: 1133, column: 3, scope: !5632)
!5642 = !DILocation(line: 1133, column: 8, scope: !5632)
!5643 = !DILocation(line: 1133, column: 22, scope: !5632)
!5644 = !DILocation(line: 1134, column: 2, scope: !5632)
!5645 = !DILocation(line: 1135, column: 24, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1134, column: 9)
!5647 = !DILocation(line: 1135, column: 3, scope: !5646)
!5648 = !DILocation(line: 1135, column: 8, scope: !5646)
!5649 = !DILocation(line: 1135, column: 22, scope: !5646)
!5650 = !DILocation(line: 1137, column: 1, scope: !5607)
!5651 = distinct !DISubprogram(name: "platform_pci_get_power_state", scope: !3, file: !3, line: 957, type: !4794, scopeLine: 958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5652 = !DILocalVariable(name: "dev", arg: 1, scope: !5651, file: !3, line: 957, type: !273)
!5653 = !DILocation(line: 957, column: 72, scope: !5651)
!5654 = !DILocation(line: 959, column: 9, scope: !5651)
!5655 = !DILocation(line: 959, column: 27, scope: !5651)
!5656 = !DILocation(line: 959, column: 44, scope: !5651)
!5657 = !DILocation(line: 959, column: 54, scope: !5651)
!5658 = !DILocation(line: 959, column: 2, scope: !5651)
!5659 = distinct !DISubprogram(name: "pci_device_is_present", scope: !3, file: !3, line: 6120, type: !4785, scopeLine: 6121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5660 = !DILocalVariable(name: "pdev", arg: 1, scope: !5659, file: !3, line: 6120, type: !273)
!5661 = !DILocation(line: 6120, column: 44, scope: !5659)
!5662 = !DILocalVariable(name: "v", scope: !5659, file: !3, line: 6122, type: !319)
!5663 = !DILocation(line: 6122, column: 6, scope: !5659)
!5664 = !DILocation(line: 6124, column: 30, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 6124, column: 6)
!5666 = !DILocation(line: 6124, column: 6, scope: !5665)
!5667 = !DILocation(line: 6124, column: 6, scope: !5659)
!5668 = !DILocation(line: 6125, column: 3, scope: !5665)
!5669 = !DILocation(line: 6126, column: 36, scope: !5659)
!5670 = !DILocation(line: 6126, column: 42, scope: !5659)
!5671 = !DILocation(line: 6126, column: 47, scope: !5659)
!5672 = !DILocation(line: 6126, column: 53, scope: !5659)
!5673 = !DILocation(line: 6126, column: 9, scope: !5659)
!5674 = !DILocation(line: 6126, column: 2, scope: !5659)
!5675 = !DILocation(line: 6127, column: 1, scope: !5659)
!5676 = distinct !DISubprogram(name: "pci_refresh_power_state", scope: !3, file: !3, line: 1146, type: !3533, scopeLine: 1147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5677 = !DILocalVariable(name: "dev", arg: 1, scope: !5676, file: !3, line: 1146, type: !273)
!5678 = !DILocation(line: 1146, column: 46, scope: !5676)
!5679 = !DILocation(line: 1148, column: 36, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5676, file: !3, line: 1148, column: 6)
!5681 = !DILocation(line: 1148, column: 6, scope: !5680)
!5682 = !DILocation(line: 1148, column: 6, scope: !5676)
!5683 = !DILocation(line: 1149, column: 36, scope: !5680)
!5684 = !DILocation(line: 1149, column: 3, scope: !5680)
!5685 = !DILocation(line: 1151, column: 27, scope: !5676)
!5686 = !DILocation(line: 1151, column: 32, scope: !5676)
!5687 = !DILocation(line: 1151, column: 37, scope: !5676)
!5688 = !DILocation(line: 1151, column: 2, scope: !5676)
!5689 = !DILocation(line: 1152, column: 1, scope: !5676)
!5690 = distinct !DISubprogram(name: "platform_pci_power_manageable", scope: !3, file: !3, line: 946, type: !4785, scopeLine: 947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5691 = !DILocalVariable(name: "dev", arg: 1, scope: !5690, file: !3, line: 946, type: !273)
!5692 = !DILocation(line: 946, column: 66, scope: !5690)
!5693 = !DILocation(line: 948, column: 9, scope: !5690)
!5694 = !DILocation(line: 948, column: 27, scope: !5690)
!5695 = !DILocation(line: 948, column: 44, scope: !5690)
!5696 = !DILocation(line: 948, column: 58, scope: !5690)
!5697 = !DILocation(line: 948, column: 2, scope: !5690)
!5698 = distinct !DISubprogram(name: "platform_pci_refresh_power_state", scope: !3, file: !3, line: 962, type: !3533, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5699 = !DILocalVariable(name: "dev", arg: 1, scope: !5698, file: !3, line: 962, type: !273)
!5700 = !DILocation(line: 962, column: 69, scope: !5698)
!5701 = !DILocation(line: 964, column: 6, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 964, column: 6)
!5703 = !DILocation(line: 964, column: 22, scope: !5702)
!5704 = !DILocation(line: 964, column: 25, scope: !5702)
!5705 = !DILocation(line: 964, column: 42, scope: !5702)
!5706 = !DILocation(line: 964, column: 6, scope: !5698)
!5707 = !DILocation(line: 965, column: 3, scope: !5702)
!5708 = !DILocation(line: 965, column: 20, scope: !5702)
!5709 = !DILocation(line: 965, column: 34, scope: !5702)
!5710 = !DILocation(line: 966, column: 1, scope: !5698)
!5711 = distinct !DISubprogram(name: "pci_platform_power_transition", scope: !3, file: !3, line: 1159, type: !4790, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5712 = !DILocalVariable(name: "dev", arg: 1, scope: !5711, file: !3, line: 1159, type: !273)
!5713 = !DILocation(line: 1159, column: 51, scope: !5711)
!5714 = !DILocalVariable(name: "state", arg: 2, scope: !5711, file: !3, line: 1159, type: !4124)
!5715 = !DILocation(line: 1159, column: 68, scope: !5711)
!5716 = !DILocalVariable(name: "error", scope: !5711, file: !3, line: 1161, type: !304)
!5717 = !DILocation(line: 1161, column: 6, scope: !5711)
!5718 = !DILocation(line: 1163, column: 36, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5711, file: !3, line: 1163, column: 6)
!5720 = !DILocation(line: 1163, column: 6, scope: !5719)
!5721 = !DILocation(line: 1163, column: 6, scope: !5711)
!5722 = !DILocation(line: 1164, column: 40, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 1163, column: 42)
!5724 = !DILocation(line: 1164, column: 45, scope: !5723)
!5725 = !DILocation(line: 1164, column: 11, scope: !5723)
!5726 = !DILocation(line: 1164, column: 9, scope: !5723)
!5727 = !DILocation(line: 1165, column: 8, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 1165, column: 7)
!5729 = !DILocation(line: 1165, column: 7, scope: !5723)
!5730 = !DILocation(line: 1166, column: 29, scope: !5728)
!5731 = !DILocation(line: 1166, column: 34, scope: !5728)
!5732 = !DILocation(line: 1166, column: 4, scope: !5728)
!5733 = !DILocation(line: 1167, column: 2, scope: !5723)
!5734 = !DILocation(line: 1168, column: 9, scope: !5719)
!5735 = !DILocation(line: 1170, column: 6, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5711, file: !3, line: 1170, column: 6)
!5737 = !DILocation(line: 1170, column: 12, scope: !5736)
!5738 = !DILocation(line: 1170, column: 16, scope: !5736)
!5739 = !DILocation(line: 1170, column: 21, scope: !5736)
!5740 = !DILocation(line: 1170, column: 6, scope: !5711)
!5741 = !DILocation(line: 1171, column: 3, scope: !5736)
!5742 = !DILocation(line: 1171, column: 8, scope: !5736)
!5743 = !DILocation(line: 1171, column: 22, scope: !5736)
!5744 = !DILocation(line: 1173, column: 9, scope: !5711)
!5745 = !DILocation(line: 1173, column: 2, scope: !5711)
!5746 = distinct !DISubprogram(name: "platform_pci_set_power_state", scope: !3, file: !3, line: 951, type: !4790, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5747 = !DILocalVariable(name: "dev", arg: 1, scope: !5746, file: !3, line: 951, type: !273)
!5748 = !DILocation(line: 951, column: 64, scope: !5746)
!5749 = !DILocalVariable(name: "t", arg: 2, scope: !5746, file: !3, line: 952, type: !4124)
!5750 = !DILocation(line: 952, column: 25, scope: !5746)
!5751 = !DILocation(line: 954, column: 9, scope: !5746)
!5752 = !DILocation(line: 954, column: 27, scope: !5746)
!5753 = !DILocation(line: 954, column: 44, scope: !5746)
!5754 = !DILocation(line: 954, column: 54, scope: !5746)
!5755 = !DILocation(line: 954, column: 59, scope: !5746)
!5756 = !DILocation(line: 954, column: 2, scope: !5746)
!5757 = distinct !DISubprogram(name: "pci_wakeup_bus", scope: !3, file: !3, line: 1193, type: !4276, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5758 = !DILocalVariable(name: "bus", arg: 1, scope: !5757, file: !3, line: 1193, type: !259)
!5759 = !DILocation(line: 1193, column: 37, scope: !5757)
!5760 = !DILocation(line: 1195, column: 6, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 1195, column: 6)
!5762 = !DILocation(line: 1195, column: 6, scope: !5757)
!5763 = !DILocation(line: 1196, column: 16, scope: !5761)
!5764 = !DILocation(line: 1196, column: 3, scope: !5761)
!5765 = !DILocation(line: 1197, column: 1, scope: !5757)
!5766 = distinct !DISubprogram(name: "pci_wakeup", scope: !3, file: !3, line: 1182, type: !5767, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{!304, !273, !258}
!5769 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !5766, file: !3, line: 1182, type: !273)
!5770 = !DILocation(line: 1182, column: 39, scope: !5766)
!5771 = !DILocalVariable(name: "ign", arg: 2, scope: !5766, file: !3, line: 1182, type: !258)
!5772 = !DILocation(line: 1182, column: 54, scope: !5766)
!5773 = !DILocation(line: 1184, column: 19, scope: !5766)
!5774 = !DILocation(line: 1184, column: 2, scope: !5766)
!5775 = !DILocation(line: 1185, column: 21, scope: !5766)
!5776 = !DILocation(line: 1185, column: 30, scope: !5766)
!5777 = !DILocation(line: 1185, column: 2, scope: !5766)
!5778 = !DILocation(line: 1186, column: 2, scope: !5766)
!5779 = distinct !DISubprogram(name: "pci_power_up", scope: !3, file: !3, line: 1244, type: !3545, scopeLine: 1245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5780 = !DILocalVariable(name: "dev", arg: 1, scope: !5779, file: !3, line: 1244, type: !273)
!5781 = !DILocation(line: 1244, column: 34, scope: !5779)
!5782 = !DILocation(line: 1246, column: 32, scope: !5779)
!5783 = !DILocation(line: 1246, column: 2, scope: !5779)
!5784 = !DILocation(line: 1253, column: 6, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 1253, column: 6)
!5786 = !DILocation(line: 1253, column: 11, scope: !5785)
!5787 = !DILocation(line: 1253, column: 6, scope: !5779)
!5788 = !DILocation(line: 1259, column: 18, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 1253, column: 27)
!5790 = !DILocation(line: 1259, column: 23, scope: !5789)
!5791 = !DILocation(line: 1259, column: 3, scope: !5789)
!5792 = !DILocation(line: 1260, column: 2, scope: !5789)
!5793 = !DILocation(line: 1262, column: 33, scope: !5779)
!5794 = !DILocation(line: 1262, column: 9, scope: !5779)
!5795 = !DILocation(line: 1262, column: 2, scope: !5779)
!5796 = !DILocalVariable(name: "dev", arg: 1, scope: !4816, file: !3, line: 1005, type: !273)
!5797 = !DILocation(line: 1005, column: 52, scope: !4816)
!5798 = !DILocalVariable(name: "state", arg: 2, scope: !4816, file: !3, line: 1005, type: !4124)
!5799 = !DILocation(line: 1005, column: 69, scope: !4816)
!5800 = !DILocalVariable(name: "pmcsr", scope: !4816, file: !3, line: 1007, type: !979)
!5801 = !DILocation(line: 1007, column: 6, scope: !4816)
!5802 = !DILocalVariable(name: "need_restore", scope: !4816, file: !3, line: 1008, type: !609)
!5803 = !DILocation(line: 1008, column: 7, scope: !4816)
!5804 = !DILocation(line: 1011, column: 6, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 1011, column: 6)
!5806 = !DILocation(line: 1011, column: 11, scope: !5805)
!5807 = !DILocation(line: 1011, column: 28, scope: !5805)
!5808 = !DILocation(line: 1011, column: 25, scope: !5805)
!5809 = !DILocation(line: 1011, column: 6, scope: !4816)
!5810 = !DILocation(line: 1012, column: 3, scope: !5805)
!5811 = !DILocation(line: 1014, column: 7, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 1014, column: 6)
!5813 = !DILocation(line: 1014, column: 12, scope: !5812)
!5814 = !DILocation(line: 1014, column: 6, scope: !4816)
!5815 = !DILocation(line: 1015, column: 3, scope: !5812)
!5816 = !DILocation(line: 1017, column: 6, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 1017, column: 6)
!5818 = !DILocation(line: 1017, column: 12, scope: !5817)
!5819 = !DILocation(line: 1017, column: 21, scope: !5817)
!5820 = !DILocation(line: 1017, column: 24, scope: !5817)
!5821 = !DILocation(line: 1017, column: 30, scope: !5817)
!5822 = !DILocation(line: 1017, column: 6, scope: !4816)
!5823 = !DILocation(line: 1018, column: 3, scope: !5817)
!5824 = !DILocation(line: 1026, column: 6, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 1026, column: 6)
!5826 = !DILocation(line: 1026, column: 12, scope: !5825)
!5827 = !DILocation(line: 1026, column: 22, scope: !5825)
!5828 = !DILocation(line: 1026, column: 25, scope: !5825)
!5829 = !DILocation(line: 1026, column: 30, scope: !5825)
!5830 = !DILocation(line: 1026, column: 44, scope: !5825)
!5831 = !DILocation(line: 1027, column: 6, scope: !5825)
!5832 = !DILocation(line: 1027, column: 9, scope: !5825)
!5833 = !DILocation(line: 1027, column: 14, scope: !5825)
!5834 = !DILocation(line: 1027, column: 30, scope: !5825)
!5835 = !DILocation(line: 1027, column: 28, scope: !5825)
!5836 = !DILocation(line: 1026, column: 6, scope: !4816)
!5837 = !DILocation(line: 1028, column: 3, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 1027, column: 37)
!5839 = !DILocation(line: 1031, column: 3, scope: !5838)
!5840 = !DILocation(line: 1035, column: 7, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 1035, column: 6)
!5842 = !DILocation(line: 1035, column: 13, scope: !5841)
!5843 = !DILocation(line: 1035, column: 23, scope: !5841)
!5844 = !DILocation(line: 1035, column: 27, scope: !5841)
!5845 = !DILocation(line: 1035, column: 32, scope: !5841)
!5846 = !DILocation(line: 1036, column: 5, scope: !5841)
!5847 = !DILocation(line: 1036, column: 9, scope: !5841)
!5848 = !DILocation(line: 1036, column: 15, scope: !5841)
!5849 = !DILocation(line: 1036, column: 25, scope: !5841)
!5850 = !DILocation(line: 1036, column: 29, scope: !5841)
!5851 = !DILocation(line: 1036, column: 34, scope: !5841)
!5852 = !DILocation(line: 1035, column: 6, scope: !4816)
!5853 = !DILocation(line: 1037, column: 3, scope: !5841)
!5854 = !DILocation(line: 1039, column: 23, scope: !4816)
!5855 = !DILocation(line: 1039, column: 28, scope: !4816)
!5856 = !DILocation(line: 1039, column: 33, scope: !4816)
!5857 = !DILocation(line: 1039, column: 40, scope: !4816)
!5858 = !DILocation(line: 1039, column: 2, scope: !4816)
!5859 = !DILocation(line: 1040, column: 6, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 1040, column: 6)
!5861 = !DILocation(line: 1040, column: 12, scope: !5860)
!5862 = !DILocation(line: 1040, column: 6, scope: !4816)
!5863 = !DILocation(line: 1041, column: 3, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 1040, column: 25)
!5865 = !DILocation(line: 1044, column: 3, scope: !5864)
!5866 = !DILocation(line: 1052, column: 10, scope: !4816)
!5867 = !DILocation(line: 1052, column: 15, scope: !4816)
!5868 = !DILocation(line: 1052, column: 2, scope: !4816)
!5869 = !DILocation(line: 1056, column: 9, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 1052, column: 30)
!5871 = !DILocation(line: 1057, column: 12, scope: !5870)
!5872 = !DILocation(line: 1057, column: 9, scope: !5870)
!5873 = !DILocation(line: 1058, column: 3, scope: !5870)
!5874 = !DILocation(line: 1062, column: 8, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 1062, column: 7)
!5876 = !DILocation(line: 1062, column: 14, scope: !5875)
!5877 = !DILocation(line: 1062, column: 40, scope: !5875)
!5878 = !DILocation(line: 1063, column: 4, scope: !5875)
!5879 = !DILocation(line: 1063, column: 9, scope: !5875)
!5880 = !DILocation(line: 1063, column: 15, scope: !5875)
!5881 = !DILocation(line: 1062, column: 7, scope: !5870)
!5882 = !DILocation(line: 1064, column: 17, scope: !5875)
!5883 = !DILocation(line: 1064, column: 4, scope: !5875)
!5884 = !DILocation(line: 1063, column: 42, scope: !5875)
!5885 = !DILocation(line: 1067, column: 9, scope: !5870)
!5886 = !DILocation(line: 1068, column: 3, scope: !5870)
!5887 = !DILocation(line: 1072, column: 24, scope: !4816)
!5888 = !DILocation(line: 1072, column: 29, scope: !4816)
!5889 = !DILocation(line: 1072, column: 34, scope: !4816)
!5890 = !DILocation(line: 1072, column: 41, scope: !4816)
!5891 = !DILocation(line: 1072, column: 56, scope: !4816)
!5892 = !DILocation(line: 1072, column: 2, scope: !4816)
!5893 = !DILocation(line: 1078, column: 6, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 1078, column: 6)
!5895 = !DILocation(line: 1078, column: 12, scope: !5894)
!5896 = !DILocation(line: 1078, column: 25, scope: !5894)
!5897 = !DILocation(line: 1078, column: 28, scope: !5894)
!5898 = !DILocation(line: 1078, column: 33, scope: !5894)
!5899 = !DILocation(line: 1078, column: 47, scope: !5894)
!5900 = !DILocation(line: 1078, column: 6, scope: !4816)
!5901 = !DILocation(line: 1079, column: 20, scope: !5894)
!5902 = !DILocation(line: 1079, column: 3, scope: !5894)
!5903 = !DILocation(line: 1080, column: 11, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 1080, column: 11)
!5905 = !DILocation(line: 1080, column: 17, scope: !5904)
!5906 = !DILocation(line: 1080, column: 27, scope: !5904)
!5907 = !DILocation(line: 1080, column: 30, scope: !5904)
!5908 = !DILocation(line: 1080, column: 35, scope: !5904)
!5909 = !DILocation(line: 1080, column: 49, scope: !5904)
!5910 = !DILocation(line: 1080, column: 11, scope: !5894)
!5911 = !DILocation(line: 1081, column: 3, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 1081, column: 3)
!5913 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 1081, column: 3)
!5914 = distinct !DILexicalBlock(scope: !5915, file: !3, line: 1081, column: 3)
!5915 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 1081, column: 3)
!5916 = !DILocation(line: 1081, column: 3, scope: !5904)
!5917 = !DILocation(line: 1083, column: 23, scope: !4816)
!5918 = !DILocation(line: 1083, column: 28, scope: !4816)
!5919 = !DILocation(line: 1083, column: 33, scope: !4816)
!5920 = !DILocation(line: 1083, column: 40, scope: !4816)
!5921 = !DILocation(line: 1083, column: 2, scope: !4816)
!5922 = !DILocation(line: 1084, column: 24, scope: !4816)
!5923 = !DILocation(line: 1084, column: 30, scope: !4816)
!5924 = !DILocation(line: 1084, column: 2, scope: !4816)
!5925 = !DILocation(line: 1084, column: 7, scope: !4816)
!5926 = !DILocation(line: 1084, column: 21, scope: !4816)
!5927 = !DILocation(line: 1085, column: 6, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 1085, column: 6)
!5929 = !DILocation(line: 1085, column: 11, scope: !5928)
!5930 = !DILocation(line: 1085, column: 28, scope: !5928)
!5931 = !DILocation(line: 1085, column: 25, scope: !5928)
!5932 = !DILocation(line: 1085, column: 6, scope: !4816)
!5933 = !DILocation(line: 1086, column: 3, scope: !5928)
!5934 = !DILocation(line: 1086, column: 3, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 1086, column: 3)
!5936 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 1086, column: 3)
!5937 = !DILocation(line: 1086, column: 3, scope: !5936)
!5938 = !DILocation(line: 1103, column: 6, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 1103, column: 6)
!5940 = !DILocation(line: 1103, column: 6, scope: !4816)
!5941 = !DILocation(line: 1104, column: 20, scope: !5939)
!5942 = !DILocation(line: 1104, column: 3, scope: !5939)
!5943 = !DILocation(line: 1106, column: 6, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 1106, column: 6)
!5945 = !DILocation(line: 1106, column: 11, scope: !5944)
!5946 = !DILocation(line: 1106, column: 16, scope: !5944)
!5947 = !DILocation(line: 1106, column: 6, scope: !4816)
!5948 = !DILocation(line: 1107, column: 29, scope: !5944)
!5949 = !DILocation(line: 1107, column: 34, scope: !5944)
!5950 = !DILocation(line: 1107, column: 39, scope: !5944)
!5951 = !DILocation(line: 1107, column: 3, scope: !5944)
!5952 = !DILocation(line: 1109, column: 2, scope: !4816)
!5953 = !DILocation(line: 1110, column: 1, scope: !4816)
!5954 = distinct !DISubprogram(name: "pci_bus_set_current_state", scope: !3, file: !3, line: 1283, type: !5955, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5955 = !DISubroutineType(types: !5956)
!5956 = !{null, !259, !4124}
!5957 = !DILocalVariable(name: "bus", arg: 1, scope: !5954, file: !3, line: 1283, type: !259)
!5958 = !DILocation(line: 1283, column: 48, scope: !5954)
!5959 = !DILocalVariable(name: "state", arg: 2, scope: !5954, file: !3, line: 1283, type: !4124)
!5960 = !DILocation(line: 1283, column: 65, scope: !5954)
!5961 = !DILocation(line: 1285, column: 6, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 1285, column: 6)
!5963 = !DILocation(line: 1285, column: 6, scope: !5954)
!5964 = !DILocation(line: 1286, column: 16, scope: !5962)
!5965 = !DILocation(line: 1286, column: 50, scope: !5962)
!5966 = !DILocation(line: 1286, column: 3, scope: !5962)
!5967 = !DILocation(line: 1287, column: 1, scope: !5954)
!5968 = distinct !DISubprogram(name: "__pci_dev_set_current_state", scope: !3, file: !3, line: 1270, type: !5767, scopeLine: 1271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5969 = !DILocalVariable(name: "dev", arg: 1, scope: !5968, file: !3, line: 1270, type: !273)
!5970 = !DILocation(line: 1270, column: 56, scope: !5968)
!5971 = !DILocalVariable(name: "data", arg: 2, scope: !5968, file: !3, line: 1270, type: !258)
!5972 = !DILocation(line: 1270, column: 67, scope: !5968)
!5973 = !DILocalVariable(name: "state", scope: !5968, file: !3, line: 1272, type: !4124)
!5974 = !DILocation(line: 1272, column: 14, scope: !5968)
!5975 = !DILocation(line: 1272, column: 38, scope: !5968)
!5976 = !DILocation(line: 1272, column: 23, scope: !5968)
!5977 = !DILocation(line: 1272, column: 22, scope: !5968)
!5978 = !DILocation(line: 1274, column: 23, scope: !5968)
!5979 = !DILocation(line: 1274, column: 2, scope: !5968)
!5980 = !DILocation(line: 1274, column: 7, scope: !5968)
!5981 = !DILocation(line: 1274, column: 21, scope: !5968)
!5982 = !DILocation(line: 1275, column: 2, scope: !5968)
!5983 = distinct !DISubprogram(name: "pci_set_power_state", scope: !3, file: !3, line: 1306, type: !4790, scopeLine: 1307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5984 = !DILocalVariable(name: "dev", arg: 1, scope: !5983, file: !3, line: 1306, type: !273)
!5985 = !DILocation(line: 1306, column: 41, scope: !5983)
!5986 = !DILocalVariable(name: "state", arg: 2, scope: !5983, file: !3, line: 1306, type: !4124)
!5987 = !DILocation(line: 1306, column: 58, scope: !5983)
!5988 = !DILocalVariable(name: "error", scope: !5983, file: !3, line: 1308, type: !304)
!5989 = !DILocation(line: 1308, column: 6, scope: !5983)
!5990 = !DILocation(line: 1311, column: 6, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5983, file: !3, line: 1311, column: 6)
!5992 = !DILocation(line: 1311, column: 12, scope: !5991)
!5993 = !DILocation(line: 1311, column: 6, scope: !5983)
!5994 = !DILocation(line: 1312, column: 9, scope: !5991)
!5995 = !DILocation(line: 1312, column: 3, scope: !5991)
!5996 = !DILocation(line: 1313, column: 11, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 1313, column: 11)
!5998 = !DILocation(line: 1313, column: 17, scope: !5997)
!5999 = !DILocation(line: 1313, column: 11, scope: !5991)
!6000 = !DILocation(line: 1314, column: 9, scope: !5997)
!6001 = !DILocation(line: 1314, column: 3, scope: !5997)
!6002 = !DILocation(line: 1315, column: 12, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 1315, column: 11)
!6004 = !DILocation(line: 1315, column: 18, scope: !6003)
!6005 = !DILocation(line: 1315, column: 28, scope: !6003)
!6006 = !DILocation(line: 1315, column: 31, scope: !6003)
!6007 = !DILocation(line: 1315, column: 37, scope: !6003)
!6008 = !DILocation(line: 1315, column: 48, scope: !6003)
!6009 = !DILocation(line: 1315, column: 63, scope: !6003)
!6010 = !DILocation(line: 1315, column: 51, scope: !6003)
!6011 = !DILocation(line: 1315, column: 11, scope: !5997)
!6012 = !DILocation(line: 1323, column: 3, scope: !6003)
!6013 = !DILocation(line: 1326, column: 6, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5983, file: !3, line: 1326, column: 6)
!6015 = !DILocation(line: 1326, column: 11, scope: !6014)
!6016 = !DILocation(line: 1326, column: 28, scope: !6014)
!6017 = !DILocation(line: 1326, column: 25, scope: !6014)
!6018 = !DILocation(line: 1326, column: 6, scope: !5983)
!6019 = !DILocation(line: 1327, column: 3, scope: !6014)
!6020 = !DILocation(line: 1329, column: 6, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5983, file: !3, line: 1329, column: 6)
!6022 = !DILocation(line: 1329, column: 12, scope: !6021)
!6023 = !DILocation(line: 1329, column: 6, scope: !5983)
!6024 = !DILocation(line: 1330, column: 23, scope: !6021)
!6025 = !DILocation(line: 1330, column: 10, scope: !6021)
!6026 = !DILocation(line: 1330, column: 3, scope: !6021)
!6027 = !DILocation(line: 1336, column: 6, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !5983, file: !3, line: 1336, column: 6)
!6029 = !DILocation(line: 1336, column: 12, scope: !6028)
!6030 = !DILocation(line: 1336, column: 25, scope: !6028)
!6031 = !DILocation(line: 1336, column: 29, scope: !6028)
!6032 = !DILocation(line: 1336, column: 34, scope: !6028)
!6033 = !DILocation(line: 1336, column: 44, scope: !6028)
!6034 = !DILocation(line: 1336, column: 6, scope: !5983)
!6035 = !DILocation(line: 1337, column: 3, scope: !6028)
!6036 = !DILocation(line: 1343, column: 34, scope: !5983)
!6037 = !DILocation(line: 1343, column: 39, scope: !5983)
!6038 = !DILocation(line: 1343, column: 45, scope: !5983)
!6039 = !DILocation(line: 1344, column: 18, scope: !5983)
!6040 = !DILocation(line: 1343, column: 10, scope: !5983)
!6041 = !DILocation(line: 1343, column: 8, scope: !5983)
!6042 = !DILocation(line: 1346, column: 36, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !5983, file: !3, line: 1346, column: 6)
!6044 = !DILocation(line: 1346, column: 41, scope: !6043)
!6045 = !DILocation(line: 1346, column: 6, scope: !6043)
!6046 = !DILocation(line: 1346, column: 6, scope: !5983)
!6047 = !DILocation(line: 1347, column: 10, scope: !6043)
!6048 = !DILocation(line: 1347, column: 3, scope: !6043)
!6049 = !DILocation(line: 1350, column: 6, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !5983, file: !3, line: 1350, column: 6)
!6051 = !DILocation(line: 1350, column: 12, scope: !6050)
!6052 = !DILocation(line: 1350, column: 6, scope: !5983)
!6053 = !DILocation(line: 1351, column: 29, scope: !6050)
!6054 = !DILocation(line: 1351, column: 34, scope: !6050)
!6055 = !DILocation(line: 1351, column: 3, scope: !6050)
!6056 = !DILocation(line: 1353, column: 2, scope: !5983)
!6057 = !DILocation(line: 1354, column: 1, scope: !5983)
!6058 = distinct !DISubprogram(name: "pci_no_d1d2", scope: !4228, file: !4228, line: 211, type: !3545, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6059 = !DILocalVariable(name: "dev", arg: 1, scope: !6058, file: !4228, line: 211, type: !273)
!6060 = !DILocation(line: 211, column: 47, scope: !6058)
!6061 = !DILocalVariable(name: "parent_dstates", scope: !6058, file: !4228, line: 213, type: !7)
!6062 = !DILocation(line: 213, column: 15, scope: !6058)
!6063 = !DILocation(line: 215, column: 6, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6058, file: !4228, line: 215, column: 6)
!6065 = !DILocation(line: 215, column: 11, scope: !6064)
!6066 = !DILocation(line: 215, column: 16, scope: !6064)
!6067 = !DILocation(line: 215, column: 6, scope: !6058)
!6068 = !DILocation(line: 216, column: 20, scope: !6064)
!6069 = !DILocation(line: 216, column: 25, scope: !6064)
!6070 = !DILocation(line: 216, column: 30, scope: !6064)
!6071 = !DILocation(line: 216, column: 36, scope: !6064)
!6072 = !DILocation(line: 216, column: 18, scope: !6064)
!6073 = !DILocation(line: 216, column: 3, scope: !6064)
!6074 = !DILocation(line: 217, column: 10, scope: !6058)
!6075 = !DILocation(line: 217, column: 15, scope: !6058)
!6076 = !DILocation(line: 217, column: 23, scope: !6058)
!6077 = !DILocation(line: 217, column: 26, scope: !6058)
!6078 = !DILocation(line: 217, column: 2, scope: !6058)
!6079 = distinct !DISubprogram(name: "pci_choose_state", scope: !3, file: !3, line: 1366, type: !6080, scopeLine: 1367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6080 = !DISubroutineType(types: !6081)
!6081 = !{!4124, !273, !3539}
!6082 = !DILocalVariable(name: "dev", arg: 1, scope: !6079, file: !3, line: 1366, type: !273)
!6083 = !DILocation(line: 1366, column: 46, scope: !6079)
!6084 = !DILocalVariable(name: "state", arg: 2, scope: !6079, file: !3, line: 1366, type: !3539)
!6085 = !DILocation(line: 1366, column: 64, scope: !6079)
!6086 = !DILocalVariable(name: "ret", scope: !6079, file: !3, line: 1368, type: !4124)
!6087 = !DILocation(line: 1368, column: 14, scope: !6079)
!6088 = !DILocation(line: 1370, column: 7, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 1370, column: 6)
!6090 = !DILocation(line: 1370, column: 12, scope: !6089)
!6091 = !DILocation(line: 1370, column: 6, scope: !6079)
!6092 = !DILocation(line: 1371, column: 3, scope: !6089)
!6093 = !DILocation(line: 1373, column: 34, scope: !6079)
!6094 = !DILocation(line: 1373, column: 8, scope: !6079)
!6095 = !DILocation(line: 1373, column: 6, scope: !6079)
!6096 = !DILocation(line: 1374, column: 6, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 1374, column: 6)
!6098 = !DILocation(line: 1374, column: 10, scope: !6097)
!6099 = !DILocation(line: 1374, column: 6, scope: !6079)
!6100 = !DILocation(line: 1375, column: 10, scope: !6097)
!6101 = !DILocation(line: 1375, column: 3, scope: !6097)
!6102 = !DILocation(line: 1377, column: 16, scope: !6079)
!6103 = !DILocation(line: 1377, column: 2, scope: !6079)
!6104 = !DILocation(line: 1379, column: 3, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 1377, column: 23)
!6106 = !DILocation(line: 1385, column: 3, scope: !6105)
!6107 = !DILocation(line: 1387, column: 3, scope: !6105)
!6108 = !DILocation(line: 1389, column: 3, scope: !6105)
!6109 = !DILocation(line: 1389, column: 3, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 1389, column: 3)
!6111 = !DILocation(line: 1389, column: 3, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 1389, column: 3)
!6113 = !DILocation(line: 1389, column: 3, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 1389, column: 3)
!6115 = !{i32 -2140865882, i32 -2140865853, i32 -2140865807, i32 -2140865749, i32 -2140865695, i32 -2140865641, i32 -2140865586, i32 -2140865555}
!6116 = !DILocation(line: 1389, column: 3, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 1389, column: 3)
!6118 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 1389, column: 3)
!6119 = !{i32 -2140865114, i32 -2140865107, i32 -2140865053, i32 -2140865022, i32 -2140864992}
!6120 = !DILocation(line: 1389, column: 3, scope: !6118)
!6121 = !DILocation(line: 1390, column: 2, scope: !6105)
!6122 = !DILocation(line: 1391, column: 2, scope: !6079)
!6123 = !DILocation(line: 1392, column: 1, scope: !6079)
!6124 = distinct !DISubprogram(name: "platform_pci_choose_state", scope: !3, file: !3, line: 968, type: !4794, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6125 = !DILocalVariable(name: "dev", arg: 1, scope: !6124, file: !3, line: 968, type: !273)
!6126 = !DILocation(line: 968, column: 69, scope: !6124)
!6127 = !DILocation(line: 970, column: 9, scope: !6124)
!6128 = !DILocation(line: 971, column: 4, scope: !6124)
!6129 = !DILocation(line: 971, column: 21, scope: !6124)
!6130 = !DILocation(line: 971, column: 34, scope: !6124)
!6131 = !DILocation(line: 970, column: 2, scope: !6124)
!6132 = distinct !DISubprogram(name: "pci_find_saved_cap", scope: !3, file: !3, line: 1409, type: !6133, scopeLine: 1410, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6133 = !DISubroutineType(types: !6134)
!6134 = !{!4392, !273, !342}
!6135 = !DILocalVariable(name: "dev", arg: 1, scope: !6132, file: !3, line: 1409, type: !273)
!6136 = !DILocation(line: 1409, column: 64, scope: !6132)
!6137 = !DILocalVariable(name: "cap", arg: 2, scope: !6132, file: !3, line: 1409, type: !342)
!6138 = !DILocation(line: 1409, column: 74, scope: !6132)
!6139 = !DILocation(line: 1411, column: 29, scope: !6132)
!6140 = !DILocation(line: 1411, column: 34, scope: !6132)
!6141 = !DILocation(line: 1411, column: 9, scope: !6132)
!6142 = !DILocation(line: 1411, column: 2, scope: !6132)
!6143 = distinct !DISubprogram(name: "_pci_find_saved_cap", scope: !3, file: !3, line: 1397, type: !6144, scopeLine: 1399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6144 = !DISubroutineType(types: !6145)
!6145 = !{!4392, !273, !979, !609}
!6146 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !6143, file: !3, line: 1397, type: !273)
!6147 = !DILocation(line: 1397, column: 72, scope: !6143)
!6148 = !DILocalVariable(name: "cap", arg: 2, scope: !6143, file: !3, line: 1398, type: !979)
!6149 = !DILocation(line: 1398, column: 18, scope: !6143)
!6150 = !DILocalVariable(name: "extended", arg: 3, scope: !6143, file: !3, line: 1398, type: !609)
!6151 = !DILocation(line: 1398, column: 28, scope: !6143)
!6152 = !DILocalVariable(name: "tmp", scope: !6143, file: !3, line: 1400, type: !4392)
!6153 = !DILocation(line: 1400, column: 30, scope: !6143)
!6154 = !DILocalVariable(name: "____ptr", scope: !6155, file: !3, line: 1402, type: !757)
!6155 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 1402, column: 2)
!6156 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 1402, column: 2)
!6157 = !DILocation(line: 1402, column: 2, scope: !6155)
!6158 = !DILocalVariable(name: "__mptr", scope: !6159, file: !3, line: 1402, type: !258)
!6159 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 1402, column: 2)
!6160 = !DILocation(line: 1402, column: 2, scope: !6159)
!6161 = !DILocation(line: 1402, column: 2, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6159, file: !3, line: 1402, column: 2)
!6163 = !DILocation(line: 1402, column: 2, scope: !6156)
!6164 = !DILocation(line: 1402, column: 2, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 1402, column: 2)
!6166 = !DILocation(line: 1403, column: 7, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 1403, column: 7)
!6168 = distinct !DILexicalBlock(scope: !6165, file: !3, line: 1402, column: 61)
!6169 = !DILocation(line: 1403, column: 12, scope: !6167)
!6170 = !DILocation(line: 1403, column: 16, scope: !6167)
!6171 = !DILocation(line: 1403, column: 32, scope: !6167)
!6172 = !DILocation(line: 1403, column: 29, scope: !6167)
!6173 = !DILocation(line: 1403, column: 41, scope: !6167)
!6174 = !DILocation(line: 1403, column: 44, scope: !6167)
!6175 = !DILocation(line: 1403, column: 49, scope: !6167)
!6176 = !DILocation(line: 1403, column: 53, scope: !6167)
!6177 = !DILocation(line: 1403, column: 63, scope: !6167)
!6178 = !DILocation(line: 1403, column: 60, scope: !6167)
!6179 = !DILocation(line: 1403, column: 7, scope: !6168)
!6180 = !DILocation(line: 1404, column: 11, scope: !6167)
!6181 = !DILocation(line: 1404, column: 4, scope: !6167)
!6182 = !DILocation(line: 1405, column: 2, scope: !6168)
!6183 = !DILocalVariable(name: "____ptr", scope: !6184, file: !3, line: 1402, type: !757)
!6184 = distinct !DILexicalBlock(scope: !6165, file: !3, line: 1402, column: 2)
!6185 = !DILocation(line: 1402, column: 2, scope: !6184)
!6186 = !DILocalVariable(name: "__mptr", scope: !6187, file: !3, line: 1402, type: !258)
!6187 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 1402, column: 2)
!6188 = !DILocation(line: 1402, column: 2, scope: !6187)
!6189 = !DILocation(line: 1402, column: 2, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 1402, column: 2)
!6191 = distinct !{!6191, !6163, !6192}
!6192 = !DILocation(line: 1405, column: 2, scope: !6156)
!6193 = !DILocation(line: 1406, column: 2, scope: !6143)
!6194 = !DILocation(line: 1407, column: 1, scope: !6143)
!6195 = distinct !DISubprogram(name: "pci_find_saved_ext_cap", scope: !3, file: !3, line: 1414, type: !6196, scopeLine: 1415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6196 = !DISubroutineType(types: !6197)
!6197 = !{!4392, !273, !979}
!6198 = !DILocalVariable(name: "dev", arg: 1, scope: !6195, file: !3, line: 1414, type: !273)
!6199 = !DILocation(line: 1414, column: 68, scope: !6195)
!6200 = !DILocalVariable(name: "cap", arg: 2, scope: !6195, file: !3, line: 1414, type: !979)
!6201 = !DILocation(line: 1414, column: 77, scope: !6195)
!6202 = !DILocation(line: 1416, column: 29, scope: !6195)
!6203 = !DILocation(line: 1416, column: 34, scope: !6195)
!6204 = !DILocation(line: 1416, column: 9, scope: !6195)
!6205 = !DILocation(line: 1416, column: 2, scope: !6195)
!6206 = distinct !DISubprogram(name: "pci_save_state", scope: !3, file: !3, line: 1547, type: !3545, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6207 = !DILocalVariable(name: "dev", arg: 1, scope: !6206, file: !3, line: 1547, type: !273)
!6208 = !DILocation(line: 1547, column: 36, scope: !6206)
!6209 = !DILocalVariable(name: "i", scope: !6206, file: !3, line: 1549, type: !304)
!6210 = !DILocation(line: 1549, column: 6, scope: !6206)
!6211 = !DILocation(line: 1551, column: 9, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6206, file: !3, line: 1551, column: 2)
!6213 = !DILocation(line: 1551, column: 7, scope: !6212)
!6214 = !DILocation(line: 1551, column: 14, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 1551, column: 2)
!6216 = !DILocation(line: 1551, column: 16, scope: !6215)
!6217 = !DILocation(line: 1551, column: 2, scope: !6212)
!6218 = !DILocation(line: 1552, column: 25, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 1551, column: 27)
!6220 = !DILocation(line: 1552, column: 30, scope: !6219)
!6221 = !DILocation(line: 1552, column: 32, scope: !6219)
!6222 = !DILocation(line: 1552, column: 38, scope: !6219)
!6223 = !DILocation(line: 1552, column: 43, scope: !6219)
!6224 = !DILocation(line: 1552, column: 62, scope: !6219)
!6225 = !DILocation(line: 1552, column: 3, scope: !6219)
!6226 = !DILocation(line: 1555, column: 2, scope: !6219)
!6227 = !DILocation(line: 1551, column: 23, scope: !6215)
!6228 = !DILocation(line: 1551, column: 2, scope: !6215)
!6229 = distinct !{!6229, !6217, !6230}
!6230 = !DILocation(line: 1555, column: 2, scope: !6212)
!6231 = !DILocation(line: 1556, column: 2, scope: !6206)
!6232 = !DILocation(line: 1556, column: 7, scope: !6206)
!6233 = !DILocation(line: 1556, column: 19, scope: !6206)
!6234 = !DILocation(line: 1558, column: 26, scope: !6206)
!6235 = !DILocation(line: 1558, column: 6, scope: !6206)
!6236 = !DILocation(line: 1558, column: 4, scope: !6206)
!6237 = !DILocation(line: 1559, column: 6, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6206, file: !3, line: 1559, column: 6)
!6239 = !DILocation(line: 1559, column: 8, scope: !6238)
!6240 = !DILocation(line: 1559, column: 6, scope: !6206)
!6241 = !DILocation(line: 1560, column: 10, scope: !6238)
!6242 = !DILocation(line: 1560, column: 3, scope: !6238)
!6243 = !DILocation(line: 1562, column: 26, scope: !6206)
!6244 = !DILocation(line: 1562, column: 6, scope: !6206)
!6245 = !DILocation(line: 1562, column: 4, scope: !6206)
!6246 = !DILocation(line: 1563, column: 6, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6206, file: !3, line: 1563, column: 6)
!6248 = !DILocation(line: 1563, column: 8, scope: !6247)
!6249 = !DILocation(line: 1563, column: 6, scope: !6206)
!6250 = !DILocation(line: 1564, column: 10, scope: !6247)
!6251 = !DILocation(line: 1564, column: 3, scope: !6247)
!6252 = !DILocation(line: 1566, column: 21, scope: !6206)
!6253 = !DILocation(line: 1566, column: 2, scope: !6206)
!6254 = !DILocation(line: 1567, column: 21, scope: !6206)
!6255 = !DILocation(line: 1567, column: 2, scope: !6206)
!6256 = !DILocation(line: 1568, column: 21, scope: !6206)
!6257 = !DILocation(line: 1568, column: 2, scope: !6206)
!6258 = !DILocation(line: 1569, column: 27, scope: !6206)
!6259 = !DILocation(line: 1569, column: 9, scope: !6206)
!6260 = !DILocation(line: 1569, column: 2, scope: !6206)
!6261 = !DILocation(line: 1570, column: 1, scope: !6206)
!6262 = distinct !DISubprogram(name: "pci_save_pcie_state", scope: !3, file: !3, line: 1419, type: !3545, scopeLine: 1420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6263 = !DILocalVariable(name: "dev", arg: 1, scope: !6262, file: !3, line: 1419, type: !273)
!6264 = !DILocation(line: 1419, column: 48, scope: !6262)
!6265 = !DILocalVariable(name: "i", scope: !6262, file: !3, line: 1421, type: !304)
!6266 = !DILocation(line: 1421, column: 6, scope: !6262)
!6267 = !DILocalVariable(name: "save_state", scope: !6262, file: !3, line: 1422, type: !4392)
!6268 = !DILocation(line: 1422, column: 30, scope: !6262)
!6269 = !DILocalVariable(name: "cap", scope: !6262, file: !3, line: 1423, type: !4689)
!6270 = !DILocation(line: 1423, column: 7, scope: !6262)
!6271 = !DILocation(line: 1425, column: 19, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 1425, column: 6)
!6273 = !DILocation(line: 1425, column: 7, scope: !6272)
!6274 = !DILocation(line: 1425, column: 6, scope: !6262)
!6275 = !DILocation(line: 1426, column: 3, scope: !6272)
!6276 = !DILocation(line: 1428, column: 34, scope: !6262)
!6277 = !DILocation(line: 1428, column: 15, scope: !6262)
!6278 = !DILocation(line: 1428, column: 13, scope: !6262)
!6279 = !DILocation(line: 1429, column: 7, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 1429, column: 6)
!6281 = !DILocation(line: 1429, column: 6, scope: !6262)
!6282 = !DILocation(line: 1430, column: 3, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 1429, column: 19)
!6284 = !DILocation(line: 1431, column: 3, scope: !6283)
!6285 = !DILocation(line: 1434, column: 16, scope: !6262)
!6286 = !DILocation(line: 1434, column: 28, scope: !6262)
!6287 = !DILocation(line: 1434, column: 32, scope: !6262)
!6288 = !DILocation(line: 1434, column: 8, scope: !6262)
!6289 = !DILocation(line: 1434, column: 6, scope: !6262)
!6290 = !DILocation(line: 1435, column: 28, scope: !6262)
!6291 = !DILocation(line: 1435, column: 50, scope: !6262)
!6292 = !DILocation(line: 1435, column: 55, scope: !6262)
!6293 = !DILocation(line: 1435, column: 2, scope: !6262)
!6294 = !DILocation(line: 1436, column: 28, scope: !6262)
!6295 = !DILocation(line: 1436, column: 50, scope: !6262)
!6296 = !DILocation(line: 1436, column: 55, scope: !6262)
!6297 = !DILocation(line: 1436, column: 2, scope: !6262)
!6298 = !DILocation(line: 1437, column: 28, scope: !6262)
!6299 = !DILocation(line: 1437, column: 50, scope: !6262)
!6300 = !DILocation(line: 1437, column: 55, scope: !6262)
!6301 = !DILocation(line: 1437, column: 2, scope: !6262)
!6302 = !DILocation(line: 1438, column: 28, scope: !6262)
!6303 = !DILocation(line: 1438, column: 50, scope: !6262)
!6304 = !DILocation(line: 1438, column: 55, scope: !6262)
!6305 = !DILocation(line: 1438, column: 2, scope: !6262)
!6306 = !DILocation(line: 1439, column: 28, scope: !6262)
!6307 = !DILocation(line: 1439, column: 51, scope: !6262)
!6308 = !DILocation(line: 1439, column: 56, scope: !6262)
!6309 = !DILocation(line: 1439, column: 2, scope: !6262)
!6310 = !DILocation(line: 1440, column: 28, scope: !6262)
!6311 = !DILocation(line: 1440, column: 51, scope: !6262)
!6312 = !DILocation(line: 1440, column: 56, scope: !6262)
!6313 = !DILocation(line: 1440, column: 2, scope: !6262)
!6314 = !DILocation(line: 1441, column: 28, scope: !6262)
!6315 = !DILocation(line: 1441, column: 51, scope: !6262)
!6316 = !DILocation(line: 1441, column: 56, scope: !6262)
!6317 = !DILocation(line: 1441, column: 2, scope: !6262)
!6318 = !DILocation(line: 1443, column: 2, scope: !6262)
!6319 = !DILocation(line: 1444, column: 1, scope: !6262)
!6320 = distinct !DISubprogram(name: "pci_save_pcix_state", scope: !3, file: !3, line: 1466, type: !3545, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6321 = !DILocalVariable(name: "dev", arg: 1, scope: !6320, file: !3, line: 1466, type: !273)
!6322 = !DILocation(line: 1466, column: 48, scope: !6320)
!6323 = !DILocalVariable(name: "pos", scope: !6320, file: !3, line: 1468, type: !304)
!6324 = !DILocation(line: 1468, column: 6, scope: !6320)
!6325 = !DILocalVariable(name: "save_state", scope: !6320, file: !3, line: 1469, type: !4392)
!6326 = !DILocation(line: 1469, column: 30, scope: !6320)
!6327 = !DILocation(line: 1471, column: 28, scope: !6320)
!6328 = !DILocation(line: 1471, column: 8, scope: !6320)
!6329 = !DILocation(line: 1471, column: 6, scope: !6320)
!6330 = !DILocation(line: 1472, column: 7, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 1472, column: 6)
!6332 = !DILocation(line: 1472, column: 6, scope: !6320)
!6333 = !DILocation(line: 1473, column: 3, scope: !6331)
!6334 = !DILocation(line: 1475, column: 34, scope: !6320)
!6335 = !DILocation(line: 1475, column: 15, scope: !6320)
!6336 = !DILocation(line: 1475, column: 13, scope: !6320)
!6337 = !DILocation(line: 1476, column: 7, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 1476, column: 6)
!6339 = !DILocation(line: 1476, column: 6, scope: !6320)
!6340 = !DILocation(line: 1477, column: 3, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 1476, column: 19)
!6342 = !DILocation(line: 1478, column: 3, scope: !6341)
!6343 = !DILocation(line: 1481, column: 23, scope: !6320)
!6344 = !DILocation(line: 1481, column: 28, scope: !6320)
!6345 = !DILocation(line: 1481, column: 32, scope: !6320)
!6346 = !DILocation(line: 1482, column: 16, scope: !6320)
!6347 = !DILocation(line: 1482, column: 28, scope: !6320)
!6348 = !DILocation(line: 1482, column: 32, scope: !6320)
!6349 = !DILocation(line: 1482, column: 9, scope: !6320)
!6350 = !DILocation(line: 1481, column: 2, scope: !6320)
!6351 = !DILocation(line: 1484, column: 2, scope: !6320)
!6352 = !DILocation(line: 1485, column: 1, scope: !6320)
!6353 = distinct !DISubprogram(name: "pci_save_ltr_state", scope: !3, file: !3, line: 1502, type: !3533, scopeLine: 1503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6354 = !DILocalVariable(name: "dev", arg: 1, scope: !6353, file: !3, line: 1502, type: !273)
!6355 = !DILocation(line: 1502, column: 48, scope: !6353)
!6356 = !DILocalVariable(name: "ltr", scope: !6353, file: !3, line: 1504, type: !304)
!6357 = !DILocation(line: 1504, column: 6, scope: !6353)
!6358 = !DILocalVariable(name: "save_state", scope: !6353, file: !3, line: 1505, type: !4392)
!6359 = !DILocation(line: 1505, column: 30, scope: !6353)
!6360 = !DILocalVariable(name: "cap", scope: !6353, file: !3, line: 1506, type: !4689)
!6361 = !DILocation(line: 1506, column: 7, scope: !6353)
!6362 = !DILocation(line: 1508, column: 19, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 1508, column: 6)
!6364 = !DILocation(line: 1508, column: 7, scope: !6363)
!6365 = !DILocation(line: 1508, column: 6, scope: !6353)
!6366 = !DILocation(line: 1509, column: 3, scope: !6363)
!6367 = !DILocation(line: 1511, column: 32, scope: !6353)
!6368 = !DILocation(line: 1511, column: 8, scope: !6353)
!6369 = !DILocation(line: 1511, column: 6, scope: !6353)
!6370 = !DILocation(line: 1512, column: 7, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 1512, column: 6)
!6372 = !DILocation(line: 1512, column: 6, scope: !6353)
!6373 = !DILocation(line: 1513, column: 3, scope: !6371)
!6374 = !DILocation(line: 1515, column: 38, scope: !6353)
!6375 = !DILocation(line: 1515, column: 15, scope: !6353)
!6376 = !DILocation(line: 1515, column: 13, scope: !6353)
!6377 = !DILocation(line: 1516, column: 7, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 1516, column: 6)
!6379 = !DILocation(line: 1516, column: 6, scope: !6353)
!6380 = !DILocation(line: 1517, column: 3, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 1516, column: 19)
!6382 = !DILocation(line: 1518, column: 3, scope: !6381)
!6383 = !DILocation(line: 1521, column: 16, scope: !6353)
!6384 = !DILocation(line: 1521, column: 28, scope: !6353)
!6385 = !DILocation(line: 1521, column: 32, scope: !6353)
!6386 = !DILocation(line: 1521, column: 8, scope: !6353)
!6387 = !DILocation(line: 1521, column: 6, scope: !6353)
!6388 = !DILocation(line: 1522, column: 23, scope: !6353)
!6389 = !DILocation(line: 1522, column: 28, scope: !6353)
!6390 = !DILocation(line: 1522, column: 32, scope: !6353)
!6391 = !DILocation(line: 1522, column: 60, scope: !6353)
!6392 = !DILocation(line: 1522, column: 2, scope: !6353)
!6393 = !DILocation(line: 1523, column: 23, scope: !6353)
!6394 = !DILocation(line: 1523, column: 28, scope: !6353)
!6395 = !DILocation(line: 1523, column: 32, scope: !6353)
!6396 = !DILocation(line: 1523, column: 62, scope: !6353)
!6397 = !DILocation(line: 1523, column: 2, scope: !6353)
!6398 = !DILocation(line: 1524, column: 1, scope: !6353)
!6399 = distinct !DISubprogram(name: "pci_save_dpc_state", scope: !4228, file: !4228, line: 458, type: !3533, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6400 = !DILocalVariable(name: "dev", arg: 1, scope: !6399, file: !4228, line: 458, type: !273)
!6401 = !DILocation(line: 458, column: 55, scope: !6399)
!6402 = !DILocation(line: 458, column: 61, scope: !6399)
!6403 = distinct !DISubprogram(name: "pci_save_aer_state", scope: !6404, file: !6404, line: 63, type: !3533, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6404 = !DIFile(filename: "./include/linux/aer.h", directory: "/home/lizy2001/genbc/linux")
!6405 = !DILocalVariable(name: "dev", arg: 1, scope: !6403, file: !6404, line: 63, type: !273)
!6406 = !DILocation(line: 63, column: 55, scope: !6403)
!6407 = !DILocation(line: 63, column: 61, scope: !6403)
!6408 = distinct !DISubprogram(name: "pci_restore_state", scope: !3, file: !3, line: 1662, type: !3533, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6409 = !DILocalVariable(name: "dev", arg: 1, scope: !6408, file: !3, line: 1662, type: !273)
!6410 = !DILocation(line: 1662, column: 40, scope: !6408)
!6411 = !DILocation(line: 1664, column: 7, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 1664, column: 6)
!6413 = !DILocation(line: 1664, column: 12, scope: !6412)
!6414 = !DILocation(line: 1664, column: 6, scope: !6408)
!6415 = !DILocation(line: 1665, column: 3, scope: !6412)
!6416 = !DILocation(line: 1671, column: 24, scope: !6408)
!6417 = !DILocation(line: 1671, column: 2, scope: !6408)
!6418 = !DILocation(line: 1673, column: 25, scope: !6408)
!6419 = !DILocation(line: 1673, column: 2, scope: !6408)
!6420 = !DILocation(line: 1674, column: 26, scope: !6408)
!6421 = !DILocation(line: 1674, column: 2, scope: !6408)
!6422 = !DILocation(line: 1675, column: 24, scope: !6408)
!6423 = !DILocation(line: 1675, column: 2, scope: !6408)
!6424 = !DILocation(line: 1676, column: 24, scope: !6408)
!6425 = !DILocation(line: 1676, column: 2, scope: !6408)
!6426 = !DILocation(line: 1677, column: 23, scope: !6408)
!6427 = !DILocation(line: 1677, column: 2, scope: !6408)
!6428 = !DILocation(line: 1678, column: 26, scope: !6408)
!6429 = !DILocation(line: 1678, column: 2, scope: !6408)
!6430 = !DILocation(line: 1679, column: 24, scope: !6408)
!6431 = !DILocation(line: 1679, column: 2, scope: !6408)
!6432 = !DILocation(line: 1681, column: 23, scope: !6408)
!6433 = !DILocation(line: 1681, column: 2, scope: !6408)
!6434 = !DILocation(line: 1682, column: 24, scope: !6408)
!6435 = !DILocation(line: 1682, column: 2, scope: !6408)
!6436 = !DILocation(line: 1684, column: 27, scope: !6408)
!6437 = !DILocation(line: 1684, column: 2, scope: !6408)
!6438 = !DILocation(line: 1686, column: 25, scope: !6408)
!6439 = !DILocation(line: 1686, column: 2, scope: !6408)
!6440 = !DILocation(line: 1687, column: 24, scope: !6408)
!6441 = !DILocation(line: 1687, column: 2, scope: !6408)
!6442 = !DILocation(line: 1690, column: 17, scope: !6408)
!6443 = !DILocation(line: 1690, column: 2, scope: !6408)
!6444 = !DILocation(line: 1691, column: 24, scope: !6408)
!6445 = !DILocation(line: 1691, column: 2, scope: !6408)
!6446 = !DILocation(line: 1693, column: 2, scope: !6408)
!6447 = !DILocation(line: 1693, column: 7, scope: !6408)
!6448 = !DILocation(line: 1693, column: 19, scope: !6408)
!6449 = !DILocation(line: 1694, column: 1, scope: !6408)
!6450 = distinct !DISubprogram(name: "pci_restore_ltr_state", scope: !3, file: !3, line: 1526, type: !3533, scopeLine: 1527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6451 = !DILocalVariable(name: "dev", arg: 1, scope: !6450, file: !3, line: 1526, type: !273)
!6452 = !DILocation(line: 1526, column: 51, scope: !6450)
!6453 = !DILocalVariable(name: "save_state", scope: !6450, file: !3, line: 1528, type: !4392)
!6454 = !DILocation(line: 1528, column: 30, scope: !6450)
!6455 = !DILocalVariable(name: "ltr", scope: !6450, file: !3, line: 1529, type: !304)
!6456 = !DILocation(line: 1529, column: 6, scope: !6450)
!6457 = !DILocalVariable(name: "cap", scope: !6450, file: !3, line: 1530, type: !4689)
!6458 = !DILocation(line: 1530, column: 7, scope: !6450)
!6459 = !DILocation(line: 1532, column: 38, scope: !6450)
!6460 = !DILocation(line: 1532, column: 15, scope: !6450)
!6461 = !DILocation(line: 1532, column: 13, scope: !6450)
!6462 = !DILocation(line: 1533, column: 32, scope: !6450)
!6463 = !DILocation(line: 1533, column: 8, scope: !6450)
!6464 = !DILocation(line: 1533, column: 6, scope: !6450)
!6465 = !DILocation(line: 1534, column: 7, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 1534, column: 6)
!6467 = !DILocation(line: 1534, column: 18, scope: !6466)
!6468 = !DILocation(line: 1534, column: 22, scope: !6466)
!6469 = !DILocation(line: 1534, column: 6, scope: !6450)
!6470 = !DILocation(line: 1535, column: 3, scope: !6466)
!6471 = !DILocation(line: 1537, column: 16, scope: !6450)
!6472 = !DILocation(line: 1537, column: 28, scope: !6450)
!6473 = !DILocation(line: 1537, column: 32, scope: !6450)
!6474 = !DILocation(line: 1537, column: 8, scope: !6450)
!6475 = !DILocation(line: 1537, column: 6, scope: !6450)
!6476 = !DILocation(line: 1538, column: 24, scope: !6450)
!6477 = !DILocation(line: 1538, column: 29, scope: !6450)
!6478 = !DILocation(line: 1538, column: 33, scope: !6450)
!6479 = !DILocation(line: 1538, column: 62, scope: !6450)
!6480 = !DILocation(line: 1538, column: 58, scope: !6450)
!6481 = !DILocation(line: 1538, column: 2, scope: !6450)
!6482 = !DILocation(line: 1539, column: 24, scope: !6450)
!6483 = !DILocation(line: 1539, column: 29, scope: !6450)
!6484 = !DILocation(line: 1539, column: 33, scope: !6450)
!6485 = !DILocation(line: 1539, column: 64, scope: !6450)
!6486 = !DILocation(line: 1539, column: 60, scope: !6450)
!6487 = !DILocation(line: 1539, column: 2, scope: !6450)
!6488 = !DILocation(line: 1540, column: 1, scope: !6450)
!6489 = distinct !DISubprogram(name: "pci_restore_pcie_state", scope: !3, file: !3, line: 1446, type: !3533, scopeLine: 1447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6490 = !DILocalVariable(name: "dev", arg: 1, scope: !6489, file: !3, line: 1446, type: !273)
!6491 = !DILocation(line: 1446, column: 52, scope: !6489)
!6492 = !DILocalVariable(name: "i", scope: !6489, file: !3, line: 1448, type: !304)
!6493 = !DILocation(line: 1448, column: 6, scope: !6489)
!6494 = !DILocalVariable(name: "save_state", scope: !6489, file: !3, line: 1449, type: !4392)
!6495 = !DILocation(line: 1449, column: 30, scope: !6489)
!6496 = !DILocalVariable(name: "cap", scope: !6489, file: !3, line: 1450, type: !4689)
!6497 = !DILocation(line: 1450, column: 7, scope: !6489)
!6498 = !DILocation(line: 1452, column: 34, scope: !6489)
!6499 = !DILocation(line: 1452, column: 15, scope: !6489)
!6500 = !DILocation(line: 1452, column: 13, scope: !6489)
!6501 = !DILocation(line: 1453, column: 7, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 1453, column: 6)
!6503 = !DILocation(line: 1453, column: 6, scope: !6489)
!6504 = !DILocation(line: 1454, column: 3, scope: !6502)
!6505 = !DILocation(line: 1456, column: 16, scope: !6489)
!6506 = !DILocation(line: 1456, column: 28, scope: !6489)
!6507 = !DILocation(line: 1456, column: 32, scope: !6489)
!6508 = !DILocation(line: 1456, column: 8, scope: !6489)
!6509 = !DILocation(line: 1456, column: 6, scope: !6489)
!6510 = !DILocation(line: 1457, column: 29, scope: !6489)
!6511 = !DILocation(line: 1457, column: 50, scope: !6489)
!6512 = !DILocation(line: 1457, column: 55, scope: !6489)
!6513 = !DILocation(line: 1457, column: 2, scope: !6489)
!6514 = !DILocation(line: 1458, column: 29, scope: !6489)
!6515 = !DILocation(line: 1458, column: 50, scope: !6489)
!6516 = !DILocation(line: 1458, column: 55, scope: !6489)
!6517 = !DILocation(line: 1458, column: 2, scope: !6489)
!6518 = !DILocation(line: 1459, column: 29, scope: !6489)
!6519 = !DILocation(line: 1459, column: 50, scope: !6489)
!6520 = !DILocation(line: 1459, column: 55, scope: !6489)
!6521 = !DILocation(line: 1459, column: 2, scope: !6489)
!6522 = !DILocation(line: 1460, column: 29, scope: !6489)
!6523 = !DILocation(line: 1460, column: 49, scope: !6489)
!6524 = !DILocation(line: 1460, column: 54, scope: !6489)
!6525 = !DILocation(line: 1460, column: 2, scope: !6489)
!6526 = !DILocation(line: 1461, column: 29, scope: !6489)
!6527 = !DILocation(line: 1461, column: 51, scope: !6489)
!6528 = !DILocation(line: 1461, column: 56, scope: !6489)
!6529 = !DILocation(line: 1461, column: 2, scope: !6489)
!6530 = !DILocation(line: 1462, column: 29, scope: !6489)
!6531 = !DILocation(line: 1462, column: 51, scope: !6489)
!6532 = !DILocation(line: 1462, column: 56, scope: !6489)
!6533 = !DILocation(line: 1462, column: 2, scope: !6489)
!6534 = !DILocation(line: 1463, column: 29, scope: !6489)
!6535 = !DILocation(line: 1463, column: 51, scope: !6489)
!6536 = !DILocation(line: 1463, column: 56, scope: !6489)
!6537 = !DILocation(line: 1463, column: 2, scope: !6489)
!6538 = !DILocation(line: 1464, column: 1, scope: !6489)
!6539 = distinct !DISubprogram(name: "pci_restore_pasid_state", scope: !4228, file: !4228, line: 485, type: !3533, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6540 = !DILocalVariable(name: "pdev", arg: 1, scope: !6539, file: !4228, line: 485, type: !273)
!6541 = !DILocation(line: 485, column: 60, scope: !6539)
!6542 = !DILocation(line: 485, column: 68, scope: !6539)
!6543 = distinct !DISubprogram(name: "pci_restore_pri_state", scope: !4228, file: !4228, line: 477, type: !3533, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6544 = !DILocalVariable(name: "pdev", arg: 1, scope: !6543, file: !4228, line: 477, type: !273)
!6545 = !DILocation(line: 477, column: 58, scope: !6543)
!6546 = !DILocation(line: 477, column: 66, scope: !6543)
!6547 = distinct !DISubprogram(name: "pci_restore_rebar_state", scope: !3, file: !3, line: 1631, type: !3533, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6548 = !DILocalVariable(name: "pdev", arg: 1, scope: !6547, file: !3, line: 1631, type: !273)
!6549 = !DILocation(line: 1631, column: 53, scope: !6547)
!6550 = !DILocalVariable(name: "pos", scope: !6547, file: !3, line: 1633, type: !7)
!6551 = !DILocation(line: 1633, column: 15, scope: !6547)
!6552 = !DILocalVariable(name: "nbars", scope: !6547, file: !3, line: 1633, type: !7)
!6553 = !DILocation(line: 1633, column: 20, scope: !6547)
!6554 = !DILocalVariable(name: "i", scope: !6547, file: !3, line: 1633, type: !7)
!6555 = !DILocation(line: 1633, column: 27, scope: !6547)
!6556 = !DILocalVariable(name: "ctrl", scope: !6547, file: !3, line: 1634, type: !319)
!6557 = !DILocation(line: 1634, column: 6, scope: !6547)
!6558 = !DILocation(line: 1636, column: 32, scope: !6547)
!6559 = !DILocation(line: 1636, column: 8, scope: !6547)
!6560 = !DILocation(line: 1636, column: 6, scope: !6547)
!6561 = !DILocation(line: 1637, column: 7, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 1637, column: 6)
!6563 = !DILocation(line: 1637, column: 6, scope: !6547)
!6564 = !DILocation(line: 1638, column: 3, scope: !6562)
!6565 = !DILocation(line: 1640, column: 24, scope: !6547)
!6566 = !DILocation(line: 1640, column: 30, scope: !6547)
!6567 = !DILocation(line: 1640, column: 34, scope: !6547)
!6568 = !DILocation(line: 1640, column: 2, scope: !6547)
!6569 = !DILocation(line: 1641, column: 11, scope: !6547)
!6570 = !DILocation(line: 1641, column: 16, scope: !6547)
!6571 = !DILocation(line: 1641, column: 44, scope: !6547)
!6572 = !DILocation(line: 1641, column: 8, scope: !6547)
!6573 = !DILocation(line: 1644, column: 9, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 1644, column: 2)
!6575 = !DILocation(line: 1644, column: 7, scope: !6574)
!6576 = !DILocation(line: 1644, column: 14, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1644, column: 2)
!6578 = !DILocation(line: 1644, column: 18, scope: !6577)
!6579 = !DILocation(line: 1644, column: 16, scope: !6577)
!6580 = !DILocation(line: 1644, column: 2, scope: !6574)
!6581 = !DILocalVariable(name: "res", scope: !6582, file: !3, line: 1645, type: !4166)
!6582 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 1644, column: 40)
!6583 = !DILocation(line: 1645, column: 20, scope: !6582)
!6584 = !DILocalVariable(name: "bar_idx", scope: !6582, file: !3, line: 1646, type: !304)
!6585 = !DILocation(line: 1646, column: 7, scope: !6582)
!6586 = !DILocalVariable(name: "size", scope: !6582, file: !3, line: 1646, type: !304)
!6587 = !DILocation(line: 1646, column: 16, scope: !6582)
!6588 = !DILocation(line: 1648, column: 25, scope: !6582)
!6589 = !DILocation(line: 1648, column: 31, scope: !6582)
!6590 = !DILocation(line: 1648, column: 35, scope: !6582)
!6591 = !DILocation(line: 1648, column: 3, scope: !6582)
!6592 = !DILocation(line: 1649, column: 13, scope: !6582)
!6593 = !DILocation(line: 1649, column: 18, scope: !6582)
!6594 = !DILocation(line: 1649, column: 11, scope: !6582)
!6595 = !DILocation(line: 1650, column: 9, scope: !6582)
!6596 = !DILocation(line: 1650, column: 15, scope: !6582)
!6597 = !DILocation(line: 1650, column: 26, scope: !6582)
!6598 = !DILocation(line: 1650, column: 24, scope: !6582)
!6599 = !DILocation(line: 1650, column: 7, scope: !6582)
!6600 = !DILocation(line: 1651, column: 10, scope: !6582)
!6601 = !DILocation(line: 1651, column: 36, scope: !6582)
!6602 = !DILocation(line: 1651, column: 8, scope: !6582)
!6603 = !DILocation(line: 1652, column: 8, scope: !6582)
!6604 = !DILocation(line: 1653, column: 11, scope: !6582)
!6605 = !DILocation(line: 1653, column: 16, scope: !6582)
!6606 = !DILocation(line: 1653, column: 8, scope: !6582)
!6607 = !DILocation(line: 1654, column: 26, scope: !6582)
!6608 = !DILocation(line: 1654, column: 32, scope: !6582)
!6609 = !DILocation(line: 1654, column: 36, scope: !6582)
!6610 = !DILocation(line: 1654, column: 54, scope: !6582)
!6611 = !DILocation(line: 1654, column: 3, scope: !6582)
!6612 = !DILocation(line: 1655, column: 2, scope: !6582)
!6613 = !DILocation(line: 1644, column: 26, scope: !6577)
!6614 = !DILocation(line: 1644, column: 34, scope: !6577)
!6615 = !DILocation(line: 1644, column: 2, scope: !6577)
!6616 = distinct !{!6616, !6580, !6617}
!6617 = !DILocation(line: 1655, column: 2, scope: !6574)
!6618 = !DILocation(line: 1656, column: 1, scope: !6547)
!6619 = distinct !DISubprogram(name: "pci_restore_dpc_state", scope: !4228, file: !4228, line: 459, type: !3533, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6620 = !DILocalVariable(name: "dev", arg: 1, scope: !6619, file: !4228, line: 459, type: !273)
!6621 = !DILocation(line: 459, column: 58, scope: !6619)
!6622 = !DILocation(line: 459, column: 64, scope: !6619)
!6623 = distinct !DISubprogram(name: "pci_aer_clear_status", scope: !4228, file: !4228, line: 676, type: !3545, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6624 = !DILocalVariable(name: "dev", arg: 1, scope: !6623, file: !4228, line: 676, type: !273)
!6625 = !DILocation(line: 676, column: 56, scope: !6623)
!6626 = !DILocation(line: 676, column: 63, scope: !6623)
!6627 = distinct !DISubprogram(name: "pci_restore_aer_state", scope: !6404, file: !6404, line: 64, type: !3533, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6628 = !DILocalVariable(name: "dev", arg: 1, scope: !6627, file: !6404, line: 64, type: !273)
!6629 = !DILocation(line: 64, column: 58, scope: !6627)
!6630 = !DILocation(line: 64, column: 64, scope: !6627)
!6631 = distinct !DISubprogram(name: "pci_restore_config_space", scope: !3, file: !3, line: 1609, type: !3533, scopeLine: 1610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6632 = !DILocalVariable(name: "pdev", arg: 1, scope: !6631, file: !3, line: 1609, type: !273)
!6633 = !DILocation(line: 1609, column: 54, scope: !6631)
!6634 = !DILocation(line: 1611, column: 6, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 1611, column: 6)
!6636 = !DILocation(line: 1611, column: 12, scope: !6635)
!6637 = !DILocation(line: 1611, column: 21, scope: !6635)
!6638 = !DILocation(line: 1611, column: 6, scope: !6631)
!6639 = !DILocation(line: 1612, column: 34, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 1611, column: 48)
!6641 = !DILocation(line: 1612, column: 3, scope: !6640)
!6642 = !DILocation(line: 1614, column: 34, scope: !6640)
!6643 = !DILocation(line: 1614, column: 3, scope: !6640)
!6644 = !DILocation(line: 1615, column: 34, scope: !6640)
!6645 = !DILocation(line: 1615, column: 3, scope: !6640)
!6646 = !DILocation(line: 1616, column: 2, scope: !6640)
!6647 = !DILocation(line: 1616, column: 13, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 1616, column: 13)
!6649 = !DILocation(line: 1616, column: 19, scope: !6648)
!6650 = !DILocation(line: 1616, column: 28, scope: !6648)
!6651 = !DILocation(line: 1616, column: 13, scope: !6635)
!6652 = !DILocation(line: 1617, column: 34, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 1616, column: 55)
!6654 = !DILocation(line: 1617, column: 3, scope: !6653)
!6655 = !DILocation(line: 1624, column: 34, scope: !6653)
!6656 = !DILocation(line: 1624, column: 3, scope: !6653)
!6657 = !DILocation(line: 1625, column: 34, scope: !6653)
!6658 = !DILocation(line: 1625, column: 3, scope: !6653)
!6659 = !DILocation(line: 1626, column: 2, scope: !6653)
!6660 = !DILocation(line: 1627, column: 34, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 1626, column: 9)
!6662 = !DILocation(line: 1627, column: 3, scope: !6661)
!6663 = !DILocation(line: 1629, column: 1, scope: !6631)
!6664 = distinct !DISubprogram(name: "pci_restore_pcix_state", scope: !3, file: !3, line: 1487, type: !3533, scopeLine: 1488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6665 = !DILocalVariable(name: "dev", arg: 1, scope: !6664, file: !3, line: 1487, type: !273)
!6666 = !DILocation(line: 1487, column: 52, scope: !6664)
!6667 = !DILocalVariable(name: "i", scope: !6664, file: !3, line: 1489, type: !304)
!6668 = !DILocation(line: 1489, column: 6, scope: !6664)
!6669 = !DILocalVariable(name: "pos", scope: !6664, file: !3, line: 1489, type: !304)
!6670 = !DILocation(line: 1489, column: 13, scope: !6664)
!6671 = !DILocalVariable(name: "save_state", scope: !6664, file: !3, line: 1490, type: !4392)
!6672 = !DILocation(line: 1490, column: 30, scope: !6664)
!6673 = !DILocalVariable(name: "cap", scope: !6664, file: !3, line: 1491, type: !4689)
!6674 = !DILocation(line: 1491, column: 7, scope: !6664)
!6675 = !DILocation(line: 1493, column: 34, scope: !6664)
!6676 = !DILocation(line: 1493, column: 15, scope: !6664)
!6677 = !DILocation(line: 1493, column: 13, scope: !6664)
!6678 = !DILocation(line: 1494, column: 28, scope: !6664)
!6679 = !DILocation(line: 1494, column: 8, scope: !6664)
!6680 = !DILocation(line: 1494, column: 6, scope: !6664)
!6681 = !DILocation(line: 1495, column: 7, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1495, column: 6)
!6683 = !DILocation(line: 1495, column: 18, scope: !6682)
!6684 = !DILocation(line: 1495, column: 22, scope: !6682)
!6685 = !DILocation(line: 1495, column: 6, scope: !6664)
!6686 = !DILocation(line: 1496, column: 3, scope: !6682)
!6687 = !DILocation(line: 1497, column: 16, scope: !6664)
!6688 = !DILocation(line: 1497, column: 28, scope: !6664)
!6689 = !DILocation(line: 1497, column: 32, scope: !6664)
!6690 = !DILocation(line: 1497, column: 8, scope: !6664)
!6691 = !DILocation(line: 1497, column: 6, scope: !6664)
!6692 = !DILocation(line: 1499, column: 24, scope: !6664)
!6693 = !DILocation(line: 1499, column: 29, scope: !6664)
!6694 = !DILocation(line: 1499, column: 33, scope: !6664)
!6695 = !DILocation(line: 1499, column: 46, scope: !6664)
!6696 = !DILocation(line: 1499, column: 51, scope: !6664)
!6697 = !DILocation(line: 1499, column: 2, scope: !6664)
!6698 = !DILocation(line: 1500, column: 1, scope: !6664)
!6699 = distinct !DISubprogram(name: "pci_enable_acs", scope: !3, file: !3, line: 899, type: !3533, scopeLine: 900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6700 = !DILocalVariable(name: "dev", arg: 1, scope: !6699, file: !3, line: 899, type: !273)
!6701 = !DILocation(line: 899, column: 44, scope: !6699)
!6702 = !DILocation(line: 901, column: 7, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 901, column: 6)
!6704 = !DILocation(line: 901, column: 6, scope: !6699)
!6705 = !DILocation(line: 902, column: 3, scope: !6703)
!6706 = !DILocation(line: 904, column: 35, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 904, column: 6)
!6708 = !DILocation(line: 904, column: 7, scope: !6707)
!6709 = !DILocation(line: 904, column: 6, scope: !6699)
!6710 = !DILocation(line: 905, column: 3, scope: !6707)
!6711 = !DILocation(line: 907, column: 21, scope: !6699)
!6712 = !DILocation(line: 907, column: 2, scope: !6699)
!6713 = !DILabel(scope: !6699, name: "disable_acs_redir", file: !3, line: 909)
!6714 = !DILocation(line: 909, column: 1, scope: !6699)
!6715 = !DILocation(line: 917, column: 24, scope: !6699)
!6716 = !DILocation(line: 917, column: 2, scope: !6699)
!6717 = !DILocation(line: 918, column: 1, scope: !6699)
!6718 = distinct !DISubprogram(name: "pci_store_saved_state", scope: !3, file: !3, line: 1709, type: !6719, scopeLine: 1710, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6719 = !DISubroutineType(types: !6720)
!6720 = !{!6721, !273}
!6721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6722, size: 64)
!6722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_saved_state", file: !3, line: 1697, size: 512, elements: !6723)
!6723 = !{!6724, !6725}
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "config_space", scope: !6722, file: !3, line: 1698, baseType: !3916, size: 512)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !6722, file: !3, line: 1699, baseType: !6726, offset: 512)
!6726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4397, elements: !2449)
!6727 = !DILocalVariable(name: "dev", arg: 1, scope: !6718, file: !3, line: 1709, type: !273)
!6728 = !DILocation(line: 1709, column: 63, scope: !6718)
!6729 = !DILocalVariable(name: "state", scope: !6718, file: !3, line: 1711, type: !6721)
!6730 = !DILocation(line: 1711, column: 26, scope: !6718)
!6731 = !DILocalVariable(name: "tmp", scope: !6718, file: !3, line: 1712, type: !4392)
!6732 = !DILocation(line: 1712, column: 30, scope: !6718)
!6733 = !DILocalVariable(name: "cap", scope: !6718, file: !3, line: 1713, type: !4404)
!6734 = !DILocation(line: 1713, column: 29, scope: !6718)
!6735 = !DILocalVariable(name: "size", scope: !6718, file: !3, line: 1714, type: !445)
!6736 = !DILocation(line: 1714, column: 9, scope: !6718)
!6737 = !DILocation(line: 1716, column: 7, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 1716, column: 6)
!6739 = !DILocation(line: 1716, column: 12, scope: !6738)
!6740 = !DILocation(line: 1716, column: 6, scope: !6718)
!6741 = !DILocation(line: 1717, column: 3, scope: !6738)
!6742 = !DILocation(line: 1719, column: 7, scope: !6718)
!6743 = !DILocalVariable(name: "____ptr", scope: !6744, file: !3, line: 1721, type: !757)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 1721, column: 2)
!6745 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 1721, column: 2)
!6746 = !DILocation(line: 1721, column: 2, scope: !6744)
!6747 = !DILocalVariable(name: "__mptr", scope: !6748, file: !3, line: 1721, type: !258)
!6748 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 1721, column: 2)
!6749 = !DILocation(line: 1721, column: 2, scope: !6748)
!6750 = !DILocation(line: 1721, column: 2, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 1721, column: 2)
!6752 = !DILocation(line: 1721, column: 2, scope: !6745)
!6753 = !DILocation(line: 1721, column: 2, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 1721, column: 2)
!6755 = !DILocation(line: 1722, column: 47, scope: !6754)
!6756 = !DILocation(line: 1722, column: 52, scope: !6754)
!6757 = !DILocation(line: 1722, column: 56, scope: !6754)
!6758 = !DILocation(line: 1722, column: 45, scope: !6754)
!6759 = !DILocation(line: 1722, column: 8, scope: !6754)
!6760 = !DILocation(line: 1722, column: 3, scope: !6754)
!6761 = !DILocalVariable(name: "____ptr", scope: !6762, file: !3, line: 1721, type: !757)
!6762 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 1721, column: 2)
!6763 = !DILocation(line: 1721, column: 2, scope: !6762)
!6764 = !DILocalVariable(name: "__mptr", scope: !6765, file: !3, line: 1721, type: !258)
!6765 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 1721, column: 2)
!6766 = !DILocation(line: 1721, column: 2, scope: !6765)
!6767 = !DILocation(line: 1721, column: 2, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1721, column: 2)
!6769 = distinct !{!6769, !6752, !6770}
!6770 = !DILocation(line: 1722, column: 56, scope: !6745)
!6771 = !DILocation(line: 1724, column: 18, scope: !6718)
!6772 = !DILocation(line: 1724, column: 10, scope: !6718)
!6773 = !DILocation(line: 1724, column: 8, scope: !6718)
!6774 = !DILocation(line: 1725, column: 7, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 1725, column: 6)
!6776 = !DILocation(line: 1725, column: 6, scope: !6718)
!6777 = !DILocation(line: 1726, column: 3, scope: !6775)
!6778 = !DILocation(line: 1728, column: 9, scope: !6718)
!6779 = !DILocation(line: 1728, column: 16, scope: !6718)
!6780 = !DILocation(line: 1728, column: 2, scope: !6718)
!6781 = !DILocation(line: 1728, column: 30, scope: !6718)
!6782 = !DILocation(line: 1728, column: 35, scope: !6718)
!6783 = !DILocation(line: 1731, column: 8, scope: !6718)
!6784 = !DILocation(line: 1731, column: 15, scope: !6718)
!6785 = !DILocation(line: 1731, column: 6, scope: !6718)
!6786 = !DILocalVariable(name: "____ptr", scope: !6787, file: !3, line: 1732, type: !757)
!6787 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 1732, column: 2)
!6788 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 1732, column: 2)
!6789 = !DILocation(line: 1732, column: 2, scope: !6787)
!6790 = !DILocalVariable(name: "__mptr", scope: !6791, file: !3, line: 1732, type: !258)
!6791 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 1732, column: 2)
!6792 = !DILocation(line: 1732, column: 2, scope: !6791)
!6793 = !DILocation(line: 1732, column: 2, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 1732, column: 2)
!6795 = !DILocation(line: 1732, column: 2, scope: !6788)
!6796 = !DILocation(line: 1732, column: 2, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 1732, column: 2)
!6798 = !DILocalVariable(name: "len", scope: !6799, file: !3, line: 1733, type: !445)
!6799 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 1732, column: 57)
!6800 = !DILocation(line: 1733, column: 10, scope: !6799)
!6801 = !DILocation(line: 1733, column: 52, scope: !6799)
!6802 = !DILocation(line: 1733, column: 57, scope: !6799)
!6803 = !DILocation(line: 1733, column: 61, scope: !6799)
!6804 = !DILocation(line: 1733, column: 50, scope: !6799)
!6805 = !DILocation(line: 1734, column: 10, scope: !6799)
!6806 = !DILocation(line: 1734, column: 3, scope: !6799)
!6807 = !DILocation(line: 1734, column: 16, scope: !6799)
!6808 = !DILocation(line: 1734, column: 21, scope: !6799)
!6809 = !DILocation(line: 1734, column: 26, scope: !6799)
!6810 = !DILocation(line: 1735, column: 45, scope: !6799)
!6811 = !DILocation(line: 1735, column: 39, scope: !6799)
!6812 = !DILocation(line: 1735, column: 51, scope: !6799)
!6813 = !DILocation(line: 1735, column: 49, scope: !6799)
!6814 = !DILocation(line: 1735, column: 9, scope: !6799)
!6815 = !DILocation(line: 1735, column: 7, scope: !6799)
!6816 = !DILocation(line: 1736, column: 2, scope: !6799)
!6817 = !DILocalVariable(name: "____ptr", scope: !6818, file: !3, line: 1732, type: !757)
!6818 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 1732, column: 2)
!6819 = !DILocation(line: 1732, column: 2, scope: !6818)
!6820 = !DILocalVariable(name: "__mptr", scope: !6821, file: !3, line: 1732, type: !258)
!6821 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 1732, column: 2)
!6822 = !DILocation(line: 1732, column: 2, scope: !6821)
!6823 = !DILocation(line: 1732, column: 2, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 1732, column: 2)
!6825 = distinct !{!6825, !6795, !6826}
!6826 = !DILocation(line: 1736, column: 2, scope: !6788)
!6827 = !DILocation(line: 1739, column: 9, scope: !6718)
!6828 = !DILocation(line: 1739, column: 2, scope: !6718)
!6829 = !DILocation(line: 1740, column: 1, scope: !6718)
!6830 = distinct !DISubprogram(name: "kzalloc", scope: !204, file: !204, line: 662, type: !6831, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6831 = !DISubroutineType(types: !6832)
!6832 = !{!258, !445, !863}
!6833 = !DILocalVariable(name: "s", arg: 1, scope: !6834, file: !204, line: 445, type: !1055)
!6834 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !204, file: !204, line: 445, type: !6835, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6835 = !DISubroutineType(types: !6836)
!6836 = !{!258, !1055, !863, !445}
!6837 = !DILocation(line: 445, column: 72, scope: !6834, inlinedAt: !6838)
!6838 = distinct !DILocation(line: 552, column: 10, scope: !6839, inlinedAt: !6842)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !204, line: 540, column: 34)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !204, line: 540, column: 6)
!6841 = distinct !DISubprogram(name: "kmalloc", scope: !204, file: !204, line: 538, type: !6831, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6842 = distinct !DILocation(line: 664, column: 9, scope: !6830)
!6843 = !DILocalVariable(name: "flags", arg: 2, scope: !6834, file: !204, line: 446, type: !863)
!6844 = !DILocation(line: 446, column: 9, scope: !6834, inlinedAt: !6838)
!6845 = !DILocalVariable(name: "size", arg: 3, scope: !6834, file: !204, line: 446, type: !445)
!6846 = !DILocation(line: 446, column: 23, scope: !6834, inlinedAt: !6838)
!6847 = !DILocalVariable(name: "ret", scope: !6834, file: !204, line: 448, type: !258)
!6848 = !DILocation(line: 448, column: 8, scope: !6834, inlinedAt: !6838)
!6849 = !DILocalVariable(name: "flags", arg: 1, scope: !6850, file: !204, line: 318, type: !863)
!6850 = distinct !DISubprogram(name: "kmalloc_type", scope: !204, file: !204, line: 318, type: !6851, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6851 = !DISubroutineType(types: !6852)
!6852 = !{!203, !863}
!6853 = !DILocation(line: 318, column: 67, scope: !6850, inlinedAt: !6854)
!6854 = distinct !DILocation(line: 553, column: 20, scope: !6839, inlinedAt: !6842)
!6855 = !DILocalVariable(name: "size", arg: 1, scope: !6856, file: !204, line: 346, type: !445)
!6856 = distinct !DISubprogram(name: "kmalloc_index", scope: !204, file: !204, line: 346, type: !6857, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6857 = !DISubroutineType(types: !6858)
!6858 = !{!7, !445}
!6859 = !DILocation(line: 346, column: 58, scope: !6856, inlinedAt: !6860)
!6860 = distinct !DILocation(line: 547, column: 11, scope: !6839, inlinedAt: !6842)
!6861 = !DILocalVariable(name: "size", arg: 1, scope: !6862, file: !204, line: 472, type: !445)
!6862 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !204, file: !204, line: 472, type: !6863, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6863 = !DISubroutineType(types: !6864)
!6864 = !{!258, !445, !863, !7}
!6865 = !DILocation(line: 472, column: 28, scope: !6862, inlinedAt: !6866)
!6866 = distinct !DILocation(line: 481, column: 9, scope: !6867, inlinedAt: !6868)
!6867 = distinct !DISubprogram(name: "kmalloc_large", scope: !204, file: !204, line: 478, type: !6831, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6868 = distinct !DILocation(line: 545, column: 11, scope: !6869, inlinedAt: !6842)
!6869 = distinct !DILexicalBlock(scope: !6839, file: !204, line: 544, column: 7)
!6870 = !DILocalVariable(name: "flags", arg: 2, scope: !6862, file: !204, line: 472, type: !863)
!6871 = !DILocation(line: 472, column: 40, scope: !6862, inlinedAt: !6866)
!6872 = !DILocalVariable(name: "order", arg: 3, scope: !6862, file: !204, line: 472, type: !7)
!6873 = !DILocation(line: 472, column: 60, scope: !6862, inlinedAt: !6866)
!6874 = !DILocalVariable(name: "size", arg: 1, scope: !6867, file: !204, line: 478, type: !445)
!6875 = !DILocation(line: 478, column: 51, scope: !6867, inlinedAt: !6868)
!6876 = !DILocalVariable(name: "flags", arg: 2, scope: !6867, file: !204, line: 478, type: !863)
!6877 = !DILocation(line: 478, column: 63, scope: !6867, inlinedAt: !6868)
!6878 = !DILocalVariable(name: "order", scope: !6867, file: !204, line: 480, type: !7)
!6879 = !DILocation(line: 480, column: 15, scope: !6867, inlinedAt: !6868)
!6880 = !DILocalVariable(name: "size", arg: 1, scope: !6841, file: !204, line: 538, type: !445)
!6881 = !DILocation(line: 538, column: 45, scope: !6841, inlinedAt: !6842)
!6882 = !DILocalVariable(name: "flags", arg: 2, scope: !6841, file: !204, line: 538, type: !863)
!6883 = !DILocation(line: 538, column: 57, scope: !6841, inlinedAt: !6842)
!6884 = !DILocalVariable(name: "index", scope: !6839, file: !204, line: 542, type: !7)
!6885 = !DILocation(line: 542, column: 16, scope: !6839, inlinedAt: !6842)
!6886 = !DILocalVariable(name: "size", arg: 1, scope: !6830, file: !204, line: 662, type: !445)
!6887 = !DILocation(line: 662, column: 36, scope: !6830)
!6888 = !DILocalVariable(name: "flags", arg: 2, scope: !6830, file: !204, line: 662, type: !863)
!6889 = !DILocation(line: 662, column: 48, scope: !6830)
!6890 = !DILocation(line: 664, column: 17, scope: !6830)
!6891 = !DILocation(line: 664, column: 23, scope: !6830)
!6892 = !DILocation(line: 664, column: 29, scope: !6830)
!6893 = !DILocation(line: 540, column: 27, scope: !6840, inlinedAt: !6842)
!6894 = !DILocation(line: 540, column: 6, scope: !6840, inlinedAt: !6842)
!6895 = !DILocation(line: 540, column: 6, scope: !6841, inlinedAt: !6842)
!6896 = !DILocation(line: 544, column: 7, scope: !6869, inlinedAt: !6842)
!6897 = !DILocation(line: 544, column: 12, scope: !6869, inlinedAt: !6842)
!6898 = !DILocation(line: 544, column: 7, scope: !6839, inlinedAt: !6842)
!6899 = !DILocation(line: 545, column: 25, scope: !6869, inlinedAt: !6842)
!6900 = !DILocation(line: 545, column: 31, scope: !6869, inlinedAt: !6842)
!6901 = !DILocation(line: 480, column: 33, scope: !6867, inlinedAt: !6868)
!6902 = !DILocation(line: 480, column: 23, scope: !6867, inlinedAt: !6868)
!6903 = !DILocation(line: 481, column: 29, scope: !6867, inlinedAt: !6868)
!6904 = !DILocation(line: 481, column: 35, scope: !6867, inlinedAt: !6868)
!6905 = !DILocation(line: 481, column: 42, scope: !6867, inlinedAt: !6868)
!6906 = !DILocation(line: 474, column: 23, scope: !6862, inlinedAt: !6866)
!6907 = !DILocation(line: 474, column: 29, scope: !6862, inlinedAt: !6866)
!6908 = !DILocation(line: 474, column: 36, scope: !6862, inlinedAt: !6866)
!6909 = !DILocation(line: 474, column: 9, scope: !6862, inlinedAt: !6866)
!6910 = !DILocation(line: 545, column: 4, scope: !6869, inlinedAt: !6842)
!6911 = !DILocation(line: 547, column: 25, scope: !6839, inlinedAt: !6842)
!6912 = !DILocation(line: 348, column: 7, scope: !6913, inlinedAt: !6860)
!6913 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 348, column: 6)
!6914 = !DILocation(line: 348, column: 6, scope: !6856, inlinedAt: !6860)
!6915 = !DILocation(line: 349, column: 3, scope: !6913, inlinedAt: !6860)
!6916 = !DILocation(line: 351, column: 6, scope: !6917, inlinedAt: !6860)
!6917 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 351, column: 6)
!6918 = !DILocation(line: 351, column: 11, scope: !6917, inlinedAt: !6860)
!6919 = !DILocation(line: 351, column: 6, scope: !6856, inlinedAt: !6860)
!6920 = !DILocation(line: 352, column: 3, scope: !6917, inlinedAt: !6860)
!6921 = !DILocation(line: 354, column: 32, scope: !6922, inlinedAt: !6860)
!6922 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 354, column: 6)
!6923 = !DILocation(line: 354, column: 37, scope: !6922, inlinedAt: !6860)
!6924 = !DILocation(line: 354, column: 42, scope: !6922, inlinedAt: !6860)
!6925 = !DILocation(line: 354, column: 45, scope: !6922, inlinedAt: !6860)
!6926 = !DILocation(line: 354, column: 50, scope: !6922, inlinedAt: !6860)
!6927 = !DILocation(line: 354, column: 6, scope: !6856, inlinedAt: !6860)
!6928 = !DILocation(line: 355, column: 3, scope: !6922, inlinedAt: !6860)
!6929 = !DILocation(line: 356, column: 32, scope: !6930, inlinedAt: !6860)
!6930 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 356, column: 6)
!6931 = !DILocation(line: 356, column: 37, scope: !6930, inlinedAt: !6860)
!6932 = !DILocation(line: 356, column: 43, scope: !6930, inlinedAt: !6860)
!6933 = !DILocation(line: 356, column: 46, scope: !6930, inlinedAt: !6860)
!6934 = !DILocation(line: 356, column: 51, scope: !6930, inlinedAt: !6860)
!6935 = !DILocation(line: 356, column: 6, scope: !6856, inlinedAt: !6860)
!6936 = !DILocation(line: 357, column: 3, scope: !6930, inlinedAt: !6860)
!6937 = !DILocation(line: 358, column: 6, scope: !6938, inlinedAt: !6860)
!6938 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 358, column: 6)
!6939 = !DILocation(line: 358, column: 11, scope: !6938, inlinedAt: !6860)
!6940 = !DILocation(line: 358, column: 6, scope: !6856, inlinedAt: !6860)
!6941 = !DILocation(line: 358, column: 26, scope: !6938, inlinedAt: !6860)
!6942 = !DILocation(line: 359, column: 6, scope: !6943, inlinedAt: !6860)
!6943 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 359, column: 6)
!6944 = !DILocation(line: 359, column: 11, scope: !6943, inlinedAt: !6860)
!6945 = !DILocation(line: 359, column: 6, scope: !6856, inlinedAt: !6860)
!6946 = !DILocation(line: 359, column: 26, scope: !6943, inlinedAt: !6860)
!6947 = !DILocation(line: 360, column: 6, scope: !6948, inlinedAt: !6860)
!6948 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 360, column: 6)
!6949 = !DILocation(line: 360, column: 11, scope: !6948, inlinedAt: !6860)
!6950 = !DILocation(line: 360, column: 6, scope: !6856, inlinedAt: !6860)
!6951 = !DILocation(line: 360, column: 26, scope: !6948, inlinedAt: !6860)
!6952 = !DILocation(line: 361, column: 6, scope: !6953, inlinedAt: !6860)
!6953 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 361, column: 6)
!6954 = !DILocation(line: 361, column: 11, scope: !6953, inlinedAt: !6860)
!6955 = !DILocation(line: 361, column: 6, scope: !6856, inlinedAt: !6860)
!6956 = !DILocation(line: 361, column: 26, scope: !6953, inlinedAt: !6860)
!6957 = !DILocation(line: 362, column: 6, scope: !6958, inlinedAt: !6860)
!6958 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 362, column: 6)
!6959 = !DILocation(line: 362, column: 11, scope: !6958, inlinedAt: !6860)
!6960 = !DILocation(line: 362, column: 6, scope: !6856, inlinedAt: !6860)
!6961 = !DILocation(line: 362, column: 26, scope: !6958, inlinedAt: !6860)
!6962 = !DILocation(line: 363, column: 6, scope: !6963, inlinedAt: !6860)
!6963 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 363, column: 6)
!6964 = !DILocation(line: 363, column: 11, scope: !6963, inlinedAt: !6860)
!6965 = !DILocation(line: 363, column: 6, scope: !6856, inlinedAt: !6860)
!6966 = !DILocation(line: 363, column: 26, scope: !6963, inlinedAt: !6860)
!6967 = !DILocation(line: 364, column: 6, scope: !6968, inlinedAt: !6860)
!6968 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 364, column: 6)
!6969 = !DILocation(line: 364, column: 11, scope: !6968, inlinedAt: !6860)
!6970 = !DILocation(line: 364, column: 6, scope: !6856, inlinedAt: !6860)
!6971 = !DILocation(line: 364, column: 26, scope: !6968, inlinedAt: !6860)
!6972 = !DILocation(line: 365, column: 6, scope: !6973, inlinedAt: !6860)
!6973 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 365, column: 6)
!6974 = !DILocation(line: 365, column: 11, scope: !6973, inlinedAt: !6860)
!6975 = !DILocation(line: 365, column: 6, scope: !6856, inlinedAt: !6860)
!6976 = !DILocation(line: 365, column: 26, scope: !6973, inlinedAt: !6860)
!6977 = !DILocation(line: 366, column: 6, scope: !6978, inlinedAt: !6860)
!6978 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 366, column: 6)
!6979 = !DILocation(line: 366, column: 11, scope: !6978, inlinedAt: !6860)
!6980 = !DILocation(line: 366, column: 6, scope: !6856, inlinedAt: !6860)
!6981 = !DILocation(line: 366, column: 26, scope: !6978, inlinedAt: !6860)
!6982 = !DILocation(line: 367, column: 6, scope: !6983, inlinedAt: !6860)
!6983 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 367, column: 6)
!6984 = !DILocation(line: 367, column: 11, scope: !6983, inlinedAt: !6860)
!6985 = !DILocation(line: 367, column: 6, scope: !6856, inlinedAt: !6860)
!6986 = !DILocation(line: 367, column: 26, scope: !6983, inlinedAt: !6860)
!6987 = !DILocation(line: 368, column: 6, scope: !6988, inlinedAt: !6860)
!6988 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 368, column: 6)
!6989 = !DILocation(line: 368, column: 11, scope: !6988, inlinedAt: !6860)
!6990 = !DILocation(line: 368, column: 6, scope: !6856, inlinedAt: !6860)
!6991 = !DILocation(line: 368, column: 26, scope: !6988, inlinedAt: !6860)
!6992 = !DILocation(line: 369, column: 6, scope: !6993, inlinedAt: !6860)
!6993 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 369, column: 6)
!6994 = !DILocation(line: 369, column: 11, scope: !6993, inlinedAt: !6860)
!6995 = !DILocation(line: 369, column: 6, scope: !6856, inlinedAt: !6860)
!6996 = !DILocation(line: 369, column: 26, scope: !6993, inlinedAt: !6860)
!6997 = !DILocation(line: 370, column: 6, scope: !6998, inlinedAt: !6860)
!6998 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 370, column: 6)
!6999 = !DILocation(line: 370, column: 11, scope: !6998, inlinedAt: !6860)
!7000 = !DILocation(line: 370, column: 6, scope: !6856, inlinedAt: !6860)
!7001 = !DILocation(line: 370, column: 26, scope: !6998, inlinedAt: !6860)
!7002 = !DILocation(line: 371, column: 6, scope: !7003, inlinedAt: !6860)
!7003 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 371, column: 6)
!7004 = !DILocation(line: 371, column: 11, scope: !7003, inlinedAt: !6860)
!7005 = !DILocation(line: 371, column: 6, scope: !6856, inlinedAt: !6860)
!7006 = !DILocation(line: 371, column: 26, scope: !7003, inlinedAt: !6860)
!7007 = !DILocation(line: 372, column: 6, scope: !7008, inlinedAt: !6860)
!7008 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 372, column: 6)
!7009 = !DILocation(line: 372, column: 11, scope: !7008, inlinedAt: !6860)
!7010 = !DILocation(line: 372, column: 6, scope: !6856, inlinedAt: !6860)
!7011 = !DILocation(line: 372, column: 26, scope: !7008, inlinedAt: !6860)
!7012 = !DILocation(line: 373, column: 6, scope: !7013, inlinedAt: !6860)
!7013 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 373, column: 6)
!7014 = !DILocation(line: 373, column: 11, scope: !7013, inlinedAt: !6860)
!7015 = !DILocation(line: 373, column: 6, scope: !6856, inlinedAt: !6860)
!7016 = !DILocation(line: 373, column: 26, scope: !7013, inlinedAt: !6860)
!7017 = !DILocation(line: 374, column: 6, scope: !7018, inlinedAt: !6860)
!7018 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 374, column: 6)
!7019 = !DILocation(line: 374, column: 11, scope: !7018, inlinedAt: !6860)
!7020 = !DILocation(line: 374, column: 6, scope: !6856, inlinedAt: !6860)
!7021 = !DILocation(line: 374, column: 26, scope: !7018, inlinedAt: !6860)
!7022 = !DILocation(line: 375, column: 6, scope: !7023, inlinedAt: !6860)
!7023 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 375, column: 6)
!7024 = !DILocation(line: 375, column: 11, scope: !7023, inlinedAt: !6860)
!7025 = !DILocation(line: 375, column: 6, scope: !6856, inlinedAt: !6860)
!7026 = !DILocation(line: 375, column: 27, scope: !7023, inlinedAt: !6860)
!7027 = !DILocation(line: 376, column: 6, scope: !7028, inlinedAt: !6860)
!7028 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 376, column: 6)
!7029 = !DILocation(line: 376, column: 11, scope: !7028, inlinedAt: !6860)
!7030 = !DILocation(line: 376, column: 6, scope: !6856, inlinedAt: !6860)
!7031 = !DILocation(line: 376, column: 32, scope: !7028, inlinedAt: !6860)
!7032 = !DILocation(line: 377, column: 6, scope: !7033, inlinedAt: !6860)
!7033 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 377, column: 6)
!7034 = !DILocation(line: 377, column: 11, scope: !7033, inlinedAt: !6860)
!7035 = !DILocation(line: 377, column: 6, scope: !6856, inlinedAt: !6860)
!7036 = !DILocation(line: 377, column: 32, scope: !7033, inlinedAt: !6860)
!7037 = !DILocation(line: 378, column: 6, scope: !7038, inlinedAt: !6860)
!7038 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 378, column: 6)
!7039 = !DILocation(line: 378, column: 11, scope: !7038, inlinedAt: !6860)
!7040 = !DILocation(line: 378, column: 6, scope: !6856, inlinedAt: !6860)
!7041 = !DILocation(line: 378, column: 32, scope: !7038, inlinedAt: !6860)
!7042 = !DILocation(line: 379, column: 6, scope: !7043, inlinedAt: !6860)
!7043 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 379, column: 6)
!7044 = !DILocation(line: 379, column: 11, scope: !7043, inlinedAt: !6860)
!7045 = !DILocation(line: 379, column: 6, scope: !6856, inlinedAt: !6860)
!7046 = !DILocation(line: 379, column: 33, scope: !7043, inlinedAt: !6860)
!7047 = !DILocation(line: 380, column: 6, scope: !7048, inlinedAt: !6860)
!7048 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 380, column: 6)
!7049 = !DILocation(line: 380, column: 11, scope: !7048, inlinedAt: !6860)
!7050 = !DILocation(line: 380, column: 6, scope: !6856, inlinedAt: !6860)
!7051 = !DILocation(line: 380, column: 33, scope: !7048, inlinedAt: !6860)
!7052 = !DILocation(line: 381, column: 6, scope: !7053, inlinedAt: !6860)
!7053 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 381, column: 6)
!7054 = !DILocation(line: 381, column: 11, scope: !7053, inlinedAt: !6860)
!7055 = !DILocation(line: 381, column: 6, scope: !6856, inlinedAt: !6860)
!7056 = !DILocation(line: 381, column: 33, scope: !7053, inlinedAt: !6860)
!7057 = !DILocation(line: 382, column: 2, scope: !7058, inlinedAt: !6860)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !204, line: 382, column: 2)
!7059 = distinct !DILexicalBlock(scope: !6856, file: !204, line: 382, column: 2)
!7060 = !{i32 -2144047036, i32 -2144047007, i32 -2144046961, i32 -2144046903, i32 -2144046849, i32 -2144046795, i32 -2144046740, i32 -2144046709}
!7061 = !DILocation(line: 382, column: 2, scope: !7062, inlinedAt: !6860)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !204, line: 382, column: 2)
!7063 = distinct !DILexicalBlock(scope: !7059, file: !204, line: 382, column: 2)
!7064 = !{i32 -2144046266, i32 -2144046259, i32 -2144046205, i32 -2144046174, i32 -2144046144}
!7065 = !DILocation(line: 382, column: 2, scope: !7063, inlinedAt: !6860)
!7066 = !DILocation(line: 386, column: 1, scope: !6856, inlinedAt: !6860)
!7067 = !DILocation(line: 547, column: 9, scope: !6839, inlinedAt: !6842)
!7068 = !DILocation(line: 549, column: 8, scope: !7069, inlinedAt: !6842)
!7069 = distinct !DILexicalBlock(scope: !6839, file: !204, line: 549, column: 7)
!7070 = !DILocation(line: 549, column: 7, scope: !6839, inlinedAt: !6842)
!7071 = !DILocation(line: 550, column: 4, scope: !7069, inlinedAt: !6842)
!7072 = !DILocation(line: 553, column: 33, scope: !6839, inlinedAt: !6842)
!7073 = !DILocation(line: 325, column: 6, scope: !7074, inlinedAt: !6854)
!7074 = distinct !DILexicalBlock(scope: !6850, file: !204, line: 325, column: 6)
!7075 = !DILocation(line: 325, column: 6, scope: !6850, inlinedAt: !6854)
!7076 = !DILocation(line: 326, column: 3, scope: !7074, inlinedAt: !6854)
!7077 = !DILocation(line: 332, column: 9, scope: !6850, inlinedAt: !6854)
!7078 = !DILocation(line: 332, column: 15, scope: !6850, inlinedAt: !6854)
!7079 = !DILocation(line: 332, column: 2, scope: !6850, inlinedAt: !6854)
!7080 = !DILocation(line: 336, column: 1, scope: !6850, inlinedAt: !6854)
!7081 = !DILocation(line: 553, column: 5, scope: !6839, inlinedAt: !6842)
!7082 = !DILocation(line: 553, column: 41, scope: !6839, inlinedAt: !6842)
!7083 = !DILocation(line: 554, column: 5, scope: !6839, inlinedAt: !6842)
!7084 = !DILocation(line: 554, column: 12, scope: !6839, inlinedAt: !6842)
!7085 = !DILocation(line: 448, column: 31, scope: !6834, inlinedAt: !6838)
!7086 = !DILocation(line: 448, column: 34, scope: !6834, inlinedAt: !6838)
!7087 = !DILocation(line: 448, column: 14, scope: !6834, inlinedAt: !6838)
!7088 = !DILocation(line: 450, column: 22, scope: !6834, inlinedAt: !6838)
!7089 = !DILocation(line: 450, column: 25, scope: !6834, inlinedAt: !6838)
!7090 = !DILocation(line: 450, column: 30, scope: !6834, inlinedAt: !6838)
!7091 = !DILocation(line: 450, column: 36, scope: !6834, inlinedAt: !6838)
!7092 = !DILocation(line: 450, column: 8, scope: !6834, inlinedAt: !6838)
!7093 = !DILocation(line: 450, column: 6, scope: !6834, inlinedAt: !6838)
!7094 = !DILocation(line: 451, column: 9, scope: !6834, inlinedAt: !6838)
!7095 = !DILocation(line: 552, column: 3, scope: !6839, inlinedAt: !6842)
!7096 = !DILocation(line: 557, column: 19, scope: !6841, inlinedAt: !6842)
!7097 = !DILocation(line: 557, column: 25, scope: !6841, inlinedAt: !6842)
!7098 = !DILocation(line: 557, column: 9, scope: !6841, inlinedAt: !6842)
!7099 = !DILocation(line: 557, column: 2, scope: !6841, inlinedAt: !6842)
!7100 = !DILocation(line: 558, column: 1, scope: !6841, inlinedAt: !6842)
!7101 = !DILocation(line: 664, column: 2, scope: !6830)
!7102 = distinct !DISubprogram(name: "pci_load_saved_state", scope: !3, file: !3, line: 1748, type: !7103, scopeLine: 1750, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{!304, !273, !6721}
!7105 = !DILocalVariable(name: "dev", arg: 1, scope: !7102, file: !3, line: 1748, type: !273)
!7106 = !DILocation(line: 1748, column: 42, scope: !7102)
!7107 = !DILocalVariable(name: "state", arg: 2, scope: !7102, file: !3, line: 1749, type: !6721)
!7108 = !DILocation(line: 1749, column: 29, scope: !7102)
!7109 = !DILocalVariable(name: "cap", scope: !7102, file: !3, line: 1751, type: !4404)
!7110 = !DILocation(line: 1751, column: 29, scope: !7102)
!7111 = !DILocation(line: 1753, column: 2, scope: !7102)
!7112 = !DILocation(line: 1753, column: 7, scope: !7102)
!7113 = !DILocation(line: 1753, column: 19, scope: !7102)
!7114 = !DILocation(line: 1755, column: 7, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 1755, column: 6)
!7116 = !DILocation(line: 1755, column: 6, scope: !7102)
!7117 = !DILocation(line: 1756, column: 3, scope: !7115)
!7118 = !DILocation(line: 1758, column: 9, scope: !7102)
!7119 = !DILocation(line: 1758, column: 14, scope: !7102)
!7120 = !DILocation(line: 1758, column: 2, scope: !7102)
!7121 = !DILocation(line: 1758, column: 34, scope: !7102)
!7122 = !DILocation(line: 1758, column: 41, scope: !7102)
!7123 = !DILocation(line: 1761, column: 8, scope: !7102)
!7124 = !DILocation(line: 1761, column: 15, scope: !7102)
!7125 = !DILocation(line: 1761, column: 6, scope: !7102)
!7126 = !DILocation(line: 1762, column: 2, scope: !7102)
!7127 = !DILocation(line: 1762, column: 9, scope: !7102)
!7128 = !DILocation(line: 1762, column: 14, scope: !7102)
!7129 = !DILocalVariable(name: "tmp", scope: !7130, file: !3, line: 1763, type: !4392)
!7130 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 1762, column: 20)
!7131 = !DILocation(line: 1763, column: 31, scope: !7130)
!7132 = !DILocation(line: 1765, column: 29, scope: !7130)
!7133 = !DILocation(line: 1765, column: 34, scope: !7130)
!7134 = !DILocation(line: 1765, column: 39, scope: !7130)
!7135 = !DILocation(line: 1765, column: 47, scope: !7130)
!7136 = !DILocation(line: 1765, column: 52, scope: !7130)
!7137 = !DILocation(line: 1765, column: 9, scope: !7130)
!7138 = !DILocation(line: 1765, column: 7, scope: !7130)
!7139 = !DILocation(line: 1766, column: 8, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 1766, column: 7)
!7141 = !DILocation(line: 1766, column: 12, scope: !7140)
!7142 = !DILocation(line: 1766, column: 15, scope: !7140)
!7143 = !DILocation(line: 1766, column: 20, scope: !7140)
!7144 = !DILocation(line: 1766, column: 24, scope: !7140)
!7145 = !DILocation(line: 1766, column: 32, scope: !7140)
!7146 = !DILocation(line: 1766, column: 37, scope: !7140)
!7147 = !DILocation(line: 1766, column: 29, scope: !7140)
!7148 = !DILocation(line: 1766, column: 7, scope: !7130)
!7149 = !DILocation(line: 1767, column: 4, scope: !7140)
!7150 = !DILocation(line: 1769, column: 10, scope: !7130)
!7151 = !DILocation(line: 1769, column: 15, scope: !7130)
!7152 = !DILocation(line: 1769, column: 19, scope: !7130)
!7153 = !DILocation(line: 1769, column: 3, scope: !7130)
!7154 = !DILocation(line: 1769, column: 25, scope: !7130)
!7155 = !DILocation(line: 1769, column: 30, scope: !7130)
!7156 = !DILocation(line: 1769, column: 36, scope: !7130)
!7157 = !DILocation(line: 1769, column: 41, scope: !7130)
!7158 = !DILocation(line: 1769, column: 45, scope: !7130)
!7159 = !DILocation(line: 1770, column: 45, scope: !7130)
!7160 = !DILocation(line: 1770, column: 39, scope: !7130)
!7161 = !DILocation(line: 1770, column: 49, scope: !7130)
!7162 = !DILocation(line: 1771, column: 46, scope: !7130)
!7163 = !DILocation(line: 1771, column: 51, scope: !7130)
!7164 = !DILocation(line: 1771, column: 44, scope: !7130)
!7165 = !DILocation(line: 1770, column: 9, scope: !7130)
!7166 = !DILocation(line: 1770, column: 7, scope: !7130)
!7167 = distinct !{!7167, !7126, !7168}
!7168 = !DILocation(line: 1772, column: 2, scope: !7102)
!7169 = !DILocation(line: 1774, column: 2, scope: !7102)
!7170 = !DILocation(line: 1774, column: 7, scope: !7102)
!7171 = !DILocation(line: 1774, column: 19, scope: !7102)
!7172 = !DILocation(line: 1775, column: 2, scope: !7102)
!7173 = !DILocation(line: 1776, column: 1, scope: !7102)
!7174 = distinct !DISubprogram(name: "pci_load_and_free_saved_state", scope: !3, file: !3, line: 1785, type: !7175, scopeLine: 1787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7175 = !DISubroutineType(types: !7176)
!7176 = !{!304, !273, !7177}
!7177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6721, size: 64)
!7178 = !DILocalVariable(name: "dev", arg: 1, scope: !7174, file: !3, line: 1785, type: !273)
!7179 = !DILocation(line: 1785, column: 51, scope: !7174)
!7180 = !DILocalVariable(name: "state", arg: 2, scope: !7174, file: !3, line: 1786, type: !7177)
!7181 = !DILocation(line: 1786, column: 32, scope: !7174)
!7182 = !DILocalVariable(name: "ret", scope: !7174, file: !3, line: 1788, type: !304)
!7183 = !DILocation(line: 1788, column: 6, scope: !7174)
!7184 = !DILocation(line: 1788, column: 33, scope: !7174)
!7185 = !DILocation(line: 1788, column: 39, scope: !7174)
!7186 = !DILocation(line: 1788, column: 38, scope: !7174)
!7187 = !DILocation(line: 1788, column: 12, scope: !7174)
!7188 = !DILocation(line: 1789, column: 9, scope: !7174)
!7189 = !DILocation(line: 1789, column: 8, scope: !7174)
!7190 = !DILocation(line: 1789, column: 2, scope: !7174)
!7191 = !DILocation(line: 1790, column: 3, scope: !7174)
!7192 = !DILocation(line: 1790, column: 9, scope: !7174)
!7193 = !DILocation(line: 1791, column: 9, scope: !7174)
!7194 = !DILocation(line: 1791, column: 2, scope: !7174)
!7195 = distinct !DISubprogram(name: "pcibios_enable_device", scope: !3, file: !3, line: 1795, type: !3550, scopeLine: 1796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7196 = !DILocalVariable(name: "dev", arg: 1, scope: !7195, file: !3, line: 1795, type: !273)
!7197 = !DILocation(line: 1795, column: 50, scope: !7195)
!7198 = !DILocalVariable(name: "bars", arg: 2, scope: !7195, file: !3, line: 1795, type: !304)
!7199 = !DILocation(line: 1795, column: 59, scope: !7195)
!7200 = !DILocation(line: 1797, column: 30, scope: !7195)
!7201 = !DILocation(line: 1797, column: 35, scope: !7195)
!7202 = !DILocation(line: 1797, column: 9, scope: !7195)
!7203 = !DILocation(line: 1797, column: 2, scope: !7195)
!7204 = distinct !DISubprogram(name: "pci_reenable_device", scope: !3, file: !3, line: 1841, type: !3545, scopeLine: 1842, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7205 = !DILocalVariable(name: "dev", arg: 1, scope: !7204, file: !3, line: 1841, type: !273)
!7206 = !DILocation(line: 1841, column: 41, scope: !7204)
!7207 = !DILocation(line: 1843, column: 21, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 1843, column: 6)
!7209 = !DILocation(line: 1843, column: 6, scope: !7208)
!7210 = !DILocation(line: 1843, column: 6, scope: !7204)
!7211 = !DILocation(line: 1844, column: 31, scope: !7208)
!7212 = !DILocation(line: 1844, column: 10, scope: !7208)
!7213 = !DILocation(line: 1844, column: 3, scope: !7208)
!7214 = !DILocation(line: 1845, column: 2, scope: !7204)
!7215 = !DILocation(line: 1846, column: 1, scope: !7204)
!7216 = distinct !DISubprogram(name: "pci_is_enabled", scope: !6, file: !6, line: 1175, type: !3545, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7217 = !DILocalVariable(name: "v", arg: 1, scope: !7218, file: !7219, line: 23, type: !7222)
!7218 = distinct !DISubprogram(name: "arch_atomic_read", scope: !7219, file: !7219, line: 23, type: !7220, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7219 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!7220 = !DISubroutineType(types: !7221)
!7221 = !{!304, !7222}
!7222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7223, size: 64)
!7223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !867)
!7224 = !DILocation(line: 23, column: 61, scope: !7218, inlinedAt: !7225)
!7225 = distinct !DILocation(line: 28, column: 9, scope: !7226, inlinedAt: !7228)
!7226 = distinct !DISubprogram(name: "atomic_read", scope: !7227, file: !7227, line: 25, type: !7220, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7227 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!7228 = distinct !DILocation(line: 1177, column: 10, scope: !7216)
!7229 = !DILocalVariable(name: "v", arg: 1, scope: !7230, file: !7231, line: 69, type: !7234)
!7230 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !7231, file: !7231, line: 69, type: !7232, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7231 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!7232 = !DISubroutineType(types: !7233)
!7233 = !{null, !7234, !445}
!7234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7235, size: 64)
!7235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7236)
!7236 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!7237 = !DILocation(line: 69, column: 73, scope: !7230, inlinedAt: !7238)
!7238 = distinct !DILocation(line: 27, column: 2, scope: !7226, inlinedAt: !7228)
!7239 = !DILocalVariable(name: "size", arg: 2, scope: !7230, file: !7231, line: 69, type: !445)
!7240 = !DILocation(line: 69, column: 83, scope: !7230, inlinedAt: !7238)
!7241 = !DILocalVariable(name: "v", arg: 1, scope: !7226, file: !7227, line: 25, type: !7222)
!7242 = !DILocation(line: 25, column: 29, scope: !7226, inlinedAt: !7228)
!7243 = !DILocalVariable(name: "pdev", arg: 1, scope: !7216, file: !6, line: 1175, type: !273)
!7244 = !DILocation(line: 1175, column: 50, scope: !7216)
!7245 = !DILocation(line: 1177, column: 23, scope: !7216)
!7246 = !DILocation(line: 1177, column: 29, scope: !7216)
!7247 = !DILocation(line: 27, column: 25, scope: !7226, inlinedAt: !7228)
!7248 = !DILocation(line: 71, column: 19, scope: !7230, inlinedAt: !7238)
!7249 = !DILocation(line: 71, column: 22, scope: !7230, inlinedAt: !7238)
!7250 = !DILocation(line: 71, column: 2, scope: !7230, inlinedAt: !7238)
!7251 = !DILocation(line: 72, column: 2, scope: !7230, inlinedAt: !7238)
!7252 = !DILocation(line: 28, column: 26, scope: !7226, inlinedAt: !7228)
!7253 = !DILocation(line: 29, column: 9, scope: !7218, inlinedAt: !7225)
!7254 = !DILocation(line: 1177, column: 41, scope: !7216)
!7255 = !DILocation(line: 1177, column: 2, scope: !7216)
!7256 = distinct !DISubprogram(name: "do_pci_enable_device", scope: !3, file: !3, line: 1800, type: !3550, scopeLine: 1801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7257 = !DILocalVariable(name: "dev", arg: 1, scope: !7256, file: !3, line: 1800, type: !273)
!7258 = !DILocation(line: 1800, column: 49, scope: !7256)
!7259 = !DILocalVariable(name: "bars", arg: 2, scope: !7256, file: !3, line: 1800, type: !304)
!7260 = !DILocation(line: 1800, column: 58, scope: !7256)
!7261 = !DILocalVariable(name: "err", scope: !7256, file: !3, line: 1802, type: !304)
!7262 = !DILocation(line: 1802, column: 6, scope: !7256)
!7263 = !DILocalVariable(name: "bridge", scope: !7256, file: !3, line: 1803, type: !273)
!7264 = !DILocation(line: 1803, column: 18, scope: !7256)
!7265 = !DILocalVariable(name: "cmd", scope: !7256, file: !3, line: 1804, type: !979)
!7266 = !DILocation(line: 1804, column: 6, scope: !7256)
!7267 = !DILocalVariable(name: "pin", scope: !7256, file: !3, line: 1805, type: !310)
!7268 = !DILocation(line: 1805, column: 5, scope: !7256)
!7269 = !DILocation(line: 1807, column: 28, scope: !7256)
!7270 = !DILocation(line: 1807, column: 8, scope: !7256)
!7271 = !DILocation(line: 1807, column: 6, scope: !7256)
!7272 = !DILocation(line: 1808, column: 6, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 1808, column: 6)
!7274 = !DILocation(line: 1808, column: 10, scope: !7273)
!7275 = !DILocation(line: 1808, column: 14, scope: !7273)
!7276 = !DILocation(line: 1808, column: 17, scope: !7273)
!7277 = !DILocation(line: 1808, column: 21, scope: !7273)
!7278 = !DILocation(line: 1808, column: 6, scope: !7256)
!7279 = !DILocation(line: 1809, column: 10, scope: !7273)
!7280 = !DILocation(line: 1809, column: 3, scope: !7273)
!7281 = !DILocation(line: 1811, column: 31, scope: !7256)
!7282 = !DILocation(line: 1811, column: 11, scope: !7256)
!7283 = !DILocation(line: 1811, column: 9, scope: !7256)
!7284 = !DILocation(line: 1812, column: 6, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 1812, column: 6)
!7286 = !DILocation(line: 1812, column: 6, scope: !7256)
!7287 = !DILocation(line: 1813, column: 35, scope: !7285)
!7288 = !DILocation(line: 1813, column: 3, scope: !7285)
!7289 = !DILocation(line: 1815, column: 30, scope: !7256)
!7290 = !DILocation(line: 1815, column: 35, scope: !7256)
!7291 = !DILocation(line: 1815, column: 8, scope: !7256)
!7292 = !DILocation(line: 1815, column: 6, scope: !7256)
!7293 = !DILocation(line: 1816, column: 6, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 1816, column: 6)
!7295 = !DILocation(line: 1816, column: 10, scope: !7294)
!7296 = !DILocation(line: 1816, column: 6, scope: !7256)
!7297 = !DILocation(line: 1817, column: 10, scope: !7294)
!7298 = !DILocation(line: 1817, column: 3, scope: !7294)
!7299 = !DILocation(line: 1818, column: 37, scope: !7256)
!7300 = !DILocation(line: 1818, column: 2, scope: !7256)
!7301 = !DILocation(line: 1820, column: 6, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 1820, column: 6)
!7303 = !DILocation(line: 1820, column: 11, scope: !7302)
!7304 = !DILocation(line: 1820, column: 23, scope: !7302)
!7305 = !DILocation(line: 1820, column: 26, scope: !7302)
!7306 = !DILocation(line: 1820, column: 31, scope: !7302)
!7307 = !DILocation(line: 1820, column: 6, scope: !7256)
!7308 = !DILocation(line: 1821, column: 3, scope: !7302)
!7309 = !DILocation(line: 1823, column: 23, scope: !7256)
!7310 = !DILocation(line: 1823, column: 2, scope: !7256)
!7311 = !DILocation(line: 1824, column: 6, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 1824, column: 6)
!7313 = !DILocation(line: 1824, column: 6, scope: !7256)
!7314 = !DILocation(line: 1825, column: 24, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 1824, column: 11)
!7316 = !DILocation(line: 1825, column: 3, scope: !7315)
!7317 = !DILocation(line: 1826, column: 7, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 1826, column: 7)
!7319 = !DILocation(line: 1826, column: 11, scope: !7318)
!7320 = !DILocation(line: 1826, column: 7, scope: !7315)
!7321 = !DILocation(line: 1827, column: 26, scope: !7318)
!7322 = !DILocation(line: 1828, column: 12, scope: !7318)
!7323 = !DILocation(line: 1828, column: 16, scope: !7318)
!7324 = !DILocation(line: 1827, column: 4, scope: !7318)
!7325 = !DILocation(line: 1829, column: 2, scope: !7315)
!7326 = !DILocation(line: 1831, column: 2, scope: !7256)
!7327 = !DILocation(line: 1832, column: 1, scope: !7256)
!7328 = distinct !DISubprogram(name: "pci_enable_device_io", scope: !3, file: !3, line: 1918, type: !3545, scopeLine: 1919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7329 = !DILocalVariable(name: "dev", arg: 1, scope: !7328, file: !3, line: 1918, type: !273)
!7330 = !DILocation(line: 1918, column: 42, scope: !7328)
!7331 = !DILocation(line: 1920, column: 33, scope: !7328)
!7332 = !DILocation(line: 1920, column: 9, scope: !7328)
!7333 = !DILocation(line: 1920, column: 2, scope: !7328)
!7334 = distinct !DISubprogram(name: "pci_enable_device_flags", scope: !3, file: !3, line: 1871, type: !7335, scopeLine: 1872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7335 = !DISubroutineType(types: !7336)
!7336 = !{!304, !273, !448}
!7337 = !DILocalVariable(name: "i", arg: 1, scope: !7338, file: !7219, line: 163, type: !304)
!7338 = distinct !DISubprogram(name: "arch_atomic_add_return", scope: !7219, file: !7219, line: 163, type: !7339, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7339 = !DISubroutineType(types: !7340)
!7340 = !{!304, !304, !7341}
!7341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!7342 = !DILocation(line: 163, column: 55, scope: !7338, inlinedAt: !7343)
!7343 = distinct !DILocation(line: 286, column: 9, scope: !7344, inlinedAt: !7348)
!7344 = distinct !DISubprogram(name: "arch_atomic_inc_return", scope: !7345, file: !7345, line: 284, type: !7346, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7345 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!7346 = !DISubroutineType(types: !7347)
!7347 = !{!304, !7341}
!7348 = distinct !DILocation(line: 251, column: 9, scope: !7349, inlinedAt: !7350)
!7349 = distinct !DISubprogram(name: "atomic_inc_return", scope: !7227, file: !7227, line: 248, type: !7346, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7350 = distinct !DILocation(line: 1889, column: 6, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1889, column: 6)
!7352 = !DILocalVariable(name: "v", arg: 2, scope: !7338, file: !7219, line: 163, type: !7341)
!7353 = !DILocation(line: 163, column: 68, scope: !7338, inlinedAt: !7343)
!7354 = !DILocalVariable(name: "__ret", scope: !7355, file: !7219, line: 165, type: !304)
!7355 = distinct !DILexicalBlock(scope: !7338, file: !7219, line: 165, column: 13)
!7356 = !DILocation(line: 165, column: 13, scope: !7355, inlinedAt: !7343)
!7357 = !DILocalVariable(name: "v", arg: 1, scope: !7344, file: !7345, line: 284, type: !7341)
!7358 = !DILocation(line: 284, column: 34, scope: !7344, inlinedAt: !7348)
!7359 = !DILocalVariable(name: "v", arg: 1, scope: !7360, file: !7231, line: 99, type: !7234)
!7360 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !7231, file: !7231, line: 99, type: !7232, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7361 = !DILocation(line: 99, column: 79, scope: !7360, inlinedAt: !7362)
!7362 = distinct !DILocation(line: 250, column: 2, scope: !7349, inlinedAt: !7350)
!7363 = !DILocalVariable(name: "size", arg: 2, scope: !7360, file: !7231, line: 99, type: !445)
!7364 = !DILocation(line: 99, column: 89, scope: !7360, inlinedAt: !7362)
!7365 = !DILocalVariable(name: "v", arg: 1, scope: !7349, file: !7227, line: 248, type: !7341)
!7366 = !DILocation(line: 248, column: 29, scope: !7349, inlinedAt: !7350)
!7367 = !DILocalVariable(name: "v", arg: 1, scope: !7368, file: !7219, line: 106, type: !7341)
!7368 = distinct !DISubprogram(name: "arch_atomic_dec", scope: !7219, file: !7219, line: 106, type: !7369, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7369 = !DISubroutineType(types: !7370)
!7370 = !{null, !7341}
!7371 = !DILocation(line: 106, column: 55, scope: !7368, inlinedAt: !7372)
!7372 = distinct !DILocation(line: 331, column: 2, scope: !7373, inlinedAt: !7374)
!7373 = distinct !DISubprogram(name: "atomic_dec", scope: !7227, file: !7227, line: 328, type: !7369, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7374 = distinct !DILocation(line: 1906, column: 3, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1905, column: 6)
!7376 = !DILocation(line: 99, column: 79, scope: !7360, inlinedAt: !7377)
!7377 = distinct !DILocation(line: 330, column: 2, scope: !7373, inlinedAt: !7374)
!7378 = !DILocation(line: 99, column: 89, scope: !7360, inlinedAt: !7377)
!7379 = !DILocalVariable(name: "v", arg: 1, scope: !7373, file: !7227, line: 328, type: !7341)
!7380 = !DILocation(line: 328, column: 22, scope: !7373, inlinedAt: !7374)
!7381 = !DILocalVariable(name: "dev", arg: 1, scope: !7334, file: !3, line: 1871, type: !273)
!7382 = !DILocation(line: 1871, column: 52, scope: !7334)
!7383 = !DILocalVariable(name: "flags", arg: 2, scope: !7334, file: !3, line: 1871, type: !448)
!7384 = !DILocation(line: 1871, column: 71, scope: !7334)
!7385 = !DILocalVariable(name: "bridge", scope: !7334, file: !3, line: 1873, type: !273)
!7386 = !DILocation(line: 1873, column: 18, scope: !7334)
!7387 = !DILocalVariable(name: "err", scope: !7334, file: !3, line: 1874, type: !304)
!7388 = !DILocation(line: 1874, column: 6, scope: !7334)
!7389 = !DILocalVariable(name: "i", scope: !7334, file: !3, line: 1875, type: !304)
!7390 = !DILocation(line: 1875, column: 6, scope: !7334)
!7391 = !DILocalVariable(name: "bars", scope: !7334, file: !3, line: 1875, type: !304)
!7392 = !DILocation(line: 1875, column: 9, scope: !7334)
!7393 = !DILocation(line: 1883, column: 6, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1883, column: 6)
!7395 = !DILocation(line: 1883, column: 11, scope: !7394)
!7396 = !DILocation(line: 1883, column: 6, scope: !7334)
!7397 = !DILocalVariable(name: "pmcsr", scope: !7398, file: !3, line: 1884, type: !979)
!7398 = distinct !DILexicalBlock(scope: !7394, file: !3, line: 1883, column: 19)
!7399 = !DILocation(line: 1884, column: 7, scope: !7398)
!7400 = !DILocation(line: 1885, column: 24, scope: !7398)
!7401 = !DILocation(line: 1885, column: 29, scope: !7398)
!7402 = !DILocation(line: 1885, column: 34, scope: !7398)
!7403 = !DILocation(line: 1885, column: 41, scope: !7398)
!7404 = !DILocation(line: 1885, column: 3, scope: !7398)
!7405 = !DILocation(line: 1886, column: 25, scope: !7398)
!7406 = !DILocation(line: 1886, column: 31, scope: !7398)
!7407 = !DILocation(line: 1886, column: 3, scope: !7398)
!7408 = !DILocation(line: 1886, column: 8, scope: !7398)
!7409 = !DILocation(line: 1886, column: 22, scope: !7398)
!7410 = !DILocation(line: 1887, column: 2, scope: !7398)
!7411 = !DILocation(line: 1889, column: 25, scope: !7351)
!7412 = !DILocation(line: 1889, column: 30, scope: !7351)
!7413 = !DILocation(line: 250, column: 31, scope: !7349, inlinedAt: !7350)
!7414 = !DILocation(line: 101, column: 20, scope: !7360, inlinedAt: !7362)
!7415 = !DILocation(line: 101, column: 23, scope: !7360, inlinedAt: !7362)
!7416 = !DILocation(line: 101, column: 2, scope: !7360, inlinedAt: !7362)
!7417 = !DILocation(line: 102, column: 2, scope: !7360, inlinedAt: !7362)
!7418 = !DILocation(line: 251, column: 32, scope: !7349, inlinedAt: !7350)
!7419 = !DILocation(line: 286, column: 35, scope: !7344, inlinedAt: !7348)
!7420 = !DILocation(line: 165, column: 9, scope: !7338, inlinedAt: !7343)
!7421 = !{i32 -2146365875}
!7422 = !DILocation(line: 165, column: 11, scope: !7338, inlinedAt: !7343)
!7423 = !DILocation(line: 1889, column: 42, scope: !7351)
!7424 = !DILocation(line: 1889, column: 6, scope: !7334)
!7425 = !DILocation(line: 1890, column: 3, scope: !7351)
!7426 = !DILocation(line: 1892, column: 31, scope: !7334)
!7427 = !DILocation(line: 1892, column: 11, scope: !7334)
!7428 = !DILocation(line: 1892, column: 9, scope: !7334)
!7429 = !DILocation(line: 1893, column: 6, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1893, column: 6)
!7431 = !DILocation(line: 1893, column: 6, scope: !7334)
!7432 = !DILocation(line: 1894, column: 21, scope: !7430)
!7433 = !DILocation(line: 1894, column: 3, scope: !7430)
!7434 = !DILocation(line: 1897, column: 9, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1897, column: 2)
!7436 = !DILocation(line: 1897, column: 7, scope: !7435)
!7437 = !DILocation(line: 1897, column: 14, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 1897, column: 2)
!7439 = !DILocation(line: 1897, column: 16, scope: !7438)
!7440 = !DILocation(line: 1897, column: 2, scope: !7435)
!7441 = !DILocation(line: 1898, column: 7, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 1898, column: 7)
!7443 = !DILocation(line: 1898, column: 12, scope: !7442)
!7444 = !DILocation(line: 1898, column: 21, scope: !7442)
!7445 = !DILocation(line: 1898, column: 24, scope: !7442)
!7446 = !DILocation(line: 1898, column: 32, scope: !7442)
!7447 = !DILocation(line: 1898, column: 30, scope: !7442)
!7448 = !DILocation(line: 1898, column: 7, scope: !7438)
!7449 = !DILocation(line: 1899, column: 18, scope: !7442)
!7450 = !DILocation(line: 1899, column: 15, scope: !7442)
!7451 = !DILocation(line: 1899, column: 9, scope: !7442)
!7452 = !DILocation(line: 1899, column: 4, scope: !7442)
!7453 = !DILocation(line: 1897, column: 38, scope: !7438)
!7454 = !DILocation(line: 1897, column: 2, scope: !7438)
!7455 = distinct !{!7455, !7440, !7456}
!7456 = !DILocation(line: 1899, column: 19, scope: !7435)
!7457 = !DILocation(line: 1900, column: 9, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1900, column: 2)
!7459 = !DILocation(line: 1900, column: 7, scope: !7458)
!7460 = !DILocation(line: 1900, column: 33, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 1900, column: 2)
!7462 = !DILocation(line: 1900, column: 35, scope: !7461)
!7463 = !DILocation(line: 1900, column: 2, scope: !7458)
!7464 = !DILocation(line: 1901, column: 7, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1901, column: 7)
!7466 = !DILocation(line: 1901, column: 12, scope: !7465)
!7467 = !DILocation(line: 1901, column: 21, scope: !7465)
!7468 = !DILocation(line: 1901, column: 24, scope: !7465)
!7469 = !DILocation(line: 1901, column: 32, scope: !7465)
!7470 = !DILocation(line: 1901, column: 30, scope: !7465)
!7471 = !DILocation(line: 1901, column: 7, scope: !7461)
!7472 = !DILocation(line: 1902, column: 18, scope: !7465)
!7473 = !DILocation(line: 1902, column: 15, scope: !7465)
!7474 = !DILocation(line: 1902, column: 9, scope: !7465)
!7475 = !DILocation(line: 1902, column: 4, scope: !7465)
!7476 = !DILocation(line: 1900, column: 61, scope: !7461)
!7477 = !DILocation(line: 1900, column: 2, scope: !7461)
!7478 = distinct !{!7478, !7463, !7479}
!7479 = !DILocation(line: 1902, column: 19, scope: !7458)
!7480 = !DILocation(line: 1904, column: 29, scope: !7334)
!7481 = !DILocation(line: 1904, column: 34, scope: !7334)
!7482 = !DILocation(line: 1904, column: 8, scope: !7334)
!7483 = !DILocation(line: 1904, column: 6, scope: !7334)
!7484 = !DILocation(line: 1905, column: 6, scope: !7375)
!7485 = !DILocation(line: 1905, column: 10, scope: !7375)
!7486 = !DILocation(line: 1905, column: 6, scope: !7334)
!7487 = !DILocation(line: 1906, column: 15, scope: !7375)
!7488 = !DILocation(line: 1906, column: 20, scope: !7375)
!7489 = !DILocation(line: 330, column: 31, scope: !7373, inlinedAt: !7374)
!7490 = !DILocation(line: 101, column: 20, scope: !7360, inlinedAt: !7377)
!7491 = !DILocation(line: 101, column: 23, scope: !7360, inlinedAt: !7377)
!7492 = !DILocation(line: 101, column: 2, scope: !7360, inlinedAt: !7377)
!7493 = !DILocation(line: 102, column: 2, scope: !7360, inlinedAt: !7377)
!7494 = !DILocation(line: 331, column: 18, scope: !7373, inlinedAt: !7374)
!7495 = !DILocation(line: 109, column: 16, scope: !7368, inlinedAt: !7372)
!7496 = !DILocation(line: 109, column: 19, scope: !7368, inlinedAt: !7372)
!7497 = !DILocation(line: 108, column: 2, scope: !7368, inlinedAt: !7372)
!7498 = !{i32 -2146370018}
!7499 = !DILocation(line: 1906, column: 3, scope: !7375)
!7500 = !DILocation(line: 1907, column: 9, scope: !7334)
!7501 = !DILocation(line: 1907, column: 2, scope: !7334)
!7502 = !DILocation(line: 1908, column: 1, scope: !7334)
!7503 = distinct !DISubprogram(name: "pci_enable_device_mem", scope: !3, file: !3, line: 1932, type: !3545, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7504 = !DILocalVariable(name: "dev", arg: 1, scope: !7503, file: !3, line: 1932, type: !273)
!7505 = !DILocation(line: 1932, column: 43, scope: !7503)
!7506 = !DILocation(line: 1934, column: 33, scope: !7503)
!7507 = !DILocation(line: 1934, column: 9, scope: !7503)
!7508 = !DILocation(line: 1934, column: 2, scope: !7503)
!7509 = distinct !DISubprogram(name: "pci_enable_device", scope: !3, file: !3, line: 1949, type: !3545, scopeLine: 1950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7510 = !DILocalVariable(name: "dev", arg: 1, scope: !7509, file: !3, line: 1949, type: !273)
!7511 = !DILocation(line: 1949, column: 39, scope: !7509)
!7512 = !DILocation(line: 1951, column: 33, scope: !7509)
!7513 = !DILocation(line: 1951, column: 9, scope: !7509)
!7514 = !DILocation(line: 1951, column: 2, scope: !7509)
!7515 = distinct !DISubprogram(name: "pcim_enable_device", scope: !3, file: !3, line: 2022, type: !3545, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7516 = !DILocalVariable(name: "pdev", arg: 1, scope: !7515, file: !3, line: 2022, type: !273)
!7517 = !DILocation(line: 2022, column: 40, scope: !7515)
!7518 = !DILocalVariable(name: "dr", scope: !7515, file: !3, line: 2024, type: !7519)
!7519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7520, size: 64)
!7520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_devres", file: !3, line: 1961, size: 64, elements: !7521)
!7521 = !{!7522, !7523, !7524, !7525, !7526, !7527}
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !7520, file: !3, line: 1962, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "pinned", scope: !7520, file: !3, line: 1963, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "orig_intx", scope: !7520, file: !3, line: 1964, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "restore_intx", scope: !7520, file: !3, line: 1965, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "mwi", scope: !7520, file: !3, line: 1966, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "region_mask", scope: !7520, file: !3, line: 1967, baseType: !319, size: 32, offset: 32)
!7528 = !DILocation(line: 2024, column: 21, scope: !7515)
!7529 = !DILocalVariable(name: "rc", scope: !7515, file: !3, line: 2025, type: !304)
!7530 = !DILocation(line: 2025, column: 6, scope: !7515)
!7531 = !DILocation(line: 2027, column: 18, scope: !7515)
!7532 = !DILocation(line: 2027, column: 7, scope: !7515)
!7533 = !DILocation(line: 2027, column: 5, scope: !7515)
!7534 = !DILocation(line: 2028, column: 6, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 2028, column: 6)
!7536 = !DILocation(line: 2028, column: 6, scope: !7515)
!7537 = !DILocation(line: 2029, column: 3, scope: !7535)
!7538 = !DILocation(line: 2030, column: 6, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 2030, column: 6)
!7540 = !DILocation(line: 2030, column: 10, scope: !7539)
!7541 = !DILocation(line: 2030, column: 6, scope: !7515)
!7542 = !DILocation(line: 2031, column: 3, scope: !7539)
!7543 = !DILocation(line: 2033, column: 25, scope: !7515)
!7544 = !DILocation(line: 2033, column: 7, scope: !7515)
!7545 = !DILocation(line: 2033, column: 5, scope: !7515)
!7546 = !DILocation(line: 2034, column: 7, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 2034, column: 6)
!7548 = !DILocation(line: 2034, column: 6, scope: !7515)
!7549 = !DILocation(line: 2035, column: 3, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 2034, column: 11)
!7551 = !DILocation(line: 2035, column: 9, scope: !7550)
!7552 = !DILocation(line: 2035, column: 20, scope: !7550)
!7553 = !DILocation(line: 2036, column: 3, scope: !7550)
!7554 = !DILocation(line: 2036, column: 7, scope: !7550)
!7555 = !DILocation(line: 2036, column: 15, scope: !7550)
!7556 = !DILocation(line: 2037, column: 2, scope: !7550)
!7557 = !DILocation(line: 2038, column: 9, scope: !7515)
!7558 = !DILocation(line: 2038, column: 2, scope: !7515)
!7559 = !DILocation(line: 2039, column: 1, scope: !7515)
!7560 = distinct !DISubprogram(name: "get_pci_dr", scope: !3, file: !3, line: 1995, type: !7561, scopeLine: 1996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7561 = !DISubroutineType(types: !7562)
!7562 = !{!7519, !273}
!7563 = !DILocalVariable(name: "pdev", arg: 1, scope: !7560, file: !3, line: 1995, type: !273)
!7564 = !DILocation(line: 1995, column: 54, scope: !7560)
!7565 = !DILocalVariable(name: "dr", scope: !7560, file: !3, line: 1997, type: !7519)
!7566 = !DILocation(line: 1997, column: 21, scope: !7560)
!7567 = !DILocalVariable(name: "new_dr", scope: !7560, file: !3, line: 1997, type: !7519)
!7568 = !DILocation(line: 1997, column: 26, scope: !7560)
!7569 = !DILocation(line: 1999, column: 20, scope: !7560)
!7570 = !DILocation(line: 1999, column: 26, scope: !7560)
!7571 = !DILocation(line: 1999, column: 7, scope: !7560)
!7572 = !DILocation(line: 1999, column: 5, scope: !7560)
!7573 = !DILocation(line: 2000, column: 6, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 2000, column: 6)
!7575 = !DILocation(line: 2000, column: 6, scope: !7560)
!7576 = !DILocation(line: 2001, column: 10, scope: !7574)
!7577 = !DILocation(line: 2001, column: 3, scope: !7574)
!7578 = !DILocation(line: 2003, column: 11, scope: !7560)
!7579 = !DILocation(line: 2003, column: 9, scope: !7560)
!7580 = !DILocation(line: 2004, column: 7, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 2004, column: 6)
!7582 = !DILocation(line: 2004, column: 6, scope: !7560)
!7583 = !DILocation(line: 2005, column: 3, scope: !7581)
!7584 = !DILocation(line: 2006, column: 21, scope: !7560)
!7585 = !DILocation(line: 2006, column: 27, scope: !7560)
!7586 = !DILocation(line: 2006, column: 32, scope: !7560)
!7587 = !DILocation(line: 2006, column: 9, scope: !7560)
!7588 = !DILocation(line: 2006, column: 2, scope: !7560)
!7589 = !DILocation(line: 2007, column: 1, scope: !7560)
!7590 = distinct !DISubprogram(name: "pcim_pin_device", scope: !3, file: !3, line: 2050, type: !3533, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7591 = !DILocalVariable(name: "pdev", arg: 1, scope: !7590, file: !3, line: 2050, type: !273)
!7592 = !DILocation(line: 2050, column: 38, scope: !7590)
!7593 = !DILocalVariable(name: "dr", scope: !7590, file: !3, line: 2052, type: !7519)
!7594 = !DILocation(line: 2052, column: 21, scope: !7590)
!7595 = !DILocation(line: 2054, column: 19, scope: !7590)
!7596 = !DILocation(line: 2054, column: 7, scope: !7590)
!7597 = !DILocation(line: 2054, column: 5, scope: !7590)
!7598 = !DILocalVariable(name: "__ret_warn_on", scope: !7599, file: !3, line: 2055, type: !304)
!7599 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 2055, column: 2)
!7600 = !DILocation(line: 2055, column: 2, scope: !7599)
!7601 = !DILocation(line: 2055, column: 2, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 2055, column: 2)
!7603 = !DILocation(line: 2055, column: 2, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 2055, column: 2)
!7605 = !DILocation(line: 2055, column: 2, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 2055, column: 2)
!7607 = !DILocation(line: 2055, column: 2, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 2055, column: 2)
!7609 = !{i32 -2140844238, i32 -2140844209, i32 -2140844163, i32 -2140844105, i32 -2140844051, i32 -2140843997, i32 -2140843942, i32 -2140843911}
!7610 = !DILocation(line: 2055, column: 2, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 2055, column: 2)
!7612 = !{i32 -2140843511, i32 -2140843504, i32 -2140843452, i32 -2140843421, i32 -2140843391}
!7613 = !DILocation(line: 2055, column: 2, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 2055, column: 2)
!7615 = !DILocation(line: 2056, column: 6, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 2056, column: 6)
!7617 = !DILocation(line: 2056, column: 6, scope: !7590)
!7618 = !DILocation(line: 2057, column: 3, scope: !7616)
!7619 = !DILocation(line: 2057, column: 7, scope: !7616)
!7620 = !DILocation(line: 2057, column: 14, scope: !7616)
!7621 = !DILocation(line: 2058, column: 1, scope: !7590)
!7622 = distinct !DISubprogram(name: "find_pci_dr", scope: !3, file: !3, line: 2009, type: !7561, scopeLine: 2010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7623 = !DILocalVariable(name: "pdev", arg: 1, scope: !7622, file: !3, line: 2009, type: !273)
!7624 = !DILocation(line: 2009, column: 55, scope: !7622)
!7625 = !DILocation(line: 2011, column: 21, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 2011, column: 6)
!7627 = !DILocation(line: 2011, column: 6, scope: !7626)
!7628 = !DILocation(line: 2011, column: 6, scope: !7622)
!7629 = !DILocation(line: 2012, column: 23, scope: !7626)
!7630 = !DILocation(line: 2012, column: 29, scope: !7626)
!7631 = !DILocation(line: 2012, column: 10, scope: !7626)
!7632 = !DILocation(line: 2012, column: 3, scope: !7626)
!7633 = !DILocation(line: 2013, column: 2, scope: !7622)
!7634 = !DILocation(line: 2014, column: 1, scope: !7622)
!7635 = distinct !DISubprogram(name: "pcibios_add_device", scope: !3, file: !3, line: 2069, type: !3545, scopeLine: 2070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7636 = !DILocalVariable(name: "dev", arg: 1, scope: !7635, file: !3, line: 2069, type: !273)
!7637 = !DILocation(line: 2069, column: 47, scope: !7635)
!7638 = !DILocation(line: 2071, column: 2, scope: !7635)
!7639 = distinct !DISubprogram(name: "pcibios_release_device", scope: !3, file: !3, line: 2083, type: !3533, scopeLine: 2083, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7640 = !DILocalVariable(name: "dev", arg: 1, scope: !7639, file: !3, line: 2083, type: !273)
!7641 = !DILocation(line: 2083, column: 52, scope: !7639)
!7642 = !DILocation(line: 2083, column: 58, scope: !7639)
!7643 = distinct !DISubprogram(name: "pcibios_disable_device", scope: !3, file: !3, line: 2093, type: !3533, scopeLine: 2093, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7644 = !DILocalVariable(name: "dev", arg: 1, scope: !7643, file: !3, line: 2093, type: !273)
!7645 = !DILocation(line: 2093, column: 52, scope: !7643)
!7646 = !DILocation(line: 2093, column: 58, scope: !7643)
!7647 = distinct !DISubprogram(name: "pcibios_penalize_isa_irq", scope: !3, file: !3, line: 2104, type: !7648, scopeLine: 2104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7648 = !DISubroutineType(types: !7649)
!7649 = !{null, !304, !304}
!7650 = !DILocalVariable(name: "irq", arg: 1, scope: !7647, file: !3, line: 2104, type: !304)
!7651 = !DILocation(line: 2104, column: 42, scope: !7647)
!7652 = !DILocalVariable(name: "active", arg: 2, scope: !7647, file: !3, line: 2104, type: !304)
!7653 = !DILocation(line: 2104, column: 51, scope: !7647)
!7654 = !DILocation(line: 2104, column: 60, scope: !7647)
!7655 = distinct !DISubprogram(name: "pci_disable_enabled_device", scope: !3, file: !3, line: 2126, type: !3533, scopeLine: 2127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7656 = !DILocalVariable(name: "dev", arg: 1, scope: !7655, file: !3, line: 2126, type: !273)
!7657 = !DILocation(line: 2126, column: 49, scope: !7655)
!7658 = !DILocation(line: 2128, column: 21, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 2128, column: 6)
!7660 = !DILocation(line: 2128, column: 6, scope: !7659)
!7661 = !DILocation(line: 2128, column: 6, scope: !7655)
!7662 = !DILocation(line: 2129, column: 25, scope: !7659)
!7663 = !DILocation(line: 2129, column: 3, scope: !7659)
!7664 = !DILocation(line: 2130, column: 1, scope: !7655)
!7665 = distinct !DISubprogram(name: "do_pci_disable_device", scope: !3, file: !3, line: 2106, type: !3533, scopeLine: 2107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7666 = !DILocalVariable(name: "dev", arg: 1, scope: !7665, file: !3, line: 2106, type: !273)
!7667 = !DILocation(line: 2106, column: 51, scope: !7665)
!7668 = !DILocalVariable(name: "pci_command", scope: !7665, file: !3, line: 2108, type: !979)
!7669 = !DILocation(line: 2108, column: 6, scope: !7665)
!7670 = !DILocation(line: 2110, column: 23, scope: !7665)
!7671 = !DILocation(line: 2110, column: 2, scope: !7665)
!7672 = !DILocation(line: 2111, column: 6, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 2111, column: 6)
!7674 = !DILocation(line: 2111, column: 18, scope: !7673)
!7675 = !DILocation(line: 2111, column: 6, scope: !7665)
!7676 = !DILocation(line: 2112, column: 15, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7673, file: !3, line: 2111, column: 40)
!7678 = !DILocation(line: 2113, column: 25, scope: !7677)
!7679 = !DILocation(line: 2113, column: 43, scope: !7677)
!7680 = !DILocation(line: 2113, column: 3, scope: !7677)
!7681 = !DILocation(line: 2114, column: 2, scope: !7677)
!7682 = !DILocation(line: 2116, column: 25, scope: !7665)
!7683 = !DILocation(line: 2116, column: 2, scope: !7665)
!7684 = !DILocation(line: 2117, column: 1, scope: !7665)
!7685 = !DILocation(line: 163, column: 55, scope: !7338, inlinedAt: !7686)
!7686 = distinct !DILocation(line: 178, column: 9, scope: !7687, inlinedAt: !7688)
!7687 = distinct !DISubprogram(name: "arch_atomic_sub_return", scope: !7219, file: !7219, line: 176, type: !7339, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7688 = distinct !DILocation(line: 457, column: 9, scope: !7689, inlinedAt: !7690)
!7689 = distinct !DISubprogram(name: "arch_atomic_dec_return", scope: !7345, file: !7345, line: 455, type: !7346, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7690 = distinct !DILocation(line: 341, column: 9, scope: !7691, inlinedAt: !7692)
!7691 = distinct !DISubprogram(name: "atomic_dec_return", scope: !7227, file: !7227, line: 338, type: !7346, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7692 = distinct !DILocation(line: 2153, column: 6, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 2153, column: 6)
!7694 = !DILocation(line: 163, column: 68, scope: !7338, inlinedAt: !7686)
!7695 = !DILocation(line: 165, column: 13, scope: !7355, inlinedAt: !7686)
!7696 = !DILocalVariable(name: "i", arg: 1, scope: !7687, file: !7219, line: 176, type: !304)
!7697 = !DILocation(line: 176, column: 55, scope: !7687, inlinedAt: !7688)
!7698 = !DILocalVariable(name: "v", arg: 2, scope: !7687, file: !7219, line: 176, type: !7341)
!7699 = !DILocation(line: 176, column: 68, scope: !7687, inlinedAt: !7688)
!7700 = !DILocalVariable(name: "v", arg: 1, scope: !7689, file: !7345, line: 455, type: !7341)
!7701 = !DILocation(line: 455, column: 34, scope: !7689, inlinedAt: !7690)
!7702 = !DILocation(line: 99, column: 79, scope: !7360, inlinedAt: !7703)
!7703 = distinct !DILocation(line: 340, column: 2, scope: !7691, inlinedAt: !7692)
!7704 = !DILocation(line: 99, column: 89, scope: !7360, inlinedAt: !7703)
!7705 = !DILocalVariable(name: "v", arg: 1, scope: !7691, file: !7227, line: 338, type: !7341)
!7706 = !DILocation(line: 338, column: 29, scope: !7691, inlinedAt: !7692)
!7707 = !DILocation(line: 23, column: 61, scope: !7218, inlinedAt: !7708)
!7708 = distinct !DILocation(line: 28, column: 9, scope: !7226, inlinedAt: !7709)
!7709 = distinct !DILocation(line: 2150, column: 2, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 2150, column: 2)
!7711 = !DILocation(line: 69, column: 73, scope: !7230, inlinedAt: !7712)
!7712 = distinct !DILocation(line: 27, column: 2, scope: !7226, inlinedAt: !7709)
!7713 = !DILocation(line: 69, column: 83, scope: !7230, inlinedAt: !7712)
!7714 = !DILocation(line: 25, column: 29, scope: !7226, inlinedAt: !7709)
!7715 = !DILocalVariable(name: "dev", arg: 1, scope: !4743, file: !3, line: 2142, type: !273)
!7716 = !DILocation(line: 2142, column: 41, scope: !4743)
!7717 = !DILocalVariable(name: "dr", scope: !4743, file: !3, line: 2144, type: !7519)
!7718 = !DILocation(line: 2144, column: 21, scope: !4743)
!7719 = !DILocation(line: 2146, column: 19, scope: !4743)
!7720 = !DILocation(line: 2146, column: 7, scope: !4743)
!7721 = !DILocation(line: 2146, column: 5, scope: !4743)
!7722 = !DILocation(line: 2147, column: 6, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 2147, column: 6)
!7724 = !DILocation(line: 2147, column: 6, scope: !4743)
!7725 = !DILocation(line: 2148, column: 3, scope: !7723)
!7726 = !DILocation(line: 2148, column: 7, scope: !7723)
!7727 = !DILocation(line: 2148, column: 15, scope: !7723)
!7728 = !DILocalVariable(name: "__ret_warn_once", scope: !7710, file: !3, line: 2150, type: !304)
!7729 = !DILocation(line: 2150, column: 2, scope: !7710)
!7730 = !DILocation(line: 27, column: 25, scope: !7226, inlinedAt: !7709)
!7731 = !DILocation(line: 71, column: 19, scope: !7230, inlinedAt: !7712)
!7732 = !DILocation(line: 71, column: 22, scope: !7230, inlinedAt: !7712)
!7733 = !DILocation(line: 71, column: 2, scope: !7230, inlinedAt: !7712)
!7734 = !DILocation(line: 72, column: 2, scope: !7230, inlinedAt: !7712)
!7735 = !DILocation(line: 28, column: 26, scope: !7226, inlinedAt: !7709)
!7736 = !DILocation(line: 29, column: 9, scope: !7218, inlinedAt: !7708)
!7737 = !DILocation(line: 2150, column: 2, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 2150, column: 2)
!7739 = !DILocation(line: 0, scope: !7738)
!7740 = !DILocation(line: 2150, column: 2, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 2150, column: 2)
!7742 = !DILocalVariable(name: "__ret_warn_on", scope: !7743, file: !3, line: 2150, type: !304)
!7743 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 2150, column: 2)
!7744 = !DILocation(line: 2150, column: 2, scope: !7743)
!7745 = !DILocation(line: 2150, column: 2, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 2150, column: 2)
!7747 = !DILocation(line: 2150, column: 2, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 2150, column: 2)
!7749 = !DILocation(line: 2150, column: 2, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 2150, column: 2)
!7751 = !DILocation(line: 2150, column: 2, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 2150, column: 2)
!7753 = !DILocation(line: 2150, column: 2, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 2150, column: 2)
!7755 = !DILocation(line: 2150, column: 2, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 2150, column: 2)
!7757 = !{i32 -2140841500, i32 -2140841471, i32 -2140841425, i32 -2140841367, i32 -2140841313, i32 -2140841259, i32 -2140841204, i32 -2140841173}
!7758 = !DILocation(line: 2150, column: 2, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 2150, column: 2)
!7760 = !{i32 -2140840762, i32 -2140840755, i32 -2140840703, i32 -2140840672, i32 -2140840642}
!7761 = !DILocation(line: 2150, column: 2, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 2150, column: 2)
!7763 = !DILocation(line: 2150, column: 2, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 2150, column: 2)
!7765 = !DILocation(line: 2153, column: 25, scope: !7693)
!7766 = !DILocation(line: 2153, column: 30, scope: !7693)
!7767 = !DILocation(line: 340, column: 31, scope: !7691, inlinedAt: !7692)
!7768 = !DILocation(line: 101, column: 20, scope: !7360, inlinedAt: !7703)
!7769 = !DILocation(line: 101, column: 23, scope: !7360, inlinedAt: !7703)
!7770 = !DILocation(line: 101, column: 2, scope: !7360, inlinedAt: !7703)
!7771 = !DILocation(line: 102, column: 2, scope: !7360, inlinedAt: !7703)
!7772 = !DILocation(line: 341, column: 32, scope: !7691, inlinedAt: !7692)
!7773 = !DILocation(line: 457, column: 35, scope: !7689, inlinedAt: !7690)
!7774 = !DILocation(line: 178, column: 33, scope: !7687, inlinedAt: !7688)
!7775 = !DILocation(line: 178, column: 32, scope: !7687, inlinedAt: !7688)
!7776 = !DILocation(line: 178, column: 36, scope: !7687, inlinedAt: !7688)
!7777 = !DILocation(line: 165, column: 9, scope: !7338, inlinedAt: !7686)
!7778 = !DILocation(line: 165, column: 11, scope: !7338, inlinedAt: !7686)
!7779 = !DILocation(line: 2153, column: 42, scope: !7693)
!7780 = !DILocation(line: 2153, column: 6, scope: !4743)
!7781 = !DILocation(line: 2154, column: 3, scope: !7693)
!7782 = !DILocation(line: 2156, column: 24, scope: !4743)
!7783 = !DILocation(line: 2156, column: 2, scope: !4743)
!7784 = !DILocation(line: 2158, column: 2, scope: !4743)
!7785 = !DILocation(line: 2158, column: 7, scope: !4743)
!7786 = !DILocation(line: 2158, column: 20, scope: !4743)
!7787 = !DILocation(line: 2159, column: 1, scope: !4743)
!7788 = distinct !DISubprogram(name: "dev_name", scope: !75, file: !75, line: 609, type: !7789, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7789 = !DISubroutineType(types: !7790)
!7790 = !{!340, !3829}
!7791 = !DILocalVariable(name: "dev", arg: 1, scope: !7788, file: !75, line: 609, type: !3829)
!7792 = !DILocation(line: 609, column: 57, scope: !7788)
!7793 = !DILocation(line: 612, column: 6, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7788, file: !75, line: 612, column: 6)
!7795 = !DILocation(line: 612, column: 11, scope: !7794)
!7796 = !DILocation(line: 612, column: 6, scope: !7788)
!7797 = !DILocation(line: 613, column: 10, scope: !7794)
!7798 = !DILocation(line: 613, column: 15, scope: !7794)
!7799 = !DILocation(line: 613, column: 3, scope: !7794)
!7800 = !DILocation(line: 615, column: 23, scope: !7788)
!7801 = !DILocation(line: 615, column: 28, scope: !7788)
!7802 = !DILocation(line: 615, column: 9, scope: !7788)
!7803 = !DILocation(line: 615, column: 2, scope: !7788)
!7804 = !DILocation(line: 616, column: 1, scope: !7788)
!7805 = distinct !DISubprogram(name: "pcibios_set_pcie_reset_state", scope: !3, file: !3, line: 2170, type: !7806, scopeLine: 2172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7806 = !DISubroutineType(types: !7807)
!7807 = !{!304, !273, !144}
!7808 = !DILocalVariable(name: "dev", arg: 1, scope: !7805, file: !3, line: 2170, type: !273)
!7809 = !DILocation(line: 2170, column: 57, scope: !7805)
!7810 = !DILocalVariable(name: "state", arg: 2, scope: !7805, file: !3, line: 2171, type: !144)
!7811 = !DILocation(line: 2171, column: 28, scope: !7805)
!7812 = !DILocation(line: 2173, column: 2, scope: !7805)
!7813 = distinct !DISubprogram(name: "pci_set_pcie_reset_state", scope: !3, file: !3, line: 2183, type: !7806, scopeLine: 2184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7814 = !DILocalVariable(name: "dev", arg: 1, scope: !7813, file: !3, line: 2183, type: !273)
!7815 = !DILocation(line: 2183, column: 46, scope: !7813)
!7816 = !DILocalVariable(name: "state", arg: 2, scope: !7813, file: !3, line: 2183, type: !144)
!7817 = !DILocation(line: 2183, column: 73, scope: !7813)
!7818 = !DILocation(line: 2185, column: 38, scope: !7813)
!7819 = !DILocation(line: 2185, column: 43, scope: !7813)
!7820 = !DILocation(line: 2185, column: 9, scope: !7813)
!7821 = !DILocation(line: 2185, column: 2, scope: !7813)
!7822 = distinct !DISubprogram(name: "pcie_clear_device_status", scope: !3, file: !3, line: 2189, type: !3533, scopeLine: 2190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7823 = !DILocalVariable(name: "dev", arg: 1, scope: !7822, file: !3, line: 2189, type: !273)
!7824 = !DILocation(line: 2189, column: 47, scope: !7822)
!7825 = !DILocalVariable(name: "sta", scope: !7822, file: !3, line: 2191, type: !979)
!7826 = !DILocation(line: 2191, column: 6, scope: !7822)
!7827 = !DILocation(line: 2193, column: 28, scope: !7822)
!7828 = !DILocation(line: 2193, column: 2, scope: !7822)
!7829 = !DILocation(line: 2194, column: 29, scope: !7822)
!7830 = !DILocation(line: 2194, column: 50, scope: !7822)
!7831 = !DILocation(line: 2194, column: 2, scope: !7822)
!7832 = !DILocation(line: 2195, column: 1, scope: !7822)
!7833 = distinct !DISubprogram(name: "pcie_clear_root_pme_status", scope: !3, file: !3, line: 2201, type: !3533, scopeLine: 2202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7834 = !DILocalVariable(name: "dev", arg: 1, scope: !7833, file: !3, line: 2201, type: !273)
!7835 = !DILocation(line: 2201, column: 49, scope: !7833)
!7836 = !DILocation(line: 2203, column: 28, scope: !7833)
!7837 = !DILocation(line: 2203, column: 2, scope: !7833)
!7838 = !DILocation(line: 2204, column: 1, scope: !7833)
!7839 = distinct !DISubprogram(name: "pcie_capability_set_dword", scope: !6, file: !6, line: 1133, type: !7840, scopeLine: 1135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7840 = !DISubroutineType(types: !7841)
!7841 = !{!304, !273, !304, !319}
!7842 = !DILocalVariable(name: "dev", arg: 1, scope: !7839, file: !6, line: 1133, type: !273)
!7843 = !DILocation(line: 1133, column: 61, scope: !7839)
!7844 = !DILocalVariable(name: "pos", arg: 2, scope: !7839, file: !6, line: 1133, type: !304)
!7845 = !DILocation(line: 1133, column: 70, scope: !7839)
!7846 = !DILocalVariable(name: "set", arg: 3, scope: !7839, file: !6, line: 1134, type: !319)
!7847 = !DILocation(line: 1134, column: 14, scope: !7839)
!7848 = !DILocation(line: 1136, column: 45, scope: !7839)
!7849 = !DILocation(line: 1136, column: 50, scope: !7839)
!7850 = !DILocation(line: 1136, column: 58, scope: !7839)
!7851 = !DILocation(line: 1136, column: 9, scope: !7839)
!7852 = !DILocation(line: 1136, column: 2, scope: !7839)
!7853 = distinct !DISubprogram(name: "pci_check_pme_status", scope: !3, file: !3, line: 2214, type: !4785, scopeLine: 2215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7854 = !DILocalVariable(name: "dev", arg: 1, scope: !7853, file: !3, line: 2214, type: !273)
!7855 = !DILocation(line: 2214, column: 43, scope: !7853)
!7856 = !DILocalVariable(name: "pmcsr_pos", scope: !7853, file: !3, line: 2216, type: !304)
!7857 = !DILocation(line: 2216, column: 6, scope: !7853)
!7858 = !DILocalVariable(name: "pmcsr", scope: !7853, file: !3, line: 2217, type: !979)
!7859 = !DILocation(line: 2217, column: 6, scope: !7853)
!7860 = !DILocalVariable(name: "ret", scope: !7853, file: !3, line: 2218, type: !609)
!7861 = !DILocation(line: 2218, column: 7, scope: !7853)
!7862 = !DILocation(line: 2220, column: 7, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 2220, column: 6)
!7864 = !DILocation(line: 2220, column: 12, scope: !7863)
!7865 = !DILocation(line: 2220, column: 6, scope: !7853)
!7866 = !DILocation(line: 2221, column: 3, scope: !7863)
!7867 = !DILocation(line: 2223, column: 14, scope: !7853)
!7868 = !DILocation(line: 2223, column: 19, scope: !7853)
!7869 = !DILocation(line: 2223, column: 26, scope: !7853)
!7870 = !DILocation(line: 2223, column: 12, scope: !7853)
!7871 = !DILocation(line: 2224, column: 23, scope: !7853)
!7872 = !DILocation(line: 2224, column: 28, scope: !7853)
!7873 = !DILocation(line: 2224, column: 2, scope: !7853)
!7874 = !DILocation(line: 2225, column: 8, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 2225, column: 6)
!7876 = !DILocation(line: 2225, column: 14, scope: !7875)
!7877 = !DILocation(line: 2225, column: 6, scope: !7853)
!7878 = !DILocation(line: 2226, column: 3, scope: !7875)
!7879 = !DILocation(line: 2229, column: 8, scope: !7853)
!7880 = !DILocation(line: 2230, column: 6, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 2230, column: 6)
!7882 = !DILocation(line: 2230, column: 12, scope: !7881)
!7883 = !DILocation(line: 2230, column: 6, scope: !7853)
!7884 = !DILocation(line: 2232, column: 9, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7881, file: !3, line: 2230, column: 38)
!7886 = !DILocation(line: 2233, column: 7, scope: !7885)
!7887 = !DILocation(line: 2234, column: 2, scope: !7885)
!7888 = !DILocation(line: 2236, column: 24, scope: !7853)
!7889 = !DILocation(line: 2236, column: 29, scope: !7853)
!7890 = !DILocation(line: 2236, column: 40, scope: !7853)
!7891 = !DILocation(line: 2236, column: 2, scope: !7853)
!7892 = !DILocation(line: 2238, column: 9, scope: !7853)
!7893 = !DILocation(line: 2238, column: 2, scope: !7853)
!7894 = !DILocation(line: 2239, column: 1, scope: !7853)
!7895 = distinct !DISubprogram(name: "pci_pme_wakeup_bus", scope: !3, file: !3, line: 2265, type: !4276, scopeLine: 2266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7896 = !DILocalVariable(name: "bus", arg: 1, scope: !7895, file: !3, line: 2265, type: !259)
!7897 = !DILocation(line: 2265, column: 41, scope: !7895)
!7898 = !DILocation(line: 2267, column: 6, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 2267, column: 6)
!7900 = !DILocation(line: 2267, column: 6, scope: !7895)
!7901 = !DILocation(line: 2268, column: 16, scope: !7899)
!7902 = !DILocation(line: 2268, column: 3, scope: !7899)
!7903 = !DILocation(line: 2269, column: 1, scope: !7895)
!7904 = distinct !DISubprogram(name: "pci_pme_wakeup", scope: !3, file: !3, line: 2249, type: !5767, scopeLine: 2250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7905 = !DILocalVariable(name: "dev", arg: 1, scope: !7904, file: !3, line: 2249, type: !273)
!7906 = !DILocation(line: 2249, column: 43, scope: !7904)
!7907 = !DILocalVariable(name: "pme_poll_reset", arg: 2, scope: !7904, file: !3, line: 2249, type: !258)
!7908 = !DILocation(line: 2249, column: 54, scope: !7904)
!7909 = !DILocation(line: 2251, column: 6, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 2251, column: 6)
!7911 = !DILocation(line: 2251, column: 21, scope: !7910)
!7912 = !DILocation(line: 2251, column: 24, scope: !7910)
!7913 = !DILocation(line: 2251, column: 29, scope: !7910)
!7914 = !DILocation(line: 2251, column: 6, scope: !7904)
!7915 = !DILocation(line: 2252, column: 3, scope: !7910)
!7916 = !DILocation(line: 2252, column: 8, scope: !7910)
!7917 = !DILocation(line: 2252, column: 17, scope: !7910)
!7918 = !DILocation(line: 2254, column: 27, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 2254, column: 6)
!7920 = !DILocation(line: 2254, column: 6, scope: !7919)
!7921 = !DILocation(line: 2254, column: 6, scope: !7904)
!7922 = !DILocation(line: 2255, column: 20, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 2254, column: 33)
!7924 = !DILocation(line: 2255, column: 3, scope: !7923)
!7925 = !DILocation(line: 2256, column: 22, scope: !7923)
!7926 = !DILocation(line: 2256, column: 27, scope: !7923)
!7927 = !DILocation(line: 2256, column: 3, scope: !7923)
!7928 = !DILocation(line: 2257, column: 2, scope: !7923)
!7929 = !DILocation(line: 2258, column: 2, scope: !7904)
!7930 = distinct !DISubprogram(name: "pci_pme_capable", scope: !3, file: !3, line: 2277, type: !7931, scopeLine: 2278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7931 = !DISubroutineType(types: !7932)
!7932 = !{!609, !273, !4124}
!7933 = !DILocalVariable(name: "dev", arg: 1, scope: !7930, file: !3, line: 2277, type: !273)
!7934 = !DILocation(line: 2277, column: 38, scope: !7930)
!7935 = !DILocalVariable(name: "state", arg: 2, scope: !7930, file: !3, line: 2277, type: !4124)
!7936 = !DILocation(line: 2277, column: 55, scope: !7930)
!7937 = !DILocation(line: 2279, column: 7, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7930, file: !3, line: 2279, column: 6)
!7939 = !DILocation(line: 2279, column: 12, scope: !7938)
!7940 = !DILocation(line: 2279, column: 6, scope: !7930)
!7941 = !DILocation(line: 2280, column: 3, scope: !7938)
!7942 = !DILocation(line: 2282, column: 12, scope: !7930)
!7943 = !DILocation(line: 2282, column: 17, scope: !7930)
!7944 = !DILocation(line: 2282, column: 37, scope: !7930)
!7945 = !DILocation(line: 2282, column: 34, scope: !7930)
!7946 = !DILocation(line: 2282, column: 29, scope: !7930)
!7947 = !DILocation(line: 2282, column: 10, scope: !7930)
!7948 = !DILocation(line: 2282, column: 9, scope: !7930)
!7949 = !DILocation(line: 2282, column: 2, scope: !7930)
!7950 = !DILocation(line: 2283, column: 1, scope: !7930)
!7951 = distinct !DISubprogram(name: "pci_pme_restore", scope: !3, file: !3, line: 2342, type: !3533, scopeLine: 2343, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7952 = !DILocalVariable(name: "dev", arg: 1, scope: !7951, file: !3, line: 2342, type: !273)
!7953 = !DILocation(line: 2342, column: 38, scope: !7951)
!7954 = !DILocalVariable(name: "pmcsr", scope: !7951, file: !3, line: 2344, type: !979)
!7955 = !DILocation(line: 2344, column: 6, scope: !7951)
!7956 = !DILocation(line: 2346, column: 7, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 2346, column: 6)
!7958 = !DILocation(line: 2346, column: 12, scope: !7957)
!7959 = !DILocation(line: 2346, column: 6, scope: !7951)
!7960 = !DILocation(line: 2347, column: 3, scope: !7957)
!7961 = !DILocation(line: 2349, column: 23, scope: !7951)
!7962 = !DILocation(line: 2349, column: 28, scope: !7951)
!7963 = !DILocation(line: 2349, column: 33, scope: !7951)
!7964 = !DILocation(line: 2349, column: 40, scope: !7951)
!7965 = !DILocation(line: 2349, column: 2, scope: !7951)
!7966 = !DILocation(line: 2350, column: 6, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 2350, column: 6)
!7968 = !DILocation(line: 2350, column: 11, scope: !7967)
!7969 = !DILocation(line: 2350, column: 6, scope: !7951)
!7970 = !DILocation(line: 2351, column: 9, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 2350, column: 28)
!7972 = !DILocation(line: 2352, column: 9, scope: !7971)
!7973 = !DILocation(line: 2353, column: 2, scope: !7971)
!7974 = !DILocation(line: 2354, column: 9, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 2353, column: 9)
!7976 = !DILocation(line: 2355, column: 9, scope: !7975)
!7977 = !DILocation(line: 2357, column: 24, scope: !7951)
!7978 = !DILocation(line: 2357, column: 29, scope: !7951)
!7979 = !DILocation(line: 2357, column: 34, scope: !7951)
!7980 = !DILocation(line: 2357, column: 41, scope: !7951)
!7981 = !DILocation(line: 2357, column: 56, scope: !7951)
!7982 = !DILocation(line: 2357, column: 2, scope: !7951)
!7983 = !DILocation(line: 2358, column: 1, scope: !7951)
!7984 = distinct !DISubprogram(name: "pci_pme_active", scope: !3, file: !3, line: 2368, type: !7985, scopeLine: 2369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7985 = !DISubroutineType(types: !7986)
!7986 = !{null, !273, !609}
!7987 = !DILocalVariable(name: "m", arg: 1, scope: !7988, file: !7989, line: 363, type: !2945)
!7988 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !7989, file: !7989, line: 363, type: !7990, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7989 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!7990 = !DISubroutineType(types: !7991)
!7991 = !{!448, !2945}
!7992 = !DILocation(line: 363, column: 74, scope: !7988, inlinedAt: !7993)
!7993 = distinct !DILocation(line: 2407, column: 10, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 2404, column: 8)
!7995 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 2394, column: 15)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 2394, column: 7)
!7997 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 2392, column: 21)
!7998 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 2392, column: 6)
!7999 = !DILocation(line: 445, column: 72, scope: !6834, inlinedAt: !8000)
!8000 = distinct !DILocation(line: 552, column: 10, scope: !6839, inlinedAt: !8001)
!8001 = distinct !DILocation(line: 2395, column: 14, scope: !7995)
!8002 = !DILocation(line: 446, column: 9, scope: !6834, inlinedAt: !8000)
!8003 = !DILocation(line: 446, column: 23, scope: !6834, inlinedAt: !8000)
!8004 = !DILocation(line: 448, column: 8, scope: !6834, inlinedAt: !8000)
!8005 = !DILocation(line: 318, column: 67, scope: !6850, inlinedAt: !8006)
!8006 = distinct !DILocation(line: 553, column: 20, scope: !6839, inlinedAt: !8001)
!8007 = !DILocation(line: 346, column: 58, scope: !6856, inlinedAt: !8008)
!8008 = distinct !DILocation(line: 547, column: 11, scope: !6839, inlinedAt: !8001)
!8009 = !DILocation(line: 472, column: 28, scope: !6862, inlinedAt: !8010)
!8010 = distinct !DILocation(line: 481, column: 9, scope: !6867, inlinedAt: !8011)
!8011 = distinct !DILocation(line: 545, column: 11, scope: !6869, inlinedAt: !8001)
!8012 = !DILocation(line: 472, column: 40, scope: !6862, inlinedAt: !8010)
!8013 = !DILocation(line: 472, column: 60, scope: !6862, inlinedAt: !8010)
!8014 = !DILocation(line: 478, column: 51, scope: !6867, inlinedAt: !8011)
!8015 = !DILocation(line: 478, column: 63, scope: !6867, inlinedAt: !8011)
!8016 = !DILocation(line: 480, column: 15, scope: !6867, inlinedAt: !8011)
!8017 = !DILocation(line: 538, column: 45, scope: !6841, inlinedAt: !8001)
!8018 = !DILocation(line: 538, column: 57, scope: !6841, inlinedAt: !8001)
!8019 = !DILocation(line: 542, column: 16, scope: !6839, inlinedAt: !8001)
!8020 = !DILocalVariable(name: "dev", arg: 1, scope: !7984, file: !3, line: 2368, type: !273)
!8021 = !DILocation(line: 2368, column: 37, scope: !7984)
!8022 = !DILocalVariable(name: "enable", arg: 2, scope: !7984, file: !3, line: 2368, type: !609)
!8023 = !DILocation(line: 2368, column: 47, scope: !7984)
!8024 = !DILocation(line: 2370, column: 19, scope: !7984)
!8025 = !DILocation(line: 2370, column: 24, scope: !7984)
!8026 = !DILocation(line: 2370, column: 2, scope: !7984)
!8027 = !DILocation(line: 2392, column: 6, scope: !7998)
!8028 = !DILocation(line: 2392, column: 11, scope: !7998)
!8029 = !DILocation(line: 2392, column: 6, scope: !7984)
!8030 = !DILocalVariable(name: "pme_dev", scope: !7997, file: !3, line: 2393, type: !4405)
!8031 = !DILocation(line: 2393, column: 26, scope: !7997)
!8032 = !DILocation(line: 2394, column: 7, scope: !7996)
!8033 = !DILocation(line: 2394, column: 7, scope: !7997)
!8034 = !DILocation(line: 540, column: 27, scope: !6840, inlinedAt: !8001)
!8035 = !DILocation(line: 540, column: 6, scope: !6840, inlinedAt: !8001)
!8036 = !DILocation(line: 540, column: 6, scope: !6841, inlinedAt: !8001)
!8037 = !DILocation(line: 544, column: 7, scope: !6869, inlinedAt: !8001)
!8038 = !DILocation(line: 544, column: 12, scope: !6869, inlinedAt: !8001)
!8039 = !DILocation(line: 544, column: 7, scope: !6839, inlinedAt: !8001)
!8040 = !DILocation(line: 545, column: 25, scope: !6869, inlinedAt: !8001)
!8041 = !DILocation(line: 545, column: 31, scope: !6869, inlinedAt: !8001)
!8042 = !DILocation(line: 480, column: 33, scope: !6867, inlinedAt: !8011)
!8043 = !DILocation(line: 480, column: 23, scope: !6867, inlinedAt: !8011)
!8044 = !DILocation(line: 481, column: 29, scope: !6867, inlinedAt: !8011)
!8045 = !DILocation(line: 481, column: 35, scope: !6867, inlinedAt: !8011)
!8046 = !DILocation(line: 481, column: 42, scope: !6867, inlinedAt: !8011)
!8047 = !DILocation(line: 474, column: 23, scope: !6862, inlinedAt: !8010)
!8048 = !DILocation(line: 474, column: 29, scope: !6862, inlinedAt: !8010)
!8049 = !DILocation(line: 474, column: 36, scope: !6862, inlinedAt: !8010)
!8050 = !DILocation(line: 474, column: 9, scope: !6862, inlinedAt: !8010)
!8051 = !DILocation(line: 545, column: 4, scope: !6869, inlinedAt: !8001)
!8052 = !DILocation(line: 547, column: 25, scope: !6839, inlinedAt: !8001)
!8053 = !DILocation(line: 348, column: 7, scope: !6913, inlinedAt: !8008)
!8054 = !DILocation(line: 348, column: 6, scope: !6856, inlinedAt: !8008)
!8055 = !DILocation(line: 349, column: 3, scope: !6913, inlinedAt: !8008)
!8056 = !DILocation(line: 351, column: 6, scope: !6917, inlinedAt: !8008)
!8057 = !DILocation(line: 351, column: 11, scope: !6917, inlinedAt: !8008)
!8058 = !DILocation(line: 351, column: 6, scope: !6856, inlinedAt: !8008)
!8059 = !DILocation(line: 352, column: 3, scope: !6917, inlinedAt: !8008)
!8060 = !DILocation(line: 354, column: 32, scope: !6922, inlinedAt: !8008)
!8061 = !DILocation(line: 354, column: 37, scope: !6922, inlinedAt: !8008)
!8062 = !DILocation(line: 354, column: 42, scope: !6922, inlinedAt: !8008)
!8063 = !DILocation(line: 354, column: 45, scope: !6922, inlinedAt: !8008)
!8064 = !DILocation(line: 354, column: 50, scope: !6922, inlinedAt: !8008)
!8065 = !DILocation(line: 354, column: 6, scope: !6856, inlinedAt: !8008)
!8066 = !DILocation(line: 355, column: 3, scope: !6922, inlinedAt: !8008)
!8067 = !DILocation(line: 356, column: 32, scope: !6930, inlinedAt: !8008)
!8068 = !DILocation(line: 356, column: 37, scope: !6930, inlinedAt: !8008)
!8069 = !DILocation(line: 356, column: 43, scope: !6930, inlinedAt: !8008)
!8070 = !DILocation(line: 356, column: 46, scope: !6930, inlinedAt: !8008)
!8071 = !DILocation(line: 356, column: 51, scope: !6930, inlinedAt: !8008)
!8072 = !DILocation(line: 356, column: 6, scope: !6856, inlinedAt: !8008)
!8073 = !DILocation(line: 357, column: 3, scope: !6930, inlinedAt: !8008)
!8074 = !DILocation(line: 358, column: 6, scope: !6938, inlinedAt: !8008)
!8075 = !DILocation(line: 358, column: 11, scope: !6938, inlinedAt: !8008)
!8076 = !DILocation(line: 358, column: 6, scope: !6856, inlinedAt: !8008)
!8077 = !DILocation(line: 358, column: 26, scope: !6938, inlinedAt: !8008)
!8078 = !DILocation(line: 359, column: 6, scope: !6943, inlinedAt: !8008)
!8079 = !DILocation(line: 359, column: 11, scope: !6943, inlinedAt: !8008)
!8080 = !DILocation(line: 359, column: 6, scope: !6856, inlinedAt: !8008)
!8081 = !DILocation(line: 359, column: 26, scope: !6943, inlinedAt: !8008)
!8082 = !DILocation(line: 360, column: 6, scope: !6948, inlinedAt: !8008)
!8083 = !DILocation(line: 360, column: 11, scope: !6948, inlinedAt: !8008)
!8084 = !DILocation(line: 360, column: 6, scope: !6856, inlinedAt: !8008)
!8085 = !DILocation(line: 360, column: 26, scope: !6948, inlinedAt: !8008)
!8086 = !DILocation(line: 361, column: 6, scope: !6953, inlinedAt: !8008)
!8087 = !DILocation(line: 361, column: 11, scope: !6953, inlinedAt: !8008)
!8088 = !DILocation(line: 361, column: 6, scope: !6856, inlinedAt: !8008)
!8089 = !DILocation(line: 361, column: 26, scope: !6953, inlinedAt: !8008)
!8090 = !DILocation(line: 362, column: 6, scope: !6958, inlinedAt: !8008)
!8091 = !DILocation(line: 362, column: 11, scope: !6958, inlinedAt: !8008)
!8092 = !DILocation(line: 362, column: 6, scope: !6856, inlinedAt: !8008)
!8093 = !DILocation(line: 362, column: 26, scope: !6958, inlinedAt: !8008)
!8094 = !DILocation(line: 363, column: 6, scope: !6963, inlinedAt: !8008)
!8095 = !DILocation(line: 363, column: 11, scope: !6963, inlinedAt: !8008)
!8096 = !DILocation(line: 363, column: 6, scope: !6856, inlinedAt: !8008)
!8097 = !DILocation(line: 363, column: 26, scope: !6963, inlinedAt: !8008)
!8098 = !DILocation(line: 364, column: 6, scope: !6968, inlinedAt: !8008)
!8099 = !DILocation(line: 364, column: 11, scope: !6968, inlinedAt: !8008)
!8100 = !DILocation(line: 364, column: 6, scope: !6856, inlinedAt: !8008)
!8101 = !DILocation(line: 364, column: 26, scope: !6968, inlinedAt: !8008)
!8102 = !DILocation(line: 365, column: 6, scope: !6973, inlinedAt: !8008)
!8103 = !DILocation(line: 365, column: 11, scope: !6973, inlinedAt: !8008)
!8104 = !DILocation(line: 365, column: 6, scope: !6856, inlinedAt: !8008)
!8105 = !DILocation(line: 365, column: 26, scope: !6973, inlinedAt: !8008)
!8106 = !DILocation(line: 366, column: 6, scope: !6978, inlinedAt: !8008)
!8107 = !DILocation(line: 366, column: 11, scope: !6978, inlinedAt: !8008)
!8108 = !DILocation(line: 366, column: 6, scope: !6856, inlinedAt: !8008)
!8109 = !DILocation(line: 366, column: 26, scope: !6978, inlinedAt: !8008)
!8110 = !DILocation(line: 367, column: 6, scope: !6983, inlinedAt: !8008)
!8111 = !DILocation(line: 367, column: 11, scope: !6983, inlinedAt: !8008)
!8112 = !DILocation(line: 367, column: 6, scope: !6856, inlinedAt: !8008)
!8113 = !DILocation(line: 367, column: 26, scope: !6983, inlinedAt: !8008)
!8114 = !DILocation(line: 368, column: 6, scope: !6988, inlinedAt: !8008)
!8115 = !DILocation(line: 368, column: 11, scope: !6988, inlinedAt: !8008)
!8116 = !DILocation(line: 368, column: 6, scope: !6856, inlinedAt: !8008)
!8117 = !DILocation(line: 368, column: 26, scope: !6988, inlinedAt: !8008)
!8118 = !DILocation(line: 369, column: 6, scope: !6993, inlinedAt: !8008)
!8119 = !DILocation(line: 369, column: 11, scope: !6993, inlinedAt: !8008)
!8120 = !DILocation(line: 369, column: 6, scope: !6856, inlinedAt: !8008)
!8121 = !DILocation(line: 369, column: 26, scope: !6993, inlinedAt: !8008)
!8122 = !DILocation(line: 370, column: 6, scope: !6998, inlinedAt: !8008)
!8123 = !DILocation(line: 370, column: 11, scope: !6998, inlinedAt: !8008)
!8124 = !DILocation(line: 370, column: 6, scope: !6856, inlinedAt: !8008)
!8125 = !DILocation(line: 370, column: 26, scope: !6998, inlinedAt: !8008)
!8126 = !DILocation(line: 371, column: 6, scope: !7003, inlinedAt: !8008)
!8127 = !DILocation(line: 371, column: 11, scope: !7003, inlinedAt: !8008)
!8128 = !DILocation(line: 371, column: 6, scope: !6856, inlinedAt: !8008)
!8129 = !DILocation(line: 371, column: 26, scope: !7003, inlinedAt: !8008)
!8130 = !DILocation(line: 372, column: 6, scope: !7008, inlinedAt: !8008)
!8131 = !DILocation(line: 372, column: 11, scope: !7008, inlinedAt: !8008)
!8132 = !DILocation(line: 372, column: 6, scope: !6856, inlinedAt: !8008)
!8133 = !DILocation(line: 372, column: 26, scope: !7008, inlinedAt: !8008)
!8134 = !DILocation(line: 373, column: 6, scope: !7013, inlinedAt: !8008)
!8135 = !DILocation(line: 373, column: 11, scope: !7013, inlinedAt: !8008)
!8136 = !DILocation(line: 373, column: 6, scope: !6856, inlinedAt: !8008)
!8137 = !DILocation(line: 373, column: 26, scope: !7013, inlinedAt: !8008)
!8138 = !DILocation(line: 374, column: 6, scope: !7018, inlinedAt: !8008)
!8139 = !DILocation(line: 374, column: 11, scope: !7018, inlinedAt: !8008)
!8140 = !DILocation(line: 374, column: 6, scope: !6856, inlinedAt: !8008)
!8141 = !DILocation(line: 374, column: 26, scope: !7018, inlinedAt: !8008)
!8142 = !DILocation(line: 375, column: 6, scope: !7023, inlinedAt: !8008)
!8143 = !DILocation(line: 375, column: 11, scope: !7023, inlinedAt: !8008)
!8144 = !DILocation(line: 375, column: 6, scope: !6856, inlinedAt: !8008)
!8145 = !DILocation(line: 375, column: 27, scope: !7023, inlinedAt: !8008)
!8146 = !DILocation(line: 376, column: 6, scope: !7028, inlinedAt: !8008)
!8147 = !DILocation(line: 376, column: 11, scope: !7028, inlinedAt: !8008)
!8148 = !DILocation(line: 376, column: 6, scope: !6856, inlinedAt: !8008)
!8149 = !DILocation(line: 376, column: 32, scope: !7028, inlinedAt: !8008)
!8150 = !DILocation(line: 377, column: 6, scope: !7033, inlinedAt: !8008)
!8151 = !DILocation(line: 377, column: 11, scope: !7033, inlinedAt: !8008)
!8152 = !DILocation(line: 377, column: 6, scope: !6856, inlinedAt: !8008)
!8153 = !DILocation(line: 377, column: 32, scope: !7033, inlinedAt: !8008)
!8154 = !DILocation(line: 378, column: 6, scope: !7038, inlinedAt: !8008)
!8155 = !DILocation(line: 378, column: 11, scope: !7038, inlinedAt: !8008)
!8156 = !DILocation(line: 378, column: 6, scope: !6856, inlinedAt: !8008)
!8157 = !DILocation(line: 378, column: 32, scope: !7038, inlinedAt: !8008)
!8158 = !DILocation(line: 379, column: 6, scope: !7043, inlinedAt: !8008)
!8159 = !DILocation(line: 379, column: 11, scope: !7043, inlinedAt: !8008)
!8160 = !DILocation(line: 379, column: 6, scope: !6856, inlinedAt: !8008)
!8161 = !DILocation(line: 379, column: 33, scope: !7043, inlinedAt: !8008)
!8162 = !DILocation(line: 380, column: 6, scope: !7048, inlinedAt: !8008)
!8163 = !DILocation(line: 380, column: 11, scope: !7048, inlinedAt: !8008)
!8164 = !DILocation(line: 380, column: 6, scope: !6856, inlinedAt: !8008)
!8165 = !DILocation(line: 380, column: 33, scope: !7048, inlinedAt: !8008)
!8166 = !DILocation(line: 381, column: 6, scope: !7053, inlinedAt: !8008)
!8167 = !DILocation(line: 381, column: 11, scope: !7053, inlinedAt: !8008)
!8168 = !DILocation(line: 381, column: 6, scope: !6856, inlinedAt: !8008)
!8169 = !DILocation(line: 381, column: 33, scope: !7053, inlinedAt: !8008)
!8170 = !DILocation(line: 382, column: 2, scope: !7058, inlinedAt: !8008)
!8171 = !DILocation(line: 382, column: 2, scope: !7062, inlinedAt: !8008)
!8172 = !DILocation(line: 382, column: 2, scope: !7063, inlinedAt: !8008)
!8173 = !DILocation(line: 386, column: 1, scope: !6856, inlinedAt: !8008)
!8174 = !DILocation(line: 547, column: 9, scope: !6839, inlinedAt: !8001)
!8175 = !DILocation(line: 549, column: 8, scope: !7069, inlinedAt: !8001)
!8176 = !DILocation(line: 549, column: 7, scope: !6839, inlinedAt: !8001)
!8177 = !DILocation(line: 550, column: 4, scope: !7069, inlinedAt: !8001)
!8178 = !DILocation(line: 553, column: 33, scope: !6839, inlinedAt: !8001)
!8179 = !DILocation(line: 325, column: 6, scope: !7074, inlinedAt: !8006)
!8180 = !DILocation(line: 325, column: 6, scope: !6850, inlinedAt: !8006)
!8181 = !DILocation(line: 326, column: 3, scope: !7074, inlinedAt: !8006)
!8182 = !DILocation(line: 332, column: 9, scope: !6850, inlinedAt: !8006)
!8183 = !DILocation(line: 332, column: 15, scope: !6850, inlinedAt: !8006)
!8184 = !DILocation(line: 332, column: 2, scope: !6850, inlinedAt: !8006)
!8185 = !DILocation(line: 336, column: 1, scope: !6850, inlinedAt: !8006)
!8186 = !DILocation(line: 553, column: 5, scope: !6839, inlinedAt: !8001)
!8187 = !DILocation(line: 553, column: 41, scope: !6839, inlinedAt: !8001)
!8188 = !DILocation(line: 554, column: 5, scope: !6839, inlinedAt: !8001)
!8189 = !DILocation(line: 554, column: 12, scope: !6839, inlinedAt: !8001)
!8190 = !DILocation(line: 448, column: 31, scope: !6834, inlinedAt: !8000)
!8191 = !DILocation(line: 448, column: 34, scope: !6834, inlinedAt: !8000)
!8192 = !DILocation(line: 448, column: 14, scope: !6834, inlinedAt: !8000)
!8193 = !DILocation(line: 450, column: 22, scope: !6834, inlinedAt: !8000)
!8194 = !DILocation(line: 450, column: 25, scope: !6834, inlinedAt: !8000)
!8195 = !DILocation(line: 450, column: 30, scope: !6834, inlinedAt: !8000)
!8196 = !DILocation(line: 450, column: 36, scope: !6834, inlinedAt: !8000)
!8197 = !DILocation(line: 450, column: 8, scope: !6834, inlinedAt: !8000)
!8198 = !DILocation(line: 450, column: 6, scope: !6834, inlinedAt: !8000)
!8199 = !DILocation(line: 451, column: 9, scope: !6834, inlinedAt: !8000)
!8200 = !DILocation(line: 552, column: 3, scope: !6839, inlinedAt: !8001)
!8201 = !DILocation(line: 557, column: 19, scope: !6841, inlinedAt: !8001)
!8202 = !DILocation(line: 557, column: 25, scope: !6841, inlinedAt: !8001)
!8203 = !DILocation(line: 557, column: 9, scope: !6841, inlinedAt: !8001)
!8204 = !DILocation(line: 557, column: 2, scope: !6841, inlinedAt: !8001)
!8205 = !DILocation(line: 558, column: 1, scope: !6841, inlinedAt: !8001)
!8206 = !DILocation(line: 2395, column: 14, scope: !7995)
!8207 = !DILocation(line: 2395, column: 12, scope: !7995)
!8208 = !DILocation(line: 2397, column: 9, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 2397, column: 8)
!8210 = !DILocation(line: 2397, column: 8, scope: !7995)
!8211 = !DILocation(line: 2398, column: 5, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 2397, column: 18)
!8213 = !DILocation(line: 2399, column: 5, scope: !8212)
!8214 = !DILocation(line: 2401, column: 19, scope: !7995)
!8215 = !DILocation(line: 2401, column: 4, scope: !7995)
!8216 = !DILocation(line: 2401, column: 13, scope: !7995)
!8217 = !DILocation(line: 2401, column: 17, scope: !7995)
!8218 = !DILocation(line: 2402, column: 4, scope: !7995)
!8219 = !DILocation(line: 2403, column: 14, scope: !7995)
!8220 = !DILocation(line: 2403, column: 23, scope: !7995)
!8221 = !DILocation(line: 2403, column: 4, scope: !7995)
!8222 = !DILocation(line: 2404, column: 8, scope: !7994)
!8223 = !DILocation(line: 2404, column: 8, scope: !7995)
!8224 = !DILocation(line: 2405, column: 24, scope: !7994)
!8225 = !DILocation(line: 365, column: 27, scope: !8226, inlinedAt: !7993)
!8226 = distinct !DILexicalBlock(scope: !7988, file: !7989, line: 365, column: 6)
!8227 = !DILocation(line: 365, column: 6, scope: !8226, inlinedAt: !7993)
!8228 = !DILocation(line: 365, column: 6, scope: !7988, inlinedAt: !7993)
!8229 = !DILocation(line: 366, column: 12, scope: !8230, inlinedAt: !7993)
!8230 = distinct !DILexicalBlock(scope: !8231, file: !7989, line: 366, column: 7)
!8231 = distinct !DILexicalBlock(scope: !8226, file: !7989, line: 365, column: 31)
!8232 = !DILocation(line: 366, column: 14, scope: !8230, inlinedAt: !7993)
!8233 = !DILocation(line: 366, column: 7, scope: !8231, inlinedAt: !7993)
!8234 = !DILocation(line: 367, column: 4, scope: !8230, inlinedAt: !7993)
!8235 = !DILocation(line: 368, column: 28, scope: !8231, inlinedAt: !7993)
!8236 = !DILocation(line: 368, column: 10, scope: !8231, inlinedAt: !7993)
!8237 = !DILocation(line: 368, column: 3, scope: !8231, inlinedAt: !7993)
!8238 = !DILocation(line: 370, column: 29, scope: !8239, inlinedAt: !7993)
!8239 = distinct !DILexicalBlock(scope: !8226, file: !7989, line: 369, column: 9)
!8240 = !DILocation(line: 370, column: 10, scope: !8239, inlinedAt: !7993)
!8241 = !DILocation(line: 370, column: 3, scope: !8239, inlinedAt: !7993)
!8242 = !DILocation(line: 372, column: 1, scope: !7988, inlinedAt: !7993)
!8243 = !DILocation(line: 2405, column: 5, scope: !7994)
!8244 = !DILocation(line: 2408, column: 4, scope: !7995)
!8245 = !DILocation(line: 2409, column: 3, scope: !7995)
!8246 = !DILocation(line: 2410, column: 4, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 2409, column: 10)
!8248 = !DILocalVariable(name: "__mptr", scope: !8249, file: !3, line: 2411, type: !258)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 2411, column: 4)
!8250 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 2411, column: 4)
!8251 = !DILocation(line: 2411, column: 4, scope: !8249)
!8252 = !DILocation(line: 2411, column: 4, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 2411, column: 4)
!8254 = !DILocation(line: 2411, column: 4, scope: !8250)
!8255 = !DILocation(line: 2411, column: 4, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 2411, column: 4)
!8257 = !DILocation(line: 2412, column: 9, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 2412, column: 9)
!8259 = distinct !DILexicalBlock(scope: !8256, file: !3, line: 2411, column: 54)
!8260 = !DILocation(line: 2412, column: 18, scope: !8258)
!8261 = !DILocation(line: 2412, column: 25, scope: !8258)
!8262 = !DILocation(line: 2412, column: 22, scope: !8258)
!8263 = !DILocation(line: 2412, column: 9, scope: !8259)
!8264 = !DILocation(line: 2413, column: 16, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 2412, column: 30)
!8266 = !DILocation(line: 2413, column: 25, scope: !8265)
!8267 = !DILocation(line: 2413, column: 6, scope: !8265)
!8268 = !DILocation(line: 2414, column: 12, scope: !8265)
!8269 = !DILocation(line: 2414, column: 6, scope: !8265)
!8270 = !DILocation(line: 2415, column: 6, scope: !8265)
!8271 = !DILocation(line: 2417, column: 4, scope: !8259)
!8272 = !DILocalVariable(name: "__mptr", scope: !8273, file: !3, line: 2411, type: !258)
!8273 = distinct !DILexicalBlock(scope: !8256, file: !3, line: 2411, column: 4)
!8274 = !DILocation(line: 2411, column: 4, scope: !8273)
!8275 = !DILocation(line: 2411, column: 4, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 2411, column: 4)
!8277 = distinct !{!8277, !8254, !8278}
!8278 = !DILocation(line: 2417, column: 4, scope: !8250)
!8279 = !DILocation(line: 2418, column: 4, scope: !8247)
!8280 = !DILocation(line: 2420, column: 2, scope: !7997)
!8281 = !DILocation(line: 2423, column: 1, scope: !7984)
!8282 = distinct !DISubprogram(name: "__pci_pme_active", scope: !3, file: !3, line: 2322, type: !7985, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8283 = !DILocalVariable(name: "dev", arg: 1, scope: !8282, file: !3, line: 2322, type: !273)
!8284 = !DILocation(line: 2322, column: 46, scope: !8282)
!8285 = !DILocalVariable(name: "enable", arg: 2, scope: !8282, file: !3, line: 2322, type: !609)
!8286 = !DILocation(line: 2322, column: 56, scope: !8282)
!8287 = !DILocalVariable(name: "pmcsr", scope: !8282, file: !3, line: 2324, type: !979)
!8288 = !DILocation(line: 2324, column: 6, scope: !8282)
!8289 = !DILocation(line: 2326, column: 7, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 2326, column: 6)
!8291 = !DILocation(line: 2326, column: 12, scope: !8290)
!8292 = !DILocation(line: 2326, column: 6, scope: !8282)
!8293 = !DILocation(line: 2327, column: 3, scope: !8290)
!8294 = !DILocation(line: 2329, column: 23, scope: !8282)
!8295 = !DILocation(line: 2329, column: 28, scope: !8282)
!8296 = !DILocation(line: 2329, column: 33, scope: !8282)
!8297 = !DILocation(line: 2329, column: 40, scope: !8282)
!8298 = !DILocation(line: 2329, column: 2, scope: !8282)
!8299 = !DILocation(line: 2331, column: 8, scope: !8282)
!8300 = !DILocation(line: 2332, column: 7, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 2332, column: 6)
!8302 = !DILocation(line: 2332, column: 6, scope: !8282)
!8303 = !DILocation(line: 2333, column: 9, scope: !8301)
!8304 = !DILocation(line: 2333, column: 3, scope: !8301)
!8305 = !DILocation(line: 2335, column: 24, scope: !8282)
!8306 = !DILocation(line: 2335, column: 29, scope: !8282)
!8307 = !DILocation(line: 2335, column: 34, scope: !8282)
!8308 = !DILocation(line: 2335, column: 41, scope: !8282)
!8309 = !DILocation(line: 2335, column: 56, scope: !8282)
!8310 = !DILocation(line: 2335, column: 2, scope: !8282)
!8311 = !DILocation(line: 2336, column: 1, scope: !8282)
!8312 = distinct !DISubprogram(name: "list_add", scope: !8313, file: !8313, line: 84, type: !8314, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8313 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!8314 = !DISubroutineType(types: !8315)
!8315 = !{null, !267, !267}
!8316 = !DILocalVariable(name: "new", arg: 1, scope: !8312, file: !8313, line: 84, type: !267)
!8317 = !DILocation(line: 84, column: 47, scope: !8312)
!8318 = !DILocalVariable(name: "head", arg: 2, scope: !8312, file: !8313, line: 84, type: !267)
!8319 = !DILocation(line: 84, column: 70, scope: !8312)
!8320 = !DILocation(line: 86, column: 13, scope: !8312)
!8321 = !DILocation(line: 86, column: 18, scope: !8312)
!8322 = !DILocation(line: 86, column: 24, scope: !8312)
!8323 = !DILocation(line: 86, column: 30, scope: !8312)
!8324 = !DILocation(line: 86, column: 2, scope: !8312)
!8325 = !DILocation(line: 87, column: 1, scope: !8312)
!8326 = distinct !DISubprogram(name: "list_is_singular", scope: !8313, file: !8313, line: 358, type: !8327, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8327 = !DISubroutineType(types: !8328)
!8328 = !{!304, !8329}
!8329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8330, size: 64)
!8330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !263)
!8331 = !DILocalVariable(name: "head", arg: 1, scope: !8326, file: !8313, line: 358, type: !8329)
!8332 = !DILocation(line: 358, column: 60, scope: !8326)
!8333 = !DILocation(line: 360, column: 21, scope: !8326)
!8334 = !DILocation(line: 360, column: 10, scope: !8326)
!8335 = !DILocation(line: 360, column: 27, scope: !8326)
!8336 = !DILocation(line: 360, column: 31, scope: !8326)
!8337 = !DILocation(line: 360, column: 37, scope: !8326)
!8338 = !DILocation(line: 360, column: 45, scope: !8326)
!8339 = !DILocation(line: 360, column: 51, scope: !8326)
!8340 = !DILocation(line: 360, column: 42, scope: !8326)
!8341 = !DILocation(line: 0, scope: !8326)
!8342 = !DILocation(line: 360, column: 2, scope: !8326)
!8343 = distinct !DISubprogram(name: "queue_delayed_work", scope: !211, file: !211, line: 518, type: !8344, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8344 = !DISubroutineType(types: !8345)
!8345 = !{!609, !2911, !8346, !448}
!8346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 64)
!8347 = !DILocalVariable(name: "wq", arg: 1, scope: !8343, file: !211, line: 518, type: !2911)
!8348 = !DILocation(line: 518, column: 64, scope: !8343)
!8349 = !DILocalVariable(name: "dwork", arg: 2, scope: !8343, file: !211, line: 519, type: !8346)
!8350 = !DILocation(line: 519, column: 32, scope: !8343)
!8351 = !DILocalVariable(name: "delay", arg: 3, scope: !8343, file: !211, line: 520, type: !448)
!8352 = !DILocation(line: 520, column: 25, scope: !8343)
!8353 = !DILocation(line: 522, column: 49, scope: !8343)
!8354 = !DILocation(line: 522, column: 53, scope: !8343)
!8355 = !DILocation(line: 522, column: 60, scope: !8343)
!8356 = !DILocation(line: 522, column: 9, scope: !8343)
!8357 = !DILocation(line: 522, column: 2, scope: !8343)
!8358 = distinct !DISubprogram(name: "list_del", scope: !8313, file: !8313, line: 144, type: !8359, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{null, !267}
!8361 = !DILocalVariable(name: "entry", arg: 1, scope: !8358, file: !8313, line: 144, type: !267)
!8362 = !DILocation(line: 144, column: 47, scope: !8358)
!8363 = !DILocation(line: 146, column: 19, scope: !8358)
!8364 = !DILocation(line: 146, column: 2, scope: !8358)
!8365 = !DILocation(line: 147, column: 2, scope: !8358)
!8366 = !DILocation(line: 147, column: 9, scope: !8358)
!8367 = !DILocation(line: 147, column: 14, scope: !8358)
!8368 = !DILocation(line: 148, column: 2, scope: !8358)
!8369 = !DILocation(line: 148, column: 9, scope: !8358)
!8370 = !DILocation(line: 148, column: 14, scope: !8358)
!8371 = !DILocation(line: 149, column: 1, scope: !8358)
!8372 = distinct !DISubprogram(name: "pci_enable_wake", scope: !3, file: !3, line: 2499, type: !8373, scopeLine: 2500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8373 = !DISubroutineType(types: !8374)
!8374 = !{!304, !273, !4124, !609}
!8375 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !8372, file: !3, line: 2499, type: !273)
!8376 = !DILocation(line: 2499, column: 37, scope: !8372)
!8377 = !DILocalVariable(name: "state", arg: 2, scope: !8372, file: !3, line: 2499, type: !4124)
!8378 = !DILocation(line: 2499, column: 58, scope: !8372)
!8379 = !DILocalVariable(name: "enable", arg: 3, scope: !8372, file: !3, line: 2499, type: !609)
!8380 = !DILocation(line: 2499, column: 70, scope: !8372)
!8381 = !DILocation(line: 2501, column: 6, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 2501, column: 6)
!8383 = !DILocation(line: 2501, column: 13, scope: !8382)
!8384 = !DILocation(line: 2501, column: 36, scope: !8382)
!8385 = !DILocation(line: 2501, column: 45, scope: !8382)
!8386 = !DILocation(line: 2501, column: 17, scope: !8382)
!8387 = !DILocation(line: 2501, column: 6, scope: !8372)
!8388 = !DILocation(line: 2502, column: 3, scope: !8382)
!8389 = !DILocation(line: 2504, column: 27, scope: !8372)
!8390 = !DILocation(line: 2504, column: 36, scope: !8372)
!8391 = !DILocation(line: 2504, column: 43, scope: !8372)
!8392 = !DILocation(line: 2504, column: 9, scope: !8372)
!8393 = !DILocation(line: 2504, column: 2, scope: !8372)
!8394 = !DILocation(line: 2505, column: 1, scope: !8372)
!8395 = distinct !DISubprogram(name: "device_may_wakeup", scope: !3680, file: !3680, line: 82, type: !8396, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8396 = !DISubroutineType(types: !8397)
!8397 = !{!609, !3584}
!8398 = !DILocalVariable(name: "dev", arg: 1, scope: !8395, file: !3680, line: 82, type: !3584)
!8399 = !DILocation(line: 82, column: 53, scope: !8395)
!8400 = !DILocation(line: 84, column: 9, scope: !8395)
!8401 = !DILocation(line: 84, column: 14, scope: !8395)
!8402 = !DILocation(line: 84, column: 20, scope: !8395)
!8403 = !DILocation(line: 84, column: 31, scope: !8395)
!8404 = !DILocation(line: 84, column: 36, scope: !8395)
!8405 = !DILocation(line: 84, column: 41, scope: !8395)
!8406 = !DILocation(line: 84, column: 47, scope: !8395)
!8407 = !DILocation(line: 84, column: 35, scope: !8395)
!8408 = !DILocation(line: 84, column: 34, scope: !8395)
!8409 = !DILocation(line: 0, scope: !8395)
!8410 = !DILocation(line: 84, column: 2, scope: !8395)
!8411 = distinct !DISubprogram(name: "__pci_enable_wake", scope: !3, file: !3, line: 2445, type: !8373, scopeLine: 2446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8412 = !DILocalVariable(name: "dev", arg: 1, scope: !8411, file: !3, line: 2445, type: !273)
!8413 = !DILocation(line: 2445, column: 46, scope: !8411)
!8414 = !DILocalVariable(name: "state", arg: 2, scope: !8411, file: !3, line: 2445, type: !4124)
!8415 = !DILocation(line: 2445, column: 63, scope: !8411)
!8416 = !DILocalVariable(name: "enable", arg: 3, scope: !8411, file: !3, line: 2445, type: !609)
!8417 = !DILocation(line: 2445, column: 75, scope: !8411)
!8418 = !DILocalVariable(name: "ret", scope: !8411, file: !3, line: 2447, type: !304)
!8419 = !DILocation(line: 2447, column: 6, scope: !8411)
!8420 = !DILocation(line: 2456, column: 28, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 2456, column: 6)
!8422 = !DILocation(line: 2456, column: 7, scope: !8421)
!8423 = !DILocation(line: 2456, column: 6, scope: !8411)
!8424 = !DILocation(line: 2457, column: 3, scope: !8421)
!8425 = !DILocation(line: 2460, column: 8, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 2460, column: 6)
!8427 = !DILocation(line: 2460, column: 7, scope: !8426)
!8428 = !DILocation(line: 2460, column: 6, scope: !8426)
!8429 = !DILocation(line: 2460, column: 20, scope: !8426)
!8430 = !DILocation(line: 2460, column: 25, scope: !8426)
!8431 = !DILocation(line: 2460, column: 19, scope: !8426)
!8432 = !DILocation(line: 2460, column: 18, scope: !8426)
!8433 = !DILocation(line: 2460, column: 15, scope: !8426)
!8434 = !DILocation(line: 2460, column: 6, scope: !8411)
!8435 = !DILocation(line: 2461, column: 3, scope: !8426)
!8436 = !DILocation(line: 2469, column: 6, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 2469, column: 6)
!8438 = !DILocation(line: 2469, column: 6, scope: !8411)
!8439 = !DILocalVariable(name: "error", scope: !8440, file: !3, line: 2470, type: !304)
!8440 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 2469, column: 14)
!8441 = !DILocation(line: 2470, column: 7, scope: !8440)
!8442 = !DILocation(line: 2472, column: 23, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 2472, column: 7)
!8444 = !DILocation(line: 2472, column: 28, scope: !8443)
!8445 = !DILocation(line: 2472, column: 7, scope: !8443)
!8446 = !DILocation(line: 2472, column: 7, scope: !8440)
!8447 = !DILocation(line: 2473, column: 19, scope: !8443)
!8448 = !DILocation(line: 2473, column: 4, scope: !8443)
!8449 = !DILocation(line: 2475, column: 8, scope: !8443)
!8450 = !DILocation(line: 2476, column: 35, scope: !8440)
!8451 = !DILocation(line: 2476, column: 11, scope: !8440)
!8452 = !DILocation(line: 2476, column: 9, scope: !8440)
!8453 = !DILocation(line: 2477, column: 7, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 2477, column: 7)
!8455 = !DILocation(line: 2477, column: 7, scope: !8440)
!8456 = !DILocation(line: 2478, column: 10, scope: !8454)
!8457 = !DILocation(line: 2478, column: 8, scope: !8454)
!8458 = !DILocation(line: 2478, column: 4, scope: !8454)
!8459 = !DILocation(line: 2479, column: 8, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 2479, column: 7)
!8461 = !DILocation(line: 2479, column: 7, scope: !8440)
!8462 = !DILocation(line: 2480, column: 4, scope: !8460)
!8463 = !DILocation(line: 2480, column: 9, scope: !8460)
!8464 = !DILocation(line: 2480, column: 25, scope: !8460)
!8465 = !DILocation(line: 2481, column: 2, scope: !8440)
!8466 = !DILocation(line: 2482, column: 27, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 2481, column: 9)
!8468 = !DILocation(line: 2482, column: 3, scope: !8467)
!8469 = !DILocation(line: 2483, column: 18, scope: !8467)
!8470 = !DILocation(line: 2483, column: 3, scope: !8467)
!8471 = !DILocation(line: 2484, column: 3, scope: !8467)
!8472 = !DILocation(line: 2484, column: 8, scope: !8467)
!8473 = !DILocation(line: 2484, column: 24, scope: !8467)
!8474 = !DILocation(line: 2487, column: 9, scope: !8411)
!8475 = !DILocation(line: 2487, column: 2, scope: !8411)
!8476 = !DILocation(line: 2488, column: 1, scope: !8411)
!8477 = distinct !DISubprogram(name: "pci_wake_from_d3", scope: !3, file: !3, line: 2522, type: !4800, scopeLine: 2523, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8478 = !DILocalVariable(name: "dev", arg: 1, scope: !8477, file: !3, line: 2522, type: !273)
!8479 = !DILocation(line: 2522, column: 38, scope: !8477)
!8480 = !DILocalVariable(name: "enable", arg: 2, scope: !8477, file: !3, line: 2522, type: !609)
!8481 = !DILocation(line: 2522, column: 48, scope: !8477)
!8482 = !DILocation(line: 2524, column: 25, scope: !8477)
!8483 = !DILocation(line: 2524, column: 9, scope: !8477)
!8484 = !DILocation(line: 2525, column: 20, scope: !8477)
!8485 = !DILocation(line: 2525, column: 37, scope: !8477)
!8486 = !DILocation(line: 2525, column: 4, scope: !8477)
!8487 = !DILocation(line: 2526, column: 20, scope: !8477)
!8488 = !DILocation(line: 2526, column: 36, scope: !8477)
!8489 = !DILocation(line: 2526, column: 4, scope: !8477)
!8490 = !DILocation(line: 2524, column: 2, scope: !8477)
!8491 = distinct !DISubprogram(name: "pci_prepare_to_sleep", scope: !3, file: !3, line: 2600, type: !3545, scopeLine: 2601, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8492 = !DILocalVariable(name: "dev", arg: 1, scope: !8491, file: !3, line: 2600, type: !273)
!8493 = !DILocation(line: 2600, column: 42, scope: !8491)
!8494 = !DILocalVariable(name: "wakeup", scope: !8491, file: !3, line: 2602, type: !609)
!8495 = !DILocation(line: 2602, column: 7, scope: !8491)
!8496 = !DILocation(line: 2602, column: 35, scope: !8491)
!8497 = !DILocation(line: 2602, column: 40, scope: !8491)
!8498 = !DILocation(line: 2602, column: 16, scope: !8491)
!8499 = !DILocalVariable(name: "target_state", scope: !8491, file: !3, line: 2603, type: !4124)
!8500 = !DILocation(line: 2603, column: 14, scope: !8491)
!8501 = !DILocation(line: 2603, column: 46, scope: !8491)
!8502 = !DILocation(line: 2603, column: 51, scope: !8491)
!8503 = !DILocation(line: 2603, column: 29, scope: !8491)
!8504 = !DILocalVariable(name: "error", scope: !8491, file: !3, line: 2604, type: !304)
!8505 = !DILocation(line: 2604, column: 6, scope: !8491)
!8506 = !DILocation(line: 2606, column: 6, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 2606, column: 6)
!8508 = !DILocation(line: 2606, column: 19, scope: !8507)
!8509 = !DILocation(line: 2606, column: 6, scope: !8491)
!8510 = !DILocation(line: 2607, column: 3, scope: !8507)
!8511 = !DILocation(line: 2609, column: 18, scope: !8491)
!8512 = !DILocation(line: 2609, column: 23, scope: !8491)
!8513 = !DILocation(line: 2609, column: 37, scope: !8491)
!8514 = !DILocation(line: 2609, column: 2, scope: !8491)
!8515 = !DILocation(line: 2611, column: 30, scope: !8491)
!8516 = !DILocation(line: 2611, column: 35, scope: !8491)
!8517 = !DILocation(line: 2611, column: 10, scope: !8491)
!8518 = !DILocation(line: 2611, column: 8, scope: !8491)
!8519 = !DILocation(line: 2613, column: 6, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 2613, column: 6)
!8521 = !DILocation(line: 2613, column: 6, scope: !8491)
!8522 = !DILocation(line: 2614, column: 19, scope: !8520)
!8523 = !DILocation(line: 2614, column: 24, scope: !8520)
!8524 = !DILocation(line: 2614, column: 3, scope: !8520)
!8525 = !DILocation(line: 2616, column: 9, scope: !8491)
!8526 = !DILocation(line: 2616, column: 2, scope: !8491)
!8527 = !DILocation(line: 2617, column: 1, scope: !8491)
!8528 = distinct !DISubprogram(name: "pci_target_state", scope: !3, file: !3, line: 2539, type: !8529, scopeLine: 2540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8529 = !DISubroutineType(types: !8530)
!8530 = !{!4124, !273, !609}
!8531 = !DILocalVariable(name: "dev", arg: 1, scope: !8528, file: !3, line: 2539, type: !273)
!8532 = !DILocation(line: 2539, column: 53, scope: !8528)
!8533 = !DILocalVariable(name: "wakeup", arg: 2, scope: !8528, file: !3, line: 2539, type: !609)
!8534 = !DILocation(line: 2539, column: 63, scope: !8528)
!8535 = !DILocalVariable(name: "target_state", scope: !8528, file: !3, line: 2541, type: !4124)
!8536 = !DILocation(line: 2541, column: 14, scope: !8528)
!8537 = !DILocation(line: 2543, column: 36, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 2543, column: 6)
!8539 = !DILocation(line: 2543, column: 6, scope: !8538)
!8540 = !DILocation(line: 2543, column: 6, scope: !8528)
!8541 = !DILocalVariable(name: "state", scope: !8542, file: !3, line: 2547, type: !4124)
!8542 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 2543, column: 42)
!8543 = !DILocation(line: 2547, column: 15, scope: !8542)
!8544 = !DILocation(line: 2547, column: 49, scope: !8542)
!8545 = !DILocation(line: 2547, column: 23, scope: !8542)
!8546 = !DILocation(line: 2549, column: 11, scope: !8542)
!8547 = !DILocation(line: 2549, column: 3, scope: !8542)
!8548 = !DILocation(line: 2552, column: 4, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 2549, column: 18)
!8550 = !DILocation(line: 2555, column: 20, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 2555, column: 8)
!8552 = !DILocation(line: 2555, column: 8, scope: !8551)
!8553 = !DILocation(line: 2555, column: 8, scope: !8549)
!8554 = !DILocation(line: 2556, column: 5, scope: !8551)
!8555 = !DILocation(line: 2555, column: 23, scope: !8551)
!8556 = !DILocation(line: 2559, column: 19, scope: !8549)
!8557 = !DILocation(line: 2559, column: 17, scope: !8549)
!8558 = !DILocation(line: 2560, column: 3, scope: !8549)
!8559 = !DILocation(line: 2562, column: 10, scope: !8542)
!8560 = !DILocation(line: 2562, column: 3, scope: !8542)
!8561 = !DILocation(line: 2565, column: 7, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 2565, column: 6)
!8563 = !DILocation(line: 2565, column: 12, scope: !8562)
!8564 = !DILocation(line: 2565, column: 6, scope: !8528)
!8565 = !DILocation(line: 2566, column: 16, scope: !8562)
!8566 = !DILocation(line: 2566, column: 3, scope: !8562)
!8567 = !DILocation(line: 2573, column: 6, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 2573, column: 6)
!8569 = !DILocation(line: 2573, column: 11, scope: !8568)
!8570 = !DILocation(line: 2573, column: 25, scope: !8568)
!8571 = !DILocation(line: 2573, column: 6, scope: !8528)
!8572 = !DILocation(line: 2574, column: 16, scope: !8568)
!8573 = !DILocation(line: 2574, column: 3, scope: !8568)
!8574 = !DILocation(line: 2576, column: 6, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 2576, column: 6)
!8576 = !DILocation(line: 2576, column: 6, scope: !8528)
!8577 = !DILocation(line: 2581, column: 7, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 2581, column: 7)
!8579 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 2576, column: 14)
!8580 = !DILocation(line: 2581, column: 12, scope: !8578)
!8581 = !DILocation(line: 2581, column: 7, scope: !8579)
!8582 = !DILocation(line: 2582, column: 4, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 2581, column: 25)
!8584 = !DILocation(line: 2582, column: 11, scope: !8583)
!8585 = !DILocation(line: 2583, column: 10, scope: !8583)
!8586 = !DILocation(line: 2583, column: 15, scope: !8583)
!8587 = !DILocation(line: 2583, column: 20, scope: !8583)
!8588 = !DILocation(line: 2583, column: 40, scope: !8583)
!8589 = !DILocation(line: 2583, column: 37, scope: !8583)
!8590 = !DILocation(line: 2583, column: 32, scope: !8583)
!8591 = !DILocation(line: 2583, column: 13, scope: !8583)
!8592 = !DILocation(line: 0, scope: !8583)
!8593 = !DILocation(line: 2584, column: 17, scope: !8583)
!8594 = distinct !{!8594, !8582, !8593}
!8595 = !DILocation(line: 2585, column: 3, scope: !8583)
!8596 = !DILocation(line: 2586, column: 2, scope: !8579)
!8597 = !DILocation(line: 2588, column: 9, scope: !8528)
!8598 = !DILocation(line: 2588, column: 2, scope: !8528)
!8599 = !DILocation(line: 2589, column: 1, scope: !8528)
!8600 = distinct !DISubprogram(name: "pci_back_from_sleep", scope: !3, file: !3, line: 2627, type: !3545, scopeLine: 2628, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8601 = !DILocalVariable(name: "dev", arg: 1, scope: !8600, file: !3, line: 2627, type: !273)
!8602 = !DILocation(line: 2627, column: 41, scope: !8600)
!8603 = !DILocation(line: 2629, column: 18, scope: !8600)
!8604 = !DILocation(line: 2629, column: 2, scope: !8600)
!8605 = !DILocation(line: 2630, column: 29, scope: !8600)
!8606 = !DILocation(line: 2630, column: 9, scope: !8600)
!8607 = !DILocation(line: 2630, column: 2, scope: !8600)
!8608 = distinct !DISubprogram(name: "pci_finish_runtime_suspend", scope: !3, file: !3, line: 2641, type: !3545, scopeLine: 2642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8609 = !DILocalVariable(name: "dev", arg: 1, scope: !8608, file: !3, line: 2641, type: !273)
!8610 = !DILocation(line: 2641, column: 48, scope: !8608)
!8611 = !DILocalVariable(name: "target_state", scope: !8608, file: !3, line: 2643, type: !4124)
!8612 = !DILocation(line: 2643, column: 14, scope: !8608)
!8613 = !DILocalVariable(name: "error", scope: !8608, file: !3, line: 2644, type: !304)
!8614 = !DILocation(line: 2644, column: 6, scope: !8608)
!8615 = !DILocation(line: 2646, column: 34, scope: !8608)
!8616 = !DILocation(line: 2646, column: 58, scope: !8608)
!8617 = !DILocation(line: 2646, column: 63, scope: !8608)
!8618 = !DILocation(line: 2646, column: 39, scope: !8608)
!8619 = !DILocation(line: 2646, column: 17, scope: !8608)
!8620 = !DILocation(line: 2646, column: 15, scope: !8608)
!8621 = !DILocation(line: 2647, column: 6, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 2647, column: 6)
!8623 = !DILocation(line: 2647, column: 19, scope: !8622)
!8624 = !DILocation(line: 2647, column: 6, scope: !8608)
!8625 = !DILocation(line: 2648, column: 3, scope: !8622)
!8626 = !DILocation(line: 2650, column: 24, scope: !8608)
!8627 = !DILocation(line: 2650, column: 37, scope: !8608)
!8628 = !DILocation(line: 2650, column: 2, scope: !8608)
!8629 = !DILocation(line: 2650, column: 7, scope: !8608)
!8630 = !DILocation(line: 2650, column: 22, scope: !8608)
!8631 = !DILocation(line: 2652, column: 20, scope: !8608)
!8632 = !DILocation(line: 2652, column: 25, scope: !8608)
!8633 = !DILocation(line: 2652, column: 56, scope: !8608)
!8634 = !DILocation(line: 2652, column: 39, scope: !8608)
!8635 = !DILocation(line: 2652, column: 2, scope: !8608)
!8636 = !DILocation(line: 2654, column: 30, scope: !8608)
!8637 = !DILocation(line: 2654, column: 35, scope: !8608)
!8638 = !DILocation(line: 2654, column: 10, scope: !8608)
!8639 = !DILocation(line: 2654, column: 8, scope: !8608)
!8640 = !DILocation(line: 2656, column: 6, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 2656, column: 6)
!8642 = !DILocation(line: 2656, column: 6, scope: !8608)
!8643 = !DILocation(line: 2657, column: 19, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 2656, column: 13)
!8645 = !DILocation(line: 2657, column: 24, scope: !8644)
!8646 = !DILocation(line: 2657, column: 3, scope: !8644)
!8647 = !DILocation(line: 2658, column: 3, scope: !8644)
!8648 = !DILocation(line: 2658, column: 8, scope: !8644)
!8649 = !DILocation(line: 2658, column: 23, scope: !8644)
!8650 = !DILocation(line: 2659, column: 2, scope: !8644)
!8651 = !DILocation(line: 2661, column: 9, scope: !8608)
!8652 = !DILocation(line: 2661, column: 2, scope: !8608)
!8653 = !DILocation(line: 2662, column: 1, scope: !8608)
!8654 = distinct !DISubprogram(name: "device_can_wakeup", scope: !3680, file: !3680, line: 77, type: !8396, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8655 = !DILocalVariable(name: "dev", arg: 1, scope: !8654, file: !3680, line: 77, type: !3584)
!8656 = !DILocation(line: 77, column: 53, scope: !8654)
!8657 = !DILocation(line: 79, column: 9, scope: !8654)
!8658 = !DILocation(line: 79, column: 14, scope: !8654)
!8659 = !DILocation(line: 79, column: 20, scope: !8654)
!8660 = !DILocation(line: 79, column: 2, scope: !8654)
!8661 = distinct !DISubprogram(name: "pci_dev_run_wake", scope: !3, file: !3, line: 2672, type: !4785, scopeLine: 2673, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8662 = !DILocalVariable(name: "dev", arg: 1, scope: !8661, file: !3, line: 2672, type: !273)
!8663 = !DILocation(line: 2672, column: 39, scope: !8661)
!8664 = !DILocalVariable(name: "bus", scope: !8661, file: !3, line: 2674, type: !259)
!8665 = !DILocation(line: 2674, column: 18, scope: !8661)
!8666 = !DILocation(line: 2674, column: 24, scope: !8661)
!8667 = !DILocation(line: 2674, column: 29, scope: !8661)
!8668 = !DILocation(line: 2676, column: 7, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 2676, column: 6)
!8670 = !DILocation(line: 2676, column: 12, scope: !8669)
!8671 = !DILocation(line: 2676, column: 6, scope: !8661)
!8672 = !DILocation(line: 2677, column: 3, scope: !8669)
!8673 = !DILocation(line: 2680, column: 23, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 2680, column: 6)
!8675 = !DILocation(line: 2680, column: 45, scope: !8674)
!8676 = !DILocation(line: 2680, column: 28, scope: !8674)
!8677 = !DILocation(line: 2680, column: 7, scope: !8674)
!8678 = !DILocation(line: 2680, column: 6, scope: !8661)
!8679 = !DILocation(line: 2681, column: 3, scope: !8674)
!8680 = !DILocation(line: 2683, column: 25, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 2683, column: 6)
!8682 = !DILocation(line: 2683, column: 30, scope: !8681)
!8683 = !DILocation(line: 2683, column: 6, scope: !8681)
!8684 = !DILocation(line: 2683, column: 6, scope: !8661)
!8685 = !DILocation(line: 2684, column: 3, scope: !8681)
!8686 = !DILocation(line: 2686, column: 2, scope: !8661)
!8687 = !DILocation(line: 2686, column: 9, scope: !8661)
!8688 = !DILocation(line: 2686, column: 14, scope: !8661)
!8689 = !DILocalVariable(name: "bridge", scope: !8690, file: !3, line: 2687, type: !273)
!8690 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 2686, column: 22)
!8691 = !DILocation(line: 2687, column: 19, scope: !8690)
!8692 = !DILocation(line: 2687, column: 28, scope: !8690)
!8693 = !DILocation(line: 2687, column: 33, scope: !8690)
!8694 = !DILocation(line: 2689, column: 26, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 2689, column: 7)
!8696 = !DILocation(line: 2689, column: 34, scope: !8695)
!8697 = !DILocation(line: 2689, column: 7, scope: !8695)
!8698 = !DILocation(line: 2689, column: 7, scope: !8690)
!8699 = !DILocation(line: 2690, column: 4, scope: !8695)
!8700 = !DILocation(line: 2692, column: 9, scope: !8690)
!8701 = !DILocation(line: 2692, column: 14, scope: !8690)
!8702 = !DILocation(line: 2692, column: 7, scope: !8690)
!8703 = distinct !{!8703, !8686, !8704}
!8704 = !DILocation(line: 2693, column: 2, scope: !8661)
!8705 = !DILocation(line: 2696, column: 6, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 2696, column: 6)
!8707 = !DILocation(line: 2696, column: 11, scope: !8706)
!8708 = !DILocation(line: 2696, column: 6, scope: !8661)
!8709 = !DILocation(line: 2697, column: 28, scope: !8706)
!8710 = !DILocation(line: 2697, column: 33, scope: !8706)
!8711 = !DILocation(line: 2697, column: 10, scope: !8706)
!8712 = !DILocation(line: 2697, column: 3, scope: !8706)
!8713 = !DILocation(line: 2699, column: 2, scope: !8661)
!8714 = !DILocation(line: 2700, column: 1, scope: !8661)
!8715 = distinct !DISubprogram(name: "pci_dev_need_resume", scope: !3, file: !3, line: 2712, type: !4785, scopeLine: 2713, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8716 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !8715, file: !3, line: 2712, type: !273)
!8717 = !DILocation(line: 2712, column: 42, scope: !8715)
!8718 = !DILocalVariable(name: "dev", scope: !8715, file: !3, line: 2714, type: !3584)
!8719 = !DILocation(line: 2714, column: 17, scope: !8715)
!8720 = !DILocation(line: 2714, column: 24, scope: !8715)
!8721 = !DILocation(line: 2714, column: 33, scope: !8715)
!8722 = !DILocalVariable(name: "target_state", scope: !8715, file: !3, line: 2715, type: !4124)
!8723 = !DILocation(line: 2715, column: 14, scope: !8715)
!8724 = !DILocation(line: 2717, column: 28, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 2717, column: 6)
!8726 = !DILocation(line: 2717, column: 7, scope: !8725)
!8727 = !DILocation(line: 2717, column: 33, scope: !8725)
!8728 = !DILocation(line: 2717, column: 61, scope: !8725)
!8729 = !DILocation(line: 2717, column: 36, scope: !8725)
!8730 = !DILocation(line: 2717, column: 6, scope: !8715)
!8731 = !DILocation(line: 2718, column: 3, scope: !8725)
!8732 = !DILocation(line: 2720, column: 34, scope: !8715)
!8733 = !DILocation(line: 2720, column: 61, scope: !8715)
!8734 = !DILocation(line: 2720, column: 43, scope: !8715)
!8735 = !DILocation(line: 2720, column: 17, scope: !8715)
!8736 = !DILocation(line: 2720, column: 15, scope: !8715)
!8737 = !DILocation(line: 2727, column: 9, scope: !8715)
!8738 = !DILocation(line: 2727, column: 25, scope: !8715)
!8739 = !DILocation(line: 2727, column: 34, scope: !8715)
!8740 = !DILocation(line: 2727, column: 22, scope: !8715)
!8741 = !DILocation(line: 2727, column: 48, scope: !8715)
!8742 = !DILocation(line: 2728, column: 3, scope: !8715)
!8743 = !DILocation(line: 2728, column: 16, scope: !8715)
!8744 = !DILocation(line: 2728, column: 30, scope: !8715)
!8745 = !DILocation(line: 2729, column: 3, scope: !8715)
!8746 = !DILocation(line: 2729, column: 12, scope: !8715)
!8747 = !DILocation(line: 2729, column: 26, scope: !8715)
!8748 = !DILocation(line: 0, scope: !8715)
!8749 = !DILocation(line: 2727, column: 2, scope: !8715)
!8750 = !DILocation(line: 2730, column: 1, scope: !8715)
!8751 = distinct !DISubprogram(name: "pm_runtime_suspended", scope: !8752, file: !8752, line: 120, type: !8396, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8752 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!8753 = !DILocalVariable(name: "dev", arg: 1, scope: !8751, file: !8752, line: 120, type: !3584)
!8754 = !DILocation(line: 120, column: 56, scope: !8751)
!8755 = !DILocation(line: 122, column: 9, scope: !8751)
!8756 = !DILocation(line: 122, column: 14, scope: !8751)
!8757 = !DILocation(line: 122, column: 20, scope: !8751)
!8758 = !DILocation(line: 122, column: 35, scope: !8751)
!8759 = !DILocation(line: 123, column: 3, scope: !8751)
!8760 = !DILocation(line: 123, column: 7, scope: !8751)
!8761 = !DILocation(line: 123, column: 12, scope: !8751)
!8762 = !DILocation(line: 123, column: 18, scope: !8751)
!8763 = !DILocation(line: 123, column: 6, scope: !8751)
!8764 = !DILocation(line: 0, scope: !8751)
!8765 = !DILocation(line: 122, column: 2, scope: !8751)
!8766 = distinct !DISubprogram(name: "platform_pci_need_resume", scope: !3, file: !3, line: 980, type: !4785, scopeLine: 981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8767 = !DILocalVariable(name: "dev", arg: 1, scope: !8766, file: !3, line: 980, type: !273)
!8768 = !DILocation(line: 980, column: 61, scope: !8766)
!8769 = !DILocation(line: 982, column: 9, scope: !8766)
!8770 = !DILocation(line: 982, column: 27, scope: !8766)
!8771 = !DILocation(line: 982, column: 44, scope: !8766)
!8772 = !DILocation(line: 982, column: 56, scope: !8766)
!8773 = !DILocation(line: 982, column: 2, scope: !8766)
!8774 = distinct !DISubprogram(name: "pci_dev_adjust_pme", scope: !3, file: !3, line: 2743, type: !3533, scopeLine: 2744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8775 = !DILocalVariable(name: "lock", arg: 1, scope: !8776, file: !8777, line: 402, type: !1184)
!8776 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !8777, file: !8777, line: 402, type: !8778, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8777 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!8778 = !DISubroutineType(types: !8779)
!8779 = !{null, !1184}
!8780 = !DILocation(line: 402, column: 57, scope: !8776, inlinedAt: !8781)
!8781 = distinct !DILocation(line: 2753, column: 2, scope: !8774)
!8782 = !DILocalVariable(name: "lock", arg: 1, scope: !8783, file: !8777, line: 377, type: !1184)
!8783 = distinct !DISubprogram(name: "spin_lock_irq", scope: !8777, file: !8777, line: 377, type: !8778, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8784 = !DILocation(line: 377, column: 55, scope: !8783, inlinedAt: !8785)
!8785 = distinct !DILocation(line: 2747, column: 2, scope: !8774)
!8786 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !8774, file: !3, line: 2743, type: !273)
!8787 = !DILocation(line: 2743, column: 41, scope: !8774)
!8788 = !DILocalVariable(name: "dev", scope: !8774, file: !3, line: 2745, type: !3584)
!8789 = !DILocation(line: 2745, column: 17, scope: !8774)
!8790 = !DILocation(line: 2745, column: 24, scope: !8774)
!8791 = !DILocation(line: 2745, column: 33, scope: !8774)
!8792 = !DILocation(line: 2747, column: 17, scope: !8774)
!8793 = !DILocation(line: 2747, column: 22, scope: !8774)
!8794 = !DILocation(line: 2747, column: 28, scope: !8774)
!8795 = !DILocation(line: 379, column: 2, scope: !8796, inlinedAt: !8785)
!8796 = distinct !DILexicalBlock(scope: !8797, file: !8777, line: 379, column: 2)
!8797 = distinct !DILexicalBlock(scope: !8783, file: !8777, line: 379, column: 2)
!8798 = !DILocation(line: 379, column: 2, scope: !8799, inlinedAt: !8785)
!8799 = distinct !DILexicalBlock(scope: !8797, file: !8777, line: 379, column: 2)
!8800 = !{i32 -2145192693}
!8801 = !DILocation(line: 379, column: 2, scope: !8802, inlinedAt: !8785)
!8802 = distinct !DILexicalBlock(scope: !8799, file: !8777, line: 379, column: 2)
!8803 = !DILocation(line: 2749, column: 27, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8774, file: !3, line: 2749, column: 6)
!8805 = !DILocation(line: 2749, column: 6, scope: !8804)
!8806 = !DILocation(line: 2749, column: 32, scope: !8804)
!8807 = !DILocation(line: 2749, column: 54, scope: !8804)
!8808 = !DILocation(line: 2749, column: 36, scope: !8804)
!8809 = !DILocation(line: 2749, column: 59, scope: !8804)
!8810 = !DILocation(line: 2750, column: 6, scope: !8804)
!8811 = !DILocation(line: 2750, column: 15, scope: !8804)
!8812 = !DILocation(line: 2750, column: 29, scope: !8804)
!8813 = !DILocation(line: 2749, column: 6, scope: !8774)
!8814 = !DILocation(line: 2751, column: 20, scope: !8804)
!8815 = !DILocation(line: 2751, column: 3, scope: !8804)
!8816 = !DILocation(line: 2753, column: 19, scope: !8774)
!8817 = !DILocation(line: 2753, column: 24, scope: !8774)
!8818 = !DILocation(line: 2753, column: 30, scope: !8774)
!8819 = !DILocation(line: 404, column: 2, scope: !8820, inlinedAt: !8781)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !8777, line: 404, column: 2)
!8821 = distinct !DILexicalBlock(scope: !8776, file: !8777, line: 404, column: 2)
!8822 = !DILocation(line: 404, column: 2, scope: !8823, inlinedAt: !8781)
!8823 = distinct !DILexicalBlock(scope: !8821, file: !8777, line: 404, column: 2)
!8824 = !{i32 -2145190945}
!8825 = !DILocation(line: 404, column: 2, scope: !8826, inlinedAt: !8781)
!8826 = distinct !DILexicalBlock(scope: !8823, file: !8777, line: 404, column: 2)
!8827 = !DILocation(line: 2754, column: 1, scope: !8774)
!8828 = distinct !DISubprogram(name: "pci_dev_complete_resume", scope: !3, file: !3, line: 2764, type: !3533, scopeLine: 2765, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8829 = !DILocation(line: 402, column: 57, scope: !8776, inlinedAt: !8830)
!8830 = distinct !DILocation(line: 2776, column: 2, scope: !8828)
!8831 = !DILocation(line: 377, column: 55, scope: !8783, inlinedAt: !8832)
!8832 = distinct !DILocation(line: 2771, column: 2, scope: !8828)
!8833 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !8828, file: !3, line: 2764, type: !273)
!8834 = !DILocation(line: 2764, column: 46, scope: !8828)
!8835 = !DILocalVariable(name: "dev", scope: !8828, file: !3, line: 2766, type: !3584)
!8836 = !DILocation(line: 2766, column: 17, scope: !8828)
!8837 = !DILocation(line: 2766, column: 24, scope: !8828)
!8838 = !DILocation(line: 2766, column: 33, scope: !8828)
!8839 = !DILocation(line: 2768, column: 24, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 2768, column: 6)
!8841 = !DILocation(line: 2768, column: 7, scope: !8840)
!8842 = !DILocation(line: 2768, column: 6, scope: !8828)
!8843 = !DILocation(line: 2769, column: 3, scope: !8840)
!8844 = !DILocation(line: 2771, column: 17, scope: !8828)
!8845 = !DILocation(line: 2771, column: 22, scope: !8828)
!8846 = !DILocation(line: 2771, column: 28, scope: !8828)
!8847 = !DILocation(line: 379, column: 2, scope: !8796, inlinedAt: !8832)
!8848 = !DILocation(line: 379, column: 2, scope: !8799, inlinedAt: !8832)
!8849 = !DILocation(line: 379, column: 2, scope: !8802, inlinedAt: !8832)
!8850 = !DILocation(line: 2773, column: 27, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 2773, column: 6)
!8852 = !DILocation(line: 2773, column: 6, scope: !8851)
!8853 = !DILocation(line: 2773, column: 32, scope: !8851)
!8854 = !DILocation(line: 2773, column: 35, scope: !8851)
!8855 = !DILocation(line: 2773, column: 44, scope: !8851)
!8856 = !DILocation(line: 2773, column: 58, scope: !8851)
!8857 = !DILocation(line: 2773, column: 6, scope: !8828)
!8858 = !DILocation(line: 2774, column: 20, scope: !8851)
!8859 = !DILocation(line: 2774, column: 3, scope: !8851)
!8860 = !DILocation(line: 2776, column: 19, scope: !8828)
!8861 = !DILocation(line: 2776, column: 24, scope: !8828)
!8862 = !DILocation(line: 2776, column: 30, scope: !8828)
!8863 = !DILocation(line: 404, column: 2, scope: !8820, inlinedAt: !8830)
!8864 = !DILocation(line: 404, column: 2, scope: !8823, inlinedAt: !8830)
!8865 = !DILocation(line: 404, column: 2, scope: !8826, inlinedAt: !8830)
!8866 = !DILocation(line: 2777, column: 1, scope: !8828)
!8867 = distinct !DISubprogram(name: "pci_config_pm_runtime_get", scope: !3, file: !3, line: 2779, type: !3533, scopeLine: 2780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8868 = !DILocalVariable(name: "pdev", arg: 1, scope: !8867, file: !3, line: 2779, type: !273)
!8869 = !DILocation(line: 2779, column: 48, scope: !8867)
!8870 = !DILocalVariable(name: "dev", scope: !8867, file: !3, line: 2781, type: !3584)
!8871 = !DILocation(line: 2781, column: 17, scope: !8867)
!8872 = !DILocation(line: 2781, column: 24, scope: !8867)
!8873 = !DILocation(line: 2781, column: 30, scope: !8867)
!8874 = !DILocalVariable(name: "parent", scope: !8867, file: !3, line: 2782, type: !3584)
!8875 = !DILocation(line: 2782, column: 17, scope: !8867)
!8876 = !DILocation(line: 2782, column: 26, scope: !8867)
!8877 = !DILocation(line: 2782, column: 31, scope: !8867)
!8878 = !DILocation(line: 2784, column: 6, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 2784, column: 6)
!8880 = !DILocation(line: 2784, column: 6, scope: !8867)
!8881 = !DILocation(line: 2785, column: 23, scope: !8879)
!8882 = !DILocation(line: 2785, column: 3, scope: !8879)
!8883 = !DILocation(line: 2786, column: 26, scope: !8867)
!8884 = !DILocation(line: 2786, column: 2, scope: !8867)
!8885 = !DILocation(line: 2791, column: 21, scope: !8867)
!8886 = !DILocation(line: 2791, column: 2, scope: !8867)
!8887 = !DILocation(line: 2797, column: 6, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 2797, column: 6)
!8889 = !DILocation(line: 2797, column: 12, scope: !8888)
!8890 = !DILocation(line: 2797, column: 26, scope: !8888)
!8891 = !DILocation(line: 2797, column: 6, scope: !8867)
!8892 = !DILocation(line: 2798, column: 21, scope: !8888)
!8893 = !DILocation(line: 2798, column: 3, scope: !8888)
!8894 = !DILocation(line: 2799, column: 1, scope: !8867)
!8895 = distinct !DISubprogram(name: "pm_runtime_get_sync", scope: !8752, file: !8752, line: 384, type: !3620, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8896 = !DILocalVariable(name: "dev", arg: 1, scope: !8895, file: !8752, line: 384, type: !3584)
!8897 = !DILocation(line: 384, column: 54, scope: !8895)
!8898 = !DILocation(line: 386, column: 29, scope: !8895)
!8899 = !DILocation(line: 386, column: 9, scope: !8895)
!8900 = !DILocation(line: 386, column: 2, scope: !8895)
!8901 = distinct !DISubprogram(name: "pm_runtime_get_noresume", scope: !8752, file: !8752, line: 92, type: !3611, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8902 = !DILocalVariable(name: "v", arg: 1, scope: !8903, file: !7219, line: 93, type: !7341)
!8903 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !7219, file: !7219, line: 93, type: !7369, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8904 = !DILocation(line: 93, column: 55, scope: !8903, inlinedAt: !8905)
!8905 = distinct !DILocation(line: 241, column: 2, scope: !8906, inlinedAt: !8907)
!8906 = distinct !DISubprogram(name: "atomic_inc", scope: !7227, file: !7227, line: 238, type: !7369, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8907 = distinct !DILocation(line: 94, column: 2, scope: !8901)
!8908 = !DILocation(line: 99, column: 79, scope: !7360, inlinedAt: !8909)
!8909 = distinct !DILocation(line: 240, column: 2, scope: !8906, inlinedAt: !8907)
!8910 = !DILocation(line: 99, column: 89, scope: !7360, inlinedAt: !8909)
!8911 = !DILocalVariable(name: "v", arg: 1, scope: !8906, file: !7227, line: 238, type: !7341)
!8912 = !DILocation(line: 238, column: 22, scope: !8906, inlinedAt: !8907)
!8913 = !DILocalVariable(name: "dev", arg: 1, scope: !8901, file: !8752, line: 92, type: !3584)
!8914 = !DILocation(line: 92, column: 59, scope: !8901)
!8915 = !DILocation(line: 94, column: 14, scope: !8901)
!8916 = !DILocation(line: 94, column: 19, scope: !8901)
!8917 = !DILocation(line: 94, column: 25, scope: !8901)
!8918 = !DILocation(line: 240, column: 31, scope: !8906, inlinedAt: !8907)
!8919 = !DILocation(line: 101, column: 20, scope: !7360, inlinedAt: !8909)
!8920 = !DILocation(line: 101, column: 23, scope: !7360, inlinedAt: !8909)
!8921 = !DILocation(line: 101, column: 2, scope: !7360, inlinedAt: !8909)
!8922 = !DILocation(line: 102, column: 2, scope: !7360, inlinedAt: !8909)
!8923 = !DILocation(line: 241, column: 18, scope: !8906, inlinedAt: !8907)
!8924 = !DILocation(line: 96, column: 16, scope: !8903, inlinedAt: !8905)
!8925 = !DILocation(line: 96, column: 19, scope: !8903, inlinedAt: !8905)
!8926 = !DILocation(line: 95, column: 2, scope: !8903, inlinedAt: !8905)
!8927 = !{i32 -2146370228}
!8928 = !DILocation(line: 95, column: 1, scope: !8901)
!8929 = distinct !DISubprogram(name: "pm_runtime_resume", scope: !8752, file: !8752, line: 323, type: !3620, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8930 = !DILocalVariable(name: "dev", arg: 1, scope: !8929, file: !8752, line: 323, type: !3584)
!8931 = !DILocation(line: 323, column: 52, scope: !8929)
!8932 = !DILocation(line: 325, column: 29, scope: !8929)
!8933 = !DILocation(line: 325, column: 9, scope: !8929)
!8934 = !DILocation(line: 325, column: 2, scope: !8929)
!8935 = distinct !DISubprogram(name: "pci_config_pm_runtime_put", scope: !3, file: !3, line: 2801, type: !3533, scopeLine: 2802, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8936 = !DILocalVariable(name: "pdev", arg: 1, scope: !8935, file: !3, line: 2801, type: !273)
!8937 = !DILocation(line: 2801, column: 48, scope: !8935)
!8938 = !DILocalVariable(name: "dev", scope: !8935, file: !3, line: 2803, type: !3584)
!8939 = !DILocation(line: 2803, column: 17, scope: !8935)
!8940 = !DILocation(line: 2803, column: 24, scope: !8935)
!8941 = !DILocation(line: 2803, column: 30, scope: !8935)
!8942 = !DILocalVariable(name: "parent", scope: !8935, file: !3, line: 2804, type: !3584)
!8943 = !DILocation(line: 2804, column: 17, scope: !8935)
!8944 = !DILocation(line: 2804, column: 26, scope: !8935)
!8945 = !DILocation(line: 2804, column: 31, scope: !8935)
!8946 = !DILocation(line: 2806, column: 17, scope: !8935)
!8947 = !DILocation(line: 2806, column: 2, scope: !8935)
!8948 = !DILocation(line: 2807, column: 6, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 2807, column: 6)
!8950 = !DILocation(line: 2807, column: 6, scope: !8935)
!8951 = !DILocation(line: 2808, column: 23, scope: !8949)
!8952 = !DILocation(line: 2808, column: 3, scope: !8949)
!8953 = !DILocation(line: 2809, column: 1, scope: !8935)
!8954 = distinct !DISubprogram(name: "pm_runtime_put", scope: !8752, file: !8752, line: 417, type: !3620, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8955 = !DILocalVariable(name: "dev", arg: 1, scope: !8954, file: !8752, line: 417, type: !3584)
!8956 = !DILocation(line: 417, column: 49, scope: !8954)
!8957 = !DILocation(line: 419, column: 27, scope: !8954)
!8958 = !DILocation(line: 419, column: 9, scope: !8954)
!8959 = !DILocation(line: 419, column: 2, scope: !8954)
!8960 = distinct !DISubprogram(name: "pm_runtime_put_sync", scope: !8752, file: !8752, line: 448, type: !3620, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8961 = !DILocalVariable(name: "dev", arg: 1, scope: !8960, file: !8752, line: 448, type: !3584)
!8962 = !DILocation(line: 448, column: 54, scope: !8960)
!8963 = !DILocation(line: 450, column: 27, scope: !8960)
!8964 = !DILocation(line: 450, column: 9, scope: !8960)
!8965 = !DILocation(line: 450, column: 2, scope: !8960)
!8966 = distinct !DISubprogram(name: "pci_bridge_d3_possible", scope: !3, file: !3, line: 2837, type: !4785, scopeLine: 2838, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8967 = !DILocalVariable(name: "bridge", arg: 1, scope: !8966, file: !3, line: 2837, type: !273)
!8968 = !DILocation(line: 2837, column: 45, scope: !8966)
!8969 = !DILocation(line: 2839, column: 19, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 2839, column: 6)
!8971 = !DILocation(line: 2839, column: 7, scope: !8970)
!8972 = !DILocation(line: 2839, column: 6, scope: !8966)
!8973 = !DILocation(line: 2840, column: 3, scope: !8970)
!8974 = !DILocation(line: 2842, column: 24, scope: !8966)
!8975 = !DILocation(line: 2842, column: 10, scope: !8966)
!8976 = !DILocation(line: 2842, column: 2, scope: !8966)
!8977 = !DILocation(line: 2846, column: 7, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2846, column: 7)
!8979 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 2842, column: 33)
!8980 = !DILocation(line: 2846, column: 7, scope: !8979)
!8981 = !DILocation(line: 2847, column: 4, scope: !8978)
!8982 = !DILocation(line: 2853, column: 7, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2853, column: 7)
!8984 = !DILocation(line: 2853, column: 15, scope: !8983)
!8985 = !DILocation(line: 2853, column: 33, scope: !8983)
!8986 = !DILocation(line: 2853, column: 54, scope: !8983)
!8987 = !DILocation(line: 2853, column: 37, scope: !8983)
!8988 = !DILocation(line: 2853, column: 7, scope: !8979)
!8989 = !DILocation(line: 2854, column: 4, scope: !8983)
!8990 = !DILocation(line: 2856, column: 7, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2856, column: 7)
!8992 = !DILocation(line: 2856, column: 7, scope: !8979)
!8993 = !DILocation(line: 2857, column: 4, scope: !8991)
!8994 = !DILocation(line: 2860, column: 7, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2860, column: 7)
!8996 = !DILocation(line: 2860, column: 15, scope: !8995)
!8997 = !DILocation(line: 2860, column: 7, scope: !8979)
!8998 = !DILocation(line: 2861, column: 4, scope: !8995)
!8999 = !DILocation(line: 2864, column: 30, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2864, column: 7)
!9001 = !DILocation(line: 2864, column: 7, scope: !9000)
!9002 = !DILocation(line: 2864, column: 7, scope: !8979)
!9003 = !DILocation(line: 2865, column: 4, scope: !9000)
!9004 = !DILocation(line: 2872, column: 7, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2872, column: 7)
!9006 = !DILocation(line: 2872, column: 15, scope: !9005)
!9007 = !DILocation(line: 2872, column: 7, scope: !8979)
!9008 = !DILocation(line: 2873, column: 4, scope: !9005)
!9009 = !DILocation(line: 2875, column: 7, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2875, column: 7)
!9011 = !DILocation(line: 2875, column: 7, scope: !8979)
!9012 = !DILocation(line: 2876, column: 4, scope: !9010)
!9013 = !DILocation(line: 2882, column: 7, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2882, column: 7)
!9015 = !DILocation(line: 2882, column: 27, scope: !9014)
!9016 = !DILocation(line: 2882, column: 7, scope: !8979)
!9017 = !DILocation(line: 2883, column: 4, scope: !9014)
!9018 = !DILocation(line: 2884, column: 3, scope: !8979)
!9019 = !DILocation(line: 2887, column: 2, scope: !8966)
!9020 = !DILocation(line: 2888, column: 1, scope: !8966)
!9021 = distinct !DISubprogram(name: "pci_is_pcie", scope: !6, file: !6, line: 2139, type: !4785, scopeLine: 2140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9022 = !DILocalVariable(name: "dev", arg: 1, scope: !9021, file: !6, line: 2139, type: !273)
!9023 = !DILocation(line: 2139, column: 48, scope: !9021)
!9024 = !DILocation(line: 2141, column: 22, scope: !9021)
!9025 = !DILocation(line: 2141, column: 9, scope: !9021)
!9026 = !DILocation(line: 2141, column: 2, scope: !9021)
!9027 = distinct !DISubprogram(name: "pci_pcie_type", scope: !6, file: !6, line: 2157, type: !9028, scopeLine: 2158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9028 = !DISubroutineType(types: !9029)
!9029 = !{!304, !4701}
!9030 = !DILocalVariable(name: "dev", arg: 1, scope: !9027, file: !6, line: 2157, type: !4701)
!9031 = !DILocation(line: 2157, column: 55, scope: !9027)
!9032 = !DILocation(line: 2159, column: 24, scope: !9027)
!9033 = !DILocation(line: 2159, column: 10, scope: !9027)
!9034 = !DILocation(line: 2159, column: 29, scope: !9027)
!9035 = !DILocation(line: 2159, column: 51, scope: !9027)
!9036 = !DILocation(line: 2159, column: 2, scope: !9027)
!9037 = distinct !DISubprogram(name: "platform_pci_bridge_d3", scope: !3, file: !3, line: 985, type: !4785, scopeLine: 986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9038 = !DILocalVariable(name: "dev", arg: 1, scope: !9037, file: !3, line: 985, type: !273)
!9039 = !DILocation(line: 985, column: 59, scope: !9037)
!9040 = !DILocation(line: 987, column: 6, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9037, file: !3, line: 987, column: 6)
!9042 = !DILocation(line: 987, column: 22, scope: !9041)
!9043 = !DILocation(line: 987, column: 25, scope: !9041)
!9044 = !DILocation(line: 987, column: 42, scope: !9041)
!9045 = !DILocation(line: 987, column: 6, scope: !9037)
!9046 = !DILocation(line: 988, column: 10, scope: !9041)
!9047 = !DILocation(line: 988, column: 27, scope: !9041)
!9048 = !DILocation(line: 988, column: 37, scope: !9041)
!9049 = !DILocation(line: 988, column: 3, scope: !9041)
!9050 = !DILocation(line: 989, column: 2, scope: !9037)
!9051 = !DILocation(line: 990, column: 1, scope: !9037)
!9052 = distinct !DISubprogram(name: "pci_bridge_d3_update", scope: !3, file: !3, line: 2917, type: !3533, scopeLine: 2918, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9053 = !DILocalVariable(name: "dev", arg: 1, scope: !9052, file: !3, line: 2917, type: !273)
!9054 = !DILocation(line: 2917, column: 43, scope: !9052)
!9055 = !DILocalVariable(name: "remove", scope: !9052, file: !3, line: 2919, type: !609)
!9056 = !DILocation(line: 2919, column: 7, scope: !9052)
!9057 = !DILocation(line: 2919, column: 39, scope: !9052)
!9058 = !DILocation(line: 2919, column: 44, scope: !9052)
!9059 = !DILocation(line: 2919, column: 17, scope: !9052)
!9060 = !DILocation(line: 2919, column: 16, scope: !9052)
!9061 = !DILocalVariable(name: "bridge", scope: !9052, file: !3, line: 2920, type: !273)
!9062 = !DILocation(line: 2920, column: 18, scope: !9052)
!9063 = !DILocalVariable(name: "d3cold_ok", scope: !9052, file: !3, line: 2921, type: !609)
!9064 = !DILocation(line: 2921, column: 7, scope: !9052)
!9065 = !DILocation(line: 2923, column: 31, scope: !9052)
!9066 = !DILocation(line: 2923, column: 11, scope: !9052)
!9067 = !DILocation(line: 2923, column: 9, scope: !9052)
!9068 = !DILocation(line: 2924, column: 7, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 2924, column: 6)
!9070 = !DILocation(line: 2924, column: 14, scope: !9069)
!9071 = !DILocation(line: 2924, column: 41, scope: !9069)
!9072 = !DILocation(line: 2924, column: 18, scope: !9069)
!9073 = !DILocation(line: 2924, column: 6, scope: !9052)
!9074 = !DILocation(line: 2925, column: 3, scope: !9069)
!9075 = !DILocation(line: 2931, column: 6, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 2931, column: 6)
!9077 = !DILocation(line: 2931, column: 13, scope: !9076)
!9078 = !DILocation(line: 2931, column: 16, scope: !9076)
!9079 = !DILocation(line: 2931, column: 24, scope: !9076)
!9080 = !DILocation(line: 2931, column: 6, scope: !9052)
!9081 = !DILocation(line: 2932, column: 3, scope: !9076)
!9082 = !DILocation(line: 2942, column: 7, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 2942, column: 6)
!9084 = !DILocation(line: 2942, column: 6, scope: !9052)
!9085 = !DILocation(line: 2943, column: 24, scope: !9083)
!9086 = !DILocation(line: 2943, column: 3, scope: !9083)
!9087 = !DILocation(line: 2951, column: 6, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 2951, column: 6)
!9089 = !DILocation(line: 2951, column: 16, scope: !9088)
!9090 = !DILocation(line: 2951, column: 20, scope: !9088)
!9091 = !DILocation(line: 2951, column: 28, scope: !9088)
!9092 = !DILocation(line: 2951, column: 6, scope: !9052)
!9093 = !DILocation(line: 2952, column: 16, scope: !9088)
!9094 = !DILocation(line: 2952, column: 24, scope: !9088)
!9095 = !DILocation(line: 2952, column: 3, scope: !9088)
!9096 = !DILocation(line: 2955, column: 6, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 2955, column: 6)
!9098 = !DILocation(line: 2955, column: 14, scope: !9097)
!9099 = !DILocation(line: 2955, column: 27, scope: !9097)
!9100 = !DILocation(line: 2955, column: 24, scope: !9097)
!9101 = !DILocation(line: 2955, column: 6, scope: !9052)
!9102 = !DILocation(line: 2956, column: 23, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 2955, column: 38)
!9104 = !DILocation(line: 2956, column: 3, scope: !9103)
!9105 = !DILocation(line: 2956, column: 11, scope: !9103)
!9106 = !DILocation(line: 2956, column: 21, scope: !9103)
!9107 = !DILocation(line: 2958, column: 24, scope: !9103)
!9108 = !DILocation(line: 2958, column: 3, scope: !9103)
!9109 = !DILocation(line: 2959, column: 2, scope: !9103)
!9110 = !DILocation(line: 2960, column: 1, scope: !9052)
!9111 = distinct !DISubprogram(name: "device_is_registered", scope: !75, file: !75, line: 680, type: !3620, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9112 = !DILocalVariable(name: "dev", arg: 1, scope: !9111, file: !75, line: 680, type: !3584)
!9113 = !DILocation(line: 680, column: 55, scope: !9111)
!9114 = !DILocation(line: 682, column: 9, scope: !9111)
!9115 = !DILocation(line: 682, column: 14, scope: !9111)
!9116 = !DILocation(line: 682, column: 19, scope: !9111)
!9117 = !DILocation(line: 682, column: 2, scope: !9111)
!9118 = distinct !DISubprogram(name: "pci_upstream_bridge", scope: !6, file: !6, line: 678, type: !9119, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9119 = !DISubroutineType(types: !9120)
!9120 = !{!273, !273}
!9121 = !DILocalVariable(name: "dev", arg: 1, scope: !9118, file: !6, line: 678, type: !273)
!9122 = !DILocation(line: 678, column: 67, scope: !9118)
!9123 = !DILocation(line: 680, column: 19, scope: !9118)
!9124 = !DILocation(line: 680, column: 8, scope: !9118)
!9125 = !DILocation(line: 680, column: 6, scope: !9118)
!9126 = !DILocation(line: 681, column: 22, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9118, file: !6, line: 681, column: 6)
!9128 = !DILocation(line: 681, column: 27, scope: !9127)
!9129 = !DILocation(line: 681, column: 6, scope: !9127)
!9130 = !DILocation(line: 681, column: 6, scope: !9118)
!9131 = !DILocation(line: 682, column: 3, scope: !9127)
!9132 = !DILocation(line: 684, column: 9, scope: !9118)
!9133 = !DILocation(line: 684, column: 14, scope: !9118)
!9134 = !DILocation(line: 684, column: 19, scope: !9118)
!9135 = !DILocation(line: 684, column: 2, scope: !9118)
!9136 = !DILocation(line: 685, column: 1, scope: !9118)
!9137 = distinct !DISubprogram(name: "pci_dev_check_d3cold", scope: !3, file: !3, line: 2890, type: !5767, scopeLine: 2891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9138 = !DILocalVariable(name: "dev", arg: 1, scope: !9137, file: !3, line: 2890, type: !273)
!9139 = !DILocation(line: 2890, column: 49, scope: !9137)
!9140 = !DILocalVariable(name: "data", arg: 2, scope: !9137, file: !3, line: 2890, type: !258)
!9141 = !DILocation(line: 2890, column: 60, scope: !9137)
!9142 = !DILocalVariable(name: "d3cold_ok", scope: !9137, file: !3, line: 2892, type: !1011)
!9143 = !DILocation(line: 2892, column: 8, scope: !9137)
!9144 = !DILocation(line: 2892, column: 20, scope: !9137)
!9145 = !DILocation(line: 2895, column: 6, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 2895, column: 6)
!9147 = !DILocation(line: 2895, column: 11, scope: !9146)
!9148 = !DILocation(line: 2895, column: 21, scope: !9146)
!9149 = !DILocation(line: 2895, column: 25, scope: !9146)
!9150 = !DILocation(line: 2895, column: 30, scope: !9146)
!9151 = !DILocation(line: 2895, column: 45, scope: !9146)
!9152 = !DILocation(line: 2898, column: 26, scope: !9146)
!9153 = !DILocation(line: 2898, column: 31, scope: !9146)
!9154 = !DILocation(line: 2898, column: 7, scope: !9146)
!9155 = !DILocation(line: 2898, column: 36, scope: !9146)
!9156 = !DILocation(line: 2899, column: 24, scope: !9146)
!9157 = !DILocation(line: 2899, column: 8, scope: !9146)
!9158 = !DILocation(line: 2899, column: 42, scope: !9146)
!9159 = !DILocation(line: 2902, column: 28, scope: !9146)
!9160 = !DILocation(line: 2902, column: 7, scope: !9146)
!9161 = !DILocation(line: 2895, column: 6, scope: !9137)
!9162 = !DILocation(line: 2904, column: 4, scope: !9146)
!9163 = !DILocation(line: 2904, column: 14, scope: !9146)
!9164 = !DILocation(line: 2904, column: 3, scope: !9146)
!9165 = !DILocation(line: 2906, column: 11, scope: !9137)
!9166 = !DILocation(line: 2906, column: 10, scope: !9137)
!9167 = !DILocation(line: 2906, column: 9, scope: !9137)
!9168 = !DILocation(line: 2906, column: 2, scope: !9137)
!9169 = distinct !DISubprogram(name: "pci_d3cold_enable", scope: !3, file: !3, line: 2970, type: !3533, scopeLine: 2971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9170 = !DILocalVariable(name: "dev", arg: 1, scope: !9169, file: !3, line: 2970, type: !273)
!9171 = !DILocation(line: 2970, column: 40, scope: !9169)
!9172 = !DILocation(line: 2972, column: 6, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 2972, column: 6)
!9174 = !DILocation(line: 2972, column: 11, scope: !9173)
!9175 = !DILocation(line: 2972, column: 6, scope: !9169)
!9176 = !DILocation(line: 2973, column: 3, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 2972, column: 22)
!9178 = !DILocation(line: 2973, column: 8, scope: !9177)
!9179 = !DILocation(line: 2973, column: 18, scope: !9177)
!9180 = !DILocation(line: 2974, column: 24, scope: !9177)
!9181 = !DILocation(line: 2974, column: 3, scope: !9177)
!9182 = !DILocation(line: 2975, column: 2, scope: !9177)
!9183 = !DILocation(line: 2976, column: 1, scope: !9169)
!9184 = distinct !DISubprogram(name: "pci_d3cold_disable", scope: !3, file: !3, line: 2987, type: !3533, scopeLine: 2988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9185 = !DILocalVariable(name: "dev", arg: 1, scope: !9184, file: !3, line: 2987, type: !273)
!9186 = !DILocation(line: 2987, column: 41, scope: !9184)
!9187 = !DILocation(line: 2989, column: 7, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 2989, column: 6)
!9189 = !DILocation(line: 2989, column: 12, scope: !9188)
!9190 = !DILocation(line: 2989, column: 6, scope: !9184)
!9191 = !DILocation(line: 2990, column: 3, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 2989, column: 23)
!9193 = !DILocation(line: 2990, column: 8, scope: !9192)
!9194 = !DILocation(line: 2990, column: 18, scope: !9192)
!9195 = !DILocation(line: 2991, column: 24, scope: !9192)
!9196 = !DILocation(line: 2991, column: 3, scope: !9192)
!9197 = !DILocation(line: 2992, column: 2, scope: !9192)
!9198 = !DILocation(line: 2993, column: 1, scope: !9184)
!9199 = distinct !DISubprogram(name: "pci_pm_init", scope: !3, file: !3, line: 3000, type: !3533, scopeLine: 3001, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9200 = !DILocalVariable(name: "dev", arg: 1, scope: !9199, file: !3, line: 3000, type: !273)
!9201 = !DILocation(line: 3000, column: 34, scope: !9199)
!9202 = !DILocalVariable(name: "pm", scope: !9199, file: !3, line: 3002, type: !304)
!9203 = !DILocation(line: 3002, column: 6, scope: !9199)
!9204 = !DILocalVariable(name: "status", scope: !9199, file: !3, line: 3003, type: !979)
!9205 = !DILocation(line: 3003, column: 6, scope: !9199)
!9206 = !DILocalVariable(name: "pmc", scope: !9199, file: !3, line: 3004, type: !979)
!9207 = !DILocation(line: 3004, column: 6, scope: !9199)
!9208 = !DILocation(line: 3006, column: 21, scope: !9199)
!9209 = !DILocation(line: 3006, column: 26, scope: !9199)
!9210 = !DILocation(line: 3006, column: 2, scope: !9199)
!9211 = !DILocation(line: 3007, column: 25, scope: !9199)
!9212 = !DILocation(line: 3007, column: 30, scope: !9199)
!9213 = !DILocation(line: 3007, column: 2, scope: !9199)
!9214 = !DILocation(line: 3008, column: 21, scope: !9199)
!9215 = !DILocation(line: 3008, column: 26, scope: !9199)
!9216 = !DILocation(line: 3008, column: 2, scope: !9199)
!9217 = !DILocation(line: 3009, column: 31, scope: !9199)
!9218 = !DILocation(line: 3009, column: 36, scope: !9199)
!9219 = !DILocation(line: 3009, column: 2, scope: !9199)
!9220 = !DILocation(line: 3010, column: 2, scope: !9199)
!9221 = !DILocation(line: 3010, column: 7, scope: !9199)
!9222 = !DILocation(line: 3010, column: 23, scope: !9199)
!9223 = !DILocation(line: 3012, column: 2, scope: !9199)
!9224 = !DILocation(line: 3012, column: 7, scope: !9199)
!9225 = !DILocation(line: 3012, column: 14, scope: !9199)
!9226 = !DILocation(line: 3013, column: 2, scope: !9199)
!9227 = !DILocation(line: 3013, column: 7, scope: !9199)
!9228 = !DILocation(line: 3013, column: 19, scope: !9199)
!9229 = !DILocation(line: 3016, column: 27, scope: !9199)
!9230 = !DILocation(line: 3016, column: 7, scope: !9199)
!9231 = !DILocation(line: 3016, column: 5, scope: !9199)
!9232 = !DILocation(line: 3017, column: 7, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 3017, column: 6)
!9234 = !DILocation(line: 3017, column: 6, scope: !9199)
!9235 = !DILocation(line: 3018, column: 3, scope: !9233)
!9236 = !DILocation(line: 3020, column: 23, scope: !9199)
!9237 = !DILocation(line: 3020, column: 28, scope: !9199)
!9238 = !DILocation(line: 3020, column: 31, scope: !9199)
!9239 = !DILocation(line: 3020, column: 2, scope: !9199)
!9240 = !DILocation(line: 3022, column: 7, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 3022, column: 6)
!9242 = !DILocation(line: 3022, column: 11, scope: !9241)
!9243 = !DILocation(line: 3022, column: 34, scope: !9241)
!9244 = !DILocation(line: 3022, column: 6, scope: !9199)
!9245 = !DILocation(line: 3023, column: 3, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9241, file: !3, line: 3022, column: 39)
!9247 = !DILocation(line: 3025, column: 3, scope: !9246)
!9248 = !DILocation(line: 3028, column: 16, scope: !9199)
!9249 = !DILocation(line: 3028, column: 2, scope: !9199)
!9250 = !DILocation(line: 3028, column: 7, scope: !9199)
!9251 = !DILocation(line: 3028, column: 14, scope: !9199)
!9252 = !DILocation(line: 3029, column: 2, scope: !9199)
!9253 = !DILocation(line: 3029, column: 7, scope: !9199)
!9254 = !DILocation(line: 3029, column: 19, scope: !9199)
!9255 = !DILocation(line: 3030, column: 2, scope: !9199)
!9256 = !DILocation(line: 3030, column: 7, scope: !9199)
!9257 = !DILocation(line: 3030, column: 20, scope: !9199)
!9258 = !DILocation(line: 3031, column: 42, scope: !9199)
!9259 = !DILocation(line: 3031, column: 19, scope: !9199)
!9260 = !DILocation(line: 3031, column: 2, scope: !9199)
!9261 = !DILocation(line: 3031, column: 7, scope: !9199)
!9262 = !DILocation(line: 3031, column: 17, scope: !9199)
!9263 = !DILocation(line: 3032, column: 2, scope: !9199)
!9264 = !DILocation(line: 3032, column: 7, scope: !9199)
!9265 = !DILocation(line: 3032, column: 22, scope: !9199)
!9266 = !DILocation(line: 3034, column: 2, scope: !9199)
!9267 = !DILocation(line: 3034, column: 7, scope: !9199)
!9268 = !DILocation(line: 3034, column: 18, scope: !9199)
!9269 = !DILocation(line: 3035, column: 2, scope: !9199)
!9270 = !DILocation(line: 3035, column: 7, scope: !9199)
!9271 = !DILocation(line: 3035, column: 18, scope: !9199)
!9272 = !DILocation(line: 3036, column: 19, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 3036, column: 6)
!9274 = !DILocation(line: 3036, column: 7, scope: !9273)
!9275 = !DILocation(line: 3036, column: 6, scope: !9199)
!9276 = !DILocation(line: 3037, column: 7, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 3037, column: 7)
!9278 = distinct !DILexicalBlock(scope: !9273, file: !3, line: 3036, column: 25)
!9279 = !DILocation(line: 3037, column: 11, scope: !9277)
!9280 = !DILocation(line: 3037, column: 7, scope: !9278)
!9281 = !DILocation(line: 3038, column: 4, scope: !9277)
!9282 = !DILocation(line: 3038, column: 9, scope: !9277)
!9283 = !DILocation(line: 3038, column: 20, scope: !9277)
!9284 = !DILocation(line: 3039, column: 7, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 3039, column: 7)
!9286 = !DILocation(line: 3039, column: 11, scope: !9285)
!9287 = !DILocation(line: 3039, column: 7, scope: !9278)
!9288 = !DILocation(line: 3040, column: 4, scope: !9285)
!9289 = !DILocation(line: 3040, column: 9, scope: !9285)
!9290 = !DILocation(line: 3040, column: 20, scope: !9285)
!9291 = !DILocation(line: 3042, column: 7, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 3042, column: 7)
!9293 = !DILocation(line: 3042, column: 12, scope: !9292)
!9294 = !DILocation(line: 3042, column: 23, scope: !9292)
!9295 = !DILocation(line: 3042, column: 26, scope: !9292)
!9296 = !DILocation(line: 3042, column: 31, scope: !9292)
!9297 = !DILocation(line: 3042, column: 7, scope: !9278)
!9298 = !DILocation(line: 3043, column: 4, scope: !9292)
!9299 = !DILocation(line: 3046, column: 2, scope: !9278)
!9300 = !DILocation(line: 3048, column: 6, scope: !9199)
!9301 = !DILocation(line: 3049, column: 6, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 3049, column: 6)
!9303 = !DILocation(line: 3049, column: 6, scope: !9199)
!9304 = !DILocation(line: 3050, column: 3, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9302, file: !3, line: 3049, column: 11)
!9306 = !DILocation(line: 3056, column: 22, scope: !9305)
!9307 = !DILocation(line: 3056, column: 26, scope: !9305)
!9308 = !DILocation(line: 3056, column: 3, scope: !9305)
!9309 = !DILocation(line: 3056, column: 8, scope: !9305)
!9310 = !DILocation(line: 3056, column: 20, scope: !9305)
!9311 = !DILocation(line: 3057, column: 3, scope: !9305)
!9312 = !DILocation(line: 3057, column: 8, scope: !9305)
!9313 = !DILocation(line: 3057, column: 17, scope: !9305)
!9314 = !DILocation(line: 3062, column: 30, scope: !9305)
!9315 = !DILocation(line: 3062, column: 35, scope: !9305)
!9316 = !DILocation(line: 3062, column: 3, scope: !9305)
!9317 = !DILocation(line: 3064, column: 18, scope: !9305)
!9318 = !DILocation(line: 3064, column: 3, scope: !9305)
!9319 = !DILocation(line: 3065, column: 2, scope: !9305)
!9320 = !DILocation(line: 3067, column: 23, scope: !9199)
!9321 = !DILocation(line: 3067, column: 2, scope: !9199)
!9322 = !DILocation(line: 3068, column: 6, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 3068, column: 6)
!9324 = !DILocation(line: 3068, column: 13, scope: !9323)
!9325 = !DILocation(line: 3068, column: 6, scope: !9199)
!9326 = !DILocation(line: 3069, column: 3, scope: !9323)
!9327 = !DILocation(line: 3069, column: 8, scope: !9323)
!9328 = !DILocation(line: 3069, column: 18, scope: !9323)
!9329 = !DILocation(line: 3070, column: 1, scope: !9199)
!9330 = distinct !DISubprogram(name: "pm_runtime_set_active", scope: !8752, file: !8752, line: 495, type: !3620, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9331 = !DILocalVariable(name: "dev", arg: 1, scope: !9330, file: !8752, line: 495, type: !3584)
!9332 = !DILocation(line: 495, column: 56, scope: !9330)
!9333 = !DILocation(line: 497, column: 33, scope: !9330)
!9334 = !DILocation(line: 497, column: 9, scope: !9330)
!9335 = !DILocation(line: 497, column: 2, scope: !9330)
!9336 = distinct !DISubprogram(name: "device_enable_async_suspend", scope: !75, file: !75, line: 685, type: !3611, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9337 = !DILocalVariable(name: "dev", arg: 1, scope: !9336, file: !75, line: 685, type: !3584)
!9338 = !DILocation(line: 685, column: 63, scope: !9336)
!9339 = !DILocation(line: 687, column: 7, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9336, file: !75, line: 687, column: 6)
!9341 = !DILocation(line: 687, column: 12, scope: !9340)
!9342 = !DILocation(line: 687, column: 18, scope: !9340)
!9343 = !DILocation(line: 687, column: 6, scope: !9336)
!9344 = !DILocation(line: 688, column: 3, scope: !9340)
!9345 = !DILocation(line: 688, column: 8, scope: !9340)
!9346 = !DILocation(line: 688, column: 14, scope: !9340)
!9347 = !DILocation(line: 688, column: 28, scope: !9340)
!9348 = !DILocation(line: 689, column: 1, scope: !9336)
!9349 = distinct !DISubprogram(name: "pci_ea_init", scope: !3, file: !3, line: 3235, type: !3533, scopeLine: 3236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9350 = !DILocalVariable(name: "dev", arg: 1, scope: !9349, file: !3, line: 3235, type: !273)
!9351 = !DILocation(line: 3235, column: 34, scope: !9349)
!9352 = !DILocalVariable(name: "ea", scope: !9349, file: !3, line: 3237, type: !304)
!9353 = !DILocation(line: 3237, column: 6, scope: !9349)
!9354 = !DILocalVariable(name: "num_ent", scope: !9349, file: !3, line: 3238, type: !310)
!9355 = !DILocation(line: 3238, column: 5, scope: !9349)
!9356 = !DILocalVariable(name: "offset", scope: !9349, file: !3, line: 3239, type: !304)
!9357 = !DILocation(line: 3239, column: 6, scope: !9349)
!9358 = !DILocalVariable(name: "i", scope: !9349, file: !3, line: 3240, type: !304)
!9359 = !DILocation(line: 3240, column: 6, scope: !9349)
!9360 = !DILocation(line: 3243, column: 27, scope: !9349)
!9361 = !DILocation(line: 3243, column: 7, scope: !9349)
!9362 = !DILocation(line: 3243, column: 5, scope: !9349)
!9363 = !DILocation(line: 3244, column: 7, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9349, file: !3, line: 3244, column: 6)
!9365 = !DILocation(line: 3244, column: 6, scope: !9349)
!9366 = !DILocation(line: 3245, column: 3, scope: !9364)
!9367 = !DILocation(line: 3248, column: 27, scope: !9349)
!9368 = !DILocation(line: 3248, column: 32, scope: !9349)
!9369 = !DILocation(line: 3248, column: 37, scope: !9349)
!9370 = !DILocation(line: 3248, column: 42, scope: !9349)
!9371 = !DILocation(line: 3248, column: 49, scope: !9349)
!9372 = !DILocation(line: 3248, column: 52, scope: !9349)
!9373 = !DILocation(line: 3248, column: 2, scope: !9349)
!9374 = !DILocation(line: 3250, column: 10, scope: !9349)
!9375 = !DILocation(line: 3252, column: 11, scope: !9349)
!9376 = !DILocation(line: 3252, column: 14, scope: !9349)
!9377 = !DILocation(line: 3252, column: 9, scope: !9349)
!9378 = !DILocation(line: 3255, column: 6, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9349, file: !3, line: 3255, column: 6)
!9380 = !DILocation(line: 3255, column: 11, scope: !9379)
!9381 = !DILocation(line: 3255, column: 20, scope: !9379)
!9382 = !DILocation(line: 3255, column: 6, scope: !9349)
!9383 = !DILocation(line: 3256, column: 10, scope: !9379)
!9384 = !DILocation(line: 3256, column: 3, scope: !9379)
!9385 = !DILocation(line: 3259, column: 9, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9349, file: !3, line: 3259, column: 2)
!9387 = !DILocation(line: 3259, column: 7, scope: !9386)
!9388 = !DILocation(line: 3259, column: 14, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9386, file: !3, line: 3259, column: 2)
!9390 = !DILocation(line: 3259, column: 18, scope: !9389)
!9391 = !DILocation(line: 3259, column: 16, scope: !9389)
!9392 = !DILocation(line: 3259, column: 2, scope: !9386)
!9393 = !DILocation(line: 3260, column: 24, scope: !9389)
!9394 = !DILocation(line: 3260, column: 29, scope: !9389)
!9395 = !DILocation(line: 3260, column: 12, scope: !9389)
!9396 = !DILocation(line: 3260, column: 10, scope: !9389)
!9397 = !DILocation(line: 3260, column: 3, scope: !9389)
!9398 = !DILocation(line: 3259, column: 27, scope: !9389)
!9399 = !DILocation(line: 3259, column: 2, scope: !9389)
!9400 = distinct !{!9400, !9392, !9401}
!9401 = !DILocation(line: 3260, column: 35, scope: !9386)
!9402 = !DILocation(line: 3261, column: 1, scope: !9349)
!9403 = distinct !DISubprogram(name: "pci_ea_read", scope: !3, file: !3, line: 3113, type: !3550, scopeLine: 3114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9404 = !DILocalVariable(name: "dev", arg: 1, scope: !9403, file: !3, line: 3113, type: !273)
!9405 = !DILocation(line: 3113, column: 40, scope: !9403)
!9406 = !DILocalVariable(name: "offset", arg: 2, scope: !9403, file: !3, line: 3113, type: !304)
!9407 = !DILocation(line: 3113, column: 49, scope: !9403)
!9408 = !DILocalVariable(name: "res", scope: !9403, file: !3, line: 3115, type: !4166)
!9409 = !DILocation(line: 3115, column: 19, scope: !9403)
!9410 = !DILocalVariable(name: "ent_size", scope: !9403, file: !3, line: 3116, type: !304)
!9411 = !DILocation(line: 3116, column: 6, scope: !9403)
!9412 = !DILocalVariable(name: "ent_offset", scope: !9403, file: !3, line: 3116, type: !304)
!9413 = !DILocation(line: 3116, column: 16, scope: !9403)
!9414 = !DILocation(line: 3116, column: 29, scope: !9403)
!9415 = !DILocalVariable(name: "start", scope: !9403, file: !3, line: 3117, type: !4160)
!9416 = !DILocation(line: 3117, column: 18, scope: !9403)
!9417 = !DILocalVariable(name: "end", scope: !9403, file: !3, line: 3117, type: !4160)
!9418 = !DILocation(line: 3117, column: 25, scope: !9403)
!9419 = !DILocalVariable(name: "flags", scope: !9403, file: !3, line: 3118, type: !448)
!9420 = !DILocation(line: 3118, column: 16, scope: !9403)
!9421 = !DILocalVariable(name: "dw0", scope: !9403, file: !3, line: 3119, type: !319)
!9422 = !DILocation(line: 3119, column: 6, scope: !9403)
!9423 = !DILocalVariable(name: "bei", scope: !9403, file: !3, line: 3119, type: !319)
!9424 = !DILocation(line: 3119, column: 11, scope: !9403)
!9425 = !DILocalVariable(name: "base", scope: !9403, file: !3, line: 3119, type: !319)
!9426 = !DILocation(line: 3119, column: 16, scope: !9403)
!9427 = !DILocalVariable(name: "max_offset", scope: !9403, file: !3, line: 3119, type: !319)
!9428 = !DILocation(line: 3119, column: 22, scope: !9403)
!9429 = !DILocalVariable(name: "prop", scope: !9403, file: !3, line: 3120, type: !310)
!9430 = !DILocation(line: 3120, column: 5, scope: !9403)
!9431 = !DILocalVariable(name: "support_64", scope: !9403, file: !3, line: 3121, type: !609)
!9432 = !DILocation(line: 3121, column: 7, scope: !9403)
!9433 = !DILocation(line: 3123, column: 24, scope: !9403)
!9434 = !DILocation(line: 3123, column: 29, scope: !9403)
!9435 = !DILocation(line: 3123, column: 2, scope: !9403)
!9436 = !DILocation(line: 3124, column: 13, scope: !9403)
!9437 = !DILocation(line: 3127, column: 15, scope: !9403)
!9438 = !DILocation(line: 3127, column: 19, scope: !9403)
!9439 = !DILocation(line: 3127, column: 32, scope: !9403)
!9440 = !DILocation(line: 3127, column: 37, scope: !9403)
!9441 = !DILocation(line: 3127, column: 11, scope: !9403)
!9442 = !DILocation(line: 3129, column: 8, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 3129, column: 6)
!9444 = !DILocation(line: 3129, column: 12, scope: !9443)
!9445 = !DILocation(line: 3129, column: 6, scope: !9403)
!9446 = !DILocation(line: 3130, column: 3, scope: !9443)
!9447 = !DILocation(line: 3132, column: 9, scope: !9403)
!9448 = !DILocation(line: 3132, column: 13, scope: !9403)
!9449 = !DILocation(line: 3132, column: 27, scope: !9403)
!9450 = !DILocation(line: 3132, column: 6, scope: !9403)
!9451 = !DILocation(line: 3133, column: 10, scope: !9403)
!9452 = !DILocation(line: 3133, column: 14, scope: !9403)
!9453 = !DILocation(line: 3133, column: 27, scope: !9403)
!9454 = !DILocation(line: 3133, column: 9, scope: !9403)
!9455 = !DILocation(line: 3133, column: 7, scope: !9403)
!9456 = !DILocation(line: 3139, column: 6, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 3139, column: 6)
!9458 = !DILocation(line: 3139, column: 11, scope: !9457)
!9459 = !DILocation(line: 3139, column: 32, scope: !9457)
!9460 = !DILocation(line: 3139, column: 35, scope: !9457)
!9461 = !DILocation(line: 3139, column: 40, scope: !9457)
!9462 = !DILocation(line: 3139, column: 6, scope: !9403)
!9463 = !DILocation(line: 3140, column: 11, scope: !9457)
!9464 = !DILocation(line: 3140, column: 15, scope: !9457)
!9465 = !DILocation(line: 3140, column: 28, scope: !9457)
!9466 = !DILocation(line: 3140, column: 10, scope: !9457)
!9467 = !DILocation(line: 3140, column: 8, scope: !9457)
!9468 = !DILocation(line: 3140, column: 3, scope: !9457)
!9469 = !DILocation(line: 3141, column: 6, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 3141, column: 6)
!9471 = !DILocation(line: 3141, column: 11, scope: !9470)
!9472 = !DILocation(line: 3141, column: 6, scope: !9403)
!9473 = !DILocation(line: 3142, column: 3, scope: !9470)
!9474 = !DILocation(line: 3144, column: 28, scope: !9403)
!9475 = !DILocation(line: 3144, column: 33, scope: !9403)
!9476 = !DILocation(line: 3144, column: 38, scope: !9403)
!9477 = !DILocation(line: 3144, column: 8, scope: !9403)
!9478 = !DILocation(line: 3144, column: 6, scope: !9403)
!9479 = !DILocation(line: 3145, column: 7, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 3145, column: 6)
!9481 = !DILocation(line: 3145, column: 6, scope: !9403)
!9482 = !DILocation(line: 3146, column: 3, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9480, file: !3, line: 3145, column: 12)
!9484 = !DILocation(line: 3147, column: 3, scope: !9483)
!9485 = !DILocation(line: 3150, column: 23, scope: !9403)
!9486 = !DILocation(line: 3150, column: 28, scope: !9403)
!9487 = !DILocation(line: 3150, column: 10, scope: !9403)
!9488 = !DILocation(line: 3150, column: 8, scope: !9403)
!9489 = !DILocation(line: 3151, column: 7, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 3151, column: 6)
!9491 = !DILocation(line: 3151, column: 6, scope: !9403)
!9492 = !DILocation(line: 3152, column: 3, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9490, file: !3, line: 3151, column: 14)
!9494 = !DILocation(line: 3153, column: 3, scope: !9493)
!9495 = !DILocation(line: 3157, column: 24, scope: !9403)
!9496 = !DILocation(line: 3157, column: 29, scope: !9403)
!9497 = !DILocation(line: 3157, column: 2, scope: !9403)
!9498 = !DILocation(line: 3158, column: 11, scope: !9403)
!9499 = !DILocation(line: 3158, column: 16, scope: !9403)
!9500 = !DILocation(line: 3158, column: 10, scope: !9403)
!9501 = !DILocation(line: 3158, column: 8, scope: !9403)
!9502 = !DILocation(line: 3159, column: 13, scope: !9403)
!9503 = !DILocation(line: 3162, column: 24, scope: !9403)
!9504 = !DILocation(line: 3162, column: 29, scope: !9403)
!9505 = !DILocation(line: 3162, column: 2, scope: !9403)
!9506 = !DILocation(line: 3163, column: 13, scope: !9403)
!9507 = !DILocation(line: 3166, column: 6, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 3166, column: 6)
!9509 = !DILocation(line: 3166, column: 11, scope: !9508)
!9510 = !DILocation(line: 3166, column: 6, scope: !9403)
!9511 = !DILocalVariable(name: "base_upper", scope: !9512, file: !3, line: 3167, type: !319)
!9512 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 3166, column: 27)
!9513 = !DILocation(line: 3167, column: 7, scope: !9512)
!9514 = !DILocation(line: 3169, column: 25, scope: !9512)
!9515 = !DILocation(line: 3169, column: 30, scope: !9512)
!9516 = !DILocation(line: 3169, column: 3, scope: !9512)
!9517 = !DILocation(line: 3170, column: 14, scope: !9512)
!9518 = !DILocation(line: 3172, column: 9, scope: !9512)
!9519 = !DILocation(line: 3175, column: 8, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9512, file: !3, line: 3175, column: 7)
!9521 = !DILocation(line: 3175, column: 19, scope: !9520)
!9522 = !DILocation(line: 3175, column: 22, scope: !9520)
!9523 = !DILocation(line: 3175, column: 7, scope: !9512)
!9524 = !DILocation(line: 3176, column: 4, scope: !9520)
!9525 = !DILocation(line: 3178, column: 7, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9512, file: !3, line: 3178, column: 7)
!9527 = !DILocation(line: 3178, column: 7, scope: !9512)
!9528 = !DILocation(line: 3179, column: 19, scope: !9526)
!9529 = !DILocation(line: 3179, column: 14, scope: !9526)
!9530 = !DILocation(line: 3179, column: 30, scope: !9526)
!9531 = !DILocation(line: 3179, column: 10, scope: !9526)
!9532 = !DILocation(line: 3179, column: 4, scope: !9526)
!9533 = !DILocation(line: 3180, column: 2, scope: !9512)
!9534 = !DILocation(line: 3182, column: 8, scope: !9403)
!9535 = !DILocation(line: 3182, column: 17, scope: !9403)
!9536 = !DILocation(line: 3182, column: 28, scope: !9403)
!9537 = !DILocation(line: 3182, column: 16, scope: !9403)
!9538 = !DILocation(line: 3182, column: 14, scope: !9403)
!9539 = !DILocation(line: 3182, column: 6, scope: !9403)
!9540 = !DILocation(line: 3185, column: 6, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 3185, column: 6)
!9542 = !DILocation(line: 3185, column: 17, scope: !9541)
!9543 = !DILocation(line: 3185, column: 6, scope: !9403)
!9544 = !DILocalVariable(name: "max_offset_upper", scope: !9545, file: !3, line: 3186, type: !319)
!9545 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 3185, column: 33)
!9546 = !DILocation(line: 3186, column: 7, scope: !9545)
!9547 = !DILocation(line: 3188, column: 25, scope: !9545)
!9548 = !DILocation(line: 3188, column: 30, scope: !9545)
!9549 = !DILocation(line: 3188, column: 3, scope: !9545)
!9550 = !DILocation(line: 3189, column: 14, scope: !9545)
!9551 = !DILocation(line: 3191, column: 9, scope: !9545)
!9552 = !DILocation(line: 3194, column: 8, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9545, file: !3, line: 3194, column: 7)
!9554 = !DILocation(line: 3194, column: 19, scope: !9553)
!9555 = !DILocation(line: 3194, column: 22, scope: !9553)
!9556 = !DILocation(line: 3194, column: 7, scope: !9545)
!9557 = !DILocation(line: 3195, column: 4, scope: !9553)
!9558 = !DILocation(line: 3197, column: 7, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9545, file: !3, line: 3197, column: 7)
!9560 = !DILocation(line: 3197, column: 7, scope: !9545)
!9561 = !DILocation(line: 3198, column: 17, scope: !9559)
!9562 = !DILocation(line: 3198, column: 12, scope: !9559)
!9563 = !DILocation(line: 3198, column: 34, scope: !9559)
!9564 = !DILocation(line: 3198, column: 8, scope: !9559)
!9565 = !DILocation(line: 3198, column: 4, scope: !9559)
!9566 = !DILocation(line: 3199, column: 2, scope: !9545)
!9567 = !DILocation(line: 3201, column: 6, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 3201, column: 6)
!9569 = !DILocation(line: 3201, column: 12, scope: !9568)
!9570 = !DILocation(line: 3201, column: 10, scope: !9568)
!9571 = !DILocation(line: 3201, column: 6, scope: !9403)
!9572 = !DILocation(line: 3202, column: 3, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 3201, column: 19)
!9574 = !DILocation(line: 3203, column: 3, scope: !9573)
!9575 = !DILocation(line: 3206, column: 6, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 3206, column: 6)
!9577 = !DILocation(line: 3206, column: 18, scope: !9576)
!9578 = !DILocation(line: 3206, column: 31, scope: !9576)
!9579 = !DILocation(line: 3206, column: 29, scope: !9576)
!9580 = !DILocation(line: 3206, column: 15, scope: !9576)
!9581 = !DILocation(line: 3206, column: 6, scope: !9403)
!9582 = !DILocation(line: 3207, column: 3, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9576, file: !3, line: 3206, column: 39)
!9584 = !DILocation(line: 3209, column: 3, scope: !9583)
!9585 = !DILocation(line: 3212, column: 23, scope: !9403)
!9586 = !DILocation(line: 3212, column: 14, scope: !9403)
!9587 = !DILocation(line: 3212, column: 2, scope: !9403)
!9588 = !DILocation(line: 3212, column: 7, scope: !9403)
!9589 = !DILocation(line: 3212, column: 12, scope: !9403)
!9590 = !DILocation(line: 3213, column: 15, scope: !9403)
!9591 = !DILocation(line: 3213, column: 2, scope: !9403)
!9592 = !DILocation(line: 3213, column: 7, scope: !9403)
!9593 = !DILocation(line: 3213, column: 13, scope: !9403)
!9594 = !DILocation(line: 3214, column: 13, scope: !9403)
!9595 = !DILocation(line: 3214, column: 2, scope: !9403)
!9596 = !DILocation(line: 3214, column: 7, scope: !9403)
!9597 = !DILocation(line: 3214, column: 11, scope: !9403)
!9598 = !DILocation(line: 3215, column: 15, scope: !9403)
!9599 = !DILocation(line: 3215, column: 2, scope: !9403)
!9600 = !DILocation(line: 3215, column: 7, scope: !9403)
!9601 = !DILocation(line: 3215, column: 13, scope: !9403)
!9602 = !DILocation(line: 3217, column: 6, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 3217, column: 6)
!9604 = !DILocation(line: 3217, column: 10, scope: !9603)
!9605 = !DILocation(line: 3217, column: 6, scope: !9403)
!9606 = !DILocation(line: 3218, column: 3, scope: !9603)
!9607 = !DILocation(line: 3220, column: 11, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 3220, column: 11)
!9609 = !DILocation(line: 3220, column: 15, scope: !9608)
!9610 = !DILocation(line: 3220, column: 11, scope: !9603)
!9611 = !DILocation(line: 3221, column: 3, scope: !9608)
!9612 = !DILocation(line: 3223, column: 11, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 3223, column: 11)
!9614 = !DILocation(line: 3223, column: 15, scope: !9613)
!9615 = !DILocation(line: 3223, column: 37, scope: !9613)
!9616 = !DILocation(line: 3223, column: 40, scope: !9613)
!9617 = !DILocation(line: 3223, column: 44, scope: !9613)
!9618 = !DILocation(line: 3223, column: 11, scope: !9608)
!9619 = !DILocation(line: 3224, column: 3, scope: !9613)
!9620 = !DILocation(line: 3227, column: 3, scope: !9613)
!9621 = !DILocation(line: 3217, column: 13, scope: !9603)
!9622 = !DILabel(scope: !9403, name: "out", file: !3, line: 3230)
!9623 = !DILocation(line: 3230, column: 1, scope: !9403)
!9624 = !DILocation(line: 3231, column: 9, scope: !9403)
!9625 = !DILocation(line: 3231, column: 18, scope: !9403)
!9626 = !DILocation(line: 3231, column: 16, scope: !9403)
!9627 = !DILocation(line: 3231, column: 2, scope: !9403)
!9628 = distinct !DISubprogram(name: "pci_add_cap_save_buffer", scope: !3, file: !3, line: 3303, type: !9629, scopeLine: 3304, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9629 = !DISubroutineType(types: !9630)
!9630 = !{!304, !273, !342, !7}
!9631 = !DILocalVariable(name: "dev", arg: 1, scope: !9628, file: !3, line: 3303, type: !273)
!9632 = !DILocation(line: 3303, column: 45, scope: !9628)
!9633 = !DILocalVariable(name: "cap", arg: 2, scope: !9628, file: !3, line: 3303, type: !342)
!9634 = !DILocation(line: 3303, column: 55, scope: !9628)
!9635 = !DILocalVariable(name: "size", arg: 3, scope: !9628, file: !3, line: 3303, type: !7)
!9636 = !DILocation(line: 3303, column: 73, scope: !9628)
!9637 = !DILocation(line: 3305, column: 34, scope: !9628)
!9638 = !DILocation(line: 3305, column: 39, scope: !9628)
!9639 = !DILocation(line: 3305, column: 51, scope: !9628)
!9640 = !DILocation(line: 3305, column: 9, scope: !9628)
!9641 = !DILocation(line: 3305, column: 2, scope: !9628)
!9642 = distinct !DISubprogram(name: "_pci_add_cap_save_buffer", scope: !3, file: !3, line: 3277, type: !9643, scopeLine: 3279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9643 = !DISubroutineType(types: !9644)
!9644 = !{!304, !273, !979, !609, !7}
!9645 = !DILocalVariable(name: "dev", arg: 1, scope: !9642, file: !3, line: 3277, type: !273)
!9646 = !DILocation(line: 3277, column: 53, scope: !9642)
!9647 = !DILocalVariable(name: "cap", arg: 2, scope: !9642, file: !3, line: 3277, type: !979)
!9648 = !DILocation(line: 3277, column: 62, scope: !9642)
!9649 = !DILocalVariable(name: "extended", arg: 3, scope: !9642, file: !3, line: 3278, type: !609)
!9650 = !DILocation(line: 3278, column: 14, scope: !9642)
!9651 = !DILocalVariable(name: "size", arg: 4, scope: !9642, file: !3, line: 3278, type: !7)
!9652 = !DILocation(line: 3278, column: 37, scope: !9642)
!9653 = !DILocalVariable(name: "pos", scope: !9642, file: !3, line: 3280, type: !304)
!9654 = !DILocation(line: 3280, column: 6, scope: !9642)
!9655 = !DILocalVariable(name: "save_state", scope: !9642, file: !3, line: 3281, type: !4392)
!9656 = !DILocation(line: 3281, column: 30, scope: !9642)
!9657 = !DILocation(line: 3283, column: 6, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9642, file: !3, line: 3283, column: 6)
!9659 = !DILocation(line: 3283, column: 6, scope: !9642)
!9660 = !DILocation(line: 3284, column: 33, scope: !9658)
!9661 = !DILocation(line: 3284, column: 38, scope: !9658)
!9662 = !DILocation(line: 3284, column: 9, scope: !9658)
!9663 = !DILocation(line: 3284, column: 7, scope: !9658)
!9664 = !DILocation(line: 3284, column: 3, scope: !9658)
!9665 = !DILocation(line: 3286, column: 29, scope: !9658)
!9666 = !DILocation(line: 3286, column: 34, scope: !9658)
!9667 = !DILocation(line: 3286, column: 9, scope: !9658)
!9668 = !DILocation(line: 3286, column: 7, scope: !9658)
!9669 = !DILocation(line: 3288, column: 7, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9642, file: !3, line: 3288, column: 6)
!9671 = !DILocation(line: 3288, column: 6, scope: !9642)
!9672 = !DILocation(line: 3289, column: 3, scope: !9670)
!9673 = !DILocation(line: 3291, column: 45, scope: !9642)
!9674 = !DILocation(line: 3291, column: 43, scope: !9642)
!9675 = !DILocation(line: 3291, column: 15, scope: !9642)
!9676 = !DILocation(line: 3291, column: 13, scope: !9642)
!9677 = !DILocation(line: 3292, column: 7, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9642, file: !3, line: 3292, column: 6)
!9679 = !DILocation(line: 3292, column: 6, scope: !9642)
!9680 = !DILocation(line: 3293, column: 3, scope: !9678)
!9681 = !DILocation(line: 3295, column: 27, scope: !9642)
!9682 = !DILocation(line: 3295, column: 2, scope: !9642)
!9683 = !DILocation(line: 3295, column: 14, scope: !9642)
!9684 = !DILocation(line: 3295, column: 18, scope: !9642)
!9685 = !DILocation(line: 3295, column: 25, scope: !9642)
!9686 = !DILocation(line: 3296, column: 33, scope: !9642)
!9687 = !DILocation(line: 3296, column: 2, scope: !9642)
!9688 = !DILocation(line: 3296, column: 14, scope: !9642)
!9689 = !DILocation(line: 3296, column: 18, scope: !9642)
!9690 = !DILocation(line: 3296, column: 31, scope: !9642)
!9691 = !DILocation(line: 3297, column: 25, scope: !9642)
!9692 = !DILocation(line: 3297, column: 2, scope: !9642)
!9693 = !DILocation(line: 3297, column: 14, scope: !9642)
!9694 = !DILocation(line: 3297, column: 18, scope: !9642)
!9695 = !DILocation(line: 3297, column: 23, scope: !9642)
!9696 = !DILocation(line: 3298, column: 20, scope: !9642)
!9697 = !DILocation(line: 3298, column: 25, scope: !9642)
!9698 = !DILocation(line: 3298, column: 2, scope: !9642)
!9699 = !DILocation(line: 3300, column: 2, scope: !9642)
!9700 = !DILocation(line: 3301, column: 1, scope: !9642)
!9701 = distinct !DISubprogram(name: "pci_add_ext_cap_save_buffer", scope: !3, file: !3, line: 3308, type: !9702, scopeLine: 3309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9702 = !DISubroutineType(types: !9703)
!9703 = !{!304, !273, !979, !7}
!9704 = !DILocalVariable(name: "dev", arg: 1, scope: !9701, file: !3, line: 3308, type: !273)
!9705 = !DILocation(line: 3308, column: 49, scope: !9701)
!9706 = !DILocalVariable(name: "cap", arg: 2, scope: !9701, file: !3, line: 3308, type: !979)
!9707 = !DILocation(line: 3308, column: 58, scope: !9701)
!9708 = !DILocalVariable(name: "size", arg: 3, scope: !9701, file: !3, line: 3308, type: !7)
!9709 = !DILocation(line: 3308, column: 76, scope: !9701)
!9710 = !DILocation(line: 3310, column: 34, scope: !9701)
!9711 = !DILocation(line: 3310, column: 39, scope: !9701)
!9712 = !DILocation(line: 3310, column: 50, scope: !9701)
!9713 = !DILocation(line: 3310, column: 9, scope: !9701)
!9714 = !DILocation(line: 3310, column: 2, scope: !9701)
!9715 = distinct !DISubprogram(name: "pci_allocate_cap_save_buffers", scope: !3, file: !3, line: 3317, type: !3533, scopeLine: 3318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9716 = !DILocalVariable(name: "dev", arg: 1, scope: !9715, file: !3, line: 3317, type: !273)
!9717 = !DILocation(line: 3317, column: 52, scope: !9715)
!9718 = !DILocalVariable(name: "error", scope: !9715, file: !3, line: 3319, type: !304)
!9719 = !DILocation(line: 3319, column: 6, scope: !9715)
!9720 = !DILocation(line: 3321, column: 34, scope: !9715)
!9721 = !DILocation(line: 3321, column: 10, scope: !9715)
!9722 = !DILocation(line: 3321, column: 8, scope: !9715)
!9723 = !DILocation(line: 3323, column: 6, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9715, file: !3, line: 3323, column: 6)
!9725 = !DILocation(line: 3323, column: 6, scope: !9715)
!9726 = !DILocation(line: 3324, column: 3, scope: !9724)
!9727 = !DILocation(line: 3326, column: 34, scope: !9715)
!9728 = !DILocation(line: 3326, column: 10, scope: !9715)
!9729 = !DILocation(line: 3326, column: 8, scope: !9715)
!9730 = !DILocation(line: 3327, column: 6, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9715, file: !3, line: 3327, column: 6)
!9732 = !DILocation(line: 3327, column: 6, scope: !9715)
!9733 = !DILocation(line: 3328, column: 3, scope: !9731)
!9734 = !DILocation(line: 3330, column: 38, scope: !9715)
!9735 = !DILocation(line: 3330, column: 10, scope: !9715)
!9736 = !DILocation(line: 3330, column: 8, scope: !9715)
!9737 = !DILocation(line: 3332, column: 6, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9715, file: !3, line: 3332, column: 6)
!9739 = !DILocation(line: 3332, column: 6, scope: !9715)
!9740 = !DILocation(line: 3333, column: 3, scope: !9738)
!9741 = !DILocation(line: 3335, column: 31, scope: !9715)
!9742 = !DILocation(line: 3335, column: 2, scope: !9715)
!9743 = !DILocation(line: 3336, column: 1, scope: !9715)
!9744 = distinct !DISubprogram(name: "pci_free_cap_save_buffers", scope: !3, file: !3, line: 3338, type: !3533, scopeLine: 3339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9745 = !DILocalVariable(name: "dev", arg: 1, scope: !9744, file: !3, line: 3338, type: !273)
!9746 = !DILocation(line: 3338, column: 48, scope: !9744)
!9747 = !DILocalVariable(name: "tmp", scope: !9744, file: !3, line: 3340, type: !4392)
!9748 = !DILocation(line: 3340, column: 30, scope: !9744)
!9749 = !DILocalVariable(name: "n", scope: !9744, file: !3, line: 3341, type: !757)
!9750 = !DILocation(line: 3341, column: 21, scope: !9744)
!9751 = !DILocalVariable(name: "____ptr", scope: !9752, file: !3, line: 3343, type: !757)
!9752 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 3343, column: 2)
!9753 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 3343, column: 2)
!9754 = !DILocation(line: 3343, column: 2, scope: !9752)
!9755 = !DILocalVariable(name: "__mptr", scope: !9756, file: !3, line: 3343, type: !258)
!9756 = distinct !DILexicalBlock(scope: !9752, file: !3, line: 3343, column: 2)
!9757 = !DILocation(line: 3343, column: 2, scope: !9756)
!9758 = !DILocation(line: 3343, column: 2, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9756, file: !3, line: 3343, column: 2)
!9760 = !DILocation(line: 3343, column: 2, scope: !9753)
!9761 = !DILocation(line: 3343, column: 2, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 3343, column: 2)
!9763 = !DILocation(line: 3343, column: 2, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9762, file: !3, line: 3343, column: 2)
!9765 = !DILocation(line: 0, scope: !9762)
!9766 = !DILocation(line: 3344, column: 9, scope: !9762)
!9767 = !DILocation(line: 3344, column: 3, scope: !9762)
!9768 = !DILocalVariable(name: "____ptr", scope: !9769, file: !3, line: 3343, type: !757)
!9769 = distinct !DILexicalBlock(scope: !9762, file: !3, line: 3343, column: 2)
!9770 = !DILocation(line: 3343, column: 2, scope: !9769)
!9771 = !DILocalVariable(name: "__mptr", scope: !9772, file: !3, line: 3343, type: !258)
!9772 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 3343, column: 2)
!9773 = !DILocation(line: 3343, column: 2, scope: !9772)
!9774 = !DILocation(line: 3343, column: 2, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 3343, column: 2)
!9776 = distinct !{!9776, !9760, !9777}
!9777 = !DILocation(line: 3344, column: 12, scope: !9753)
!9778 = !DILocation(line: 3345, column: 1, scope: !9744)
!9779 = distinct !DISubprogram(name: "pci_configure_ari", scope: !3, file: !3, line: 3354, type: !3533, scopeLine: 3355, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9780 = !DILocalVariable(name: "dev", arg: 1, scope: !9779, file: !3, line: 3354, type: !273)
!9781 = !DILocation(line: 3354, column: 40, scope: !9779)
!9782 = !DILocalVariable(name: "cap", scope: !9779, file: !3, line: 3356, type: !319)
!9783 = !DILocation(line: 3356, column: 6, scope: !9779)
!9784 = !DILocalVariable(name: "bridge", scope: !9779, file: !3, line: 3357, type: !273)
!9785 = !DILocation(line: 3357, column: 18, scope: !9779)
!9786 = !DILocation(line: 3359, column: 6, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 3359, column: 6)
!9788 = !DILocation(line: 3359, column: 24, scope: !9787)
!9789 = !DILocation(line: 3359, column: 40, scope: !9787)
!9790 = !DILocation(line: 3359, column: 28, scope: !9787)
!9791 = !DILocation(line: 3359, column: 45, scope: !9787)
!9792 = !DILocation(line: 3359, column: 48, scope: !9787)
!9793 = !DILocation(line: 3359, column: 53, scope: !9787)
!9794 = !DILocation(line: 3359, column: 6, scope: !9779)
!9795 = !DILocation(line: 3360, column: 3, scope: !9787)
!9796 = !DILocation(line: 3362, column: 11, scope: !9779)
!9797 = !DILocation(line: 3362, column: 16, scope: !9779)
!9798 = !DILocation(line: 3362, column: 21, scope: !9779)
!9799 = !DILocation(line: 3362, column: 9, scope: !9779)
!9800 = !DILocation(line: 3363, column: 7, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 3363, column: 6)
!9802 = !DILocation(line: 3363, column: 6, scope: !9779)
!9803 = !DILocation(line: 3364, column: 3, scope: !9801)
!9804 = !DILocation(line: 3366, column: 29, scope: !9779)
!9805 = !DILocation(line: 3366, column: 2, scope: !9779)
!9806 = !DILocation(line: 3367, column: 8, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 3367, column: 6)
!9808 = !DILocation(line: 3367, column: 12, scope: !9807)
!9809 = !DILocation(line: 3367, column: 6, scope: !9779)
!9810 = !DILocation(line: 3368, column: 3, scope: !9807)
!9811 = !DILocation(line: 3370, column: 30, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 3370, column: 6)
!9813 = !DILocation(line: 3370, column: 6, scope: !9812)
!9814 = !DILocation(line: 3370, column: 6, scope: !9779)
!9815 = !DILocation(line: 3371, column: 28, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 3370, column: 56)
!9817 = !DILocation(line: 3371, column: 3, scope: !9816)
!9818 = !DILocation(line: 3373, column: 3, scope: !9816)
!9819 = !DILocation(line: 3373, column: 11, scope: !9816)
!9820 = !DILocation(line: 3373, column: 23, scope: !9816)
!9821 = !DILocation(line: 3374, column: 2, scope: !9816)
!9822 = !DILocation(line: 3375, column: 30, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 3374, column: 9)
!9824 = !DILocation(line: 3375, column: 3, scope: !9823)
!9825 = !DILocation(line: 3377, column: 3, scope: !9823)
!9826 = !DILocation(line: 3377, column: 11, scope: !9823)
!9827 = !DILocation(line: 3377, column: 23, scope: !9823)
!9828 = !DILocation(line: 3379, column: 1, scope: !9779)
!9829 = distinct !DISubprogram(name: "pcie_capability_set_word", scope: !6, file: !6, line: 1127, type: !5531, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9830 = !DILocalVariable(name: "dev", arg: 1, scope: !9829, file: !6, line: 1127, type: !273)
!9831 = !DILocation(line: 1127, column: 60, scope: !9829)
!9832 = !DILocalVariable(name: "pos", arg: 2, scope: !9829, file: !6, line: 1127, type: !304)
!9833 = !DILocation(line: 1127, column: 69, scope: !9829)
!9834 = !DILocalVariable(name: "set", arg: 3, scope: !9829, file: !6, line: 1128, type: !979)
!9835 = !DILocation(line: 1128, column: 13, scope: !9829)
!9836 = !DILocation(line: 1130, column: 44, scope: !9829)
!9837 = !DILocation(line: 1130, column: 49, scope: !9829)
!9838 = !DILocation(line: 1130, column: 57, scope: !9829)
!9839 = !DILocation(line: 1130, column: 9, scope: !9829)
!9840 = !DILocation(line: 1130, column: 2, scope: !9829)
!9841 = distinct !DISubprogram(name: "pcie_capability_clear_word", scope: !6, file: !6, line: 1139, type: !5531, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9842 = !DILocalVariable(name: "dev", arg: 1, scope: !9841, file: !6, line: 1139, type: !273)
!9843 = !DILocation(line: 1139, column: 62, scope: !9841)
!9844 = !DILocalVariable(name: "pos", arg: 2, scope: !9841, file: !6, line: 1139, type: !304)
!9845 = !DILocation(line: 1139, column: 71, scope: !9841)
!9846 = !DILocalVariable(name: "clear", arg: 3, scope: !9841, file: !6, line: 1140, type: !979)
!9847 = !DILocation(line: 1140, column: 15, scope: !9841)
!9848 = !DILocation(line: 1142, column: 44, scope: !9841)
!9849 = !DILocation(line: 1142, column: 49, scope: !9841)
!9850 = !DILocation(line: 1142, column: 54, scope: !9841)
!9851 = !DILocation(line: 1142, column: 9, scope: !9841)
!9852 = !DILocation(line: 1142, column: 2, scope: !9841)
!9853 = distinct !DISubprogram(name: "pci_acs_enabled", scope: !3, file: !3, line: 3418, type: !9854, scopeLine: 3419, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9854 = !DISubroutineType(types: !9855)
!9855 = !{!609, !273, !979}
!9856 = !DILocalVariable(name: "pdev", arg: 1, scope: !9853, file: !3, line: 3418, type: !273)
!9857 = !DILocation(line: 3418, column: 38, scope: !9853)
!9858 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !9853, file: !3, line: 3418, type: !979)
!9859 = !DILocation(line: 3418, column: 48, scope: !9853)
!9860 = !DILocalVariable(name: "ret", scope: !9853, file: !3, line: 3420, type: !304)
!9861 = !DILocation(line: 3420, column: 6, scope: !9853)
!9862 = !DILocation(line: 3422, column: 37, scope: !9853)
!9863 = !DILocation(line: 3422, column: 43, scope: !9853)
!9864 = !DILocation(line: 3422, column: 8, scope: !9853)
!9865 = !DILocation(line: 3422, column: 6, scope: !9853)
!9866 = !DILocation(line: 3423, column: 6, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 3423, column: 6)
!9868 = !DILocation(line: 3423, column: 10, scope: !9867)
!9869 = !DILocation(line: 3423, column: 6, scope: !9853)
!9870 = !DILocation(line: 3424, column: 10, scope: !9867)
!9871 = !DILocation(line: 3424, column: 14, scope: !9867)
!9872 = !DILocation(line: 3424, column: 3, scope: !9867)
!9873 = !DILocation(line: 3431, column: 19, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 3431, column: 6)
!9875 = !DILocation(line: 3431, column: 7, scope: !9874)
!9876 = !DILocation(line: 3431, column: 6, scope: !9853)
!9877 = !DILocation(line: 3432, column: 3, scope: !9874)
!9878 = !DILocation(line: 3434, column: 24, scope: !9853)
!9879 = !DILocation(line: 3434, column: 10, scope: !9853)
!9880 = !DILocation(line: 3434, column: 2, scope: !9853)
!9881 = !DILocation(line: 3449, column: 3, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 3434, column: 31)
!9883 = !DILocation(line: 3457, column: 32, scope: !9882)
!9884 = !DILocation(line: 3457, column: 38, scope: !9882)
!9885 = !DILocation(line: 3457, column: 10, scope: !9882)
!9886 = !DILocation(line: 3457, column: 3, scope: !9882)
!9887 = !DILocation(line: 3469, column: 8, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9882, file: !3, line: 3469, column: 7)
!9889 = !DILocation(line: 3469, column: 14, scope: !9888)
!9890 = !DILocation(line: 3469, column: 7, scope: !9882)
!9891 = !DILocation(line: 3470, column: 4, scope: !9888)
!9892 = !DILocation(line: 3472, column: 32, scope: !9882)
!9893 = !DILocation(line: 3472, column: 38, scope: !9882)
!9894 = !DILocation(line: 3472, column: 10, scope: !9882)
!9895 = !DILocation(line: 3472, column: 3, scope: !9882)
!9896 = !DILocation(line: 3479, column: 2, scope: !9853)
!9897 = !DILocation(line: 3480, column: 1, scope: !9853)
!9898 = distinct !DISubprogram(name: "pci_acs_flags_enabled", scope: !3, file: !3, line: 3381, type: !9854, scopeLine: 3382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9899 = !DILocalVariable(name: "pdev", arg: 1, scope: !9898, file: !3, line: 3381, type: !273)
!9900 = !DILocation(line: 3381, column: 51, scope: !9898)
!9901 = !DILocalVariable(name: "acs_flags", arg: 2, scope: !9898, file: !3, line: 3381, type: !979)
!9902 = !DILocation(line: 3381, column: 61, scope: !9898)
!9903 = !DILocalVariable(name: "pos", scope: !9898, file: !3, line: 3383, type: !304)
!9904 = !DILocation(line: 3383, column: 6, scope: !9898)
!9905 = !DILocalVariable(name: "cap", scope: !9898, file: !3, line: 3384, type: !979)
!9906 = !DILocation(line: 3384, column: 6, scope: !9898)
!9907 = !DILocalVariable(name: "ctrl", scope: !9898, file: !3, line: 3384, type: !979)
!9908 = !DILocation(line: 3384, column: 11, scope: !9898)
!9909 = !DILocation(line: 3386, column: 8, scope: !9898)
!9910 = !DILocation(line: 3386, column: 14, scope: !9898)
!9911 = !DILocation(line: 3386, column: 6, scope: !9898)
!9912 = !DILocation(line: 3387, column: 7, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 3387, column: 6)
!9914 = !DILocation(line: 3387, column: 6, scope: !9898)
!9915 = !DILocation(line: 3388, column: 3, scope: !9913)
!9916 = !DILocation(line: 3395, column: 23, scope: !9898)
!9917 = !DILocation(line: 3395, column: 29, scope: !9898)
!9918 = !DILocation(line: 3395, column: 33, scope: !9898)
!9919 = !DILocation(line: 3395, column: 2, scope: !9898)
!9920 = !DILocation(line: 3396, column: 16, scope: !9898)
!9921 = !DILocation(line: 3396, column: 20, scope: !9898)
!9922 = !DILocation(line: 3396, column: 12, scope: !9898)
!9923 = !DILocation(line: 3398, column: 23, scope: !9898)
!9924 = !DILocation(line: 3398, column: 29, scope: !9898)
!9925 = !DILocation(line: 3398, column: 33, scope: !9898)
!9926 = !DILocation(line: 3398, column: 2, scope: !9898)
!9927 = !DILocation(line: 3399, column: 10, scope: !9898)
!9928 = !DILocation(line: 3399, column: 17, scope: !9898)
!9929 = !DILocation(line: 3399, column: 15, scope: !9898)
!9930 = !DILocation(line: 3399, column: 31, scope: !9898)
!9931 = !DILocation(line: 3399, column: 28, scope: !9898)
!9932 = !DILocation(line: 3399, column: 2, scope: !9898)
!9933 = !DILocation(line: 3400, column: 1, scope: !9898)
!9934 = distinct !DISubprogram(name: "pci_acs_path_enabled", scope: !3, file: !3, line: 3491, type: !9935, scopeLine: 3493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9935 = !DISubroutineType(types: !9936)
!9936 = !{!609, !273, !273, !979}
!9937 = !DILocalVariable(name: "start", arg: 1, scope: !9934, file: !3, line: 3491, type: !273)
!9938 = !DILocation(line: 3491, column: 43, scope: !9934)
!9939 = !DILocalVariable(name: "end", arg: 2, scope: !9934, file: !3, line: 3492, type: !273)
!9940 = !DILocation(line: 3492, column: 22, scope: !9934)
!9941 = !DILocalVariable(name: "acs_flags", arg: 3, scope: !9934, file: !3, line: 3492, type: !979)
!9942 = !DILocation(line: 3492, column: 31, scope: !9934)
!9943 = !DILocalVariable(name: "pdev", scope: !9934, file: !3, line: 3494, type: !273)
!9944 = !DILocation(line: 3494, column: 18, scope: !9934)
!9945 = !DILocalVariable(name: "parent", scope: !9934, file: !3, line: 3494, type: !273)
!9946 = !DILocation(line: 3494, column: 25, scope: !9934)
!9947 = !DILocation(line: 3494, column: 34, scope: !9934)
!9948 = !DILocation(line: 3496, column: 2, scope: !9934)
!9949 = !DILocation(line: 3497, column: 10, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 3496, column: 5)
!9951 = !DILocation(line: 3497, column: 8, scope: !9950)
!9952 = !DILocation(line: 3499, column: 24, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9950, file: !3, line: 3499, column: 7)
!9954 = !DILocation(line: 3499, column: 30, scope: !9953)
!9955 = !DILocation(line: 3499, column: 8, scope: !9953)
!9956 = !DILocation(line: 3499, column: 7, scope: !9950)
!9957 = !DILocation(line: 3500, column: 4, scope: !9953)
!9958 = !DILocation(line: 3502, column: 23, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9950, file: !3, line: 3502, column: 7)
!9960 = !DILocation(line: 3502, column: 29, scope: !9959)
!9961 = !DILocation(line: 3502, column: 7, scope: !9959)
!9962 = !DILocation(line: 3502, column: 7, scope: !9950)
!9963 = !DILocation(line: 3503, column: 12, scope: !9959)
!9964 = !DILocation(line: 3503, column: 16, scope: !9959)
!9965 = !DILocation(line: 3503, column: 4, scope: !9959)
!9966 = !DILocation(line: 3505, column: 12, scope: !9950)
!9967 = !DILocation(line: 3505, column: 18, scope: !9950)
!9968 = !DILocation(line: 3505, column: 23, scope: !9950)
!9969 = !DILocation(line: 3505, column: 10, scope: !9950)
!9970 = !DILocation(line: 3506, column: 2, scope: !9950)
!9971 = !DILocation(line: 3506, column: 11, scope: !9934)
!9972 = !DILocation(line: 3506, column: 19, scope: !9934)
!9973 = !DILocation(line: 3506, column: 16, scope: !9934)
!9974 = distinct !{!9974, !9948, !9975}
!9975 = !DILocation(line: 3506, column: 22, scope: !9934)
!9976 = !DILocation(line: 3508, column: 2, scope: !9934)
!9977 = !DILocation(line: 3509, column: 1, scope: !9934)
!9978 = distinct !DISubprogram(name: "pci_is_root_bus", scope: !6, file: !6, line: 656, type: !9979, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9979 = !DISubroutineType(types: !9980)
!9980 = !{!609, !259}
!9981 = !DILocalVariable(name: "pbus", arg: 1, scope: !9978, file: !6, line: 656, type: !259)
!9982 = !DILocation(line: 656, column: 52, scope: !9978)
!9983 = !DILocation(line: 658, column: 11, scope: !9978)
!9984 = !DILocation(line: 658, column: 17, scope: !9978)
!9985 = !DILocation(line: 658, column: 9, scope: !9978)
!9986 = !DILocation(line: 658, column: 2, scope: !9978)
!9987 = distinct !DISubprogram(name: "pci_acs_init", scope: !3, file: !3, line: 3515, type: !3533, scopeLine: 3516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9988 = !DILocalVariable(name: "dev", arg: 1, scope: !9987, file: !3, line: 3515, type: !273)
!9989 = !DILocation(line: 3515, column: 35, scope: !9987)
!9990 = !DILocation(line: 3517, column: 41, scope: !9987)
!9991 = !DILocation(line: 3517, column: 17, scope: !9987)
!9992 = !DILocation(line: 3517, column: 2, scope: !9987)
!9993 = !DILocation(line: 3517, column: 7, scope: !9987)
!9994 = !DILocation(line: 3517, column: 15, scope: !9987)
!9995 = !DILocation(line: 3525, column: 17, scope: !9987)
!9996 = !DILocation(line: 3525, column: 2, scope: !9987)
!9997 = !DILocation(line: 3526, column: 1, scope: !9987)
!9998 = distinct !DISubprogram(name: "pci_rebar_get_possible_sizes", scope: !3, file: !3, line: 3570, type: !9999, scopeLine: 3571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9999 = !DISubroutineType(types: !10000)
!10000 = !{!319, !273, !304}
!10001 = !DILocalVariable(name: "pdev", arg: 1, scope: !9998, file: !3, line: 3570, type: !273)
!10002 = !DILocation(line: 3570, column: 50, scope: !9998)
!10003 = !DILocalVariable(name: "bar", arg: 2, scope: !9998, file: !3, line: 3570, type: !304)
!10004 = !DILocation(line: 3570, column: 60, scope: !9998)
!10005 = !DILocalVariable(name: "pos", scope: !9998, file: !3, line: 3572, type: !304)
!10006 = !DILocation(line: 3572, column: 6, scope: !9998)
!10007 = !DILocalVariable(name: "cap", scope: !9998, file: !3, line: 3573, type: !319)
!10008 = !DILocation(line: 3573, column: 6, scope: !9998)
!10009 = !DILocation(line: 3575, column: 27, scope: !9998)
!10010 = !DILocation(line: 3575, column: 33, scope: !9998)
!10011 = !DILocation(line: 3575, column: 8, scope: !9998)
!10012 = !DILocation(line: 3575, column: 6, scope: !9998)
!10013 = !DILocation(line: 3576, column: 6, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 3576, column: 6)
!10015 = !DILocation(line: 3576, column: 10, scope: !10014)
!10016 = !DILocation(line: 3576, column: 6, scope: !9998)
!10017 = !DILocation(line: 3577, column: 3, scope: !10014)
!10018 = !DILocation(line: 3579, column: 24, scope: !9998)
!10019 = !DILocation(line: 3579, column: 30, scope: !9998)
!10020 = !DILocation(line: 3579, column: 34, scope: !9998)
!10021 = !DILocation(line: 3579, column: 2, scope: !9998)
!10022 = !DILocation(line: 3580, column: 10, scope: !9998)
!10023 = !DILocation(line: 3580, column: 14, scope: !9998)
!10024 = !DILocation(line: 3580, column: 37, scope: !9998)
!10025 = !DILocation(line: 3580, column: 2, scope: !9998)
!10026 = !DILocation(line: 3581, column: 1, scope: !9998)
!10027 = distinct !DISubprogram(name: "pci_rebar_find_pos", scope: !3, file: !3, line: 3537, type: !3550, scopeLine: 3538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10028 = !DILocalVariable(name: "pdev", arg: 1, scope: !10027, file: !3, line: 3537, type: !273)
!10029 = !DILocation(line: 3537, column: 47, scope: !10027)
!10030 = !DILocalVariable(name: "bar", arg: 2, scope: !10027, file: !3, line: 3537, type: !304)
!10031 = !DILocation(line: 3537, column: 57, scope: !10027)
!10032 = !DILocalVariable(name: "pos", scope: !10027, file: !3, line: 3539, type: !7)
!10033 = !DILocation(line: 3539, column: 15, scope: !10027)
!10034 = !DILocalVariable(name: "nbars", scope: !10027, file: !3, line: 3539, type: !7)
!10035 = !DILocation(line: 3539, column: 20, scope: !10027)
!10036 = !DILocalVariable(name: "i", scope: !10027, file: !3, line: 3539, type: !7)
!10037 = !DILocation(line: 3539, column: 27, scope: !10027)
!10038 = !DILocalVariable(name: "ctrl", scope: !10027, file: !3, line: 3540, type: !319)
!10039 = !DILocation(line: 3540, column: 6, scope: !10027)
!10040 = !DILocation(line: 3542, column: 32, scope: !10027)
!10041 = !DILocation(line: 3542, column: 8, scope: !10027)
!10042 = !DILocation(line: 3542, column: 6, scope: !10027)
!10043 = !DILocation(line: 3543, column: 7, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 3543, column: 6)
!10045 = !DILocation(line: 3543, column: 6, scope: !10027)
!10046 = !DILocation(line: 3544, column: 3, scope: !10044)
!10047 = !DILocation(line: 3546, column: 24, scope: !10027)
!10048 = !DILocation(line: 3546, column: 30, scope: !10027)
!10049 = !DILocation(line: 3546, column: 34, scope: !10027)
!10050 = !DILocation(line: 3546, column: 2, scope: !10027)
!10051 = !DILocation(line: 3547, column: 11, scope: !10027)
!10052 = !DILocation(line: 3547, column: 16, scope: !10027)
!10053 = !DILocation(line: 3547, column: 44, scope: !10027)
!10054 = !DILocation(line: 3547, column: 8, scope: !10027)
!10055 = !DILocation(line: 3550, column: 9, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 3550, column: 2)
!10057 = !DILocation(line: 3550, column: 7, scope: !10056)
!10058 = !DILocation(line: 3550, column: 14, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10056, file: !3, line: 3550, column: 2)
!10060 = !DILocation(line: 3550, column: 18, scope: !10059)
!10061 = !DILocation(line: 3550, column: 16, scope: !10059)
!10062 = !DILocation(line: 3550, column: 2, scope: !10056)
!10063 = !DILocalVariable(name: "bar_idx", scope: !10064, file: !3, line: 3551, type: !304)
!10064 = distinct !DILexicalBlock(scope: !10059, file: !3, line: 3550, column: 40)
!10065 = !DILocation(line: 3551, column: 7, scope: !10064)
!10066 = !DILocation(line: 3553, column: 25, scope: !10064)
!10067 = !DILocation(line: 3553, column: 31, scope: !10064)
!10068 = !DILocation(line: 3553, column: 35, scope: !10064)
!10069 = !DILocation(line: 3553, column: 3, scope: !10064)
!10070 = !DILocation(line: 3554, column: 13, scope: !10064)
!10071 = !DILocation(line: 3554, column: 18, scope: !10064)
!10072 = !DILocation(line: 3554, column: 11, scope: !10064)
!10073 = !DILocation(line: 3555, column: 7, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 3555, column: 7)
!10075 = !DILocation(line: 3555, column: 18, scope: !10074)
!10076 = !DILocation(line: 3555, column: 15, scope: !10074)
!10077 = !DILocation(line: 3555, column: 7, scope: !10064)
!10078 = !DILocation(line: 3556, column: 11, scope: !10074)
!10079 = !DILocation(line: 3556, column: 4, scope: !10074)
!10080 = !DILocation(line: 3557, column: 2, scope: !10064)
!10081 = !DILocation(line: 3550, column: 26, scope: !10059)
!10082 = !DILocation(line: 3550, column: 34, scope: !10059)
!10083 = !DILocation(line: 3550, column: 2, scope: !10059)
!10084 = distinct !{!10084, !10062, !10085}
!10085 = !DILocation(line: 3557, column: 2, scope: !10056)
!10086 = !DILocation(line: 3559, column: 2, scope: !10027)
!10087 = !DILocation(line: 3560, column: 1, scope: !10027)
!10088 = distinct !DISubprogram(name: "pci_rebar_get_current_size", scope: !3, file: !3, line: 3591, type: !3550, scopeLine: 3592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10089 = !DILocalVariable(name: "pdev", arg: 1, scope: !10088, file: !3, line: 3591, type: !273)
!10090 = !DILocation(line: 3591, column: 48, scope: !10088)
!10091 = !DILocalVariable(name: "bar", arg: 2, scope: !10088, file: !3, line: 3591, type: !304)
!10092 = !DILocation(line: 3591, column: 58, scope: !10088)
!10093 = !DILocalVariable(name: "pos", scope: !10088, file: !3, line: 3593, type: !304)
!10094 = !DILocation(line: 3593, column: 6, scope: !10088)
!10095 = !DILocalVariable(name: "ctrl", scope: !10088, file: !3, line: 3594, type: !319)
!10096 = !DILocation(line: 3594, column: 6, scope: !10088)
!10097 = !DILocation(line: 3596, column: 27, scope: !10088)
!10098 = !DILocation(line: 3596, column: 33, scope: !10088)
!10099 = !DILocation(line: 3596, column: 8, scope: !10088)
!10100 = !DILocation(line: 3596, column: 6, scope: !10088)
!10101 = !DILocation(line: 3597, column: 6, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10088, file: !3, line: 3597, column: 6)
!10103 = !DILocation(line: 3597, column: 10, scope: !10102)
!10104 = !DILocation(line: 3597, column: 6, scope: !10088)
!10105 = !DILocation(line: 3598, column: 10, scope: !10102)
!10106 = !DILocation(line: 3598, column: 3, scope: !10102)
!10107 = !DILocation(line: 3600, column: 24, scope: !10088)
!10108 = !DILocation(line: 3600, column: 30, scope: !10088)
!10109 = !DILocation(line: 3600, column: 34, scope: !10088)
!10110 = !DILocation(line: 3600, column: 2, scope: !10088)
!10111 = !DILocation(line: 3601, column: 10, scope: !10088)
!10112 = !DILocation(line: 3601, column: 15, scope: !10088)
!10113 = !DILocation(line: 3601, column: 42, scope: !10088)
!10114 = !DILocation(line: 3601, column: 2, scope: !10088)
!10115 = !DILocation(line: 3602, column: 1, scope: !10088)
!10116 = distinct !DISubprogram(name: "pci_rebar_set_size", scope: !3, file: !3, line: 3613, type: !5181, scopeLine: 3614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10117 = !DILocalVariable(name: "pdev", arg: 1, scope: !10116, file: !3, line: 3613, type: !273)
!10118 = !DILocation(line: 3613, column: 40, scope: !10116)
!10119 = !DILocalVariable(name: "bar", arg: 2, scope: !10116, file: !3, line: 3613, type: !304)
!10120 = !DILocation(line: 3613, column: 50, scope: !10116)
!10121 = !DILocalVariable(name: "size", arg: 3, scope: !10116, file: !3, line: 3613, type: !304)
!10122 = !DILocation(line: 3613, column: 59, scope: !10116)
!10123 = !DILocalVariable(name: "pos", scope: !10116, file: !3, line: 3615, type: !304)
!10124 = !DILocation(line: 3615, column: 6, scope: !10116)
!10125 = !DILocalVariable(name: "ctrl", scope: !10116, file: !3, line: 3616, type: !319)
!10126 = !DILocation(line: 3616, column: 6, scope: !10116)
!10127 = !DILocation(line: 3618, column: 27, scope: !10116)
!10128 = !DILocation(line: 3618, column: 33, scope: !10116)
!10129 = !DILocation(line: 3618, column: 8, scope: !10116)
!10130 = !DILocation(line: 3618, column: 6, scope: !10116)
!10131 = !DILocation(line: 3619, column: 6, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 3619, column: 6)
!10133 = !DILocation(line: 3619, column: 10, scope: !10132)
!10134 = !DILocation(line: 3619, column: 6, scope: !10116)
!10135 = !DILocation(line: 3620, column: 10, scope: !10132)
!10136 = !DILocation(line: 3620, column: 3, scope: !10132)
!10137 = !DILocation(line: 3622, column: 24, scope: !10116)
!10138 = !DILocation(line: 3622, column: 30, scope: !10116)
!10139 = !DILocation(line: 3622, column: 34, scope: !10116)
!10140 = !DILocation(line: 3622, column: 2, scope: !10116)
!10141 = !DILocation(line: 3623, column: 7, scope: !10116)
!10142 = !DILocation(line: 3624, column: 10, scope: !10116)
!10143 = !DILocation(line: 3624, column: 15, scope: !10116)
!10144 = !DILocation(line: 3624, column: 7, scope: !10116)
!10145 = !DILocation(line: 3625, column: 25, scope: !10116)
!10146 = !DILocation(line: 3625, column: 31, scope: !10116)
!10147 = !DILocation(line: 3625, column: 35, scope: !10116)
!10148 = !DILocation(line: 3625, column: 53, scope: !10116)
!10149 = !DILocation(line: 3625, column: 2, scope: !10116)
!10150 = !DILocation(line: 3626, column: 2, scope: !10116)
!10151 = !DILocation(line: 3627, column: 1, scope: !10116)
!10152 = distinct !DISubprogram(name: "pci_enable_atomic_ops_to_root", scope: !3, file: !3, line: 3642, type: !10153, scopeLine: 3643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10153 = !DISubroutineType(types: !10154)
!10154 = !{!304, !273, !319}
!10155 = !DILocalVariable(name: "dev", arg: 1, scope: !10152, file: !3, line: 3642, type: !273)
!10156 = !DILocation(line: 3642, column: 51, scope: !10152)
!10157 = !DILocalVariable(name: "cap_mask", arg: 2, scope: !10152, file: !3, line: 3642, type: !319)
!10158 = !DILocation(line: 3642, column: 60, scope: !10152)
!10159 = !DILocalVariable(name: "bus", scope: !10152, file: !3, line: 3644, type: !259)
!10160 = !DILocation(line: 3644, column: 18, scope: !10152)
!10161 = !DILocation(line: 3644, column: 24, scope: !10152)
!10162 = !DILocation(line: 3644, column: 29, scope: !10152)
!10163 = !DILocalVariable(name: "bridge", scope: !10152, file: !3, line: 3645, type: !273)
!10164 = !DILocation(line: 3645, column: 18, scope: !10152)
!10165 = !DILocalVariable(name: "cap", scope: !10152, file: !3, line: 3646, type: !319)
!10166 = !DILocation(line: 3646, column: 6, scope: !10152)
!10167 = !DILocalVariable(name: "ctl2", scope: !10152, file: !3, line: 3646, type: !319)
!10168 = !DILocation(line: 3646, column: 11, scope: !10152)
!10169 = !DILocation(line: 3648, column: 19, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 3648, column: 6)
!10171 = !DILocation(line: 3648, column: 7, scope: !10170)
!10172 = !DILocation(line: 3648, column: 6, scope: !10152)
!10173 = !DILocation(line: 3649, column: 3, scope: !10170)
!10174 = !DILocation(line: 3658, column: 24, scope: !10152)
!10175 = !DILocation(line: 3658, column: 10, scope: !10152)
!10176 = !DILocation(line: 3658, column: 2, scope: !10152)
!10177 = !DILocation(line: 3662, column: 3, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 3658, column: 30)
!10179 = !DILocation(line: 3664, column: 3, scope: !10178)
!10180 = !DILocation(line: 3667, column: 2, scope: !10152)
!10181 = !DILocation(line: 3667, column: 9, scope: !10152)
!10182 = !DILocation(line: 3667, column: 14, scope: !10152)
!10183 = !DILocation(line: 3668, column: 12, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 3667, column: 22)
!10185 = !DILocation(line: 3668, column: 17, scope: !10184)
!10186 = !DILocation(line: 3668, column: 10, scope: !10184)
!10187 = !DILocation(line: 3670, column: 30, scope: !10184)
!10188 = !DILocation(line: 3670, column: 3, scope: !10184)
!10189 = !DILocation(line: 3672, column: 25, scope: !10184)
!10190 = !DILocation(line: 3672, column: 11, scope: !10184)
!10191 = !DILocation(line: 3672, column: 3, scope: !10184)
!10192 = !DILocation(line: 3676, column: 10, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10194, file: !3, line: 3676, column: 8)
!10194 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 3672, column: 34)
!10195 = !DILocation(line: 3676, column: 14, scope: !10193)
!10196 = !DILocation(line: 3676, column: 8, scope: !10194)
!10197 = !DILocation(line: 3677, column: 5, scope: !10193)
!10198 = !DILocation(line: 3678, column: 4, scope: !10194)
!10199 = !DILocation(line: 3682, column: 9, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10194, file: !3, line: 3682, column: 8)
!10201 = !DILocation(line: 3682, column: 15, scope: !10200)
!10202 = !DILocation(line: 3682, column: 13, scope: !10200)
!10203 = !DILocation(line: 3682, column: 28, scope: !10200)
!10204 = !DILocation(line: 3682, column: 25, scope: !10200)
!10205 = !DILocation(line: 3682, column: 8, scope: !10194)
!10206 = !DILocation(line: 3683, column: 5, scope: !10200)
!10207 = !DILocation(line: 3684, column: 4, scope: !10194)
!10208 = !DILocation(line: 3688, column: 21, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 3688, column: 7)
!10210 = !DILocation(line: 3688, column: 7, scope: !10209)
!10211 = !DILocation(line: 3688, column: 29, scope: !10209)
!10212 = !DILocation(line: 3688, column: 7, scope: !10184)
!10213 = !DILocation(line: 3689, column: 31, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 3688, column: 55)
!10215 = !DILocation(line: 3689, column: 4, scope: !10214)
!10216 = !DILocation(line: 3691, column: 8, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 3691, column: 8)
!10218 = !DILocation(line: 3691, column: 13, scope: !10217)
!10219 = !DILocation(line: 3691, column: 8, scope: !10214)
!10220 = !DILocation(line: 3692, column: 5, scope: !10217)
!10221 = !DILocation(line: 3693, column: 3, scope: !10214)
!10222 = !DILocation(line: 3695, column: 9, scope: !10184)
!10223 = !DILocation(line: 3695, column: 14, scope: !10184)
!10224 = !DILocation(line: 3695, column: 7, scope: !10184)
!10225 = distinct !{!10225, !10180, !10226}
!10226 = !DILocation(line: 3696, column: 2, scope: !10152)
!10227 = !DILocation(line: 3698, column: 27, scope: !10152)
!10228 = !DILocation(line: 3698, column: 2, scope: !10152)
!10229 = !DILocation(line: 3700, column: 2, scope: !10152)
!10230 = !DILocation(line: 3701, column: 1, scope: !10152)
!10231 = distinct !DISubprogram(name: "pci_swizzle_interrupt_pin", scope: !3, file: !3, line: 3715, type: !10232, scopeLine: 3716, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10232 = !DISubroutineType(types: !10233)
!10233 = !{!310, !4701, !310}
!10234 = !DILocalVariable(name: "dev", arg: 1, scope: !10231, file: !3, line: 3715, type: !4701)
!10235 = !DILocation(line: 3715, column: 52, scope: !10231)
!10236 = !DILocalVariable(name: "pin", arg: 2, scope: !10231, file: !3, line: 3715, type: !310)
!10237 = !DILocation(line: 3715, column: 60, scope: !10231)
!10238 = !DILocalVariable(name: "slot", scope: !10231, file: !3, line: 3717, type: !304)
!10239 = !DILocation(line: 3717, column: 6, scope: !10231)
!10240 = !DILocation(line: 3719, column: 22, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10231, file: !3, line: 3719, column: 6)
!10242 = !DILocation(line: 3719, column: 27, scope: !10241)
!10243 = !DILocation(line: 3719, column: 6, scope: !10241)
!10244 = !DILocation(line: 3719, column: 6, scope: !10231)
!10245 = !DILocation(line: 3720, column: 8, scope: !10241)
!10246 = !DILocation(line: 3720, column: 3, scope: !10241)
!10247 = !DILocation(line: 3722, column: 10, scope: !10241)
!10248 = !DILocation(line: 3722, column: 8, scope: !10241)
!10249 = !DILocation(line: 3724, column: 12, scope: !10231)
!10250 = !DILocation(line: 3724, column: 16, scope: !10231)
!10251 = !DILocation(line: 3724, column: 23, scope: !10231)
!10252 = !DILocation(line: 3724, column: 21, scope: !10231)
!10253 = !DILocation(line: 3724, column: 29, scope: !10231)
!10254 = !DILocation(line: 3724, column: 34, scope: !10231)
!10255 = !DILocation(line: 3724, column: 9, scope: !10231)
!10256 = !DILocation(line: 3724, column: 2, scope: !10231)
!10257 = distinct !DISubprogram(name: "pci_ari_enabled", scope: !6, file: !6, line: 2369, type: !9979, scopeLine: 2370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10258 = !DILocalVariable(name: "bus", arg: 1, scope: !10257, file: !6, line: 2369, type: !259)
!10259 = !DILocation(line: 2369, column: 52, scope: !10257)
!10260 = !DILocation(line: 2371, column: 9, scope: !10257)
!10261 = !DILocation(line: 2371, column: 14, scope: !10257)
!10262 = !DILocation(line: 2371, column: 19, scope: !10257)
!10263 = !DILocation(line: 2371, column: 22, scope: !10257)
!10264 = !DILocation(line: 2371, column: 27, scope: !10257)
!10265 = !DILocation(line: 2371, column: 33, scope: !10257)
!10266 = !DILocation(line: 0, scope: !10257)
!10267 = !DILocation(line: 2371, column: 2, scope: !10257)
!10268 = distinct !DISubprogram(name: "pci_get_interrupt_pin", scope: !3, file: !3, line: 3727, type: !10269, scopeLine: 3728, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10269 = !DISubroutineType(types: !10270)
!10270 = !{!304, !273, !10271}
!10271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!10272 = !DILocalVariable(name: "dev", arg: 1, scope: !10268, file: !3, line: 3727, type: !273)
!10273 = !DILocation(line: 3727, column: 43, scope: !10268)
!10274 = !DILocalVariable(name: "bridge", arg: 2, scope: !10268, file: !3, line: 3727, type: !10271)
!10275 = !DILocation(line: 3727, column: 65, scope: !10268)
!10276 = !DILocalVariable(name: "pin", scope: !10268, file: !3, line: 3729, type: !310)
!10277 = !DILocation(line: 3729, column: 5, scope: !10268)
!10278 = !DILocation(line: 3731, column: 8, scope: !10268)
!10279 = !DILocation(line: 3731, column: 13, scope: !10268)
!10280 = !DILocation(line: 3731, column: 6, scope: !10268)
!10281 = !DILocation(line: 3732, column: 7, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 3732, column: 6)
!10283 = !DILocation(line: 3732, column: 6, scope: !10268)
!10284 = !DILocation(line: 3733, column: 3, scope: !10282)
!10285 = !DILocation(line: 3735, column: 2, scope: !10268)
!10286 = !DILocation(line: 3735, column: 26, scope: !10268)
!10287 = !DILocation(line: 3735, column: 31, scope: !10268)
!10288 = !DILocation(line: 3735, column: 10, scope: !10268)
!10289 = !DILocation(line: 3735, column: 9, scope: !10268)
!10290 = !DILocation(line: 3736, column: 35, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 3735, column: 37)
!10292 = !DILocation(line: 3736, column: 40, scope: !10291)
!10293 = !DILocation(line: 3736, column: 9, scope: !10291)
!10294 = !DILocation(line: 3736, column: 7, scope: !10291)
!10295 = !DILocation(line: 3737, column: 9, scope: !10291)
!10296 = !DILocation(line: 3737, column: 14, scope: !10291)
!10297 = !DILocation(line: 3737, column: 19, scope: !10291)
!10298 = !DILocation(line: 3737, column: 7, scope: !10291)
!10299 = distinct !{!10299, !10285, !10300}
!10300 = !DILocation(line: 3738, column: 2, scope: !10268)
!10301 = !DILocation(line: 3739, column: 12, scope: !10268)
!10302 = !DILocation(line: 3739, column: 3, scope: !10268)
!10303 = !DILocation(line: 3739, column: 10, scope: !10268)
!10304 = !DILocation(line: 3740, column: 9, scope: !10268)
!10305 = !DILocation(line: 3740, column: 2, scope: !10268)
!10306 = !DILocation(line: 3741, column: 1, scope: !10268)
!10307 = distinct !DISubprogram(name: "pci_common_swizzle", scope: !3, file: !3, line: 3751, type: !10308, scopeLine: 3752, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10308 = !DISubroutineType(types: !10309)
!10309 = !{!310, !273, !325}
!10310 = !DILocalVariable(name: "dev", arg: 1, scope: !10307, file: !3, line: 3751, type: !273)
!10311 = !DILocation(line: 3751, column: 39, scope: !10307)
!10312 = !DILocalVariable(name: "pinp", arg: 2, scope: !10307, file: !3, line: 3751, type: !325)
!10313 = !DILocation(line: 3751, column: 48, scope: !10307)
!10314 = !DILocalVariable(name: "pin", scope: !10307, file: !3, line: 3753, type: !310)
!10315 = !DILocation(line: 3753, column: 5, scope: !10307)
!10316 = !DILocation(line: 3753, column: 12, scope: !10307)
!10317 = !DILocation(line: 3753, column: 11, scope: !10307)
!10318 = !DILocation(line: 3755, column: 2, scope: !10307)
!10319 = !DILocation(line: 3755, column: 26, scope: !10307)
!10320 = !DILocation(line: 3755, column: 31, scope: !10307)
!10321 = !DILocation(line: 3755, column: 10, scope: !10307)
!10322 = !DILocation(line: 3755, column: 9, scope: !10307)
!10323 = !DILocation(line: 3756, column: 35, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 3755, column: 37)
!10325 = !DILocation(line: 3756, column: 40, scope: !10324)
!10326 = !DILocation(line: 3756, column: 9, scope: !10324)
!10327 = !DILocation(line: 3756, column: 7, scope: !10324)
!10328 = !DILocation(line: 3757, column: 9, scope: !10324)
!10329 = !DILocation(line: 3757, column: 14, scope: !10324)
!10330 = !DILocation(line: 3757, column: 19, scope: !10324)
!10331 = !DILocation(line: 3757, column: 7, scope: !10324)
!10332 = distinct !{!10332, !10318, !10333}
!10333 = !DILocation(line: 3758, column: 2, scope: !10307)
!10334 = !DILocation(line: 3759, column: 10, scope: !10307)
!10335 = !DILocation(line: 3759, column: 3, scope: !10307)
!10336 = !DILocation(line: 3759, column: 8, scope: !10307)
!10337 = !DILocation(line: 3760, column: 9, scope: !10307)
!10338 = !DILocation(line: 3760, column: 2, scope: !10307)
!10339 = distinct !DISubprogram(name: "pci_release_region", scope: !3, file: !3, line: 3774, type: !10340, scopeLine: 3775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10340 = !DISubroutineType(types: !10341)
!10341 = !{null, !273, !304}
!10342 = !DILocalVariable(name: "pdev", arg: 1, scope: !10339, file: !3, line: 3774, type: !273)
!10343 = !DILocation(line: 3774, column: 41, scope: !10339)
!10344 = !DILocalVariable(name: "bar", arg: 2, scope: !10339, file: !3, line: 3774, type: !304)
!10345 = !DILocation(line: 3774, column: 51, scope: !10339)
!10346 = !DILocalVariable(name: "dr", scope: !10339, file: !3, line: 3776, type: !7519)
!10347 = !DILocation(line: 3776, column: 21, scope: !10339)
!10348 = !DILocation(line: 3778, column: 6, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 3778, column: 6)
!10350 = !DILocation(line: 3778, column: 34, scope: !10349)
!10351 = !DILocation(line: 3778, column: 6, scope: !10339)
!10352 = !DILocation(line: 3779, column: 3, scope: !10349)
!10353 = !DILocation(line: 3780, column: 6, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 3780, column: 6)
!10355 = !DILocation(line: 3780, column: 36, scope: !10354)
!10356 = !DILocation(line: 3780, column: 6, scope: !10339)
!10357 = !DILocation(line: 3781, column: 3, scope: !10354)
!10358 = !DILocation(line: 3783, column: 11, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 3783, column: 11)
!10360 = !DILocation(line: 3783, column: 41, scope: !10359)
!10361 = !DILocation(line: 3783, column: 11, scope: !10354)
!10362 = !DILocation(line: 3784, column: 3, scope: !10359)
!10363 = !DILocation(line: 3787, column: 19, scope: !10339)
!10364 = !DILocation(line: 3787, column: 7, scope: !10339)
!10365 = !DILocation(line: 3787, column: 5, scope: !10339)
!10366 = !DILocation(line: 3788, column: 6, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 3788, column: 6)
!10368 = !DILocation(line: 3788, column: 6, scope: !10339)
!10369 = !DILocation(line: 3789, column: 29, scope: !10367)
!10370 = !DILocation(line: 3789, column: 26, scope: !10367)
!10371 = !DILocation(line: 3789, column: 22, scope: !10367)
!10372 = !DILocation(line: 3789, column: 3, scope: !10367)
!10373 = !DILocation(line: 3789, column: 7, scope: !10367)
!10374 = !DILocation(line: 3789, column: 19, scope: !10367)
!10375 = !DILocation(line: 3790, column: 1, scope: !10339)
!10376 = distinct !DISubprogram(name: "pci_request_region", scope: !3, file: !3, line: 3857, type: !10377, scopeLine: 3858, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10377 = !DISubroutineType(types: !10378)
!10378 = !{!304, !273, !304, !340}
!10379 = !DILocalVariable(name: "pdev", arg: 1, scope: !10376, file: !3, line: 3857, type: !273)
!10380 = !DILocation(line: 3857, column: 40, scope: !10376)
!10381 = !DILocalVariable(name: "bar", arg: 2, scope: !10376, file: !3, line: 3857, type: !304)
!10382 = !DILocation(line: 3857, column: 50, scope: !10376)
!10383 = !DILocalVariable(name: "res_name", arg: 3, scope: !10376, file: !3, line: 3857, type: !340)
!10384 = !DILocation(line: 3857, column: 67, scope: !10376)
!10385 = !DILocation(line: 3859, column: 30, scope: !10376)
!10386 = !DILocation(line: 3859, column: 36, scope: !10376)
!10387 = !DILocation(line: 3859, column: 41, scope: !10376)
!10388 = !DILocation(line: 3859, column: 9, scope: !10376)
!10389 = !DILocation(line: 3859, column: 2, scope: !10376)
!10390 = distinct !DISubprogram(name: "__pci_request_region", scope: !3, file: !3, line: 3812, type: !10391, scopeLine: 3814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10391 = !DISubroutineType(types: !10392)
!10392 = !{!304, !273, !304, !340, !304}
!10393 = !DILocalVariable(name: "pdev", arg: 1, scope: !10390, file: !3, line: 3812, type: !273)
!10394 = !DILocation(line: 3812, column: 49, scope: !10390)
!10395 = !DILocalVariable(name: "bar", arg: 2, scope: !10390, file: !3, line: 3812, type: !304)
!10396 = !DILocation(line: 3812, column: 59, scope: !10390)
!10397 = !DILocalVariable(name: "res_name", arg: 3, scope: !10390, file: !3, line: 3813, type: !340)
!10398 = !DILocation(line: 3813, column: 17, scope: !10390)
!10399 = !DILocalVariable(name: "exclusive", arg: 4, scope: !10390, file: !3, line: 3813, type: !304)
!10400 = !DILocation(line: 3813, column: 31, scope: !10390)
!10401 = !DILocalVariable(name: "dr", scope: !10390, file: !3, line: 3815, type: !7519)
!10402 = !DILocation(line: 3815, column: 21, scope: !10390)
!10403 = !DILocation(line: 3817, column: 6, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 3817, column: 6)
!10405 = !DILocation(line: 3817, column: 34, scope: !10404)
!10406 = !DILocation(line: 3817, column: 6, scope: !10390)
!10407 = !DILocation(line: 3818, column: 3, scope: !10404)
!10408 = !DILocation(line: 3820, column: 6, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 3820, column: 6)
!10410 = !DILocation(line: 3820, column: 36, scope: !10409)
!10411 = !DILocation(line: 3820, column: 6, scope: !10390)
!10412 = !DILocation(line: 3821, column: 8, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10414, file: !3, line: 3821, column: 7)
!10414 = distinct !DILexicalBlock(scope: !10409, file: !3, line: 3820, column: 53)
!10415 = !DILocation(line: 3821, column: 7, scope: !10414)
!10416 = !DILocation(line: 3823, column: 4, scope: !10413)
!10417 = !DILocation(line: 3824, column: 2, scope: !10414)
!10418 = !DILocation(line: 3824, column: 13, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10409, file: !3, line: 3824, column: 13)
!10420 = !DILocation(line: 3824, column: 43, scope: !10419)
!10421 = !DILocation(line: 3824, column: 13, scope: !10409)
!10422 = !DILocation(line: 3825, column: 8, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10424, file: !3, line: 3825, column: 7)
!10424 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 3824, column: 61)
!10425 = !DILocation(line: 3825, column: 7, scope: !10424)
!10426 = !DILocation(line: 3828, column: 4, scope: !10423)
!10427 = !DILocation(line: 3829, column: 2, scope: !10424)
!10428 = !DILocation(line: 3831, column: 19, scope: !10390)
!10429 = !DILocation(line: 3831, column: 7, scope: !10390)
!10430 = !DILocation(line: 3831, column: 5, scope: !10390)
!10431 = !DILocation(line: 3832, column: 6, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 3832, column: 6)
!10433 = !DILocation(line: 3832, column: 6, scope: !10390)
!10434 = !DILocation(line: 3833, column: 27, scope: !10432)
!10435 = !DILocation(line: 3833, column: 24, scope: !10432)
!10436 = !DILocation(line: 3833, column: 3, scope: !10432)
!10437 = !DILocation(line: 3833, column: 7, scope: !10432)
!10438 = !DILocation(line: 3833, column: 19, scope: !10432)
!10439 = !DILocation(line: 3835, column: 2, scope: !10390)
!10440 = !DILabel(scope: !10390, name: "err_out", file: !3, line: 3837)
!10441 = !DILocation(line: 3837, column: 1, scope: !10390)
!10442 = !DILocation(line: 3838, column: 2, scope: !10390)
!10443 = !DILocation(line: 3840, column: 2, scope: !10390)
!10444 = !DILocation(line: 3841, column: 1, scope: !10390)
!10445 = distinct !DISubprogram(name: "pci_release_selected_regions", scope: !3, file: !3, line: 3871, type: !10340, scopeLine: 3872, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10446 = !DILocalVariable(name: "pdev", arg: 1, scope: !10445, file: !3, line: 3871, type: !273)
!10447 = !DILocation(line: 3871, column: 51, scope: !10445)
!10448 = !DILocalVariable(name: "bars", arg: 2, scope: !10445, file: !3, line: 3871, type: !304)
!10449 = !DILocation(line: 3871, column: 61, scope: !10445)
!10450 = !DILocalVariable(name: "i", scope: !10445, file: !3, line: 3873, type: !304)
!10451 = !DILocation(line: 3873, column: 6, scope: !10445)
!10452 = !DILocation(line: 3875, column: 9, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 3875, column: 2)
!10454 = !DILocation(line: 3875, column: 7, scope: !10453)
!10455 = !DILocation(line: 3875, column: 14, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10453, file: !3, line: 3875, column: 2)
!10457 = !DILocation(line: 3875, column: 16, scope: !10456)
!10458 = !DILocation(line: 3875, column: 2, scope: !10453)
!10459 = !DILocation(line: 3876, column: 7, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 3876, column: 7)
!10461 = !DILocation(line: 3876, column: 20, scope: !10460)
!10462 = !DILocation(line: 3876, column: 17, scope: !10460)
!10463 = !DILocation(line: 3876, column: 12, scope: !10460)
!10464 = !DILocation(line: 3876, column: 7, scope: !10456)
!10465 = !DILocation(line: 3877, column: 23, scope: !10460)
!10466 = !DILocation(line: 3877, column: 29, scope: !10460)
!10467 = !DILocation(line: 3877, column: 4, scope: !10460)
!10468 = !DILocation(line: 3876, column: 21, scope: !10460)
!10469 = !DILocation(line: 3875, column: 37, scope: !10456)
!10470 = !DILocation(line: 3875, column: 2, scope: !10456)
!10471 = distinct !{!10471, !10458, !10472}
!10472 = !DILocation(line: 3877, column: 30, scope: !10453)
!10473 = !DILocation(line: 3878, column: 1, scope: !10445)
!10474 = distinct !DISubprogram(name: "pci_request_selected_regions", scope: !3, file: !3, line: 3907, type: !10377, scopeLine: 3909, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10475 = !DILocalVariable(name: "pdev", arg: 1, scope: !10474, file: !3, line: 3907, type: !273)
!10476 = !DILocation(line: 3907, column: 50, scope: !10474)
!10477 = !DILocalVariable(name: "bars", arg: 2, scope: !10474, file: !3, line: 3907, type: !304)
!10478 = !DILocation(line: 3907, column: 60, scope: !10474)
!10479 = !DILocalVariable(name: "res_name", arg: 3, scope: !10474, file: !3, line: 3908, type: !340)
!10480 = !DILocation(line: 3908, column: 18, scope: !10474)
!10481 = !DILocation(line: 3910, column: 40, scope: !10474)
!10482 = !DILocation(line: 3910, column: 46, scope: !10474)
!10483 = !DILocation(line: 3910, column: 52, scope: !10474)
!10484 = !DILocation(line: 3910, column: 9, scope: !10474)
!10485 = !DILocation(line: 3910, column: 2, scope: !10474)
!10486 = distinct !DISubprogram(name: "__pci_request_selected_regions", scope: !3, file: !3, line: 3881, type: !10391, scopeLine: 3883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10487 = !DILocalVariable(name: "pdev", arg: 1, scope: !10486, file: !3, line: 3881, type: !273)
!10488 = !DILocation(line: 3881, column: 59, scope: !10486)
!10489 = !DILocalVariable(name: "bars", arg: 2, scope: !10486, file: !3, line: 3881, type: !304)
!10490 = !DILocation(line: 3881, column: 69, scope: !10486)
!10491 = !DILocalVariable(name: "res_name", arg: 3, scope: !10486, file: !3, line: 3882, type: !340)
!10492 = !DILocation(line: 3882, column: 20, scope: !10486)
!10493 = !DILocalVariable(name: "excl", arg: 4, scope: !10486, file: !3, line: 3882, type: !304)
!10494 = !DILocation(line: 3882, column: 34, scope: !10486)
!10495 = !DILocalVariable(name: "i", scope: !10486, file: !3, line: 3884, type: !304)
!10496 = !DILocation(line: 3884, column: 6, scope: !10486)
!10497 = !DILocation(line: 3886, column: 9, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10486, file: !3, line: 3886, column: 2)
!10499 = !DILocation(line: 3886, column: 7, scope: !10498)
!10500 = !DILocation(line: 3886, column: 14, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10498, file: !3, line: 3886, column: 2)
!10502 = !DILocation(line: 3886, column: 16, scope: !10501)
!10503 = !DILocation(line: 3886, column: 2, scope: !10498)
!10504 = !DILocation(line: 3887, column: 7, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 3887, column: 7)
!10506 = !DILocation(line: 3887, column: 20, scope: !10505)
!10507 = !DILocation(line: 3887, column: 17, scope: !10505)
!10508 = !DILocation(line: 3887, column: 12, scope: !10505)
!10509 = !DILocation(line: 3887, column: 7, scope: !10501)
!10510 = !DILocation(line: 3888, column: 29, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 3888, column: 8)
!10512 = !DILocation(line: 3888, column: 35, scope: !10511)
!10513 = !DILocation(line: 3888, column: 38, scope: !10511)
!10514 = !DILocation(line: 3888, column: 48, scope: !10511)
!10515 = !DILocation(line: 3888, column: 8, scope: !10511)
!10516 = !DILocation(line: 3888, column: 8, scope: !10505)
!10517 = !DILocation(line: 3889, column: 5, scope: !10511)
!10518 = !DILocation(line: 3888, column: 52, scope: !10511)
!10519 = !DILocation(line: 3887, column: 21, scope: !10505)
!10520 = !DILocation(line: 3886, column: 37, scope: !10501)
!10521 = !DILocation(line: 3886, column: 2, scope: !10501)
!10522 = distinct !{!10522, !10503, !10523}
!10523 = !DILocation(line: 3889, column: 10, scope: !10498)
!10524 = !DILocation(line: 3890, column: 2, scope: !10486)
!10525 = !DILabel(scope: !10486, name: "err_out", file: !3, line: 3892)
!10526 = !DILocation(line: 3892, column: 1, scope: !10486)
!10527 = !DILocation(line: 3893, column: 2, scope: !10486)
!10528 = !DILocation(line: 3893, column: 9, scope: !10486)
!10529 = !DILocation(line: 3893, column: 13, scope: !10486)
!10530 = !DILocation(line: 3894, column: 7, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10486, file: !3, line: 3894, column: 7)
!10532 = !DILocation(line: 3894, column: 20, scope: !10531)
!10533 = !DILocation(line: 3894, column: 17, scope: !10531)
!10534 = !DILocation(line: 3894, column: 12, scope: !10531)
!10535 = !DILocation(line: 3894, column: 7, scope: !10486)
!10536 = !DILocation(line: 3895, column: 23, scope: !10531)
!10537 = !DILocation(line: 3895, column: 29, scope: !10531)
!10538 = !DILocation(line: 3895, column: 4, scope: !10531)
!10539 = distinct !{!10539, !10527, !10540}
!10540 = !DILocation(line: 3895, column: 30, scope: !10486)
!10541 = !DILocation(line: 3897, column: 2, scope: !10486)
!10542 = !DILocation(line: 3898, column: 1, scope: !10486)
!10543 = distinct !DISubprogram(name: "pci_request_selected_regions_exclusive", scope: !3, file: !3, line: 3914, type: !10377, scopeLine: 3916, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10544 = !DILocalVariable(name: "pdev", arg: 1, scope: !10543, file: !3, line: 3914, type: !273)
!10545 = !DILocation(line: 3914, column: 60, scope: !10543)
!10546 = !DILocalVariable(name: "bars", arg: 2, scope: !10543, file: !3, line: 3914, type: !304)
!10547 = !DILocation(line: 3914, column: 70, scope: !10543)
!10548 = !DILocalVariable(name: "res_name", arg: 3, scope: !10543, file: !3, line: 3915, type: !340)
!10549 = !DILocation(line: 3915, column: 21, scope: !10543)
!10550 = !DILocation(line: 3917, column: 40, scope: !10543)
!10551 = !DILocation(line: 3917, column: 46, scope: !10543)
!10552 = !DILocation(line: 3917, column: 52, scope: !10543)
!10553 = !DILocation(line: 3917, column: 9, scope: !10543)
!10554 = !DILocation(line: 3917, column: 2, scope: !10543)
!10555 = distinct !DISubprogram(name: "pci_release_regions", scope: !3, file: !3, line: 3932, type: !3533, scopeLine: 3933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10556 = !DILocalVariable(name: "pdev", arg: 1, scope: !10555, file: !3, line: 3932, type: !273)
!10557 = !DILocation(line: 3932, column: 42, scope: !10555)
!10558 = !DILocation(line: 3934, column: 31, scope: !10555)
!10559 = !DILocation(line: 3934, column: 2, scope: !10555)
!10560 = !DILocation(line: 3935, column: 1, scope: !10555)
!10561 = distinct !DISubprogram(name: "pci_request_regions", scope: !3, file: !3, line: 3951, type: !10562, scopeLine: 3952, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10562 = !DISubroutineType(types: !10563)
!10563 = !{!304, !273, !340}
!10564 = !DILocalVariable(name: "pdev", arg: 1, scope: !10561, file: !3, line: 3951, type: !273)
!10565 = !DILocation(line: 3951, column: 41, scope: !10561)
!10566 = !DILocalVariable(name: "res_name", arg: 2, scope: !10561, file: !3, line: 3951, type: !340)
!10567 = !DILocation(line: 3951, column: 59, scope: !10561)
!10568 = !DILocation(line: 3953, column: 38, scope: !10561)
!10569 = !DILocation(line: 3954, column: 35, scope: !10561)
!10570 = !DILocation(line: 3953, column: 9, scope: !10561)
!10571 = !DILocation(line: 3953, column: 2, scope: !10561)
!10572 = distinct !DISubprogram(name: "pci_request_regions_exclusive", scope: !3, file: !3, line: 3973, type: !10562, scopeLine: 3974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10573 = !DILocalVariable(name: "pdev", arg: 1, scope: !10572, file: !3, line: 3973, type: !273)
!10574 = !DILocation(line: 3973, column: 51, scope: !10572)
!10575 = !DILocalVariable(name: "res_name", arg: 2, scope: !10572, file: !3, line: 3973, type: !340)
!10576 = !DILocation(line: 3973, column: 69, scope: !10572)
!10577 = !DILocation(line: 3975, column: 48, scope: !10572)
!10578 = !DILocation(line: 3976, column: 36, scope: !10572)
!10579 = !DILocation(line: 3975, column: 9, scope: !10572)
!10580 = !DILocation(line: 3975, column: 2, scope: !10572)
!10581 = distinct !DISubprogram(name: "pci_register_io_range", scope: !3, file: !3, line: 3984, type: !10582, scopeLine: 3986, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10582 = !DISubroutineType(types: !10583)
!10583 = !{!304, !3805, !2243, !4160}
!10584 = !DILocalVariable(name: "fwnode", arg: 1, scope: !10581, file: !3, line: 3984, type: !3805)
!10585 = !DILocation(line: 3984, column: 49, scope: !10581)
!10586 = !DILocalVariable(name: "addr", arg: 2, scope: !10581, file: !3, line: 3984, type: !2243)
!10587 = !DILocation(line: 3984, column: 69, scope: !10581)
!10588 = !DILocalVariable(name: "size", arg: 3, scope: !10581, file: !3, line: 3985, type: !4160)
!10589 = !DILocation(line: 3985, column: 20, scope: !10581)
!10590 = !DILocalVariable(name: "ret", scope: !10581, file: !3, line: 3987, type: !304)
!10591 = !DILocation(line: 3987, column: 6, scope: !10581)
!10592 = !DILocation(line: 4008, column: 9, scope: !10581)
!10593 = !DILocation(line: 4008, column: 2, scope: !10581)
!10594 = distinct !DISubprogram(name: "pci_pio_to_address", scope: !3, file: !3, line: 4011, type: !10595, scopeLine: 4012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10595 = !DISubroutineType(types: !10596)
!10596 = !{!2243, !448}
!10597 = !DILocalVariable(name: "pio", arg: 1, scope: !10594, file: !3, line: 4011, type: !448)
!10598 = !DILocation(line: 4011, column: 46, scope: !10594)
!10599 = !DILocalVariable(name: "address", scope: !10594, file: !3, line: 4013, type: !2243)
!10600 = !DILocation(line: 4013, column: 14, scope: !10594)
!10601 = !DILocation(line: 4022, column: 9, scope: !10594)
!10602 = !DILocation(line: 4022, column: 2, scope: !10594)
!10603 = distinct !DISubprogram(name: "pci_address_to_pio", scope: !3, file: !3, line: 4025, type: !10604, scopeLine: 4026, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10604 = !DISubroutineType(types: !10605)
!10605 = !{!448, !2243}
!10606 = !DILocalVariable(name: "address", arg: 1, scope: !10603, file: !3, line: 4025, type: !2243)
!10607 = !DILocation(line: 4025, column: 53, scope: !10603)
!10608 = !DILocation(line: 4030, column: 6, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10603, file: !3, line: 4030, column: 6)
!10610 = !DILocation(line: 4030, column: 14, scope: !10609)
!10611 = !DILocation(line: 4030, column: 6, scope: !10603)
!10612 = !DILocation(line: 4031, column: 3, scope: !10609)
!10613 = !DILocation(line: 4033, column: 25, scope: !10603)
!10614 = !DILocation(line: 4033, column: 2, scope: !10603)
!10615 = !DILocation(line: 4035, column: 1, scope: !10603)
!10616 = !DILocalVariable(name: "res", arg: 1, scope: !4746, file: !3, line: 4047, type: !4749)
!10617 = !DILocation(line: 4047, column: 46, scope: !4746)
!10618 = !DILocalVariable(name: "phys_addr", arg: 2, scope: !4746, file: !3, line: 4047, type: !2243)
!10619 = !DILocation(line: 4047, column: 63, scope: !4746)
!10620 = !DILocalVariable(name: "__ret_warn_once", scope: !10621, file: !3, line: 4065, type: !304)
!10621 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 4065, column: 2)
!10622 = !DILocation(line: 4065, column: 2, scope: !10621)
!10623 = !DILocation(line: 4065, column: 2, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 4065, column: 2)
!10625 = !DILocation(line: 0, scope: !10624)
!10626 = !DILocation(line: 4065, column: 2, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 4065, column: 2)
!10628 = !DILocalVariable(name: "__ret_warn_on", scope: !10629, file: !3, line: 4065, type: !304)
!10629 = distinct !DILexicalBlock(scope: !10627, file: !3, line: 4065, column: 2)
!10630 = !DILocation(line: 4065, column: 2, scope: !10629)
!10631 = !DILocation(line: 4065, column: 2, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10629, file: !3, line: 4065, column: 2)
!10633 = !DILocation(line: 4065, column: 2, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10632, file: !3, line: 4065, column: 2)
!10635 = !DILocation(line: 4065, column: 2, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10634, file: !3, line: 4065, column: 2)
!10637 = !DILocation(line: 4065, column: 2, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10634, file: !3, line: 4065, column: 2)
!10639 = !DILocation(line: 4065, column: 2, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10638, file: !3, line: 4065, column: 2)
!10641 = !DILocation(line: 4065, column: 2, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10638, file: !3, line: 4065, column: 2)
!10643 = !{i32 -2140811981, i32 -2140811952, i32 -2140811906, i32 -2140811848, i32 -2140811794, i32 -2140811740, i32 -2140811685, i32 -2140811654}
!10644 = !DILocation(line: 4065, column: 2, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10638, file: !3, line: 4065, column: 2)
!10646 = !{i32 -2140811243, i32 -2140811236, i32 -2140811184, i32 -2140811153, i32 -2140811123}
!10647 = !DILocation(line: 4065, column: 2, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10638, file: !3, line: 4065, column: 2)
!10649 = !DILocation(line: 4065, column: 2, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10634, file: !3, line: 4065, column: 2)
!10651 = !DILocation(line: 4066, column: 2, scope: !4746)
!10652 = distinct !DISubprogram(name: "pci_unmap_iospace", scope: !3, file: !3, line: 4079, type: !10653, scopeLine: 4080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10653 = !DISubroutineType(types: !10654)
!10654 = !{null, !4166}
!10655 = !DILocalVariable(name: "res", arg: 1, scope: !10652, file: !3, line: 4079, type: !4166)
!10656 = !DILocation(line: 4079, column: 41, scope: !10652)
!10657 = !DILocation(line: 4086, column: 1, scope: !10652)
!10658 = distinct !DISubprogram(name: "devm_pci_remap_iospace", scope: !3, file: !3, line: 4105, type: !10659, scopeLine: 4107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10659 = !DISubroutineType(types: !10660)
!10660 = !{!304, !3584, !4749, !2243}
!10661 = !DILocalVariable(name: "dev", arg: 1, scope: !10658, file: !3, line: 4105, type: !3584)
!10662 = !DILocation(line: 4105, column: 43, scope: !10658)
!10663 = !DILocalVariable(name: "res", arg: 2, scope: !10658, file: !3, line: 4105, type: !4749)
!10664 = !DILocation(line: 4105, column: 71, scope: !10658)
!10665 = !DILocalVariable(name: "phys_addr", arg: 3, scope: !10658, file: !3, line: 4106, type: !2243)
!10666 = !DILocation(line: 4106, column: 19, scope: !10658)
!10667 = !DILocalVariable(name: "ptr", scope: !10658, file: !3, line: 4108, type: !10668)
!10668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4749, size: 64)
!10669 = !DILocation(line: 4108, column: 26, scope: !10658)
!10670 = !DILocalVariable(name: "error", scope: !10658, file: !3, line: 4109, type: !304)
!10671 = !DILocation(line: 4109, column: 6, scope: !10658)
!10672 = !DILocation(line: 4111, column: 8, scope: !10658)
!10673 = !DILocation(line: 4111, column: 6, scope: !10658)
!10674 = !DILocation(line: 4112, column: 7, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10658, file: !3, line: 4112, column: 6)
!10676 = !DILocation(line: 4112, column: 6, scope: !10658)
!10677 = !DILocation(line: 4113, column: 3, scope: !10675)
!10678 = !DILocation(line: 4115, column: 28, scope: !10658)
!10679 = !DILocation(line: 4115, column: 33, scope: !10658)
!10680 = !DILocation(line: 4115, column: 10, scope: !10658)
!10681 = !DILocation(line: 4115, column: 8, scope: !10658)
!10682 = !DILocation(line: 4116, column: 6, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10658, file: !3, line: 4116, column: 6)
!10684 = !DILocation(line: 4116, column: 6, scope: !10658)
!10685 = !DILocation(line: 4117, column: 15, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10683, file: !3, line: 4116, column: 13)
!10687 = !DILocation(line: 4117, column: 3, scope: !10686)
!10688 = !DILocation(line: 4118, column: 2, scope: !10686)
!10689 = !DILocation(line: 4119, column: 10, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10683, file: !3, line: 4118, column: 9)
!10691 = !DILocation(line: 4119, column: 4, scope: !10690)
!10692 = !DILocation(line: 4119, column: 8, scope: !10690)
!10693 = !DILocation(line: 4120, column: 14, scope: !10690)
!10694 = !DILocation(line: 4120, column: 19, scope: !10690)
!10695 = !DILocation(line: 4120, column: 3, scope: !10690)
!10696 = !DILocation(line: 4123, column: 9, scope: !10658)
!10697 = !DILocation(line: 4123, column: 2, scope: !10658)
!10698 = !DILocation(line: 4124, column: 1, scope: !10658)
!10699 = distinct !DISubprogram(name: "devres_alloc", scope: !75, file: !75, line: 178, type: !10700, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10700 = !DISubroutineType(types: !10701)
!10701 = !{!258, !10702, !445, !863}
!10702 = !DIDerivedType(tag: DW_TAG_typedef, name: "dr_release_t", file: !75, line: 165, baseType: !10703)
!10703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10704, size: 64)
!10704 = !DISubroutineType(types: !10705)
!10705 = !{null, !3584, !258}
!10706 = !DILocalVariable(name: "release", arg: 1, scope: !10699, file: !75, line: 178, type: !10702)
!10707 = !DILocation(line: 178, column: 47, scope: !10699)
!10708 = !DILocalVariable(name: "size", arg: 2, scope: !10699, file: !75, line: 178, type: !445)
!10709 = !DILocation(line: 178, column: 63, scope: !10699)
!10710 = !DILocalVariable(name: "gfp", arg: 3, scope: !10699, file: !75, line: 178, type: !863)
!10711 = !DILocation(line: 178, column: 75, scope: !10699)
!10712 = !DILocation(line: 180, column: 27, scope: !10699)
!10713 = !DILocation(line: 180, column: 36, scope: !10699)
!10714 = !DILocation(line: 180, column: 42, scope: !10699)
!10715 = !DILocation(line: 180, column: 9, scope: !10699)
!10716 = !DILocation(line: 180, column: 2, scope: !10699)
!10717 = distinct !DISubprogram(name: "devm_pci_unmap_iospace", scope: !3, file: !3, line: 4089, type: !10704, scopeLine: 4090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10718 = !DILocalVariable(name: "dev", arg: 1, scope: !10717, file: !3, line: 4089, type: !3584)
!10719 = !DILocation(line: 4089, column: 51, scope: !10717)
!10720 = !DILocalVariable(name: "ptr", arg: 2, scope: !10717, file: !3, line: 4089, type: !258)
!10721 = !DILocation(line: 4089, column: 62, scope: !10717)
!10722 = !DILocalVariable(name: "res", scope: !10717, file: !3, line: 4091, type: !10723)
!10723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4166, size: 64)
!10724 = !DILocation(line: 4091, column: 20, scope: !10717)
!10725 = !DILocation(line: 4091, column: 26, scope: !10717)
!10726 = !DILocation(line: 4093, column: 21, scope: !10717)
!10727 = !DILocation(line: 4093, column: 20, scope: !10717)
!10728 = !DILocation(line: 4093, column: 2, scope: !10717)
!10729 = !DILocation(line: 4094, column: 1, scope: !10717)
!10730 = distinct !DISubprogram(name: "devm_pci_remap_cfgspace", scope: !3, file: !3, line: 4136, type: !10731, scopeLine: 4139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10731 = !DISubroutineType(types: !10732)
!10732 = !{!258, !3584, !4160, !4160}
!10733 = !DILocalVariable(name: "dev", arg: 1, scope: !10730, file: !3, line: 4136, type: !3584)
!10734 = !DILocation(line: 4136, column: 54, scope: !10730)
!10735 = !DILocalVariable(name: "offset", arg: 2, scope: !10730, file: !3, line: 4137, type: !4160)
!10736 = !DILocation(line: 4137, column: 27, scope: !10730)
!10737 = !DILocalVariable(name: "size", arg: 3, scope: !10730, file: !3, line: 4138, type: !4160)
!10738 = !DILocation(line: 4138, column: 27, scope: !10730)
!10739 = !DILocalVariable(name: "ptr", scope: !10730, file: !3, line: 4140, type: !941)
!10740 = !DILocation(line: 4140, column: 17, scope: !10730)
!10741 = !DILocalVariable(name: "addr", scope: !10730, file: !3, line: 4140, type: !258)
!10742 = !DILocation(line: 4140, column: 23, scope: !10730)
!10743 = !DILocation(line: 4142, column: 8, scope: !10730)
!10744 = !DILocation(line: 4142, column: 6, scope: !10730)
!10745 = !DILocation(line: 4143, column: 7, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10730, file: !3, line: 4143, column: 6)
!10747 = !DILocation(line: 4143, column: 6, scope: !10730)
!10748 = !DILocation(line: 4144, column: 3, scope: !10746)
!10749 = !DILocation(line: 4146, column: 28, scope: !10730)
!10750 = !DILocation(line: 4146, column: 36, scope: !10730)
!10751 = !DILocation(line: 4146, column: 9, scope: !10730)
!10752 = !DILocation(line: 4146, column: 7, scope: !10730)
!10753 = !DILocation(line: 4147, column: 6, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10730, file: !3, line: 4147, column: 6)
!10755 = !DILocation(line: 4147, column: 6, scope: !10730)
!10756 = !DILocation(line: 4148, column: 10, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10754, file: !3, line: 4147, column: 12)
!10758 = !DILocation(line: 4148, column: 4, scope: !10757)
!10759 = !DILocation(line: 4148, column: 8, scope: !10757)
!10760 = !DILocation(line: 4149, column: 14, scope: !10757)
!10761 = !DILocation(line: 4149, column: 19, scope: !10757)
!10762 = !DILocation(line: 4149, column: 3, scope: !10757)
!10763 = !DILocation(line: 4150, column: 2, scope: !10757)
!10764 = !DILocation(line: 4151, column: 15, scope: !10754)
!10765 = !DILocation(line: 4151, column: 3, scope: !10754)
!10766 = !DILocation(line: 4153, column: 9, scope: !10730)
!10767 = !DILocation(line: 4153, column: 2, scope: !10730)
!10768 = !DILocation(line: 4154, column: 1, scope: !10730)
!10769 = distinct !DISubprogram(name: "pci_remap_cfgspace", scope: !10770, file: !10770, line: 93, type: !10771, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10770 = !DIFile(filename: "./include/linux/io.h", directory: "/home/lizy2001/genbc/linux")
!10771 = !DISubroutineType(types: !10772)
!10772 = !{!258, !2243, !445}
!10773 = !DILocalVariable(name: "offset", arg: 1, scope: !10769, file: !10770, line: 93, type: !2243)
!10774 = !DILocation(line: 93, column: 60, scope: !10769)
!10775 = !DILocalVariable(name: "size", arg: 2, scope: !10769, file: !10770, line: 94, type: !445)
!10776 = !DILocation(line: 94, column: 20, scope: !10769)
!10777 = !DILocation(line: 96, column: 17, scope: !10769)
!10778 = !DILocation(line: 96, column: 25, scope: !10769)
!10779 = !DILocation(line: 96, column: 9, scope: !10769)
!10780 = !DILocation(line: 96, column: 2, scope: !10769)
!10781 = distinct !DISubprogram(name: "devm_pci_remap_cfg_resource", scope: !3, file: !3, line: 4176, type: !10782, scopeLine: 4178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10782 = !DISubroutineType(types: !10783)
!10783 = !{!258, !3584, !4166}
!10784 = !DILocalVariable(name: "dev", arg: 1, scope: !10781, file: !3, line: 4176, type: !3584)
!10785 = !DILocation(line: 4176, column: 58, scope: !10781)
!10786 = !DILocalVariable(name: "res", arg: 2, scope: !10781, file: !3, line: 4177, type: !4166)
!10787 = !DILocation(line: 4177, column: 25, scope: !10781)
!10788 = !DILocalVariable(name: "size", scope: !10781, file: !3, line: 4179, type: !4160)
!10789 = !DILocation(line: 4179, column: 18, scope: !10781)
!10790 = !DILocalVariable(name: "name", scope: !10781, file: !3, line: 4180, type: !340)
!10791 = !DILocation(line: 4180, column: 14, scope: !10781)
!10792 = !DILocalVariable(name: "dest_ptr", scope: !10781, file: !3, line: 4181, type: !258)
!10793 = !DILocation(line: 4181, column: 16, scope: !10781)
!10794 = !DILocation(line: 4183, column: 2, scope: !10781)
!10795 = !DILocation(line: 4183, column: 2, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10797, file: !3, line: 4183, column: 2)
!10797 = distinct !DILexicalBlock(scope: !10781, file: !3, line: 4183, column: 2)
!10798 = !DILocation(line: 4183, column: 2, scope: !10797)
!10799 = !DILocation(line: 4183, column: 2, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10796, file: !3, line: 4183, column: 2)
!10801 = !DILocation(line: 4183, column: 2, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 4183, column: 2)
!10803 = !DILocation(line: 4183, column: 2, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 4183, column: 2)
!10805 = !{i32 -2140809923, i32 -2140809894, i32 -2140809848, i32 -2140809790, i32 -2140809736, i32 -2140809682, i32 -2140809627, i32 -2140809596}
!10806 = !DILocation(line: 4183, column: 2, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 4183, column: 2)
!10808 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 4183, column: 2)
!10809 = !{i32 -2140809155, i32 -2140809148, i32 -2140809094, i32 -2140809063, i32 -2140809033}
!10810 = !DILocation(line: 4183, column: 2, scope: !10808)
!10811 = !DILocation(line: 4185, column: 7, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10781, file: !3, line: 4185, column: 6)
!10813 = !DILocation(line: 4185, column: 11, scope: !10812)
!10814 = !DILocation(line: 4185, column: 28, scope: !10812)
!10815 = !DILocation(line: 4185, column: 14, scope: !10812)
!10816 = !DILocation(line: 4185, column: 33, scope: !10812)
!10817 = !DILocation(line: 4185, column: 6, scope: !10781)
!10818 = !DILocation(line: 4186, column: 3, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 4185, column: 52)
!10820 = !DILocation(line: 4187, column: 10, scope: !10819)
!10821 = !DILocation(line: 4187, column: 3, scope: !10819)
!10822 = !DILocation(line: 4190, column: 23, scope: !10781)
!10823 = !DILocation(line: 4190, column: 9, scope: !10781)
!10824 = !DILocation(line: 4190, column: 7, scope: !10781)
!10825 = !DILocation(line: 4191, column: 9, scope: !10781)
!10826 = !DILocation(line: 4191, column: 14, scope: !10781)
!10827 = !DILocation(line: 4191, column: 31, scope: !10781)
!10828 = !DILocation(line: 4191, column: 22, scope: !10781)
!10829 = !DILocation(line: 4191, column: 7, scope: !10781)
!10830 = !DILocation(line: 4193, column: 7, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10781, file: !3, line: 4193, column: 6)
!10832 = !DILocation(line: 4193, column: 6, scope: !10781)
!10833 = !DILocation(line: 4194, column: 3, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10831, file: !3, line: 4193, column: 61)
!10835 = !DILocation(line: 4195, column: 10, scope: !10834)
!10836 = !DILocation(line: 4195, column: 3, scope: !10834)
!10837 = !DILocation(line: 4198, column: 37, scope: !10781)
!10838 = !DILocation(line: 4198, column: 42, scope: !10781)
!10839 = !DILocation(line: 4198, column: 47, scope: !10781)
!10840 = !DILocation(line: 4198, column: 54, scope: !10781)
!10841 = !DILocation(line: 4198, column: 13, scope: !10781)
!10842 = !DILocation(line: 4198, column: 11, scope: !10781)
!10843 = !DILocation(line: 4199, column: 7, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10781, file: !3, line: 4199, column: 6)
!10845 = !DILocation(line: 4199, column: 6, scope: !10781)
!10846 = !DILocation(line: 4200, column: 3, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 4199, column: 17)
!10848 = !DILocation(line: 4201, column: 3, scope: !10847)
!10849 = !DILocation(line: 4202, column: 14, scope: !10847)
!10850 = !DILocation(line: 4202, column: 12, scope: !10847)
!10851 = !DILocation(line: 4203, column: 2, scope: !10847)
!10852 = !DILocation(line: 4205, column: 9, scope: !10781)
!10853 = !DILocation(line: 4205, column: 2, scope: !10781)
!10854 = !DILocation(line: 4206, column: 1, scope: !10781)
!10855 = distinct !DISubprogram(name: "resource_type", scope: !4157, file: !4157, line: 214, type: !10856, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10856 = !DISubroutineType(types: !10857)
!10857 = !{!448, !4749}
!10858 = !DILocalVariable(name: "res", arg: 1, scope: !10855, file: !4157, line: 214, type: !4749)
!10859 = !DILocation(line: 214, column: 66, scope: !10855)
!10860 = !DILocation(line: 216, column: 9, scope: !10855)
!10861 = !DILocation(line: 216, column: 14, scope: !10855)
!10862 = !DILocation(line: 216, column: 20, scope: !10855)
!10863 = !DILocation(line: 216, column: 2, scope: !10855)
!10864 = distinct !DISubprogram(name: "ERR_PTR", scope: !10865, file: !10865, line: 24, type: !10866, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10865 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!10866 = !DISubroutineType(types: !10867)
!10867 = !{!258, !212}
!10868 = !DILocalVariable(name: "error", arg: 1, scope: !10864, file: !10865, line: 24, type: !212)
!10869 = !DILocation(line: 24, column: 48, scope: !10864)
!10870 = !DILocation(line: 26, column: 18, scope: !10864)
!10871 = !DILocation(line: 26, column: 9, scope: !10864)
!10872 = !DILocation(line: 26, column: 2, scope: !10864)
!10873 = distinct !DISubprogram(name: "pcibios_setup", scope: !3, file: !3, line: 4233, type: !10874, scopeLine: 4234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10874 = !DISubroutineType(types: !10875)
!10875 = !{!399, !399}
!10876 = !DILocalVariable(name: "str", arg: 1, scope: !10873, file: !3, line: 4233, type: !399)
!10877 = !DILocation(line: 4233, column: 42, scope: !10873)
!10878 = !DILocation(line: 4235, column: 9, scope: !10873)
!10879 = !DILocation(line: 4235, column: 2, scope: !10873)
!10880 = distinct !DISubprogram(name: "pcibios_set_master", scope: !3, file: !3, line: 4246, type: !3533, scopeLine: 4247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10881 = !DILocalVariable(name: "dev", arg: 1, scope: !10880, file: !3, line: 4246, type: !273)
!10882 = !DILocation(line: 4246, column: 48, scope: !10880)
!10883 = !DILocalVariable(name: "lat", scope: !10880, file: !3, line: 4248, type: !310)
!10884 = !DILocation(line: 4248, column: 5, scope: !10880)
!10885 = !DILocation(line: 4251, column: 18, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 4251, column: 6)
!10887 = !DILocation(line: 4251, column: 6, scope: !10886)
!10888 = !DILocation(line: 4251, column: 6, scope: !10880)
!10889 = !DILocation(line: 4252, column: 3, scope: !10886)
!10890 = !DILocation(line: 4254, column: 23, scope: !10880)
!10891 = !DILocation(line: 4254, column: 2, scope: !10880)
!10892 = !DILocation(line: 4255, column: 6, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 4255, column: 6)
!10894 = !DILocation(line: 4255, column: 10, scope: !10893)
!10895 = !DILocation(line: 4255, column: 6, scope: !10880)
!10896 = !DILocation(line: 4256, column: 16, scope: !10893)
!10897 = !DILocation(line: 4256, column: 13, scope: !10893)
!10898 = !DILocation(line: 4256, column: 9, scope: !10893)
!10899 = !DILocation(line: 4256, column: 44, scope: !10893)
!10900 = !DILocation(line: 4256, column: 7, scope: !10893)
!10901 = !DILocation(line: 4256, column: 3, scope: !10893)
!10902 = !DILocation(line: 4257, column: 11, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10893, file: !3, line: 4257, column: 11)
!10904 = !DILocation(line: 4257, column: 17, scope: !10903)
!10905 = !DILocation(line: 4257, column: 15, scope: !10903)
!10906 = !DILocation(line: 4257, column: 11, scope: !10893)
!10907 = !DILocation(line: 4258, column: 9, scope: !10903)
!10908 = !DILocation(line: 4258, column: 7, scope: !10903)
!10909 = !DILocation(line: 4258, column: 3, scope: !10903)
!10910 = !DILocation(line: 4260, column: 3, scope: !10903)
!10911 = !DILocation(line: 4262, column: 24, scope: !10880)
!10912 = !DILocation(line: 4262, column: 48, scope: !10880)
!10913 = !DILocation(line: 4262, column: 2, scope: !10880)
!10914 = !DILocation(line: 4263, column: 1, scope: !10880)
!10915 = distinct !DISubprogram(name: "pci_set_master", scope: !3, file: !3, line: 4272, type: !3533, scopeLine: 4273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10916 = !DILocalVariable(name: "dev", arg: 1, scope: !10915, file: !3, line: 4272, type: !273)
!10917 = !DILocation(line: 4272, column: 37, scope: !10915)
!10918 = !DILocation(line: 4274, column: 19, scope: !10915)
!10919 = !DILocation(line: 4274, column: 2, scope: !10915)
!10920 = !DILocation(line: 4275, column: 21, scope: !10915)
!10921 = !DILocation(line: 4275, column: 2, scope: !10915)
!10922 = !DILocation(line: 4276, column: 1, scope: !10915)
!10923 = distinct !DISubprogram(name: "__pci_set_master", scope: !3, file: !3, line: 4209, type: !7985, scopeLine: 4210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10924 = !DILocalVariable(name: "dev", arg: 1, scope: !10923, file: !3, line: 4209, type: !273)
!10925 = !DILocation(line: 4209, column: 46, scope: !10923)
!10926 = !DILocalVariable(name: "enable", arg: 2, scope: !10923, file: !3, line: 4209, type: !609)
!10927 = !DILocation(line: 4209, column: 56, scope: !10923)
!10928 = !DILocalVariable(name: "old_cmd", scope: !10923, file: !3, line: 4211, type: !979)
!10929 = !DILocation(line: 4211, column: 6, scope: !10923)
!10930 = !DILocalVariable(name: "cmd", scope: !10923, file: !3, line: 4211, type: !979)
!10931 = !DILocation(line: 4211, column: 15, scope: !10923)
!10932 = !DILocation(line: 4213, column: 23, scope: !10923)
!10933 = !DILocation(line: 4213, column: 2, scope: !10923)
!10934 = !DILocation(line: 4214, column: 6, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 4214, column: 6)
!10936 = !DILocation(line: 4214, column: 6, scope: !10923)
!10937 = !DILocation(line: 4215, column: 9, scope: !10935)
!10938 = !DILocation(line: 4215, column: 17, scope: !10935)
!10939 = !DILocation(line: 4215, column: 7, scope: !10935)
!10940 = !DILocation(line: 4215, column: 3, scope: !10935)
!10941 = !DILocation(line: 4217, column: 9, scope: !10935)
!10942 = !DILocation(line: 4217, column: 17, scope: !10935)
!10943 = !DILocation(line: 4217, column: 7, scope: !10935)
!10944 = !DILocation(line: 4218, column: 6, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 4218, column: 6)
!10946 = !DILocation(line: 4218, column: 13, scope: !10945)
!10947 = !DILocation(line: 4218, column: 10, scope: !10945)
!10948 = !DILocation(line: 4218, column: 6, scope: !10923)
!10949 = !DILocation(line: 4221, column: 25, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10945, file: !3, line: 4218, column: 22)
!10951 = !DILocation(line: 4221, column: 43, scope: !10950)
!10952 = !DILocation(line: 4221, column: 3, scope: !10950)
!10953 = !DILocation(line: 4222, column: 2, scope: !10950)
!10954 = !DILocation(line: 4223, column: 22, scope: !10923)
!10955 = !DILocation(line: 4223, column: 2, scope: !10923)
!10956 = !DILocation(line: 4223, column: 7, scope: !10923)
!10957 = !DILocation(line: 4223, column: 20, scope: !10923)
!10958 = !DILocation(line: 4224, column: 1, scope: !10923)
!10959 = distinct !DISubprogram(name: "pci_clear_master", scope: !3, file: !3, line: 4283, type: !3533, scopeLine: 4284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10960 = !DILocalVariable(name: "dev", arg: 1, scope: !10959, file: !3, line: 4283, type: !273)
!10961 = !DILocation(line: 4283, column: 39, scope: !10959)
!10962 = !DILocation(line: 4285, column: 19, scope: !10959)
!10963 = !DILocation(line: 4285, column: 2, scope: !10959)
!10964 = !DILocation(line: 4286, column: 1, scope: !10959)
!10965 = distinct !DISubprogram(name: "pci_set_cacheline_size", scope: !3, file: !3, line: 4299, type: !3545, scopeLine: 4300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10966 = !DILocalVariable(name: "dev", arg: 1, scope: !10965, file: !3, line: 4299, type: !273)
!10967 = !DILocation(line: 4299, column: 44, scope: !10965)
!10968 = !DILocalVariable(name: "cacheline_size", scope: !10965, file: !3, line: 4301, type: !310)
!10969 = !DILocation(line: 4301, column: 5, scope: !10965)
!10970 = !DILocation(line: 4303, column: 7, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 4303, column: 6)
!10972 = !DILocation(line: 4303, column: 6, scope: !10965)
!10973 = !DILocation(line: 4304, column: 3, scope: !10971)
!10974 = !DILocation(line: 4308, column: 23, scope: !10965)
!10975 = !DILocation(line: 4308, column: 2, scope: !10965)
!10976 = !DILocation(line: 4309, column: 6, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 4309, column: 6)
!10978 = !DILocation(line: 4309, column: 24, scope: !10977)
!10979 = !DILocation(line: 4309, column: 21, scope: !10977)
!10980 = !DILocation(line: 4309, column: 44, scope: !10977)
!10981 = !DILocation(line: 4310, column: 7, scope: !10977)
!10982 = !DILocation(line: 4310, column: 24, scope: !10977)
!10983 = !DILocation(line: 4310, column: 22, scope: !10977)
!10984 = !DILocation(line: 4310, column: 45, scope: !10977)
!10985 = !DILocation(line: 4309, column: 6, scope: !10965)
!10986 = !DILocation(line: 4311, column: 3, scope: !10977)
!10987 = !DILocation(line: 4314, column: 24, scope: !10965)
!10988 = !DILocation(line: 4314, column: 50, scope: !10965)
!10989 = !DILocation(line: 4314, column: 2, scope: !10965)
!10990 = !DILocation(line: 4316, column: 23, scope: !10965)
!10991 = !DILocation(line: 4316, column: 2, scope: !10965)
!10992 = !DILocation(line: 4317, column: 6, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 4317, column: 6)
!10994 = !DILocation(line: 4317, column: 24, scope: !10993)
!10995 = !DILocation(line: 4317, column: 21, scope: !10993)
!10996 = !DILocation(line: 4317, column: 6, scope: !10965)
!10997 = !DILocation(line: 4318, column: 3, scope: !10993)
!10998 = !DILocation(line: 4320, column: 2, scope: !10965)
!10999 = !DILocation(line: 4323, column: 2, scope: !10965)
!11000 = !DILocation(line: 4324, column: 1, scope: !10965)
!11001 = distinct !DISubprogram(name: "pci_set_mwi", scope: !3, file: !3, line: 4335, type: !3545, scopeLine: 4336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11002 = !DILocalVariable(name: "dev", arg: 1, scope: !11001, file: !3, line: 4335, type: !273)
!11003 = !DILocation(line: 4335, column: 33, scope: !11001)
!11004 = !DILocalVariable(name: "rc", scope: !11001, file: !3, line: 4340, type: !304)
!11005 = !DILocation(line: 4340, column: 6, scope: !11001)
!11006 = !DILocalVariable(name: "cmd", scope: !11001, file: !3, line: 4341, type: !979)
!11007 = !DILocation(line: 4341, column: 6, scope: !11001)
!11008 = !DILocation(line: 4343, column: 30, scope: !11001)
!11009 = !DILocation(line: 4343, column: 7, scope: !11001)
!11010 = !DILocation(line: 4343, column: 5, scope: !11001)
!11011 = !DILocation(line: 4344, column: 6, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 4344, column: 6)
!11013 = !DILocation(line: 4344, column: 6, scope: !11001)
!11014 = !DILocation(line: 4345, column: 10, scope: !11012)
!11015 = !DILocation(line: 4345, column: 3, scope: !11012)
!11016 = !DILocation(line: 4347, column: 23, scope: !11001)
!11017 = !DILocation(line: 4347, column: 2, scope: !11001)
!11018 = !DILocation(line: 4348, column: 8, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 4348, column: 6)
!11020 = !DILocation(line: 4348, column: 12, scope: !11019)
!11021 = !DILocation(line: 4348, column: 6, scope: !11001)
!11022 = !DILocation(line: 4350, column: 7, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 4348, column: 39)
!11024 = !DILocation(line: 4351, column: 25, scope: !11023)
!11025 = !DILocation(line: 4351, column: 43, scope: !11023)
!11026 = !DILocation(line: 4351, column: 3, scope: !11023)
!11027 = !DILocation(line: 4352, column: 2, scope: !11023)
!11028 = !DILocation(line: 4353, column: 2, scope: !11001)
!11029 = !DILocation(line: 4355, column: 1, scope: !11001)
!11030 = distinct !DISubprogram(name: "pcim_set_mwi", scope: !3, file: !3, line: 4366, type: !3545, scopeLine: 4367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11031 = !DILocalVariable(name: "dev", arg: 1, scope: !11030, file: !3, line: 4366, type: !273)
!11032 = !DILocation(line: 4366, column: 34, scope: !11030)
!11033 = !DILocalVariable(name: "dr", scope: !11030, file: !3, line: 4368, type: !7519)
!11034 = !DILocation(line: 4368, column: 21, scope: !11030)
!11035 = !DILocation(line: 4370, column: 19, scope: !11030)
!11036 = !DILocation(line: 4370, column: 7, scope: !11030)
!11037 = !DILocation(line: 4370, column: 5, scope: !11030)
!11038 = !DILocation(line: 4371, column: 7, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11030, file: !3, line: 4371, column: 6)
!11040 = !DILocation(line: 4371, column: 6, scope: !11030)
!11041 = !DILocation(line: 4372, column: 3, scope: !11039)
!11042 = !DILocation(line: 4374, column: 2, scope: !11030)
!11043 = !DILocation(line: 4374, column: 6, scope: !11030)
!11044 = !DILocation(line: 4374, column: 10, scope: !11030)
!11045 = !DILocation(line: 4375, column: 21, scope: !11030)
!11046 = !DILocation(line: 4375, column: 9, scope: !11030)
!11047 = !DILocation(line: 4375, column: 2, scope: !11030)
!11048 = !DILocation(line: 4376, column: 1, scope: !11030)
!11049 = distinct !DISubprogram(name: "pci_try_set_mwi", scope: !3, file: !3, line: 4388, type: !3545, scopeLine: 4389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11050 = !DILocalVariable(name: "dev", arg: 1, scope: !11049, file: !3, line: 4388, type: !273)
!11051 = !DILocation(line: 4388, column: 37, scope: !11049)
!11052 = !DILocation(line: 4393, column: 21, scope: !11049)
!11053 = !DILocation(line: 4393, column: 9, scope: !11049)
!11054 = !DILocation(line: 4393, column: 2, scope: !11049)
!11055 = distinct !DISubprogram(name: "pci_clear_mwi", scope: !3, file: !3, line: 4404, type: !3533, scopeLine: 4405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11056 = !DILocalVariable(name: "dev", arg: 1, scope: !11055, file: !3, line: 4404, type: !273)
!11057 = !DILocation(line: 4404, column: 36, scope: !11055)
!11058 = !DILocalVariable(name: "cmd", scope: !11055, file: !3, line: 4407, type: !979)
!11059 = !DILocation(line: 4407, column: 6, scope: !11055)
!11060 = !DILocation(line: 4409, column: 23, scope: !11055)
!11061 = !DILocation(line: 4409, column: 2, scope: !11055)
!11062 = !DILocation(line: 4410, column: 6, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 4410, column: 6)
!11064 = !DILocation(line: 4410, column: 10, scope: !11063)
!11065 = !DILocation(line: 4410, column: 6, scope: !11055)
!11066 = !DILocation(line: 4411, column: 7, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11063, file: !3, line: 4410, column: 36)
!11068 = !DILocation(line: 4412, column: 25, scope: !11067)
!11069 = !DILocation(line: 4412, column: 43, scope: !11067)
!11070 = !DILocation(line: 4412, column: 3, scope: !11067)
!11071 = !DILocation(line: 4413, column: 2, scope: !11067)
!11072 = !DILocation(line: 4415, column: 1, scope: !11055)
!11073 = distinct !DISubprogram(name: "pci_intx", scope: !3, file: !3, line: 4425, type: !10340, scopeLine: 4426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11074 = !DILocalVariable(name: "pdev", arg: 1, scope: !11073, file: !3, line: 4425, type: !273)
!11075 = !DILocation(line: 4425, column: 31, scope: !11073)
!11076 = !DILocalVariable(name: "enable", arg: 2, scope: !11073, file: !3, line: 4425, type: !304)
!11077 = !DILocation(line: 4425, column: 41, scope: !11073)
!11078 = !DILocalVariable(name: "pci_command", scope: !11073, file: !3, line: 4427, type: !979)
!11079 = !DILocation(line: 4427, column: 6, scope: !11073)
!11080 = !DILocalVariable(name: "new", scope: !11073, file: !3, line: 4427, type: !979)
!11081 = !DILocation(line: 4427, column: 19, scope: !11073)
!11082 = !DILocation(line: 4429, column: 23, scope: !11073)
!11083 = !DILocation(line: 4429, column: 2, scope: !11073)
!11084 = !DILocation(line: 4431, column: 6, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 4431, column: 6)
!11086 = !DILocation(line: 4431, column: 6, scope: !11073)
!11087 = !DILocation(line: 4432, column: 9, scope: !11085)
!11088 = !DILocation(line: 4432, column: 21, scope: !11085)
!11089 = !DILocation(line: 4432, column: 7, scope: !11085)
!11090 = !DILocation(line: 4432, column: 3, scope: !11085)
!11091 = !DILocation(line: 4434, column: 9, scope: !11085)
!11092 = !DILocation(line: 4434, column: 21, scope: !11085)
!11093 = !DILocation(line: 4434, column: 7, scope: !11085)
!11094 = !DILocation(line: 4436, column: 6, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 4436, column: 6)
!11096 = !DILocation(line: 4436, column: 13, scope: !11095)
!11097 = !DILocation(line: 4436, column: 10, scope: !11095)
!11098 = !DILocation(line: 4436, column: 6, scope: !11073)
!11099 = !DILocalVariable(name: "dr", scope: !11100, file: !3, line: 4437, type: !7519)
!11100 = distinct !DILexicalBlock(scope: !11095, file: !3, line: 4436, column: 26)
!11101 = !DILocation(line: 4437, column: 22, scope: !11100)
!11102 = !DILocation(line: 4439, column: 25, scope: !11100)
!11103 = !DILocation(line: 4439, column: 44, scope: !11100)
!11104 = !DILocation(line: 4439, column: 3, scope: !11100)
!11105 = !DILocation(line: 4441, column: 20, scope: !11100)
!11106 = !DILocation(line: 4441, column: 8, scope: !11100)
!11107 = !DILocation(line: 4441, column: 6, scope: !11100)
!11108 = !DILocation(line: 4442, column: 7, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11100, file: !3, line: 4442, column: 7)
!11110 = !DILocation(line: 4442, column: 10, scope: !11109)
!11111 = !DILocation(line: 4442, column: 14, scope: !11109)
!11112 = !DILocation(line: 4442, column: 18, scope: !11109)
!11113 = !DILocation(line: 4442, column: 7, scope: !11100)
!11114 = !DILocation(line: 4443, column: 4, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11109, file: !3, line: 4442, column: 32)
!11116 = !DILocation(line: 4443, column: 8, scope: !11115)
!11117 = !DILocation(line: 4443, column: 21, scope: !11115)
!11118 = !DILocation(line: 4444, column: 21, scope: !11115)
!11119 = !DILocation(line: 4444, column: 20, scope: !11115)
!11120 = !DILocation(line: 4444, column: 4, scope: !11115)
!11121 = !DILocation(line: 4444, column: 8, scope: !11115)
!11122 = !DILocation(line: 4444, column: 18, scope: !11115)
!11123 = !DILocation(line: 4445, column: 3, scope: !11115)
!11124 = !DILocation(line: 4446, column: 2, scope: !11100)
!11125 = !DILocation(line: 4447, column: 1, scope: !11073)
!11126 = distinct !DISubprogram(name: "pci_check_and_mask_intx", scope: !3, file: !3, line: 4502, type: !4785, scopeLine: 4503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11127 = !DILocalVariable(name: "dev", arg: 1, scope: !11126, file: !3, line: 4502, type: !273)
!11128 = !DILocation(line: 4502, column: 46, scope: !11126)
!11129 = !DILocation(line: 4504, column: 37, scope: !11126)
!11130 = !DILocation(line: 4504, column: 9, scope: !11126)
!11131 = !DILocation(line: 4504, column: 2, scope: !11126)
!11132 = distinct !DISubprogram(name: "pci_check_and_set_intx_mask", scope: !3, file: !3, line: 4450, type: !11133, scopeLine: 4451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11133 = !DISubroutineType(types: !11134)
!11134 = !{!609, !273, !609}
!11135 = !DILocalVariable(name: "dev", arg: 1, scope: !11132, file: !3, line: 4450, type: !273)
!11136 = !DILocation(line: 4450, column: 57, scope: !11132)
!11137 = !DILocalVariable(name: "mask", arg: 2, scope: !11132, file: !3, line: 4450, type: !609)
!11138 = !DILocation(line: 4450, column: 67, scope: !11132)
!11139 = !DILocalVariable(name: "bus", scope: !11132, file: !3, line: 4452, type: !259)
!11140 = !DILocation(line: 4452, column: 18, scope: !11132)
!11141 = !DILocation(line: 4452, column: 24, scope: !11132)
!11142 = !DILocation(line: 4452, column: 29, scope: !11132)
!11143 = !DILocalVariable(name: "mask_updated", scope: !11132, file: !3, line: 4453, type: !609)
!11144 = !DILocation(line: 4453, column: 7, scope: !11132)
!11145 = !DILocalVariable(name: "cmd_status_dword", scope: !11132, file: !3, line: 4454, type: !319)
!11146 = !DILocation(line: 4454, column: 6, scope: !11132)
!11147 = !DILocalVariable(name: "origcmd", scope: !11132, file: !3, line: 4455, type: !979)
!11148 = !DILocation(line: 4455, column: 6, scope: !11132)
!11149 = !DILocalVariable(name: "newcmd", scope: !11132, file: !3, line: 4455, type: !979)
!11150 = !DILocation(line: 4455, column: 15, scope: !11132)
!11151 = !DILocalVariable(name: "flags", scope: !11132, file: !3, line: 4456, type: !448)
!11152 = !DILocation(line: 4456, column: 16, scope: !11132)
!11153 = !DILocalVariable(name: "irq_pending", scope: !11132, file: !3, line: 4457, type: !609)
!11154 = !DILocation(line: 4457, column: 7, scope: !11132)
!11155 = !DILocation(line: 4463, column: 2, scope: !11132)
!11156 = !DILocation(line: 4463, column: 2, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 4463, column: 2)
!11158 = !DILocation(line: 4464, column: 2, scope: !11132)
!11159 = !DILocation(line: 4464, column: 2, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 4464, column: 2)
!11161 = !DILocation(line: 4466, column: 2, scope: !11132)
!11162 = !DILocalVariable(name: "__dummy", scope: !11163, file: !3, line: 4466, type: !448)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 4466, column: 2)
!11164 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 4466, column: 2)
!11165 = !DILocation(line: 4466, column: 2, scope: !11163)
!11166 = !DILocalVariable(name: "__dummy2", scope: !11163, file: !3, line: 4466, type: !448)
!11167 = !DILocation(line: 4466, column: 2, scope: !11164)
!11168 = !DILocation(line: 4466, column: 2, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 4466, column: 2)
!11170 = !DILocation(line: 4466, column: 2, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11169, file: !3, line: 4466, column: 2)
!11172 = !DILocalVariable(name: "__dummy", scope: !11173, file: !3, line: 4466, type: !448)
!11173 = distinct !DILexicalBlock(scope: !11174, file: !3, line: 4466, column: 2)
!11174 = distinct !DILexicalBlock(scope: !11171, file: !3, line: 4466, column: 2)
!11175 = !DILocation(line: 4466, column: 2, scope: !11173)
!11176 = !DILocalVariable(name: "__dummy2", scope: !11173, file: !3, line: 4466, type: !448)
!11177 = !DILocation(line: 4466, column: 2, scope: !11174)
!11178 = !DILocation(line: 4466, column: 2, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11169, file: !3, line: 4466, column: 2)
!11180 = !{i32 -2140804627}
!11181 = !DILocation(line: 4466, column: 2, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11179, file: !3, line: 4466, column: 2)
!11183 = !DILocation(line: 4468, column: 2, scope: !11132)
!11184 = !DILocation(line: 4468, column: 7, scope: !11132)
!11185 = !DILocation(line: 4468, column: 12, scope: !11132)
!11186 = !DILocation(line: 4468, column: 17, scope: !11132)
!11187 = !DILocation(line: 4468, column: 22, scope: !11132)
!11188 = !DILocation(line: 4468, column: 27, scope: !11132)
!11189 = !DILocation(line: 4470, column: 17, scope: !11132)
!11190 = !DILocation(line: 4470, column: 34, scope: !11132)
!11191 = !DILocation(line: 4470, column: 41, scope: !11132)
!11192 = !DILocation(line: 4470, column: 16, scope: !11132)
!11193 = !DILocation(line: 4470, column: 14, scope: !11132)
!11194 = !DILocation(line: 4477, column: 6, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 4477, column: 6)
!11196 = !DILocation(line: 4477, column: 14, scope: !11195)
!11197 = !DILocation(line: 4477, column: 11, scope: !11195)
!11198 = !DILocation(line: 4477, column: 6, scope: !11132)
!11199 = !DILocation(line: 4478, column: 16, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 4477, column: 27)
!11201 = !DILocation(line: 4479, column: 3, scope: !11200)
!11202 = !DILocation(line: 4482, column: 12, scope: !11132)
!11203 = !DILocation(line: 4482, column: 10, scope: !11132)
!11204 = !DILocation(line: 4483, column: 11, scope: !11132)
!11205 = !DILocation(line: 4483, column: 19, scope: !11132)
!11206 = !DILocation(line: 4483, column: 9, scope: !11132)
!11207 = !DILocation(line: 4484, column: 6, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 4484, column: 6)
!11209 = !DILocation(line: 4484, column: 6, scope: !11132)
!11210 = !DILocation(line: 4485, column: 10, scope: !11208)
!11211 = !DILocation(line: 4485, column: 3, scope: !11208)
!11212 = !DILocation(line: 4486, column: 6, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 4486, column: 6)
!11214 = !DILocation(line: 4486, column: 16, scope: !11213)
!11215 = !DILocation(line: 4486, column: 13, scope: !11213)
!11216 = !DILocation(line: 4486, column: 6, scope: !11132)
!11217 = !DILocation(line: 4487, column: 3, scope: !11213)
!11218 = !DILocation(line: 4487, column: 8, scope: !11213)
!11219 = !DILocation(line: 4487, column: 13, scope: !11213)
!11220 = !DILocation(line: 4487, column: 19, scope: !11213)
!11221 = !DILocation(line: 4487, column: 24, scope: !11213)
!11222 = !DILocation(line: 4487, column: 29, scope: !11213)
!11223 = !DILocation(line: 4487, column: 52, scope: !11213)
!11224 = !DILabel(scope: !11132, name: "done", file: !3, line: 4489)
!11225 = !DILocation(line: 4489, column: 1, scope: !11132)
!11226 = !DILocation(line: 4490, column: 2, scope: !11132)
!11227 = !DILocalVariable(name: "__dummy", scope: !11228, file: !3, line: 4490, type: !448)
!11228 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 4490, column: 2)
!11229 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 4490, column: 2)
!11230 = !DILocation(line: 4490, column: 2, scope: !11228)
!11231 = !DILocalVariable(name: "__dummy2", scope: !11228, file: !3, line: 4490, type: !448)
!11232 = !DILocation(line: 4490, column: 2, scope: !11229)
!11233 = !DILocation(line: 4490, column: 2, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 4490, column: 2)
!11235 = !DILocation(line: 4490, column: 2, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 4490, column: 2)
!11237 = !DILocalVariable(name: "__dummy", scope: !11238, file: !3, line: 4490, type: !448)
!11238 = distinct !DILexicalBlock(scope: !11239, file: !3, line: 4490, column: 2)
!11239 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 4490, column: 2)
!11240 = !DILocation(line: 4490, column: 2, scope: !11238)
!11241 = !DILocalVariable(name: "__dummy2", scope: !11238, file: !3, line: 4490, type: !448)
!11242 = !DILocation(line: 4490, column: 2, scope: !11239)
!11243 = !DILocation(line: 4490, column: 2, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 4490, column: 2)
!11245 = !{i32 -2140803781}
!11246 = !DILocation(line: 4490, column: 2, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 4490, column: 2)
!11248 = !DILocation(line: 4492, column: 9, scope: !11132)
!11249 = !DILocation(line: 4492, column: 2, scope: !11132)
!11250 = distinct !DISubprogram(name: "pci_check_and_unmask_intx", scope: !3, file: !3, line: 4516, type: !4785, scopeLine: 4517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11251 = !DILocalVariable(name: "dev", arg: 1, scope: !11250, file: !3, line: 4516, type: !273)
!11252 = !DILocation(line: 4516, column: 48, scope: !11250)
!11253 = !DILocation(line: 4518, column: 37, scope: !11250)
!11254 = !DILocation(line: 4518, column: 9, scope: !11250)
!11255 = !DILocation(line: 4518, column: 2, scope: !11250)
!11256 = distinct !DISubprogram(name: "pci_wait_for_pending_transaction", scope: !3, file: !3, line: 4528, type: !3545, scopeLine: 4529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11257 = !DILocalVariable(name: "dev", arg: 1, scope: !11256, file: !3, line: 4528, type: !273)
!11258 = !DILocation(line: 4528, column: 54, scope: !11256)
!11259 = !DILocation(line: 4530, column: 19, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11256, file: !3, line: 4530, column: 6)
!11261 = !DILocation(line: 4530, column: 7, scope: !11260)
!11262 = !DILocation(line: 4530, column: 6, scope: !11256)
!11263 = !DILocation(line: 4531, column: 3, scope: !11260)
!11264 = !DILocation(line: 4533, column: 30, scope: !11256)
!11265 = !DILocation(line: 4533, column: 48, scope: !11256)
!11266 = !DILocation(line: 4533, column: 35, scope: !11256)
!11267 = !DILocation(line: 4533, column: 53, scope: !11256)
!11268 = !DILocation(line: 4533, column: 9, scope: !11256)
!11269 = !DILocation(line: 4533, column: 2, scope: !11256)
!11270 = !DILocation(line: 4535, column: 1, scope: !11256)
!11271 = distinct !DISubprogram(name: "pci_pcie_cap", scope: !6, file: !6, line: 2128, type: !3545, scopeLine: 2129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11272 = !DILocalVariable(name: "dev", arg: 1, scope: !11271, file: !6, line: 2128, type: !273)
!11273 = !DILocation(line: 2128, column: 48, scope: !11271)
!11274 = !DILocation(line: 2130, column: 9, scope: !11271)
!11275 = !DILocation(line: 2130, column: 14, scope: !11271)
!11276 = !DILocation(line: 2130, column: 2, scope: !11271)
!11277 = distinct !DISubprogram(name: "pcie_has_flr", scope: !3, file: !3, line: 4545, type: !4785, scopeLine: 4546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11278 = !DILocalVariable(name: "dev", arg: 1, scope: !11277, file: !3, line: 4545, type: !273)
!11279 = !DILocation(line: 4545, column: 35, scope: !11277)
!11280 = !DILocalVariable(name: "cap", scope: !11277, file: !3, line: 4547, type: !319)
!11281 = !DILocation(line: 4547, column: 6, scope: !11277)
!11282 = !DILocation(line: 4549, column: 6, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11277, file: !3, line: 4549, column: 6)
!11284 = !DILocation(line: 4549, column: 11, scope: !11283)
!11285 = !DILocation(line: 4549, column: 21, scope: !11283)
!11286 = !DILocation(line: 4549, column: 6, scope: !11277)
!11287 = !DILocation(line: 4550, column: 3, scope: !11283)
!11288 = !DILocation(line: 4552, column: 29, scope: !11277)
!11289 = !DILocation(line: 4552, column: 2, scope: !11277)
!11290 = !DILocation(line: 4553, column: 9, scope: !11277)
!11291 = !DILocation(line: 4553, column: 13, scope: !11277)
!11292 = !DILocation(line: 4553, column: 2, scope: !11277)
!11293 = !DILocation(line: 4554, column: 1, scope: !11277)
!11294 = distinct !DISubprogram(name: "pcie_flr", scope: !3, file: !3, line: 4565, type: !3545, scopeLine: 4566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11295 = !DILocalVariable(name: "dev", arg: 1, scope: !11294, file: !3, line: 4565, type: !273)
!11296 = !DILocation(line: 4565, column: 30, scope: !11294)
!11297 = !DILocation(line: 4567, column: 40, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 4567, column: 6)
!11299 = !DILocation(line: 4567, column: 7, scope: !11298)
!11300 = !DILocation(line: 4567, column: 6, scope: !11294)
!11301 = !DILocation(line: 4568, column: 3, scope: !11298)
!11302 = !DILocation(line: 4570, column: 27, scope: !11294)
!11303 = !DILocation(line: 4570, column: 2, scope: !11294)
!11304 = !DILocation(line: 4572, column: 6, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 4572, column: 6)
!11306 = !DILocation(line: 4572, column: 11, scope: !11305)
!11307 = !DILocation(line: 4572, column: 6, scope: !11294)
!11308 = !DILocation(line: 4573, column: 3, scope: !11305)
!11309 = !DILocation(line: 4580, column: 2, scope: !11294)
!11310 = !DILocation(line: 4582, column: 22, scope: !11294)
!11311 = !DILocation(line: 4582, column: 9, scope: !11294)
!11312 = !DILocation(line: 4582, column: 2, scope: !11294)
!11313 = !DILocation(line: 4583, column: 1, scope: !11294)
!11314 = distinct !DISubprogram(name: "pci_dev_wait", scope: !3, file: !3, line: 1199, type: !11315, scopeLine: 1200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11315 = !DISubroutineType(types: !11316)
!11316 = !{!304, !273, !399, !304}
!11317 = !DILocalVariable(name: "dev", arg: 1, scope: !11314, file: !3, line: 1199, type: !273)
!11318 = !DILocation(line: 1199, column: 41, scope: !11314)
!11319 = !DILocalVariable(name: "reset_type", arg: 2, scope: !11314, file: !3, line: 1199, type: !399)
!11320 = !DILocation(line: 1199, column: 52, scope: !11314)
!11321 = !DILocalVariable(name: "timeout", arg: 3, scope: !11314, file: !3, line: 1199, type: !304)
!11322 = !DILocation(line: 1199, column: 68, scope: !11314)
!11323 = !DILocalVariable(name: "delay", scope: !11314, file: !3, line: 1201, type: !304)
!11324 = !DILocation(line: 1201, column: 6, scope: !11314)
!11325 = !DILocalVariable(name: "id", scope: !11314, file: !3, line: 1202, type: !319)
!11326 = !DILocation(line: 1202, column: 6, scope: !11314)
!11327 = !DILocation(line: 1216, column: 24, scope: !11314)
!11328 = !DILocation(line: 1216, column: 2, scope: !11314)
!11329 = !DILocation(line: 1217, column: 2, scope: !11314)
!11330 = !DILocation(line: 1217, column: 9, scope: !11314)
!11331 = !DILocation(line: 1217, column: 12, scope: !11314)
!11332 = !DILocation(line: 1218, column: 7, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 1218, column: 7)
!11334 = distinct !DILexicalBlock(scope: !11314, file: !3, line: 1217, column: 19)
!11335 = !DILocation(line: 1218, column: 15, scope: !11333)
!11336 = !DILocation(line: 1218, column: 13, scope: !11333)
!11337 = !DILocation(line: 1218, column: 7, scope: !11334)
!11338 = !DILocation(line: 1219, column: 4, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 1218, column: 24)
!11340 = !DILocation(line: 1221, column: 4, scope: !11339)
!11341 = !DILocation(line: 1224, column: 7, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 1224, column: 7)
!11343 = !DILocation(line: 1224, column: 13, scope: !11342)
!11344 = !DILocation(line: 1224, column: 7, scope: !11334)
!11345 = !DILocation(line: 1225, column: 4, scope: !11342)
!11346 = !DILocation(line: 1228, column: 10, scope: !11334)
!11347 = !DILocation(line: 1228, column: 3, scope: !11334)
!11348 = !DILocation(line: 1229, column: 9, scope: !11334)
!11349 = !DILocation(line: 1230, column: 25, scope: !11334)
!11350 = !DILocation(line: 1230, column: 3, scope: !11334)
!11351 = distinct !{!11351, !11329, !11352}
!11352 = !DILocation(line: 1231, column: 2, scope: !11314)
!11353 = !DILocation(line: 1233, column: 6, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11314, file: !3, line: 1233, column: 6)
!11355 = !DILocation(line: 1233, column: 12, scope: !11354)
!11356 = !DILocation(line: 1233, column: 6, scope: !11314)
!11357 = !DILocation(line: 1234, column: 3, scope: !11354)
!11358 = !DILocation(line: 1237, column: 2, scope: !11314)
!11359 = !DILocation(line: 1238, column: 1, scope: !11314)
!11360 = distinct !DISubprogram(name: "pcie_wait_for_link", scope: !3, file: !3, line: 4733, type: !11133, scopeLine: 4734, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11361 = !DILocalVariable(name: "pdev", arg: 1, scope: !11360, file: !3, line: 4733, type: !273)
!11362 = !DILocation(line: 4733, column: 41, scope: !11360)
!11363 = !DILocalVariable(name: "active", arg: 2, scope: !11360, file: !3, line: 4733, type: !609)
!11364 = !DILocation(line: 4733, column: 52, scope: !11360)
!11365 = !DILocation(line: 4735, column: 34, scope: !11360)
!11366 = !DILocation(line: 4735, column: 40, scope: !11360)
!11367 = !DILocation(line: 4735, column: 9, scope: !11360)
!11368 = !DILocation(line: 4735, column: 2, scope: !11360)
!11369 = distinct !DISubprogram(name: "pcie_wait_for_link_delay", scope: !3, file: !3, line: 4683, type: !11370, scopeLine: 4685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11370 = !DISubroutineType(types: !11371)
!11371 = !{!609, !273, !609, !304}
!11372 = !DILocalVariable(name: "pdev", arg: 1, scope: !11369, file: !3, line: 4683, type: !273)
!11373 = !DILocation(line: 4683, column: 54, scope: !11369)
!11374 = !DILocalVariable(name: "active", arg: 2, scope: !11369, file: !3, line: 4683, type: !609)
!11375 = !DILocation(line: 4683, column: 65, scope: !11369)
!11376 = !DILocalVariable(name: "delay", arg: 3, scope: !11369, file: !3, line: 4684, type: !304)
!11377 = !DILocation(line: 4684, column: 14, scope: !11369)
!11378 = !DILocalVariable(name: "timeout", scope: !11369, file: !3, line: 4686, type: !304)
!11379 = !DILocation(line: 4686, column: 6, scope: !11369)
!11380 = !DILocalVariable(name: "ret", scope: !11369, file: !3, line: 4687, type: !609)
!11381 = !DILocation(line: 4687, column: 7, scope: !11369)
!11382 = !DILocalVariable(name: "lnk_status", scope: !11369, file: !3, line: 4688, type: !979)
!11383 = !DILocation(line: 4688, column: 6, scope: !11369)
!11384 = !DILocation(line: 4694, column: 7, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 4694, column: 6)
!11386 = !DILocation(line: 4694, column: 13, scope: !11385)
!11387 = !DILocation(line: 4694, column: 6, scope: !11369)
!11388 = !DILocation(line: 4695, column: 10, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11385, file: !3, line: 4694, column: 36)
!11390 = !DILocation(line: 4695, column: 20, scope: !11389)
!11391 = !DILocation(line: 4695, column: 18, scope: !11389)
!11392 = !DILocation(line: 4695, column: 3, scope: !11389)
!11393 = !DILocation(line: 4696, column: 3, scope: !11389)
!11394 = !DILocation(line: 4708, column: 6, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 4708, column: 6)
!11396 = !DILocation(line: 4708, column: 6, scope: !11369)
!11397 = !DILocation(line: 4709, column: 3, scope: !11395)
!11398 = !DILocation(line: 4710, column: 2, scope: !11369)
!11399 = !DILocation(line: 4711, column: 29, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11401, file: !3, line: 4710, column: 11)
!11401 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 4710, column: 2)
!11402 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 4710, column: 2)
!11403 = !DILocation(line: 4711, column: 3, scope: !11400)
!11404 = !DILocation(line: 4712, column: 12, scope: !11400)
!11405 = !DILocation(line: 4712, column: 23, scope: !11400)
!11406 = !DILocation(line: 4712, column: 10, scope: !11400)
!11407 = !DILocation(line: 4712, column: 9, scope: !11400)
!11408 = !DILocation(line: 4712, column: 7, scope: !11400)
!11409 = !DILocation(line: 4713, column: 7, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 4713, column: 7)
!11411 = !DILocation(line: 4713, column: 14, scope: !11410)
!11412 = !DILocation(line: 4713, column: 11, scope: !11410)
!11413 = !DILocation(line: 4713, column: 7, scope: !11400)
!11414 = !DILocation(line: 4714, column: 4, scope: !11410)
!11415 = !DILocation(line: 4715, column: 7, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 4715, column: 7)
!11417 = !DILocation(line: 4715, column: 15, scope: !11416)
!11418 = !DILocation(line: 4715, column: 7, scope: !11400)
!11419 = !DILocation(line: 4716, column: 4, scope: !11416)
!11420 = !DILocation(line: 4717, column: 3, scope: !11400)
!11421 = !DILocation(line: 4718, column: 11, scope: !11400)
!11422 = !DILocation(line: 4710, column: 2, scope: !11401)
!11423 = distinct !{!11423, !11424, !11425}
!11424 = !DILocation(line: 4710, column: 2, scope: !11402)
!11425 = !DILocation(line: 4719, column: 2, scope: !11402)
!11426 = !DILocation(line: 4720, column: 6, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 4720, column: 6)
!11428 = !DILocation(line: 4720, column: 13, scope: !11427)
!11429 = !DILocation(line: 4720, column: 16, scope: !11427)
!11430 = !DILocation(line: 4720, column: 6, scope: !11369)
!11431 = !DILocation(line: 4721, column: 10, scope: !11427)
!11432 = !DILocation(line: 4721, column: 3, scope: !11427)
!11433 = !DILocation(line: 4723, column: 9, scope: !11369)
!11434 = !DILocation(line: 4723, column: 16, scope: !11369)
!11435 = !DILocation(line: 4723, column: 13, scope: !11369)
!11436 = !DILocation(line: 4723, column: 2, scope: !11369)
!11437 = !DILocation(line: 4724, column: 1, scope: !11369)
!11438 = distinct !DISubprogram(name: "pci_bridge_wait_for_secondary_bus", scope: !3, file: !3, line: 4772, type: !3533, scopeLine: 4773, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11439 = !DILocalVariable(name: "dev", arg: 1, scope: !11438, file: !3, line: 4772, type: !273)
!11440 = !DILocation(line: 4772, column: 56, scope: !11438)
!11441 = !DILocalVariable(name: "child", scope: !11438, file: !3, line: 4774, type: !273)
!11442 = !DILocation(line: 4774, column: 18, scope: !11438)
!11443 = !DILocalVariable(name: "delay", scope: !11438, file: !3, line: 4775, type: !304)
!11444 = !DILocation(line: 4775, column: 6, scope: !11438)
!11445 = !DILocation(line: 4777, column: 30, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 4777, column: 6)
!11447 = !DILocation(line: 4777, column: 6, scope: !11446)
!11448 = !DILocation(line: 4777, column: 6, scope: !11438)
!11449 = !DILocation(line: 4778, column: 3, scope: !11446)
!11450 = !DILocation(line: 4780, column: 21, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 4780, column: 6)
!11452 = !DILocation(line: 4780, column: 7, scope: !11451)
!11453 = !DILocation(line: 4780, column: 26, scope: !11451)
!11454 = !DILocation(line: 4780, column: 30, scope: !11451)
!11455 = !DILocation(line: 4780, column: 35, scope: !11451)
!11456 = !DILocation(line: 4780, column: 6, scope: !11438)
!11457 = !DILocation(line: 4781, column: 3, scope: !11451)
!11458 = !DILocation(line: 4783, column: 2, scope: !11438)
!11459 = !DILocation(line: 4791, column: 7, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 4791, column: 6)
!11461 = !DILocation(line: 4791, column: 12, scope: !11460)
!11462 = !DILocation(line: 4791, column: 24, scope: !11460)
!11463 = !DILocation(line: 4791, column: 39, scope: !11460)
!11464 = !DILocation(line: 4791, column: 44, scope: !11460)
!11465 = !DILocation(line: 4791, column: 57, scope: !11460)
!11466 = !DILocation(line: 4791, column: 27, scope: !11460)
!11467 = !DILocation(line: 4791, column: 6, scope: !11438)
!11468 = !DILocation(line: 4792, column: 3, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11460, file: !3, line: 4791, column: 67)
!11470 = !DILocation(line: 4793, column: 3, scope: !11469)
!11471 = !DILocation(line: 4797, column: 35, scope: !11438)
!11472 = !DILocation(line: 4797, column: 40, scope: !11438)
!11473 = !DILocation(line: 4797, column: 10, scope: !11438)
!11474 = !DILocation(line: 4797, column: 8, scope: !11438)
!11475 = !DILocation(line: 4798, column: 7, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 4798, column: 6)
!11477 = !DILocation(line: 4798, column: 6, scope: !11438)
!11478 = !DILocation(line: 4799, column: 3, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11476, file: !3, line: 4798, column: 14)
!11480 = !DILocation(line: 4800, column: 3, scope: !11479)
!11481 = !DILocalVariable(name: "__mptr", scope: !11482, file: !3, line: 4803, type: !258)
!11482 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 4803, column: 10)
!11483 = !DILocation(line: 4803, column: 10, scope: !11482)
!11484 = !DILocation(line: 4803, column: 10, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 4803, column: 10)
!11486 = !DILocation(line: 4803, column: 8, scope: !11438)
!11487 = !DILocation(line: 4805, column: 2, scope: !11438)
!11488 = !DILocation(line: 4813, column: 19, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 4813, column: 6)
!11490 = !DILocation(line: 4813, column: 7, scope: !11489)
!11491 = !DILocation(line: 4813, column: 6, scope: !11438)
!11492 = !DILocation(line: 4815, column: 17, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11489, file: !3, line: 4813, column: 25)
!11494 = !DILocation(line: 4815, column: 15, scope: !11493)
!11495 = !DILocation(line: 4815, column: 3, scope: !11493)
!11496 = !DILocation(line: 4816, column: 3, scope: !11493)
!11497 = !DILocation(line: 4836, column: 28, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 4836, column: 6)
!11499 = !DILocation(line: 4836, column: 7, scope: !11498)
!11500 = !DILocation(line: 4836, column: 6, scope: !11438)
!11501 = !DILocation(line: 4837, column: 3, scope: !11498)
!11502 = !DILocation(line: 4839, column: 25, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 4839, column: 6)
!11504 = !DILocation(line: 4839, column: 6, scope: !11503)
!11505 = !DILocation(line: 4839, column: 30, scope: !11503)
!11506 = !DILocation(line: 4839, column: 6, scope: !11438)
!11507 = !DILocation(line: 4841, column: 10, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 4839, column: 51)
!11509 = !DILocation(line: 4841, column: 3, scope: !11508)
!11510 = !DILocation(line: 4842, column: 2, scope: !11508)
!11511 = !DILocation(line: 4845, column: 33, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11513, file: !3, line: 4845, column: 7)
!11513 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 4842, column: 9)
!11514 = !DILocation(line: 4845, column: 44, scope: !11512)
!11515 = !DILocation(line: 4845, column: 8, scope: !11512)
!11516 = !DILocation(line: 4845, column: 7, scope: !11513)
!11517 = !DILocation(line: 4847, column: 4, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 4845, column: 52)
!11519 = !DILocation(line: 4848, column: 4, scope: !11518)
!11520 = !DILocation(line: 4852, column: 29, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 4852, column: 6)
!11522 = !DILocation(line: 4852, column: 7, scope: !11521)
!11523 = !DILocation(line: 4852, column: 6, scope: !11438)
!11524 = !DILocation(line: 4854, column: 10, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11521, file: !3, line: 4852, column: 37)
!11526 = !DILocation(line: 4854, column: 3, scope: !11525)
!11527 = !DILocation(line: 4855, column: 2, scope: !11525)
!11528 = !DILocation(line: 4856, column: 1, scope: !11438)
!11529 = distinct !DISubprogram(name: "pci_dev_is_disconnected", scope: !4228, file: !4228, line: 405, type: !11530, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11530 = !DISubroutineType(types: !11531)
!11531 = !{!609, !4701}
!11532 = !DILocalVariable(name: "dev", arg: 1, scope: !11529, file: !4228, line: 405, type: !4701)
!11533 = !DILocation(line: 405, column: 66, scope: !11529)
!11534 = !DILocation(line: 407, column: 9, scope: !11529)
!11535 = !DILocation(line: 407, column: 14, scope: !11529)
!11536 = !DILocation(line: 407, column: 26, scope: !11529)
!11537 = !DILocation(line: 407, column: 2, scope: !11529)
!11538 = distinct !DISubprogram(name: "pci_is_bridge", scope: !6, file: !6, line: 668, type: !4785, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11539 = !DILocalVariable(name: "dev", arg: 1, scope: !11538, file: !6, line: 668, type: !273)
!11540 = !DILocation(line: 668, column: 50, scope: !11538)
!11541 = !DILocation(line: 670, column: 9, scope: !11538)
!11542 = !DILocation(line: 670, column: 14, scope: !11538)
!11543 = !DILocation(line: 670, column: 23, scope: !11538)
!11544 = !DILocation(line: 670, column: 49, scope: !11538)
!11545 = !DILocation(line: 671, column: 3, scope: !11538)
!11546 = !DILocation(line: 671, column: 8, scope: !11538)
!11547 = !DILocation(line: 671, column: 17, scope: !11538)
!11548 = !DILocation(line: 670, column: 2, scope: !11538)
!11549 = distinct !DISubprogram(name: "list_empty", scope: !8313, file: !8313, line: 280, type: !8327, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11550 = !DILocalVariable(name: "head", arg: 1, scope: !11549, file: !8313, line: 280, type: !8329)
!11551 = !DILocation(line: 280, column: 54, scope: !11549)
!11552 = !DILocation(line: 282, column: 9, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11549, file: !8313, line: 282, column: 9)
!11554 = !DILocation(line: 282, column: 9, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11553, file: !8313, line: 282, column: 9)
!11556 = !DILocation(line: 282, column: 34, scope: !11549)
!11557 = !DILocation(line: 282, column: 31, scope: !11549)
!11558 = !DILocation(line: 282, column: 2, scope: !11549)
!11559 = distinct !DISubprogram(name: "pci_bus_max_d3cold_delay", scope: !3, file: !3, line: 4745, type: !11560, scopeLine: 4746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11560 = !DISubroutineType(types: !11561)
!11561 = !{!304, !5411}
!11562 = !DILocalVariable(name: "bus", arg: 1, scope: !11559, file: !3, line: 4745, type: !5411)
!11563 = !DILocation(line: 4745, column: 59, scope: !11559)
!11564 = !DILocalVariable(name: "pdev", scope: !11559, file: !3, line: 4747, type: !4701)
!11565 = !DILocation(line: 4747, column: 24, scope: !11559)
!11566 = !DILocalVariable(name: "min_delay", scope: !11559, file: !3, line: 4748, type: !304)
!11567 = !DILocation(line: 4748, column: 6, scope: !11559)
!11568 = !DILocalVariable(name: "max_delay", scope: !11559, file: !3, line: 4749, type: !304)
!11569 = !DILocation(line: 4749, column: 6, scope: !11559)
!11570 = !DILocalVariable(name: "__mptr", scope: !11571, file: !3, line: 4751, type: !258)
!11571 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 4751, column: 2)
!11572 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 4751, column: 2)
!11573 = !DILocation(line: 4751, column: 2, scope: !11571)
!11574 = !DILocation(line: 4751, column: 2, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11571, file: !3, line: 4751, column: 2)
!11576 = !DILocation(line: 4751, column: 2, scope: !11572)
!11577 = !DILocation(line: 4751, column: 2, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 4751, column: 2)
!11579 = !DILocation(line: 4752, column: 7, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11581, file: !3, line: 4752, column: 7)
!11581 = distinct !DILexicalBlock(scope: !11578, file: !3, line: 4751, column: 53)
!11582 = !DILocation(line: 4752, column: 13, scope: !11580)
!11583 = !DILocation(line: 4752, column: 28, scope: !11580)
!11584 = !DILocation(line: 4752, column: 26, scope: !11580)
!11585 = !DILocation(line: 4752, column: 7, scope: !11581)
!11586 = !DILocation(line: 4753, column: 16, scope: !11580)
!11587 = !DILocation(line: 4753, column: 22, scope: !11580)
!11588 = !DILocation(line: 4753, column: 14, scope: !11580)
!11589 = !DILocation(line: 4753, column: 4, scope: !11580)
!11590 = !DILocation(line: 4754, column: 7, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11581, file: !3, line: 4754, column: 7)
!11592 = !DILocation(line: 4754, column: 13, scope: !11591)
!11593 = !DILocation(line: 4754, column: 28, scope: !11591)
!11594 = !DILocation(line: 4754, column: 26, scope: !11591)
!11595 = !DILocation(line: 4754, column: 7, scope: !11581)
!11596 = !DILocation(line: 4755, column: 16, scope: !11591)
!11597 = !DILocation(line: 4755, column: 22, scope: !11591)
!11598 = !DILocation(line: 4755, column: 14, scope: !11591)
!11599 = !DILocation(line: 4755, column: 4, scope: !11591)
!11600 = !DILocation(line: 4756, column: 2, scope: !11581)
!11601 = !DILocalVariable(name: "__mptr", scope: !11602, file: !3, line: 4751, type: !258)
!11602 = distinct !DILexicalBlock(scope: !11578, file: !3, line: 4751, column: 2)
!11603 = !DILocation(line: 4751, column: 2, scope: !11602)
!11604 = !DILocation(line: 4751, column: 2, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11602, file: !3, line: 4751, column: 2)
!11606 = distinct !{!11606, !11576, !11607}
!11607 = !DILocation(line: 4756, column: 2, scope: !11572)
!11608 = !DILocalVariable(name: "__UNIQUE_ID___x267", scope: !11609, file: !3, line: 4758, type: !304)
!11609 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 4758, column: 9)
!11610 = !DILocation(line: 4758, column: 9, scope: !11609)
!11611 = !DILocalVariable(name: "__UNIQUE_ID___y268", scope: !11609, file: !3, line: 4758, type: !304)
!11612 = !DILocation(line: 4758, column: 2, scope: !11559)
!11613 = distinct !DISubprogram(name: "pcie_downstream_port", scope: !4228, file: !4228, line: 133, type: !11530, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11614 = !DILocalVariable(name: "dev", arg: 1, scope: !11613, file: !4228, line: 133, type: !4701)
!11615 = !DILocation(line: 133, column: 63, scope: !11613)
!11616 = !DILocalVariable(name: "type", scope: !11613, file: !4228, line: 135, type: !304)
!11617 = !DILocation(line: 135, column: 6, scope: !11613)
!11618 = !DILocation(line: 135, column: 27, scope: !11613)
!11619 = !DILocation(line: 135, column: 13, scope: !11613)
!11620 = !DILocation(line: 137, column: 9, scope: !11613)
!11621 = !DILocation(line: 137, column: 14, scope: !11613)
!11622 = !DILocation(line: 137, column: 40, scope: !11613)
!11623 = !DILocation(line: 138, column: 9, scope: !11613)
!11624 = !DILocation(line: 138, column: 14, scope: !11613)
!11625 = !DILocation(line: 138, column: 41, scope: !11613)
!11626 = !DILocation(line: 139, column: 9, scope: !11613)
!11627 = !DILocation(line: 139, column: 14, scope: !11613)
!11628 = !DILocation(line: 137, column: 2, scope: !11613)
!11629 = distinct !DISubprogram(name: "pcie_get_speed_cap", scope: !3, file: !3, line: 5845, type: !11630, scopeLine: 5846, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11630 = !DISubroutineType(types: !11631)
!11631 = !{!149, !273}
!11632 = !DILocalVariable(name: "dev", arg: 1, scope: !11629, file: !3, line: 5845, type: !273)
!11633 = !DILocation(line: 5845, column: 55, scope: !11629)
!11634 = !DILocalVariable(name: "lnkcap2", scope: !11629, file: !3, line: 5847, type: !319)
!11635 = !DILocation(line: 5847, column: 6, scope: !11629)
!11636 = !DILocalVariable(name: "lnkcap", scope: !11629, file: !3, line: 5847, type: !319)
!11637 = !DILocation(line: 5847, column: 15, scope: !11629)
!11638 = !DILocation(line: 5858, column: 29, scope: !11629)
!11639 = !DILocation(line: 5858, column: 2, scope: !11629)
!11640 = !DILocation(line: 5861, column: 6, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11629, file: !3, line: 5861, column: 6)
!11642 = !DILocation(line: 5861, column: 6, scope: !11629)
!11643 = !DILocation(line: 5862, column: 10, scope: !11641)
!11644 = !DILocation(line: 5862, column: 3, scope: !11641)
!11645 = !DILocation(line: 5864, column: 29, scope: !11629)
!11646 = !DILocation(line: 5864, column: 2, scope: !11629)
!11647 = !DILocation(line: 5865, column: 7, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11629, file: !3, line: 5865, column: 6)
!11649 = !DILocation(line: 5865, column: 14, scope: !11648)
!11650 = !DILocation(line: 5865, column: 36, scope: !11648)
!11651 = !DILocation(line: 5865, column: 6, scope: !11629)
!11652 = !DILocation(line: 5866, column: 3, scope: !11648)
!11653 = !DILocation(line: 5867, column: 12, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 5867, column: 11)
!11655 = !DILocation(line: 5867, column: 19, scope: !11654)
!11656 = !DILocation(line: 5867, column: 41, scope: !11654)
!11657 = !DILocation(line: 5867, column: 11, scope: !11648)
!11658 = !DILocation(line: 5868, column: 3, scope: !11654)
!11659 = !DILocation(line: 5870, column: 2, scope: !11629)
!11660 = !DILocation(line: 5871, column: 1, scope: !11629)
!11661 = distinct !DISubprogram(name: "pci_reset_secondary_bus", scope: !3, file: !3, line: 4858, type: !3533, scopeLine: 4859, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11662 = !DILocalVariable(name: "dev", arg: 1, scope: !11661, file: !3, line: 4858, type: !273)
!11663 = !DILocation(line: 4858, column: 46, scope: !11661)
!11664 = !DILocalVariable(name: "ctrl", scope: !11661, file: !3, line: 4860, type: !979)
!11665 = !DILocation(line: 4860, column: 6, scope: !11661)
!11666 = !DILocation(line: 4862, column: 23, scope: !11661)
!11667 = !DILocation(line: 4862, column: 2, scope: !11661)
!11668 = !DILocation(line: 4863, column: 7, scope: !11661)
!11669 = !DILocation(line: 4864, column: 24, scope: !11661)
!11670 = !DILocation(line: 4864, column: 49, scope: !11661)
!11671 = !DILocation(line: 4864, column: 2, scope: !11661)
!11672 = !DILocation(line: 4870, column: 2, scope: !11661)
!11673 = !DILocation(line: 4872, column: 7, scope: !11661)
!11674 = !DILocation(line: 4873, column: 24, scope: !11661)
!11675 = !DILocation(line: 4873, column: 49, scope: !11661)
!11676 = !DILocation(line: 4873, column: 2, scope: !11661)
!11677 = !DILocation(line: 4882, column: 2, scope: !11661)
!11678 = !DILocation(line: 4883, column: 1, scope: !11661)
!11679 = distinct !DISubprogram(name: "ssleep", scope: !11680, file: !11680, line: 63, type: !11681, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11680 = !DIFile(filename: "./include/linux/delay.h", directory: "/home/lizy2001/genbc/linux")
!11681 = !DISubroutineType(types: !11682)
!11682 = !{null, !7}
!11683 = !DILocalVariable(name: "seconds", arg: 1, scope: !11679, file: !11680, line: 63, type: !7)
!11684 = !DILocation(line: 63, column: 40, scope: !11679)
!11685 = !DILocation(line: 65, column: 9, scope: !11679)
!11686 = !DILocation(line: 65, column: 17, scope: !11679)
!11687 = !DILocation(line: 65, column: 2, scope: !11679)
!11688 = !DILocation(line: 66, column: 1, scope: !11679)
!11689 = distinct !DISubprogram(name: "pcibios_reset_secondary_bus", scope: !3, file: !3, line: 4885, type: !3533, scopeLine: 4886, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11690 = !DILocalVariable(name: "dev", arg: 1, scope: !11689, file: !3, line: 4885, type: !273)
!11691 = !DILocation(line: 4885, column: 57, scope: !11689)
!11692 = !DILocation(line: 4887, column: 26, scope: !11689)
!11693 = !DILocation(line: 4887, column: 2, scope: !11689)
!11694 = !DILocation(line: 4888, column: 1, scope: !11689)
!11695 = distinct !DISubprogram(name: "pci_bridge_secondary_bus_reset", scope: !3, file: !3, line: 4897, type: !3545, scopeLine: 4898, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11696 = !DILocalVariable(name: "dev", arg: 1, scope: !11695, file: !3, line: 4897, type: !273)
!11697 = !DILocation(line: 4897, column: 52, scope: !11695)
!11698 = !DILocation(line: 4899, column: 30, scope: !11695)
!11699 = !DILocation(line: 4899, column: 2, scope: !11695)
!11700 = !DILocation(line: 4901, column: 22, scope: !11695)
!11701 = !DILocation(line: 4901, column: 9, scope: !11695)
!11702 = !DILocation(line: 4901, column: 2, scope: !11695)
!11703 = distinct !DISubprogram(name: "__pci_reset_function_locked", scope: !3, file: !3, line: 5039, type: !3545, scopeLine: 5040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11704 = !DILocalVariable(name: "dev", arg: 1, scope: !11703, file: !3, line: 5039, type: !273)
!11705 = !DILocation(line: 5039, column: 49, scope: !11703)
!11706 = !DILocalVariable(name: "rc", scope: !11703, file: !3, line: 5041, type: !304)
!11707 = !DILocation(line: 5041, column: 6, scope: !11703)
!11708 = !DILocation(line: 5043, column: 2, scope: !11703)
!11709 = !DILocation(line: 5043, column: 2, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11703, file: !3, line: 5043, column: 2)
!11711 = !DILocation(line: 5043, column: 2, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11710, file: !3, line: 5043, column: 2)
!11713 = !DILocation(line: 5053, column: 30, scope: !11703)
!11714 = !DILocation(line: 5053, column: 7, scope: !11703)
!11715 = !DILocation(line: 5053, column: 5, scope: !11703)
!11716 = !DILocation(line: 5054, column: 6, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11703, file: !3, line: 5054, column: 6)
!11718 = !DILocation(line: 5054, column: 9, scope: !11717)
!11719 = !DILocation(line: 5054, column: 6, scope: !11703)
!11720 = !DILocation(line: 5055, column: 10, scope: !11717)
!11721 = !DILocation(line: 5055, column: 3, scope: !11717)
!11722 = !DILocation(line: 5056, column: 19, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11703, file: !3, line: 5056, column: 6)
!11724 = !DILocation(line: 5056, column: 6, scope: !11723)
!11725 = !DILocation(line: 5056, column: 6, scope: !11703)
!11726 = !DILocation(line: 5057, column: 17, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11723, file: !3, line: 5056, column: 25)
!11728 = !DILocation(line: 5057, column: 8, scope: !11727)
!11729 = !DILocation(line: 5057, column: 6, scope: !11727)
!11730 = !DILocation(line: 5058, column: 7, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11727, file: !3, line: 5058, column: 7)
!11732 = !DILocation(line: 5058, column: 10, scope: !11731)
!11733 = !DILocation(line: 5058, column: 7, scope: !11727)
!11734 = !DILocation(line: 5059, column: 11, scope: !11731)
!11735 = !DILocation(line: 5059, column: 4, scope: !11731)
!11736 = !DILocation(line: 5060, column: 2, scope: !11727)
!11737 = !DILocation(line: 5061, column: 18, scope: !11703)
!11738 = !DILocation(line: 5061, column: 7, scope: !11703)
!11739 = !DILocation(line: 5061, column: 5, scope: !11703)
!11740 = !DILocation(line: 5062, column: 6, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11703, file: !3, line: 5062, column: 6)
!11742 = !DILocation(line: 5062, column: 9, scope: !11741)
!11743 = !DILocation(line: 5062, column: 6, scope: !11703)
!11744 = !DILocation(line: 5063, column: 10, scope: !11741)
!11745 = !DILocation(line: 5063, column: 3, scope: !11741)
!11746 = !DILocation(line: 5064, column: 20, scope: !11703)
!11747 = !DILocation(line: 5064, column: 7, scope: !11703)
!11748 = !DILocation(line: 5064, column: 5, scope: !11703)
!11749 = !DILocation(line: 5065, column: 6, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11703, file: !3, line: 5065, column: 6)
!11751 = !DILocation(line: 5065, column: 9, scope: !11750)
!11752 = !DILocation(line: 5065, column: 6, scope: !11703)
!11753 = !DILocation(line: 5066, column: 10, scope: !11750)
!11754 = !DILocation(line: 5066, column: 3, scope: !11750)
!11755 = !DILocation(line: 5067, column: 35, scope: !11703)
!11756 = !DILocation(line: 5067, column: 7, scope: !11703)
!11757 = !DILocation(line: 5067, column: 5, scope: !11703)
!11758 = !DILocation(line: 5068, column: 6, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11703, file: !3, line: 5068, column: 6)
!11760 = !DILocation(line: 5068, column: 9, scope: !11759)
!11761 = !DILocation(line: 5068, column: 6, scope: !11703)
!11762 = !DILocation(line: 5069, column: 10, scope: !11759)
!11763 = !DILocation(line: 5069, column: 3, scope: !11759)
!11764 = !DILocation(line: 5070, column: 30, scope: !11703)
!11765 = !DILocation(line: 5070, column: 9, scope: !11703)
!11766 = !DILocation(line: 5070, column: 2, scope: !11703)
!11767 = !DILocation(line: 5071, column: 1, scope: !11703)
!11768 = distinct !DISubprogram(name: "pci_af_flr", scope: !3, file: !3, line: 4586, type: !3550, scopeLine: 4587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11769 = !DILocalVariable(name: "dev", arg: 1, scope: !11768, file: !3, line: 4586, type: !273)
!11770 = !DILocation(line: 4586, column: 39, scope: !11768)
!11771 = !DILocalVariable(name: "probe", arg: 2, scope: !11768, file: !3, line: 4586, type: !304)
!11772 = !DILocation(line: 4586, column: 48, scope: !11768)
!11773 = !DILocalVariable(name: "pos", scope: !11768, file: !3, line: 4588, type: !304)
!11774 = !DILocation(line: 4588, column: 6, scope: !11768)
!11775 = !DILocalVariable(name: "cap", scope: !11768, file: !3, line: 4589, type: !310)
!11776 = !DILocation(line: 4589, column: 5, scope: !11768)
!11777 = !DILocation(line: 4591, column: 28, scope: !11768)
!11778 = !DILocation(line: 4591, column: 8, scope: !11768)
!11779 = !DILocation(line: 4591, column: 6, scope: !11768)
!11780 = !DILocation(line: 4592, column: 7, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11768, file: !3, line: 4592, column: 6)
!11782 = !DILocation(line: 4592, column: 6, scope: !11768)
!11783 = !DILocation(line: 4593, column: 3, scope: !11781)
!11784 = !DILocation(line: 4595, column: 6, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11768, file: !3, line: 4595, column: 6)
!11786 = !DILocation(line: 4595, column: 11, scope: !11785)
!11787 = !DILocation(line: 4595, column: 21, scope: !11785)
!11788 = !DILocation(line: 4595, column: 6, scope: !11768)
!11789 = !DILocation(line: 4596, column: 3, scope: !11785)
!11790 = !DILocation(line: 4598, column: 23, scope: !11768)
!11791 = !DILocation(line: 4598, column: 28, scope: !11768)
!11792 = !DILocation(line: 4598, column: 32, scope: !11768)
!11793 = !DILocation(line: 4598, column: 2, scope: !11768)
!11794 = !DILocation(line: 4599, column: 8, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11768, file: !3, line: 4599, column: 6)
!11796 = !DILocation(line: 4599, column: 12, scope: !11795)
!11797 = !DILocation(line: 4599, column: 29, scope: !11795)
!11798 = !DILocation(line: 4599, column: 34, scope: !11795)
!11799 = !DILocation(line: 4599, column: 38, scope: !11795)
!11800 = !DILocation(line: 4599, column: 6, scope: !11768)
!11801 = !DILocation(line: 4600, column: 3, scope: !11795)
!11802 = !DILocation(line: 4602, column: 6, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11768, file: !3, line: 4602, column: 6)
!11804 = !DILocation(line: 4602, column: 6, scope: !11768)
!11805 = !DILocation(line: 4603, column: 3, scope: !11803)
!11806 = !DILocation(line: 4610, column: 28, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11768, file: !3, line: 4610, column: 6)
!11808 = !DILocation(line: 4610, column: 33, scope: !11807)
!11809 = !DILocation(line: 4610, column: 37, scope: !11807)
!11810 = !DILocation(line: 4610, column: 7, scope: !11807)
!11811 = !DILocation(line: 4610, column: 6, scope: !11768)
!11812 = !DILocation(line: 4612, column: 3, scope: !11807)
!11813 = !DILocation(line: 4614, column: 24, scope: !11768)
!11814 = !DILocation(line: 4614, column: 29, scope: !11768)
!11815 = !DILocation(line: 4614, column: 33, scope: !11768)
!11816 = !DILocation(line: 4614, column: 2, scope: !11768)
!11817 = !DILocation(line: 4616, column: 6, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11768, file: !3, line: 4616, column: 6)
!11819 = !DILocation(line: 4616, column: 11, scope: !11818)
!11820 = !DILocation(line: 4616, column: 6, scope: !11768)
!11821 = !DILocation(line: 4617, column: 3, scope: !11818)
!11822 = !DILocation(line: 4625, column: 2, scope: !11768)
!11823 = !DILocation(line: 4627, column: 22, scope: !11768)
!11824 = !DILocation(line: 4627, column: 9, scope: !11768)
!11825 = !DILocation(line: 4627, column: 2, scope: !11768)
!11826 = !DILocation(line: 4628, column: 1, scope: !11768)
!11827 = distinct !DISubprogram(name: "pci_pm_reset", scope: !3, file: !3, line: 4645, type: !3550, scopeLine: 4646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11828 = !DILocalVariable(name: "dev", arg: 1, scope: !11827, file: !3, line: 4645, type: !273)
!11829 = !DILocation(line: 4645, column: 41, scope: !11827)
!11830 = !DILocalVariable(name: "probe", arg: 2, scope: !11827, file: !3, line: 4645, type: !304)
!11831 = !DILocation(line: 4645, column: 50, scope: !11827)
!11832 = !DILocalVariable(name: "csr", scope: !11827, file: !3, line: 4647, type: !979)
!11833 = !DILocation(line: 4647, column: 6, scope: !11827)
!11834 = !DILocation(line: 4649, column: 7, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11827, file: !3, line: 4649, column: 6)
!11836 = !DILocation(line: 4649, column: 12, scope: !11835)
!11837 = !DILocation(line: 4649, column: 19, scope: !11835)
!11838 = !DILocation(line: 4649, column: 22, scope: !11835)
!11839 = !DILocation(line: 4649, column: 27, scope: !11835)
!11840 = !DILocation(line: 4649, column: 37, scope: !11835)
!11841 = !DILocation(line: 4649, column: 6, scope: !11827)
!11842 = !DILocation(line: 4650, column: 3, scope: !11835)
!11843 = !DILocation(line: 4652, column: 23, scope: !11827)
!11844 = !DILocation(line: 4652, column: 28, scope: !11827)
!11845 = !DILocation(line: 4652, column: 33, scope: !11827)
!11846 = !DILocation(line: 4652, column: 40, scope: !11827)
!11847 = !DILocation(line: 4652, column: 2, scope: !11827)
!11848 = !DILocation(line: 4653, column: 6, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11827, file: !3, line: 4653, column: 6)
!11850 = !DILocation(line: 4653, column: 10, scope: !11849)
!11851 = !DILocation(line: 4653, column: 6, scope: !11827)
!11852 = !DILocation(line: 4654, column: 3, scope: !11849)
!11853 = !DILocation(line: 4656, column: 6, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11827, file: !3, line: 4656, column: 6)
!11855 = !DILocation(line: 4656, column: 6, scope: !11827)
!11856 = !DILocation(line: 4657, column: 3, scope: !11854)
!11857 = !DILocation(line: 4659, column: 6, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11827, file: !3, line: 4659, column: 6)
!11859 = !DILocation(line: 4659, column: 11, scope: !11858)
!11860 = !DILocation(line: 4659, column: 25, scope: !11858)
!11861 = !DILocation(line: 4659, column: 6, scope: !11827)
!11862 = !DILocation(line: 4660, column: 3, scope: !11858)
!11863 = !DILocation(line: 4662, column: 6, scope: !11827)
!11864 = !DILocation(line: 4663, column: 6, scope: !11827)
!11865 = !DILocation(line: 4664, column: 24, scope: !11827)
!11866 = !DILocation(line: 4664, column: 29, scope: !11827)
!11867 = !DILocation(line: 4664, column: 34, scope: !11827)
!11868 = !DILocation(line: 4664, column: 41, scope: !11827)
!11869 = !DILocation(line: 4664, column: 56, scope: !11827)
!11870 = !DILocation(line: 4664, column: 2, scope: !11827)
!11871 = !DILocation(line: 4665, column: 19, scope: !11827)
!11872 = !DILocation(line: 4665, column: 2, scope: !11827)
!11873 = !DILocation(line: 4667, column: 6, scope: !11827)
!11874 = !DILocation(line: 4668, column: 6, scope: !11827)
!11875 = !DILocation(line: 4669, column: 24, scope: !11827)
!11876 = !DILocation(line: 4669, column: 29, scope: !11827)
!11877 = !DILocation(line: 4669, column: 34, scope: !11827)
!11878 = !DILocation(line: 4669, column: 41, scope: !11827)
!11879 = !DILocation(line: 4669, column: 56, scope: !11827)
!11880 = !DILocation(line: 4669, column: 2, scope: !11827)
!11881 = !DILocation(line: 4670, column: 19, scope: !11827)
!11882 = !DILocation(line: 4670, column: 2, scope: !11827)
!11883 = !DILocation(line: 4672, column: 22, scope: !11827)
!11884 = !DILocation(line: 4672, column: 9, scope: !11827)
!11885 = !DILocation(line: 4672, column: 2, scope: !11827)
!11886 = !DILocation(line: 4673, column: 1, scope: !11827)
!11887 = distinct !DISubprogram(name: "pci_dev_reset_slot_function", scope: !3, file: !3, line: 4938, type: !3550, scopeLine: 4939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11888 = !DILocalVariable(name: "dev", arg: 1, scope: !11887, file: !3, line: 4938, type: !273)
!11889 = !DILocation(line: 4938, column: 56, scope: !11887)
!11890 = !DILocalVariable(name: "probe", arg: 2, scope: !11887, file: !3, line: 4938, type: !304)
!11891 = !DILocation(line: 4938, column: 65, scope: !11887)
!11892 = !DILocation(line: 4940, column: 6, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11887, file: !3, line: 4940, column: 6)
!11894 = !DILocation(line: 4940, column: 11, scope: !11893)
!11895 = !DILocation(line: 4940, column: 25, scope: !11893)
!11896 = !DILocation(line: 4940, column: 28, scope: !11893)
!11897 = !DILocation(line: 4940, column: 33, scope: !11893)
!11898 = !DILocation(line: 4940, column: 45, scope: !11893)
!11899 = !DILocation(line: 4940, column: 49, scope: !11893)
!11900 = !DILocation(line: 4940, column: 54, scope: !11893)
!11901 = !DILocation(line: 4940, column: 59, scope: !11893)
!11902 = !DILocation(line: 4941, column: 6, scope: !11893)
!11903 = !DILocation(line: 4941, column: 11, scope: !11893)
!11904 = !DILocation(line: 4941, column: 21, scope: !11893)
!11905 = !DILocation(line: 4940, column: 6, scope: !11887)
!11906 = !DILocation(line: 4942, column: 3, scope: !11893)
!11907 = !DILocation(line: 4944, column: 32, scope: !11887)
!11908 = !DILocation(line: 4944, column: 37, scope: !11887)
!11909 = !DILocation(line: 4944, column: 43, scope: !11887)
!11910 = !DILocation(line: 4944, column: 52, scope: !11887)
!11911 = !DILocation(line: 4944, column: 9, scope: !11887)
!11912 = !DILocation(line: 4944, column: 2, scope: !11887)
!11913 = !DILocation(line: 4945, column: 1, scope: !11887)
!11914 = distinct !DISubprogram(name: "pci_parent_bus_reset", scope: !3, file: !3, line: 4905, type: !3550, scopeLine: 4906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11915 = !DILocalVariable(name: "dev", arg: 1, scope: !11914, file: !3, line: 4905, type: !273)
!11916 = !DILocation(line: 4905, column: 49, scope: !11914)
!11917 = !DILocalVariable(name: "probe", arg: 2, scope: !11914, file: !3, line: 4905, type: !304)
!11918 = !DILocation(line: 4905, column: 58, scope: !11914)
!11919 = !DILocalVariable(name: "pdev", scope: !11914, file: !3, line: 4907, type: !273)
!11920 = !DILocation(line: 4907, column: 18, scope: !11914)
!11921 = !DILocation(line: 4909, column: 22, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 4909, column: 6)
!11923 = !DILocation(line: 4909, column: 27, scope: !11922)
!11924 = !DILocation(line: 4909, column: 6, scope: !11922)
!11925 = !DILocation(line: 4909, column: 32, scope: !11922)
!11926 = !DILocation(line: 4909, column: 35, scope: !11922)
!11927 = !DILocation(line: 4909, column: 40, scope: !11922)
!11928 = !DILocation(line: 4909, column: 52, scope: !11922)
!11929 = !DILocation(line: 4910, column: 7, scope: !11922)
!11930 = !DILocation(line: 4910, column: 12, scope: !11922)
!11931 = !DILocation(line: 4910, column: 17, scope: !11922)
!11932 = !DILocation(line: 4910, column: 22, scope: !11922)
!11933 = !DILocation(line: 4910, column: 25, scope: !11922)
!11934 = !DILocation(line: 4910, column: 30, scope: !11922)
!11935 = !DILocation(line: 4910, column: 40, scope: !11922)
!11936 = !DILocation(line: 4909, column: 6, scope: !11914)
!11937 = !DILocation(line: 4911, column: 3, scope: !11922)
!11938 = !DILocalVariable(name: "__mptr", scope: !11939, file: !3, line: 4913, type: !258)
!11939 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 4913, column: 2)
!11940 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 4913, column: 2)
!11941 = !DILocation(line: 4913, column: 2, scope: !11939)
!11942 = !DILocation(line: 4913, column: 2, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11939, file: !3, line: 4913, column: 2)
!11944 = !DILocation(line: 4913, column: 2, scope: !11940)
!11945 = !DILocation(line: 4913, column: 2, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 4913, column: 2)
!11947 = !DILocation(line: 4914, column: 7, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11946, file: !3, line: 4914, column: 7)
!11949 = !DILocation(line: 4914, column: 15, scope: !11948)
!11950 = !DILocation(line: 4914, column: 12, scope: !11948)
!11951 = !DILocation(line: 4914, column: 7, scope: !11946)
!11952 = !DILocation(line: 4915, column: 4, scope: !11948)
!11953 = !DILocalVariable(name: "__mptr", scope: !11954, file: !3, line: 4913, type: !258)
!11954 = distinct !DILexicalBlock(scope: !11946, file: !3, line: 4913, column: 2)
!11955 = !DILocation(line: 4913, column: 2, scope: !11954)
!11956 = !DILocation(line: 4913, column: 2, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11954, file: !3, line: 4913, column: 2)
!11958 = distinct !{!11958, !11944, !11959}
!11959 = !DILocation(line: 4915, column: 12, scope: !11940)
!11960 = !DILocation(line: 4917, column: 6, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11914, file: !3, line: 4917, column: 6)
!11962 = !DILocation(line: 4917, column: 6, scope: !11914)
!11963 = !DILocation(line: 4918, column: 3, scope: !11961)
!11964 = !DILocation(line: 4920, column: 40, scope: !11914)
!11965 = !DILocation(line: 4920, column: 45, scope: !11914)
!11966 = !DILocation(line: 4920, column: 50, scope: !11914)
!11967 = !DILocation(line: 4920, column: 9, scope: !11914)
!11968 = !DILocation(line: 4920, column: 2, scope: !11914)
!11969 = !DILocation(line: 4921, column: 1, scope: !11914)
!11970 = distinct !DISubprogram(name: "pci_probe_reset_function", scope: !3, file: !3, line: 5085, type: !3545, scopeLine: 5086, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11971 = !DILocalVariable(name: "dev", arg: 1, scope: !11970, file: !3, line: 5085, type: !273)
!11972 = !DILocation(line: 5085, column: 46, scope: !11970)
!11973 = !DILocalVariable(name: "rc", scope: !11970, file: !3, line: 5087, type: !304)
!11974 = !DILocation(line: 5087, column: 6, scope: !11970)
!11975 = !DILocation(line: 5089, column: 2, scope: !11970)
!11976 = !DILocation(line: 5089, column: 2, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 5089, column: 2)
!11978 = !DILocation(line: 5089, column: 2, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11977, file: !3, line: 5089, column: 2)
!11980 = !DILocation(line: 5091, column: 30, scope: !11970)
!11981 = !DILocation(line: 5091, column: 7, scope: !11970)
!11982 = !DILocation(line: 5091, column: 5, scope: !11970)
!11983 = !DILocation(line: 5092, column: 6, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 5092, column: 6)
!11985 = !DILocation(line: 5092, column: 9, scope: !11984)
!11986 = !DILocation(line: 5092, column: 6, scope: !11970)
!11987 = !DILocation(line: 5093, column: 10, scope: !11984)
!11988 = !DILocation(line: 5093, column: 3, scope: !11984)
!11989 = !DILocation(line: 5094, column: 19, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 5094, column: 6)
!11991 = !DILocation(line: 5094, column: 6, scope: !11990)
!11992 = !DILocation(line: 5094, column: 6, scope: !11970)
!11993 = !DILocation(line: 5095, column: 3, scope: !11990)
!11994 = !DILocation(line: 5096, column: 18, scope: !11970)
!11995 = !DILocation(line: 5096, column: 7, scope: !11970)
!11996 = !DILocation(line: 5096, column: 5, scope: !11970)
!11997 = !DILocation(line: 5097, column: 6, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 5097, column: 6)
!11999 = !DILocation(line: 5097, column: 9, scope: !11998)
!12000 = !DILocation(line: 5097, column: 6, scope: !11970)
!12001 = !DILocation(line: 5098, column: 10, scope: !11998)
!12002 = !DILocation(line: 5098, column: 3, scope: !11998)
!12003 = !DILocation(line: 5099, column: 20, scope: !11970)
!12004 = !DILocation(line: 5099, column: 7, scope: !11970)
!12005 = !DILocation(line: 5099, column: 5, scope: !11970)
!12006 = !DILocation(line: 5100, column: 6, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 5100, column: 6)
!12008 = !DILocation(line: 5100, column: 9, scope: !12007)
!12009 = !DILocation(line: 5100, column: 6, scope: !11970)
!12010 = !DILocation(line: 5101, column: 10, scope: !12007)
!12011 = !DILocation(line: 5101, column: 3, scope: !12007)
!12012 = !DILocation(line: 5102, column: 35, scope: !11970)
!12013 = !DILocation(line: 5102, column: 7, scope: !11970)
!12014 = !DILocation(line: 5102, column: 5, scope: !11970)
!12015 = !DILocation(line: 5103, column: 6, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 5103, column: 6)
!12017 = !DILocation(line: 5103, column: 9, scope: !12016)
!12018 = !DILocation(line: 5103, column: 6, scope: !11970)
!12019 = !DILocation(line: 5104, column: 10, scope: !12016)
!12020 = !DILocation(line: 5104, column: 3, scope: !12016)
!12021 = !DILocation(line: 5106, column: 30, scope: !11970)
!12022 = !DILocation(line: 5106, column: 9, scope: !11970)
!12023 = !DILocation(line: 5106, column: 2, scope: !11970)
!12024 = !DILocation(line: 5107, column: 1, scope: !11970)
!12025 = distinct !DISubprogram(name: "pci_reset_function", scope: !3, file: !3, line: 5125, type: !3545, scopeLine: 5126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12026 = !DILocalVariable(name: "dev", arg: 1, scope: !12025, file: !3, line: 5125, type: !273)
!12027 = !DILocation(line: 5125, column: 40, scope: !12025)
!12028 = !DILocalVariable(name: "rc", scope: !12025, file: !3, line: 5127, type: !304)
!12029 = !DILocation(line: 5127, column: 6, scope: !12025)
!12030 = !DILocation(line: 5129, column: 7, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 5129, column: 6)
!12032 = !DILocation(line: 5129, column: 12, scope: !12031)
!12033 = !DILocation(line: 5129, column: 6, scope: !12025)
!12034 = !DILocation(line: 5130, column: 3, scope: !12031)
!12035 = !DILocation(line: 5132, column: 15, scope: !12025)
!12036 = !DILocation(line: 5132, column: 2, scope: !12025)
!12037 = !DILocation(line: 5133, column: 27, scope: !12025)
!12038 = !DILocation(line: 5133, column: 2, scope: !12025)
!12039 = !DILocation(line: 5135, column: 35, scope: !12025)
!12040 = !DILocation(line: 5135, column: 7, scope: !12025)
!12041 = !DILocation(line: 5135, column: 5, scope: !12025)
!12042 = !DILocation(line: 5137, column: 18, scope: !12025)
!12043 = !DILocation(line: 5137, column: 2, scope: !12025)
!12044 = !DILocation(line: 5138, column: 17, scope: !12025)
!12045 = !DILocation(line: 5138, column: 2, scope: !12025)
!12046 = !DILocation(line: 5140, column: 9, scope: !12025)
!12047 = !DILocation(line: 5140, column: 2, scope: !12025)
!12048 = !DILocation(line: 5141, column: 1, scope: !12025)
!12049 = distinct !DISubprogram(name: "pci_dev_lock", scope: !3, file: !3, line: 4947, type: !3533, scopeLine: 4948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12050 = !DILocalVariable(name: "dev", arg: 1, scope: !12049, file: !3, line: 4947, type: !273)
!12051 = !DILocation(line: 4947, column: 42, scope: !12049)
!12052 = !DILocation(line: 4949, column: 22, scope: !12049)
!12053 = !DILocation(line: 4949, column: 2, scope: !12049)
!12054 = !DILocation(line: 4951, column: 15, scope: !12049)
!12055 = !DILocation(line: 4951, column: 20, scope: !12049)
!12056 = !DILocation(line: 4951, column: 2, scope: !12049)
!12057 = !DILocation(line: 4952, column: 1, scope: !12049)
!12058 = distinct !DISubprogram(name: "pci_dev_save_and_disable", scope: !3, file: !3, line: 4972, type: !3533, scopeLine: 4973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12059 = !DILocalVariable(name: "dev", arg: 1, scope: !12058, file: !3, line: 4972, type: !273)
!12060 = !DILocation(line: 4972, column: 54, scope: !12058)
!12061 = !DILocalVariable(name: "err_handler", scope: !12058, file: !3, line: 4974, type: !3553)
!12062 = !DILocation(line: 4974, column: 35, scope: !12058)
!12063 = !DILocation(line: 4975, column: 4, scope: !12058)
!12064 = !DILocation(line: 4975, column: 9, scope: !12058)
!12065 = !DILocation(line: 4975, column: 18, scope: !12058)
!12066 = !DILocation(line: 4975, column: 23, scope: !12058)
!12067 = !DILocation(line: 4975, column: 31, scope: !12058)
!12068 = !DILocation(line: 4982, column: 6, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12058, file: !3, line: 4982, column: 6)
!12070 = !DILocation(line: 4982, column: 18, scope: !12069)
!12071 = !DILocation(line: 4982, column: 21, scope: !12069)
!12072 = !DILocation(line: 4982, column: 34, scope: !12069)
!12073 = !DILocation(line: 4982, column: 6, scope: !12058)
!12074 = !DILocation(line: 4983, column: 3, scope: !12069)
!12075 = !DILocation(line: 4983, column: 16, scope: !12069)
!12076 = !DILocation(line: 4983, column: 30, scope: !12069)
!12077 = !DILocation(line: 4990, column: 22, scope: !12058)
!12078 = !DILocation(line: 4990, column: 2, scope: !12058)
!12079 = !DILocation(line: 4992, column: 17, scope: !12058)
!12080 = !DILocation(line: 4992, column: 2, scope: !12058)
!12081 = !DILocation(line: 5000, column: 24, scope: !12058)
!12082 = !DILocation(line: 5000, column: 2, scope: !12058)
!12083 = !DILocation(line: 5001, column: 1, scope: !12058)
!12084 = distinct !DISubprogram(name: "pci_dev_restore", scope: !3, file: !3, line: 5003, type: !3533, scopeLine: 5004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12085 = !DILocalVariable(name: "dev", arg: 1, scope: !12084, file: !3, line: 5003, type: !273)
!12086 = !DILocation(line: 5003, column: 45, scope: !12084)
!12087 = !DILocalVariable(name: "err_handler", scope: !12084, file: !3, line: 5005, type: !3553)
!12088 = !DILocation(line: 5005, column: 35, scope: !12084)
!12089 = !DILocation(line: 5006, column: 4, scope: !12084)
!12090 = !DILocation(line: 5006, column: 9, scope: !12084)
!12091 = !DILocation(line: 5006, column: 18, scope: !12084)
!12092 = !DILocation(line: 5006, column: 23, scope: !12084)
!12093 = !DILocation(line: 5006, column: 31, scope: !12084)
!12094 = !DILocation(line: 5008, column: 20, scope: !12084)
!12095 = !DILocation(line: 5008, column: 2, scope: !12084)
!12096 = !DILocation(line: 5015, column: 6, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12084, file: !3, line: 5015, column: 6)
!12098 = !DILocation(line: 5015, column: 18, scope: !12097)
!12099 = !DILocation(line: 5015, column: 21, scope: !12097)
!12100 = !DILocation(line: 5015, column: 34, scope: !12097)
!12101 = !DILocation(line: 5015, column: 6, scope: !12084)
!12102 = !DILocation(line: 5016, column: 3, scope: !12097)
!12103 = !DILocation(line: 5016, column: 16, scope: !12097)
!12104 = !DILocation(line: 5016, column: 27, scope: !12097)
!12105 = !DILocation(line: 5017, column: 1, scope: !12084)
!12106 = distinct !DISubprogram(name: "pci_dev_unlock", scope: !3, file: !3, line: 4966, type: !3533, scopeLine: 4967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12107 = !DILocalVariable(name: "dev", arg: 1, scope: !12106, file: !3, line: 4966, type: !273)
!12108 = !DILocation(line: 4966, column: 44, scope: !12106)
!12109 = !DILocation(line: 4968, column: 17, scope: !12106)
!12110 = !DILocation(line: 4968, column: 22, scope: !12106)
!12111 = !DILocation(line: 4968, column: 2, scope: !12106)
!12112 = !DILocation(line: 4969, column: 24, scope: !12106)
!12113 = !DILocation(line: 4969, column: 2, scope: !12106)
!12114 = !DILocation(line: 4970, column: 1, scope: !12106)
!12115 = distinct !DISubprogram(name: "pci_reset_function_locked", scope: !3, file: !3, line: 5161, type: !3545, scopeLine: 5162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12116 = !DILocalVariable(name: "dev", arg: 1, scope: !12115, file: !3, line: 5161, type: !273)
!12117 = !DILocation(line: 5161, column: 47, scope: !12115)
!12118 = !DILocalVariable(name: "rc", scope: !12115, file: !3, line: 5163, type: !304)
!12119 = !DILocation(line: 5163, column: 6, scope: !12115)
!12120 = !DILocation(line: 5165, column: 7, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12115, file: !3, line: 5165, column: 6)
!12122 = !DILocation(line: 5165, column: 12, scope: !12121)
!12123 = !DILocation(line: 5165, column: 6, scope: !12115)
!12124 = !DILocation(line: 5166, column: 3, scope: !12121)
!12125 = !DILocation(line: 5168, column: 27, scope: !12115)
!12126 = !DILocation(line: 5168, column: 2, scope: !12115)
!12127 = !DILocation(line: 5170, column: 35, scope: !12115)
!12128 = !DILocation(line: 5170, column: 7, scope: !12115)
!12129 = !DILocation(line: 5170, column: 5, scope: !12115)
!12130 = !DILocation(line: 5172, column: 18, scope: !12115)
!12131 = !DILocation(line: 5172, column: 2, scope: !12115)
!12132 = !DILocation(line: 5174, column: 9, scope: !12115)
!12133 = !DILocation(line: 5174, column: 2, scope: !12115)
!12134 = !DILocation(line: 5175, column: 1, scope: !12115)
!12135 = distinct !DISubprogram(name: "pci_try_reset_function", scope: !3, file: !3, line: 5184, type: !3545, scopeLine: 5185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12136 = !DILocalVariable(name: "dev", arg: 1, scope: !12135, file: !3, line: 5184, type: !273)
!12137 = !DILocation(line: 5184, column: 44, scope: !12135)
!12138 = !DILocalVariable(name: "rc", scope: !12135, file: !3, line: 5186, type: !304)
!12139 = !DILocation(line: 5186, column: 6, scope: !12135)
!12140 = !DILocation(line: 5188, column: 7, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 5188, column: 6)
!12142 = !DILocation(line: 5188, column: 12, scope: !12141)
!12143 = !DILocation(line: 5188, column: 6, scope: !12135)
!12144 = !DILocation(line: 5189, column: 3, scope: !12141)
!12145 = !DILocation(line: 5191, column: 23, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 5191, column: 6)
!12147 = !DILocation(line: 5191, column: 7, scope: !12146)
!12148 = !DILocation(line: 5191, column: 6, scope: !12135)
!12149 = !DILocation(line: 5192, column: 3, scope: !12146)
!12150 = !DILocation(line: 5194, column: 27, scope: !12135)
!12151 = !DILocation(line: 5194, column: 2, scope: !12135)
!12152 = !DILocation(line: 5195, column: 35, scope: !12135)
!12153 = !DILocation(line: 5195, column: 7, scope: !12135)
!12154 = !DILocation(line: 5195, column: 5, scope: !12135)
!12155 = !DILocation(line: 5196, column: 18, scope: !12135)
!12156 = !DILocation(line: 5196, column: 2, scope: !12135)
!12157 = !DILocation(line: 5197, column: 17, scope: !12135)
!12158 = !DILocation(line: 5197, column: 2, scope: !12135)
!12159 = !DILocation(line: 5199, column: 9, scope: !12135)
!12160 = !DILocation(line: 5199, column: 2, scope: !12135)
!12161 = !DILocation(line: 5200, column: 1, scope: !12135)
!12162 = distinct !DISubprogram(name: "pci_dev_trylock", scope: !3, file: !3, line: 4955, type: !3545, scopeLine: 4956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12163 = !DILocalVariable(name: "dev", arg: 1, scope: !12162, file: !3, line: 4955, type: !273)
!12164 = !DILocation(line: 4955, column: 44, scope: !12162)
!12165 = !DILocation(line: 4957, column: 29, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12162, file: !3, line: 4957, column: 6)
!12167 = !DILocation(line: 4957, column: 6, scope: !12166)
!12168 = !DILocation(line: 4957, column: 6, scope: !12162)
!12169 = !DILocation(line: 4958, column: 23, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12171, file: !3, line: 4958, column: 7)
!12171 = distinct !DILexicalBlock(scope: !12166, file: !3, line: 4957, column: 35)
!12172 = !DILocation(line: 4958, column: 28, scope: !12170)
!12173 = !DILocation(line: 4958, column: 7, scope: !12170)
!12174 = !DILocation(line: 4958, column: 7, scope: !12171)
!12175 = !DILocation(line: 4959, column: 4, scope: !12170)
!12176 = !DILocation(line: 4960, column: 25, scope: !12171)
!12177 = !DILocation(line: 4960, column: 3, scope: !12171)
!12178 = !DILocation(line: 4961, column: 2, scope: !12171)
!12179 = !DILocation(line: 4963, column: 2, scope: !12162)
!12180 = !DILocation(line: 4964, column: 1, scope: !12162)
!12181 = distinct !DISubprogram(name: "pci_probe_reset_slot", scope: !3, file: !3, line: 5442, type: !12182, scopeLine: 5443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12182 = !DISubroutineType(types: !12183)
!12183 = !{!304, !285}
!12184 = !DILocalVariable(name: "slot", arg: 1, scope: !12181, file: !3, line: 5442, type: !285)
!12185 = !DILocation(line: 5442, column: 43, scope: !12181)
!12186 = !DILocation(line: 5444, column: 24, scope: !12181)
!12187 = !DILocation(line: 5444, column: 9, scope: !12181)
!12188 = !DILocation(line: 5444, column: 2, scope: !12181)
!12189 = distinct !DISubprogram(name: "pci_slot_reset", scope: !3, file: !3, line: 5416, type: !12190, scopeLine: 5417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12190 = !DISubroutineType(types: !12191)
!12191 = !{!304, !285, !304}
!12192 = !DILocalVariable(name: "slot", arg: 1, scope: !12189, file: !3, line: 5416, type: !285)
!12193 = !DILocation(line: 5416, column: 44, scope: !12189)
!12194 = !DILocalVariable(name: "probe", arg: 2, scope: !12189, file: !3, line: 5416, type: !304)
!12195 = !DILocation(line: 5416, column: 54, scope: !12189)
!12196 = !DILocalVariable(name: "rc", scope: !12189, file: !3, line: 5418, type: !304)
!12197 = !DILocation(line: 5418, column: 6, scope: !12189)
!12198 = !DILocation(line: 5420, column: 7, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 5420, column: 6)
!12200 = !DILocation(line: 5420, column: 12, scope: !12199)
!12201 = !DILocation(line: 5420, column: 35, scope: !12199)
!12202 = !DILocation(line: 5420, column: 16, scope: !12199)
!12203 = !DILocation(line: 5420, column: 6, scope: !12189)
!12204 = !DILocation(line: 5421, column: 3, scope: !12199)
!12205 = !DILocation(line: 5423, column: 7, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 5423, column: 6)
!12207 = !DILocation(line: 5423, column: 6, scope: !12189)
!12208 = !DILocation(line: 5424, column: 17, scope: !12206)
!12209 = !DILocation(line: 5424, column: 3, scope: !12206)
!12210 = !DILocation(line: 5426, column: 2, scope: !12189)
!12211 = !DILocation(line: 5426, column: 2, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 5426, column: 2)
!12213 = !DILocation(line: 5426, column: 2, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12212, file: !3, line: 5426, column: 2)
!12215 = !DILocation(line: 5428, column: 30, scope: !12189)
!12216 = !DILocation(line: 5428, column: 36, scope: !12189)
!12217 = !DILocation(line: 5428, column: 45, scope: !12189)
!12218 = !DILocation(line: 5428, column: 7, scope: !12189)
!12219 = !DILocation(line: 5428, column: 5, scope: !12189)
!12220 = !DILocation(line: 5430, column: 7, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 5430, column: 6)
!12222 = !DILocation(line: 5430, column: 6, scope: !12189)
!12223 = !DILocation(line: 5431, column: 19, scope: !12221)
!12224 = !DILocation(line: 5431, column: 3, scope: !12221)
!12225 = !DILocation(line: 5433, column: 9, scope: !12189)
!12226 = !DILocation(line: 5433, column: 2, scope: !12189)
!12227 = !DILocation(line: 5434, column: 1, scope: !12189)
!12228 = distinct !DISubprogram(name: "pci_bus_error_reset", scope: !3, file: !3, line: 5512, type: !3545, scopeLine: 5513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12229 = !DILocalVariable(name: "bridge", arg: 1, scope: !12228, file: !3, line: 5512, type: !273)
!12230 = !DILocation(line: 5512, column: 41, scope: !12228)
!12231 = !DILocalVariable(name: "bus", scope: !12228, file: !3, line: 5514, type: !259)
!12232 = !DILocation(line: 5514, column: 18, scope: !12228)
!12233 = !DILocation(line: 5514, column: 24, scope: !12228)
!12234 = !DILocation(line: 5514, column: 32, scope: !12228)
!12235 = !DILocalVariable(name: "slot", scope: !12228, file: !3, line: 5515, type: !285)
!12236 = !DILocation(line: 5515, column: 19, scope: !12228)
!12237 = !DILocation(line: 5517, column: 7, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12228, file: !3, line: 5517, column: 6)
!12239 = !DILocation(line: 5517, column: 6, scope: !12228)
!12240 = !DILocation(line: 5518, column: 3, scope: !12238)
!12241 = !DILocation(line: 5520, column: 2, scope: !12228)
!12242 = !DILocation(line: 5521, column: 18, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12228, file: !3, line: 5521, column: 6)
!12244 = !DILocation(line: 5521, column: 23, scope: !12243)
!12245 = !DILocation(line: 5521, column: 6, scope: !12243)
!12246 = !DILocation(line: 5521, column: 6, scope: !12228)
!12247 = !DILocation(line: 5522, column: 3, scope: !12243)
!12248 = !DILocalVariable(name: "__mptr", scope: !12249, file: !3, line: 5524, type: !258)
!12249 = distinct !DILexicalBlock(scope: !12250, file: !3, line: 5524, column: 2)
!12250 = distinct !DILexicalBlock(scope: !12228, file: !3, line: 5524, column: 2)
!12251 = !DILocation(line: 5524, column: 2, scope: !12249)
!12252 = !DILocation(line: 5524, column: 2, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12249, file: !3, line: 5524, column: 2)
!12254 = !DILocation(line: 5524, column: 2, scope: !12250)
!12255 = !DILocation(line: 5524, column: 2, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12250, file: !3, line: 5524, column: 2)
!12257 = !DILocation(line: 5525, column: 28, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 5525, column: 7)
!12259 = !DILocation(line: 5525, column: 7, scope: !12258)
!12260 = !DILocation(line: 5525, column: 7, scope: !12256)
!12261 = !DILocation(line: 5526, column: 4, scope: !12258)
!12262 = !DILocation(line: 5525, column: 32, scope: !12258)
!12263 = !DILocalVariable(name: "__mptr", scope: !12264, file: !3, line: 5524, type: !258)
!12264 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 5524, column: 2)
!12265 = !DILocation(line: 5524, column: 2, scope: !12264)
!12266 = !DILocation(line: 5524, column: 2, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12264, file: !3, line: 5524, column: 2)
!12268 = distinct !{!12268, !12254, !12269}
!12269 = !DILocation(line: 5526, column: 9, scope: !12250)
!12270 = !DILocalVariable(name: "__mptr", scope: !12271, file: !3, line: 5528, type: !258)
!12271 = distinct !DILexicalBlock(scope: !12272, file: !3, line: 5528, column: 2)
!12272 = distinct !DILexicalBlock(scope: !12228, file: !3, line: 5528, column: 2)
!12273 = !DILocation(line: 5528, column: 2, scope: !12271)
!12274 = !DILocation(line: 5528, column: 2, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 5528, column: 2)
!12276 = !DILocation(line: 5528, column: 2, scope: !12272)
!12277 = !DILocation(line: 5528, column: 2, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12272, file: !3, line: 5528, column: 2)
!12279 = !DILocation(line: 5529, column: 22, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 5529, column: 7)
!12281 = !DILocation(line: 5529, column: 7, scope: !12280)
!12282 = !DILocation(line: 5529, column: 7, scope: !12278)
!12283 = !DILocation(line: 5530, column: 4, scope: !12280)
!12284 = !DILocation(line: 5529, column: 29, scope: !12280)
!12285 = !DILocalVariable(name: "__mptr", scope: !12286, file: !3, line: 5528, type: !258)
!12286 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 5528, column: 2)
!12287 = !DILocation(line: 5528, column: 2, scope: !12286)
!12288 = !DILocation(line: 5528, column: 2, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12286, file: !3, line: 5528, column: 2)
!12290 = distinct !{!12290, !12276, !12291}
!12291 = !DILocation(line: 5530, column: 9, scope: !12272)
!12292 = !DILocation(line: 5532, column: 2, scope: !12228)
!12293 = !DILocation(line: 5533, column: 2, scope: !12228)
!12294 = !DILabel(scope: !12228, name: "bus_reset", file: !3, line: 5534)
!12295 = !DILocation(line: 5534, column: 1, scope: !12228)
!12296 = !DILocation(line: 5535, column: 2, scope: !12228)
!12297 = !DILocation(line: 5536, column: 23, scope: !12228)
!12298 = !DILocation(line: 5536, column: 31, scope: !12228)
!12299 = !DILocation(line: 5536, column: 9, scope: !12228)
!12300 = !DILocation(line: 5536, column: 2, scope: !12228)
!12301 = !DILocation(line: 5537, column: 1, scope: !12228)
!12302 = distinct !DISubprogram(name: "pci_bus_reset", scope: !3, file: !3, line: 5483, type: !12303, scopeLine: 5484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12303 = !DISubroutineType(types: !12304)
!12304 = !{!304, !259, !304}
!12305 = !DILocalVariable(name: "bus", arg: 1, scope: !12302, file: !3, line: 5483, type: !259)
!12306 = !DILocation(line: 5483, column: 42, scope: !12302)
!12307 = !DILocalVariable(name: "probe", arg: 2, scope: !12302, file: !3, line: 5483, type: !304)
!12308 = !DILocation(line: 5483, column: 51, scope: !12302)
!12309 = !DILocalVariable(name: "ret", scope: !12302, file: !3, line: 5485, type: !304)
!12310 = !DILocation(line: 5485, column: 6, scope: !12302)
!12311 = !DILocation(line: 5487, column: 7, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 5487, column: 6)
!12313 = !DILocation(line: 5487, column: 12, scope: !12312)
!12314 = !DILocation(line: 5487, column: 17, scope: !12312)
!12315 = !DILocation(line: 5487, column: 39, scope: !12312)
!12316 = !DILocation(line: 5487, column: 21, scope: !12312)
!12317 = !DILocation(line: 5487, column: 6, scope: !12302)
!12318 = !DILocation(line: 5488, column: 3, scope: !12312)
!12319 = !DILocation(line: 5490, column: 6, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 5490, column: 6)
!12321 = !DILocation(line: 5490, column: 6, scope: !12302)
!12322 = !DILocation(line: 5491, column: 3, scope: !12320)
!12323 = !DILocation(line: 5493, column: 15, scope: !12302)
!12324 = !DILocation(line: 5493, column: 2, scope: !12302)
!12325 = !DILocation(line: 5495, column: 2, scope: !12302)
!12326 = !DILocation(line: 5495, column: 2, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 5495, column: 2)
!12328 = !DILocation(line: 5495, column: 2, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12327, file: !3, line: 5495, column: 2)
!12330 = !DILocation(line: 5497, column: 39, scope: !12302)
!12331 = !DILocation(line: 5497, column: 44, scope: !12302)
!12332 = !DILocation(line: 5497, column: 8, scope: !12302)
!12333 = !DILocation(line: 5497, column: 6, scope: !12302)
!12334 = !DILocation(line: 5499, column: 17, scope: !12302)
!12335 = !DILocation(line: 5499, column: 2, scope: !12302)
!12336 = !DILocation(line: 5501, column: 9, scope: !12302)
!12337 = !DILocation(line: 5501, column: 2, scope: !12302)
!12338 = !DILocation(line: 5502, column: 1, scope: !12302)
!12339 = distinct !DISubprogram(name: "pci_probe_reset_bus", scope: !3, file: !3, line: 5545, type: !4272, scopeLine: 5546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12340 = !DILocalVariable(name: "bus", arg: 1, scope: !12339, file: !3, line: 5545, type: !259)
!12341 = !DILocation(line: 5545, column: 41, scope: !12339)
!12342 = !DILocation(line: 5547, column: 23, scope: !12339)
!12343 = !DILocation(line: 5547, column: 9, scope: !12339)
!12344 = !DILocation(line: 5547, column: 2, scope: !12339)
!12345 = distinct !DISubprogram(name: "pci_reset_bus", scope: !3, file: !3, line: 5583, type: !3545, scopeLine: 5584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12346 = !DILocalVariable(name: "pdev", arg: 1, scope: !12345, file: !3, line: 5583, type: !273)
!12347 = !DILocation(line: 5583, column: 35, scope: !12345)
!12348 = !DILocation(line: 5585, column: 32, scope: !12345)
!12349 = !DILocation(line: 5585, column: 38, scope: !12345)
!12350 = !DILocation(line: 5585, column: 11, scope: !12345)
!12351 = !DILocation(line: 5585, column: 9, scope: !12345)
!12352 = !DILocation(line: 5586, column: 23, scope: !12345)
!12353 = !DILocation(line: 5586, column: 29, scope: !12345)
!12354 = !DILocation(line: 5586, column: 6, scope: !12345)
!12355 = !DILocation(line: 5586, column: 53, scope: !12345)
!12356 = !DILocation(line: 5586, column: 59, scope: !12345)
!12357 = !DILocation(line: 5586, column: 37, scope: !12345)
!12358 = !DILocation(line: 5585, column: 2, scope: !12345)
!12359 = distinct !DISubprogram(name: "__pci_reset_slot", scope: !3, file: !3, line: 5463, type: !12182, scopeLine: 5464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12360 = !DILocalVariable(name: "slot", arg: 1, scope: !12359, file: !3, line: 5463, type: !285)
!12361 = !DILocation(line: 5463, column: 46, scope: !12359)
!12362 = !DILocalVariable(name: "rc", scope: !12359, file: !3, line: 5465, type: !304)
!12363 = !DILocation(line: 5465, column: 6, scope: !12359)
!12364 = !DILocation(line: 5467, column: 22, scope: !12359)
!12365 = !DILocation(line: 5467, column: 7, scope: !12359)
!12366 = !DILocation(line: 5467, column: 5, scope: !12359)
!12367 = !DILocation(line: 5468, column: 6, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12359, file: !3, line: 5468, column: 6)
!12369 = !DILocation(line: 5468, column: 6, scope: !12359)
!12370 = !DILocation(line: 5469, column: 10, scope: !12368)
!12371 = !DILocation(line: 5469, column: 3, scope: !12368)
!12372 = !DILocation(line: 5471, column: 23, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12359, file: !3, line: 5471, column: 6)
!12374 = !DILocation(line: 5471, column: 6, scope: !12373)
!12375 = !DILocation(line: 5471, column: 6, scope: !12359)
!12376 = !DILocation(line: 5472, column: 36, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12373, file: !3, line: 5471, column: 30)
!12378 = !DILocation(line: 5472, column: 3, scope: !12377)
!12379 = !DILocation(line: 5473, column: 3, scope: !12377)
!12380 = !DILocation(line: 5473, column: 3, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12377, file: !3, line: 5473, column: 3)
!12382 = !DILocation(line: 5473, column: 3, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12381, file: !3, line: 5473, column: 3)
!12384 = !DILocation(line: 5474, column: 31, scope: !12377)
!12385 = !DILocation(line: 5474, column: 37, scope: !12377)
!12386 = !DILocation(line: 5474, column: 8, scope: !12377)
!12387 = !DILocation(line: 5474, column: 6, scope: !12377)
!12388 = !DILocation(line: 5475, column: 27, scope: !12377)
!12389 = !DILocation(line: 5475, column: 3, scope: !12377)
!12390 = !DILocation(line: 5476, column: 19, scope: !12377)
!12391 = !DILocation(line: 5476, column: 3, scope: !12377)
!12392 = !DILocation(line: 5477, column: 2, scope: !12377)
!12393 = !DILocation(line: 5478, column: 6, scope: !12373)
!12394 = !DILocation(line: 5480, column: 9, scope: !12359)
!12395 = !DILocation(line: 5480, column: 2, scope: !12359)
!12396 = !DILocation(line: 5481, column: 1, scope: !12359)
!12397 = distinct !DISubprogram(name: "__pci_reset_bus", scope: !3, file: !3, line: 5557, type: !4272, scopeLine: 5558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12398 = !DILocalVariable(name: "bus", arg: 1, scope: !12397, file: !3, line: 5557, type: !259)
!12399 = !DILocation(line: 5557, column: 44, scope: !12397)
!12400 = !DILocalVariable(name: "rc", scope: !12397, file: !3, line: 5559, type: !304)
!12401 = !DILocation(line: 5559, column: 6, scope: !12397)
!12402 = !DILocation(line: 5561, column: 21, scope: !12397)
!12403 = !DILocation(line: 5561, column: 7, scope: !12397)
!12404 = !DILocation(line: 5561, column: 5, scope: !12397)
!12405 = !DILocation(line: 5562, column: 6, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12397, file: !3, line: 5562, column: 6)
!12407 = !DILocation(line: 5562, column: 6, scope: !12397)
!12408 = !DILocation(line: 5563, column: 10, scope: !12406)
!12409 = !DILocation(line: 5563, column: 3, scope: !12406)
!12410 = !DILocation(line: 5565, column: 22, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12397, file: !3, line: 5565, column: 6)
!12412 = !DILocation(line: 5565, column: 6, scope: !12411)
!12413 = !DILocation(line: 5565, column: 6, scope: !12397)
!12414 = !DILocation(line: 5566, column: 35, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12411, file: !3, line: 5565, column: 28)
!12416 = !DILocation(line: 5566, column: 3, scope: !12415)
!12417 = !DILocation(line: 5567, column: 3, scope: !12415)
!12418 = !DILocation(line: 5567, column: 3, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12415, file: !3, line: 5567, column: 3)
!12420 = !DILocation(line: 5567, column: 3, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12419, file: !3, line: 5567, column: 3)
!12422 = !DILocation(line: 5568, column: 39, scope: !12415)
!12423 = !DILocation(line: 5568, column: 44, scope: !12415)
!12424 = !DILocation(line: 5568, column: 8, scope: !12415)
!12425 = !DILocation(line: 5568, column: 6, scope: !12415)
!12426 = !DILocation(line: 5569, column: 26, scope: !12415)
!12427 = !DILocation(line: 5569, column: 3, scope: !12415)
!12428 = !DILocation(line: 5570, column: 18, scope: !12415)
!12429 = !DILocation(line: 5570, column: 3, scope: !12415)
!12430 = !DILocation(line: 5571, column: 2, scope: !12415)
!12431 = !DILocation(line: 5572, column: 6, scope: !12411)
!12432 = !DILocation(line: 5574, column: 9, scope: !12397)
!12433 = !DILocation(line: 5574, column: 2, scope: !12397)
!12434 = !DILocation(line: 5575, column: 1, scope: !12397)
!12435 = distinct !DISubprogram(name: "pcix_get_max_mmrbc", scope: !3, file: !3, line: 5597, type: !3545, scopeLine: 5598, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12436 = !DILocalVariable(name: "dev", arg: 1, scope: !12435, file: !3, line: 5597, type: !273)
!12437 = !DILocation(line: 5597, column: 40, scope: !12435)
!12438 = !DILocalVariable(name: "cap", scope: !12435, file: !3, line: 5599, type: !304)
!12439 = !DILocation(line: 5599, column: 6, scope: !12435)
!12440 = !DILocalVariable(name: "stat", scope: !12435, file: !3, line: 5600, type: !319)
!12441 = !DILocation(line: 5600, column: 6, scope: !12435)
!12442 = !DILocation(line: 5602, column: 28, scope: !12435)
!12443 = !DILocation(line: 5602, column: 8, scope: !12435)
!12444 = !DILocation(line: 5602, column: 6, scope: !12435)
!12445 = !DILocation(line: 5603, column: 7, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12435, file: !3, line: 5603, column: 6)
!12447 = !DILocation(line: 5603, column: 6, scope: !12435)
!12448 = !DILocation(line: 5604, column: 3, scope: !12446)
!12449 = !DILocation(line: 5606, column: 28, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12435, file: !3, line: 5606, column: 6)
!12451 = !DILocation(line: 5606, column: 33, scope: !12450)
!12452 = !DILocation(line: 5606, column: 37, scope: !12450)
!12453 = !DILocation(line: 5606, column: 6, scope: !12450)
!12454 = !DILocation(line: 5606, column: 6, scope: !12435)
!12455 = !DILocation(line: 5607, column: 3, scope: !12450)
!12456 = !DILocation(line: 5609, column: 18, scope: !12435)
!12457 = !DILocation(line: 5609, column: 23, scope: !12435)
!12458 = !DILocation(line: 5609, column: 48, scope: !12435)
!12459 = !DILocation(line: 5609, column: 13, scope: !12435)
!12460 = !DILocation(line: 5609, column: 2, scope: !12435)
!12461 = !DILocation(line: 5610, column: 1, scope: !12435)
!12462 = distinct !DISubprogram(name: "pcix_get_mmrbc", scope: !3, file: !3, line: 5620, type: !3545, scopeLine: 5621, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12463 = !DILocalVariable(name: "dev", arg: 1, scope: !12462, file: !3, line: 5620, type: !273)
!12464 = !DILocation(line: 5620, column: 36, scope: !12462)
!12465 = !DILocalVariable(name: "cap", scope: !12462, file: !3, line: 5622, type: !304)
!12466 = !DILocation(line: 5622, column: 6, scope: !12462)
!12467 = !DILocalVariable(name: "cmd", scope: !12462, file: !3, line: 5623, type: !979)
!12468 = !DILocation(line: 5623, column: 6, scope: !12462)
!12469 = !DILocation(line: 5625, column: 28, scope: !12462)
!12470 = !DILocation(line: 5625, column: 8, scope: !12462)
!12471 = !DILocation(line: 5625, column: 6, scope: !12462)
!12472 = !DILocation(line: 5626, column: 7, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12462, file: !3, line: 5626, column: 6)
!12474 = !DILocation(line: 5626, column: 6, scope: !12462)
!12475 = !DILocation(line: 5627, column: 3, scope: !12473)
!12476 = !DILocation(line: 5629, column: 27, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12462, file: !3, line: 5629, column: 6)
!12478 = !DILocation(line: 5629, column: 32, scope: !12477)
!12479 = !DILocation(line: 5629, column: 36, scope: !12477)
!12480 = !DILocation(line: 5629, column: 6, scope: !12477)
!12481 = !DILocation(line: 5629, column: 6, scope: !12462)
!12482 = !DILocation(line: 5630, column: 3, scope: !12477)
!12483 = !DILocation(line: 5632, column: 18, scope: !12462)
!12484 = !DILocation(line: 5632, column: 22, scope: !12462)
!12485 = !DILocation(line: 5632, column: 44, scope: !12462)
!12486 = !DILocation(line: 5632, column: 13, scope: !12462)
!12487 = !DILocation(line: 5632, column: 2, scope: !12462)
!12488 = !DILocation(line: 5633, column: 1, scope: !12462)
!12489 = distinct !DISubprogram(name: "pcix_set_mmrbc", scope: !3, file: !3, line: 5645, type: !3550, scopeLine: 5646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12490 = !DILocalVariable(name: "x", arg: 1, scope: !12491, file: !12492, line: 283, type: !304)
!12491 = distinct !DISubprogram(name: "ffs", scope: !12492, file: !12492, line: 283, type: !3170, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12492 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!12493 = !DILocation(line: 283, column: 36, scope: !12491, inlinedAt: !12494)
!12494 = distinct !DILocation(line: 5654, column: 6, scope: !12489)
!12495 = !DILocalVariable(name: "r", scope: !12491, file: !12492, line: 285, type: !304)
!12496 = !DILocation(line: 285, column: 6, scope: !12491, inlinedAt: !12494)
!12497 = !DILocalVariable(name: "dev", arg: 1, scope: !12489, file: !3, line: 5645, type: !273)
!12498 = !DILocation(line: 5645, column: 36, scope: !12489)
!12499 = !DILocalVariable(name: "mmrbc", arg: 2, scope: !12489, file: !3, line: 5645, type: !304)
!12500 = !DILocation(line: 5645, column: 45, scope: !12489)
!12501 = !DILocalVariable(name: "cap", scope: !12489, file: !3, line: 5647, type: !304)
!12502 = !DILocation(line: 5647, column: 6, scope: !12489)
!12503 = !DILocalVariable(name: "stat", scope: !12489, file: !3, line: 5648, type: !319)
!12504 = !DILocation(line: 5648, column: 6, scope: !12489)
!12505 = !DILocalVariable(name: "v", scope: !12489, file: !3, line: 5648, type: !319)
!12506 = !DILocation(line: 5648, column: 12, scope: !12489)
!12507 = !DILocalVariable(name: "o", scope: !12489, file: !3, line: 5648, type: !319)
!12508 = !DILocation(line: 5648, column: 15, scope: !12489)
!12509 = !DILocalVariable(name: "cmd", scope: !12489, file: !3, line: 5649, type: !979)
!12510 = !DILocation(line: 5649, column: 6, scope: !12489)
!12511 = !DILocation(line: 5651, column: 6, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12489, file: !3, line: 5651, column: 6)
!12513 = !DILocation(line: 5651, column: 12, scope: !12512)
!12514 = !DILocation(line: 5651, column: 18, scope: !12512)
!12515 = !DILocation(line: 5651, column: 21, scope: !12512)
!12516 = !DILocation(line: 5651, column: 27, scope: !12512)
!12517 = !DILocation(line: 5651, column: 34, scope: !12512)
!12518 = !DILocation(line: 5651, column: 52, scope: !12512)
!12519 = !DILocation(line: 5651, column: 38, scope: !12512)
!12520 = !DILocation(line: 5651, column: 6, scope: !12489)
!12521 = !DILocation(line: 5652, column: 3, scope: !12512)
!12522 = !DILocation(line: 5654, column: 10, scope: !12489)
!12523 = !DILocation(line: 299, column: 14, scope: !12491, inlinedAt: !12494)
!12524 = !DILocation(line: 297, column: 2, scope: !12491, inlinedAt: !12494)
!12525 = !{i32 486009}
!12526 = !DILocation(line: 310, column: 9, scope: !12491, inlinedAt: !12494)
!12527 = !DILocation(line: 310, column: 11, scope: !12491, inlinedAt: !12494)
!12528 = !DILocation(line: 5654, column: 17, scope: !12489)
!12529 = !DILocation(line: 5654, column: 4, scope: !12489)
!12530 = !DILocation(line: 5656, column: 28, scope: !12489)
!12531 = !DILocation(line: 5656, column: 8, scope: !12489)
!12532 = !DILocation(line: 5656, column: 6, scope: !12489)
!12533 = !DILocation(line: 5657, column: 7, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12489, file: !3, line: 5657, column: 6)
!12535 = !DILocation(line: 5657, column: 6, scope: !12489)
!12536 = !DILocation(line: 5658, column: 3, scope: !12534)
!12537 = !DILocation(line: 5660, column: 28, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12489, file: !3, line: 5660, column: 6)
!12539 = !DILocation(line: 5660, column: 33, scope: !12538)
!12540 = !DILocation(line: 5660, column: 37, scope: !12538)
!12541 = !DILocation(line: 5660, column: 6, scope: !12538)
!12542 = !DILocation(line: 5660, column: 6, scope: !12489)
!12543 = !DILocation(line: 5661, column: 3, scope: !12538)
!12544 = !DILocation(line: 5663, column: 6, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12489, file: !3, line: 5663, column: 6)
!12546 = !DILocation(line: 5663, column: 11, scope: !12545)
!12547 = !DILocation(line: 5663, column: 16, scope: !12545)
!12548 = !DILocation(line: 5663, column: 41, scope: !12545)
!12549 = !DILocation(line: 5663, column: 8, scope: !12545)
!12550 = !DILocation(line: 5663, column: 6, scope: !12489)
!12551 = !DILocation(line: 5664, column: 3, scope: !12545)
!12552 = !DILocation(line: 5666, column: 27, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12489, file: !3, line: 5666, column: 6)
!12554 = !DILocation(line: 5666, column: 32, scope: !12553)
!12555 = !DILocation(line: 5666, column: 36, scope: !12553)
!12556 = !DILocation(line: 5666, column: 6, scope: !12553)
!12557 = !DILocation(line: 5666, column: 6, scope: !12489)
!12558 = !DILocation(line: 5667, column: 3, scope: !12553)
!12559 = !DILocation(line: 5669, column: 7, scope: !12489)
!12560 = !DILocation(line: 5669, column: 11, scope: !12489)
!12561 = !DILocation(line: 5669, column: 33, scope: !12489)
!12562 = !DILocation(line: 5669, column: 4, scope: !12489)
!12563 = !DILocation(line: 5670, column: 6, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12489, file: !3, line: 5670, column: 6)
!12565 = !DILocation(line: 5670, column: 11, scope: !12564)
!12566 = !DILocation(line: 5670, column: 8, scope: !12564)
!12567 = !DILocation(line: 5670, column: 6, scope: !12489)
!12568 = !DILocation(line: 5671, column: 7, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12570, file: !3, line: 5671, column: 7)
!12570 = distinct !DILexicalBlock(scope: !12564, file: !3, line: 5670, column: 14)
!12571 = !DILocation(line: 5671, column: 11, scope: !12569)
!12572 = !DILocation(line: 5671, column: 9, scope: !12569)
!12573 = !DILocation(line: 5671, column: 13, scope: !12569)
!12574 = !DILocation(line: 5671, column: 17, scope: !12569)
!12575 = !DILocation(line: 5671, column: 22, scope: !12569)
!12576 = !DILocation(line: 5671, column: 27, scope: !12569)
!12577 = !DILocation(line: 5671, column: 37, scope: !12569)
!12578 = !DILocation(line: 5671, column: 7, scope: !12570)
!12579 = !DILocation(line: 5672, column: 4, scope: !12569)
!12580 = !DILocation(line: 5674, column: 7, scope: !12570)
!12581 = !DILocation(line: 5675, column: 10, scope: !12570)
!12582 = !DILocation(line: 5675, column: 12, scope: !12570)
!12583 = !DILocation(line: 5675, column: 7, scope: !12570)
!12584 = !DILocation(line: 5676, column: 29, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12570, file: !3, line: 5676, column: 7)
!12586 = !DILocation(line: 5676, column: 34, scope: !12585)
!12587 = !DILocation(line: 5676, column: 38, scope: !12585)
!12588 = !DILocation(line: 5676, column: 51, scope: !12585)
!12589 = !DILocation(line: 5676, column: 7, scope: !12585)
!12590 = !DILocation(line: 5676, column: 7, scope: !12570)
!12591 = !DILocation(line: 5677, column: 4, scope: !12585)
!12592 = !DILocation(line: 5678, column: 2, scope: !12570)
!12593 = !DILocation(line: 5679, column: 2, scope: !12489)
!12594 = !DILocation(line: 5680, column: 1, scope: !12489)
!12595 = distinct !DISubprogram(name: "is_power_of_2", scope: !12596, file: !12596, line: 45, type: !12597, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12596 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!12597 = !DISubroutineType(types: !12598)
!12598 = !{!609, !448}
!12599 = !DILocalVariable(name: "n", arg: 1, scope: !12595, file: !12596, line: 45, type: !448)
!12600 = !DILocation(line: 45, column: 34, scope: !12595)
!12601 = !DILocation(line: 47, column: 10, scope: !12595)
!12602 = !DILocation(line: 47, column: 12, scope: !12595)
!12603 = !DILocation(line: 47, column: 17, scope: !12595)
!12604 = !DILocation(line: 47, column: 22, scope: !12595)
!12605 = !DILocation(line: 47, column: 27, scope: !12595)
!12606 = !DILocation(line: 47, column: 29, scope: !12595)
!12607 = !DILocation(line: 47, column: 24, scope: !12595)
!12608 = !DILocation(line: 47, column: 35, scope: !12595)
!12609 = !DILocation(line: 0, scope: !12595)
!12610 = !DILocation(line: 47, column: 2, scope: !12595)
!12611 = distinct !DISubprogram(name: "pcie_get_readrq", scope: !3, file: !3, line: 5689, type: !3545, scopeLine: 5690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12612 = !DILocalVariable(name: "dev", arg: 1, scope: !12611, file: !3, line: 5689, type: !273)
!12613 = !DILocation(line: 5689, column: 37, scope: !12611)
!12614 = !DILocalVariable(name: "ctl", scope: !12611, file: !3, line: 5691, type: !979)
!12615 = !DILocation(line: 5691, column: 6, scope: !12611)
!12616 = !DILocation(line: 5693, column: 28, scope: !12611)
!12617 = !DILocation(line: 5693, column: 2, scope: !12611)
!12618 = !DILocation(line: 5695, column: 18, scope: !12611)
!12619 = !DILocation(line: 5695, column: 22, scope: !12611)
!12620 = !DILocation(line: 5695, column: 47, scope: !12611)
!12621 = !DILocation(line: 5695, column: 13, scope: !12611)
!12622 = !DILocation(line: 5695, column: 2, scope: !12611)
!12623 = distinct !DISubprogram(name: "pcie_set_readrq", scope: !3, file: !3, line: 5707, type: !3550, scopeLine: 5708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12624 = !DILocation(line: 283, column: 36, scope: !12491, inlinedAt: !12625)
!12625 = distinct !DILocation(line: 5727, column: 7, scope: !12623)
!12626 = !DILocation(line: 285, column: 6, scope: !12491, inlinedAt: !12625)
!12627 = !DILocalVariable(name: "dev", arg: 1, scope: !12623, file: !3, line: 5707, type: !273)
!12628 = !DILocation(line: 5707, column: 37, scope: !12623)
!12629 = !DILocalVariable(name: "rq", arg: 2, scope: !12623, file: !3, line: 5707, type: !304)
!12630 = !DILocation(line: 5707, column: 46, scope: !12623)
!12631 = !DILocalVariable(name: "v", scope: !12623, file: !3, line: 5709, type: !979)
!12632 = !DILocation(line: 5709, column: 6, scope: !12623)
!12633 = !DILocalVariable(name: "ret", scope: !12623, file: !3, line: 5710, type: !304)
!12634 = !DILocation(line: 5710, column: 6, scope: !12623)
!12635 = !DILocation(line: 5712, column: 6, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 5712, column: 6)
!12637 = !DILocation(line: 5712, column: 9, scope: !12636)
!12638 = !DILocation(line: 5712, column: 15, scope: !12636)
!12639 = !DILocation(line: 5712, column: 18, scope: !12636)
!12640 = !DILocation(line: 5712, column: 21, scope: !12636)
!12641 = !DILocation(line: 5712, column: 28, scope: !12636)
!12642 = !DILocation(line: 5712, column: 46, scope: !12636)
!12643 = !DILocation(line: 5712, column: 32, scope: !12636)
!12644 = !DILocation(line: 5712, column: 6, scope: !12623)
!12645 = !DILocation(line: 5713, column: 3, scope: !12636)
!12646 = !DILocation(line: 5720, column: 6, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 5720, column: 6)
!12648 = !DILocation(line: 5720, column: 22, scope: !12647)
!12649 = !DILocation(line: 5720, column: 6, scope: !12623)
!12650 = !DILocalVariable(name: "mps", scope: !12651, file: !3, line: 5721, type: !304)
!12651 = distinct !DILexicalBlock(scope: !12647, file: !3, line: 5720, column: 47)
!12652 = !DILocation(line: 5721, column: 7, scope: !12651)
!12653 = !DILocation(line: 5721, column: 26, scope: !12651)
!12654 = !DILocation(line: 5721, column: 13, scope: !12651)
!12655 = !DILocation(line: 5723, column: 7, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12651, file: !3, line: 5723, column: 7)
!12657 = !DILocation(line: 5723, column: 13, scope: !12656)
!12658 = !DILocation(line: 5723, column: 11, scope: !12656)
!12659 = !DILocation(line: 5723, column: 7, scope: !12651)
!12660 = !DILocation(line: 5724, column: 9, scope: !12656)
!12661 = !DILocation(line: 5724, column: 7, scope: !12656)
!12662 = !DILocation(line: 5724, column: 4, scope: !12656)
!12663 = !DILocation(line: 5725, column: 2, scope: !12651)
!12664 = !DILocation(line: 5727, column: 11, scope: !12623)
!12665 = !DILocation(line: 299, column: 14, scope: !12491, inlinedAt: !12625)
!12666 = !DILocation(line: 297, column: 2, scope: !12491, inlinedAt: !12625)
!12667 = !DILocation(line: 310, column: 9, scope: !12491, inlinedAt: !12625)
!12668 = !DILocation(line: 310, column: 11, scope: !12491, inlinedAt: !12625)
!12669 = !DILocation(line: 5727, column: 15, scope: !12623)
!12670 = !DILocation(line: 5727, column: 20, scope: !12623)
!12671 = !DILocation(line: 5727, column: 6, scope: !12623)
!12672 = !DILocation(line: 5727, column: 4, scope: !12623)
!12673 = !DILocation(line: 5729, column: 43, scope: !12623)
!12674 = !DILocation(line: 5730, column: 32, scope: !12623)
!12675 = !DILocation(line: 5729, column: 8, scope: !12623)
!12676 = !DILocation(line: 5729, column: 6, scope: !12623)
!12677 = !DILocation(line: 5732, column: 30, scope: !12623)
!12678 = !DILocation(line: 5732, column: 9, scope: !12623)
!12679 = !DILocation(line: 5732, column: 2, scope: !12623)
!12680 = !DILocation(line: 5733, column: 1, scope: !12623)
!12681 = distinct !DISubprogram(name: "pcie_get_mps", scope: !3, file: !3, line: 5742, type: !3545, scopeLine: 5743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12682 = !DILocalVariable(name: "dev", arg: 1, scope: !12681, file: !3, line: 5742, type: !273)
!12683 = !DILocation(line: 5742, column: 34, scope: !12681)
!12684 = !DILocalVariable(name: "ctl", scope: !12681, file: !3, line: 5744, type: !979)
!12685 = !DILocation(line: 5744, column: 6, scope: !12681)
!12686 = !DILocation(line: 5746, column: 28, scope: !12681)
!12687 = !DILocation(line: 5746, column: 2, scope: !12681)
!12688 = !DILocation(line: 5748, column: 18, scope: !12681)
!12689 = !DILocation(line: 5748, column: 22, scope: !12681)
!12690 = !DILocation(line: 5748, column: 48, scope: !12681)
!12691 = !DILocation(line: 5748, column: 13, scope: !12681)
!12692 = !DILocation(line: 5748, column: 2, scope: !12681)
!12693 = distinct !DISubprogram(name: "pcibios_err_to_errno", scope: !6, file: !6, line: 706, type: !3170, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12694 = !DILocalVariable(name: "err", arg: 1, scope: !12693, file: !6, line: 706, type: !304)
!12695 = !DILocation(line: 706, column: 44, scope: !12693)
!12696 = !DILocation(line: 708, column: 6, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12693, file: !6, line: 708, column: 6)
!12698 = !DILocation(line: 708, column: 10, scope: !12697)
!12699 = !DILocation(line: 708, column: 6, scope: !12693)
!12700 = !DILocation(line: 709, column: 10, scope: !12697)
!12701 = !DILocation(line: 709, column: 3, scope: !12697)
!12702 = !DILocation(line: 711, column: 10, scope: !12693)
!12703 = !DILocation(line: 711, column: 2, scope: !12693)
!12704 = !DILocation(line: 713, column: 3, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12693, file: !6, line: 711, column: 15)
!12706 = !DILocation(line: 715, column: 3, scope: !12705)
!12707 = !DILocation(line: 717, column: 3, scope: !12705)
!12708 = !DILocation(line: 719, column: 3, scope: !12705)
!12709 = !DILocation(line: 721, column: 3, scope: !12705)
!12710 = !DILocation(line: 723, column: 3, scope: !12705)
!12711 = !DILocation(line: 726, column: 2, scope: !12693)
!12712 = !DILocation(line: 727, column: 1, scope: !12693)
!12713 = distinct !DISubprogram(name: "pcie_set_mps", scope: !3, file: !3, line: 5760, type: !3550, scopeLine: 5761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12714 = !DILocation(line: 283, column: 36, scope: !12491, inlinedAt: !12715)
!12715 = distinct !DILocation(line: 5768, column: 6, scope: !12713)
!12716 = !DILocation(line: 285, column: 6, scope: !12491, inlinedAt: !12715)
!12717 = !DILocalVariable(name: "dev", arg: 1, scope: !12713, file: !3, line: 5760, type: !273)
!12718 = !DILocation(line: 5760, column: 34, scope: !12713)
!12719 = !DILocalVariable(name: "mps", arg: 2, scope: !12713, file: !3, line: 5760, type: !304)
!12720 = !DILocation(line: 5760, column: 43, scope: !12713)
!12721 = !DILocalVariable(name: "v", scope: !12713, file: !3, line: 5762, type: !979)
!12722 = !DILocation(line: 5762, column: 6, scope: !12713)
!12723 = !DILocalVariable(name: "ret", scope: !12713, file: !3, line: 5763, type: !304)
!12724 = !DILocation(line: 5763, column: 6, scope: !12713)
!12725 = !DILocation(line: 5765, column: 6, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 5765, column: 6)
!12727 = !DILocation(line: 5765, column: 10, scope: !12726)
!12728 = !DILocation(line: 5765, column: 16, scope: !12726)
!12729 = !DILocation(line: 5765, column: 19, scope: !12726)
!12730 = !DILocation(line: 5765, column: 23, scope: !12726)
!12731 = !DILocation(line: 5765, column: 30, scope: !12726)
!12732 = !DILocation(line: 5765, column: 48, scope: !12726)
!12733 = !DILocation(line: 5765, column: 34, scope: !12726)
!12734 = !DILocation(line: 5765, column: 6, scope: !12713)
!12735 = !DILocation(line: 5766, column: 3, scope: !12726)
!12736 = !DILocation(line: 5768, column: 10, scope: !12713)
!12737 = !DILocation(line: 299, column: 14, scope: !12491, inlinedAt: !12715)
!12738 = !DILocation(line: 297, column: 2, scope: !12491, inlinedAt: !12715)
!12739 = !DILocation(line: 310, column: 9, scope: !12491, inlinedAt: !12715)
!12740 = !DILocation(line: 310, column: 11, scope: !12491, inlinedAt: !12715)
!12741 = !DILocation(line: 5768, column: 15, scope: !12713)
!12742 = !DILocation(line: 5768, column: 6, scope: !12713)
!12743 = !DILocation(line: 5768, column: 4, scope: !12713)
!12744 = !DILocation(line: 5769, column: 6, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 5769, column: 6)
!12746 = !DILocation(line: 5769, column: 10, scope: !12745)
!12747 = !DILocation(line: 5769, column: 15, scope: !12745)
!12748 = !DILocation(line: 5769, column: 8, scope: !12745)
!12749 = !DILocation(line: 5769, column: 6, scope: !12713)
!12750 = !DILocation(line: 5770, column: 3, scope: !12745)
!12751 = !DILocation(line: 5771, column: 4, scope: !12713)
!12752 = !DILocation(line: 5773, column: 43, scope: !12713)
!12753 = !DILocation(line: 5774, column: 33, scope: !12713)
!12754 = !DILocation(line: 5773, column: 8, scope: !12713)
!12755 = !DILocation(line: 5773, column: 6, scope: !12713)
!12756 = !DILocation(line: 5776, column: 30, scope: !12713)
!12757 = !DILocation(line: 5776, column: 9, scope: !12713)
!12758 = !DILocation(line: 5776, column: 2, scope: !12713)
!12759 = !DILocation(line: 5777, column: 1, scope: !12713)
!12760 = distinct !DISubprogram(name: "pcie_bandwidth_available", scope: !3, file: !3, line: 5794, type: !12761, scopeLine: 5797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12761 = !DISubroutineType(types: !12762)
!12762 = !{!319, !273, !10271, !12763, !12764}
!12763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!12764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!12765 = !DILocalVariable(name: "dev", arg: 1, scope: !12760, file: !3, line: 5794, type: !273)
!12766 = !DILocation(line: 5794, column: 46, scope: !12760)
!12767 = !DILocalVariable(name: "limiting_dev", arg: 2, scope: !12760, file: !3, line: 5794, type: !10271)
!12768 = !DILocation(line: 5794, column: 68, scope: !12760)
!12769 = !DILocalVariable(name: "speed", arg: 3, scope: !12760, file: !3, line: 5795, type: !12763)
!12770 = !DILocation(line: 5795, column: 29, scope: !12760)
!12771 = !DILocalVariable(name: "width", arg: 4, scope: !12760, file: !3, line: 5796, type: !12764)
!12772 = !DILocation(line: 5796, column: 31, scope: !12760)
!12773 = !DILocalVariable(name: "lnksta", scope: !12760, file: !3, line: 5798, type: !979)
!12774 = !DILocation(line: 5798, column: 6, scope: !12760)
!12775 = !DILocalVariable(name: "next_speed", scope: !12760, file: !3, line: 5799, type: !149)
!12776 = !DILocation(line: 5799, column: 21, scope: !12760)
!12777 = !DILocalVariable(name: "next_width", scope: !12760, file: !3, line: 5800, type: !182)
!12778 = !DILocation(line: 5800, column: 23, scope: !12760)
!12779 = !DILocalVariable(name: "bw", scope: !12760, file: !3, line: 5801, type: !319)
!12780 = !DILocation(line: 5801, column: 6, scope: !12760)
!12781 = !DILocalVariable(name: "next_bw", scope: !12760, file: !3, line: 5801, type: !319)
!12782 = !DILocation(line: 5801, column: 10, scope: !12760)
!12783 = !DILocation(line: 5803, column: 6, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12760, file: !3, line: 5803, column: 6)
!12785 = !DILocation(line: 5803, column: 6, scope: !12760)
!12786 = !DILocation(line: 5804, column: 4, scope: !12784)
!12787 = !DILocation(line: 5804, column: 10, scope: !12784)
!12788 = !DILocation(line: 5804, column: 3, scope: !12784)
!12789 = !DILocation(line: 5805, column: 6, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12760, file: !3, line: 5805, column: 6)
!12791 = !DILocation(line: 5805, column: 6, scope: !12760)
!12792 = !DILocation(line: 5806, column: 4, scope: !12790)
!12793 = !DILocation(line: 5806, column: 10, scope: !12790)
!12794 = !DILocation(line: 5806, column: 3, scope: !12790)
!12795 = !DILocation(line: 5808, column: 5, scope: !12760)
!12796 = !DILocation(line: 5810, column: 2, scope: !12760)
!12797 = !DILocation(line: 5810, column: 9, scope: !12760)
!12798 = !DILocation(line: 5811, column: 29, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12760, file: !3, line: 5810, column: 14)
!12800 = !DILocation(line: 5811, column: 3, scope: !12799)
!12801 = !DILocation(line: 5813, column: 32, scope: !12799)
!12802 = !DILocation(line: 5813, column: 39, scope: !12799)
!12803 = !DILocation(line: 5813, column: 16, scope: !12799)
!12804 = !DILocation(line: 5813, column: 14, scope: !12799)
!12805 = !DILocation(line: 5814, column: 17, scope: !12799)
!12806 = !DILocation(line: 5814, column: 24, scope: !12799)
!12807 = !DILocation(line: 5814, column: 46, scope: !12799)
!12808 = !DILocation(line: 5814, column: 14, scope: !12799)
!12809 = !DILocation(line: 5817, column: 13, scope: !12799)
!12810 = !DILocation(line: 5817, column: 26, scope: !12799)
!12811 = !DILocation(line: 5817, column: 24, scope: !12799)
!12812 = !DILocation(line: 5817, column: 11, scope: !12799)
!12813 = !DILocation(line: 5820, column: 8, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12799, file: !3, line: 5820, column: 7)
!12815 = !DILocation(line: 5820, column: 11, scope: !12814)
!12816 = !DILocation(line: 5820, column: 14, scope: !12814)
!12817 = !DILocation(line: 5820, column: 25, scope: !12814)
!12818 = !DILocation(line: 5820, column: 22, scope: !12814)
!12819 = !DILocation(line: 5820, column: 7, scope: !12799)
!12820 = !DILocation(line: 5821, column: 9, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12814, file: !3, line: 5820, column: 29)
!12822 = !DILocation(line: 5821, column: 7, scope: !12821)
!12823 = !DILocation(line: 5823, column: 8, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 5823, column: 8)
!12825 = !DILocation(line: 5823, column: 8, scope: !12821)
!12826 = !DILocation(line: 5824, column: 21, scope: !12824)
!12827 = !DILocation(line: 5824, column: 6, scope: !12824)
!12828 = !DILocation(line: 5824, column: 19, scope: !12824)
!12829 = !DILocation(line: 5824, column: 5, scope: !12824)
!12830 = !DILocation(line: 5825, column: 8, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 5825, column: 8)
!12832 = !DILocation(line: 5825, column: 8, scope: !12821)
!12833 = !DILocation(line: 5826, column: 14, scope: !12831)
!12834 = !DILocation(line: 5826, column: 6, scope: !12831)
!12835 = !DILocation(line: 5826, column: 12, scope: !12831)
!12836 = !DILocation(line: 5826, column: 5, scope: !12831)
!12837 = !DILocation(line: 5827, column: 8, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 5827, column: 8)
!12839 = !DILocation(line: 5827, column: 8, scope: !12821)
!12840 = !DILocation(line: 5828, column: 14, scope: !12838)
!12841 = !DILocation(line: 5828, column: 6, scope: !12838)
!12842 = !DILocation(line: 5828, column: 12, scope: !12838)
!12843 = !DILocation(line: 5828, column: 5, scope: !12838)
!12844 = !DILocation(line: 5829, column: 3, scope: !12821)
!12845 = !DILocation(line: 5831, column: 29, scope: !12799)
!12846 = !DILocation(line: 5831, column: 9, scope: !12799)
!12847 = !DILocation(line: 5831, column: 7, scope: !12799)
!12848 = distinct !{!12848, !12796, !12849}
!12849 = !DILocation(line: 5832, column: 2, scope: !12760)
!12850 = !DILocation(line: 5834, column: 9, scope: !12760)
!12851 = !DILocation(line: 5834, column: 2, scope: !12760)
!12852 = distinct !DISubprogram(name: "pcie_get_width_cap", scope: !3, file: !3, line: 5881, type: !12853, scopeLine: 5882, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12853 = !DISubroutineType(types: !12854)
!12854 = !{!182, !273}
!12855 = !DILocalVariable(name: "dev", arg: 1, scope: !12852, file: !3, line: 5881, type: !273)
!12856 = !DILocation(line: 5881, column: 57, scope: !12852)
!12857 = !DILocalVariable(name: "lnkcap", scope: !12852, file: !3, line: 5883, type: !319)
!12858 = !DILocation(line: 5883, column: 6, scope: !12852)
!12859 = !DILocation(line: 5885, column: 29, scope: !12852)
!12860 = !DILocation(line: 5885, column: 2, scope: !12852)
!12861 = !DILocation(line: 5886, column: 6, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12852, file: !3, line: 5886, column: 6)
!12863 = !DILocation(line: 5886, column: 6, scope: !12852)
!12864 = !DILocation(line: 5887, column: 11, scope: !12862)
!12865 = !DILocation(line: 5887, column: 18, scope: !12862)
!12866 = !DILocation(line: 5887, column: 40, scope: !12862)
!12867 = !DILocation(line: 5887, column: 3, scope: !12862)
!12868 = !DILocation(line: 5889, column: 2, scope: !12852)
!12869 = !DILocation(line: 5890, column: 1, scope: !12852)
!12870 = distinct !DISubprogram(name: "pcie_bandwidth_capable", scope: !3, file: !3, line: 5903, type: !12871, scopeLine: 5905, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12871 = !DISubroutineType(types: !12872)
!12872 = !{!319, !273, !12763, !12764}
!12873 = !DILocalVariable(name: "dev", arg: 1, scope: !12870, file: !3, line: 5903, type: !273)
!12874 = !DILocation(line: 5903, column: 44, scope: !12870)
!12875 = !DILocalVariable(name: "speed", arg: 2, scope: !12870, file: !3, line: 5903, type: !12763)
!12876 = !DILocation(line: 5903, column: 69, scope: !12870)
!12877 = !DILocalVariable(name: "width", arg: 3, scope: !12870, file: !3, line: 5904, type: !12764)
!12878 = !DILocation(line: 5904, column: 29, scope: !12870)
!12879 = !DILocation(line: 5906, column: 30, scope: !12870)
!12880 = !DILocation(line: 5906, column: 11, scope: !12870)
!12881 = !DILocation(line: 5906, column: 3, scope: !12870)
!12882 = !DILocation(line: 5906, column: 9, scope: !12870)
!12883 = !DILocation(line: 5907, column: 30, scope: !12870)
!12884 = !DILocation(line: 5907, column: 11, scope: !12870)
!12885 = !DILocation(line: 5907, column: 3, scope: !12870)
!12886 = !DILocation(line: 5907, column: 9, scope: !12870)
!12887 = !DILocation(line: 5909, column: 7, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12870, file: !3, line: 5909, column: 6)
!12889 = !DILocation(line: 5909, column: 6, scope: !12888)
!12890 = !DILocation(line: 5909, column: 13, scope: !12888)
!12891 = !DILocation(line: 5909, column: 34, scope: !12888)
!12892 = !DILocation(line: 5909, column: 38, scope: !12888)
!12893 = !DILocation(line: 5909, column: 37, scope: !12888)
!12894 = !DILocation(line: 5909, column: 44, scope: !12888)
!12895 = !DILocation(line: 5909, column: 6, scope: !12870)
!12896 = !DILocation(line: 5910, column: 3, scope: !12888)
!12897 = !DILocation(line: 5912, column: 10, scope: !12870)
!12898 = !DILocation(line: 5912, column: 9, scope: !12870)
!12899 = !DILocation(line: 5912, column: 18, scope: !12870)
!12900 = !DILocation(line: 5912, column: 16, scope: !12870)
!12901 = !DILocation(line: 5912, column: 2, scope: !12870)
!12902 = !DILocation(line: 5913, column: 1, scope: !12870)
!12903 = distinct !DISubprogram(name: "__pcie_print_link_status", scope: !3, file: !3, line: 5925, type: !7985, scopeLine: 5926, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12904 = !DILocalVariable(name: "dev", arg: 1, scope: !12903, file: !3, line: 5925, type: !273)
!12905 = !DILocation(line: 5925, column: 47, scope: !12903)
!12906 = !DILocalVariable(name: "verbose", arg: 2, scope: !12903, file: !3, line: 5925, type: !609)
!12907 = !DILocation(line: 5925, column: 57, scope: !12903)
!12908 = !DILocalVariable(name: "width", scope: !12903, file: !3, line: 5927, type: !182)
!12909 = !DILocation(line: 5927, column: 23, scope: !12903)
!12910 = !DILocalVariable(name: "width_cap", scope: !12903, file: !3, line: 5927, type: !182)
!12911 = !DILocation(line: 5927, column: 30, scope: !12903)
!12912 = !DILocalVariable(name: "speed", scope: !12903, file: !3, line: 5928, type: !149)
!12913 = !DILocation(line: 5928, column: 21, scope: !12903)
!12914 = !DILocalVariable(name: "speed_cap", scope: !12903, file: !3, line: 5928, type: !149)
!12915 = !DILocation(line: 5928, column: 28, scope: !12903)
!12916 = !DILocalVariable(name: "limiting_dev", scope: !12903, file: !3, line: 5929, type: !273)
!12917 = !DILocation(line: 5929, column: 18, scope: !12903)
!12918 = !DILocalVariable(name: "bw_avail", scope: !12903, file: !3, line: 5930, type: !319)
!12919 = !DILocation(line: 5930, column: 6, scope: !12903)
!12920 = !DILocalVariable(name: "bw_cap", scope: !12903, file: !3, line: 5930, type: !319)
!12921 = !DILocation(line: 5930, column: 16, scope: !12903)
!12922 = !DILocation(line: 5932, column: 34, scope: !12903)
!12923 = !DILocation(line: 5932, column: 11, scope: !12903)
!12924 = !DILocation(line: 5932, column: 9, scope: !12903)
!12925 = !DILocation(line: 5933, column: 38, scope: !12903)
!12926 = !DILocation(line: 5933, column: 13, scope: !12903)
!12927 = !DILocation(line: 5933, column: 11, scope: !12903)
!12928 = !DILocation(line: 5935, column: 6, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 5935, column: 6)
!12930 = !DILocation(line: 5935, column: 18, scope: !12929)
!12931 = !DILocation(line: 5935, column: 15, scope: !12929)
!12932 = !DILocation(line: 5935, column: 25, scope: !12929)
!12933 = !DILocation(line: 5935, column: 28, scope: !12929)
!12934 = !DILocation(line: 5935, column: 6, scope: !12903)
!12935 = !DILocation(line: 5936, column: 3, scope: !12929)
!12936 = !DILocation(line: 5939, column: 11, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12929, file: !3, line: 5939, column: 11)
!12938 = !DILocation(line: 5939, column: 22, scope: !12937)
!12939 = !DILocation(line: 5939, column: 20, scope: !12937)
!12940 = !DILocation(line: 5939, column: 11, scope: !12929)
!12941 = !DILocation(line: 5940, column: 3, scope: !12937)
!12942 = !DILocation(line: 5946, column: 1, scope: !12903)
!12943 = distinct !DISubprogram(name: "pci_name", scope: !6, file: !6, line: 1875, type: !12944, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12944 = !DISubroutineType(types: !12945)
!12945 = !{!340, !4701}
!12946 = !DILocalVariable(name: "pdev", arg: 1, scope: !12943, file: !6, line: 1875, type: !4701)
!12947 = !DILocation(line: 1875, column: 58, scope: !12943)
!12948 = !DILocation(line: 1877, column: 19, scope: !12943)
!12949 = !DILocation(line: 1877, column: 25, scope: !12943)
!12950 = !DILocation(line: 1877, column: 9, scope: !12943)
!12951 = !DILocation(line: 1877, column: 2, scope: !12943)
!12952 = distinct !DISubprogram(name: "pcie_print_link_status", scope: !3, file: !3, line: 5954, type: !3533, scopeLine: 5955, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12953 = !DILocalVariable(name: "dev", arg: 1, scope: !12952, file: !3, line: 5954, type: !273)
!12954 = !DILocation(line: 5954, column: 45, scope: !12952)
!12955 = !DILocation(line: 5956, column: 27, scope: !12952)
!12956 = !DILocation(line: 5956, column: 2, scope: !12952)
!12957 = !DILocation(line: 5957, column: 1, scope: !12952)
!12958 = distinct !DISubprogram(name: "pci_select_bars", scope: !3, file: !3, line: 5967, type: !7335, scopeLine: 5968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12959 = !DILocalVariable(name: "dev", arg: 1, scope: !12958, file: !3, line: 5967, type: !273)
!12960 = !DILocation(line: 5967, column: 37, scope: !12958)
!12961 = !DILocalVariable(name: "flags", arg: 2, scope: !12958, file: !3, line: 5967, type: !448)
!12962 = !DILocation(line: 5967, column: 56, scope: !12958)
!12963 = !DILocalVariable(name: "i", scope: !12958, file: !3, line: 5969, type: !304)
!12964 = !DILocation(line: 5969, column: 6, scope: !12958)
!12965 = !DILocalVariable(name: "bars", scope: !12958, file: !3, line: 5969, type: !304)
!12966 = !DILocation(line: 5969, column: 9, scope: !12958)
!12967 = !DILocation(line: 5970, column: 9, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 5970, column: 2)
!12969 = !DILocation(line: 5970, column: 7, scope: !12968)
!12970 = !DILocation(line: 5970, column: 14, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12968, file: !3, line: 5970, column: 2)
!12972 = !DILocation(line: 5970, column: 16, scope: !12971)
!12973 = !DILocation(line: 5970, column: 2, scope: !12968)
!12974 = !DILocation(line: 5971, column: 7, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12971, file: !3, line: 5971, column: 7)
!12976 = !DILocation(line: 5971, column: 36, scope: !12975)
!12977 = !DILocation(line: 5971, column: 34, scope: !12975)
!12978 = !DILocation(line: 5971, column: 7, scope: !12971)
!12979 = !DILocation(line: 5972, column: 18, scope: !12975)
!12980 = !DILocation(line: 5972, column: 15, scope: !12975)
!12981 = !DILocation(line: 5972, column: 9, scope: !12975)
!12982 = !DILocation(line: 5972, column: 4, scope: !12975)
!12983 = !DILocation(line: 5970, column: 38, scope: !12971)
!12984 = !DILocation(line: 5970, column: 2, scope: !12971)
!12985 = distinct !{!12985, !12973, !12986}
!12986 = !DILocation(line: 5972, column: 19, scope: !12968)
!12987 = !DILocation(line: 5973, column: 9, scope: !12958)
!12988 = !DILocation(line: 5973, column: 2, scope: !12958)
!12989 = distinct !DISubprogram(name: "pci_register_set_vga_state", scope: !3, file: !3, line: 5980, type: !12990, scopeLine: 5981, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12990 = !DISubroutineType(types: !12991)
!12991 = !{null, !4805}
!12992 = !DILocalVariable(name: "func", arg: 1, scope: !12989, file: !3, line: 5980, type: !4805)
!12993 = !DILocation(line: 5980, column: 61, scope: !12989)
!12994 = !DILocation(line: 5982, column: 23, scope: !12989)
!12995 = !DILocation(line: 5982, column: 21, scope: !12989)
!12996 = !DILocation(line: 5983, column: 1, scope: !12989)
!12997 = distinct !DISubprogram(name: "pci_set_vga_state", scope: !3, file: !3, line: 6002, type: !4807, scopeLine: 6004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!12998 = !DILocalVariable(name: "dev", arg: 1, scope: !12997, file: !3, line: 6002, type: !273)
!12999 = !DILocation(line: 6002, column: 39, scope: !12997)
!13000 = !DILocalVariable(name: "decode", arg: 2, scope: !12997, file: !3, line: 6002, type: !609)
!13001 = !DILocation(line: 6002, column: 49, scope: !12997)
!13002 = !DILocalVariable(name: "command_bits", arg: 3, scope: !12997, file: !3, line: 6003, type: !7)
!13003 = !DILocation(line: 6003, column: 22, scope: !12997)
!13004 = !DILocalVariable(name: "flags", arg: 4, scope: !12997, file: !3, line: 6003, type: !319)
!13005 = !DILocation(line: 6003, column: 40, scope: !12997)
!13006 = !DILocalVariable(name: "bus", scope: !12997, file: !3, line: 6005, type: !259)
!13007 = !DILocation(line: 6005, column: 18, scope: !12997)
!13008 = !DILocalVariable(name: "bridge", scope: !12997, file: !3, line: 6006, type: !273)
!13009 = !DILocation(line: 6006, column: 18, scope: !12997)
!13010 = !DILocalVariable(name: "cmd", scope: !12997, file: !3, line: 6007, type: !979)
!13011 = !DILocation(line: 6007, column: 6, scope: !12997)
!13012 = !DILocalVariable(name: "rc", scope: !12997, file: !3, line: 6008, type: !304)
!13013 = !DILocation(line: 6008, column: 6, scope: !12997)
!13014 = !DILocalVariable(name: "__ret_warn_on", scope: !13015, file: !3, line: 6010, type: !304)
!13015 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 6010, column: 2)
!13016 = !DILocation(line: 6010, column: 2, scope: !13015)
!13017 = !DILocation(line: 0, scope: !13015)
!13018 = !DILocation(line: 6010, column: 2, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !13015, file: !3, line: 6010, column: 2)
!13020 = !DILocation(line: 6010, column: 2, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !13019, file: !3, line: 6010, column: 2)
!13022 = !DILocation(line: 6010, column: 2, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13021, file: !3, line: 6010, column: 2)
!13024 = !DILocation(line: 6010, column: 2, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13021, file: !3, line: 6010, column: 2)
!13026 = !{i32 -2140719882, i32 -2140719853, i32 -2140719807, i32 -2140719749, i32 -2140719695, i32 -2140719641, i32 -2140719586, i32 -2140719555}
!13027 = !DILocation(line: 6010, column: 2, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !13021, file: !3, line: 6010, column: 2)
!13029 = !{i32 -2140719155, i32 -2140719148, i32 -2140719096, i32 -2140719065, i32 -2140719035}
!13030 = !DILocation(line: 6010, column: 2, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13021, file: !3, line: 6010, column: 2)
!13032 = !DILocation(line: 6013, column: 30, scope: !12997)
!13033 = !DILocation(line: 6013, column: 35, scope: !12997)
!13034 = !DILocation(line: 6013, column: 43, scope: !12997)
!13035 = !DILocation(line: 6013, column: 57, scope: !12997)
!13036 = !DILocation(line: 6013, column: 7, scope: !12997)
!13037 = !DILocation(line: 6013, column: 5, scope: !12997)
!13038 = !DILocation(line: 6014, column: 6, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 6014, column: 6)
!13040 = !DILocation(line: 6014, column: 6, scope: !12997)
!13041 = !DILocation(line: 6015, column: 10, scope: !13039)
!13042 = !DILocation(line: 6015, column: 3, scope: !13039)
!13043 = !DILocation(line: 6017, column: 6, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 6017, column: 6)
!13045 = !DILocation(line: 6017, column: 12, scope: !13044)
!13046 = !DILocation(line: 6017, column: 6, scope: !12997)
!13047 = !DILocation(line: 6018, column: 24, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13044, file: !3, line: 6017, column: 44)
!13049 = !DILocation(line: 6018, column: 3, scope: !13048)
!13050 = !DILocation(line: 6019, column: 7, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13048, file: !3, line: 6019, column: 7)
!13052 = !DILocation(line: 6019, column: 7, scope: !13048)
!13053 = !DILocation(line: 6020, column: 11, scope: !13051)
!13054 = !DILocation(line: 6020, column: 8, scope: !13051)
!13055 = !DILocation(line: 6020, column: 4, scope: !13051)
!13056 = !DILocation(line: 6022, column: 12, scope: !13051)
!13057 = !DILocation(line: 6022, column: 11, scope: !13051)
!13058 = !DILocation(line: 6022, column: 8, scope: !13051)
!13059 = !DILocation(line: 6023, column: 25, scope: !13048)
!13060 = !DILocation(line: 6023, column: 43, scope: !13048)
!13061 = !DILocation(line: 6023, column: 3, scope: !13048)
!13062 = !DILocation(line: 6024, column: 2, scope: !13048)
!13063 = !DILocation(line: 6026, column: 8, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 6026, column: 6)
!13065 = !DILocation(line: 6026, column: 14, scope: !13064)
!13066 = !DILocation(line: 6026, column: 6, scope: !12997)
!13067 = !DILocation(line: 6027, column: 3, scope: !13064)
!13068 = !DILocation(line: 6029, column: 8, scope: !12997)
!13069 = !DILocation(line: 6029, column: 13, scope: !12997)
!13070 = !DILocation(line: 6029, column: 6, scope: !12997)
!13071 = !DILocation(line: 6030, column: 2, scope: !12997)
!13072 = !DILocation(line: 6030, column: 9, scope: !12997)
!13073 = !DILocation(line: 6031, column: 12, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 6030, column: 14)
!13075 = !DILocation(line: 6031, column: 17, scope: !13074)
!13076 = !DILocation(line: 6031, column: 10, scope: !13074)
!13077 = !DILocation(line: 6032, column: 7, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13074, file: !3, line: 6032, column: 7)
!13079 = !DILocation(line: 6032, column: 7, scope: !13074)
!13080 = !DILocation(line: 6033, column: 25, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13078, file: !3, line: 6032, column: 15)
!13082 = !DILocation(line: 6033, column: 4, scope: !13081)
!13083 = !DILocation(line: 6035, column: 8, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13081, file: !3, line: 6035, column: 8)
!13085 = !DILocation(line: 6035, column: 8, scope: !13081)
!13086 = !DILocation(line: 6036, column: 9, scope: !13084)
!13087 = !DILocation(line: 6036, column: 5, scope: !13084)
!13088 = !DILocation(line: 6038, column: 9, scope: !13084)
!13089 = !DILocation(line: 6039, column: 26, scope: !13081)
!13090 = !DILocation(line: 6040, column: 12, scope: !13081)
!13091 = !DILocation(line: 6039, column: 4, scope: !13081)
!13092 = !DILocation(line: 6041, column: 3, scope: !13081)
!13093 = !DILocation(line: 6042, column: 9, scope: !13074)
!13094 = !DILocation(line: 6042, column: 14, scope: !13074)
!13095 = !DILocation(line: 6042, column: 7, scope: !13074)
!13096 = distinct !{!13096, !13071, !13097}
!13097 = !DILocation(line: 6043, column: 2, scope: !12997)
!13098 = !DILocation(line: 6044, column: 2, scope: !12997)
!13099 = !DILocation(line: 6045, column: 1, scope: !12997)
!13100 = distinct !DISubprogram(name: "pci_set_vga_state_arch", scope: !3, file: !3, line: 5985, type: !4807, scopeLine: 5987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13101 = !DILocalVariable(name: "dev", arg: 1, scope: !13100, file: !3, line: 5985, type: !273)
!13102 = !DILocation(line: 5985, column: 51, scope: !13100)
!13103 = !DILocalVariable(name: "decode", arg: 2, scope: !13100, file: !3, line: 5985, type: !609)
!13104 = !DILocation(line: 5985, column: 61, scope: !13100)
!13105 = !DILocalVariable(name: "command_bits", arg: 3, scope: !13100, file: !3, line: 5986, type: !7)
!13106 = !DILocation(line: 5986, column: 20, scope: !13100)
!13107 = !DILocalVariable(name: "flags", arg: 4, scope: !13100, file: !3, line: 5986, type: !319)
!13108 = !DILocation(line: 5986, column: 38, scope: !13100)
!13109 = !DILocation(line: 5988, column: 6, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13100, file: !3, line: 5988, column: 6)
!13111 = !DILocation(line: 5988, column: 6, scope: !13100)
!13112 = !DILocation(line: 5989, column: 10, scope: !13110)
!13113 = !DILocation(line: 5989, column: 29, scope: !13110)
!13114 = !DILocation(line: 5989, column: 34, scope: !13110)
!13115 = !DILocation(line: 5989, column: 42, scope: !13110)
!13116 = !DILocation(line: 5990, column: 7, scope: !13110)
!13117 = !DILocation(line: 5989, column: 3, scope: !13110)
!13118 = !DILocation(line: 5991, column: 2, scope: !13100)
!13119 = !DILocation(line: 5992, column: 1, scope: !13100)
!13120 = distinct !DISubprogram(name: "pci_pr3_present", scope: !3, file: !3, line: 6048, type: !4785, scopeLine: 6049, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13121 = !DILocalVariable(name: "pdev", arg: 1, scope: !13120, file: !3, line: 6048, type: !273)
!13122 = !DILocation(line: 6048, column: 38, scope: !13120)
!13123 = !DILocalVariable(name: "adev", scope: !13120, file: !3, line: 6050, type: !4410)
!13124 = !DILocation(line: 6050, column: 22, scope: !13120)
!13125 = !DILocation(line: 6052, column: 6, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13120, file: !3, line: 6052, column: 6)
!13127 = !DILocation(line: 6052, column: 6, scope: !13120)
!13128 = !DILocation(line: 6053, column: 3, scope: !13126)
!13129 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !13130, file: !3, line: 6055, type: !3805)
!13130 = distinct !DILexicalBlock(scope: !13120, file: !3, line: 6055, column: 9)
!13131 = !DILocation(line: 6055, column: 9, scope: !13130)
!13132 = !DILocalVariable(name: "__mptr", scope: !13133, file: !3, line: 6055, type: !258)
!13133 = distinct !DILexicalBlock(scope: !13130, file: !3, line: 6055, column: 9)
!13134 = !DILocation(line: 6055, column: 9, scope: !13133)
!13135 = !DILocation(line: 6055, column: 9, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13133, file: !3, line: 6055, column: 9)
!13137 = !DILocation(line: 6055, column: 7, scope: !13120)
!13138 = !DILocation(line: 6056, column: 7, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13120, file: !3, line: 6056, column: 6)
!13140 = !DILocation(line: 6056, column: 6, scope: !13120)
!13141 = !DILocation(line: 6057, column: 3, scope: !13139)
!13142 = !DILocation(line: 6059, column: 9, scope: !13120)
!13143 = !DILocation(line: 6059, column: 15, scope: !13120)
!13144 = !DILocation(line: 6059, column: 21, scope: !13120)
!13145 = !DILocation(line: 6059, column: 27, scope: !13120)
!13146 = !DILocation(line: 6059, column: 43, scope: !13120)
!13147 = !DILocation(line: 6060, column: 19, scope: !13120)
!13148 = !DILocation(line: 6060, column: 25, scope: !13120)
!13149 = !DILocation(line: 6060, column: 3, scope: !13120)
!13150 = !DILocation(line: 0, scope: !13120)
!13151 = !DILocation(line: 6059, column: 2, scope: !13120)
!13152 = !DILocation(line: 6061, column: 1, scope: !13120)
!13153 = distinct !DISubprogram(name: "pci_add_dma_alias", scope: !3, file: !3, line: 6085, type: !13154, scopeLine: 6086, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13154 = !DISubroutineType(types: !13155)
!13155 = !{null, !273, !310, !7}
!13156 = !DILocalVariable(name: "map", arg: 1, scope: !13157, file: !13158, line: 405, type: !3506)
!13157 = distinct !DISubprogram(name: "bitmap_set", scope: !13158, file: !13158, line: 405, type: !13159, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13158 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!13159 = !DISubroutineType(types: !13160)
!13160 = !{null, !3506, !7, !7}
!13161 = !DILocation(line: 405, column: 55, scope: !13157, inlinedAt: !13162)
!13162 = distinct !DILocation(line: 6099, column: 2, scope: !13153)
!13163 = !DILocalVariable(name: "start", arg: 2, scope: !13157, file: !13158, line: 405, type: !7)
!13164 = !DILocation(line: 405, column: 73, scope: !13157, inlinedAt: !13162)
!13165 = !DILocalVariable(name: "nbits", arg: 3, scope: !13157, file: !13158, line: 406, type: !7)
!13166 = !DILocation(line: 406, column: 16, scope: !13157, inlinedAt: !13162)
!13167 = !DILocalVariable(name: "dev", arg: 1, scope: !13153, file: !3, line: 6085, type: !273)
!13168 = !DILocation(line: 6085, column: 40, scope: !13153)
!13169 = !DILocalVariable(name: "devfn_from", arg: 2, scope: !13153, file: !3, line: 6085, type: !310)
!13170 = !DILocation(line: 6085, column: 48, scope: !13153)
!13171 = !DILocalVariable(name: "nr_devfns", arg: 3, scope: !13153, file: !3, line: 6085, type: !7)
!13172 = !DILocation(line: 6085, column: 69, scope: !13153)
!13173 = !DILocalVariable(name: "devfn_to", scope: !13153, file: !3, line: 6087, type: !304)
!13174 = !DILocation(line: 6087, column: 6, scope: !13153)
!13175 = !DILocalVariable(name: "__UNIQUE_ID___x306", scope: !13176, file: !3, line: 6089, type: !7)
!13176 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 6089, column: 14)
!13177 = !DILocation(line: 6089, column: 14, scope: !13176)
!13178 = !DILocalVariable(name: "__UNIQUE_ID___y307", scope: !13176, file: !3, line: 6089, type: !7)
!13179 = !DILocation(line: 6089, column: 12, scope: !13153)
!13180 = !DILocation(line: 6090, column: 13, scope: !13153)
!13181 = !DILocation(line: 6090, column: 26, scope: !13153)
!13182 = !DILocation(line: 6090, column: 24, scope: !13153)
!13183 = !DILocation(line: 6090, column: 36, scope: !13153)
!13184 = !DILocation(line: 6090, column: 11, scope: !13153)
!13185 = !DILocation(line: 6092, column: 7, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 6092, column: 6)
!13187 = !DILocation(line: 6092, column: 12, scope: !13186)
!13188 = !DILocation(line: 6092, column: 6, scope: !13153)
!13189 = !DILocation(line: 6093, column: 25, scope: !13186)
!13190 = !DILocation(line: 6093, column: 3, scope: !13186)
!13191 = !DILocation(line: 6093, column: 8, scope: !13186)
!13192 = !DILocation(line: 6093, column: 23, scope: !13186)
!13193 = !DILocation(line: 6094, column: 7, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 6094, column: 6)
!13195 = !DILocation(line: 6094, column: 12, scope: !13194)
!13196 = !DILocation(line: 6094, column: 6, scope: !13153)
!13197 = !DILocation(line: 6095, column: 3, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13194, file: !3, line: 6094, column: 28)
!13199 = !DILocation(line: 6096, column: 3, scope: !13198)
!13200 = !DILocation(line: 6099, column: 13, scope: !13153)
!13201 = !DILocation(line: 6099, column: 18, scope: !13153)
!13202 = !DILocation(line: 6099, column: 34, scope: !13153)
!13203 = !DILocation(line: 6099, column: 46, scope: !13153)
!13204 = !DILocation(line: 408, column: 27, scope: !13205, inlinedAt: !13162)
!13205 = distinct !DILexicalBlock(scope: !13157, file: !13158, line: 408, column: 6)
!13206 = !DILocation(line: 408, column: 6, scope: !13205, inlinedAt: !13162)
!13207 = !DILocation(line: 408, column: 34, scope: !13205, inlinedAt: !13162)
!13208 = !DILocation(line: 408, column: 37, scope: !13205, inlinedAt: !13162)
!13209 = !DILocation(line: 408, column: 43, scope: !13205, inlinedAt: !13162)
!13210 = !DILocation(line: 408, column: 6, scope: !13157, inlinedAt: !13162)
!13211 = !DILocation(line: 409, column: 13, scope: !13205, inlinedAt: !13162)
!13212 = !DILocation(line: 409, column: 20, scope: !13205, inlinedAt: !13162)
!13213 = !DILocation(line: 409, column: 3, scope: !13205, inlinedAt: !13162)
!13214 = !DILocation(line: 410, column: 32, scope: !13215, inlinedAt: !13162)
!13215 = distinct !DILexicalBlock(scope: !13205, file: !13158, line: 410, column: 11)
!13216 = !DILocation(line: 410, column: 38, scope: !13215, inlinedAt: !13162)
!13217 = !DILocation(line: 410, column: 11, scope: !13215, inlinedAt: !13162)
!13218 = !DILocation(line: 410, column: 57, scope: !13215, inlinedAt: !13162)
!13219 = !DILocation(line: 411, column: 4, scope: !13215, inlinedAt: !13162)
!13220 = !DILocation(line: 411, column: 44, scope: !13215, inlinedAt: !13162)
!13221 = !DILocation(line: 412, column: 25, scope: !13215, inlinedAt: !13162)
!13222 = !DILocation(line: 412, column: 31, scope: !13215, inlinedAt: !13162)
!13223 = !DILocation(line: 412, column: 4, scope: !13215, inlinedAt: !13162)
!13224 = !DILocation(line: 412, column: 50, scope: !13215, inlinedAt: !13162)
!13225 = !DILocation(line: 413, column: 4, scope: !13215, inlinedAt: !13162)
!13226 = !DILocation(line: 410, column: 11, scope: !13205, inlinedAt: !13162)
!13227 = !DILocation(line: 414, column: 18, scope: !13215, inlinedAt: !13162)
!13228 = !DILocation(line: 414, column: 10, scope: !13215, inlinedAt: !13162)
!13229 = !DILocation(line: 414, column: 24, scope: !13215, inlinedAt: !13162)
!13230 = !DILocation(line: 414, column: 30, scope: !13215, inlinedAt: !13162)
!13231 = !DILocation(line: 414, column: 22, scope: !13215, inlinedAt: !13162)
!13232 = !DILocation(line: 414, column: 41, scope: !13215, inlinedAt: !13162)
!13233 = !DILocation(line: 414, column: 47, scope: !13215, inlinedAt: !13162)
!13234 = !DILocation(line: 414, column: 3, scope: !13215, inlinedAt: !13162)
!13235 = !DILocation(line: 416, column: 16, scope: !13215, inlinedAt: !13162)
!13236 = !DILocation(line: 416, column: 21, scope: !13215, inlinedAt: !13162)
!13237 = !DILocation(line: 416, column: 28, scope: !13215, inlinedAt: !13162)
!13238 = !DILocation(line: 416, column: 3, scope: !13215, inlinedAt: !13162)
!13239 = !DILocation(line: 6101, column: 6, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 6101, column: 6)
!13241 = !DILocation(line: 6101, column: 16, scope: !13240)
!13242 = !DILocation(line: 6101, column: 6, scope: !13153)
!13243 = !DILocation(line: 6102, column: 3, scope: !13240)
!13244 = !DILocation(line: 6104, column: 11, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13240, file: !3, line: 6104, column: 11)
!13246 = !DILocation(line: 6104, column: 21, scope: !13245)
!13247 = !DILocation(line: 6104, column: 11, scope: !13240)
!13248 = !DILocation(line: 6105, column: 3, scope: !13245)
!13249 = !DILocation(line: 6108, column: 1, scope: !13153)
!13250 = distinct !DISubprogram(name: "pci_devs_are_dma_aliases", scope: !3, file: !3, line: 6110, type: !13251, scopeLine: 6111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13251 = !DISubroutineType(types: !13252)
!13252 = !{!609, !273, !273}
!13253 = !DILocalVariable(name: "dev1", arg: 1, scope: !13250, file: !3, line: 6110, type: !273)
!13254 = !DILocation(line: 6110, column: 47, scope: !13250)
!13255 = !DILocalVariable(name: "dev2", arg: 2, scope: !13250, file: !3, line: 6110, type: !273)
!13256 = !DILocation(line: 6110, column: 69, scope: !13250)
!13257 = !DILocation(line: 6112, column: 10, scope: !13250)
!13258 = !DILocation(line: 6112, column: 16, scope: !13250)
!13259 = !DILocation(line: 6112, column: 31, scope: !13250)
!13260 = !DILocation(line: 6113, column: 12, scope: !13250)
!13261 = !DILocation(line: 6113, column: 18, scope: !13250)
!13262 = !DILocation(line: 6113, column: 25, scope: !13250)
!13263 = !DILocation(line: 6113, column: 31, scope: !13250)
!13264 = !DILocation(line: 6113, column: 3, scope: !13250)
!13265 = !DILocation(line: 6113, column: 48, scope: !13250)
!13266 = !DILocation(line: 6114, column: 10, scope: !13250)
!13267 = !DILocation(line: 6114, column: 16, scope: !13250)
!13268 = !DILocation(line: 6114, column: 31, scope: !13250)
!13269 = !DILocation(line: 6115, column: 12, scope: !13250)
!13270 = !DILocation(line: 6115, column: 18, scope: !13250)
!13271 = !DILocation(line: 6115, column: 25, scope: !13250)
!13272 = !DILocation(line: 6115, column: 31, scope: !13250)
!13273 = !DILocation(line: 6115, column: 3, scope: !13250)
!13274 = !DILocation(line: 6115, column: 48, scope: !13250)
!13275 = !DILocation(line: 6116, column: 26, scope: !13250)
!13276 = !DILocation(line: 6116, column: 9, scope: !13250)
!13277 = !DILocation(line: 6116, column: 35, scope: !13250)
!13278 = !DILocation(line: 6116, column: 32, scope: !13250)
!13279 = !DILocation(line: 6116, column: 40, scope: !13250)
!13280 = !DILocation(line: 6117, column: 26, scope: !13250)
!13281 = !DILocation(line: 6117, column: 9, scope: !13250)
!13282 = !DILocation(line: 6117, column: 35, scope: !13250)
!13283 = !DILocation(line: 6117, column: 32, scope: !13250)
!13284 = !DILocation(line: 6112, column: 2, scope: !13250)
!13285 = distinct !DISubprogram(name: "test_bit", scope: !13286, file: !13286, line: 132, type: !13287, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13286 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!13287 = !DISubroutineType(types: !13288)
!13288 = !{!609, !212, !13289}
!13289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13290, size: 64)
!13290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13291)
!13291 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !448)
!13292 = !DILocalVariable(name: "nr", arg: 1, scope: !13293, file: !12492, line: 210, type: !212)
!13293 = distinct !DISubprogram(name: "variable_test_bit", scope: !12492, file: !12492, line: 210, type: !13287, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13294 = !DILocation(line: 210, column: 52, scope: !13293, inlinedAt: !13295)
!13295 = distinct !DILocation(line: 135, column: 9, scope: !13285)
!13296 = !DILocalVariable(name: "addr", arg: 2, scope: !13293, file: !12492, line: 210, type: !13289)
!13297 = !DILocation(line: 210, column: 86, scope: !13293, inlinedAt: !13295)
!13298 = !DILocalVariable(name: "oldbit", scope: !13293, file: !12492, line: 212, type: !609)
!13299 = !DILocation(line: 212, column: 7, scope: !13293, inlinedAt: !13295)
!13300 = !DILocalVariable(name: "nr", arg: 1, scope: !13301, file: !12492, line: 204, type: !212)
!13301 = distinct !DISubprogram(name: "constant_test_bit", scope: !12492, file: !12492, line: 204, type: !13287, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13302 = !DILocation(line: 204, column: 52, scope: !13301, inlinedAt: !13303)
!13303 = distinct !DILocation(line: 135, column: 9, scope: !13285)
!13304 = !DILocalVariable(name: "addr", arg: 2, scope: !13301, file: !12492, line: 204, type: !13289)
!13305 = !DILocation(line: 204, column: 86, scope: !13301, inlinedAt: !13303)
!13306 = !DILocation(line: 69, column: 73, scope: !7230, inlinedAt: !13307)
!13307 = distinct !DILocation(line: 134, column: 2, scope: !13285)
!13308 = !DILocation(line: 69, column: 83, scope: !7230, inlinedAt: !13307)
!13309 = !DILocalVariable(name: "nr", arg: 1, scope: !13285, file: !13286, line: 132, type: !212)
!13310 = !DILocation(line: 132, column: 34, scope: !13285)
!13311 = !DILocalVariable(name: "addr", arg: 2, scope: !13285, file: !13286, line: 132, type: !13289)
!13312 = !DILocation(line: 132, column: 68, scope: !13285)
!13313 = !DILocation(line: 134, column: 25, scope: !13285)
!13314 = !DILocation(line: 134, column: 32, scope: !13285)
!13315 = !DILocation(line: 134, column: 30, scope: !13285)
!13316 = !DILocation(line: 71, column: 19, scope: !7230, inlinedAt: !13307)
!13317 = !DILocation(line: 71, column: 22, scope: !7230, inlinedAt: !13307)
!13318 = !DILocation(line: 71, column: 2, scope: !7230, inlinedAt: !13307)
!13319 = !DILocation(line: 72, column: 2, scope: !7230, inlinedAt: !13307)
!13320 = !DILocation(line: 135, column: 9, scope: !13285)
!13321 = !DILocation(line: 206, column: 19, scope: !13301, inlinedAt: !13303)
!13322 = !DILocation(line: 206, column: 22, scope: !13301, inlinedAt: !13303)
!13323 = !DILocation(line: 206, column: 15, scope: !13301, inlinedAt: !13303)
!13324 = !DILocation(line: 207, column: 4, scope: !13301, inlinedAt: !13303)
!13325 = !DILocation(line: 207, column: 9, scope: !13301, inlinedAt: !13303)
!13326 = !DILocation(line: 207, column: 12, scope: !13301, inlinedAt: !13303)
!13327 = !DILocation(line: 206, column: 44, scope: !13301, inlinedAt: !13303)
!13328 = !DILocation(line: 207, column: 37, scope: !13301, inlinedAt: !13303)
!13329 = !DILocation(line: 217, column: 33, scope: !13293, inlinedAt: !13295)
!13330 = !DILocation(line: 217, column: 46, scope: !13293, inlinedAt: !13295)
!13331 = !DILocation(line: 214, column: 2, scope: !13293, inlinedAt: !13295)
!13332 = !{i32 -2146954463, i32 -2146954403}
!13333 = !DILocation(line: 219, column: 9, scope: !13293, inlinedAt: !13295)
!13334 = !DILocation(line: 135, column: 2, scope: !13285)
!13335 = distinct !DISubprogram(name: "pci_real_dma_dev", scope: !3, file: !3, line: 6151, type: !9119, scopeLine: 6152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13336 = !DILocalVariable(name: "dev", arg: 1, scope: !13335, file: !3, line: 6151, type: !273)
!13337 = !DILocation(line: 6151, column: 57, scope: !13335)
!13338 = !DILocation(line: 6153, column: 9, scope: !13335)
!13339 = !DILocation(line: 6153, column: 2, scope: !13335)
!13340 = distinct !DISubprogram(name: "pci_ignore_hotplug", scope: !3, file: !3, line: 6130, type: !3533, scopeLine: 6131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13341 = !DILocalVariable(name: "dev", arg: 1, scope: !13340, file: !3, line: 6130, type: !273)
!13342 = !DILocation(line: 6130, column: 41, scope: !13340)
!13343 = !DILocalVariable(name: "bridge", scope: !13340, file: !3, line: 6132, type: !273)
!13344 = !DILocation(line: 6132, column: 18, scope: !13340)
!13345 = !DILocation(line: 6132, column: 27, scope: !13340)
!13346 = !DILocation(line: 6132, column: 32, scope: !13340)
!13347 = !DILocation(line: 6132, column: 37, scope: !13340)
!13348 = !DILocation(line: 6134, column: 2, scope: !13340)
!13349 = !DILocation(line: 6134, column: 7, scope: !13340)
!13350 = !DILocation(line: 6134, column: 22, scope: !13340)
!13351 = !DILocation(line: 6136, column: 6, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13340, file: !3, line: 6136, column: 6)
!13353 = !DILocation(line: 6136, column: 6, scope: !13340)
!13354 = !DILocation(line: 6137, column: 3, scope: !13352)
!13355 = !DILocation(line: 6137, column: 11, scope: !13352)
!13356 = !DILocation(line: 6137, column: 26, scope: !13352)
!13357 = !DILocation(line: 6138, column: 1, scope: !13340)
!13358 = distinct !DISubprogram(name: "pcibios_default_alignment", scope: !3, file: !3, line: 6156, type: !13359, scopeLine: 6157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13359 = !DISubroutineType(types: !13360)
!13360 = !{!4160}
!13361 = !DILocation(line: 6158, column: 2, scope: !13358)
!13362 = distinct !DISubprogram(name: "pci_resource_to_user", scope: !3, file: !3, line: 6165, type: !13363, scopeLine: 6168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13363 = !DISubroutineType(types: !13364)
!13364 = !{null, !4701, !304, !4749, !13365, !13365}
!13365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!13366 = !DILocalVariable(name: "dev", arg: 1, scope: !13362, file: !3, line: 6165, type: !4701)
!13367 = !DILocation(line: 6165, column: 56, scope: !13362)
!13368 = !DILocalVariable(name: "bar", arg: 2, scope: !13362, file: !3, line: 6165, type: !304)
!13369 = !DILocation(line: 6165, column: 65, scope: !13362)
!13370 = !DILocalVariable(name: "rsrc", arg: 3, scope: !13362, file: !3, line: 6166, type: !4749)
!13371 = !DILocation(line: 6166, column: 29, scope: !13362)
!13372 = !DILocalVariable(name: "start", arg: 4, scope: !13362, file: !3, line: 6167, type: !13365)
!13373 = !DILocation(line: 6167, column: 23, scope: !13362)
!13374 = !DILocalVariable(name: "end", arg: 5, scope: !13362, file: !3, line: 6167, type: !13365)
!13375 = !DILocation(line: 6167, column: 47, scope: !13362)
!13376 = !DILocation(line: 6169, column: 11, scope: !13362)
!13377 = !DILocation(line: 6169, column: 17, scope: !13362)
!13378 = !DILocation(line: 6169, column: 3, scope: !13362)
!13379 = !DILocation(line: 6169, column: 9, scope: !13362)
!13380 = !DILocation(line: 6170, column: 9, scope: !13362)
!13381 = !DILocation(line: 6170, column: 15, scope: !13362)
!13382 = !DILocation(line: 6170, column: 3, scope: !13362)
!13383 = !DILocation(line: 6170, column: 7, scope: !13362)
!13384 = !DILocation(line: 6171, column: 1, scope: !13362)
!13385 = distinct !DISubprogram(name: "pci_reassigndev_resource_alignment", scope: !3, file: !3, line: 6305, type: !3533, scopeLine: 6306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13386 = !DILocalVariable(name: "dev", arg: 1, scope: !13385, file: !3, line: 6305, type: !273)
!13387 = !DILocation(line: 6305, column: 57, scope: !13385)
!13388 = !DILocalVariable(name: "i", scope: !13385, file: !3, line: 6307, type: !304)
!13389 = !DILocation(line: 6307, column: 6, scope: !13385)
!13390 = !DILocalVariable(name: "r", scope: !13385, file: !3, line: 6308, type: !4166)
!13391 = !DILocation(line: 6308, column: 19, scope: !13385)
!13392 = !DILocalVariable(name: "align", scope: !13385, file: !3, line: 6309, type: !4160)
!13393 = !DILocation(line: 6309, column: 18, scope: !13385)
!13394 = !DILocalVariable(name: "command", scope: !13385, file: !3, line: 6310, type: !979)
!13395 = !DILocation(line: 6310, column: 6, scope: !13385)
!13396 = !DILocalVariable(name: "resize", scope: !13385, file: !3, line: 6311, type: !609)
!13397 = !DILocation(line: 6311, column: 7, scope: !13385)
!13398 = !DILocation(line: 6319, column: 6, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 6319, column: 6)
!13400 = !DILocation(line: 6319, column: 11, scope: !13399)
!13401 = !DILocation(line: 6319, column: 6, scope: !13385)
!13402 = !DILocation(line: 6320, column: 3, scope: !13399)
!13403 = !DILocation(line: 6323, column: 43, scope: !13385)
!13404 = !DILocation(line: 6323, column: 10, scope: !13385)
!13405 = !DILocation(line: 6323, column: 8, scope: !13385)
!13406 = !DILocation(line: 6324, column: 7, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 6324, column: 6)
!13408 = !DILocation(line: 6324, column: 6, scope: !13385)
!13409 = !DILocation(line: 6325, column: 3, scope: !13407)
!13410 = !DILocation(line: 6327, column: 6, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 6327, column: 6)
!13412 = !DILocation(line: 6327, column: 11, scope: !13411)
!13413 = !DILocation(line: 6327, column: 20, scope: !13411)
!13414 = !DILocation(line: 6327, column: 46, scope: !13411)
!13415 = !DILocation(line: 6328, column: 7, scope: !13411)
!13416 = !DILocation(line: 6328, column: 12, scope: !13411)
!13417 = !DILocation(line: 6328, column: 18, scope: !13411)
!13418 = !DILocation(line: 6328, column: 24, scope: !13411)
!13419 = !DILocation(line: 6327, column: 6, scope: !13385)
!13420 = !DILocation(line: 6329, column: 3, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13411, file: !3, line: 6328, column: 50)
!13422 = !DILocation(line: 6330, column: 3, scope: !13421)
!13423 = !DILocation(line: 6333, column: 23, scope: !13385)
!13424 = !DILocation(line: 6333, column: 2, scope: !13385)
!13425 = !DILocation(line: 6334, column: 10, scope: !13385)
!13426 = !DILocation(line: 6335, column: 24, scope: !13385)
!13427 = !DILocation(line: 6335, column: 42, scope: !13385)
!13428 = !DILocation(line: 6335, column: 2, scope: !13385)
!13429 = !DILocation(line: 6337, column: 9, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 6337, column: 2)
!13431 = !DILocation(line: 6337, column: 7, scope: !13430)
!13432 = !DILocation(line: 6337, column: 14, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13430, file: !3, line: 6337, column: 2)
!13434 = !DILocation(line: 6337, column: 16, scope: !13433)
!13435 = !DILocation(line: 6337, column: 2, scope: !13430)
!13436 = !DILocation(line: 6338, column: 34, scope: !13433)
!13437 = !DILocation(line: 6338, column: 39, scope: !13433)
!13438 = !DILocation(line: 6338, column: 42, scope: !13433)
!13439 = !DILocation(line: 6338, column: 49, scope: !13433)
!13440 = !DILocation(line: 6338, column: 3, scope: !13433)
!13441 = !DILocation(line: 6337, column: 38, scope: !13433)
!13442 = !DILocation(line: 6337, column: 2, scope: !13433)
!13443 = distinct !{!13443, !13435, !13444}
!13444 = !DILocation(line: 6338, column: 55, scope: !13430)
!13445 = !DILocation(line: 6345, column: 6, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 6345, column: 6)
!13447 = !DILocation(line: 6345, column: 11, scope: !13446)
!13448 = !DILocation(line: 6345, column: 20, scope: !13446)
!13449 = !DILocation(line: 6345, column: 6, scope: !13385)
!13450 = !DILocation(line: 6346, column: 10, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13452, file: !3, line: 6346, column: 3)
!13452 = distinct !DILexicalBlock(scope: !13446, file: !3, line: 6345, column: 47)
!13453 = !DILocation(line: 6346, column: 8, scope: !13451)
!13454 = !DILocation(line: 6346, column: 34, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13451, file: !3, line: 6346, column: 3)
!13456 = !DILocation(line: 6346, column: 36, scope: !13455)
!13457 = !DILocation(line: 6346, column: 3, scope: !13451)
!13458 = !DILocation(line: 6347, column: 9, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 6346, column: 62)
!13460 = !DILocation(line: 6347, column: 14, scope: !13459)
!13461 = !DILocation(line: 6347, column: 23, scope: !13459)
!13462 = !DILocation(line: 6347, column: 6, scope: !13459)
!13463 = !DILocation(line: 6348, column: 10, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13459, file: !3, line: 6348, column: 8)
!13465 = !DILocation(line: 6348, column: 13, scope: !13464)
!13466 = !DILocation(line: 6348, column: 19, scope: !13464)
!13467 = !DILocation(line: 6348, column: 8, scope: !13459)
!13468 = !DILocation(line: 6349, column: 5, scope: !13464)
!13469 = !DILocation(line: 6350, column: 4, scope: !13459)
!13470 = !DILocation(line: 6350, column: 7, scope: !13459)
!13471 = !DILocation(line: 6350, column: 13, scope: !13459)
!13472 = !DILocation(line: 6351, column: 27, scope: !13459)
!13473 = !DILocation(line: 6351, column: 13, scope: !13459)
!13474 = !DILocation(line: 6351, column: 30, scope: !13459)
!13475 = !DILocation(line: 6351, column: 4, scope: !13459)
!13476 = !DILocation(line: 6351, column: 7, scope: !13459)
!13477 = !DILocation(line: 6351, column: 11, scope: !13459)
!13478 = !DILocation(line: 6352, column: 4, scope: !13459)
!13479 = !DILocation(line: 6352, column: 7, scope: !13459)
!13480 = !DILocation(line: 6352, column: 13, scope: !13459)
!13481 = !DILocation(line: 6353, column: 3, scope: !13459)
!13482 = !DILocation(line: 6346, column: 58, scope: !13455)
!13483 = !DILocation(line: 6346, column: 3, scope: !13455)
!13484 = distinct !{!13484, !13457, !13485}
!13485 = !DILocation(line: 6353, column: 3, scope: !13451)
!13486 = !DILocation(line: 6354, column: 29, scope: !13452)
!13487 = !DILocation(line: 6354, column: 3, scope: !13452)
!13488 = !DILocation(line: 6355, column: 2, scope: !13452)
!13489 = !DILocation(line: 6356, column: 1, scope: !13385)
!13490 = !DILocalVariable(name: "lock", arg: 1, scope: !13491, file: !8777, line: 392, type: !1184)
!13491 = distinct !DISubprogram(name: "spin_unlock", scope: !8777, file: !8777, line: 392, type: !8778, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13492 = !DILocation(line: 392, column: 53, scope: !13491, inlinedAt: !13493)
!13493 = distinct !DILocation(line: 6232, column: 2, scope: !4859)
!13494 = !DILocalVariable(name: "lock", arg: 1, scope: !13495, file: !8777, line: 352, type: !1184)
!13495 = distinct !DISubprogram(name: "spin_lock", scope: !8777, file: !8777, line: 352, type: !8778, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13496 = !DILocation(line: 352, column: 51, scope: !13495, inlinedAt: !13497)
!13497 = distinct !DILocation(line: 6192, column: 2, scope: !4859)
!13498 = !DILocalVariable(name: "dev", arg: 1, scope: !4859, file: !3, line: 6184, type: !273)
!13499 = !DILocation(line: 6184, column: 73, scope: !4859)
!13500 = !DILocalVariable(name: "resize", arg: 2, scope: !4859, file: !3, line: 6185, type: !1011)
!13501 = !DILocation(line: 6185, column: 14, scope: !4859)
!13502 = !DILocalVariable(name: "align_order", scope: !4859, file: !3, line: 6187, type: !304)
!13503 = !DILocation(line: 6187, column: 6, scope: !4859)
!13504 = !DILocalVariable(name: "count", scope: !4859, file: !3, line: 6187, type: !304)
!13505 = !DILocation(line: 6187, column: 19, scope: !4859)
!13506 = !DILocalVariable(name: "align", scope: !4859, file: !3, line: 6188, type: !4160)
!13507 = !DILocation(line: 6188, column: 18, scope: !4859)
!13508 = !DILocation(line: 6188, column: 26, scope: !4859)
!13509 = !DILocalVariable(name: "p", scope: !4859, file: !3, line: 6189, type: !340)
!13510 = !DILocation(line: 6189, column: 14, scope: !4859)
!13511 = !DILocalVariable(name: "ret", scope: !4859, file: !3, line: 6190, type: !304)
!13512 = !DILocation(line: 6190, column: 6, scope: !4859)
!13513 = !DILocation(line: 354, column: 2, scope: !13514, inlinedAt: !13497)
!13514 = distinct !DILexicalBlock(scope: !13495, file: !8777, line: 354, column: 2)
!13515 = !{i32 -2145194588}
!13516 = !DILocation(line: 354, column: 2, scope: !13517, inlinedAt: !13497)
!13517 = distinct !DILexicalBlock(scope: !13514, file: !8777, line: 354, column: 2)
!13518 = !DILocation(line: 6193, column: 6, scope: !4859)
!13519 = !DILocation(line: 6193, column: 4, scope: !4859)
!13520 = !DILocation(line: 6194, column: 7, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 6194, column: 6)
!13522 = !DILocation(line: 6194, column: 9, scope: !13521)
!13523 = !DILocation(line: 6194, column: 14, scope: !13521)
!13524 = !DILocation(line: 6194, column: 13, scope: !13521)
!13525 = !DILocation(line: 6194, column: 6, scope: !4859)
!13526 = !DILocation(line: 6195, column: 3, scope: !13521)
!13527 = !DILocation(line: 6196, column: 6, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 6196, column: 6)
!13529 = !DILocation(line: 6196, column: 6, scope: !4859)
!13530 = !DILocation(line: 6197, column: 9, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13528, file: !3, line: 6196, column: 36)
!13532 = !DILocalVariable(name: "__ret_print_once", scope: !13533, file: !3, line: 6198, type: !609)
!13533 = distinct !DILexicalBlock(scope: !13531, file: !3, line: 6198, column: 3)
!13534 = !DILocation(line: 6198, column: 3, scope: !13533)
!13535 = !DILocation(line: 6198, column: 3, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13533, file: !3, line: 6198, column: 3)
!13537 = !DILocation(line: 6198, column: 3, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13536, file: !3, line: 6198, column: 3)
!13539 = !DILocation(line: 6199, column: 3, scope: !13531)
!13540 = !DILocation(line: 6202, column: 2, scope: !4859)
!13541 = !DILocation(line: 6202, column: 10, scope: !4859)
!13542 = !DILocation(line: 6202, column: 9, scope: !4859)
!13543 = !DILocation(line: 6203, column: 9, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 6202, column: 13)
!13545 = !DILocation(line: 6204, column: 14, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13544, file: !3, line: 6204, column: 7)
!13547 = !DILocation(line: 6204, column: 7, scope: !13546)
!13548 = !DILocation(line: 6204, column: 47, scope: !13546)
!13549 = !DILocation(line: 6204, column: 52, scope: !13546)
!13550 = !DILocation(line: 6205, column: 8, scope: !13546)
!13551 = !DILocation(line: 6205, column: 10, scope: !13546)
!13552 = !DILocation(line: 6205, column: 17, scope: !13546)
!13553 = !DILocation(line: 6204, column: 7, scope: !13544)
!13554 = !DILocation(line: 6206, column: 9, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13546, file: !3, line: 6205, column: 25)
!13556 = !DILocation(line: 6206, column: 15, scope: !13555)
!13557 = !DILocation(line: 6206, column: 6, scope: !13555)
!13558 = !DILocation(line: 6207, column: 3, scope: !13555)
!13559 = !DILocation(line: 6208, column: 16, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13546, file: !3, line: 6207, column: 10)
!13561 = !DILocation(line: 6211, column: 27, scope: !13544)
!13562 = !DILocation(line: 6211, column: 32, scope: !13544)
!13563 = !DILocation(line: 6211, column: 9, scope: !13544)
!13564 = !DILocation(line: 6211, column: 7, scope: !13544)
!13565 = !DILocation(line: 6212, column: 7, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13544, file: !3, line: 6212, column: 7)
!13567 = !DILocation(line: 6212, column: 11, scope: !13566)
!13568 = !DILocation(line: 6212, column: 7, scope: !13544)
!13569 = !DILocation(line: 6213, column: 5, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13566, file: !3, line: 6212, column: 17)
!13571 = !DILocation(line: 6213, column: 12, scope: !13570)
!13572 = !DILocation(line: 6214, column: 8, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 6214, column: 8)
!13574 = !DILocation(line: 6214, column: 20, scope: !13573)
!13575 = !DILocation(line: 6214, column: 8, scope: !13570)
!13576 = !DILocation(line: 6215, column: 11, scope: !13573)
!13577 = !DILocation(line: 6215, column: 5, scope: !13573)
!13578 = !DILocation(line: 6217, column: 18, scope: !13573)
!13579 = !DILocation(line: 6217, column: 15, scope: !13573)
!13580 = !DILocation(line: 6217, column: 13, scope: !13573)
!13581 = !DILocation(line: 6217, column: 11, scope: !13573)
!13582 = !DILocation(line: 6218, column: 4, scope: !13570)
!13583 = !DILocation(line: 6219, column: 14, scope: !13584)
!13584 = distinct !DILexicalBlock(scope: !13566, file: !3, line: 6219, column: 14)
!13585 = !DILocation(line: 6219, column: 18, scope: !13584)
!13586 = !DILocation(line: 6219, column: 14, scope: !13566)
!13587 = !DILocation(line: 6220, column: 4, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13584, file: !3, line: 6219, column: 23)
!13589 = !DILocation(line: 6222, column: 4, scope: !13588)
!13590 = !DILocation(line: 6225, column: 8, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13544, file: !3, line: 6225, column: 7)
!13592 = !DILocation(line: 6225, column: 7, scope: !13591)
!13593 = !DILocation(line: 6225, column: 10, scope: !13591)
!13594 = !DILocation(line: 6225, column: 17, scope: !13591)
!13595 = !DILocation(line: 6225, column: 21, scope: !13591)
!13596 = !DILocation(line: 6225, column: 20, scope: !13591)
!13597 = !DILocation(line: 6225, column: 23, scope: !13591)
!13598 = !DILocation(line: 6225, column: 7, scope: !13544)
!13599 = !DILocation(line: 6227, column: 4, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13591, file: !3, line: 6225, column: 31)
!13601 = !DILocation(line: 6229, column: 4, scope: !13544)
!13602 = distinct !{!13602, !13540, !13603}
!13603 = !DILocation(line: 6230, column: 2, scope: !4859)
!13604 = !DILabel(scope: !4859, name: "out", file: !3, line: 6231)
!13605 = !DILocation(line: 6231, column: 1, scope: !4859)
!13606 = !DILocation(line: 394, column: 2, scope: !13607, inlinedAt: !13493)
!13607 = distinct !DILexicalBlock(scope: !13491, file: !8777, line: 394, column: 2)
!13608 = !{i32 -2145192227}
!13609 = !DILocation(line: 394, column: 2, scope: !13610, inlinedAt: !13493)
!13610 = distinct !DILexicalBlock(scope: !13607, file: !8777, line: 394, column: 2)
!13611 = !DILocation(line: 6233, column: 9, scope: !4859)
!13612 = !DILocation(line: 6233, column: 2, scope: !4859)
!13613 = distinct !DISubprogram(name: "pci_request_resource_alignment", scope: !3, file: !3, line: 6236, type: !13614, scopeLine: 6238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13614 = !DISubroutineType(types: !13615)
!13615 = !{null, !273, !304, !4160, !609}
!13616 = !DILocalVariable(name: "dev", arg: 1, scope: !13613, file: !3, line: 6236, type: !273)
!13617 = !DILocation(line: 6236, column: 60, scope: !13613)
!13618 = !DILocalVariable(name: "bar", arg: 2, scope: !13613, file: !3, line: 6236, type: !304)
!13619 = !DILocation(line: 6236, column: 69, scope: !13613)
!13620 = !DILocalVariable(name: "align", arg: 3, scope: !13613, file: !3, line: 6237, type: !4160)
!13621 = !DILocation(line: 6237, column: 25, scope: !13613)
!13622 = !DILocalVariable(name: "resize", arg: 4, scope: !13613, file: !3, line: 6237, type: !609)
!13623 = !DILocation(line: 6237, column: 37, scope: !13613)
!13624 = !DILocalVariable(name: "r", scope: !13613, file: !3, line: 6239, type: !4166)
!13625 = !DILocation(line: 6239, column: 19, scope: !13613)
!13626 = !DILocation(line: 6239, column: 24, scope: !13613)
!13627 = !DILocation(line: 6239, column: 29, scope: !13613)
!13628 = !DILocation(line: 6239, column: 38, scope: !13613)
!13629 = !DILocalVariable(name: "size", scope: !13613, file: !3, line: 6240, type: !4160)
!13630 = !DILocation(line: 6240, column: 18, scope: !13613)
!13631 = !DILocation(line: 6242, column: 8, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13613, file: !3, line: 6242, column: 6)
!13633 = !DILocation(line: 6242, column: 11, scope: !13632)
!13634 = !DILocation(line: 6242, column: 17, scope: !13632)
!13635 = !DILocation(line: 6242, column: 6, scope: !13613)
!13636 = !DILocation(line: 6243, column: 3, scope: !13632)
!13637 = !DILocation(line: 6245, column: 6, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13613, file: !3, line: 6245, column: 6)
!13639 = !DILocation(line: 6245, column: 9, scope: !13638)
!13640 = !DILocation(line: 6245, column: 15, scope: !13638)
!13641 = !DILocation(line: 6245, column: 6, scope: !13613)
!13642 = !DILocation(line: 6246, column: 3, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13638, file: !3, line: 6245, column: 39)
!13644 = !DILocation(line: 6248, column: 3, scope: !13643)
!13645 = !DILocation(line: 6251, column: 23, scope: !13613)
!13646 = !DILocation(line: 6251, column: 9, scope: !13613)
!13647 = !DILocation(line: 6251, column: 7, scope: !13613)
!13648 = !DILocation(line: 6252, column: 6, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13613, file: !3, line: 6252, column: 6)
!13650 = !DILocation(line: 6252, column: 14, scope: !13649)
!13651 = !DILocation(line: 6252, column: 11, scope: !13649)
!13652 = !DILocation(line: 6252, column: 6, scope: !13613)
!13653 = !DILocation(line: 6253, column: 3, scope: !13649)
!13654 = !DILocation(line: 6283, column: 2, scope: !13613)
!13655 = !DILocation(line: 6286, column: 6, scope: !13656)
!13656 = distinct !DILexicalBlock(scope: !13613, file: !3, line: 6286, column: 6)
!13657 = !DILocation(line: 6286, column: 6, scope: !13613)
!13658 = !DILocation(line: 6287, column: 3, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13656, file: !3, line: 6286, column: 14)
!13660 = !DILocation(line: 6287, column: 6, scope: !13659)
!13661 = !DILocation(line: 6287, column: 12, scope: !13659)
!13662 = !DILocation(line: 6288, column: 12, scope: !13659)
!13663 = !DILocation(line: 6288, column: 18, scope: !13659)
!13664 = !DILocation(line: 6288, column: 3, scope: !13659)
!13665 = !DILocation(line: 6288, column: 6, scope: !13659)
!13666 = !DILocation(line: 6288, column: 10, scope: !13659)
!13667 = !DILocation(line: 6289, column: 2, scope: !13659)
!13668 = !DILocation(line: 6290, column: 3, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13656, file: !3, line: 6289, column: 9)
!13670 = !DILocation(line: 6290, column: 6, scope: !13669)
!13671 = !DILocation(line: 6290, column: 12, scope: !13669)
!13672 = !DILocation(line: 6291, column: 3, scope: !13669)
!13673 = !DILocation(line: 6291, column: 6, scope: !13669)
!13674 = !DILocation(line: 6291, column: 12, scope: !13669)
!13675 = !DILocation(line: 6292, column: 14, scope: !13669)
!13676 = !DILocation(line: 6292, column: 3, scope: !13669)
!13677 = !DILocation(line: 6292, column: 6, scope: !13669)
!13678 = !DILocation(line: 6292, column: 12, scope: !13669)
!13679 = !DILocation(line: 6293, column: 12, scope: !13669)
!13680 = !DILocation(line: 6293, column: 15, scope: !13669)
!13681 = !DILocation(line: 6293, column: 23, scope: !13669)
!13682 = !DILocation(line: 6293, column: 21, scope: !13669)
!13683 = !DILocation(line: 6293, column: 28, scope: !13669)
!13684 = !DILocation(line: 6293, column: 3, scope: !13669)
!13685 = !DILocation(line: 6293, column: 6, scope: !13669)
!13686 = !DILocation(line: 6293, column: 10, scope: !13669)
!13687 = !DILocation(line: 6295, column: 2, scope: !13613)
!13688 = !DILocation(line: 6295, column: 5, scope: !13613)
!13689 = !DILocation(line: 6295, column: 11, scope: !13613)
!13690 = !DILocation(line: 6296, column: 1, scope: !13613)
!13691 = distinct !DISubprogram(name: "pci_resource_alignment_sysfs_init", scope: !3, file: !3, line: 6397, type: !13692, scopeLine: 6398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13692 = !DISubroutineType(types: !13693)
!13693 = !{!304}
!13694 = !DILocation(line: 6399, column: 9, scope: !13691)
!13695 = !DILocation(line: 6399, column: 2, scope: !13691)
!13696 = distinct !DISubprogram(name: "pci_ext_cfg_avail", scope: !3, file: !3, line: 6482, type: !13692, scopeLine: 6483, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13697 = !DILocation(line: 6484, column: 2, scope: !13696)
!13698 = distinct !DISubprogram(name: "pci_fixup_cardbus", scope: !3, file: !3, line: 6487, type: !4276, scopeLine: 6488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13699 = !DILocalVariable(name: "bus", arg: 1, scope: !13698, file: !3, line: 6487, type: !259)
!13700 = !DILocation(line: 6487, column: 47, scope: !13698)
!13701 = !DILocation(line: 6489, column: 1, scope: !13698)
!13702 = distinct !DISubprogram(name: "pci_setup", scope: !3, file: !3, line: 6492, type: !4738, scopeLine: 6493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13703 = !DILocalVariable(name: "str", arg: 1, scope: !13702, file: !3, line: 6492, type: !399)
!13704 = !DILocation(line: 6492, column: 35, scope: !13702)
!13705 = !DILocation(line: 6494, column: 2, scope: !13702)
!13706 = !DILocation(line: 6494, column: 9, scope: !13702)
!13707 = !DILocalVariable(name: "k", scope: !13708, file: !3, line: 6495, type: !399)
!13708 = distinct !DILexicalBlock(scope: !13702, file: !3, line: 6494, column: 14)
!13709 = !DILocation(line: 6495, column: 9, scope: !13708)
!13710 = !DILocation(line: 6495, column: 20, scope: !13708)
!13711 = !DILocation(line: 6495, column: 13, scope: !13708)
!13712 = !DILocation(line: 6496, column: 7, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13708, file: !3, line: 6496, column: 7)
!13714 = !DILocation(line: 6496, column: 7, scope: !13708)
!13715 = !DILocation(line: 6497, column: 6, scope: !13713)
!13716 = !DILocation(line: 6497, column: 9, scope: !13713)
!13717 = !DILocation(line: 6497, column: 4, scope: !13713)
!13718 = !DILocation(line: 6498, column: 8, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !13708, file: !3, line: 6498, column: 7)
!13720 = !DILocation(line: 6498, column: 7, scope: !13719)
!13721 = !DILocation(line: 6498, column: 12, scope: !13719)
!13722 = !DILocation(line: 6498, column: 36, scope: !13719)
!13723 = !DILocation(line: 6498, column: 22, scope: !13719)
!13724 = !DILocation(line: 6498, column: 20, scope: !13719)
!13725 = !DILocation(line: 6498, column: 42, scope: !13719)
!13726 = !DILocation(line: 6498, column: 46, scope: !13719)
!13727 = !DILocation(line: 6498, column: 45, scope: !13719)
!13728 = !DILocation(line: 6498, column: 7, scope: !13708)
!13729 = !DILocation(line: 6499, column: 16, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13731, file: !3, line: 6499, column: 8)
!13731 = distinct !DILexicalBlock(scope: !13719, file: !3, line: 6498, column: 51)
!13732 = !DILocation(line: 6499, column: 9, scope: !13730)
!13733 = !DILocation(line: 6499, column: 8, scope: !13731)
!13734 = !DILocation(line: 6500, column: 5, scope: !13735)
!13735 = distinct !DILexicalBlock(scope: !13730, file: !3, line: 6499, column: 31)
!13736 = !DILocation(line: 6501, column: 4, scope: !13735)
!13737 = !DILocation(line: 6501, column: 24, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13730, file: !3, line: 6501, column: 15)
!13739 = !DILocation(line: 6501, column: 16, scope: !13738)
!13740 = !DILocation(line: 6501, column: 15, scope: !13730)
!13741 = !DILocation(line: 6502, column: 5, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13738, file: !3, line: 6501, column: 42)
!13743 = !DILocation(line: 6503, column: 23, scope: !13742)
!13744 = !DILocation(line: 6504, column: 4, scope: !13742)
!13745 = !DILocation(line: 6504, column: 23, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13738, file: !3, line: 6504, column: 15)
!13747 = !DILocation(line: 6504, column: 16, scope: !13746)
!13748 = !DILocation(line: 6504, column: 15, scope: !13738)
!13749 = !DILocation(line: 6505, column: 5, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13746, file: !3, line: 6504, column: 38)
!13751 = !DILocation(line: 6506, column: 4, scope: !13750)
!13752 = !DILocation(line: 6506, column: 23, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13746, file: !3, line: 6506, column: 15)
!13754 = !DILocation(line: 6506, column: 16, scope: !13753)
!13755 = !DILocation(line: 6506, column: 15, scope: !13746)
!13756 = !DILocation(line: 6507, column: 20, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13753, file: !3, line: 6506, column: 42)
!13758 = !DILocation(line: 6508, column: 4, scope: !13757)
!13759 = !DILocation(line: 6508, column: 24, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13753, file: !3, line: 6508, column: 15)
!13761 = !DILocation(line: 6508, column: 16, scope: !13760)
!13762 = !DILocation(line: 6508, column: 15, scope: !13753)
!13763 = !DILocation(line: 6509, column: 25, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13760, file: !3, line: 6508, column: 45)
!13765 = !DILocation(line: 6509, column: 29, scope: !13764)
!13766 = !DILocation(line: 6509, column: 5, scope: !13764)
!13767 = !DILocation(line: 6510, column: 4, scope: !13764)
!13768 = !DILocation(line: 6510, column: 24, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13760, file: !3, line: 6510, column: 15)
!13770 = !DILocation(line: 6510, column: 16, scope: !13769)
!13771 = !DILocation(line: 6510, column: 15, scope: !13760)
!13772 = !DILocation(line: 6511, column: 5, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13769, file: !3, line: 6510, column: 44)
!13774 = !DILocation(line: 6512, column: 4, scope: !13773)
!13775 = !DILocation(line: 6512, column: 23, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13769, file: !3, line: 6512, column: 15)
!13777 = !DILocation(line: 6512, column: 16, scope: !13776)
!13778 = !DILocation(line: 6512, column: 15, scope: !13769)
!13779 = !DILocation(line: 6513, column: 5, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13776, file: !3, line: 6512, column: 42)
!13781 = !DILocation(line: 6514, column: 4, scope: !13780)
!13782 = !DILocation(line: 6514, column: 24, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13776, file: !3, line: 6514, column: 15)
!13784 = !DILocation(line: 6514, column: 16, scope: !13783)
!13785 = !DILocation(line: 6514, column: 15, scope: !13776)
!13786 = !DILocation(line: 6515, column: 23, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13783, file: !3, line: 6514, column: 42)
!13788 = !DILocation(line: 6516, column: 4, scope: !13787)
!13789 = !DILocation(line: 6516, column: 24, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13783, file: !3, line: 6516, column: 15)
!13791 = !DILocation(line: 6516, column: 16, scope: !13790)
!13792 = !DILocation(line: 6516, column: 15, scope: !13783)
!13793 = !DILocation(line: 6517, column: 36, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13790, file: !3, line: 6516, column: 46)
!13795 = !DILocation(line: 6517, column: 40, scope: !13794)
!13796 = !DILocation(line: 6517, column: 27, scope: !13794)
!13797 = !DILocation(line: 6517, column: 25, scope: !13794)
!13798 = !DILocation(line: 6518, column: 4, scope: !13794)
!13799 = !DILocation(line: 6518, column: 24, scope: !13800)
!13800 = distinct !DILexicalBlock(scope: !13790, file: !3, line: 6518, column: 15)
!13801 = !DILocation(line: 6518, column: 16, scope: !13800)
!13802 = !DILocation(line: 6518, column: 15, scope: !13790)
!13803 = !DILocation(line: 6519, column: 37, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13800, file: !3, line: 6518, column: 48)
!13805 = !DILocation(line: 6519, column: 41, scope: !13804)
!13806 = !DILocation(line: 6519, column: 28, scope: !13804)
!13807 = !DILocation(line: 6519, column: 26, scope: !13804)
!13808 = !DILocation(line: 6520, column: 4, scope: !13804)
!13809 = !DILocation(line: 6520, column: 24, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13800, file: !3, line: 6520, column: 15)
!13811 = !DILocation(line: 6520, column: 16, scope: !13810)
!13812 = !DILocation(line: 6520, column: 15, scope: !13800)
!13813 = !DILocation(line: 6521, column: 32, scope: !13814)
!13814 = distinct !DILexicalBlock(scope: !13810, file: !3, line: 6520, column: 57)
!13815 = !DILocation(line: 6521, column: 36, scope: !13814)
!13816 = !DILocation(line: 6521, column: 30, scope: !13814)
!13817 = !DILocation(line: 6522, column: 4, scope: !13814)
!13818 = !DILocation(line: 6522, column: 24, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13810, file: !3, line: 6522, column: 15)
!13820 = !DILocation(line: 6522, column: 16, scope: !13819)
!13821 = !DILocation(line: 6522, column: 15, scope: !13810)
!13822 = !DILocation(line: 6523, column: 26, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13819, file: !3, line: 6522, column: 42)
!13824 = !DILocation(line: 6523, column: 30, scope: !13823)
!13825 = !DILocation(line: 6523, column: 5, scope: !13823)
!13826 = !DILocation(line: 6524, column: 4, scope: !13823)
!13827 = !DILocation(line: 6524, column: 24, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13819, file: !3, line: 6524, column: 15)
!13829 = !DILocation(line: 6524, column: 16, scope: !13828)
!13830 = !DILocation(line: 6524, column: 15, scope: !13819)
!13831 = !DILocation(line: 6525, column: 36, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13828, file: !3, line: 6524, column: 46)
!13833 = !DILocation(line: 6525, column: 40, scope: !13832)
!13834 = !DILocation(line: 6525, column: 27, scope: !13832)
!13835 = !DILocation(line: 6525, column: 25, scope: !13832)
!13836 = !DILocation(line: 6526, column: 4, scope: !13832)
!13837 = !DILocation(line: 6526, column: 24, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13828, file: !3, line: 6526, column: 15)
!13839 = !DILocation(line: 6526, column: 16, scope: !13838)
!13840 = !DILocation(line: 6526, column: 15, scope: !13828)
!13841 = !DILocation(line: 6527, column: 38, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13838, file: !3, line: 6526, column: 49)
!13843 = !DILocation(line: 6527, column: 42, scope: !13842)
!13844 = !DILocation(line: 6527, column: 29, scope: !13842)
!13845 = !DILocation(line: 6527, column: 27, scope: !13842)
!13846 = !DILocation(line: 6528, column: 4, scope: !13842)
!13847 = !DILocation(line: 6528, column: 24, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13838, file: !3, line: 6528, column: 15)
!13849 = !DILocation(line: 6528, column: 16, scope: !13848)
!13850 = !DILocation(line: 6528, column: 15, scope: !13838)
!13851 = !DILocation(line: 6529, column: 43, scope: !13852)
!13852 = distinct !DILexicalBlock(scope: !13848, file: !3, line: 6528, column: 53)
!13853 = !DILocation(line: 6529, column: 47, scope: !13852)
!13854 = !DILocation(line: 6529, column: 34, scope: !13852)
!13855 = !DILocation(line: 6529, column: 32, scope: !13852)
!13856 = !DILocation(line: 6530, column: 4, scope: !13852)
!13857 = !DILocation(line: 6530, column: 24, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13848, file: !3, line: 6530, column: 15)
!13859 = !DILocation(line: 6530, column: 16, scope: !13858)
!13860 = !DILocation(line: 6530, column: 15, scope: !13848)
!13861 = !DILocation(line: 6531, column: 38, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13858, file: !3, line: 6530, column: 48)
!13863 = !DILocation(line: 6531, column: 42, scope: !13862)
!13864 = !DILocation(line: 6531, column: 29, scope: !13862)
!13865 = !DILocation(line: 6531, column: 27, scope: !13862)
!13866 = !DILocation(line: 6532, column: 34, scope: !13862)
!13867 = !DILocation(line: 6532, column: 32, scope: !13862)
!13868 = !DILocation(line: 6533, column: 4, scope: !13862)
!13869 = !DILocation(line: 6533, column: 24, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13858, file: !3, line: 6533, column: 15)
!13871 = !DILocation(line: 6533, column: 16, scope: !13870)
!13872 = !DILocation(line: 6533, column: 15, scope: !13858)
!13873 = !DILocation(line: 6535, column: 21, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13870, file: !3, line: 6533, column: 48)
!13875 = !DILocation(line: 6535, column: 25, scope: !13874)
!13876 = !DILocation(line: 6535, column: 6, scope: !13874)
!13877 = !DILocation(line: 6534, column: 26, scope: !13874)
!13878 = !DILocation(line: 6536, column: 9, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13874, file: !3, line: 6536, column: 9)
!13880 = !DILocation(line: 6536, column: 30, scope: !13879)
!13881 = !DILocation(line: 6536, column: 9, scope: !13874)
!13882 = !DILocation(line: 6537, column: 27, scope: !13879)
!13883 = !DILocation(line: 6537, column: 6, scope: !13879)
!13884 = !DILocation(line: 6538, column: 4, scope: !13874)
!13885 = !DILocation(line: 6538, column: 24, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13870, file: !3, line: 6538, column: 15)
!13887 = !DILocation(line: 6538, column: 16, scope: !13886)
!13888 = !DILocation(line: 6538, column: 15, scope: !13870)
!13889 = !DILocation(line: 6539, column: 21, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13886, file: !3, line: 6538, column: 55)
!13891 = !DILocation(line: 6540, column: 4, scope: !13890)
!13892 = !DILocation(line: 6540, column: 24, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13886, file: !3, line: 6540, column: 15)
!13894 = !DILocation(line: 6540, column: 16, scope: !13893)
!13895 = !DILocation(line: 6540, column: 15, scope: !13886)
!13896 = !DILocation(line: 6541, column: 21, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13893, file: !3, line: 6540, column: 51)
!13898 = !DILocation(line: 6542, column: 4, scope: !13897)
!13899 = !DILocation(line: 6542, column: 24, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13893, file: !3, line: 6542, column: 15)
!13901 = !DILocation(line: 6542, column: 16, scope: !13900)
!13902 = !DILocation(line: 6542, column: 15, scope: !13893)
!13903 = !DILocation(line: 6543, column: 21, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13900, file: !3, line: 6542, column: 51)
!13905 = !DILocation(line: 6544, column: 4, scope: !13904)
!13906 = !DILocation(line: 6544, column: 24, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13900, file: !3, line: 6544, column: 15)
!13908 = !DILocation(line: 6544, column: 16, scope: !13907)
!13909 = !DILocation(line: 6544, column: 15, scope: !13900)
!13910 = !DILocation(line: 6545, column: 21, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13907, file: !3, line: 6544, column: 56)
!13912 = !DILocation(line: 6546, column: 4, scope: !13911)
!13913 = !DILocation(line: 6546, column: 24, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13907, file: !3, line: 6546, column: 15)
!13915 = !DILocation(line: 6546, column: 16, scope: !13914)
!13916 = !DILocation(line: 6546, column: 15, scope: !13907)
!13917 = !DILocation(line: 6547, column: 5, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13914, file: !3, line: 6546, column: 51)
!13919 = !DILocation(line: 6548, column: 4, scope: !13918)
!13920 = !DILocation(line: 6548, column: 24, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13914, file: !3, line: 6548, column: 15)
!13922 = !DILocation(line: 6548, column: 16, scope: !13921)
!13923 = !DILocation(line: 6548, column: 15, scope: !13914)
!13924 = !DILocation(line: 6549, column: 31, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13921, file: !3, line: 6548, column: 56)
!13926 = !DILocation(line: 6549, column: 35, scope: !13925)
!13927 = !DILocation(line: 6549, column: 29, scope: !13925)
!13928 = !DILocation(line: 6550, column: 4, scope: !13925)
!13929 = !DILocation(line: 6551, column: 5, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13921, file: !3, line: 6550, column: 11)
!13931 = !DILocation(line: 6553, column: 3, scope: !13731)
!13932 = !DILocation(line: 6554, column: 9, scope: !13708)
!13933 = !DILocation(line: 6554, column: 7, scope: !13708)
!13934 = distinct !{!13934, !13705, !13935}
!13935 = !DILocation(line: 6555, column: 2, scope: !13702)
!13936 = !DILocation(line: 6556, column: 2, scope: !13702)
!13937 = distinct !DISubprogram(name: "pci_realloc_setup_params", scope: !3, file: !3, line: 6569, type: !13692, scopeLine: 6570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13938 = !DILocation(line: 6571, column: 37, scope: !13937)
!13939 = !DILocation(line: 6571, column: 29, scope: !13937)
!13940 = !DILocation(line: 6571, column: 27, scope: !13937)
!13941 = !DILocation(line: 6573, column: 36, scope: !13937)
!13942 = !DILocation(line: 6573, column: 28, scope: !13937)
!13943 = !DILocation(line: 6573, column: 26, scope: !13937)
!13944 = !DILocation(line: 6575, column: 2, scope: !13937)
!13945 = distinct !DISubprogram(name: "__pci_find_next_cap_ttl", scope: !3, file: !3, line: 402, type: !13946, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!13946 = !DISubroutineType(types: !13947)
!13947 = !{!304, !259, !7, !310, !304, !824}
!13948 = !DILocalVariable(name: "bus", arg: 1, scope: !13945, file: !3, line: 402, type: !259)
!13949 = !DILocation(line: 402, column: 52, scope: !13945)
!13950 = !DILocalVariable(name: "devfn", arg: 2, scope: !13945, file: !3, line: 402, type: !7)
!13951 = !DILocation(line: 402, column: 70, scope: !13945)
!13952 = !DILocalVariable(name: "pos", arg: 3, scope: !13945, file: !3, line: 403, type: !310)
!13953 = !DILocation(line: 403, column: 11, scope: !13945)
!13954 = !DILocalVariable(name: "cap", arg: 4, scope: !13945, file: !3, line: 403, type: !304)
!13955 = !DILocation(line: 403, column: 20, scope: !13945)
!13956 = !DILocalVariable(name: "ttl", arg: 5, scope: !13945, file: !3, line: 403, type: !824)
!13957 = !DILocation(line: 403, column: 30, scope: !13945)
!13958 = !DILocalVariable(name: "id", scope: !13945, file: !3, line: 405, type: !310)
!13959 = !DILocation(line: 405, column: 5, scope: !13945)
!13960 = !DILocalVariable(name: "ent", scope: !13945, file: !3, line: 406, type: !979)
!13961 = !DILocation(line: 406, column: 6, scope: !13945)
!13962 = !DILocation(line: 408, column: 27, scope: !13945)
!13963 = !DILocation(line: 408, column: 32, scope: !13945)
!13964 = !DILocation(line: 408, column: 39, scope: !13945)
!13965 = !DILocation(line: 408, column: 2, scope: !13945)
!13966 = !DILocation(line: 410, column: 2, scope: !13945)
!13967 = !DILocation(line: 410, column: 11, scope: !13945)
!13968 = !DILocation(line: 410, column: 15, scope: !13945)
!13969 = !DILocation(line: 411, column: 7, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13971, file: !3, line: 411, column: 7)
!13971 = distinct !DILexicalBlock(scope: !13945, file: !3, line: 410, column: 19)
!13972 = !DILocation(line: 411, column: 11, scope: !13970)
!13973 = !DILocation(line: 411, column: 7, scope: !13971)
!13974 = !DILocation(line: 412, column: 4, scope: !13970)
!13975 = !DILocation(line: 413, column: 7, scope: !13971)
!13976 = !DILocation(line: 414, column: 28, scope: !13971)
!13977 = !DILocation(line: 414, column: 33, scope: !13971)
!13978 = !DILocation(line: 414, column: 40, scope: !13971)
!13979 = !DILocation(line: 414, column: 3, scope: !13971)
!13980 = !DILocation(line: 416, column: 8, scope: !13971)
!13981 = !DILocation(line: 416, column: 12, scope: !13971)
!13982 = !DILocation(line: 416, column: 6, scope: !13971)
!13983 = !DILocation(line: 417, column: 7, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13971, file: !3, line: 417, column: 7)
!13985 = !DILocation(line: 417, column: 10, scope: !13984)
!13986 = !DILocation(line: 417, column: 7, scope: !13971)
!13987 = !DILocation(line: 418, column: 4, scope: !13984)
!13988 = !DILocation(line: 419, column: 7, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13971, file: !3, line: 419, column: 7)
!13990 = !DILocation(line: 419, column: 13, scope: !13989)
!13991 = !DILocation(line: 419, column: 10, scope: !13989)
!13992 = !DILocation(line: 419, column: 7, scope: !13971)
!13993 = !DILocation(line: 420, column: 11, scope: !13989)
!13994 = !DILocation(line: 420, column: 4, scope: !13989)
!13995 = !DILocation(line: 421, column: 10, scope: !13971)
!13996 = !DILocation(line: 421, column: 14, scope: !13971)
!13997 = !DILocation(line: 421, column: 9, scope: !13971)
!13998 = !DILocation(line: 421, column: 7, scope: !13971)
!13999 = distinct !{!13999, !13966, !14000}
!14000 = !DILocation(line: 422, column: 2, scope: !13945)
!14001 = !DILocation(line: 423, column: 2, scope: !13945)
!14002 = !DILocation(line: 424, column: 1, scope: !13945)
!14003 = distinct !DISubprogram(name: "pci_wakeup_event", scope: !4228, file: !4228, line: 113, type: !3533, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14004 = !DILocalVariable(name: "dev", arg: 1, scope: !14003, file: !4228, line: 113, type: !273)
!14005 = !DILocation(line: 113, column: 53, scope: !14003)
!14006 = !DILocation(line: 116, column: 19, scope: !14003)
!14007 = !DILocation(line: 116, column: 24, scope: !14003)
!14008 = !DILocation(line: 116, column: 2, scope: !14003)
!14009 = !DILocation(line: 117, column: 1, scope: !14003)
!14010 = distinct !DISubprogram(name: "pm_request_resume", scope: !8752, file: !8752, line: 344, type: !3620, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14011 = !DILocalVariable(name: "dev", arg: 1, scope: !14010, file: !8752, line: 344, type: !3584)
!14012 = !DILocation(line: 344, column: 52, scope: !14010)
!14013 = !DILocation(line: 346, column: 29, scope: !14010)
!14014 = !DILocation(line: 346, column: 9, scope: !14010)
!14015 = !DILocation(line: 346, column: 2, scope: !14010)
!14016 = distinct !DISubprogram(name: "pm_wakeup_event", scope: !3680, file: !3680, line: 200, type: !14017, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14017 = !DISubroutineType(types: !14018)
!14018 = !{null, !3584, !7}
!14019 = !DILocalVariable(name: "dev", arg: 1, scope: !14016, file: !3680, line: 200, type: !3584)
!14020 = !DILocation(line: 200, column: 51, scope: !14016)
!14021 = !DILocalVariable(name: "msec", arg: 2, scope: !14016, file: !3680, line: 200, type: !7)
!14022 = !DILocation(line: 200, column: 69, scope: !14016)
!14023 = !DILocation(line: 202, column: 29, scope: !14016)
!14024 = !DILocation(line: 202, column: 34, scope: !14016)
!14025 = !DILocation(line: 202, column: 9, scope: !14016)
!14026 = !DILocation(line: 202, column: 2, scope: !14016)
!14027 = distinct !DISubprogram(name: "pci_power_name", scope: !6, file: !6, line: 168, type: !14028, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14028 = !DISubroutineType(types: !14029)
!14029 = !{!340, !4124}
!14030 = !DILocalVariable(name: "state", arg: 1, scope: !14027, file: !6, line: 168, type: !4124)
!14031 = !DILocation(line: 168, column: 54, scope: !14027)
!14032 = !DILocation(line: 170, column: 43, scope: !14027)
!14033 = !DILocation(line: 170, column: 27, scope: !14027)
!14034 = !DILocation(line: 170, column: 9, scope: !14027)
!14035 = !DILocation(line: 170, column: 2, scope: !14027)
!14036 = distinct !DISubprogram(name: "pci_dev_d3_sleep", scope: !3, file: !3, line: 64, type: !3533, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14037 = !DILocalVariable(name: "dev", arg: 1, scope: !14036, file: !3, line: 64, type: !273)
!14038 = !DILocation(line: 64, column: 46, scope: !14036)
!14039 = !DILocalVariable(name: "delay", scope: !14036, file: !3, line: 66, type: !7)
!14040 = !DILocation(line: 66, column: 15, scope: !14036)
!14041 = !DILocation(line: 66, column: 23, scope: !14036)
!14042 = !DILocation(line: 66, column: 28, scope: !14036)
!14043 = !DILocation(line: 68, column: 6, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !14036, file: !3, line: 68, column: 6)
!14045 = !DILocation(line: 68, column: 14, scope: !14044)
!14046 = !DILocation(line: 68, column: 12, scope: !14044)
!14047 = !DILocation(line: 68, column: 6, scope: !14036)
!14048 = !DILocation(line: 69, column: 11, scope: !14044)
!14049 = !DILocation(line: 69, column: 9, scope: !14044)
!14050 = !DILocation(line: 69, column: 3, scope: !14044)
!14051 = !DILocation(line: 71, column: 6, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !14036, file: !3, line: 71, column: 6)
!14053 = !DILocation(line: 71, column: 6, scope: !14036)
!14054 = !DILocation(line: 72, column: 10, scope: !14052)
!14055 = !DILocation(line: 72, column: 3, scope: !14052)
!14056 = !DILocation(line: 73, column: 1, scope: !14036)
!14057 = distinct !DISubprogram(name: "pci_restore_bars", scope: !3, file: !3, line: 927, type: !3533, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14058 = !DILocalVariable(name: "dev", arg: 1, scope: !14057, file: !3, line: 927, type: !273)
!14059 = !DILocation(line: 927, column: 46, scope: !14057)
!14060 = !DILocalVariable(name: "i", scope: !14057, file: !3, line: 929, type: !304)
!14061 = !DILocation(line: 929, column: 6, scope: !14057)
!14062 = !DILocation(line: 931, column: 9, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 931, column: 2)
!14064 = !DILocation(line: 931, column: 7, scope: !14063)
!14065 = !DILocation(line: 931, column: 14, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14063, file: !3, line: 931, column: 2)
!14067 = !DILocation(line: 931, column: 16, scope: !14066)
!14068 = !DILocation(line: 931, column: 2, scope: !14063)
!14069 = !DILocation(line: 932, column: 23, scope: !14066)
!14070 = !DILocation(line: 932, column: 28, scope: !14066)
!14071 = !DILocation(line: 932, column: 3, scope: !14066)
!14072 = !DILocation(line: 931, column: 41, scope: !14066)
!14073 = !DILocation(line: 931, column: 2, scope: !14066)
!14074 = distinct !{!14074, !14068, !14075}
!14075 = !DILocation(line: 932, column: 29, scope: !14063)
!14076 = !DILocation(line: 933, column: 1, scope: !14057)
!14077 = distinct !DISubprogram(name: "__ilog2_u64", scope: !12596, file: !12596, line: 30, type: !14078, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14078 = !DISubroutineType(types: !14079)
!14079 = !{!304, !541}
!14080 = !DILocalVariable(name: "x", arg: 1, scope: !14081, file: !12492, line: 366, type: !542)
!14081 = distinct !DISubprogram(name: "fls64", scope: !12492, file: !12492, line: 366, type: !14082, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14082 = !DISubroutineType(types: !14083)
!14083 = !{!304, !542}
!14084 = !DILocation(line: 366, column: 40, scope: !14081, inlinedAt: !14085)
!14085 = distinct !DILocation(line: 32, column: 9, scope: !14077)
!14086 = !DILocalVariable(name: "bitpos", scope: !14081, file: !12492, line: 368, type: !304)
!14087 = !DILocation(line: 368, column: 6, scope: !14081, inlinedAt: !14085)
!14088 = !DILocalVariable(name: "n", arg: 1, scope: !14077, file: !12596, line: 30, type: !541)
!14089 = !DILocation(line: 30, column: 21, scope: !14077)
!14090 = !DILocation(line: 32, column: 15, scope: !14077)
!14091 = !DILocation(line: 374, column: 2, scope: !14081, inlinedAt: !14085)
!14092 = !DILocation(line: 376, column: 14, scope: !14081, inlinedAt: !14085)
!14093 = !{i32 488076}
!14094 = !DILocation(line: 377, column: 9, scope: !14081, inlinedAt: !14085)
!14095 = !DILocation(line: 377, column: 16, scope: !14081, inlinedAt: !14085)
!14096 = !DILocation(line: 32, column: 18, scope: !14077)
!14097 = !DILocation(line: 32, column: 2, scope: !14077)
!14098 = distinct !DISubprogram(name: "pci_restore_config_space_range", scope: !3, file: !3, line: 1597, type: !14099, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14099 = !DISubroutineType(types: !14100)
!14100 = !{null, !273, !304, !304, !304, !609}
!14101 = !DILocalVariable(name: "pdev", arg: 1, scope: !14098, file: !3, line: 1597, type: !273)
!14102 = !DILocation(line: 1597, column: 60, scope: !14098)
!14103 = !DILocalVariable(name: "start", arg: 2, scope: !14098, file: !3, line: 1598, type: !304)
!14104 = !DILocation(line: 1598, column: 13, scope: !14098)
!14105 = !DILocalVariable(name: "end", arg: 3, scope: !14098, file: !3, line: 1598, type: !304)
!14106 = !DILocation(line: 1598, column: 24, scope: !14098)
!14107 = !DILocalVariable(name: "retry", arg: 4, scope: !14098, file: !3, line: 1598, type: !304)
!14108 = !DILocation(line: 1598, column: 33, scope: !14098)
!14109 = !DILocalVariable(name: "force", arg: 5, scope: !14098, file: !3, line: 1599, type: !609)
!14110 = !DILocation(line: 1599, column: 14, scope: !14098)
!14111 = !DILocalVariable(name: "index", scope: !14098, file: !3, line: 1601, type: !304)
!14112 = !DILocation(line: 1601, column: 6, scope: !14098)
!14113 = !DILocation(line: 1603, column: 15, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14098, file: !3, line: 1603, column: 2)
!14115 = !DILocation(line: 1603, column: 13, scope: !14114)
!14116 = !DILocation(line: 1603, column: 7, scope: !14114)
!14117 = !DILocation(line: 1603, column: 20, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14114, file: !3, line: 1603, column: 2)
!14119 = !DILocation(line: 1603, column: 29, scope: !14118)
!14120 = !DILocation(line: 1603, column: 26, scope: !14118)
!14121 = !DILocation(line: 1603, column: 2, scope: !14114)
!14122 = !DILocation(line: 1604, column: 28, scope: !14118)
!14123 = !DILocation(line: 1604, column: 38, scope: !14118)
!14124 = !DILocation(line: 1604, column: 36, scope: !14118)
!14125 = !DILocation(line: 1605, column: 7, scope: !14118)
!14126 = !DILocation(line: 1605, column: 13, scope: !14118)
!14127 = !DILocation(line: 1605, column: 32, scope: !14118)
!14128 = !DILocation(line: 1606, column: 7, scope: !14118)
!14129 = !DILocation(line: 1606, column: 14, scope: !14118)
!14130 = !DILocation(line: 1604, column: 3, scope: !14118)
!14131 = !DILocation(line: 1603, column: 41, scope: !14118)
!14132 = !DILocation(line: 1603, column: 2, scope: !14118)
!14133 = distinct !{!14133, !14121, !14134}
!14134 = !DILocation(line: 1606, column: 19, scope: !14114)
!14135 = !DILocation(line: 1607, column: 1, scope: !14098)
!14136 = distinct !DISubprogram(name: "pci_restore_config_dword", scope: !3, file: !3, line: 1573, type: !14137, scopeLine: 1575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14137 = !DISubroutineType(types: !14138)
!14138 = !{null, !273, !304, !319, !304, !609}
!14139 = !DILocalVariable(name: "pdev", arg: 1, scope: !14136, file: !3, line: 1573, type: !273)
!14140 = !DILocation(line: 1573, column: 54, scope: !14136)
!14141 = !DILocalVariable(name: "offset", arg: 2, scope: !14136, file: !3, line: 1573, type: !304)
!14142 = !DILocation(line: 1573, column: 64, scope: !14136)
!14143 = !DILocalVariable(name: "saved_val", arg: 3, scope: !14136, file: !3, line: 1574, type: !319)
!14144 = !DILocation(line: 1574, column: 14, scope: !14136)
!14145 = !DILocalVariable(name: "retry", arg: 4, scope: !14136, file: !3, line: 1574, type: !304)
!14146 = !DILocation(line: 1574, column: 29, scope: !14136)
!14147 = !DILocalVariable(name: "force", arg: 5, scope: !14136, file: !3, line: 1574, type: !609)
!14148 = !DILocation(line: 1574, column: 41, scope: !14136)
!14149 = !DILocalVariable(name: "val", scope: !14136, file: !3, line: 1576, type: !319)
!14150 = !DILocation(line: 1576, column: 6, scope: !14136)
!14151 = !DILocation(line: 1578, column: 24, scope: !14136)
!14152 = !DILocation(line: 1578, column: 30, scope: !14136)
!14153 = !DILocation(line: 1578, column: 2, scope: !14136)
!14154 = !DILocation(line: 1579, column: 7, scope: !14155)
!14155 = distinct !DILexicalBlock(scope: !14136, file: !3, line: 1579, column: 6)
!14156 = !DILocation(line: 1579, column: 13, scope: !14155)
!14157 = !DILocation(line: 1579, column: 16, scope: !14155)
!14158 = !DILocation(line: 1579, column: 23, scope: !14155)
!14159 = !DILocation(line: 1579, column: 20, scope: !14155)
!14160 = !DILocation(line: 1579, column: 6, scope: !14136)
!14161 = !DILocation(line: 1580, column: 3, scope: !14155)
!14162 = !DILocation(line: 1582, column: 2, scope: !14136)
!14163 = !DILocation(line: 1585, column: 26, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14165, file: !3, line: 1582, column: 11)
!14165 = distinct !DILexicalBlock(scope: !14166, file: !3, line: 1582, column: 2)
!14166 = distinct !DILexicalBlock(scope: !14136, file: !3, line: 1582, column: 2)
!14167 = !DILocation(line: 1585, column: 32, scope: !14164)
!14168 = !DILocation(line: 1585, column: 40, scope: !14164)
!14169 = !DILocation(line: 1585, column: 3, scope: !14164)
!14170 = !DILocation(line: 1586, column: 12, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14164, file: !3, line: 1586, column: 7)
!14172 = !DILocation(line: 1586, column: 15, scope: !14171)
!14173 = !DILocation(line: 1586, column: 7, scope: !14164)
!14174 = !DILocation(line: 1587, column: 4, scope: !14171)
!14175 = !DILocation(line: 1589, column: 25, scope: !14164)
!14176 = !DILocation(line: 1589, column: 31, scope: !14164)
!14177 = !DILocation(line: 1589, column: 3, scope: !14164)
!14178 = !DILocation(line: 1590, column: 7, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14164, file: !3, line: 1590, column: 7)
!14180 = !DILocation(line: 1590, column: 14, scope: !14179)
!14181 = !DILocation(line: 1590, column: 11, scope: !14179)
!14182 = !DILocation(line: 1590, column: 7, scope: !14164)
!14183 = !DILocation(line: 1591, column: 4, scope: !14179)
!14184 = !DILocation(line: 1593, column: 3, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14186, file: !3, line: 1593, column: 3)
!14186 = distinct !DILexicalBlock(scope: !14187, file: !3, line: 1593, column: 3)
!14187 = distinct !DILexicalBlock(scope: !14188, file: !3, line: 1593, column: 3)
!14188 = distinct !DILexicalBlock(scope: !14164, file: !3, line: 1593, column: 3)
!14189 = !DILocation(line: 1582, column: 2, scope: !14165)
!14190 = distinct !{!14190, !14191, !14192}
!14191 = !DILocation(line: 1582, column: 2, scope: !14166)
!14192 = !DILocation(line: 1594, column: 2, scope: !14166)
!14193 = !DILocation(line: 1595, column: 1, scope: !14136)
!14194 = distinct !DISubprogram(name: "pci_std_enable_acs", scope: !3, file: !3, line: 863, type: !3533, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14195 = !DILocalVariable(name: "dev", arg: 1, scope: !14194, file: !3, line: 863, type: !273)
!14196 = !DILocation(line: 863, column: 48, scope: !14194)
!14197 = !DILocalVariable(name: "pos", scope: !14194, file: !3, line: 865, type: !304)
!14198 = !DILocation(line: 865, column: 6, scope: !14194)
!14199 = !DILocalVariable(name: "cap", scope: !14194, file: !3, line: 866, type: !979)
!14200 = !DILocation(line: 866, column: 6, scope: !14194)
!14201 = !DILocalVariable(name: "ctrl", scope: !14194, file: !3, line: 867, type: !979)
!14202 = !DILocation(line: 867, column: 6, scope: !14194)
!14203 = !DILocation(line: 869, column: 8, scope: !14194)
!14204 = !DILocation(line: 869, column: 13, scope: !14194)
!14205 = !DILocation(line: 869, column: 6, scope: !14194)
!14206 = !DILocation(line: 870, column: 7, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14194, file: !3, line: 870, column: 6)
!14208 = !DILocation(line: 870, column: 6, scope: !14194)
!14209 = !DILocation(line: 871, column: 3, scope: !14207)
!14210 = !DILocation(line: 873, column: 23, scope: !14194)
!14211 = !DILocation(line: 873, column: 28, scope: !14194)
!14212 = !DILocation(line: 873, column: 32, scope: !14194)
!14213 = !DILocation(line: 873, column: 2, scope: !14194)
!14214 = !DILocation(line: 874, column: 23, scope: !14194)
!14215 = !DILocation(line: 874, column: 28, scope: !14194)
!14216 = !DILocation(line: 874, column: 32, scope: !14194)
!14217 = !DILocation(line: 874, column: 2, scope: !14194)
!14218 = !DILocation(line: 877, column: 11, scope: !14194)
!14219 = !DILocation(line: 877, column: 15, scope: !14194)
!14220 = !DILocation(line: 877, column: 7, scope: !14194)
!14221 = !DILocation(line: 880, column: 11, scope: !14194)
!14222 = !DILocation(line: 880, column: 15, scope: !14194)
!14223 = !DILocation(line: 880, column: 7, scope: !14194)
!14224 = !DILocation(line: 883, column: 11, scope: !14194)
!14225 = !DILocation(line: 883, column: 15, scope: !14194)
!14226 = !DILocation(line: 883, column: 7, scope: !14194)
!14227 = !DILocation(line: 886, column: 11, scope: !14194)
!14228 = !DILocation(line: 886, column: 15, scope: !14194)
!14229 = !DILocation(line: 886, column: 7, scope: !14194)
!14230 = !DILocation(line: 889, column: 6, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14194, file: !3, line: 889, column: 6)
!14232 = !DILocation(line: 889, column: 11, scope: !14231)
!14233 = !DILocation(line: 889, column: 27, scope: !14231)
!14234 = !DILocation(line: 889, column: 30, scope: !14231)
!14235 = !DILocation(line: 889, column: 35, scope: !14231)
!14236 = !DILocation(line: 889, column: 6, scope: !14194)
!14237 = !DILocation(line: 890, column: 12, scope: !14231)
!14238 = !DILocation(line: 890, column: 16, scope: !14231)
!14239 = !DILocation(line: 890, column: 8, scope: !14231)
!14240 = !DILocation(line: 890, column: 3, scope: !14231)
!14241 = !DILocation(line: 892, column: 24, scope: !14194)
!14242 = !DILocation(line: 892, column: 29, scope: !14194)
!14243 = !DILocation(line: 892, column: 33, scope: !14194)
!14244 = !DILocation(line: 892, column: 49, scope: !14194)
!14245 = !DILocation(line: 892, column: 2, scope: !14194)
!14246 = !DILocation(line: 893, column: 1, scope: !14194)
!14247 = !DILocalVariable(name: "dev", arg: 1, scope: !4819, file: !3, line: 807, type: !273)
!14248 = !DILocation(line: 807, column: 51, scope: !4819)
!14249 = !DILocalVariable(name: "ret", scope: !4819, file: !3, line: 809, type: !304)
!14250 = !DILocation(line: 809, column: 6, scope: !4819)
!14251 = !DILocalVariable(name: "p", scope: !4819, file: !3, line: 810, type: !340)
!14252 = !DILocation(line: 810, column: 14, scope: !4819)
!14253 = !DILocalVariable(name: "pos", scope: !4819, file: !3, line: 811, type: !304)
!14254 = !DILocation(line: 811, column: 6, scope: !4819)
!14255 = !DILocalVariable(name: "ctrl", scope: !4819, file: !3, line: 812, type: !979)
!14256 = !DILocation(line: 812, column: 6, scope: !4819)
!14257 = !DILocation(line: 814, column: 7, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 814, column: 6)
!14259 = !DILocation(line: 814, column: 6, scope: !4819)
!14260 = !DILocation(line: 815, column: 3, scope: !14258)
!14261 = !DILocation(line: 817, column: 6, scope: !4819)
!14262 = !DILocation(line: 817, column: 4, scope: !4819)
!14263 = !DILocation(line: 818, column: 2, scope: !4819)
!14264 = !DILocation(line: 818, column: 10, scope: !4819)
!14265 = !DILocation(line: 818, column: 9, scope: !4819)
!14266 = !DILocation(line: 819, column: 27, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 818, column: 13)
!14268 = !DILocation(line: 819, column: 32, scope: !14267)
!14269 = !DILocation(line: 819, column: 9, scope: !14267)
!14270 = !DILocation(line: 819, column: 7, scope: !14267)
!14271 = !DILocation(line: 820, column: 7, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14267, file: !3, line: 820, column: 7)
!14273 = !DILocation(line: 820, column: 11, scope: !14272)
!14274 = !DILocation(line: 820, column: 7, scope: !14267)
!14275 = !DILocalVariable(name: "__ret_print_once", scope: !14276, file: !3, line: 821, type: !609)
!14276 = distinct !DILexicalBlock(scope: !14277, file: !3, line: 821, column: 4)
!14277 = distinct !DILexicalBlock(scope: !14272, file: !3, line: 820, column: 16)
!14278 = !DILocation(line: 821, column: 4, scope: !14276)
!14279 = !DILocation(line: 821, column: 4, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14276, file: !3, line: 821, column: 4)
!14281 = !DILocation(line: 821, column: 4, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14280, file: !3, line: 821, column: 4)
!14283 = !DILocation(line: 824, column: 4, scope: !14277)
!14284 = !DILocation(line: 825, column: 14, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14272, file: !3, line: 825, column: 14)
!14286 = !DILocation(line: 825, column: 18, scope: !14285)
!14287 = !DILocation(line: 825, column: 14, scope: !14272)
!14288 = !DILocation(line: 827, column: 4, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !14285, file: !3, line: 825, column: 24)
!14290 = !DILocation(line: 830, column: 8, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14267, file: !3, line: 830, column: 7)
!14292 = !DILocation(line: 830, column: 7, scope: !14291)
!14293 = !DILocation(line: 830, column: 10, scope: !14291)
!14294 = !DILocation(line: 830, column: 17, scope: !14291)
!14295 = !DILocation(line: 830, column: 21, scope: !14291)
!14296 = !DILocation(line: 830, column: 20, scope: !14291)
!14297 = !DILocation(line: 830, column: 23, scope: !14291)
!14298 = !DILocation(line: 830, column: 7, scope: !14267)
!14299 = !DILocation(line: 832, column: 4, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14291, file: !3, line: 830, column: 31)
!14301 = !DILocation(line: 834, column: 4, scope: !14267)
!14302 = distinct !{!14302, !14263, !14303}
!14303 = !DILocation(line: 835, column: 2, scope: !4819)
!14304 = !DILocation(line: 837, column: 6, scope: !14305)
!14305 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 837, column: 6)
!14306 = !DILocation(line: 837, column: 10, scope: !14305)
!14307 = !DILocation(line: 837, column: 6, scope: !4819)
!14308 = !DILocation(line: 838, column: 3, scope: !14305)
!14309 = !DILocation(line: 840, column: 42, scope: !14310)
!14310 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 840, column: 6)
!14311 = !DILocation(line: 840, column: 7, scope: !14310)
!14312 = !DILocation(line: 840, column: 6, scope: !4819)
!14313 = !DILocation(line: 841, column: 3, scope: !14310)
!14314 = !DILocation(line: 843, column: 8, scope: !4819)
!14315 = !DILocation(line: 843, column: 13, scope: !4819)
!14316 = !DILocation(line: 843, column: 6, scope: !4819)
!14317 = !DILocation(line: 844, column: 7, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 844, column: 6)
!14319 = !DILocation(line: 844, column: 6, scope: !4819)
!14320 = !DILocation(line: 845, column: 3, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 844, column: 12)
!14322 = !DILocation(line: 846, column: 3, scope: !14321)
!14323 = !DILocation(line: 849, column: 23, scope: !4819)
!14324 = !DILocation(line: 849, column: 28, scope: !4819)
!14325 = !DILocation(line: 849, column: 32, scope: !4819)
!14326 = !DILocation(line: 849, column: 2, scope: !4819)
!14327 = !DILocation(line: 852, column: 7, scope: !4819)
!14328 = !DILocation(line: 854, column: 24, scope: !4819)
!14329 = !DILocation(line: 854, column: 29, scope: !4819)
!14330 = !DILocation(line: 854, column: 33, scope: !4819)
!14331 = !DILocation(line: 854, column: 49, scope: !4819)
!14332 = !DILocation(line: 854, column: 2, scope: !4819)
!14333 = !DILocation(line: 856, column: 2, scope: !4819)
!14334 = !DILocation(line: 857, column: 1, scope: !4819)
!14335 = distinct !DISubprogram(name: "pci_dev_str_match", scope: !3, file: !3, line: 352, type: !14336, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14336 = !DISubroutineType(types: !14337)
!14337 = !{!304, !273, !340, !3843}
!14338 = !DILocalVariable(name: "dev", arg: 1, scope: !14335, file: !3, line: 352, type: !273)
!14339 = !DILocation(line: 352, column: 46, scope: !14335)
!14340 = !DILocalVariable(name: "p", arg: 2, scope: !14335, file: !3, line: 352, type: !340)
!14341 = !DILocation(line: 352, column: 63, scope: !14335)
!14342 = !DILocalVariable(name: "endptr", arg: 3, scope: !14335, file: !3, line: 353, type: !3843)
!14343 = !DILocation(line: 353, column: 22, scope: !14335)
!14344 = !DILocalVariable(name: "ret", scope: !14335, file: !3, line: 355, type: !304)
!14345 = !DILocation(line: 355, column: 6, scope: !14335)
!14346 = !DILocalVariable(name: "count", scope: !14335, file: !3, line: 356, type: !304)
!14347 = !DILocation(line: 356, column: 6, scope: !14335)
!14348 = !DILocalVariable(name: "vendor", scope: !14335, file: !3, line: 357, type: !440)
!14349 = !DILocation(line: 357, column: 17, scope: !14335)
!14350 = !DILocalVariable(name: "device", scope: !14335, file: !3, line: 357, type: !440)
!14351 = !DILocation(line: 357, column: 25, scope: !14335)
!14352 = !DILocalVariable(name: "subsystem_vendor", scope: !14335, file: !3, line: 357, type: !440)
!14353 = !DILocation(line: 357, column: 33, scope: !14335)
!14354 = !DILocalVariable(name: "subsystem_device", scope: !14335, file: !3, line: 357, type: !440)
!14355 = !DILocation(line: 357, column: 51, scope: !14335)
!14356 = !DILocation(line: 359, column: 14, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14335, file: !3, line: 359, column: 6)
!14358 = !DILocation(line: 359, column: 6, scope: !14357)
!14359 = !DILocation(line: 359, column: 28, scope: !14357)
!14360 = !DILocation(line: 359, column: 6, scope: !14335)
!14361 = !DILocation(line: 361, column: 5, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14357, file: !3, line: 359, column: 34)
!14363 = !DILocation(line: 362, column: 16, scope: !14362)
!14364 = !DILocation(line: 362, column: 9, scope: !14362)
!14365 = !DILocation(line: 362, column: 7, scope: !14362)
!14366 = !DILocation(line: 364, column: 7, scope: !14367)
!14367 = distinct !DILexicalBlock(scope: !14362, file: !3, line: 364, column: 7)
!14368 = !DILocation(line: 364, column: 11, scope: !14367)
!14369 = !DILocation(line: 364, column: 7, scope: !14362)
!14370 = !DILocation(line: 365, column: 17, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14367, file: !3, line: 364, column: 17)
!14372 = !DILocation(line: 365, column: 10, scope: !14371)
!14373 = !DILocation(line: 365, column: 8, scope: !14371)
!14374 = !DILocation(line: 366, column: 8, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14371, file: !3, line: 366, column: 8)
!14376 = !DILocation(line: 366, column: 12, scope: !14375)
!14377 = !DILocation(line: 366, column: 8, scope: !14371)
!14378 = !DILocation(line: 367, column: 5, scope: !14375)
!14379 = !DILocation(line: 369, column: 21, scope: !14371)
!14380 = !DILocation(line: 370, column: 21, scope: !14371)
!14381 = !DILocation(line: 371, column: 3, scope: !14371)
!14382 = !DILocation(line: 373, column: 8, scope: !14362)
!14383 = !DILocation(line: 373, column: 5, scope: !14362)
!14384 = !DILocation(line: 375, column: 9, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14362, file: !3, line: 375, column: 7)
!14386 = !DILocation(line: 375, column: 16, scope: !14385)
!14387 = !DILocation(line: 375, column: 19, scope: !14385)
!14388 = !DILocation(line: 375, column: 29, scope: !14385)
!14389 = !DILocation(line: 375, column: 34, scope: !14385)
!14390 = !DILocation(line: 375, column: 26, scope: !14385)
!14391 = !DILocation(line: 375, column: 42, scope: !14385)
!14392 = !DILocation(line: 376, column: 9, scope: !14385)
!14393 = !DILocation(line: 376, column: 16, scope: !14385)
!14394 = !DILocation(line: 376, column: 19, scope: !14385)
!14395 = !DILocation(line: 376, column: 29, scope: !14385)
!14396 = !DILocation(line: 376, column: 34, scope: !14385)
!14397 = !DILocation(line: 376, column: 26, scope: !14385)
!14398 = !DILocation(line: 376, column: 42, scope: !14385)
!14399 = !DILocation(line: 377, column: 9, scope: !14385)
!14400 = !DILocation(line: 377, column: 26, scope: !14385)
!14401 = !DILocation(line: 378, column: 8, scope: !14385)
!14402 = !DILocation(line: 378, column: 28, scope: !14385)
!14403 = !DILocation(line: 378, column: 33, scope: !14385)
!14404 = !DILocation(line: 378, column: 25, scope: !14385)
!14405 = !DILocation(line: 378, column: 51, scope: !14385)
!14406 = !DILocation(line: 379, column: 9, scope: !14385)
!14407 = !DILocation(line: 379, column: 26, scope: !14385)
!14408 = !DILocation(line: 380, column: 8, scope: !14385)
!14409 = !DILocation(line: 380, column: 28, scope: !14385)
!14410 = !DILocation(line: 380, column: 33, scope: !14385)
!14411 = !DILocation(line: 380, column: 25, scope: !14385)
!14412 = !DILocation(line: 375, column: 7, scope: !14362)
!14413 = !DILocation(line: 381, column: 4, scope: !14385)
!14414 = !DILocation(line: 382, column: 2, scope: !14362)
!14415 = !DILocation(line: 387, column: 32, scope: !14416)
!14416 = distinct !DILexicalBlock(scope: !14357, file: !3, line: 382, column: 9)
!14417 = !DILocation(line: 387, column: 37, scope: !14416)
!14418 = !DILocation(line: 387, column: 9, scope: !14416)
!14419 = !DILocation(line: 387, column: 7, scope: !14416)
!14420 = !DILocation(line: 388, column: 7, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14416, file: !3, line: 388, column: 7)
!14422 = !DILocation(line: 388, column: 11, scope: !14421)
!14423 = !DILocation(line: 388, column: 7, scope: !14416)
!14424 = !DILocation(line: 389, column: 11, scope: !14421)
!14425 = !DILocation(line: 389, column: 4, scope: !14421)
!14426 = !DILocation(line: 390, column: 12, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 390, column: 12)
!14428 = !DILocation(line: 390, column: 12, scope: !14421)
!14429 = !DILocation(line: 391, column: 4, scope: !14427)
!14430 = !DILocation(line: 394, column: 12, scope: !14335)
!14431 = !DILocation(line: 394, column: 3, scope: !14335)
!14432 = !DILocation(line: 394, column: 10, scope: !14335)
!14433 = !DILocation(line: 395, column: 2, scope: !14335)
!14434 = !DILabel(scope: !14335, name: "found", file: !3, line: 397)
!14435 = !DILocation(line: 397, column: 1, scope: !14335)
!14436 = !DILocation(line: 398, column: 12, scope: !14335)
!14437 = !DILocation(line: 398, column: 3, scope: !14335)
!14438 = !DILocation(line: 398, column: 10, scope: !14335)
!14439 = !DILocation(line: 399, column: 2, scope: !14335)
!14440 = !DILocation(line: 400, column: 1, scope: !14335)
!14441 = distinct !DISubprogram(name: "pci_dev_str_match_path", scope: !3, file: !3, line: 258, type: !14336, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14442 = !DILocalVariable(name: "dev", arg: 1, scope: !14441, file: !3, line: 258, type: !273)
!14443 = !DILocation(line: 258, column: 51, scope: !14441)
!14444 = !DILocalVariable(name: "path", arg: 2, scope: !14441, file: !3, line: 258, type: !340)
!14445 = !DILocation(line: 258, column: 68, scope: !14441)
!14446 = !DILocalVariable(name: "endptr", arg: 3, scope: !14441, file: !3, line: 259, type: !3843)
!14447 = !DILocation(line: 259, column: 20, scope: !14441)
!14448 = !DILocalVariable(name: "ret", scope: !14441, file: !3, line: 261, type: !304)
!14449 = !DILocation(line: 261, column: 6, scope: !14441)
!14450 = !DILocalVariable(name: "seg", scope: !14441, file: !3, line: 262, type: !304)
!14451 = !DILocation(line: 262, column: 6, scope: !14441)
!14452 = !DILocalVariable(name: "bus", scope: !14441, file: !3, line: 262, type: !304)
!14453 = !DILocation(line: 262, column: 11, scope: !14441)
!14454 = !DILocalVariable(name: "slot", scope: !14441, file: !3, line: 262, type: !304)
!14455 = !DILocation(line: 262, column: 16, scope: !14441)
!14456 = !DILocalVariable(name: "func", scope: !14441, file: !3, line: 262, type: !304)
!14457 = !DILocation(line: 262, column: 22, scope: !14441)
!14458 = !DILocalVariable(name: "wpath", scope: !14441, file: !3, line: 263, type: !399)
!14459 = !DILocation(line: 263, column: 8, scope: !14441)
!14460 = !DILocalVariable(name: "p", scope: !14441, file: !3, line: 263, type: !399)
!14461 = !DILocation(line: 263, column: 16, scope: !14441)
!14462 = !DILocalVariable(name: "end", scope: !14441, file: !3, line: 264, type: !342)
!14463 = !DILocation(line: 264, column: 7, scope: !14441)
!14464 = !DILocation(line: 266, column: 22, scope: !14441)
!14465 = !DILocation(line: 266, column: 12, scope: !14441)
!14466 = !DILocation(line: 266, column: 3, scope: !14441)
!14467 = !DILocation(line: 266, column: 10, scope: !14441)
!14468 = !DILocation(line: 268, column: 22, scope: !14441)
!14469 = !DILocation(line: 268, column: 29, scope: !14441)
!14470 = !DILocation(line: 268, column: 28, scope: !14441)
!14471 = !DILocation(line: 268, column: 38, scope: !14441)
!14472 = !DILocation(line: 268, column: 36, scope: !14441)
!14473 = !DILocation(line: 268, column: 10, scope: !14441)
!14474 = !DILocation(line: 268, column: 8, scope: !14441)
!14475 = !DILocation(line: 269, column: 7, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !14441, file: !3, line: 269, column: 6)
!14477 = !DILocation(line: 269, column: 6, scope: !14441)
!14478 = !DILocation(line: 270, column: 3, scope: !14476)
!14479 = !DILocation(line: 272, column: 2, scope: !14441)
!14480 = !DILocation(line: 273, column: 15, scope: !14481)
!14481 = distinct !DILexicalBlock(scope: !14441, file: !3, line: 272, column: 12)
!14482 = !DILocation(line: 273, column: 7, scope: !14481)
!14483 = !DILocation(line: 273, column: 5, scope: !14481)
!14484 = !DILocation(line: 274, column: 8, scope: !14485)
!14485 = distinct !DILexicalBlock(scope: !14481, file: !3, line: 274, column: 7)
!14486 = !DILocation(line: 274, column: 7, scope: !14481)
!14487 = !DILocation(line: 275, column: 4, scope: !14485)
!14488 = !DILocation(line: 276, column: 16, scope: !14481)
!14489 = !DILocation(line: 276, column: 9, scope: !14481)
!14490 = !DILocation(line: 276, column: 7, scope: !14481)
!14491 = !DILocation(line: 277, column: 7, scope: !14492)
!14492 = distinct !DILexicalBlock(scope: !14481, file: !3, line: 277, column: 7)
!14493 = !DILocation(line: 277, column: 11, scope: !14492)
!14494 = !DILocation(line: 277, column: 7, scope: !14481)
!14495 = !DILocation(line: 278, column: 8, scope: !14496)
!14496 = distinct !DILexicalBlock(scope: !14492, file: !3, line: 277, column: 17)
!14497 = !DILocation(line: 279, column: 4, scope: !14496)
!14498 = !DILocation(line: 282, column: 7, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14481, file: !3, line: 282, column: 7)
!14500 = !DILocation(line: 282, column: 12, scope: !14499)
!14501 = !DILocation(line: 282, column: 21, scope: !14499)
!14502 = !DILocation(line: 282, column: 18, scope: !14499)
!14503 = !DILocation(line: 282, column: 7, scope: !14481)
!14504 = !DILocation(line: 283, column: 8, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14499, file: !3, line: 282, column: 44)
!14506 = !DILocation(line: 284, column: 4, scope: !14505)
!14507 = !DILocation(line: 293, column: 29, scope: !14481)
!14508 = !DILocation(line: 293, column: 9, scope: !14481)
!14509 = !DILocation(line: 293, column: 7, scope: !14481)
!14510 = !DILocation(line: 294, column: 8, scope: !14511)
!14511 = distinct !DILexicalBlock(scope: !14481, file: !3, line: 294, column: 7)
!14512 = !DILocation(line: 294, column: 7, scope: !14481)
!14513 = !DILocation(line: 295, column: 8, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !14511, file: !3, line: 294, column: 13)
!14515 = !DILocation(line: 296, column: 4, scope: !14514)
!14516 = !DILocation(line: 299, column: 4, scope: !14481)
!14517 = !DILocation(line: 299, column: 6, scope: !14481)
!14518 = distinct !{!14518, !14479, !14519}
!14519 = !DILocation(line: 300, column: 2, scope: !14441)
!14520 = !DILocation(line: 302, column: 15, scope: !14441)
!14521 = !DILocation(line: 302, column: 8, scope: !14441)
!14522 = !DILocation(line: 302, column: 6, scope: !14441)
!14523 = !DILocation(line: 304, column: 6, scope: !14524)
!14524 = distinct !DILexicalBlock(scope: !14441, file: !3, line: 304, column: 6)
!14525 = !DILocation(line: 304, column: 10, scope: !14524)
!14526 = !DILocation(line: 304, column: 6, scope: !14441)
!14527 = !DILocation(line: 305, column: 7, scope: !14528)
!14528 = distinct !DILexicalBlock(scope: !14524, file: !3, line: 304, column: 16)
!14529 = !DILocation(line: 306, column: 16, scope: !14528)
!14530 = !DILocation(line: 306, column: 9, scope: !14528)
!14531 = !DILocation(line: 306, column: 7, scope: !14528)
!14532 = !DILocation(line: 307, column: 7, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14528, file: !3, line: 307, column: 7)
!14534 = !DILocation(line: 307, column: 11, scope: !14533)
!14535 = !DILocation(line: 307, column: 7, scope: !14528)
!14536 = !DILocation(line: 308, column: 8, scope: !14537)
!14537 = distinct !DILexicalBlock(scope: !14533, file: !3, line: 307, column: 17)
!14538 = !DILocation(line: 309, column: 4, scope: !14537)
!14539 = !DILocation(line: 311, column: 2, scope: !14528)
!14540 = !DILocation(line: 313, column: 9, scope: !14441)
!14541 = !DILocation(line: 313, column: 30, scope: !14441)
!14542 = !DILocation(line: 313, column: 35, scope: !14441)
!14543 = !DILocation(line: 313, column: 16, scope: !14441)
!14544 = !DILocation(line: 313, column: 13, scope: !14441)
!14545 = !DILocation(line: 313, column: 40, scope: !14441)
!14546 = !DILocation(line: 314, column: 9, scope: !14441)
!14547 = !DILocation(line: 314, column: 16, scope: !14441)
!14548 = !DILocation(line: 314, column: 21, scope: !14441)
!14549 = !DILocation(line: 314, column: 26, scope: !14441)
!14550 = !DILocation(line: 314, column: 13, scope: !14441)
!14551 = !DILocation(line: 314, column: 33, scope: !14441)
!14552 = !DILocation(line: 315, column: 9, scope: !14441)
!14553 = !DILocation(line: 315, column: 14, scope: !14441)
!14554 = !DILocation(line: 315, column: 23, scope: !14441)
!14555 = !DILocation(line: 315, column: 20, scope: !14441)
!14556 = !DILocation(line: 0, scope: !14441)
!14557 = !DILocation(line: 313, column: 6, scope: !14441)
!14558 = !DILocation(line: 313, column: 2, scope: !14441)
!14559 = !DILabel(scope: !14441, name: "free_and_exit", file: !3, line: 317)
!14560 = !DILocation(line: 317, column: 1, scope: !14441)
!14561 = !DILocation(line: 318, column: 8, scope: !14441)
!14562 = !DILocation(line: 318, column: 2, scope: !14441)
!14563 = !DILocation(line: 319, column: 9, scope: !14441)
!14564 = !DILocation(line: 319, column: 2, scope: !14441)
!14565 = !DILocation(line: 320, column: 1, scope: !14441)
!14566 = distinct !DISubprogram(name: "pci_domain_nr", scope: !14567, file: !14567, line: 44, type: !4272, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14567 = !DIFile(filename: "./arch/x86/include/asm/pci.h", directory: "/home/lizy2001/genbc/linux")
!14568 = !DILocalVariable(name: "bus", arg: 1, scope: !14566, file: !14567, line: 44, type: !259)
!14569 = !DILocation(line: 44, column: 49, scope: !14566)
!14570 = !DILocation(line: 46, column: 24, scope: !14566)
!14571 = !DILocation(line: 46, column: 9, scope: !14566)
!14572 = !DILocation(line: 46, column: 30, scope: !14566)
!14573 = !DILocation(line: 46, column: 2, scope: !14566)
!14574 = distinct !DISubprogram(name: "to_pci_sysdata", scope: !14567, file: !14567, line: 36, type: !14575, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14575 = !DISubroutineType(types: !14576)
!14576 = !{!14577, !5411}
!14577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14578, size: 64)
!14578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sysdata", file: !14567, line: 15, size: 320, elements: !14579)
!14579 = !{!14580, !14581, !14582, !14583, !14584, !14585}
!14580 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !14578, file: !14567, line: 16, baseType: !304, size: 32)
!14581 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14578, file: !14567, line: 17, baseType: !304, size: 32, offset: 32)
!14582 = !DIDerivedType(tag: DW_TAG_member, name: "companion", scope: !14578, file: !14567, line: 19, baseType: !4410, size: 64, offset: 64)
!14583 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !14578, file: !14567, line: 22, baseType: !258, size: 64, offset: 128)
!14584 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !14578, file: !14567, line: 25, baseType: !258, size: 64, offset: 192)
!14585 = !DIDerivedType(tag: DW_TAG_member, name: "vmd_dev", scope: !14578, file: !14567, line: 28, baseType: !273, size: 64, offset: 256)
!14586 = !DILocalVariable(name: "bus", arg: 1, scope: !14574, file: !14567, line: 36, type: !5411)
!14587 = !DILocation(line: 36, column: 72, scope: !14574)
!14588 = !DILocation(line: 38, column: 9, scope: !14574)
!14589 = !DILocation(line: 38, column: 14, scope: !14574)
!14590 = !DILocation(line: 38, column: 2, scope: !14574)
!14591 = distinct !DISubprogram(name: "pci_enable_bridge", scope: !3, file: !3, line: 1849, type: !3533, scopeLine: 1850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14592 = !DILocalVariable(name: "dev", arg: 1, scope: !14591, file: !3, line: 1849, type: !273)
!14593 = !DILocation(line: 1849, column: 47, scope: !14591)
!14594 = !DILocalVariable(name: "bridge", scope: !14591, file: !3, line: 1851, type: !273)
!14595 = !DILocation(line: 1851, column: 18, scope: !14591)
!14596 = !DILocalVariable(name: "retval", scope: !14591, file: !3, line: 1852, type: !304)
!14597 = !DILocation(line: 1852, column: 6, scope: !14591)
!14598 = !DILocation(line: 1854, column: 31, scope: !14591)
!14599 = !DILocation(line: 1854, column: 11, scope: !14591)
!14600 = !DILocation(line: 1854, column: 9, scope: !14591)
!14601 = !DILocation(line: 1855, column: 6, scope: !14602)
!14602 = distinct !DILexicalBlock(scope: !14591, file: !3, line: 1855, column: 6)
!14603 = !DILocation(line: 1855, column: 6, scope: !14591)
!14604 = !DILocation(line: 1856, column: 21, scope: !14602)
!14605 = !DILocation(line: 1856, column: 3, scope: !14602)
!14606 = !DILocation(line: 1858, column: 21, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14591, file: !3, line: 1858, column: 6)
!14608 = !DILocation(line: 1858, column: 6, scope: !14607)
!14609 = !DILocation(line: 1858, column: 6, scope: !14591)
!14610 = !DILocation(line: 1859, column: 8, scope: !14611)
!14611 = distinct !DILexicalBlock(scope: !14612, file: !3, line: 1859, column: 7)
!14612 = distinct !DILexicalBlock(scope: !14607, file: !3, line: 1858, column: 27)
!14613 = !DILocation(line: 1859, column: 13, scope: !14611)
!14614 = !DILocation(line: 1859, column: 7, scope: !14612)
!14615 = !DILocation(line: 1860, column: 19, scope: !14611)
!14616 = !DILocation(line: 1860, column: 4, scope: !14611)
!14617 = !DILocation(line: 1861, column: 3, scope: !14612)
!14618 = !DILocation(line: 1864, column: 29, scope: !14591)
!14619 = !DILocation(line: 1864, column: 11, scope: !14591)
!14620 = !DILocation(line: 1864, column: 9, scope: !14591)
!14621 = !DILocation(line: 1865, column: 6, scope: !14622)
!14622 = distinct !DILexicalBlock(scope: !14591, file: !3, line: 1865, column: 6)
!14623 = !DILocation(line: 1865, column: 6, scope: !14591)
!14624 = !DILocation(line: 1866, column: 3, scope: !14622)
!14625 = !DILocation(line: 1868, column: 17, scope: !14591)
!14626 = !DILocation(line: 1868, column: 2, scope: !14591)
!14627 = !DILocation(line: 1869, column: 1, scope: !14591)
!14628 = distinct !DISubprogram(name: "kasan_check_write", scope: !14629, file: !14629, line: 38, type: !14630, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14629 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14630 = !DISubroutineType(types: !14631)
!14631 = !{!609, !7234, !7}
!14632 = !DILocalVariable(name: "p", arg: 1, scope: !14628, file: !14629, line: 38, type: !7234)
!14633 = !DILocation(line: 38, column: 59, scope: !14628)
!14634 = !DILocalVariable(name: "size", arg: 2, scope: !14628, file: !14629, line: 38, type: !7)
!14635 = !DILocation(line: 38, column: 75, scope: !14628)
!14636 = !DILocation(line: 40, column: 2, scope: !14628)
!14637 = distinct !DISubprogram(name: "kcsan_check_access", scope: !14638, file: !14638, line: 178, type: !14639, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14638 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14639 = !DISubroutineType(types: !14640)
!14640 = !{null, !7234, !445, !304}
!14641 = !DILocalVariable(name: "ptr", arg: 1, scope: !14637, file: !14638, line: 178, type: !7234)
!14642 = !DILocation(line: 178, column: 60, scope: !14637)
!14643 = !DILocalVariable(name: "size", arg: 2, scope: !14637, file: !14638, line: 178, type: !445)
!14644 = !DILocation(line: 178, column: 72, scope: !14637)
!14645 = !DILocalVariable(name: "type", arg: 3, scope: !14637, file: !14638, line: 179, type: !304)
!14646 = !DILocation(line: 179, column: 15, scope: !14637)
!14647 = !DILocation(line: 179, column: 23, scope: !14637)
!14648 = distinct !DISubprogram(name: "pcim_release", scope: !3, file: !3, line: 1970, type: !10704, scopeLine: 1971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14649 = !DILocalVariable(name: "gendev", arg: 1, scope: !14648, file: !3, line: 1970, type: !3584)
!14650 = !DILocation(line: 1970, column: 41, scope: !14648)
!14651 = !DILocalVariable(name: "res", arg: 2, scope: !14648, file: !3, line: 1970, type: !258)
!14652 = !DILocation(line: 1970, column: 55, scope: !14648)
!14653 = !DILocalVariable(name: "dev", scope: !14648, file: !3, line: 1972, type: !273)
!14654 = !DILocation(line: 1972, column: 18, scope: !14648)
!14655 = !DILocalVariable(name: "__mptr", scope: !14656, file: !3, line: 1972, type: !258)
!14656 = distinct !DILexicalBlock(scope: !14648, file: !3, line: 1972, column: 24)
!14657 = !DILocation(line: 1972, column: 24, scope: !14656)
!14658 = !DILocation(line: 1972, column: 24, scope: !14659)
!14659 = distinct !DILexicalBlock(scope: !14656, file: !3, line: 1972, column: 24)
!14660 = !DILocalVariable(name: "this", scope: !14648, file: !3, line: 1973, type: !7519)
!14661 = !DILocation(line: 1973, column: 21, scope: !14648)
!14662 = !DILocation(line: 1973, column: 28, scope: !14648)
!14663 = !DILocalVariable(name: "i", scope: !14648, file: !3, line: 1974, type: !304)
!14664 = !DILocation(line: 1974, column: 6, scope: !14648)
!14665 = !DILocation(line: 1976, column: 6, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14648, file: !3, line: 1976, column: 6)
!14667 = !DILocation(line: 1976, column: 11, scope: !14666)
!14668 = !DILocation(line: 1976, column: 6, scope: !14648)
!14669 = !DILocation(line: 1977, column: 19, scope: !14666)
!14670 = !DILocation(line: 1977, column: 3, scope: !14666)
!14671 = !DILocation(line: 1978, column: 6, scope: !14672)
!14672 = distinct !DILexicalBlock(scope: !14648, file: !3, line: 1978, column: 6)
!14673 = !DILocation(line: 1978, column: 11, scope: !14672)
!14674 = !DILocation(line: 1978, column: 6, scope: !14648)
!14675 = !DILocation(line: 1979, column: 20, scope: !14672)
!14676 = !DILocation(line: 1979, column: 3, scope: !14672)
!14677 = !DILocation(line: 1981, column: 9, scope: !14678)
!14678 = distinct !DILexicalBlock(scope: !14648, file: !3, line: 1981, column: 2)
!14679 = !DILocation(line: 1981, column: 7, scope: !14678)
!14680 = !DILocation(line: 1981, column: 14, scope: !14681)
!14681 = distinct !DILexicalBlock(scope: !14678, file: !3, line: 1981, column: 2)
!14682 = !DILocation(line: 1981, column: 16, scope: !14681)
!14683 = !DILocation(line: 1981, column: 2, scope: !14678)
!14684 = !DILocation(line: 1982, column: 7, scope: !14685)
!14685 = distinct !DILexicalBlock(scope: !14681, file: !3, line: 1982, column: 7)
!14686 = !DILocation(line: 1982, column: 13, scope: !14685)
!14687 = !DILocation(line: 1982, column: 33, scope: !14685)
!14688 = !DILocation(line: 1982, column: 30, scope: !14685)
!14689 = !DILocation(line: 1982, column: 25, scope: !14685)
!14690 = !DILocation(line: 1982, column: 7, scope: !14681)
!14691 = !DILocation(line: 1983, column: 23, scope: !14685)
!14692 = !DILocation(line: 1983, column: 28, scope: !14685)
!14693 = !DILocation(line: 1983, column: 4, scope: !14685)
!14694 = !DILocation(line: 1982, column: 34, scope: !14685)
!14695 = !DILocation(line: 1981, column: 42, scope: !14681)
!14696 = !DILocation(line: 1981, column: 2, scope: !14681)
!14697 = distinct !{!14697, !14683, !14698}
!14698 = !DILocation(line: 1983, column: 29, scope: !14678)
!14699 = !DILocation(line: 1985, column: 6, scope: !14700)
!14700 = distinct !DILexicalBlock(scope: !14648, file: !3, line: 1985, column: 6)
!14701 = !DILocation(line: 1985, column: 12, scope: !14700)
!14702 = !DILocation(line: 1985, column: 6, scope: !14648)
!14703 = !DILocation(line: 1986, column: 17, scope: !14700)
!14704 = !DILocation(line: 1986, column: 3, scope: !14700)
!14705 = !DILocation(line: 1988, column: 6, scope: !14706)
!14706 = distinct !DILexicalBlock(scope: !14648, file: !3, line: 1988, column: 6)
!14707 = !DILocation(line: 1988, column: 12, scope: !14706)
!14708 = !DILocation(line: 1988, column: 6, scope: !14648)
!14709 = !DILocation(line: 1989, column: 12, scope: !14706)
!14710 = !DILocation(line: 1989, column: 17, scope: !14706)
!14711 = !DILocation(line: 1989, column: 23, scope: !14706)
!14712 = !DILocation(line: 1989, column: 3, scope: !14706)
!14713 = !DILocation(line: 1991, column: 6, scope: !14714)
!14714 = distinct !DILexicalBlock(scope: !14648, file: !3, line: 1991, column: 6)
!14715 = !DILocation(line: 1991, column: 12, scope: !14714)
!14716 = !DILocation(line: 1991, column: 20, scope: !14714)
!14717 = !DILocation(line: 1991, column: 24, scope: !14714)
!14718 = !DILocation(line: 1991, column: 30, scope: !14714)
!14719 = !DILocation(line: 1991, column: 6, scope: !14648)
!14720 = !DILocation(line: 1992, column: 22, scope: !14714)
!14721 = !DILocation(line: 1992, column: 3, scope: !14714)
!14722 = !DILocation(line: 1993, column: 1, scope: !14648)
!14723 = distinct !DISubprogram(name: "pci_is_managed", scope: !6, file: !6, line: 1180, type: !3545, scopeLine: 1181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14724 = !DILocalVariable(name: "pdev", arg: 1, scope: !14723, file: !6, line: 1180, type: !273)
!14725 = !DILocation(line: 1180, column: 50, scope: !14723)
!14726 = !DILocation(line: 1182, column: 9, scope: !14723)
!14727 = !DILocation(line: 1182, column: 15, scope: !14723)
!14728 = !DILocation(line: 1182, column: 2, scope: !14723)
!14729 = distinct !DISubprogram(name: "kasan_check_read", scope: !14629, file: !14629, line: 34, type: !14630, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14730 = !DILocalVariable(name: "p", arg: 1, scope: !14729, file: !14629, line: 34, type: !7234)
!14731 = !DILocation(line: 34, column: 58, scope: !14729)
!14732 = !DILocalVariable(name: "size", arg: 2, scope: !14729, file: !14629, line: 34, type: !7)
!14733 = !DILocation(line: 34, column: 74, scope: !14729)
!14734 = !DILocation(line: 36, column: 2, scope: !14729)
!14735 = distinct !DISubprogram(name: "kobject_name", scope: !346, file: !346, line: 88, type: !14736, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14736 = !DISubroutineType(types: !14737)
!14737 = !{!340, !14738}
!14738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14739, size: 64)
!14739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !345)
!14740 = !DILocalVariable(name: "kobj", arg: 1, scope: !14735, file: !346, line: 88, type: !14738)
!14741 = !DILocation(line: 88, column: 62, scope: !14735)
!14742 = !DILocation(line: 90, column: 9, scope: !14735)
!14743 = !DILocation(line: 90, column: 15, scope: !14735)
!14744 = !DILocation(line: 90, column: 2, scope: !14735)
!14745 = distinct !DISubprogram(name: "get_order", scope: !14746, file: !14746, line: 29, type: !14747, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14746 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!14747 = !DISubroutineType(types: !14748)
!14748 = !{!304, !448}
!14749 = !DILocation(line: 366, column: 40, scope: !14081, inlinedAt: !14750)
!14750 = distinct !DILocation(line: 46, column: 9, scope: !14745)
!14751 = !DILocation(line: 368, column: 6, scope: !14081, inlinedAt: !14750)
!14752 = !DILocalVariable(name: "size", arg: 1, scope: !14745, file: !14746, line: 29, type: !448)
!14753 = !DILocation(line: 29, column: 63, scope: !14745)
!14754 = !DILocation(line: 31, column: 27, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14745, file: !14746, line: 31, column: 6)
!14756 = !DILocation(line: 31, column: 6, scope: !14755)
!14757 = !DILocation(line: 31, column: 6, scope: !14745)
!14758 = !DILocation(line: 32, column: 8, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14760, file: !14746, line: 32, column: 7)
!14760 = distinct !DILexicalBlock(scope: !14755, file: !14746, line: 31, column: 34)
!14761 = !DILocation(line: 32, column: 7, scope: !14760)
!14762 = !DILocation(line: 33, column: 4, scope: !14759)
!14763 = !DILocation(line: 35, column: 7, scope: !14764)
!14764 = distinct !DILexicalBlock(scope: !14760, file: !14746, line: 35, column: 7)
!14765 = !DILocation(line: 35, column: 12, scope: !14764)
!14766 = !DILocation(line: 35, column: 7, scope: !14760)
!14767 = !DILocation(line: 36, column: 4, scope: !14764)
!14768 = !DILocation(line: 38, column: 10, scope: !14760)
!14769 = !DILocation(line: 38, column: 28, scope: !14760)
!14770 = !DILocation(line: 38, column: 41, scope: !14760)
!14771 = !DILocation(line: 38, column: 3, scope: !14760)
!14772 = !DILocation(line: 41, column: 6, scope: !14745)
!14773 = !DILocation(line: 42, column: 7, scope: !14745)
!14774 = !DILocation(line: 46, column: 15, scope: !14745)
!14775 = !DILocation(line: 374, column: 2, scope: !14081, inlinedAt: !14750)
!14776 = !DILocation(line: 376, column: 14, scope: !14081, inlinedAt: !14750)
!14777 = !DILocation(line: 377, column: 9, scope: !14081, inlinedAt: !14750)
!14778 = !DILocation(line: 377, column: 16, scope: !14081, inlinedAt: !14750)
!14779 = !DILocation(line: 46, column: 2, scope: !14745)
!14780 = !DILocation(line: 48, column: 1, scope: !14745)
!14781 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !14782, file: !14782, line: 137, type: !14783, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14782 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!14783 = !DISubroutineType(types: !14784)
!14784 = !{!258, !1055, !2245, !445, !863}
!14785 = !DILocalVariable(name: "s", arg: 1, scope: !14781, file: !14782, line: 137, type: !1055)
!14786 = !DILocation(line: 137, column: 54, scope: !14781)
!14787 = !DILocalVariable(name: "object", arg: 2, scope: !14781, file: !14782, line: 137, type: !2245)
!14788 = !DILocation(line: 137, column: 69, scope: !14781)
!14789 = !DILocalVariable(name: "size", arg: 3, scope: !14781, file: !14782, line: 138, type: !445)
!14790 = !DILocation(line: 138, column: 12, scope: !14781)
!14791 = !DILocalVariable(name: "flags", arg: 4, scope: !14781, file: !14782, line: 138, type: !863)
!14792 = !DILocation(line: 138, column: 24, scope: !14781)
!14793 = !DILocation(line: 140, column: 17, scope: !14781)
!14794 = !DILocation(line: 140, column: 2, scope: !14781)
!14795 = distinct !DISubprogram(name: "__list_add", scope: !8313, file: !8313, line: 63, type: !14796, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14796 = !DISubroutineType(types: !14797)
!14797 = !{null, !267, !267, !267}
!14798 = !DILocalVariable(name: "new", arg: 1, scope: !14795, file: !8313, line: 63, type: !267)
!14799 = !DILocation(line: 63, column: 49, scope: !14795)
!14800 = !DILocalVariable(name: "prev", arg: 2, scope: !14795, file: !8313, line: 64, type: !267)
!14801 = !DILocation(line: 64, column: 28, scope: !14795)
!14802 = !DILocalVariable(name: "next", arg: 3, scope: !14795, file: !8313, line: 65, type: !267)
!14803 = !DILocation(line: 65, column: 28, scope: !14795)
!14804 = !DILocation(line: 67, column: 24, scope: !14805)
!14805 = distinct !DILexicalBlock(scope: !14795, file: !8313, line: 67, column: 6)
!14806 = !DILocation(line: 67, column: 29, scope: !14805)
!14807 = !DILocation(line: 67, column: 35, scope: !14805)
!14808 = !DILocation(line: 67, column: 7, scope: !14805)
!14809 = !DILocation(line: 67, column: 6, scope: !14795)
!14810 = !DILocation(line: 68, column: 3, scope: !14805)
!14811 = !DILocation(line: 70, column: 15, scope: !14795)
!14812 = !DILocation(line: 70, column: 2, scope: !14795)
!14813 = !DILocation(line: 70, column: 8, scope: !14795)
!14814 = !DILocation(line: 70, column: 13, scope: !14795)
!14815 = !DILocation(line: 71, column: 14, scope: !14795)
!14816 = !DILocation(line: 71, column: 2, scope: !14795)
!14817 = !DILocation(line: 71, column: 7, scope: !14795)
!14818 = !DILocation(line: 71, column: 12, scope: !14795)
!14819 = !DILocation(line: 72, column: 14, scope: !14795)
!14820 = !DILocation(line: 72, column: 2, scope: !14795)
!14821 = !DILocation(line: 72, column: 7, scope: !14795)
!14822 = !DILocation(line: 72, column: 12, scope: !14795)
!14823 = !DILocation(line: 73, column: 2, scope: !14795)
!14824 = !DILocation(line: 73, column: 2, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14795, file: !8313, line: 73, column: 2)
!14826 = !DILocation(line: 73, column: 2, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14825, file: !8313, line: 73, column: 2)
!14828 = !DILocation(line: 73, column: 2, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14825, file: !8313, line: 73, column: 2)
!14830 = !DILocation(line: 74, column: 1, scope: !14795)
!14831 = distinct !DISubprogram(name: "__list_add_valid", scope: !8313, file: !8313, line: 45, type: !14832, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14832 = !DISubroutineType(types: !14833)
!14833 = !{!609, !267, !267, !267}
!14834 = !DILocalVariable(name: "new", arg: 1, scope: !14831, file: !8313, line: 45, type: !267)
!14835 = !DILocation(line: 45, column: 55, scope: !14831)
!14836 = !DILocalVariable(name: "prev", arg: 2, scope: !14831, file: !8313, line: 46, type: !267)
!14837 = !DILocation(line: 46, column: 23, scope: !14831)
!14838 = !DILocalVariable(name: "next", arg: 3, scope: !14831, file: !8313, line: 47, type: !267)
!14839 = !DILocation(line: 47, column: 23, scope: !14831)
!14840 = !DILocation(line: 49, column: 2, scope: !14831)
!14841 = distinct !DISubprogram(name: "pci_pme_list_scan", scope: !3, file: !3, line: 2286, type: !2083, scopeLine: 2287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14842 = !DILocation(line: 363, column: 74, scope: !7988, inlinedAt: !14843)
!14843 = distinct !DILocation(line: 2318, column: 8, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14841, file: !3, line: 2316, column: 6)
!14845 = !DILocalVariable(name: "work", arg: 1, scope: !14841, file: !3, line: 2286, type: !2085)
!14846 = !DILocation(line: 2286, column: 51, scope: !14841)
!14847 = !DILocalVariable(name: "pme_dev", scope: !14841, file: !3, line: 2288, type: !4405)
!14848 = !DILocation(line: 2288, column: 25, scope: !14841)
!14849 = !DILocalVariable(name: "n", scope: !14841, file: !3, line: 2288, type: !4405)
!14850 = !DILocation(line: 2288, column: 35, scope: !14841)
!14851 = !DILocation(line: 2290, column: 2, scope: !14841)
!14852 = !DILocalVariable(name: "__mptr", scope: !14853, file: !3, line: 2291, type: !258)
!14853 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 2291, column: 2)
!14854 = distinct !DILexicalBlock(scope: !14841, file: !3, line: 2291, column: 2)
!14855 = !DILocation(line: 2291, column: 2, scope: !14853)
!14856 = !DILocation(line: 2291, column: 2, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14853, file: !3, line: 2291, column: 2)
!14858 = !DILocation(line: 2291, column: 2, scope: !14854)
!14859 = !DILocalVariable(name: "__mptr", scope: !14860, file: !3, line: 2291, type: !258)
!14860 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 2291, column: 2)
!14861 = !DILocation(line: 2291, column: 2, scope: !14860)
!14862 = !DILocation(line: 2291, column: 2, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14860, file: !3, line: 2291, column: 2)
!14864 = !DILocation(line: 2291, column: 2, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 2291, column: 2)
!14866 = !DILocation(line: 2292, column: 7, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14868, file: !3, line: 2292, column: 7)
!14868 = distinct !DILexicalBlock(scope: !14865, file: !3, line: 2291, column: 60)
!14869 = !DILocation(line: 2292, column: 16, scope: !14867)
!14870 = !DILocation(line: 2292, column: 21, scope: !14867)
!14871 = !DILocation(line: 2292, column: 7, scope: !14868)
!14872 = !DILocalVariable(name: "bridge", scope: !14873, file: !3, line: 2293, type: !273)
!14873 = distinct !DILexicalBlock(scope: !14867, file: !3, line: 2292, column: 31)
!14874 = !DILocation(line: 2293, column: 20, scope: !14873)
!14875 = !DILocation(line: 2295, column: 13, scope: !14873)
!14876 = !DILocation(line: 2295, column: 22, scope: !14873)
!14877 = !DILocation(line: 2295, column: 27, scope: !14873)
!14878 = !DILocation(line: 2295, column: 32, scope: !14873)
!14879 = !DILocation(line: 2295, column: 11, scope: !14873)
!14880 = !DILocation(line: 2301, column: 8, scope: !14881)
!14881 = distinct !DILexicalBlock(scope: !14873, file: !3, line: 2301, column: 8)
!14882 = !DILocation(line: 2301, column: 15, scope: !14881)
!14883 = !DILocation(line: 2301, column: 18, scope: !14881)
!14884 = !DILocation(line: 2301, column: 26, scope: !14881)
!14885 = !DILocation(line: 2301, column: 40, scope: !14881)
!14886 = !DILocation(line: 2301, column: 8, scope: !14873)
!14887 = !DILocation(line: 2302, column: 5, scope: !14881)
!14888 = !DILocation(line: 2307, column: 8, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !14873, file: !3, line: 2307, column: 8)
!14890 = !DILocation(line: 2307, column: 17, scope: !14889)
!14891 = !DILocation(line: 2307, column: 22, scope: !14889)
!14892 = !DILocation(line: 2307, column: 36, scope: !14889)
!14893 = !DILocation(line: 2307, column: 8, scope: !14873)
!14894 = !DILocation(line: 2308, column: 5, scope: !14889)
!14895 = !DILocation(line: 2310, column: 19, scope: !14873)
!14896 = !DILocation(line: 2310, column: 28, scope: !14873)
!14897 = !DILocation(line: 2310, column: 4, scope: !14873)
!14898 = !DILocation(line: 2311, column: 3, scope: !14873)
!14899 = !DILocation(line: 2312, column: 14, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14867, file: !3, line: 2311, column: 10)
!14901 = !DILocation(line: 2312, column: 23, scope: !14900)
!14902 = !DILocation(line: 2312, column: 4, scope: !14900)
!14903 = !DILocation(line: 2313, column: 10, scope: !14900)
!14904 = !DILocation(line: 2313, column: 4, scope: !14900)
!14905 = !DILocation(line: 2315, column: 2, scope: !14868)
!14906 = !DILocalVariable(name: "__mptr", scope: !14907, file: !3, line: 2291, type: !258)
!14907 = distinct !DILexicalBlock(scope: !14865, file: !3, line: 2291, column: 2)
!14908 = !DILocation(line: 2291, column: 2, scope: !14907)
!14909 = !DILocation(line: 2291, column: 2, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14907, file: !3, line: 2291, column: 2)
!14911 = distinct !{!14911, !14858, !14912}
!14912 = !DILocation(line: 2315, column: 2, scope: !14854)
!14913 = !DILocation(line: 2316, column: 7, scope: !14844)
!14914 = !DILocation(line: 2316, column: 6, scope: !14841)
!14915 = !DILocation(line: 2317, column: 22, scope: !14844)
!14916 = !DILocation(line: 365, column: 27, scope: !8226, inlinedAt: !14843)
!14917 = !DILocation(line: 365, column: 6, scope: !8226, inlinedAt: !14843)
!14918 = !DILocation(line: 365, column: 6, scope: !7988, inlinedAt: !14843)
!14919 = !DILocation(line: 366, column: 12, scope: !8230, inlinedAt: !14843)
!14920 = !DILocation(line: 366, column: 14, scope: !8230, inlinedAt: !14843)
!14921 = !DILocation(line: 366, column: 7, scope: !8231, inlinedAt: !14843)
!14922 = !DILocation(line: 367, column: 4, scope: !8230, inlinedAt: !14843)
!14923 = !DILocation(line: 368, column: 28, scope: !8231, inlinedAt: !14843)
!14924 = !DILocation(line: 368, column: 10, scope: !8231, inlinedAt: !14843)
!14925 = !DILocation(line: 368, column: 3, scope: !8231, inlinedAt: !14843)
!14926 = !DILocation(line: 370, column: 29, scope: !8239, inlinedAt: !14843)
!14927 = !DILocation(line: 370, column: 10, scope: !8239, inlinedAt: !14843)
!14928 = !DILocation(line: 370, column: 3, scope: !8239, inlinedAt: !14843)
!14929 = !DILocation(line: 372, column: 1, scope: !7988, inlinedAt: !14843)
!14930 = !DILocation(line: 2317, column: 3, scope: !14844)
!14931 = !DILocation(line: 2319, column: 2, scope: !14841)
!14932 = !DILocation(line: 2320, column: 1, scope: !14841)
!14933 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !7989, file: !7989, line: 308, type: !7990, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14934 = !DILocalVariable(name: "m", arg: 1, scope: !14933, file: !7989, line: 308, type: !2945)
!14935 = !DILocation(line: 308, column: 66, scope: !14933)
!14936 = !DILocation(line: 310, column: 10, scope: !14933)
!14937 = !DILocation(line: 310, column: 12, scope: !14933)
!14938 = !DILocation(line: 310, column: 34, scope: !14933)
!14939 = !DILocation(line: 310, column: 39, scope: !14933)
!14940 = !DILocation(line: 310, column: 2, scope: !14933)
!14941 = distinct !DISubprogram(name: "__list_del_entry", scope: !8313, file: !8313, line: 130, type: !8359, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14942 = !DILocalVariable(name: "entry", arg: 1, scope: !14941, file: !8313, line: 130, type: !267)
!14943 = !DILocation(line: 130, column: 55, scope: !14941)
!14944 = !DILocation(line: 132, column: 30, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14941, file: !8313, line: 132, column: 6)
!14946 = !DILocation(line: 132, column: 7, scope: !14945)
!14947 = !DILocation(line: 132, column: 6, scope: !14941)
!14948 = !DILocation(line: 133, column: 3, scope: !14945)
!14949 = !DILocation(line: 135, column: 13, scope: !14941)
!14950 = !DILocation(line: 135, column: 20, scope: !14941)
!14951 = !DILocation(line: 135, column: 26, scope: !14941)
!14952 = !DILocation(line: 135, column: 33, scope: !14941)
!14953 = !DILocation(line: 135, column: 2, scope: !14941)
!14954 = !DILocation(line: 136, column: 1, scope: !14941)
!14955 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !8313, file: !8313, line: 51, type: !14956, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14956 = !DISubroutineType(types: !14957)
!14957 = !{!609, !267}
!14958 = !DILocalVariable(name: "entry", arg: 1, scope: !14955, file: !8313, line: 51, type: !267)
!14959 = !DILocation(line: 51, column: 61, scope: !14955)
!14960 = !DILocation(line: 53, column: 2, scope: !14955)
!14961 = distinct !DISubprogram(name: "__list_del", scope: !8313, file: !8313, line: 110, type: !8314, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14962 = !DILocalVariable(name: "prev", arg: 1, scope: !14961, file: !8313, line: 110, type: !267)
!14963 = !DILocation(line: 110, column: 50, scope: !14961)
!14964 = !DILocalVariable(name: "next", arg: 2, scope: !14961, file: !8313, line: 110, type: !267)
!14965 = !DILocation(line: 110, column: 75, scope: !14961)
!14966 = !DILocation(line: 112, column: 15, scope: !14961)
!14967 = !DILocation(line: 112, column: 2, scope: !14961)
!14968 = !DILocation(line: 112, column: 8, scope: !14961)
!14969 = !DILocation(line: 112, column: 13, scope: !14961)
!14970 = !DILocation(line: 113, column: 2, scope: !14961)
!14971 = !DILocation(line: 113, column: 2, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !14961, file: !8313, line: 113, column: 2)
!14973 = !DILocation(line: 113, column: 2, scope: !14974)
!14974 = distinct !DILexicalBlock(scope: !14972, file: !8313, line: 113, column: 2)
!14975 = !DILocation(line: 113, column: 2, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14972, file: !8313, line: 113, column: 2)
!14977 = !DILocation(line: 114, column: 1, scope: !14961)
!14978 = distinct !DISubprogram(name: "pci_power_manageable", scope: !4228, file: !4228, line: 124, type: !4785, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14979 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !14978, file: !4228, line: 124, type: !273)
!14980 = !DILocation(line: 124, column: 57, scope: !14978)
!14981 = !DILocation(line: 130, column: 30, scope: !14978)
!14982 = !DILocation(line: 130, column: 10, scope: !14978)
!14983 = !DILocation(line: 130, column: 39, scope: !14978)
!14984 = !DILocation(line: 130, column: 42, scope: !14978)
!14985 = !DILocation(line: 130, column: 51, scope: !14978)
!14986 = !DILocation(line: 130, column: 2, scope: !14978)
!14987 = distinct !DISubprogram(name: "platform_pci_set_wakeup", scope: !3, file: !3, line: 974, type: !4800, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14988 = !DILocalVariable(name: "dev", arg: 1, scope: !14987, file: !3, line: 974, type: !273)
!14989 = !DILocation(line: 974, column: 59, scope: !14987)
!14990 = !DILocalVariable(name: "enable", arg: 2, scope: !14987, file: !3, line: 974, type: !609)
!14991 = !DILocation(line: 974, column: 69, scope: !14987)
!14992 = !DILocation(line: 976, column: 9, scope: !14987)
!14993 = !DILocation(line: 977, column: 4, scope: !14987)
!14994 = !DILocation(line: 977, column: 21, scope: !14987)
!14995 = !DILocation(line: 977, column: 32, scope: !14987)
!14996 = !DILocation(line: 977, column: 37, scope: !14987)
!14997 = !DILocation(line: 976, column: 2, scope: !14987)
!14998 = distinct !DISubprogram(name: "pci_has_subordinate", scope: !4228, file: !4228, line: 119, type: !4785, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!14999 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !14998, file: !4228, line: 119, type: !273)
!15000 = !DILocation(line: 119, column: 56, scope: !14998)
!15001 = !DILocation(line: 121, column: 12, scope: !14998)
!15002 = !DILocation(line: 121, column: 21, scope: !14998)
!15003 = !DILocation(line: 121, column: 10, scope: !14998)
!15004 = !DILocation(line: 121, column: 9, scope: !14998)
!15005 = !DILocation(line: 121, column: 2, scope: !14998)
!15006 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !15007, file: !15007, line: 656, type: !1997, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15007 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!15008 = !DILocalVariable(name: "__edi", scope: !15009, file: !15007, line: 658, type: !448)
!15009 = distinct !DILexicalBlock(scope: !15006, file: !15007, line: 658, column: 2)
!15010 = !DILocation(line: 658, column: 2, scope: !15009)
!15011 = !DILocalVariable(name: "__esi", scope: !15009, file: !15007, line: 658, type: !448)
!15012 = !DILocalVariable(name: "__edx", scope: !15009, file: !15007, line: 658, type: !448)
!15013 = !DILocalVariable(name: "__ecx", scope: !15009, file: !15007, line: 658, type: !448)
!15014 = !DILocalVariable(name: "__eax", scope: !15009, file: !15007, line: 658, type: !448)
!15015 = !{i32 -2145469451, i32 -2145468719, i32 -2145468485, i32 -2145468434, i32 -2145468406, i32 -2145468381, i32 -2145468697, i32 -2145468684, i32 -2145468246, i32 -2145468127, i32 -2145468592, i32 -2145468565, i32 -2145468537, i32 -2145468507}
!15016 = !DILocation(line: 659, column: 1, scope: !15006)
!15017 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !15007, file: !15007, line: 661, type: !1997, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15018 = !DILocalVariable(name: "__edi", scope: !15019, file: !15007, line: 663, type: !448)
!15019 = distinct !DILexicalBlock(scope: !15017, file: !15007, line: 663, column: 2)
!15020 = !DILocation(line: 663, column: 2, scope: !15019)
!15021 = !DILocalVariable(name: "__esi", scope: !15019, file: !15007, line: 663, type: !448)
!15022 = !DILocalVariable(name: "__edx", scope: !15019, file: !15007, line: 663, type: !448)
!15023 = !DILocalVariable(name: "__ecx", scope: !15019, file: !15007, line: 663, type: !448)
!15024 = !DILocalVariable(name: "__eax", scope: !15019, file: !15007, line: 663, type: !448)
!15025 = !{i32 -2145466867, i32 -2145466137, i32 -2145465903, i32 -2145465852, i32 -2145465824, i32 -2145465799, i32 -2145466115, i32 -2145466102, i32 -2145465664, i32 -2145465545, i32 -2145466010, i32 -2145465983, i32 -2145465955, i32 -2145465925}
!15026 = !DILocation(line: 664, column: 1, scope: !15017)
!15027 = distinct !DISubprogram(name: "pcie_caps_reg", scope: !6, file: !6, line: 2148, type: !15028, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15028 = !DISubroutineType(types: !15029)
!15029 = !{!979, !4701}
!15030 = !DILocalVariable(name: "dev", arg: 1, scope: !15027, file: !6, line: 2148, type: !4701)
!15031 = !DILocation(line: 2148, column: 55, scope: !15027)
!15032 = !DILocation(line: 2150, column: 9, scope: !15027)
!15033 = !DILocation(line: 2150, column: 14, scope: !15027)
!15034 = !DILocation(line: 2150, column: 2, scope: !15027)
!15035 = distinct !DISubprogram(name: "pci_physfn", scope: !6, file: !6, line: 505, type: !9119, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15036 = !DILocalVariable(name: "dev", arg: 1, scope: !15035, file: !6, line: 505, type: !273)
!15037 = !DILocation(line: 505, column: 58, scope: !15035)
!15038 = !DILocation(line: 508, column: 6, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !15035, file: !6, line: 508, column: 6)
!15040 = !DILocation(line: 508, column: 11, scope: !15039)
!15041 = !DILocation(line: 508, column: 6, scope: !15035)
!15042 = !DILocation(line: 509, column: 9, scope: !15039)
!15043 = !DILocation(line: 509, column: 14, scope: !15039)
!15044 = !DILocation(line: 509, column: 7, scope: !15039)
!15045 = !DILocation(line: 509, column: 3, scope: !15039)
!15046 = !DILocation(line: 511, column: 9, scope: !15035)
!15047 = !DILocation(line: 511, column: 2, scope: !15035)
!15048 = distinct !DISubprogram(name: "pci_ea_get_resource", scope: !3, file: !3, line: 3095, type: !15049, scopeLine: 3097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15049 = !DISubroutineType(types: !15050)
!15050 = !{!4166, !273, !310, !310}
!15051 = !DILocalVariable(name: "dev", arg: 1, scope: !15048, file: !3, line: 3095, type: !273)
!15052 = !DILocation(line: 3095, column: 61, scope: !15048)
!15053 = !DILocalVariable(name: "bei", arg: 2, scope: !15048, file: !3, line: 3095, type: !310)
!15054 = !DILocation(line: 3095, column: 69, scope: !15048)
!15055 = !DILocalVariable(name: "prop", arg: 3, scope: !15048, file: !3, line: 3096, type: !310)
!15056 = !DILocation(line: 3096, column: 13, scope: !15048)
!15057 = !DILocation(line: 3098, column: 6, scope: !15058)
!15058 = distinct !DILexicalBlock(scope: !15048, file: !3, line: 3098, column: 6)
!15059 = !DILocation(line: 3098, column: 10, scope: !15058)
!15060 = !DILocation(line: 3098, column: 29, scope: !15058)
!15061 = !DILocation(line: 3098, column: 32, scope: !15058)
!15062 = !DILocation(line: 3098, column: 37, scope: !15058)
!15063 = !DILocation(line: 3098, column: 6, scope: !15048)
!15064 = !DILocation(line: 3099, column: 11, scope: !15058)
!15065 = !DILocation(line: 3099, column: 16, scope: !15058)
!15066 = !DILocation(line: 3099, column: 25, scope: !15058)
!15067 = !DILocation(line: 3099, column: 3, scope: !15058)
!15068 = !DILocation(line: 3101, column: 11, scope: !15069)
!15069 = distinct !DILexicalBlock(scope: !15058, file: !3, line: 3101, column: 11)
!15070 = !DILocation(line: 3101, column: 15, scope: !15069)
!15071 = !DILocation(line: 3101, column: 37, scope: !15069)
!15072 = !DILocation(line: 3101, column: 40, scope: !15069)
!15073 = !DILocation(line: 3101, column: 44, scope: !15069)
!15074 = !DILocation(line: 3101, column: 66, scope: !15069)
!15075 = !DILocation(line: 3102, column: 5, scope: !15069)
!15076 = !DILocation(line: 3102, column: 10, scope: !15069)
!15077 = !DILocation(line: 3102, column: 29, scope: !15069)
!15078 = !DILocation(line: 3102, column: 32, scope: !15069)
!15079 = !DILocation(line: 3102, column: 37, scope: !15069)
!15080 = !DILocation(line: 3101, column: 11, scope: !15058)
!15081 = !DILocation(line: 3103, column: 11, scope: !15069)
!15082 = !DILocation(line: 3103, column: 16, scope: !15069)
!15083 = !DILocation(line: 3104, column: 11, scope: !15069)
!15084 = !DILocation(line: 3103, column: 43, scope: !15069)
!15085 = !DILocation(line: 3104, column: 15, scope: !15069)
!15086 = !DILocation(line: 3103, column: 3, scope: !15069)
!15087 = !DILocation(line: 3106, column: 11, scope: !15088)
!15088 = distinct !DILexicalBlock(scope: !15069, file: !3, line: 3106, column: 11)
!15089 = !DILocation(line: 3106, column: 15, scope: !15088)
!15090 = !DILocation(line: 3106, column: 11, scope: !15069)
!15091 = !DILocation(line: 3107, column: 11, scope: !15088)
!15092 = !DILocation(line: 3107, column: 16, scope: !15088)
!15093 = !DILocation(line: 3107, column: 3, scope: !15088)
!15094 = !DILocation(line: 3109, column: 3, scope: !15088)
!15095 = !DILocation(line: 3110, column: 1, scope: !15048)
!15096 = distinct !DISubprogram(name: "pci_ea_flags", scope: !3, file: !3, line: 3072, type: !15097, scopeLine: 3073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15097 = !DISubroutineType(types: !15098)
!15098 = !{!448, !273, !310}
!15099 = !DILocalVariable(name: "dev", arg: 1, scope: !15096, file: !3, line: 3072, type: !273)
!15100 = !DILocation(line: 3072, column: 51, scope: !15096)
!15101 = !DILocalVariable(name: "prop", arg: 2, scope: !15096, file: !3, line: 3072, type: !310)
!15102 = !DILocation(line: 3072, column: 59, scope: !15096)
!15103 = !DILocalVariable(name: "flags", scope: !15096, file: !3, line: 3074, type: !448)
!15104 = !DILocation(line: 3074, column: 16, scope: !15096)
!15105 = !DILocation(line: 3076, column: 10, scope: !15096)
!15106 = !DILocation(line: 3076, column: 2, scope: !15096)
!15107 = !DILocation(line: 3079, column: 9, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15096, file: !3, line: 3076, column: 16)
!15109 = !DILocation(line: 3080, column: 3, scope: !15108)
!15110 = !DILocation(line: 3083, column: 9, scope: !15108)
!15111 = !DILocation(line: 3084, column: 3, scope: !15108)
!15112 = !DILocation(line: 3086, column: 9, scope: !15108)
!15113 = !DILocation(line: 3087, column: 3, scope: !15108)
!15114 = !DILocation(line: 3089, column: 3, scope: !15108)
!15115 = !DILocation(line: 3092, column: 9, scope: !15096)
!15116 = !DILocation(line: 3092, column: 2, scope: !15096)
!15117 = !DILocation(line: 3093, column: 1, scope: !15096)
!15118 = distinct !DISubprogram(name: "pci_add_saved_cap", scope: !3, file: !3, line: 3263, type: !15119, scopeLine: 3265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15119 = !DISubroutineType(types: !15120)
!15120 = !{null, !273, !4392}
!15121 = !DILocalVariable(name: "pci_dev", arg: 1, scope: !15118, file: !3, line: 3263, type: !273)
!15122 = !DILocation(line: 3263, column: 47, scope: !15118)
!15123 = !DILocalVariable(name: "new_cap", arg: 2, scope: !15118, file: !3, line: 3264, type: !4392)
!15124 = !DILocation(line: 3264, column: 30, scope: !15118)
!15125 = !DILocation(line: 3266, column: 18, scope: !15118)
!15126 = !DILocation(line: 3266, column: 27, scope: !15118)
!15127 = !DILocation(line: 3266, column: 34, scope: !15118)
!15128 = !DILocation(line: 3266, column: 43, scope: !15118)
!15129 = !DILocation(line: 3266, column: 2, scope: !15118)
!15130 = !DILocation(line: 3267, column: 1, scope: !15118)
!15131 = distinct !DISubprogram(name: "hlist_add_head", scope: !8313, file: !8313, line: 879, type: !15132, scopeLine: 880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15132 = !DISubroutineType(types: !15133)
!15133 = !{null, !757, !15134}
!15134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!15135 = !DILocalVariable(name: "n", arg: 1, scope: !15131, file: !8313, line: 879, type: !757)
!15136 = !DILocation(line: 879, column: 54, scope: !15131)
!15137 = !DILocalVariable(name: "h", arg: 2, scope: !15131, file: !8313, line: 879, type: !15134)
!15138 = !DILocation(line: 879, column: 76, scope: !15131)
!15139 = !DILocalVariable(name: "first", scope: !15131, file: !8313, line: 881, type: !757)
!15140 = !DILocation(line: 881, column: 21, scope: !15131)
!15141 = !DILocation(line: 881, column: 29, scope: !15131)
!15142 = !DILocation(line: 881, column: 32, scope: !15131)
!15143 = !DILocation(line: 882, column: 2, scope: !15131)
!15144 = !DILocation(line: 882, column: 2, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15131, file: !8313, line: 882, column: 2)
!15146 = !DILocation(line: 882, column: 2, scope: !15147)
!15147 = distinct !DILexicalBlock(scope: !15145, file: !8313, line: 882, column: 2)
!15148 = !DILocation(line: 882, column: 2, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15145, file: !8313, line: 882, column: 2)
!15150 = !DILocation(line: 883, column: 6, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15131, file: !8313, line: 883, column: 6)
!15152 = !DILocation(line: 883, column: 6, scope: !15131)
!15153 = !DILocation(line: 884, column: 3, scope: !15151)
!15154 = !DILocation(line: 884, column: 3, scope: !15155)
!15155 = distinct !DILexicalBlock(scope: !15151, file: !8313, line: 884, column: 3)
!15156 = !DILocation(line: 884, column: 3, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15155, file: !8313, line: 884, column: 3)
!15158 = !DILocation(line: 884, column: 3, scope: !15159)
!15159 = distinct !DILexicalBlock(scope: !15155, file: !8313, line: 884, column: 3)
!15160 = !DILocation(line: 885, column: 2, scope: !15131)
!15161 = !DILocation(line: 885, column: 2, scope: !15162)
!15162 = distinct !DILexicalBlock(scope: !15131, file: !8313, line: 885, column: 2)
!15163 = !DILocation(line: 885, column: 2, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15162, file: !8313, line: 885, column: 2)
!15165 = !DILocation(line: 885, column: 2, scope: !15166)
!15166 = distinct !DILexicalBlock(scope: !15162, file: !8313, line: 885, column: 2)
!15167 = !DILocation(line: 886, column: 2, scope: !15131)
!15168 = !DILocation(line: 886, column: 2, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15131, file: !8313, line: 886, column: 2)
!15170 = !DILocation(line: 886, column: 2, scope: !15171)
!15171 = distinct !DILexicalBlock(scope: !15169, file: !8313, line: 886, column: 2)
!15172 = !DILocation(line: 886, column: 2, scope: !15173)
!15173 = distinct !DILexicalBlock(scope: !15169, file: !8313, line: 886, column: 2)
!15174 = !DILocation(line: 887, column: 1, scope: !15131)
!15175 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !15007, file: !15007, line: 666, type: !15176, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15176 = !DISubroutineType(types: !15177)
!15177 = !{!448}
!15178 = !DILocalVariable(name: "f", scope: !15175, file: !15007, line: 668, type: !448)
!15179 = !DILocation(line: 668, column: 16, scope: !15175)
!15180 = !DILocation(line: 670, column: 6, scope: !15175)
!15181 = !DILocation(line: 670, column: 4, scope: !15175)
!15182 = !DILocation(line: 671, column: 2, scope: !15175)
!15183 = !DILocation(line: 672, column: 9, scope: !15175)
!15184 = !DILocation(line: 672, column: 2, scope: !15175)
!15185 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !15007, file: !15007, line: 651, type: !15186, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15186 = !DISubroutineType(types: !15187)
!15187 = !{null, !448}
!15188 = !DILocalVariable(name: "f", arg: 1, scope: !15185, file: !15007, line: 651, type: !448)
!15189 = !DILocation(line: 651, column: 65, scope: !15185)
!15190 = !DILocalVariable(name: "__edi", scope: !15191, file: !15007, line: 653, type: !448)
!15191 = distinct !DILexicalBlock(scope: !15185, file: !15007, line: 653, column: 2)
!15192 = !DILocation(line: 653, column: 2, scope: !15191)
!15193 = !DILocalVariable(name: "__esi", scope: !15191, file: !15007, line: 653, type: !448)
!15194 = !DILocalVariable(name: "__edx", scope: !15191, file: !15007, line: 653, type: !448)
!15195 = !DILocalVariable(name: "__ecx", scope: !15191, file: !15007, line: 653, type: !448)
!15196 = !DILocalVariable(name: "__eax", scope: !15191, file: !15007, line: 653, type: !448)
!15197 = !{i32 -2145472078, i32 -2145471328, i32 -2145471094, i32 -2145471043, i32 -2145471015, i32 -2145470990, i32 -2145471306, i32 -2145471293, i32 -2145470855, i32 -2145470736, i32 -2145471201, i32 -2145471174, i32 -2145471146, i32 -2145471116}
!15198 = !DILocation(line: 654, column: 1, scope: !15185)
!15199 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !15007, file: !15007, line: 646, type: !15176, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15200 = !DILocalVariable(name: "__ret", scope: !15201, file: !15007, line: 648, type: !448)
!15201 = distinct !DILexicalBlock(scope: !15199, file: !15007, line: 648, column: 9)
!15202 = !DILocation(line: 648, column: 9, scope: !15201)
!15203 = !DILocalVariable(name: "__edi", scope: !15201, file: !15007, line: 648, type: !448)
!15204 = !DILocalVariable(name: "__esi", scope: !15201, file: !15007, line: 648, type: !448)
!15205 = !DILocalVariable(name: "__edx", scope: !15201, file: !15007, line: 648, type: !448)
!15206 = !DILocalVariable(name: "__ecx", scope: !15201, file: !15007, line: 648, type: !448)
!15207 = !DILocalVariable(name: "__eax", scope: !15201, file: !15007, line: 648, type: !448)
!15208 = !DILocation(line: 648, column: 9, scope: !15209)
!15209 = distinct !DILexicalBlock(scope: !15210, file: !15007, line: 648, column: 9)
!15210 = distinct !DILexicalBlock(scope: !15201, file: !15007, line: 648, column: 9)
!15211 = !{i32 -2145476545, i32 -2145474230, i32 -2145473996, i32 -2145473945, i32 -2145473917, i32 -2145473892, i32 -2145474208, i32 -2145474195, i32 -2145473757, i32 -2145473638, i32 -2145474103, i32 -2145474076, i32 -2145474048, i32 -2145474018}
!15212 = !DILocalVariable(name: "__mask", scope: !15213, file: !15007, line: 648, type: !448)
!15213 = distinct !DILexicalBlock(scope: !15209, file: !15007, line: 648, column: 9)
!15214 = !DILocation(line: 648, column: 9, scope: !15213)
!15215 = !DILocation(line: 648, column: 9, scope: !15210)
!15216 = !DILocation(line: 648, column: 2, scope: !15199)
!15217 = distinct !DISubprogram(name: "pci_reset_hotplug_slot", scope: !3, file: !3, line: 4923, type: !331, scopeLine: 4924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15218 = !DILocalVariable(name: "hotplug", arg: 1, scope: !15217, file: !3, line: 4923, type: !291)
!15219 = !DILocation(line: 4923, column: 56, scope: !15217)
!15220 = !DILocalVariable(name: "probe", arg: 2, scope: !15217, file: !3, line: 4923, type: !304)
!15221 = !DILocation(line: 4923, column: 69, scope: !15217)
!15222 = !DILocalVariable(name: "rc", scope: !15217, file: !3, line: 4925, type: !304)
!15223 = !DILocation(line: 4925, column: 6, scope: !15217)
!15224 = !DILocation(line: 4927, column: 7, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15217, file: !3, line: 4927, column: 6)
!15226 = !DILocation(line: 4927, column: 15, scope: !15225)
!15227 = !DILocation(line: 4927, column: 34, scope: !15225)
!15228 = !DILocation(line: 4927, column: 43, scope: !15225)
!15229 = !DILocation(line: 4927, column: 19, scope: !15225)
!15230 = !DILocation(line: 4927, column: 6, scope: !15217)
!15231 = !DILocation(line: 4928, column: 10, scope: !15225)
!15232 = !DILocation(line: 4928, column: 3, scope: !15225)
!15233 = !DILocation(line: 4930, column: 6, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15217, file: !3, line: 4930, column: 6)
!15235 = !DILocation(line: 4930, column: 15, scope: !15234)
!15236 = !DILocation(line: 4930, column: 20, scope: !15234)
!15237 = !DILocation(line: 4930, column: 6, scope: !15217)
!15238 = !DILocation(line: 4931, column: 8, scope: !15234)
!15239 = !DILocation(line: 4931, column: 17, scope: !15234)
!15240 = !DILocation(line: 4931, column: 22, scope: !15234)
!15241 = !DILocation(line: 4931, column: 33, scope: !15234)
!15242 = !DILocation(line: 4931, column: 42, scope: !15234)
!15243 = !DILocation(line: 4931, column: 6, scope: !15234)
!15244 = !DILocation(line: 4931, column: 3, scope: !15234)
!15245 = !DILocation(line: 4933, column: 13, scope: !15217)
!15246 = !DILocation(line: 4933, column: 22, scope: !15217)
!15247 = !DILocation(line: 4933, column: 2, scope: !15217)
!15248 = !DILocation(line: 4935, column: 9, scope: !15217)
!15249 = !DILocation(line: 4935, column: 2, scope: !15217)
!15250 = !DILocation(line: 4936, column: 1, scope: !15217)
!15251 = distinct !DISubprogram(name: "try_module_get", scope: !15252, file: !15252, line: 751, type: !15253, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15252 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!15253 = !DISubroutineType(types: !15254)
!15254 = !{!609, !336}
!15255 = !DILocalVariable(name: "module", arg: 1, scope: !15251, file: !15252, line: 751, type: !336)
!15256 = !DILocation(line: 751, column: 50, scope: !15251)
!15257 = !DILocation(line: 753, column: 2, scope: !15251)
!15258 = distinct !DISubprogram(name: "module_put", scope: !15252, file: !15252, line: 756, type: !15259, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15259 = !DISubroutineType(types: !15260)
!15260 = !{null, !336}
!15261 = !DILocalVariable(name: "module", arg: 1, scope: !15258, file: !15252, line: 756, type: !336)
!15262 = !DILocation(line: 756, column: 46, scope: !15258)
!15263 = !DILocation(line: 758, column: 1, scope: !15258)
!15264 = distinct !DISubprogram(name: "device_lock", scope: !75, file: !75, line: 729, type: !3611, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15265 = !DILocalVariable(name: "dev", arg: 1, scope: !15264, file: !75, line: 729, type: !3584)
!15266 = !DILocation(line: 729, column: 47, scope: !15264)
!15267 = !DILocation(line: 731, column: 14, scope: !15264)
!15268 = !DILocation(line: 731, column: 19, scope: !15264)
!15269 = !DILocation(line: 731, column: 2, scope: !15264)
!15270 = !DILocation(line: 732, column: 1, scope: !15264)
!15271 = distinct !DISubprogram(name: "device_unlock", scope: !75, file: !75, line: 744, type: !3611, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15272 = !DILocalVariable(name: "dev", arg: 1, scope: !15271, file: !75, line: 744, type: !3584)
!15273 = !DILocation(line: 744, column: 49, scope: !15271)
!15274 = !DILocation(line: 746, column: 16, scope: !15271)
!15275 = !DILocation(line: 746, column: 21, scope: !15271)
!15276 = !DILocation(line: 746, column: 2, scope: !15271)
!15277 = !DILocation(line: 747, column: 1, scope: !15271)
!15278 = distinct !DISubprogram(name: "device_trylock", scope: !75, file: !75, line: 739, type: !3620, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15279 = !DILocalVariable(name: "dev", arg: 1, scope: !15278, file: !75, line: 739, type: !3584)
!15280 = !DILocation(line: 739, column: 49, scope: !15278)
!15281 = !DILocation(line: 741, column: 24, scope: !15278)
!15282 = !DILocation(line: 741, column: 29, scope: !15278)
!15283 = !DILocation(line: 741, column: 9, scope: !15278)
!15284 = !DILocation(line: 741, column: 2, scope: !15278)
!15285 = distinct !DISubprogram(name: "pci_slot_resetable", scope: !3, file: !3, line: 5272, type: !15286, scopeLine: 5273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15286 = !DISubroutineType(types: !15287)
!15287 = !{!609, !285}
!15288 = !DILocalVariable(name: "slot", arg: 1, scope: !15285, file: !3, line: 5272, type: !285)
!15289 = !DILocation(line: 5272, column: 49, scope: !15285)
!15290 = !DILocalVariable(name: "dev", scope: !15285, file: !3, line: 5274, type: !273)
!15291 = !DILocation(line: 5274, column: 18, scope: !15285)
!15292 = !DILocation(line: 5276, column: 6, scope: !15293)
!15293 = distinct !DILexicalBlock(scope: !15285, file: !3, line: 5276, column: 6)
!15294 = !DILocation(line: 5276, column: 12, scope: !15293)
!15295 = !DILocation(line: 5276, column: 17, scope: !15293)
!15296 = !DILocation(line: 5276, column: 22, scope: !15293)
!15297 = !DILocation(line: 5277, column: 7, scope: !15293)
!15298 = !DILocation(line: 5277, column: 13, scope: !15293)
!15299 = !DILocation(line: 5277, column: 18, scope: !15293)
!15300 = !DILocation(line: 5277, column: 24, scope: !15293)
!15301 = !DILocation(line: 5277, column: 34, scope: !15293)
!15302 = !DILocation(line: 5276, column: 6, scope: !15285)
!15303 = !DILocation(line: 5278, column: 3, scope: !15293)
!15304 = !DILocalVariable(name: "__mptr", scope: !15305, file: !3, line: 5280, type: !258)
!15305 = distinct !DILexicalBlock(scope: !15306, file: !3, line: 5280, column: 2)
!15306 = distinct !DILexicalBlock(scope: !15285, file: !3, line: 5280, column: 2)
!15307 = !DILocation(line: 5280, column: 2, scope: !15305)
!15308 = !DILocation(line: 5280, column: 2, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15305, file: !3, line: 5280, column: 2)
!15310 = !DILocation(line: 5280, column: 2, scope: !15306)
!15311 = !DILocation(line: 5280, column: 2, scope: !15312)
!15312 = distinct !DILexicalBlock(scope: !15306, file: !3, line: 5280, column: 2)
!15313 = !DILocation(line: 5281, column: 8, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15315, file: !3, line: 5281, column: 7)
!15315 = distinct !DILexicalBlock(scope: !15312, file: !3, line: 5280, column: 58)
!15316 = !DILocation(line: 5281, column: 13, scope: !15314)
!15317 = !DILocation(line: 5281, column: 18, scope: !15314)
!15318 = !DILocation(line: 5281, column: 21, scope: !15314)
!15319 = !DILocation(line: 5281, column: 26, scope: !15314)
!15320 = !DILocation(line: 5281, column: 34, scope: !15314)
!15321 = !DILocation(line: 5281, column: 31, scope: !15314)
!15322 = !DILocation(line: 5281, column: 7, scope: !15315)
!15323 = !DILocation(line: 5282, column: 4, scope: !15314)
!15324 = !DILocation(line: 5283, column: 7, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15315, file: !3, line: 5283, column: 7)
!15326 = !DILocation(line: 5283, column: 12, scope: !15325)
!15327 = !DILocation(line: 5283, column: 22, scope: !15325)
!15328 = !DILocation(line: 5283, column: 51, scope: !15325)
!15329 = !DILocation(line: 5284, column: 8, scope: !15325)
!15330 = !DILocation(line: 5284, column: 13, scope: !15325)
!15331 = !DILocation(line: 5284, column: 25, scope: !15325)
!15332 = !DILocation(line: 5284, column: 47, scope: !15325)
!15333 = !DILocation(line: 5284, column: 52, scope: !15325)
!15334 = !DILocation(line: 5284, column: 29, scope: !15325)
!15335 = !DILocation(line: 5283, column: 7, scope: !15315)
!15336 = !DILocation(line: 5285, column: 4, scope: !15325)
!15337 = !DILocation(line: 5286, column: 2, scope: !15315)
!15338 = !DILocalVariable(name: "__mptr", scope: !15339, file: !3, line: 5280, type: !258)
!15339 = distinct !DILexicalBlock(scope: !15312, file: !3, line: 5280, column: 2)
!15340 = !DILocation(line: 5280, column: 2, scope: !15339)
!15341 = !DILocation(line: 5280, column: 2, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !15339, file: !3, line: 5280, column: 2)
!15343 = distinct !{!15343, !15310, !15344}
!15344 = !DILocation(line: 5286, column: 2, scope: !15306)
!15345 = !DILocation(line: 5288, column: 2, scope: !15285)
!15346 = !DILocation(line: 5289, column: 1, scope: !15285)
!15347 = distinct !DISubprogram(name: "pci_slot_lock", scope: !3, file: !3, line: 5292, type: !15348, scopeLine: 5293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15348 = !DISubroutineType(types: !15349)
!15349 = !{null, !285}
!15350 = !DILocalVariable(name: "slot", arg: 1, scope: !15347, file: !3, line: 5292, type: !285)
!15351 = !DILocation(line: 5292, column: 44, scope: !15347)
!15352 = !DILocalVariable(name: "dev", scope: !15347, file: !3, line: 5294, type: !273)
!15353 = !DILocation(line: 5294, column: 18, scope: !15347)
!15354 = !DILocalVariable(name: "__mptr", scope: !15355, file: !3, line: 5296, type: !258)
!15355 = distinct !DILexicalBlock(scope: !15356, file: !3, line: 5296, column: 2)
!15356 = distinct !DILexicalBlock(scope: !15347, file: !3, line: 5296, column: 2)
!15357 = !DILocation(line: 5296, column: 2, scope: !15355)
!15358 = !DILocation(line: 5296, column: 2, scope: !15359)
!15359 = distinct !DILexicalBlock(scope: !15355, file: !3, line: 5296, column: 2)
!15360 = !DILocation(line: 5296, column: 2, scope: !15356)
!15361 = !DILocation(line: 5296, column: 2, scope: !15362)
!15362 = distinct !DILexicalBlock(scope: !15356, file: !3, line: 5296, column: 2)
!15363 = !DILocation(line: 5297, column: 8, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15365, file: !3, line: 5297, column: 7)
!15365 = distinct !DILexicalBlock(scope: !15362, file: !3, line: 5296, column: 58)
!15366 = !DILocation(line: 5297, column: 13, scope: !15364)
!15367 = !DILocation(line: 5297, column: 18, scope: !15364)
!15368 = !DILocation(line: 5297, column: 21, scope: !15364)
!15369 = !DILocation(line: 5297, column: 26, scope: !15364)
!15370 = !DILocation(line: 5297, column: 34, scope: !15364)
!15371 = !DILocation(line: 5297, column: 31, scope: !15364)
!15372 = !DILocation(line: 5297, column: 7, scope: !15365)
!15373 = !DILocation(line: 5298, column: 4, scope: !15364)
!15374 = !DILocation(line: 5299, column: 16, scope: !15365)
!15375 = !DILocation(line: 5299, column: 3, scope: !15365)
!15376 = !DILocation(line: 5300, column: 7, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15365, file: !3, line: 5300, column: 7)
!15378 = !DILocation(line: 5300, column: 12, scope: !15377)
!15379 = !DILocation(line: 5300, column: 7, scope: !15365)
!15380 = !DILocation(line: 5301, column: 17, scope: !15377)
!15381 = !DILocation(line: 5301, column: 22, scope: !15377)
!15382 = !DILocation(line: 5301, column: 4, scope: !15377)
!15383 = !DILocation(line: 5302, column: 2, scope: !15365)
!15384 = !DILocalVariable(name: "__mptr", scope: !15385, file: !3, line: 5296, type: !258)
!15385 = distinct !DILexicalBlock(scope: !15362, file: !3, line: 5296, column: 2)
!15386 = !DILocation(line: 5296, column: 2, scope: !15385)
!15387 = !DILocation(line: 5296, column: 2, scope: !15388)
!15388 = distinct !DILexicalBlock(scope: !15385, file: !3, line: 5296, column: 2)
!15389 = distinct !{!15389, !15360, !15390}
!15390 = !DILocation(line: 5302, column: 2, scope: !15356)
!15391 = !DILocation(line: 5303, column: 1, scope: !15347)
!15392 = distinct !DISubprogram(name: "pci_slot_unlock", scope: !3, file: !3, line: 5306, type: !15348, scopeLine: 5307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15393 = !DILocalVariable(name: "slot", arg: 1, scope: !15392, file: !3, line: 5306, type: !285)
!15394 = !DILocation(line: 5306, column: 46, scope: !15392)
!15395 = !DILocalVariable(name: "dev", scope: !15392, file: !3, line: 5308, type: !273)
!15396 = !DILocation(line: 5308, column: 18, scope: !15392)
!15397 = !DILocalVariable(name: "__mptr", scope: !15398, file: !3, line: 5310, type: !258)
!15398 = distinct !DILexicalBlock(scope: !15399, file: !3, line: 5310, column: 2)
!15399 = distinct !DILexicalBlock(scope: !15392, file: !3, line: 5310, column: 2)
!15400 = !DILocation(line: 5310, column: 2, scope: !15398)
!15401 = !DILocation(line: 5310, column: 2, scope: !15402)
!15402 = distinct !DILexicalBlock(scope: !15398, file: !3, line: 5310, column: 2)
!15403 = !DILocation(line: 5310, column: 2, scope: !15399)
!15404 = !DILocation(line: 5310, column: 2, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15399, file: !3, line: 5310, column: 2)
!15406 = !DILocation(line: 5311, column: 8, scope: !15407)
!15407 = distinct !DILexicalBlock(scope: !15408, file: !3, line: 5311, column: 7)
!15408 = distinct !DILexicalBlock(scope: !15405, file: !3, line: 5310, column: 58)
!15409 = !DILocation(line: 5311, column: 13, scope: !15407)
!15410 = !DILocation(line: 5311, column: 18, scope: !15407)
!15411 = !DILocation(line: 5311, column: 21, scope: !15407)
!15412 = !DILocation(line: 5311, column: 26, scope: !15407)
!15413 = !DILocation(line: 5311, column: 34, scope: !15407)
!15414 = !DILocation(line: 5311, column: 31, scope: !15407)
!15415 = !DILocation(line: 5311, column: 7, scope: !15408)
!15416 = !DILocation(line: 5312, column: 4, scope: !15407)
!15417 = !DILocation(line: 5313, column: 7, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15408, file: !3, line: 5313, column: 7)
!15419 = !DILocation(line: 5313, column: 12, scope: !15418)
!15420 = !DILocation(line: 5313, column: 7, scope: !15408)
!15421 = !DILocation(line: 5314, column: 19, scope: !15418)
!15422 = !DILocation(line: 5314, column: 24, scope: !15418)
!15423 = !DILocation(line: 5314, column: 4, scope: !15418)
!15424 = !DILocation(line: 5315, column: 18, scope: !15408)
!15425 = !DILocation(line: 5315, column: 3, scope: !15408)
!15426 = !DILocation(line: 5316, column: 2, scope: !15408)
!15427 = !DILocalVariable(name: "__mptr", scope: !15428, file: !3, line: 5310, type: !258)
!15428 = distinct !DILexicalBlock(scope: !15405, file: !3, line: 5310, column: 2)
!15429 = !DILocation(line: 5310, column: 2, scope: !15428)
!15430 = !DILocation(line: 5310, column: 2, scope: !15431)
!15431 = distinct !DILexicalBlock(scope: !15428, file: !3, line: 5310, column: 2)
!15432 = distinct !{!15432, !15403, !15433}
!15433 = !DILocation(line: 5316, column: 2, scope: !15399)
!15434 = !DILocation(line: 5317, column: 1, scope: !15392)
!15435 = distinct !DISubprogram(name: "pci_bus_resetable", scope: !3, file: !3, line: 5204, type: !9979, scopeLine: 5205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15436 = !DILocalVariable(name: "bus", arg: 1, scope: !15435, file: !3, line: 5204, type: !259)
!15437 = !DILocation(line: 5204, column: 47, scope: !15435)
!15438 = !DILocalVariable(name: "dev", scope: !15435, file: !3, line: 5206, type: !273)
!15439 = !DILocation(line: 5206, column: 18, scope: !15435)
!15440 = !DILocation(line: 5209, column: 6, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15435, file: !3, line: 5209, column: 6)
!15442 = !DILocation(line: 5209, column: 11, scope: !15441)
!15443 = !DILocation(line: 5209, column: 16, scope: !15441)
!15444 = !DILocation(line: 5209, column: 20, scope: !15441)
!15445 = !DILocation(line: 5209, column: 25, scope: !15441)
!15446 = !DILocation(line: 5209, column: 31, scope: !15441)
!15447 = !DILocation(line: 5209, column: 41, scope: !15441)
!15448 = !DILocation(line: 5209, column: 6, scope: !15435)
!15449 = !DILocation(line: 5210, column: 3, scope: !15441)
!15450 = !DILocalVariable(name: "__mptr", scope: !15451, file: !3, line: 5212, type: !258)
!15451 = distinct !DILexicalBlock(scope: !15452, file: !3, line: 5212, column: 2)
!15452 = distinct !DILexicalBlock(scope: !15435, file: !3, line: 5212, column: 2)
!15453 = !DILocation(line: 5212, column: 2, scope: !15451)
!15454 = !DILocation(line: 5212, column: 2, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15451, file: !3, line: 5212, column: 2)
!15456 = !DILocation(line: 5212, column: 2, scope: !15452)
!15457 = !DILocation(line: 5212, column: 2, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15452, file: !3, line: 5212, column: 2)
!15459 = !DILocation(line: 5213, column: 7, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !15461, file: !3, line: 5213, column: 7)
!15461 = distinct !DILexicalBlock(scope: !15458, file: !3, line: 5212, column: 52)
!15462 = !DILocation(line: 5213, column: 12, scope: !15460)
!15463 = !DILocation(line: 5213, column: 22, scope: !15460)
!15464 = !DILocation(line: 5213, column: 51, scope: !15460)
!15465 = !DILocation(line: 5214, column: 8, scope: !15460)
!15466 = !DILocation(line: 5214, column: 13, scope: !15460)
!15467 = !DILocation(line: 5214, column: 25, scope: !15460)
!15468 = !DILocation(line: 5214, column: 47, scope: !15460)
!15469 = !DILocation(line: 5214, column: 52, scope: !15460)
!15470 = !DILocation(line: 5214, column: 29, scope: !15460)
!15471 = !DILocation(line: 5213, column: 7, scope: !15461)
!15472 = !DILocation(line: 5215, column: 4, scope: !15460)
!15473 = !DILocation(line: 5216, column: 2, scope: !15461)
!15474 = !DILocalVariable(name: "__mptr", scope: !15475, file: !3, line: 5212, type: !258)
!15475 = distinct !DILexicalBlock(scope: !15458, file: !3, line: 5212, column: 2)
!15476 = !DILocation(line: 5212, column: 2, scope: !15475)
!15477 = !DILocation(line: 5212, column: 2, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15475, file: !3, line: 5212, column: 2)
!15479 = distinct !{!15479, !15456, !15480}
!15480 = !DILocation(line: 5216, column: 2, scope: !15452)
!15481 = !DILocation(line: 5218, column: 2, scope: !15435)
!15482 = !DILocation(line: 5219, column: 1, scope: !15435)
!15483 = distinct !DISubprogram(name: "pci_bus_lock", scope: !3, file: !3, line: 5222, type: !4276, scopeLine: 5223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15484 = !DILocalVariable(name: "bus", arg: 1, scope: !15483, file: !3, line: 5222, type: !259)
!15485 = !DILocation(line: 5222, column: 42, scope: !15483)
!15486 = !DILocalVariable(name: "dev", scope: !15483, file: !3, line: 5224, type: !273)
!15487 = !DILocation(line: 5224, column: 18, scope: !15483)
!15488 = !DILocalVariable(name: "__mptr", scope: !15489, file: !3, line: 5226, type: !258)
!15489 = distinct !DILexicalBlock(scope: !15490, file: !3, line: 5226, column: 2)
!15490 = distinct !DILexicalBlock(scope: !15483, file: !3, line: 5226, column: 2)
!15491 = !DILocation(line: 5226, column: 2, scope: !15489)
!15492 = !DILocation(line: 5226, column: 2, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 5226, column: 2)
!15494 = !DILocation(line: 5226, column: 2, scope: !15490)
!15495 = !DILocation(line: 5226, column: 2, scope: !15496)
!15496 = distinct !DILexicalBlock(scope: !15490, file: !3, line: 5226, column: 2)
!15497 = !DILocation(line: 5227, column: 16, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15496, file: !3, line: 5226, column: 52)
!15499 = !DILocation(line: 5227, column: 3, scope: !15498)
!15500 = !DILocation(line: 5228, column: 7, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15498, file: !3, line: 5228, column: 7)
!15502 = !DILocation(line: 5228, column: 12, scope: !15501)
!15503 = !DILocation(line: 5228, column: 7, scope: !15498)
!15504 = !DILocation(line: 5229, column: 17, scope: !15501)
!15505 = !DILocation(line: 5229, column: 22, scope: !15501)
!15506 = !DILocation(line: 5229, column: 4, scope: !15501)
!15507 = !DILocation(line: 5230, column: 2, scope: !15498)
!15508 = !DILocalVariable(name: "__mptr", scope: !15509, file: !3, line: 5226, type: !258)
!15509 = distinct !DILexicalBlock(scope: !15496, file: !3, line: 5226, column: 2)
!15510 = !DILocation(line: 5226, column: 2, scope: !15509)
!15511 = !DILocation(line: 5226, column: 2, scope: !15512)
!15512 = distinct !DILexicalBlock(scope: !15509, file: !3, line: 5226, column: 2)
!15513 = distinct !{!15513, !15494, !15514}
!15514 = !DILocation(line: 5230, column: 2, scope: !15490)
!15515 = !DILocation(line: 5231, column: 1, scope: !15483)
!15516 = distinct !DISubprogram(name: "pci_bus_unlock", scope: !3, file: !3, line: 5234, type: !4276, scopeLine: 5235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15517 = !DILocalVariable(name: "bus", arg: 1, scope: !15516, file: !3, line: 5234, type: !259)
!15518 = !DILocation(line: 5234, column: 44, scope: !15516)
!15519 = !DILocalVariable(name: "dev", scope: !15516, file: !3, line: 5236, type: !273)
!15520 = !DILocation(line: 5236, column: 18, scope: !15516)
!15521 = !DILocalVariable(name: "__mptr", scope: !15522, file: !3, line: 5238, type: !258)
!15522 = distinct !DILexicalBlock(scope: !15523, file: !3, line: 5238, column: 2)
!15523 = distinct !DILexicalBlock(scope: !15516, file: !3, line: 5238, column: 2)
!15524 = !DILocation(line: 5238, column: 2, scope: !15522)
!15525 = !DILocation(line: 5238, column: 2, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15522, file: !3, line: 5238, column: 2)
!15527 = !DILocation(line: 5238, column: 2, scope: !15523)
!15528 = !DILocation(line: 5238, column: 2, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15523, file: !3, line: 5238, column: 2)
!15530 = !DILocation(line: 5239, column: 7, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15532, file: !3, line: 5239, column: 7)
!15532 = distinct !DILexicalBlock(scope: !15529, file: !3, line: 5238, column: 52)
!15533 = !DILocation(line: 5239, column: 12, scope: !15531)
!15534 = !DILocation(line: 5239, column: 7, scope: !15532)
!15535 = !DILocation(line: 5240, column: 19, scope: !15531)
!15536 = !DILocation(line: 5240, column: 24, scope: !15531)
!15537 = !DILocation(line: 5240, column: 4, scope: !15531)
!15538 = !DILocation(line: 5241, column: 18, scope: !15532)
!15539 = !DILocation(line: 5241, column: 3, scope: !15532)
!15540 = !DILocation(line: 5242, column: 2, scope: !15532)
!15541 = !DILocalVariable(name: "__mptr", scope: !15542, file: !3, line: 5238, type: !258)
!15542 = distinct !DILexicalBlock(scope: !15529, file: !3, line: 5238, column: 2)
!15543 = !DILocation(line: 5238, column: 2, scope: !15542)
!15544 = !DILocation(line: 5238, column: 2, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15542, file: !3, line: 5238, column: 2)
!15546 = distinct !{!15546, !15527, !15547}
!15547 = !DILocation(line: 5242, column: 2, scope: !15523)
!15548 = !DILocation(line: 5243, column: 1, scope: !15516)
!15549 = distinct !DISubprogram(name: "pci_slot_trylock", scope: !3, file: !3, line: 5320, type: !12182, scopeLine: 5321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15550 = !DILocalVariable(name: "slot", arg: 1, scope: !15549, file: !3, line: 5320, type: !285)
!15551 = !DILocation(line: 5320, column: 46, scope: !15549)
!15552 = !DILocalVariable(name: "dev", scope: !15549, file: !3, line: 5322, type: !273)
!15553 = !DILocation(line: 5322, column: 18, scope: !15549)
!15554 = !DILocalVariable(name: "__mptr", scope: !15555, file: !3, line: 5324, type: !258)
!15555 = distinct !DILexicalBlock(scope: !15556, file: !3, line: 5324, column: 2)
!15556 = distinct !DILexicalBlock(scope: !15549, file: !3, line: 5324, column: 2)
!15557 = !DILocation(line: 5324, column: 2, scope: !15555)
!15558 = !DILocation(line: 5324, column: 2, scope: !15559)
!15559 = distinct !DILexicalBlock(scope: !15555, file: !3, line: 5324, column: 2)
!15560 = !DILocation(line: 5324, column: 2, scope: !15556)
!15561 = !DILocation(line: 5324, column: 2, scope: !15562)
!15562 = distinct !DILexicalBlock(scope: !15556, file: !3, line: 5324, column: 2)
!15563 = !DILocation(line: 5325, column: 8, scope: !15564)
!15564 = distinct !DILexicalBlock(scope: !15565, file: !3, line: 5325, column: 7)
!15565 = distinct !DILexicalBlock(scope: !15562, file: !3, line: 5324, column: 58)
!15566 = !DILocation(line: 5325, column: 13, scope: !15564)
!15567 = !DILocation(line: 5325, column: 18, scope: !15564)
!15568 = !DILocation(line: 5325, column: 21, scope: !15564)
!15569 = !DILocation(line: 5325, column: 26, scope: !15564)
!15570 = !DILocation(line: 5325, column: 34, scope: !15564)
!15571 = !DILocation(line: 5325, column: 31, scope: !15564)
!15572 = !DILocation(line: 5325, column: 7, scope: !15565)
!15573 = !DILocation(line: 5326, column: 4, scope: !15564)
!15574 = !DILocation(line: 5327, column: 24, scope: !15575)
!15575 = distinct !DILexicalBlock(scope: !15565, file: !3, line: 5327, column: 7)
!15576 = !DILocation(line: 5327, column: 8, scope: !15575)
!15577 = !DILocation(line: 5327, column: 7, scope: !15565)
!15578 = !DILocation(line: 5328, column: 4, scope: !15575)
!15579 = !DILocation(line: 5329, column: 7, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15565, file: !3, line: 5329, column: 7)
!15581 = !DILocation(line: 5329, column: 12, scope: !15580)
!15582 = !DILocation(line: 5329, column: 7, scope: !15565)
!15583 = !DILocation(line: 5330, column: 25, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15585, file: !3, line: 5330, column: 8)
!15585 = distinct !DILexicalBlock(scope: !15580, file: !3, line: 5329, column: 25)
!15586 = !DILocation(line: 5330, column: 30, scope: !15584)
!15587 = !DILocation(line: 5330, column: 9, scope: !15584)
!15588 = !DILocation(line: 5330, column: 8, scope: !15585)
!15589 = !DILocation(line: 5331, column: 20, scope: !15590)
!15590 = distinct !DILexicalBlock(scope: !15584, file: !3, line: 5330, column: 44)
!15591 = !DILocation(line: 5331, column: 5, scope: !15590)
!15592 = !DILocation(line: 5332, column: 5, scope: !15590)
!15593 = !DILocation(line: 5334, column: 3, scope: !15585)
!15594 = !DILocation(line: 5335, column: 2, scope: !15565)
!15595 = !DILocalVariable(name: "__mptr", scope: !15596, file: !3, line: 5324, type: !258)
!15596 = distinct !DILexicalBlock(scope: !15562, file: !3, line: 5324, column: 2)
!15597 = !DILocation(line: 5324, column: 2, scope: !15596)
!15598 = !DILocation(line: 5324, column: 2, scope: !15599)
!15599 = distinct !DILexicalBlock(scope: !15596, file: !3, line: 5324, column: 2)
!15600 = distinct !{!15600, !15560, !15601}
!15601 = !DILocation(line: 5335, column: 2, scope: !15556)
!15602 = !DILocation(line: 5336, column: 2, scope: !15549)
!15603 = !DILabel(scope: !15549, name: "unlock", file: !3, line: 5338)
!15604 = !DILocation(line: 5338, column: 1, scope: !15549)
!15605 = !DILocalVariable(name: "__mptr", scope: !15606, file: !3, line: 5339, type: !258)
!15606 = distinct !DILexicalBlock(scope: !15607, file: !3, line: 5339, column: 2)
!15607 = distinct !DILexicalBlock(scope: !15549, file: !3, line: 5339, column: 2)
!15608 = !DILocation(line: 5339, column: 2, scope: !15606)
!15609 = !DILocation(line: 5339, column: 2, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15606, file: !3, line: 5339, column: 2)
!15611 = !DILocation(line: 5339, column: 2, scope: !15607)
!15612 = !DILocation(line: 5339, column: 2, scope: !15613)
!15613 = distinct !DILexicalBlock(scope: !15607, file: !3, line: 5339, column: 2)
!15614 = !DILocation(line: 5341, column: 8, scope: !15615)
!15615 = distinct !DILexicalBlock(scope: !15616, file: !3, line: 5341, column: 7)
!15616 = distinct !DILexicalBlock(scope: !15613, file: !3, line: 5340, column: 42)
!15617 = !DILocation(line: 5341, column: 13, scope: !15615)
!15618 = !DILocation(line: 5341, column: 18, scope: !15615)
!15619 = !DILocation(line: 5341, column: 21, scope: !15615)
!15620 = !DILocation(line: 5341, column: 26, scope: !15615)
!15621 = !DILocation(line: 5341, column: 34, scope: !15615)
!15622 = !DILocation(line: 5341, column: 31, scope: !15615)
!15623 = !DILocation(line: 5341, column: 7, scope: !15616)
!15624 = !DILocation(line: 5342, column: 4, scope: !15615)
!15625 = !DILocation(line: 5343, column: 7, scope: !15626)
!15626 = distinct !DILexicalBlock(scope: !15616, file: !3, line: 5343, column: 7)
!15627 = !DILocation(line: 5343, column: 12, scope: !15626)
!15628 = !DILocation(line: 5343, column: 7, scope: !15616)
!15629 = !DILocation(line: 5344, column: 19, scope: !15626)
!15630 = !DILocation(line: 5344, column: 24, scope: !15626)
!15631 = !DILocation(line: 5344, column: 4, scope: !15626)
!15632 = !DILocation(line: 5345, column: 18, scope: !15616)
!15633 = !DILocation(line: 5345, column: 3, scope: !15616)
!15634 = !DILocation(line: 5346, column: 2, scope: !15616)
!15635 = !DILocalVariable(name: "__mptr", scope: !15636, file: !3, line: 5339, type: !258)
!15636 = distinct !DILexicalBlock(scope: !15613, file: !3, line: 5339, column: 2)
!15637 = !DILocation(line: 5339, column: 2, scope: !15636)
!15638 = !DILocation(line: 5339, column: 2, scope: !15639)
!15639 = distinct !DILexicalBlock(scope: !15636, file: !3, line: 5339, column: 2)
!15640 = distinct !{!15640, !15611, !15641}
!15641 = !DILocation(line: 5346, column: 2, scope: !15607)
!15642 = !DILocation(line: 5347, column: 2, scope: !15549)
!15643 = !DILocation(line: 5348, column: 1, scope: !15549)
!15644 = distinct !DISubprogram(name: "pci_slot_save_and_disable_locked", scope: !3, file: !3, line: 5385, type: !15348, scopeLine: 5386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15645 = !DILocalVariable(name: "slot", arg: 1, scope: !15644, file: !3, line: 5385, type: !285)
!15646 = !DILocation(line: 5385, column: 63, scope: !15644)
!15647 = !DILocalVariable(name: "dev", scope: !15644, file: !3, line: 5387, type: !273)
!15648 = !DILocation(line: 5387, column: 18, scope: !15644)
!15649 = !DILocalVariable(name: "__mptr", scope: !15650, file: !3, line: 5389, type: !258)
!15650 = distinct !DILexicalBlock(scope: !15651, file: !3, line: 5389, column: 2)
!15651 = distinct !DILexicalBlock(scope: !15644, file: !3, line: 5389, column: 2)
!15652 = !DILocation(line: 5389, column: 2, scope: !15650)
!15653 = !DILocation(line: 5389, column: 2, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15650, file: !3, line: 5389, column: 2)
!15655 = !DILocation(line: 5389, column: 2, scope: !15651)
!15656 = !DILocation(line: 5389, column: 2, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15651, file: !3, line: 5389, column: 2)
!15658 = !DILocation(line: 5390, column: 8, scope: !15659)
!15659 = distinct !DILexicalBlock(scope: !15660, file: !3, line: 5390, column: 7)
!15660 = distinct !DILexicalBlock(scope: !15657, file: !3, line: 5389, column: 58)
!15661 = !DILocation(line: 5390, column: 13, scope: !15659)
!15662 = !DILocation(line: 5390, column: 18, scope: !15659)
!15663 = !DILocation(line: 5390, column: 21, scope: !15659)
!15664 = !DILocation(line: 5390, column: 26, scope: !15659)
!15665 = !DILocation(line: 5390, column: 34, scope: !15659)
!15666 = !DILocation(line: 5390, column: 31, scope: !15659)
!15667 = !DILocation(line: 5390, column: 7, scope: !15660)
!15668 = !DILocation(line: 5391, column: 4, scope: !15659)
!15669 = !DILocation(line: 5392, column: 28, scope: !15660)
!15670 = !DILocation(line: 5392, column: 3, scope: !15660)
!15671 = !DILocation(line: 5393, column: 7, scope: !15672)
!15672 = distinct !DILexicalBlock(scope: !15660, file: !3, line: 5393, column: 7)
!15673 = !DILocation(line: 5393, column: 12, scope: !15672)
!15674 = !DILocation(line: 5393, column: 7, scope: !15660)
!15675 = !DILocation(line: 5394, column: 36, scope: !15672)
!15676 = !DILocation(line: 5394, column: 41, scope: !15672)
!15677 = !DILocation(line: 5394, column: 4, scope: !15672)
!15678 = !DILocation(line: 5395, column: 2, scope: !15660)
!15679 = !DILocalVariable(name: "__mptr", scope: !15680, file: !3, line: 5389, type: !258)
!15680 = distinct !DILexicalBlock(scope: !15657, file: !3, line: 5389, column: 2)
!15681 = !DILocation(line: 5389, column: 2, scope: !15680)
!15682 = !DILocation(line: 5389, column: 2, scope: !15683)
!15683 = distinct !DILexicalBlock(scope: !15680, file: !3, line: 5389, column: 2)
!15684 = distinct !{!15684, !15655, !15685}
!15685 = !DILocation(line: 5395, column: 2, scope: !15651)
!15686 = !DILocation(line: 5396, column: 1, scope: !15644)
!15687 = distinct !DISubprogram(name: "pci_slot_restore_locked", scope: !3, file: !3, line: 5403, type: !15348, scopeLine: 5404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15688 = !DILocalVariable(name: "slot", arg: 1, scope: !15687, file: !3, line: 5403, type: !285)
!15689 = !DILocation(line: 5403, column: 54, scope: !15687)
!15690 = !DILocalVariable(name: "dev", scope: !15687, file: !3, line: 5405, type: !273)
!15691 = !DILocation(line: 5405, column: 18, scope: !15687)
!15692 = !DILocalVariable(name: "__mptr", scope: !15693, file: !3, line: 5407, type: !258)
!15693 = distinct !DILexicalBlock(scope: !15694, file: !3, line: 5407, column: 2)
!15694 = distinct !DILexicalBlock(scope: !15687, file: !3, line: 5407, column: 2)
!15695 = !DILocation(line: 5407, column: 2, scope: !15693)
!15696 = !DILocation(line: 5407, column: 2, scope: !15697)
!15697 = distinct !DILexicalBlock(scope: !15693, file: !3, line: 5407, column: 2)
!15698 = !DILocation(line: 5407, column: 2, scope: !15694)
!15699 = !DILocation(line: 5407, column: 2, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15694, file: !3, line: 5407, column: 2)
!15701 = !DILocation(line: 5408, column: 8, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !15703, file: !3, line: 5408, column: 7)
!15703 = distinct !DILexicalBlock(scope: !15700, file: !3, line: 5407, column: 58)
!15704 = !DILocation(line: 5408, column: 13, scope: !15702)
!15705 = !DILocation(line: 5408, column: 18, scope: !15702)
!15706 = !DILocation(line: 5408, column: 21, scope: !15702)
!15707 = !DILocation(line: 5408, column: 26, scope: !15702)
!15708 = !DILocation(line: 5408, column: 34, scope: !15702)
!15709 = !DILocation(line: 5408, column: 31, scope: !15702)
!15710 = !DILocation(line: 5408, column: 7, scope: !15703)
!15711 = !DILocation(line: 5409, column: 4, scope: !15702)
!15712 = !DILocation(line: 5410, column: 19, scope: !15703)
!15713 = !DILocation(line: 5410, column: 3, scope: !15703)
!15714 = !DILocation(line: 5411, column: 7, scope: !15715)
!15715 = distinct !DILexicalBlock(scope: !15703, file: !3, line: 5411, column: 7)
!15716 = !DILocation(line: 5411, column: 12, scope: !15715)
!15717 = !DILocation(line: 5411, column: 7, scope: !15703)
!15718 = !DILocation(line: 5412, column: 27, scope: !15715)
!15719 = !DILocation(line: 5412, column: 32, scope: !15715)
!15720 = !DILocation(line: 5412, column: 4, scope: !15715)
!15721 = !DILocation(line: 5413, column: 2, scope: !15703)
!15722 = !DILocalVariable(name: "__mptr", scope: !15723, file: !3, line: 5407, type: !258)
!15723 = distinct !DILexicalBlock(scope: !15700, file: !3, line: 5407, column: 2)
!15724 = !DILocation(line: 5407, column: 2, scope: !15723)
!15725 = !DILocation(line: 5407, column: 2, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !15723, file: !3, line: 5407, column: 2)
!15727 = distinct !{!15727, !15698, !15728}
!15728 = !DILocation(line: 5413, column: 2, scope: !15694)
!15729 = !DILocation(line: 5414, column: 1, scope: !15687)
!15730 = distinct !DISubprogram(name: "pci_bus_trylock", scope: !3, file: !3, line: 5246, type: !4272, scopeLine: 5247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15731 = !DILocalVariable(name: "bus", arg: 1, scope: !15730, file: !3, line: 5246, type: !259)
!15732 = !DILocation(line: 5246, column: 44, scope: !15730)
!15733 = !DILocalVariable(name: "dev", scope: !15730, file: !3, line: 5248, type: !273)
!15734 = !DILocation(line: 5248, column: 18, scope: !15730)
!15735 = !DILocalVariable(name: "__mptr", scope: !15736, file: !3, line: 5250, type: !258)
!15736 = distinct !DILexicalBlock(scope: !15737, file: !3, line: 5250, column: 2)
!15737 = distinct !DILexicalBlock(scope: !15730, file: !3, line: 5250, column: 2)
!15738 = !DILocation(line: 5250, column: 2, scope: !15736)
!15739 = !DILocation(line: 5250, column: 2, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15736, file: !3, line: 5250, column: 2)
!15741 = !DILocation(line: 5250, column: 2, scope: !15737)
!15742 = !DILocation(line: 5250, column: 2, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15737, file: !3, line: 5250, column: 2)
!15744 = !DILocation(line: 5251, column: 24, scope: !15745)
!15745 = distinct !DILexicalBlock(scope: !15746, file: !3, line: 5251, column: 7)
!15746 = distinct !DILexicalBlock(scope: !15743, file: !3, line: 5250, column: 52)
!15747 = !DILocation(line: 5251, column: 8, scope: !15745)
!15748 = !DILocation(line: 5251, column: 7, scope: !15746)
!15749 = !DILocation(line: 5252, column: 4, scope: !15745)
!15750 = !DILocation(line: 5253, column: 7, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15746, file: !3, line: 5253, column: 7)
!15752 = !DILocation(line: 5253, column: 12, scope: !15751)
!15753 = !DILocation(line: 5253, column: 7, scope: !15746)
!15754 = !DILocation(line: 5254, column: 25, scope: !15755)
!15755 = distinct !DILexicalBlock(scope: !15756, file: !3, line: 5254, column: 8)
!15756 = distinct !DILexicalBlock(scope: !15751, file: !3, line: 5253, column: 25)
!15757 = !DILocation(line: 5254, column: 30, scope: !15755)
!15758 = !DILocation(line: 5254, column: 9, scope: !15755)
!15759 = !DILocation(line: 5254, column: 8, scope: !15756)
!15760 = !DILocation(line: 5255, column: 20, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15755, file: !3, line: 5254, column: 44)
!15762 = !DILocation(line: 5255, column: 5, scope: !15761)
!15763 = !DILocation(line: 5256, column: 5, scope: !15761)
!15764 = !DILocation(line: 5258, column: 3, scope: !15756)
!15765 = !DILocation(line: 5259, column: 2, scope: !15746)
!15766 = !DILocalVariable(name: "__mptr", scope: !15767, file: !3, line: 5250, type: !258)
!15767 = distinct !DILexicalBlock(scope: !15743, file: !3, line: 5250, column: 2)
!15768 = !DILocation(line: 5250, column: 2, scope: !15767)
!15769 = !DILocation(line: 5250, column: 2, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15767, file: !3, line: 5250, column: 2)
!15771 = distinct !{!15771, !15741, !15772}
!15772 = !DILocation(line: 5259, column: 2, scope: !15737)
!15773 = !DILocation(line: 5260, column: 2, scope: !15730)
!15774 = !DILabel(scope: !15730, name: "unlock", file: !3, line: 5262)
!15775 = !DILocation(line: 5262, column: 1, scope: !15730)
!15776 = !DILocalVariable(name: "__mptr", scope: !15777, file: !3, line: 5263, type: !258)
!15777 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 5263, column: 2)
!15778 = distinct !DILexicalBlock(scope: !15730, file: !3, line: 5263, column: 2)
!15779 = !DILocation(line: 5263, column: 2, scope: !15777)
!15780 = !DILocation(line: 5263, column: 2, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15777, file: !3, line: 5263, column: 2)
!15782 = !DILocation(line: 5263, column: 2, scope: !15778)
!15783 = !DILocation(line: 5263, column: 2, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 5263, column: 2)
!15785 = !DILocation(line: 5264, column: 7, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15787, file: !3, line: 5264, column: 7)
!15787 = distinct !DILexicalBlock(scope: !15784, file: !3, line: 5263, column: 69)
!15788 = !DILocation(line: 5264, column: 12, scope: !15786)
!15789 = !DILocation(line: 5264, column: 7, scope: !15787)
!15790 = !DILocation(line: 5265, column: 19, scope: !15786)
!15791 = !DILocation(line: 5265, column: 24, scope: !15786)
!15792 = !DILocation(line: 5265, column: 4, scope: !15786)
!15793 = !DILocation(line: 5266, column: 18, scope: !15787)
!15794 = !DILocation(line: 5266, column: 3, scope: !15787)
!15795 = !DILocation(line: 5267, column: 2, scope: !15787)
!15796 = !DILocalVariable(name: "__mptr", scope: !15797, file: !3, line: 5263, type: !258)
!15797 = distinct !DILexicalBlock(scope: !15784, file: !3, line: 5263, column: 2)
!15798 = !DILocation(line: 5263, column: 2, scope: !15797)
!15799 = !DILocation(line: 5263, column: 2, scope: !15800)
!15800 = distinct !DILexicalBlock(scope: !15797, file: !3, line: 5263, column: 2)
!15801 = distinct !{!15801, !15782, !15802}
!15802 = !DILocation(line: 5267, column: 2, scope: !15778)
!15803 = !DILocation(line: 5268, column: 2, scope: !15730)
!15804 = !DILocation(line: 5269, column: 1, scope: !15730)
!15805 = distinct !DISubprogram(name: "pci_bus_save_and_disable_locked", scope: !3, file: !3, line: 5354, type: !4276, scopeLine: 5355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15806 = !DILocalVariable(name: "bus", arg: 1, scope: !15805, file: !3, line: 5354, type: !259)
!15807 = !DILocation(line: 5354, column: 61, scope: !15805)
!15808 = !DILocalVariable(name: "dev", scope: !15805, file: !3, line: 5356, type: !273)
!15809 = !DILocation(line: 5356, column: 18, scope: !15805)
!15810 = !DILocalVariable(name: "__mptr", scope: !15811, file: !3, line: 5358, type: !258)
!15811 = distinct !DILexicalBlock(scope: !15812, file: !3, line: 5358, column: 2)
!15812 = distinct !DILexicalBlock(scope: !15805, file: !3, line: 5358, column: 2)
!15813 = !DILocation(line: 5358, column: 2, scope: !15811)
!15814 = !DILocation(line: 5358, column: 2, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15811, file: !3, line: 5358, column: 2)
!15816 = !DILocation(line: 5358, column: 2, scope: !15812)
!15817 = !DILocation(line: 5358, column: 2, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15812, file: !3, line: 5358, column: 2)
!15819 = !DILocation(line: 5359, column: 28, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15818, file: !3, line: 5358, column: 52)
!15821 = !DILocation(line: 5359, column: 3, scope: !15820)
!15822 = !DILocation(line: 5360, column: 7, scope: !15823)
!15823 = distinct !DILexicalBlock(scope: !15820, file: !3, line: 5360, column: 7)
!15824 = !DILocation(line: 5360, column: 12, scope: !15823)
!15825 = !DILocation(line: 5360, column: 7, scope: !15820)
!15826 = !DILocation(line: 5361, column: 36, scope: !15823)
!15827 = !DILocation(line: 5361, column: 41, scope: !15823)
!15828 = !DILocation(line: 5361, column: 4, scope: !15823)
!15829 = !DILocation(line: 5362, column: 2, scope: !15820)
!15830 = !DILocalVariable(name: "__mptr", scope: !15831, file: !3, line: 5358, type: !258)
!15831 = distinct !DILexicalBlock(scope: !15818, file: !3, line: 5358, column: 2)
!15832 = !DILocation(line: 5358, column: 2, scope: !15831)
!15833 = !DILocation(line: 5358, column: 2, scope: !15834)
!15834 = distinct !DILexicalBlock(scope: !15831, file: !3, line: 5358, column: 2)
!15835 = distinct !{!15835, !15816, !15836}
!15836 = !DILocation(line: 5362, column: 2, scope: !15812)
!15837 = !DILocation(line: 5363, column: 1, scope: !15805)
!15838 = distinct !DISubprogram(name: "pci_bus_restore_locked", scope: !3, file: !3, line: 5370, type: !4276, scopeLine: 5371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15839 = !DILocalVariable(name: "bus", arg: 1, scope: !15838, file: !3, line: 5370, type: !259)
!15840 = !DILocation(line: 5370, column: 52, scope: !15838)
!15841 = !DILocalVariable(name: "dev", scope: !15838, file: !3, line: 5372, type: !273)
!15842 = !DILocation(line: 5372, column: 18, scope: !15838)
!15843 = !DILocalVariable(name: "__mptr", scope: !15844, file: !3, line: 5374, type: !258)
!15844 = distinct !DILexicalBlock(scope: !15845, file: !3, line: 5374, column: 2)
!15845 = distinct !DILexicalBlock(scope: !15838, file: !3, line: 5374, column: 2)
!15846 = !DILocation(line: 5374, column: 2, scope: !15844)
!15847 = !DILocation(line: 5374, column: 2, scope: !15848)
!15848 = distinct !DILexicalBlock(scope: !15844, file: !3, line: 5374, column: 2)
!15849 = !DILocation(line: 5374, column: 2, scope: !15845)
!15850 = !DILocation(line: 5374, column: 2, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15845, file: !3, line: 5374, column: 2)
!15852 = !DILocation(line: 5375, column: 19, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15851, file: !3, line: 5374, column: 52)
!15854 = !DILocation(line: 5375, column: 3, scope: !15853)
!15855 = !DILocation(line: 5376, column: 7, scope: !15856)
!15856 = distinct !DILexicalBlock(scope: !15853, file: !3, line: 5376, column: 7)
!15857 = !DILocation(line: 5376, column: 12, scope: !15856)
!15858 = !DILocation(line: 5376, column: 7, scope: !15853)
!15859 = !DILocation(line: 5377, column: 27, scope: !15856)
!15860 = !DILocation(line: 5377, column: 32, scope: !15856)
!15861 = !DILocation(line: 5377, column: 4, scope: !15856)
!15862 = !DILocation(line: 5378, column: 2, scope: !15853)
!15863 = !DILocalVariable(name: "__mptr", scope: !15864, file: !3, line: 5374, type: !258)
!15864 = distinct !DILexicalBlock(scope: !15851, file: !3, line: 5374, column: 2)
!15865 = !DILocation(line: 5374, column: 2, scope: !15864)
!15866 = !DILocation(line: 5374, column: 2, scope: !15867)
!15867 = distinct !DILexicalBlock(scope: !15864, file: !3, line: 5374, column: 2)
!15868 = distinct !{!15868, !15849, !15869}
!15869 = !DILocation(line: 5378, column: 2, scope: !15845)
!15870 = !DILocation(line: 5379, column: 1, scope: !15838)
!15871 = distinct !DISubprogram(name: "__set_bit", scope: !13286, file: !13286, line: 25, type: !15872, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15872 = !DISubroutineType(types: !15873)
!15873 = !{null, !212, !15874}
!15874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13291, size: 64)
!15875 = !DILocalVariable(name: "nr", arg: 1, scope: !15876, file: !12492, line: 66, type: !212)
!15876 = distinct !DISubprogram(name: "arch___set_bit", scope: !12492, file: !12492, line: 66, type: !15872, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15877 = !DILocation(line: 66, column: 21, scope: !15876, inlinedAt: !15878)
!15878 = distinct !DILocation(line: 28, column: 2, scope: !15871)
!15879 = !DILocalVariable(name: "addr", arg: 2, scope: !15876, file: !12492, line: 66, type: !15874)
!15880 = !DILocation(line: 66, column: 49, scope: !15876, inlinedAt: !15878)
!15881 = !DILocalVariable(name: "v", arg: 1, scope: !15882, file: !7231, line: 39, type: !7234)
!15882 = distinct !DISubprogram(name: "instrument_write", scope: !7231, file: !7231, line: 39, type: !7232, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15883 = !DILocation(line: 39, column: 67, scope: !15882, inlinedAt: !15884)
!15884 = distinct !DILocation(line: 27, column: 2, scope: !15871)
!15885 = !DILocalVariable(name: "size", arg: 2, scope: !15882, file: !7231, line: 39, type: !445)
!15886 = !DILocation(line: 39, column: 77, scope: !15882, inlinedAt: !15884)
!15887 = !DILocalVariable(name: "nr", arg: 1, scope: !15871, file: !13286, line: 25, type: !212)
!15888 = !DILocation(line: 25, column: 35, scope: !15871)
!15889 = !DILocalVariable(name: "addr", arg: 2, scope: !15871, file: !13286, line: 25, type: !15874)
!15890 = !DILocation(line: 25, column: 63, scope: !15871)
!15891 = !DILocation(line: 27, column: 19, scope: !15871)
!15892 = !DILocation(line: 27, column: 26, scope: !15871)
!15893 = !DILocation(line: 27, column: 24, scope: !15871)
!15894 = !DILocation(line: 41, column: 20, scope: !15882, inlinedAt: !15884)
!15895 = !DILocation(line: 41, column: 23, scope: !15882, inlinedAt: !15884)
!15896 = !DILocation(line: 41, column: 2, scope: !15882, inlinedAt: !15884)
!15897 = !DILocation(line: 42, column: 2, scope: !15882, inlinedAt: !15884)
!15898 = !DILocation(line: 28, column: 17, scope: !15871)
!15899 = !DILocation(line: 28, column: 21, scope: !15871)
!15900 = !DILocation(line: 68, column: 44, scope: !15876, inlinedAt: !15878)
!15901 = !DILocation(line: 68, column: 56, scope: !15876, inlinedAt: !15878)
!15902 = !DILocation(line: 68, column: 2, scope: !15876, inlinedAt: !15878)
!15903 = !{i32 -2146963139}
!15904 = !DILocation(line: 29, column: 1, scope: !15871)
!15905 = distinct !DISubprogram(name: "pci_has_flag", scope: !6, file: !6, line: 969, type: !3170, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15906 = !DILocalVariable(name: "flag", arg: 1, scope: !15905, file: !6, line: 969, type: !304)
!15907 = !DILocation(line: 969, column: 36, scope: !15905)
!15908 = !DILocation(line: 969, column: 51, scope: !15905)
!15909 = !DILocation(line: 969, column: 63, scope: !15905)
!15910 = !DILocation(line: 969, column: 61, scope: !15905)
!15911 = !DILocation(line: 969, column: 44, scope: !15905)
!15912 = distinct !DISubprogram(name: "resource_alignment_show", scope: !3, file: !3, line: 6358, type: !4873, scopeLine: 6359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15913 = !DILocation(line: 392, column: 53, scope: !13491, inlinedAt: !15914)
!15914 = distinct !DILocation(line: 6365, column: 2, scope: !15912)
!15915 = !DILocation(line: 352, column: 51, scope: !13495, inlinedAt: !15916)
!15916 = distinct !DILocation(line: 6362, column: 2, scope: !15912)
!15917 = !DILocalVariable(name: "bus", arg: 1, scope: !15912, file: !3, line: 6358, type: !3577)
!15918 = !DILocation(line: 6358, column: 57, scope: !15912)
!15919 = !DILocalVariable(name: "buf", arg: 2, scope: !15912, file: !3, line: 6358, type: !399)
!15920 = !DILocation(line: 6358, column: 68, scope: !15912)
!15921 = !DILocalVariable(name: "count", scope: !15912, file: !3, line: 6360, type: !445)
!15922 = !DILocation(line: 6360, column: 9, scope: !15912)
!15923 = !DILocation(line: 354, column: 2, scope: !13514, inlinedAt: !15916)
!15924 = !DILocation(line: 354, column: 2, scope: !13517, inlinedAt: !15916)
!15925 = !DILocation(line: 6363, column: 6, scope: !15926)
!15926 = distinct !DILexicalBlock(scope: !15912, file: !3, line: 6363, column: 6)
!15927 = !DILocation(line: 6363, column: 6, scope: !15912)
!15928 = !DILocation(line: 6364, column: 21, scope: !15926)
!15929 = !DILocation(line: 6364, column: 43, scope: !15926)
!15930 = !DILocation(line: 6364, column: 11, scope: !15926)
!15931 = !DILocation(line: 6364, column: 9, scope: !15926)
!15932 = !DILocation(line: 6364, column: 3, scope: !15926)
!15933 = !DILocation(line: 394, column: 2, scope: !13607, inlinedAt: !15914)
!15934 = !DILocation(line: 394, column: 2, scope: !13610, inlinedAt: !15914)
!15935 = !DILocation(line: 6372, column: 6, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !15912, file: !3, line: 6372, column: 6)
!15937 = !DILocation(line: 6372, column: 12, scope: !15936)
!15938 = !DILocation(line: 6372, column: 17, scope: !15936)
!15939 = !DILocation(line: 6372, column: 20, scope: !15936)
!15940 = !DILocation(line: 6372, column: 24, scope: !15936)
!15941 = !DILocation(line: 6372, column: 30, scope: !15936)
!15942 = !DILocation(line: 6372, column: 35, scope: !15936)
!15943 = !DILocation(line: 6372, column: 43, scope: !15936)
!15944 = !DILocation(line: 6372, column: 46, scope: !15936)
!15945 = !DILocation(line: 6372, column: 52, scope: !15936)
!15946 = !DILocation(line: 6372, column: 6, scope: !15912)
!15947 = !DILocation(line: 6373, column: 3, scope: !15948)
!15948 = distinct !DILexicalBlock(scope: !15936, file: !3, line: 6372, column: 69)
!15949 = !DILocation(line: 6373, column: 7, scope: !15948)
!15950 = !DILocation(line: 6373, column: 13, scope: !15948)
!15951 = !DILocation(line: 6373, column: 18, scope: !15948)
!15952 = !DILocation(line: 6374, column: 3, scope: !15948)
!15953 = !DILocation(line: 6374, column: 12, scope: !15948)
!15954 = !DILocation(line: 6374, column: 16, scope: !15948)
!15955 = !DILocation(line: 6375, column: 2, scope: !15948)
!15956 = !DILocation(line: 6377, column: 9, scope: !15912)
!15957 = !DILocation(line: 6377, column: 2, scope: !15912)
!15958 = distinct !DISubprogram(name: "resource_alignment_store", scope: !3, file: !3, line: 6380, type: !4877, scopeLine: 6382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15959 = !DILocation(line: 392, column: 53, scope: !13491, inlinedAt: !15960)
!15960 = distinct !DILocation(line: 6391, column: 2, scope: !15958)
!15961 = !DILocation(line: 352, column: 51, scope: !13495, inlinedAt: !15962)
!15962 = distinct !DILocation(line: 6388, column: 2, scope: !15958)
!15963 = !DILocalVariable(name: "bus", arg: 1, scope: !15958, file: !3, line: 6380, type: !3577)
!15964 = !DILocation(line: 6380, column: 58, scope: !15958)
!15965 = !DILocalVariable(name: "buf", arg: 2, scope: !15958, file: !3, line: 6381, type: !340)
!15966 = !DILocation(line: 6381, column: 18, scope: !15958)
!15967 = !DILocalVariable(name: "count", arg: 3, scope: !15958, file: !3, line: 6381, type: !445)
!15968 = !DILocation(line: 6381, column: 30, scope: !15958)
!15969 = !DILocalVariable(name: "param", scope: !15958, file: !3, line: 6383, type: !399)
!15970 = !DILocation(line: 6383, column: 8, scope: !15958)
!15971 = !DILocation(line: 6383, column: 25, scope: !15958)
!15972 = !DILocation(line: 6383, column: 30, scope: !15958)
!15973 = !DILocation(line: 6383, column: 16, scope: !15958)
!15974 = !DILocation(line: 6385, column: 7, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15958, file: !3, line: 6385, column: 6)
!15976 = !DILocation(line: 6385, column: 6, scope: !15958)
!15977 = !DILocation(line: 6386, column: 3, scope: !15975)
!15978 = !DILocation(line: 354, column: 2, scope: !13514, inlinedAt: !15962)
!15979 = !DILocation(line: 354, column: 2, scope: !13517, inlinedAt: !15962)
!15980 = !DILocation(line: 6389, column: 8, scope: !15958)
!15981 = !DILocation(line: 6389, column: 2, scope: !15958)
!15982 = !DILocation(line: 6390, column: 29, scope: !15958)
!15983 = !DILocation(line: 6390, column: 27, scope: !15958)
!15984 = !DILocation(line: 394, column: 2, scope: !13607, inlinedAt: !15960)
!15985 = !DILocation(line: 394, column: 2, scope: !13610, inlinedAt: !15960)
!15986 = !DILocation(line: 6392, column: 9, scope: !15958)
!15987 = !DILocation(line: 6392, column: 2, scope: !15958)
!15988 = !DILocation(line: 6393, column: 1, scope: !15958)
!15989 = distinct !DISubprogram(name: "pci_no_aer", scope: !4228, file: !4228, line: 672, type: !1997, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15990 = !DILocation(line: 672, column: 39, scope: !15989)
!15991 = distinct !DISubprogram(name: "pci_no_domains", scope: !3, file: !3, line: 6404, type: !1997, scopeLine: 6405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15992 = !DILocation(line: 6407, column: 24, scope: !15991)
!15993 = !DILocation(line: 6409, column: 1, scope: !15991)
!15994 = distinct !DISubprogram(name: "pcie_ecrc_get_policy", scope: !4228, file: !4228, line: 579, type: !15995, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!15995 = !DISubroutineType(types: !15996)
!15996 = !{null, !399}
!15997 = !DILocalVariable(name: "str", arg: 1, scope: !15994, file: !4228, line: 579, type: !399)
!15998 = !DILocation(line: 579, column: 47, scope: !15994)
!15999 = !DILocation(line: 579, column: 54, scope: !15994)
!16000 = distinct !DISubprogram(name: "pci_add_flags", scope: !6, file: !6, line: 967, type: !1990, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!16001 = !DILocalVariable(name: "flags", arg: 1, scope: !16000, file: !6, line: 967, type: !304)
!16002 = !DILocation(line: 967, column: 38, scope: !16000)
!16003 = !DILocation(line: 967, column: 60, scope: !16000)
!16004 = !DILocation(line: 967, column: 57, scope: !16000)
!16005 = !DILocation(line: 967, column: 67, scope: !16000)
